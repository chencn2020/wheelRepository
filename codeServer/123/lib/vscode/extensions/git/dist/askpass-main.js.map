{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"path\"","webpack:///./src/askpass-main.ts","webpack:///./src/ipc/ipcClient.ts","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///./node_modules/vscode-nls/lib/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","fs","nls","ipcClient_1","localize","loadMessageBundle","join","__dirname","fatal","err","console","error","process","exit","argv","length","env","output","request","host","substring","IPCClient","then","res","writeFileSync","setTimeout","catch","main","http","[object Object]","handlerName","this","ipcHandlePath","Error","opts","socketPath","path","method","Promise","e","req","statusCode","chunks","on","push","JSON","parse","Buffer","concat","toString","write","stringify","end","MessageFormat","LocalizeInfo","resolvedBundles","options","isPseudo","isDefined","isString","readJsonFileSync","filename","readFileSync","format","message","args","replace","match","rest","index","arg","replaced","String","createScopedLocalizeFunction","messages","_i","arguments","isNumber","stack","warn","cacheBundle","bundle","loadNlsBundleOrCreateFromI18n","header","bundlePath","result","cacheRoot","id","hash","useMemoryOnly","writeBundle","encoding","flag","file","Date","utimes","touch","code","SyntaxError","log","unlink","metaDataPath","languagePackLocation","translationsConfig","languagePack","contents","metaData","module_2","entry","translations","outDir","resultMessages","keys","messageKey","translatedMessage","undefined","createNLSBundle","loadDefaultNlsBundle","folder","module_1","createDefaultNlsBundle","loadNlsBundle","languagePackSupport","languagePackId","translationsConfigFile","candidate","root","locale","existsSync","lastIndexOf","findInTheBoxBundle","ext","extname","substr","messageFormat","both","headerFile","dirname","parent","tryFindMetaDataHeaderFile","nlsBundle","module_3","json","resolvedLanguage","cacheLanguageResolution","resolveLanguage","Array","isArray","is","comment","VSCODE_NLS_CONFIG","vscodeOptions","toLowerCase","isBoolean","_languagePackSupport","_cacheRoot","_languagePackId","_translationsConfigFile","_corruptedFile","writeFile","_a","initializeSettings","config"],"mappings":"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","file":"askpass-main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 192);\n","module.exports = require(\"path\");",null,"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as http from 'http';\n\nexport class IPCClient {\n\n\tprivate ipcHandlePath: string;\n\n\tconstructor(private handlerName: string) {\n\t\tconst ipcHandlePath = process.env['VSCODE_GIT_IPC_HANDLE'];\n\n\t\tif (!ipcHandlePath) {\n\t\t\tthrow new Error('Missing VSCODE_GIT_IPC_HANDLE');\n\t\t}\n\n\t\tthis.ipcHandlePath = ipcHandlePath;\n\t}\n\n\tcall(request: any): Promise<any> {\n\t\tconst opts: http.RequestOptions = {\n\t\t\tsocketPath: this.ipcHandlePath,\n\t\t\tpath: `/${this.handlerName}`,\n\t\t\tmethod: 'POST'\n\t\t};\n\n\t\treturn new Promise((c, e) => {\n\t\t\tconst req = http.request(opts, res => {\n\t\t\t\tif (res.statusCode !== 200) {\n\t\t\t\t\treturn e(new Error(`Bad status code: ${res.statusCode}`));\n\t\t\t\t}\n\n\t\t\t\tconst chunks: Buffer[] = [];\n\t\t\t\tres.on('data', d => chunks.push(d));\n\t\t\t\tres.on('end', () => c(JSON.parse(Buffer.concat(chunks).toString('utf8'))));\n\t\t\t});\n\n\t\t\treq.on('error', err => e(err));\n\t\t\treq.write(JSON.stringify(request));\n\t\t\treq.end();\n\t\t});\n\t}\n}\n","module.exports = require(\"fs\");","module.exports = require(\"http\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar fs = require(\"fs\");\r\nvar toString = Object.prototype.toString;\r\nfunction isDefined(value) {\r\n    return typeof value !== 'undefined';\r\n}\r\nfunction isNumber(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nfunction isString(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nfunction isBoolean(value) {\r\n    return value === true || value === false;\r\n}\r\nfunction readJsonFileSync(filename) {\r\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\r\n}\r\nvar MessageFormat;\r\n(function (MessageFormat) {\r\n    MessageFormat[\"file\"] = \"file\";\r\n    MessageFormat[\"bundle\"] = \"bundle\";\r\n    MessageFormat[\"both\"] = \"both\";\r\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\r\nvar LocalizeInfo;\r\n(function (LocalizeInfo) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\r\n    }\r\n    LocalizeInfo.is = is;\r\n})(LocalizeInfo || (LocalizeInfo = {}));\r\nvar resolvedLanguage;\r\nvar resolvedBundles;\r\nvar options;\r\nvar isPseudo;\r\nfunction initializeSettings() {\r\n    options = { locale: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\r\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\r\n        try {\r\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\r\n            if (isString(vscodeOptions.locale)) {\r\n                options.locale = vscodeOptions.locale.toLowerCase();\r\n            }\r\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\r\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\r\n            }\r\n            if (isString(vscodeOptions._cacheRoot)) {\r\n                options.cacheRoot = vscodeOptions._cacheRoot;\r\n            }\r\n            if (isString(vscodeOptions._languagePackId)) {\r\n                options.languagePackId = vscodeOptions._languagePackId;\r\n            }\r\n            if (isString(vscodeOptions._translationsConfigFile)) {\r\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\r\n                try {\r\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\r\n                }\r\n                catch (error) {\r\n                    // We can't read the translation config file. Mark the cache as corrupted.\r\n                    if (vscodeOptions._corruptedFile) {\r\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\r\n                            console.error(err);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing.\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    resolvedLanguage = undefined;\r\n    resolvedBundles = Object.create(null);\r\n}\r\ninitializeSettings();\r\nfunction supportsLanguagePack() {\r\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\r\n        && options.translationsConfig !== undefined;\r\n}\r\nfunction format(message, args) {\r\n    var result;\r\n    if (isPseudo) {\r\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\r\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\r\n    }\r\n    if (args.length === 0) {\r\n        result = message;\r\n    }\r\n    else {\r\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\r\n            var index = rest[0];\r\n            var arg = args[index];\r\n            var replaced = match;\r\n            if (typeof arg === 'string') {\r\n                replaced = arg;\r\n            }\r\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\r\n                replaced = String(arg);\r\n            }\r\n            return replaced;\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction createScopedLocalizeFunction(messages) {\r\n    return function (key, message) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (isNumber(key)) {\r\n            if (key >= messages.length) {\r\n                console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \" + new Error('').stack);\r\n                return;\r\n            }\r\n            return format(messages[key], args);\r\n        }\r\n        else {\r\n            if (isString(message)) {\r\n                console.warn(\"Message \" + message + \" didn't get externalized correctly.\");\r\n                return format(message, args);\r\n            }\r\n            else {\r\n                console.error(\"Broken localize call found. Stacktrace is\\n: \" + new Error('').stack);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction localize(key, message) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return format(message, args);\r\n}\r\nfunction resolveLanguage(file) {\r\n    var resolvedLanguage;\r\n    if (options.cacheLanguageResolution && resolvedLanguage) {\r\n        resolvedLanguage = resolvedLanguage;\r\n    }\r\n    else {\r\n        if (isPseudo || !options.locale) {\r\n            resolvedLanguage = '.nls.json';\r\n        }\r\n        else {\r\n            var locale = options.locale;\r\n            while (locale) {\r\n                var candidate = '.nls.' + locale + '.json';\r\n                if (fs.existsSync(file + candidate)) {\r\n                    resolvedLanguage = candidate;\r\n                    break;\r\n                }\r\n                else {\r\n                    var index = locale.lastIndexOf('-');\r\n                    if (index > 0) {\r\n                        locale = locale.substring(0, index);\r\n                    }\r\n                    else {\r\n                        resolvedLanguage = '.nls.json';\r\n                        locale = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (options.cacheLanguageResolution) {\r\n            resolvedLanguage = resolvedLanguage;\r\n        }\r\n    }\r\n    return file + resolvedLanguage;\r\n}\r\nfunction findInTheBoxBundle(root) {\r\n    var locale = options.locale;\r\n    while (locale) {\r\n        var candidate = path.join(root, \"nls.bundle.\" + locale + \".json\");\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n        else {\r\n            var index = locale.lastIndexOf('-');\r\n            if (index > 0) {\r\n                locale = locale.substring(0, index);\r\n            }\r\n            else {\r\n                locale = undefined;\r\n            }\r\n        }\r\n    }\r\n    // Test if we can reslove the default bundle.\r\n    if (locale === undefined) {\r\n        var candidate = path.join(root, 'nls.bundle.json');\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction mkdir(directory) {\r\n    try {\r\n        fs.mkdirSync(directory);\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'EEXIST') {\r\n            return;\r\n        }\r\n        else if (err.code === 'ENOENT') {\r\n            var parent = path.dirname(directory);\r\n            if (parent !== directory) {\r\n                mkdir(parent);\r\n                fs.mkdirSync(directory);\r\n            }\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nfunction createDefaultNlsBundle(folder) {\r\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_1 in metaData) {\r\n        var entry = metaData[module_1];\r\n        result[module_1] = entry.messages;\r\n    }\r\n    return result;\r\n}\r\nfunction createNLSBundle(header, metaDataPath) {\r\n    var languagePackLocation = options.translationsConfig[header.id];\r\n    if (!languagePackLocation) {\r\n        return undefined;\r\n    }\r\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\r\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_2 in metaData) {\r\n        var entry = metaData[module_2];\r\n        var translations = languagePack[header.outDir + \"/\" + module_2];\r\n        if (translations) {\r\n            var resultMessages = [];\r\n            for (var i = 0; i < entry.keys.length; i++) {\r\n                var messageKey = entry.keys[i];\r\n                var key = isString(messageKey) ? messageKey : messageKey.key;\r\n                var translatedMessage = translations[key];\r\n                if (translatedMessage === undefined) {\r\n                    translatedMessage = entry.messages[i];\r\n                }\r\n                resultMessages.push(translatedMessage);\r\n            }\r\n            result[module_2] = resultMessages;\r\n        }\r\n        else {\r\n            result[module_2] = entry.messages;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction touch(file) {\r\n    var d = new Date();\r\n    fs.utimes(file, d, d, function () {\r\n        // Do nothing. Ignore\r\n    });\r\n}\r\nfunction cacheBundle(key, bundle) {\r\n    resolvedBundles[key] = bundle;\r\n    return bundle;\r\n}\r\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\r\n    var result;\r\n    var bundle = path.join(options.cacheRoot, header.id + \"-\" + header.hash + \".json\");\r\n    var useMemoryOnly = false;\r\n    var writeBundle = false;\r\n    try {\r\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\r\n        touch(bundle);\r\n        return result;\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'ENOENT') {\r\n            writeBundle = true;\r\n        }\r\n        else if (err instanceof SyntaxError) {\r\n            // We have a syntax error. So no valid JSON. Use\r\n            console.log(\"Syntax error parsing message bundle: \" + err.message + \".\");\r\n            fs.unlink(bundle, function (err) {\r\n                if (err) {\r\n                    console.error(\"Deleting corrupted bundle \" + bundle + \" failed.\");\r\n                }\r\n            });\r\n            useMemoryOnly = true;\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    result = createNLSBundle(header, bundlePath);\r\n    if (!result || useMemoryOnly) {\r\n        return result;\r\n    }\r\n    if (writeBundle) {\r\n        try {\r\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\r\n        }\r\n        catch (err) {\r\n            if (err.code === 'EEXIST') {\r\n                return result;\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadDefaultNlsBundle(bundlePath) {\r\n    try {\r\n        return createDefaultNlsBundle(bundlePath);\r\n    }\r\n    catch (err) {\r\n        console.log(\"Generating default bundle from meta data failed.\", err);\r\n        return undefined;\r\n    }\r\n}\r\nfunction loadNlsBundle(header, bundlePath) {\r\n    var result;\r\n    // Core decided to use a language pack. Do the same in the extension\r\n    if (supportsLanguagePack()) {\r\n        try {\r\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Load or create bundle failed \", err);\r\n        }\r\n    }\r\n    if (!result) {\r\n        // No language pack found, but core is running in language pack mode\r\n        // Don't try to use old in the box bundles since the might be stale\r\n        // Fall right back to the default bundle.\r\n        if (options.languagePackSupport) {\r\n            return loadDefaultNlsBundle(bundlePath);\r\n        }\r\n        var candidate = findInTheBoxBundle(bundlePath);\r\n        if (candidate) {\r\n            try {\r\n                return readJsonFileSync(candidate);\r\n            }\r\n            catch (err) {\r\n                console.log(\"Loading in the box message bundle failed.\", err);\r\n            }\r\n        }\r\n        result = loadDefaultNlsBundle(bundlePath);\r\n    }\r\n    return result;\r\n}\r\nfunction tryFindMetaDataHeaderFile(file) {\r\n    var result;\r\n    var dirname = path.dirname(file);\r\n    while (true) {\r\n        result = path.join(dirname, 'nls.metadata.header.json');\r\n        if (fs.existsSync(result)) {\r\n            break;\r\n        }\r\n        var parent = path.dirname(dirname);\r\n        if (parent === dirname) {\r\n            result = undefined;\r\n            break;\r\n        }\r\n        else {\r\n            dirname = parent;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadMessageBundle(file) {\r\n    if (!file) {\r\n        // No file. We are in dev mode. Return the default\r\n        // localize function.\r\n        return localize;\r\n    }\r\n    // Remove extension since we load json files.\r\n    var ext = path.extname(file);\r\n    if (ext) {\r\n        file = file.substr(0, file.length - ext.length);\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\r\n        var headerFile = tryFindMetaDataHeaderFile(file);\r\n        if (headerFile) {\r\n            var bundlePath = path.dirname(headerFile);\r\n            var bundle = resolvedBundles[bundlePath];\r\n            if (bundle === undefined) {\r\n                try {\r\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\r\n                    try {\r\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\r\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\r\n                    }\r\n                    catch (err) {\r\n                        console.error('Failed to load nls bundle', err);\r\n                        bundle = cacheBundle(bundlePath, null);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.error('Failed to read header file', err);\r\n                    bundle = cacheBundle(bundlePath, null);\r\n                }\r\n            }\r\n            if (bundle) {\r\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\/g, '/');\r\n                var messages = bundle.nlsBundle[module_3];\r\n                if (messages === undefined) {\r\n                    console.error(\"Messages for file \" + file + \" not found. See console for details.\");\r\n                    return function () {\r\n                        return 'Messages not found.';\r\n                    };\r\n                }\r\n                return createScopedLocalizeFunction(messages);\r\n            }\r\n        }\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\r\n        // Try to load a single file bundle\r\n        try {\r\n            var json = readJsonFileSync(resolveLanguage(file));\r\n            if (Array.isArray(json)) {\r\n                return createScopedLocalizeFunction(json);\r\n            }\r\n            else {\r\n                if (isDefined(json.messages) && isDefined(json.keys)) {\r\n                    return createScopedLocalizeFunction(json.messages);\r\n                }\r\n                else {\r\n                    console.error(\"String bundle '\" + file + \"' uses an unsupported format.\");\r\n                    return function () {\r\n                        return 'File bundle has unsupported format. See console for details';\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.code !== 'ENOENT') {\r\n                console.error('Failed to load single file bundle', err);\r\n            }\r\n        }\r\n    }\r\n    console.error(\"Failed to load message bundle for file \" + file);\r\n    return function () {\r\n        return 'Failed to load message bundle. See console for details.';\r\n    };\r\n}\r\nexports.loadMessageBundle = loadMessageBundle;\r\nfunction config(opts) {\r\n    if (opts) {\r\n        if (isString(opts.locale)) {\r\n            options.locale = opts.locale.toLowerCase();\r\n            resolvedLanguage = undefined;\r\n            resolvedBundles = Object.create(null);\r\n        }\r\n        if (opts.messageFormat !== undefined) {\r\n            options.messageFormat = opts.messageFormat;\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    return loadMessageBundle;\r\n}\r\nexports.config = config;\r\n//# sourceMappingURL=main.js.map"],"sourceRoot":""}