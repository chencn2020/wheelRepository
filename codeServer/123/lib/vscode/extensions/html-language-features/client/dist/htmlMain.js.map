{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"vscode\"","webpack:///../node_modules/vscode-languageserver-protocol/lib/main.js","webpack:///../node_modules/diagnostic-channel/dist/src/channel.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/messages.js","webpack:///../node_modules/applicationinsights/out/Library/Logging.js","webpack:///external \"path\"","webpack:///../node_modules/vscode-languageclient/lib/client.js","webpack:///../node_modules/vscode-jsonrpc/lib/main.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/index.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/Domain.js","webpack:///../node_modules/applicationinsights/out/Library/Util.js","webpack:///external \"fs\"","webpack:///../node_modules/vscode-jsonrpc/lib/is.js","webpack:///external \"os\"","webpack:///../node_modules/vscode-languageclient/lib/utils/is.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/CorrelationContextManager.js","webpack:///../node_modules/applicationinsights/out/Library/RequestResponseHeaders.js","webpack:///../node_modules/vscode-jsonrpc/lib/events.js","webpack:///external \"url\"","webpack:///external \"child_process\"","webpack:///../node_modules/vscode-jsonrpc/lib/messageReader.js","webpack:///../node_modules/vscode-jsonrpc/lib/messageWriter.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/initialization.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/HttpDependencies.js","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///../node_modules/applicationinsights/out/Library/CorrelationIdManager.js","webpack:///external \"crypto\"","webpack:///external \"net\"","webpack:///../node_modules/vscode-languageclient/lib/protocolCompletionItem.js","webpack:///../node_modules/vscode-languageclient/lib/protocolCodeLens.js","webpack:///../node_modules/vscode-languageclient/lib/protocolDocumentLink.js","webpack:///../node_modules/vscode-languageclient/lib/utils/uuid.js","webpack:///../node_modules/vscode-languageclient/lib/progressPart.js","webpack:///../node_modules/diagnostic-channel/dist/src/patchRequire.js","webpack:///external \"module\"","webpack:///external \"events\"","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/index.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/Base.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/DataPointType.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/EventData.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/Performance.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/RequestParser.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/HttpRequests.js","webpack:///./src/htmlMain.ts","webpack:///../node_modules/vscode-nls/lib/main.js","webpack:///../node_modules/vscode-languageclient/lib/main.js","webpack:///../node_modules/semver/semver.js","webpack:///../node_modules/vscode-jsonrpc/lib/messages.js","webpack:///../node_modules/vscode-jsonrpc/lib/cancellation.js","webpack:///../node_modules/vscode-jsonrpc/lib/linkedMap.js","webpack:///../node_modules/vscode-jsonrpc/lib/pipeSupport.js","webpack:///../node_modules/vscode-jsonrpc/lib/socketSupport.js","webpack:///../node_modules/vscode-languageserver-types/lib/esm/main.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/utils/is.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.selectionRange.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.progress.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.callHierarchy.proposed.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.sematicTokens.proposed.js","webpack:///../node_modules/vscode-languageclient/lib/codeConverter.js","webpack:///../node_modules/vscode-languageclient/lib/protocolConverter.js","webpack:///../node_modules/vscode-languageclient/lib/utils/async.js","webpack:///../node_modules/vscode-languageclient/lib/colorProvider.js","webpack:///../node_modules/vscode-languageclient/lib/configuration.js","webpack:///../node_modules/vscode-languageclient/lib/implementation.js","webpack:///../node_modules/vscode-languageclient/lib/typeDefinition.js","webpack:///../node_modules/vscode-languageclient/lib/workspaceFolders.js","webpack:///../node_modules/vscode-languageclient/lib/foldingRange.js","webpack:///../node_modules/vscode-languageclient/lib/declaration.js","webpack:///../node_modules/vscode-languageclient/lib/selectionRange.js","webpack:///../node_modules/vscode-languageclient/lib/progress.js","webpack:///../node_modules/vscode-languageclient/lib/callHierarchy.proposed.js","webpack:///../node_modules/vscode-languageclient/lib/semanticTokens.proposed.js","webpack:///../node_modules/vscode-languageclient/lib/utils/processes.js","webpack:///./src/htmlEmptyTagsShared.ts","webpack:///./src/tagClosing.ts","webpack:///../node_modules/vscode-extension-telemetry/lib/telemetryReporter.js","webpack:///../node_modules/applicationinsights/out/applicationinsights.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/index.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/bunyan.pub.js","webpack:///../node_modules/diagnostic-channel/node_modules/semver/semver.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/console.pub.js","webpack:///external \"stream\"","webpack:///external \"console\"","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/mongodb-core.pub.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/mongodb.pub.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/mysql.pub.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src sync ^.*\\/lib\\/Connection$","webpack:///../node_modules/diagnostic-channel-publishers/dist/src sync ^.*\\/lib\\/Pool$","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/pg-pool.pub.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/pg.pub.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/redis.pub.js","webpack:///../node_modules/diagnostic-channel-publishers/dist/src/winston.pub.js","webpack:///../node_modules/zone.js/dist/zone-node.js","webpack:///external \"timers\"","webpack:///external \"_http_client\"","webpack:///../node_modules/applicationinsights/out/AutoCollection/Console.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/console.sub.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Constants.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/AvailabilityData.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/ContextTagKeys.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/Data.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/DataPoint.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/Envelope.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/ExceptionData.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/ExceptionDetails.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/MessageData.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/MetricData.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/PageViewData.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/RemoteDependencyData.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/RequestData.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/SeverityLevel.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/Generated/StackFrame.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/TelemetryTypes/index.js","webpack:///../node_modules/applicationinsights/out/Declarations/Contracts/TelemetryTypes/TelemetryType.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/bunyan.sub.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/winston.sub.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/Exceptions.js","webpack:///external \"constants\"","webpack:///../node_modules/applicationinsights/out/AutoCollection/HttpDependencyParser.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/mongodb.sub.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/mysql.sub.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/redis.sub.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/postgres.sub.js","webpack:///../node_modules/applicationinsights/out/AutoCollection/HttpRequestParser.js","webpack:///../node_modules/applicationinsights/out/Library/NodeClient.js","webpack:///../node_modules/applicationinsights/out/Library/TelemetryClient.js","webpack:///../node_modules/applicationinsights/out/Library/Config.js","webpack:///../node_modules/applicationinsights/out/Library/Context.js","webpack:///../node_modules/applicationinsights/out/Library/Channel.js","webpack:///../node_modules/applicationinsights/out/TelemetryProcessors/index.js","webpack:///../node_modules/applicationinsights/out/TelemetryProcessors/SamplingTelemetryProcessor.js","webpack:///../node_modules/applicationinsights/out/Library/Sender.js","webpack:///external \"zlib\"","webpack:///../node_modules/applicationinsights/out/Library/EnvelopeFactory.js","webpack:///./src/customData.ts","webpack:///./src/mirrorCursor.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__export","vscode_jsonrpc_1","ErrorCodes","ResponseError","CancellationToken","CancellationTokenSource","Disposable","Event","Emitter","Trace","TraceFormat","SetTraceNotification","LogTraceNotification","RequestType","RequestType0","NotificationType","NotificationType0","MessageReader","MessageWriter","ConnectionStrategy","StreamMessageReader","StreamMessageWriter","IPCMessageReader","IPCMessageWriter","createClientPipeTransport","createServerPipeTransport","generateRandomPipeName","createClientSocketTransport","createServerSocketTransport","ProgressType","callHierarchy","st","Proposed","CallHierarchyPrepareRequest","CallHierarchyIncomingCallsRequest","CallHierarchyOutgoingCallsRequest","SemanticTokensRequest","SemanticTokensEditsRequest","SemanticTokensRangeRequest","method","type","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","createProtocolConnection","reader","writer","logger","strategy","createMessageConnection","patchRequire_1","patchRequire_2","makePatchingRequire","trueFilter","publishing","ContextPreservingEventEmitter","this","version","subscribers","contextPreservationFunction","cb","knownPatches","currentlyPublishing","shouldPublish","listeners","some","_a","filter","publish","event","standardEvent_1","timestamp","Date","now","data","forEach","listener","e","subscribe","push","unsubscribe","index","length","splice","reset","_this","getOwnPropertyNames","prop","bindToContext","addContextPreservation","preserver","previousPreservationStack","registerMonkeyPatch","packageName","patcher","getPatchesObject","global","diagnosticsSource","channel","ProtocolRequestType0","[object Object]","super","ProtocolRequestType","ProtocolNotificationType","ProtocolNotificationType0","Logging","info","message","optionalParams","_i","arguments","enableDebug","console","TAG","warn","disableWarnings","vscode_1","vscode_languageserver_protocol_1","c2p","p2c","Is","async_1","UUID","progressPart_1","ConsoleLogger","error","log","ErrorAction","CloseAction","RevealOutputChannelOn","State","ClientState","DefaultErrorHandler","restarts","_error","_message","count","Continue","Shutdown","Restart","window","showErrorMessage","DoNotRestart","shift","SupportedSymbolKinds","SymbolKind","File","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","String","Number","Boolean","Array","Key","Null","EnumMember","Struct","Operator","TypeParameter","SupportedCompletionItemKinds","CompletionItemKind","Text","Unit","Value","Keyword","Snippet","Color","Reference","Folder","ensure","target","DynamicFeature","is","candidate","func","register","unregister","dispose","messages","DocumentNotifiactions","_client","_event","_type","_middleware","_createParams","_selectorFilter","_selectors","Map","selectors","textDocument","selector","languages","match","registerOptions","documentSelector","_listener","callback","set","id","values","sendNotification","notificationSent","_data","delete","size","undefined","clear","document","send","Error","DidOpenTextDocumentFeature","client","_syncedDocuments","workspace","onDidOpenTextDocument","DidOpenTextDocumentNotification","clientOptions","middleware","didOpen","code2ProtocolConverter","asOpenTextDocumentParams","textDocumentFilter","capabilities","dynamicRegistration","textDocumentSyncOptions","resolvedTextDocumentSync","openClose","generateUuid","textDocuments","uri","toString","has","DidCloseTextDocumentFeature","onDidCloseTextDocument","DidCloseTextDocumentNotification","didClose","asCloseTextDocumentParams","DidChangeTextDocumentFeature","_changeData","_forcingDelivery","DidChangeTextDocumentNotification","change","TextDocumentSyncKind","None","assign","syncKind","onDidChangeTextDocument","contentChanges","changeData","Incremental","params","asChangeTextDocumentParams","didChange","Full","_changeDelayer","forceDelivery","delayer","trigger","Delayer","WillSaveFeature","onWillSaveTextDocument","WillSaveTextDocumentNotification","willSave","willSaveEvent","asWillSaveTextDocumentParams","WillSaveWaitUntilFeature","WillSaveTextDocumentWaitUntilRequest","willSaveWaitUntil","sendRequest","then","edits","vEdits","protocol2CodeConverter","asTextEdits","waitUntil","DidSaveTextDocumentFeature","onDidSaveTextDocument","DidSaveTextDocumentNotification","didSave","asSaveTextDocumentParams","_includeText","save","includeText","FileSystemWatcherFeature","_notifyFileEvent","_watchers","DidChangeWatchedFilesNotification","_capabilities","_documentSelector","_method","isArray","watchers","disposeables","watcher","string","globPattern","watchCreate","watchChange","watchDelete","kind","WatchKind","Create","Change","Delete","fileSystemWatcher","createFileSystemWatcher","hookListeners","fileSystemWatchers","onDidCreate","resource","asUri","FileChangeType","Created","onDidChange","Changed","onDidDelete","Deleted","disposable","TextDocumentFeature","_registrations","registration","registerLanguageProvider","provider","capability","TextDocumentRegistrationOptions","StaticRegistrationOptions","hasId","boolean","WorkDoneProgressOptions","options","WorkspaceFeature","result","CompletionItemFeature","CompletionRequest","capabilites","completion","contextSupport","completionItem","snippetSupport","commitCharactersSupport","documentationFormat","MarkupKind","Markdown","PlainText","deprecatedSupport","preselectSupport","tagSupport","valueSet","CompletionItemTag","Deprecated","completionItemKind","getRegistrationOptions","completionProvider","triggerCharacters","provideCompletionItems","position","token","context","asCompletionParams","asCompletionResult","logFailedRequest","Promise","resolve","provideCompletionItem","resolveCompletionItem","resolveProvider","item","CompletionResolveRequest","asCompletionItem","registerCompletionItemProvider","HoverFeature","HoverRequest","hoverCapability","contentFormat","hoverProvider","provideHover","asTextDocumentPositionParams","asHover","registerHoverProvider","SignatureHelpFeature","SignatureHelpRequest","config","signatureInformation","parameterInformation","labelOffsetSupport","signatureHelpProvider","provideSignatureHelp","providerSignatureHelp","asSignatureHelpParams","asSignatureHelp","retriggerCharacters","registerSignatureHelpProvider","metaData","DefinitionFeature","DefinitionRequest","definitionSupport","linkSupport","definitionProvider","provideDefinition","asDefinitionResult","registerDefinitionProvider","ReferencesFeature","ReferencesRequest","referencesProvider","provideReferences","_providerReferences","asReferenceParams","asReferences","registerReferenceProvider","DocumentHighlightFeature","DocumentHighlightRequest","documentHighlightProvider","provideDocumentHighlights","_provideDocumentHighlights","asDocumentHighlights","registerDocumentHighlightProvider","DocumentSymbolFeature","DocumentSymbolRequest","symbolCapabilities","symbolKind","hierarchicalDocumentSymbolSupport","documentSymbolProvider","provideDocumentSymbols","_provideDocumentSymbols","asDocumentSymbolParams","element","DocumentSymbol","asDocumentSymbols","asSymbolInformations","registerDocumentSymbolProvider","WorkspaceSymbolFeature","WorkspaceSymbolRequest","workspaceSymbolProvider","workDoneProgress","_options","provideWorkspaceSymbols","query","registerWorkspaceSymbolProvider","CodeActionFeature","CodeActionRequest","cap","isPreferredSupport","codeActionLiteralSupport","codeActionKind","CodeActionKind","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","codeActionProvider","provideCodeActions","range","_provideCodeActions","asTextDocumentIdentifier","asRange","asCodeActionContext","Command","asCommand","asCodeAction","registerCodeActionsProvider","codeActionKinds","providedCodeActionKinds","asCodeActionKinds","CodeLensFeature","CodeLensRequest","codeLensProvider","provideCodeLenses","asCodeLensParams","asCodeLenses","resolveCodeLens","codeLens","CodeLensResolveRequest","asCodeLens","registerCodeLensProvider","DocumentFormattingFeature","DocumentFormattingRequest","documentFormattingProvider","provideDocumentFormattingEdits","asFormattingOptions","registerDocumentFormattingEditProvider","DocumentRangeFormattingFeature","DocumentRangeFormattingRequest","documentRangeFormattingProvider","provideDocumentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","DocumentOnTypeFormattingFeature","DocumentOnTypeFormattingRequest","documentOnTypeFormattingProvider","provideOnTypeFormattingEdits","ch","asPosition","moreTriggerCharacter","registerOnTypeFormattingEditProvider","firstTriggerCharacter","RenameFeature","RenameRequest","rename","prepareSupport","renameProvider","prepareProvider","provideRenameEdits","newName","asWorkspaceEdit","reject","prepareRename","PrepareRenameRequest","Range","placeholder","registerRenameProvider","DocumentLinkFeature","DocumentLinkRequest","documentLinkCapabilities","tooltipSupport","documentLinkProvider","provideDocumentLinks","asDocumentLinkParams","asDocumentLinks","resolveDocumentLink","link","DocumentLinkResolveRequest","asDocumentLink","registerDocumentLinkProvider","ConfigurationFeature","_listeners","DidChangeConfigurationNotification","section","synchronize","configurationSection","onDidChangeConfiguration","sections","affectsConfiguration","didChangeConfiguration","settings","extractSettingsInformation","getMiddleware","keys","ensurePath","path","current","obj","workspaceFolder","indexOf","getConfiguration","substr","split","ExecuteCommandFeature","_commands","ExecuteCommandRequest","executeCommandProvider","executeCommand","command","args","commands","registerCommand","MessageTransports","OnReady","_resolve","_reject","_used","isUsed","BaseLanguageClient","_traceFormat","_features","_method2Message","_dynamicFeatures","_id","_name","_clientOptions","diagnosticCollectionName","outputChannelName","revealOutputChannelOn","stdioEncoding","initializationOptions","initializationFailedHandler","progressOnInitialization","errorHandler","uriConverters","state","Initial","_connectionPromise","_resolvedConnection","_initializeResult","outputChannel","_outputChannel","_disposeOutputChannel","_traceOutputChannel","traceOutputChannel","_providers","_diagnostics","_fileEvents","_fileEventDelayer","_onReady","_onReadyCallbacks","_onStop","_telemetryEmitter","_stateChangeEmitter","_tracer","messageOrDataObject","logTrace","logObjectTrace","_c2p","createConverter","code2Protocol","_p2c","protocol2Code","registerBuiltinFeatures","_state","oldState","getPublicState","newState","fire","Running","Starting","Stopped","initializeResult","isConnectionActive","forceDocumentSync","handler","onRequest","onNotification","onProgress","sendProgress","onTelemetry","onDidChangeState","createOutputChannel","diagnostics","trace","_trace","onReady","resolveConnection","connection","traceFormat","responseError","code","stack","appendLine","toLocaleTimeString","data2String","Info","showNotificationMessage","Warn","showInformationMessage","show","isLSPMessage","append","JSON","stringify","Stopping","createDiagnosticCollection","onLogMessage","MessageType","Warning","onShowMessage","showWarningMessage","ShowMessageRequest","messageFunc","actions","listen","initialize","StartFailed","needsStop","stop","createConnection","refreshTrace","initOption","rootPath","fsPath","_clientGetRootPath","initParams","processId","process","pid","clientInfo","rootUri","Uri","file","computeClientCapabilities","workspaceFolders","fillInitializeParams","part","ProgressPart","workDoneToken","doInitialize","done","cancel","number","textDocumentSync","onDiagnostics","handleDiagnostics","RegistrationRequest","handleRegistrationRequest","UnregistrationRequest","handleUnregistrationRequest","ApplyWorkspaceEditRequest","handleApplyWorkspaceEdit","InitializedNotification","hookFileEvents","hookConfigurationChanged","initializeFeatures","retry","title","folders","folder","scheme","cleanUp","shutdown","exit","cleanUpChannel","didChangeWatchedFile","didChangeWatchedFiles","changes","workSpaceMiddleware","asDiagnostics","setDiagnostics","handleConnectionError","closeHandler","handleConnectionClosed","createMessageTransports","transports","input","output","onError","onClose","tracer","sendNotificationOrTraceOptions","defaultTraceOptions","InitializeRequest","ShutdownRequest","ExitNotification","LogMessageNotification","ShowMessageNotification","TelemetryEventNotification","didOpenTextDocument","didChangeTextDocument","didCloseTextDocument","didSaveTextDocument","PublishDiagnosticsNotification","action","closed","start","Off","traceConfig","fromString","_connection","fileEvents","array","registerRaw","features","feature","registerFeature","request","notifyFileEvent","applyEdit","workspaceEdit","documentChanges","resourceOperations","ResourceOperationKind","Rename","failureHandling","FailureHandlingKind","TextOnlyTransactional","relatedInformation","versionSupport","DiagnosticTag","Unnecessary","fillClientCapabilities","registrations","unregistration","unregisterations","edit","openTextDocuments","versionMismatch","TextDocumentEdit","applied","asPromise","RequestCancelled","ContentModified","messages_1","RequestType1","RequestType2","RequestType3","RequestType4","RequestType5","RequestType6","RequestType7","RequestType8","RequestType9","NotificationType1","NotificationType2","NotificationType3","NotificationType4","NotificationType5","NotificationType6","NotificationType7","NotificationType8","NotificationType9","messageReader_1","SocketMessageReader","messageWriter_1","SocketMessageWriter","events_1","cancellation_1","linkedMap_1","CancelNotification","ProgressNotification","ConnectionErrors","ConnectionState","NullLogger","freeze","toLowerCase","Messages","Verbose","ConnectionError","setPrototypeOf","_createMessageConnection","messageReader","messageWriter","sequenceNumber","notificationSquenceNumber","unknownResponseSquenceNumber","timer","starRequestHandler","requestHandlers","starNotificationHandler","notificationHandlers","progressHandlers","messageQueue","LinkedMap","responsePromises","requestTokens","New","errorEmitter","closeEmitter","unhandledNotificationEmitter","unhandledProgressEmitter","disposeEmitter","createRequestQueueKey","addMessageToQueue","queue","isRequestMessage","isResponseMessage","createResponseQueueKey","cancelUndispatched","isListening","Listening","isClosed","Closed","isDisposed","Disposed","triggerMessageQueue","setImmediate","requestMessage","reply","resultOrError","startTime","jsonrpc","toJson","traceSendingResponse","write","replyError","logLSPMessage","traceReceivedRequest","requestHandler","cancellationSource","tokenKey","handlerResult","promise","numberOfParams","InternalError","replySuccess","MethodNotFound","handleRequest","isNotificationMessage","notificationHandler","source","traceReceivedNotification","handleNotification","responseMessage","responsePromise","timerStart","traceReceivedResponse","handleResponse","responseHandler","handleInvalidMessage","processMessageQueue","toCancel","response","lspMessage","throwIfClosedOrDisposed","undefinedToNull","param","computeMessageParams","messageParams","notificationMessage","traceSendingNotification","onUnhandledProgress","throwIfNotListening","last","slice","map","traceSendingRequest","MessageWriteError","onCancellationRequested","_value","_sendNotification","onUnhandledNotification","onDispose","AlreadyListening","throwIfListening","inspect","verbose","read","isMessageReader","end","isMessageWriter","Domain","__assign","http","https","url","constants","RequestResponseHeaders","Util","getCookie","cookie","cookieName","cookies","trim","substring","str","replace","int32ArrayToBase64","toChar","v","fromCharCode","x","join","Buffer","from","random32","Math","random","randomu32","w3cTraceId","tmp","hexValues","oct","a","clockSequenceHi","isError","isPrimitive","propType","isDate","msToTimeSpan","totalms","isNaN","sec","toFixed","min","floor","hour","days","extractError","err","looseError","extractObject","origProperty","toJSON","validateStringMap","field","stringTarget","constructor","MAX_PROPERTY_LENGTH","canIncludeCorrelationHeader","requestUrl","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","parse","hostname","getCorrelationContextTarget","contextHeaders","headers","requestContextHeader","keyValues","keyValue","makeRequest","requestOptions","requestCallback","requestUrlParsed","host","port","pathname","proxyUrl","protocol","proxyHttpsUrl","proxyHttpUrl","proxyUrlParsed","Host","isHttps","httpsAgent","agent","httpAgent","tlsRestrictedAgent","Agent","secureOptions","SSL_OP_NO_SSLv2","SSL_OP_NO_SSLv3","SSL_OP_NO_TLSv1","SSL_OP_NO_TLSv1_1","stringArray","every","elem","thenable","typedArray","check","resolved","DiagChannel","CorrelationContextManager","getCurrentContext","enabled","Zone","generateContextObject","operationId","parentId","operationName","correlationContextHeader","operation","customProperties","CustomPropertiesImpl","runWithContext","fn","fork","properties","run","wrapCallback","wrap","enable","isNodeVersionCompatible","hasEverEnabled","registerContextPreservation","patchError","patchTimers","disable","nodeVer","versions","node","parseInt","methodNames","methodName","orig","ret","apply","handleId","AppInsightsAsyncCorrelatedErrorWrapper","stackRewrite","prepareStackTrace","stackTrace","foundOne","fileName","getFileName","max","stackFrames","startIndex","props","concat","propertyName","hiddenPropertyName","writable","getOwnPropertyDescriptor","header","addHeaderData","keyvals","keyval","parts","serializeToHeader","getProperty","setProperty","val","bannedCharacters","requestContextSourceKey","requestContextTargetKey","requestIdHeader","parentIdHeader","rootIdHeader","_disposable","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","callbacks","contexts","thisArgs","disposables","onFirstListenerAdd","isEmpty","add","_noop","onLastListenerRemove","invoke","DefaultSize","CR","LF","CRLF","MessageBuffer","encoding","buffer","allocUnsafe","chunk","toAppend","bufferLen","byteLength","copy","newSize","ceil","nextStart","numberOfBytes","onPartialMessage","AbstractMessageReader","partialMessageEmitter","asError","readable","_partialMessageTimeout","partialMessageTimeout","timeout","nextMessageLength","messageToken","partialMessageTimer","on","onData","fireError","fireClose","tryReadHeaders","contentLength","msg","tryReadContent","setPartialMessageTimer","clearPartialMessageTimer","json","clearTimeout","setTimeout","firePartialMessage","waitingTime","eventEmitter","socket","ContentLength","AbstractMessageWriter","errorCount","sending","doWriteMessage","destroy","handleError","IsInitialized","env","publishers","unpatchedModules","bunyan","mongodb","mongodbCore","mysql","redis","pg","pgPool","winston","mod","HttpDependencyParser","CorrelationContextManager_1","AutoCollectHttpDependencies","INSTANCE","isEnabled","_isEnabled","_isInitialized","_initialize","isInitialized","originalRequest","originalHttpsRequest","clientRequestPatch","shouldCollect","disableCollectionRequestOption","alreadyAutoCollectedFlag","trackRequest","requestArgs","telemetry","requestParser","currentContext","uniqueRequestId","requestNumber","getUrl","getHeader","setHeader","correlationId","correlationHeader","components","key_1","onResponse","dependencyTelemetry","getDependencyTelemetry","contextObjects","trackDependency","CorrelationIdManager","queryCorrelationId","appIdUrlString","profileQueryEndpoint","instrumentationKey","completedLookups","pendingLookups","fetchAppId","disableAppInsightsAutoCollection","req","res","statusCode","appId_1","setEncoding","correlationIdPrefix","correlationIdRetryIntervalMs","cancelCorrelationIdQuery","generateRequestId","suffix","currentRootId","appendSuffix","generateRootId","getRootId","endIndex","delimiter","requestIdMaxLength","trimPosition","default","CompletionItem","label","CodeLens","DocumentLink","ValueUUID","other","asHex","V4UUID","_randomHex","_oneOf","_timeHighBits","_chars","v4","empty","_UUIDPattern","isUUID","_token","_reported","WorkDoneProgress","begin","report","location","cancellable","ProgressLocation","Notification","Window","withProgress","async","progress","cancellationToken","_progress","_infinite","percentage","_cancellationToken","WorkDoneProgressCancelNotification","delta","increment","semver","moduleModule","nativeModules","binding","originalRequire","patchedModules","originalModule","modulePath","_resolveFilename","moduleVersion","prereleaseTagIndex","modifiedModule","modulePatcher","satisfies","versionSpecifier","patch","AvailabilityData","Base","ContextTagKeys","Data","DataPoint","DataPointType","Envelope","EventData","ExceptionData","ExceptionDetails","MessageData","MetricData","PageViewData","RemoteDependencyData","RequestData","SeverityLevel","StackFrame","__extends","extendStatics","__proto__","b","__","_super","ver","measurements","os","AutoCollectPerformance","_handle","_lastCpus","cpus","_lastRequests","totalRequestCount","_totalRequestCount","totalFailedRequestCount","_totalFailedRequestCount","time","cpuUsage","_lastAppCpuUsage","_lastHrtime","hrtime","setInterval","trackPerformance","unref","clearInterval","countRequest","once","_lastRequestExecutionTime","_trackCpu","_trackMemory","_trackNetwork","totalUser","totalSys","totalNice","totalIdle","totalIrq","cpu","lastCpu","times","model","speed","lastTimes","user","sys","nice","idle","irq","appCpuPercent","appCpuUsage","totalApp","system","combinedTotal","trackMetric","freeMem","freemem","usedMem","memoryUsage","rss","lastRequests","requests","intervalRequests","elapsedMs","elapsedSeconds","requestsPerSec","RequestParser","_setStatus","status","endTime","duration","_isSuccess","HttpRequestParser","AutoCollectHttpRequests","_isAutoCorrelating","useAutoCorrelation","isAutoCorrelating","_generateCorrelationContext","getOperationId","tags","getRequestId","getOperationName","getCorrelationContextHeader","wrapOnRequestHandler","requestParser_1","correlationContext","wrapServerEventHandler","server","originalAddListener","addListener","eventType","eventHandler","originalHttpServer","createServer","originalHttpsServer","trackRequestSync","addResponseCorrelationIdHeader","endRequest","_requestParser","getOperationParentId","headersSent","ellapsedMilliseconds","requestTelemetry","getRequestTelemetry","tagOverrides","getRequestTags","fs","localize","loadMessageBundle","__dirname","vscode_languageclient_1","htmlEmptyTagsShared_1","tagClosing_1","vscode_extension_telemetry_1","customData_1","mirrorCursor_1","TagCloseRequest","MatchingTagPositionRequest","SemanticTokenRequest","SemanticTokenLegendRequest","telemetryReporter","readJSONFile","readFileSync","activate","toDispose","subscriptions","packageInfo","extensionPackage","asAbsolutePath","aiKey","getPackageInfo","serverMain","main","serverModule","serverOptions","transport","TransportKind","ipc","debug","execArgv","rangeFormatting","dataPaths","getCustomDataPathsInAllWorkspaces","getCustomDataPathsFromAllExtensions","embeddedLanguages","css","javascript","provideFormatter","next","updateRanges","isAfter","isBeforeOrEqual","inserting","replacing","updateProposals","items","isThenable","LanguageClient","registerProposedFeatures","updateFormatterRegistration","formatEnabled","activateTagClosing","html","handlebars","activateMirrorCursor","sendTelemetryEvent","legend","doc","Uint32Array","ranges","registerDocumentSemanticTokensProvider","SemanticTokensLegend","types","modifiers","setLanguageConfiguration","indentationRules","increaseIndentPattern","decreaseIndentPattern","wordPattern","onEnterRules","beforeText","EMPTY_ELEMENTS","afterText","indentAction","IndentAction","IndentOutdent","Indent","regionCompletionRegExpr","htmlSnippetCompletionRegExpr","pos","results","lineUntilPos","getText","Position","line","beginProposal","insertText","SnippetString","documentation","filterText","sortText","endProposal","match2","snippetProposal","content","deactivate","MessageFormat","BundleFormat","LocalizeInfo","resolvedBundles","isPseudo","isDefined","isString","readJsonFileSync","filename","format","rest","arg","replacement","createScopedLocalizeFunction","isNumber","cacheBundle","bundle","loadNlsBundleOrCreateFromI18n","bundlePath","cacheRoot","hash","useMemoryOnly","writeBundle","flag","utimes","touch","SyntaxError","unlink","metaDataPath","languagePackLocation","translationsConfig","languagePack","contents","module_2","entry","translations","outDir","resultMessages","messageKey","translatedMessage","createNLSBundle","writeFileSync","loadDefaultNlsBundle","module_1","createDefaultNlsBundle","loadNlsBundle","languagePackSupport","languagePackId","translationsConfigFile","root","language","existsSync","lastIndexOf","findInTheBoxBundle","ext","extname","messageFormat","both","headerFile","dirname","parent","tryFindMetaDataHeaderFile","nlsBundle","module_3","resolvedLanguage","cacheLanguageResolution","locale","resolveLanguage","comment","VSCODE_NLS_CONFIG","vscodeOptions","availableLanguages","isBoolean","_languagePackSupport","_cacheRoot","_languagePackId","_translationsConfigFile","_corruptedFile","writeFile","initializeSettings","opts","bundleFormat","standalone","cp","SemVer","client_1","colorProvider_1","configuration_1","implementation_1","typeDefinition_1","workspaceFolders_1","foldingRange_1","declaration_1","selectionRange_1","progress_1","callHierarchy_proposed_1","semanticTokens_proposed_1","processes_1","REQUIRED_VSCODE_VERSION","Executable","Transport","NodeModule","StreamInfo","ChildProcessInfo","ProposedFeatures","isSocket","detached","arg1","arg2","arg3","arg4","arg5","forceDebug","_serverOptions","_forceDebug","checkVersion","codeVersion","prerelease","_serverProcess","toCheck","_isDetached","checkProcessDied","childProcess","kill","terminate","getEnvironment","debugStartWith","debugEquals","assertStdio","stdin","stdout","stderr","runDebug","startsWith","startedInDebugMode","_getServerWorkingDir","serverWorkingDir","stdio","runtime","pipeName","pipe","cwd","silent","sp","onConnected","execOptions","serverProcess","spawn","registerFeatures","createAll","TypeDefinitionFeature","ImplementationFeature","ColorProviderFeature","WorkspaceFoldersFeature","FoldingRangeFeature","DeclarationFeature","SelectionRangeFeature","ProgressFeature","_mainGetRootPath","lstat","stats","isDirectory","SettingMonitor","_setting","primary","needsStart","CallHierarchyFeature","SemanticTokensFeature","NODE_DEBUG","unshift","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","re","src","tokens","R","tok","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","includePrerelease","er","TypeError","raw","major","minor","num","build","valid","clean","compare","compareMain","comparePre","compareIdentifiers","compareBuild","inc","release","identifier","diff","version1","version2","eq","v1","v2","prefix","defaultResult","numeric","anum","bnum","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","ANY","operator","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","sort","list","rsort","parseRange","isSatisfiable","comparators","remainingComparators","testComparator","pop","otherComparator","intersects","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","comparator","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","_","M","pr","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","thisComparators","rangeComparators","thisComparator","rangeComparator","toComparators","maxSatisfying","maxSV","rangeObj","minSatisfying","minSV","minVersion","minver","compver","validRange","ltr","gtr","parsed","r1","r2","coerce","rtl","exec","lastIndex","ParseError","InvalidRequest","InvalidParams","serverErrorStart","serverErrorEnd","ServerNotInitialized","UnknownErrorCode","MessageReadError","AbstractMessageType","_numberOfParams","isCancellationRequested","Cancelled","shortcutEvent","handle","MutableToken","_isCancelled","_emitter","Touch","First","Last","_map","_head","_tail","_size","previous","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","path_1","os_1","crypto_1","net_1","randomSuffix","randomBytes","platform","tmpdir","connectResolve","connected","close","removeListener","Location","LocationLink","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","TextEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","__webpack_exports__","TextDocument","character","objectLiteral","one","two","three","four","defined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","textEdit","additionalTextEdits","startLine","endLine","startCharacter","endCharacter","Information","Hint","severity","newText","insert","del","VersionedTextDocumentIdentifier","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","TextDocumentIdentifier","TextDocumentItem","MarkupContent","InsertTextFormat","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolTag","SymbolInformation","CodeActionContext","CodeAction","FormattingOptions","SelectionRange","TextEditChangeImpl","all","WorkspaceChange","_textEditChanges","_workspaceEdit","textEditChange","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","languageId","text","isIncomplete","fromPlainText","plainText","parameters","Read","Write","containerName","detail","selectionRange","children","deprecated","SourceFixAll","only","commandOrEdit","isPreferred","tabSize","insertSpaces","EOL","FullTextDocument","lineCount","positionAt","offsetAt","applyEdits","sortedEdits","mergeSort","left","right","leftIdx","rightIdx","lastModifiedOffset","startOffset","endOffset","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","charAt","offset","mid","lineOffset","nextLineOffset","protocol_implementation_1","ImplementationRequest","protocol_typeDefinition_1","TypeDefinitionRequest","protocol_workspaceFolders_1","WorkspaceFoldersRequest","DidChangeWorkspaceFoldersNotification","protocol_configuration_1","ConfigurationRequest","protocol_colorProvider_1","DocumentColorRequest","ColorPresentationRequest","protocol_foldingRange_1","FoldingRangeRequest","protocol_declaration_1","DeclarationRequest","protocol_selectionRange_1","SelectionRangeRequest","protocol_progress_1","DocumentFilter","DocumentSelector","WorkDoneProgressCreateRequest","pattern","Abort","Transactional","Undo","hasWorkDoneProgress","InitializeError","unknownProtocolVersion","Log","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","CompletionTriggerKind","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","resultType","SignatureHelpTriggerKind","ContentChange","resultId","proto","protocolCompletionItem_1","protocolCodeLens_1","protocolDocumentLink_1","uriConverter","_uriConverter","asVersionedTextDocumentIdentifier","asParameterInformation","asSignatureInformation","asParameterInformations","signatures","asSignatureInformations","activeSignature","activeParameter","asWorkerPosition","isInsertReplace","asLocation","asDiagnosticSeverity","asDiagnosticTag","tag","asRelatedInformation","asDiagnostic","converted","asDiagnosticTags","asRelatedInformations","asCompletionItemTag","asTextEdit","asSymbolTag","isTextDocument","isTextDocumentChangeEvent","rangeLength","includeContent","reason","asTextDocumentSaveReason","triggerKind","asCompletionTriggerKind","triggerCharacter","isRetrigger","Invoke","asSignatureHelpTriggerKind","activeSignatureHelp","asPositions","protocolItem","asDocumentation","insertTextFormat","fromEdit","fillPrimaryInsertText","original","asCompletionItemKind","originalItemKind","commitCharacters","preselect","asCompletionItemTags","asSymbolKind","asSymbolTags","includeDeclaration","tooltip","ls","CodeBlock","diagnostic","asDiagnosticRelatedInformation","information","MarkdownString","asCompletionInsertText","itemKind","asLocationLink","asLocationResult","asDocumentHighlight","asDocumentHighlightKind","asSymbolInformation","asDocumentSymbol","child","kindMapping","asCodeActionKind","asColor","asColorInformation","ci","asColorPresentation","presentation","asFoldingRangeKind","Comment","Imports","Region","asFoldingRange","asSelectionRange","asRanges","hover","appendCodeblock","appendMarkdown","appendText","asHoverContent","SignatureHelp","asDeclarationResult","asCommands","asFoldingRanges","foldingRanges","asColorInformations","colorInformation","asColorPresentations","colorPresentations","asSelectionRanges","selectionRanges","defaultDelay","completionPromise","onSuccess","task","delay","cancelTimeout","getRegistration","colorProvider","provideColorPresentations","requestParams","provideDocumentColors","registerColorProvider","configuration","scopeUri","implementationSupport","implementationProvider","provideImplementation","registerImplementationProvider","typeDefinitionSupport","typeDefinitionProvider","provideTypeDefinition","registerTypeDefinitionProvider","access","arrayDiff","initializeWithFolders","asProtocol","currentWorkspaceFolders","_initialFolders","removed","added","doSendEvent","addedFolders","removedFolders","onDidChangeWorkspaceFolders","didChangeWorkspaceFolders","sendInitialEvent","rangeLimit","lineFoldingOnly","foldingRangeProvider","provideFoldingRanges","registerFoldingRangeProvider","declarationSupport","declarationProvider","provideDeclaration","registerDeclarationProvider","selectionRangeProvider","provideSelectionRanges","positions","registerSelectionRangeProvider","protocol2code","code2protocol","asCallHierarchyItem","converter","CallHierarchyItem","asCallHierarchyIncomingCall","CallHierarchyIncomingCall","fromRanges","asCallHierarchyOutgoingCall","CallHierarchyOutgoingCall","asCallHierarchyItems","asCallHierarchyIncomingCalls","asCallHierarchyOutgoingCalls","CallHierarchyProvider","prepareCallHierarchy","provideCallHierarchyIncomingCalls","provideCallHierarchyOutgoingCalls","provideCallHierarchyOutgingCalls","callHierarchyProvider","registerCallHierarchyProvider","vscode","asSemanticTokensEdit","SemanticTokensEdit","deleteCount","asSemanticTokens","asSemanticTokensEdits","SemanticTokensEdits","asLegend","tokenTypes","keyword","regexp","namespace","struct","class","interface","enum","typeParameter","function","member","macro","variable","parameter","tokenModifiers","declaration","static","abstract","readonly","semanticTokensProvider","documentProvider","provideDocumentSemanticTokens","provideDocumentSemanticTokensEdits","previousResultId","rangeProvider","provideDocumentRangeSemanticTokens","registerDocumentRangeSemanticTokensProvider","isWindows","isMacintosh","isLinux","execFileSync","cmd","spawnSync","tagProvider","supportedLanguages","configName","activeDocument","activeTextEditor","lastChange","lastCharacter","rangeStart","activeEditor","selections","active","isEqual","insertSnippet","updateEnabledState","onDidChangeActiveTextEditor","editor","appInsights","TelemetryReporter","extensionId","extensionVersion","userOptIn","logFilePath","logStream","createWriteStream","flags","autoClose","updateUserOptIn","configListener","TELEMETRY_CONFIG_ID","TELEMETRY_CONFIG_ENABLED_ID","createAppInsightsClient","defaultClient","appInsightsClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","commonProperties","getCommonProperties","userId","machineId","sessionId","endpointUrl","eventName","trackEvent","flushEventsToLogger","flushEventsToAI","flush","AutoCollectConsole","AutoCollectExceptions","Contracts","_console","_exceptions","_performance","_serverRequests","_clientRequests","_isConsole","_isConsoleLog","_isExceptions","_isPerformance","_isRequests","_isDependencies","_isDiskRetry","_isCorrelating","_diskRetryInterval","_diskRetryMaxBytes","_isStarted","Configuration","getCorrelationContext","wrapWithCorrelationContext","collectConsoleLog","resendInterval","maxBytesOnDisk","setInternalLogging","enableDebugLogging","enableWarningLogging","consolePub","diagnostic_channel_1","originalBunyan","originalEmit","_emit","rec","noemit","level","stream_1","originalConsole","aiLoggingOutStream","Writable","aiLoggingErrStream","aiLoggingConsole","Console","_loop_1","originalMethod","consoleMethods_1","mongoCore2","originalMongoCore","originalConnect","Server","connect","originalWrite","pool","cbidx","originalLogout","logout","mongo2","originalMongo","instrument","operationIdGenerator","eventMap","requestId","startedData","succeeded","originalMysql","originalMysqlPath","patchObjectFunction","cbWrapper","originalFunc","resultContainer","patchClassMemberFunction","classObject","connectionClass","hrDuration","callbackArgs","poolClass","webpackEmptyContext","postgresPool1","originalPgPool","postgres6","originalPg","originalPgPath","originalClientQuery","Client","diagnosticOriginalFunc","queryResult","database","connectionParameters","patchCallback","trackingCallback","rowCount","EventEmitter","emit","preparable","plan","originalRedis","originalSend","RedisClient","internal_send_command","commandObj","cb_1","pubsubBound","address_1","address","startTime_1","originalWinston","curLevels","originalLog","Logger","loggingFilter","meta","levelKind","npm","levels","syslog","filters","f","factory","zoneSpec","_properties","_parent","_zoneDelegate","ZoneDelegate","assertZonePatched","ZoneAwarePromise","_currentZoneFrame","zone","_currentTask","getZoneWith","_callback","intercept","runGuarded","applyThis","applyArgs","ZoneFrame","runTask","runCount","previousTask","isPeriodic","cancelFn","invokeTask","scheduleMicroTask","customSchedule","scheduleTask","ZoneTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","__symbol__","parentDelegate","_taskCounts","microTask","macroTask","eventTask","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","onScheduleTask","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","onInvokeTask","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","onCancelTask","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","onHasTask","_hasTaskDlgt","_hasTaskCurrZone","targetZone","scheduleFn","scheduleQueueDrain","_microTaskQueue","_updateTaskCount","hasTask","counts","prev","self","_numberOfNestedTaskFrames","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_isDrainingMicrotaskQueue","_uncaughtPromiseErrors","consoleError","rejection","uncaughtPromiseError","forwardResolution","forwardRejection","symbolState","symbolValue","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","resolvePromise","clearRejectedNoCatch","scheduleResolveOrReject","error_1","currentTask","chainPromise","onFulfilled","onRejected","delegate","executor","race","rej","onResolve","onReject","values_1","resolvedValues","values_2","catch","FrameType","NativePromise","patchThen","NativePromiseProtototype","NativePromiseThen","nativePromise","fetchPromise","zoneAwareFrame","NativeError","blackListedStackFrames","ZoneAwareError","createProperty","error_2","createMethodProperty","errorMethod","errorProperties","pKeys","createErrorProperties","getErrorPropertiesForPrototype","newProps","cKeys","cKey","originalStack","frames_1","zoneFrame","frame","frameType","blackList","transition","zoneAwareStack","defineProperties","getPrototypeOf","stackTraceLimit","targetObject","constructorOpt","captureStackTrace","structuredStackTrace","getFunctionName","detectZone","parentZoneDelegate","currentZone","parentZD","frames_2","runFrame","runGuardedFrame","runTaskFrame","fnName","zoneSymbol","_global$1","EVENT_TASKS","findExistingRegisteredTask","capture","eventTasks","useCapturing","defaultListenerMetaCreator","invokeAddFunc","addFnSymbol","invokeRemoveFunc","removeFnSymbol","makeZoneAwareAddListener","addFnName","removeFnName","useCapturingParam","allowDuplicates","isPrepend","metaCreator","defaultUseCapturing","scheduleEventListener","attachRegisteredEvent","cancelEventListener","handleEvent","validZoneHandler","makeZoneAwareRemoveListener","symbol","patchMethod","patchFn","delegateName","createNamedFn","events","callAndReturnFirstParam","EE_ADD_LISTENER","EE_PREPEND_LISTENER","EE_REMOVE_LISTENER","EE_REMOVE_ALL_LISTENER","EE_LISTENERS","EE_ON","zoneAwareAddListener$1","zoneAwarePrependListener","zoneAwareRemoveListener$1","zoneAwareRemoveAllListeners","findAllExistingRegisteredTasks","makeZoneAwareRemoveAllListeners","zoneAwareListeners","makeZoneAwareListeners","patchEventEmitterMethods","patchTimer","setName","cancelName","nameSuffix","setNative","clearNative","tasksByHandleId","clearTask","ref","funcName","callbackIndex","patchMacroTask","crypto","httpClient","_global","timers","patchNextTick","nativeRandomBytes_1","nativePbkdf2_1","pbkdf2","ClientRequest","ClientRequest_1","_methodNames","Contracts_1","clients","subscriber","trackTrace","Generated_1","RemoteDependencyDataConstants","TYPE_HTTP","TYPE_AI","domainSupportsProperties","domain","applicationVersion","deviceId","deviceLocale","deviceModel","deviceOEMName","deviceOSVersion","deviceType","locationIp","operationParentId","operationSyntheticSource","operationCorrelationVector","sessionIsFirst","userAccountId","userAuthUserId","cloudRole","cloudRoleInstance","internalSdkVersion","internalAgentVersion","internalNodeName","Measurement","sampleRate","exceptions","hasFullStack","parsedStack","metrics","success","TelemetryType","telemetryTypeToBaseType","Exception","Metric","Request","Dependency","baseTypeToTelemetryType","baseType","bunyanToAILevelMap","10","20","30","40","50","60","Critical","AIlevel","winstonToAILevelMap","og","emerg","alert","crit","warning","notice","silly","unknown","_exceptionListenerHandle","reThrow","trackException","exception","isAppCrashing","_rejectionListenerHandle","UNCAUGHT_EXCEPTION_HANDLER_NAME","UNHANDLED_REJECTION_HANDLER_NAME","_getUrlFromRequestOptions","baseTelemetry","dependencyId","urlObject","search","dependencyName","toUpperCase","remoteDependencyType","remoteDependencyTarget","resultCode","dependencyTypeName","originalOptions_1","parsedQuery","dbName","databaseName","commandName","queryObj","sqlString","sql","connectionConfig","socketPath","q","conn","_getAbsoluteUrl","socketRemoteAddress","remoteAddress","parseHeaders","connectionRemoteAddress","legacySocketRemoteAddress","sourceCorrelationId","newTags","_getIp","_getId","encrypted","pathName","ipMatch","ip","rawHeaders","parseId","userAgent","rootId","cookieValue","ServerRequestTracking","ClientRequestTracking","NodeClient","trackNodeHttpRequestSync","trackNodeHttpRequest","trackNodeHttpDependency","Config","Context","Channel","TelemetryProcessors","Sender","EnvelopeFactory","iKey","_telemetryProcessors","sender","disableAppInsights","maxBatchSize","maxBatchIntervalMs","track","triggerSend","telemetryType","envelope","createEnvelope","toISOString","accepted","runTelemetryProcessors","samplingTelemetryProcessor","addTelemetryProcessor","telemetryProcessor","clearTelemetryProcessors","telemetryProcessorsCount","processor","endpointBase","_getInstrumentationKey","samplingPercentage","setCorrelationId","ENV_profileQueryEndpoint","ENV_http_proxy","ENV_https_proxy","_profileQueryEndpoint","endpoint","ENV_iKey","ENV_azurePrefix","legacy_ENV_iKey","packageJsonPath","_loadApplicationContext","_loadDeviceContext","_loadInternalContext","appVersion","packageJson","DefaultRoleName","arch","sdkVersion","isDisabled","getBatchSize","getBatchIntervalMs","_buffer","_lastSend","_isDisabled","_getBatchSize","_getBatchIntervalMs","_sender","setDiskRetryMode","payload","_stringify","_timeoutHandle","isNodeCrashing","bufferIsEmpty","batch","saveOnCrash","getSamplingHashCode","charCodeAt","abs","zlib","child_process","_config","_onSuccess","_onError","_enableDiskRetryMode","_resendInterval","WAIT_BETWEEN_RESEND","_maxBytesOnDisk","MAX_BYTES_ON_DISK","_numConsecutiveFailures","OS_PROVIDES_FILE_PROTECTION","USE_ICACLS","ICACLS_PATH","withCredentials","Content-Type","gzip","dataToSend","responseString","_sendFirstFileOnDisk","_storeToDisk","MAX_CONNECTION_FAILURES_BEFORE_WARN","_onErrorHelper","errorMessage","_storeToDiskSync","_runICACLS","aclProc","windowsHide","signal","_runICACLSSync","_getACLIdentity","ACL_IDENTITY","psProc","POWERSHELL_PATH","_getACLIdentitySync","_getACLArguments","directory","identity","_applyACLRules","ACLED_DIRECTORIES","_applyACLRulesSync","_confirmDirExists","mkdir","_getShallowDirectorySize","readdir","files","totalSize","stat","fileStats","isFile","_getShallowDirectorySizeSync","readdirSync","statSync","TEMPDIR_PREFIX","getTime","fileFullPath","mkdirSync","dirSize","tempDir","exists","basename","firstFile","filePath","readFile","systemdrive","createTraceData","createDependencyData","createEventData","createExceptionData","createRequestData","createMetricData","baseData","getTags","severityLevel","remoteDependency","exceptionDetails","typeName","parseStack","requestData","responseCode","metric","Aggregation","stdDev","frames","totalSizeInBytes","_StackFrame","regex","parsedFrame","sizeInBytes","acceptedLeft","acceptedRight","howMany","assembly","matches","baseSize","wf","wfHtmlConfig","workspaceFolderValue","customData","extension","extensions","contributes","packageJSON","rp","extensionPath","getCharBefore","getCharAfter","isCharBeforeAndAfterPositionsRoughlyEqual","firstPos","secondPos","charBeforePrimarySelection","charAfterPrimarySelection","charBeforeSecondarySelection","charAfterSecondarySelection","matchingTagPositionProvider","onDidChangeTextEditorSelection","textEditor","_b","prevCursors","cursors","inMirrorMode","matchingTagPosition","charBeforeAndAfterPositionsRoughlyEqual","anchor","newCursor","Selection","exitMirrorMode","shouldDoCleanupForHtmlAttributeInput","cleanupEdit","cleanupRange","translate","charBeforeAndAfterAnchorPositionsRoughlyEqual","charBeforeAndAfterActivePositionsRoughlyEqual"],"mappings":"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","file":"htmlMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","module.exports = require(\"vscode\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\nexports.ProgressType = vscode_jsonrpc_1.ProgressType;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nconst callHierarchy = require(\"./protocol.callHierarchy.proposed\");\r\nconst st = require(\"./protocol.sematicTokens.proposed\");\r\nvar Proposed;\r\n(function (Proposed) {\r\n    let CallHierarchyPrepareRequest;\r\n    (function (CallHierarchyPrepareRequest) {\r\n        CallHierarchyPrepareRequest.method = callHierarchy.CallHierarchyPrepareRequest.method;\r\n        CallHierarchyPrepareRequest.type = callHierarchy.CallHierarchyPrepareRequest.type;\r\n    })(CallHierarchyPrepareRequest = Proposed.CallHierarchyPrepareRequest || (Proposed.CallHierarchyPrepareRequest = {}));\r\n    let CallHierarchyIncomingCallsRequest;\r\n    (function (CallHierarchyIncomingCallsRequest) {\r\n        CallHierarchyIncomingCallsRequest.method = callHierarchy.CallHierarchyIncomingCallsRequest.method;\r\n        CallHierarchyIncomingCallsRequest.type = callHierarchy.CallHierarchyIncomingCallsRequest.type;\r\n    })(CallHierarchyIncomingCallsRequest = Proposed.CallHierarchyIncomingCallsRequest || (Proposed.CallHierarchyIncomingCallsRequest = {}));\r\n    let CallHierarchyOutgoingCallsRequest;\r\n    (function (CallHierarchyOutgoingCallsRequest) {\r\n        CallHierarchyOutgoingCallsRequest.method = callHierarchy.CallHierarchyOutgoingCallsRequest.method;\r\n        CallHierarchyOutgoingCallsRequest.type = callHierarchy.CallHierarchyOutgoingCallsRequest.type;\r\n    })(CallHierarchyOutgoingCallsRequest = Proposed.CallHierarchyOutgoingCallsRequest || (Proposed.CallHierarchyOutgoingCallsRequest = {}));\r\n    Proposed.SemanticTokenTypes = st.SemanticTokenTypes;\r\n    Proposed.SemanticTokenModifiers = st.SemanticTokenModifiers;\r\n    Proposed.SemanticTokens = st.SemanticTokens;\r\n    let SemanticTokensRequest;\r\n    (function (SemanticTokensRequest) {\r\n        SemanticTokensRequest.method = st.SemanticTokensRequest.method;\r\n        SemanticTokensRequest.type = st.SemanticTokensRequest.type;\r\n    })(SemanticTokensRequest = Proposed.SemanticTokensRequest || (Proposed.SemanticTokensRequest = {}));\r\n    let SemanticTokensEditsRequest;\r\n    (function (SemanticTokensEditsRequest) {\r\n        SemanticTokensEditsRequest.method = st.SemanticTokensEditsRequest.method;\r\n        SemanticTokensEditsRequest.type = st.SemanticTokensEditsRequest.type;\r\n    })(SemanticTokensEditsRequest = Proposed.SemanticTokensEditsRequest || (Proposed.SemanticTokensEditsRequest = {}));\r\n    let SemanticTokensRangeRequest;\r\n    (function (SemanticTokensRangeRequest) {\r\n        SemanticTokensRangeRequest.method = st.SemanticTokensRangeRequest.method;\r\n        SemanticTokensRangeRequest.type = st.SemanticTokensRangeRequest.type;\r\n    })(SemanticTokensRangeRequest = Proposed.SemanticTokensRangeRequest || (Proposed.SemanticTokensRangeRequest = {}));\r\n})(Proposed = exports.Proposed || (exports.Proposed = {}));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar patchRequire_1 = require(\"./patchRequire\");\r\nvar patchRequire_2 = require(\"./patchRequire\");\r\nexports.makePatchingRequire = patchRequire_2.makePatchingRequire;\r\nvar trueFilter = function (publishing) { return true; };\r\nvar ContextPreservingEventEmitter = (function () {\r\n    function ContextPreservingEventEmitter() {\r\n        this.version = require(\"./../../package.json\").version; // Allow for future versions to replace things?\r\n        this.subscribers = {};\r\n        this.contextPreservationFunction = function (cb) { return cb; };\r\n        this.knownPatches = {};\r\n        this.currentlyPublishing = false;\r\n    }\r\n    ContextPreservingEventEmitter.prototype.shouldPublish = function (name) {\r\n        var listeners = this.subscribers[name];\r\n        if (listeners) {\r\n            return listeners.some(function (_a) {\r\n                var filter = _a.filter;\r\n                return !filter || filter(false);\r\n            });\r\n        }\r\n        return false;\r\n    };\r\n    ContextPreservingEventEmitter.prototype.publish = function (name, event) {\r\n        if (this.currentlyPublishing) {\r\n            return; // Avoid reentrancy\r\n        }\r\n        var listeners = this.subscribers[name];\r\n        // Note: Listeners called synchronously to preserve context\r\n        if (listeners) {\r\n            var standardEvent_1 = {\r\n                timestamp: Date.now(),\r\n                data: event,\r\n            };\r\n            this.currentlyPublishing = true;\r\n            listeners.forEach(function (_a) {\r\n                var listener = _a.listener, filter = _a.filter;\r\n                try {\r\n                    if (filter && filter(true)) {\r\n                        listener(standardEvent_1);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // Subscriber threw an error\r\n                }\r\n            });\r\n            this.currentlyPublishing = false;\r\n        }\r\n    };\r\n    ContextPreservingEventEmitter.prototype.subscribe = function (name, listener, filter) {\r\n        if (filter === void 0) { filter = trueFilter; }\r\n        if (!this.subscribers[name]) {\r\n            this.subscribers[name] = [];\r\n        }\r\n        this.subscribers[name].push({ listener: listener, filter: filter });\r\n    };\r\n    ContextPreservingEventEmitter.prototype.unsubscribe = function (name, listener, filter) {\r\n        if (filter === void 0) { filter = trueFilter; }\r\n        var listeners = this.subscribers[name];\r\n        if (listeners) {\r\n            for (var index = 0; index < listeners.length; ++index) {\r\n                if (listeners[index].listener === listener && listeners[index].filter === filter) {\r\n                    listeners.splice(index, 1);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    // Used for tests\r\n    ContextPreservingEventEmitter.prototype.reset = function () {\r\n        var _this = this;\r\n        this.subscribers = {};\r\n        this.contextPreservationFunction = function (cb) { return cb; };\r\n        // Modify the knownPatches object rather than replace, since a reference will be used in the require patcher\r\n        Object.getOwnPropertyNames(this.knownPatches).forEach(function (prop) { return delete _this.knownPatches[prop]; });\r\n    };\r\n    ContextPreservingEventEmitter.prototype.bindToContext = function (cb) {\r\n        return this.contextPreservationFunction(cb);\r\n    };\r\n    ContextPreservingEventEmitter.prototype.addContextPreservation = function (preserver) {\r\n        var previousPreservationStack = this.contextPreservationFunction;\r\n        this.contextPreservationFunction = (function (cb) { return preserver(previousPreservationStack(cb)); });\r\n    };\r\n    ContextPreservingEventEmitter.prototype.registerMonkeyPatch = function (packageName, patcher) {\r\n        if (!this.knownPatches[packageName]) {\r\n            this.knownPatches[packageName] = [];\r\n        }\r\n        this.knownPatches[packageName].push(patcher);\r\n    };\r\n    ContextPreservingEventEmitter.prototype.getPatchesObject = function () {\r\n        return this.knownPatches;\r\n    };\r\n    return ContextPreservingEventEmitter;\r\n}());\r\nif (!global.diagnosticsSource) {\r\n    global.diagnosticsSource = new ContextPreservingEventEmitter();\r\n    // TODO: should this only patch require after at least one monkey patch is registered?\r\n    /* tslint:disable-next-line:no-var-requires */\r\n    var moduleModule = require(\"module\");\r\n    // Note: We pass in the object now before any patches are registered, but the object is passed by reference\r\n    // so any updates made to the object will be visible in the patcher.\r\n    moduleModule.prototype.require = patchRequire_1.makePatchingRequire(global.diagnosticsSource.getPatchesObject());\r\n}\r\nexports.channel = global.diagnosticsSource;\r\n//# sourceMappingURL=channel.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType0 = ProtocolRequestType0;\r\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType = ProtocolRequestType;\r\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType = ProtocolNotificationType;\r\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\r\n","\"use strict\";\r\nvar Logging = (function () {\r\n    function Logging() {\r\n    }\r\n    Logging.info = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        if (Logging.enableDebug) {\r\n            console.info(Logging.TAG + message, optionalParams);\r\n        }\r\n    };\r\n    Logging.warn = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        if (!Logging.disableWarnings) {\r\n            console.warn(Logging.TAG + message, optionalParams);\r\n        }\r\n    };\r\n    Logging.enableDebug = false;\r\n    Logging.disableWarnings = false;\r\n    Logging.TAG = \"ApplicationInsights:\";\r\n    return Logging;\r\n}());\r\nmodule.exports = Logging;\r\n//# sourceMappingURL=Logging.js.map","module.exports = require(\"path\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst c2p = require(\"./codeConverter\");\r\nconst p2c = require(\"./protocolConverter\");\r\nconst Is = require(\"./utils/is\");\r\nconst async_1 = require(\"./utils/async\");\r\nconst UUID = require(\"./utils/uuid\");\r\nconst progressPart_1 = require(\"./progressPart\");\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nclass ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n}\r\nfunction createConnection(input, output, errorHandler, closeHandler) {\r\n    let logger = new ConsoleLogger();\r\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\r\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\r\n    connection.onClose(closeHandler);\r\n    let result = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\r\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\r\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\r\n        onProgress: connection.onProgress,\r\n        sendProgress: connection.sendProgress,\r\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\r\n            const defaultTraceOptions = {\r\n                sendNotification: false,\r\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\r\n            };\r\n            if (sendNotificationOrTraceOptions === void 0) {\r\n                connection.trace(value, tracer, defaultTraceOptions);\r\n            }\r\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n            else {\r\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\r\n            }\r\n        },\r\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\r\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\r\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\r\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\r\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\r\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\r\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\r\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\r\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\r\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\r\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\r\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\r\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    return result;\r\n}\r\n/**\r\n * An action to be performed when the connection is producing errors.\r\n */\r\nvar ErrorAction;\r\n(function (ErrorAction) {\r\n    /**\r\n     * Continue running the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\r\n    /**\r\n     * Shutdown the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\r\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\r\n/**\r\n * An action to be performed when the connection to a server got closed.\r\n */\r\nvar CloseAction;\r\n(function (CloseAction) {\r\n    /**\r\n     * Don't restart the server. The connection stays closed.\r\n     */\r\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\r\n    /**\r\n     * Restart the server.\r\n     */\r\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\r\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\r\nclass DefaultErrorHandler {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.restarts = [];\r\n    }\r\n    error(_error, _message, count) {\r\n        if (count && count <= 3) {\r\n            return ErrorAction.Continue;\r\n        }\r\n        return ErrorAction.Shutdown;\r\n    }\r\n    closed() {\r\n        this.restarts.push(Date.now());\r\n        if (this.restarts.length < 5) {\r\n            return CloseAction.Restart;\r\n        }\r\n        else {\r\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\r\n            if (diff <= 3 * 60 * 1000) {\r\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\r\n                return CloseAction.DoNotRestart;\r\n            }\r\n            else {\r\n                this.restarts.shift();\r\n                return CloseAction.Restart;\r\n            }\r\n        }\r\n    }\r\n}\r\nvar RevealOutputChannelOn;\r\n(function (RevealOutputChannelOn) {\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\r\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\r\n    State[State[\"Starting\"] = 3] = \"Starting\";\r\n    State[State[\"Running\"] = 2] = \"Running\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ClientState;\r\n(function (ClientState) {\r\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\r\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\r\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\r\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\r\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\r\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\r\n})(ClientState || (ClientState = {}));\r\nconst SupportedSymbolKinds = [\r\n    vscode_languageserver_protocol_1.SymbolKind.File,\r\n    vscode_languageserver_protocol_1.SymbolKind.Module,\r\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\r\n    vscode_languageserver_protocol_1.SymbolKind.Package,\r\n    vscode_languageserver_protocol_1.SymbolKind.Class,\r\n    vscode_languageserver_protocol_1.SymbolKind.Method,\r\n    vscode_languageserver_protocol_1.SymbolKind.Property,\r\n    vscode_languageserver_protocol_1.SymbolKind.Field,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\r\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\r\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\r\n    vscode_languageserver_protocol_1.SymbolKind.Function,\r\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\r\n    vscode_languageserver_protocol_1.SymbolKind.String,\r\n    vscode_languageserver_protocol_1.SymbolKind.Number,\r\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\r\n    vscode_languageserver_protocol_1.SymbolKind.Array,\r\n    vscode_languageserver_protocol_1.SymbolKind.Object,\r\n    vscode_languageserver_protocol_1.SymbolKind.Key,\r\n    vscode_languageserver_protocol_1.SymbolKind.Null,\r\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\r\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\r\n    vscode_languageserver_protocol_1.SymbolKind.Event,\r\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\r\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\r\n];\r\nconst SupportedCompletionItemKinds = [\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\r\n];\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nvar DynamicFeature;\r\n(function (DynamicFeature) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\r\n    }\r\n    DynamicFeature.is = is;\r\n})(DynamicFeature || (DynamicFeature = {}));\r\nclass DocumentNotifiactions {\r\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\r\n        this._client = _client;\r\n        this._event = _event;\r\n        this._type = _type;\r\n        this._middleware = _middleware;\r\n        this._createParams = _createParams;\r\n        this._selectorFilter = _selectorFilter;\r\n        this._selectors = new Map();\r\n    }\r\n    static textDocumentFilter(selectors, textDocument) {\r\n        for (const selector of selectors) {\r\n            if (vscode_1.languages.match(selector, textDocument)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = this._event(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(data) {\r\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\r\n            if (this._middleware) {\r\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\r\n            }\r\n            else {\r\n                this._client.sendNotification(this._type, this._createParams(data));\r\n            }\r\n            this.notificationSent(data);\r\n        }\r\n    }\r\n    notificationSent(_data) {\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    getProvider(document) {\r\n        for (const selector of this._selectors.values()) {\r\n            if (vscode_1.languages.match(selector, document)) {\r\n                return {\r\n                    send: (data) => {\r\n                        this.callback(data);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        throw new Error(`No provider available for the given text document`);\r\n    }\r\n}\r\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    register(message, data) {\r\n        super.register(message, data);\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let documentSelector = data.registerOptions.documentSelector;\r\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\r\n            let uri = textDocument.uri.toString();\r\n            if (this._syncedDocuments.has(uri)) {\r\n                return;\r\n            }\r\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didOpen = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                if (middleware.didOpen) {\r\n                    middleware.didOpen(textDocument, didOpen);\r\n                }\r\n                else {\r\n                    didOpen(textDocument);\r\n                }\r\n                this._syncedDocuments.set(uri, textDocument);\r\n            }\r\n        });\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\r\n    }\r\n}\r\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.delete(textDocument.uri.toString());\r\n    }\r\n    unregister(id) {\r\n        let selector = this._selectors.get(id);\r\n        // The super call removed the selector from the map\r\n        // of selectors.\r\n        super.unregister(id);\r\n        let selectors = this._selectors.values();\r\n        this._syncedDocuments.forEach((textDocument) => {\r\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didClose = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                this._syncedDocuments.delete(textDocument.uri.toString());\r\n                if (middleware.didClose) {\r\n                    middleware.didClose(textDocument, didClose);\r\n                }\r\n                else {\r\n                    didClose(textDocument);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DidChangeTextDocumentFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._changeData = new Map();\r\n        this._forcingDelivery = false;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\r\n        }\r\n        this._changeData.set(data.id, {\r\n            documentSelector: data.registerOptions.documentSelector,\r\n            syncKind: data.registerOptions.syncKind\r\n        });\r\n    }\r\n    callback(event) {\r\n        // Text document changes are send for dirty changes as well. We don't\r\n        // have dirty / undirty events in the LSP so we ignore content changes\r\n        // with length zero.\r\n        if (event.contentChanges.length === 0) {\r\n            return;\r\n        }\r\n        for (const changeData of this._changeData.values()) {\r\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\r\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\r\n                    }\r\n                    else {\r\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\r\n                    }\r\n                }\r\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\r\n                    let didChange = (event) => {\r\n                        if (this._changeDelayer) {\r\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\r\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\r\n                                this.forceDelivery();\r\n                                this._changeDelayer.uri = event.document.uri.toString();\r\n                            }\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            });\r\n                        }\r\n                        else {\r\n                            this._changeDelayer = {\r\n                                uri: event.document.uri.toString(),\r\n                                delayer: new async_1.Delayer(200)\r\n                            };\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            }, -1);\r\n                        }\r\n                    };\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, didChange);\r\n                    }\r\n                    else {\r\n                        didChange(event);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._changeData.delete(id);\r\n        if (this._changeData.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._changeDelayer = undefined;\r\n        this._forcingDelivery = false;\r\n        this._changeData.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    forceDelivery() {\r\n        if (this._forcingDelivery || !this._changeDelayer) {\r\n            return;\r\n        }\r\n        try {\r\n            this._forcingDelivery = true;\r\n            this._changeDelayer.delayer.forceDelivery();\r\n        }\r\n        finally {\r\n            this._forcingDelivery = false;\r\n        }\r\n    }\r\n    getProvider(document) {\r\n        for (const changeData of this._changeData.values()) {\r\n            if (vscode_1.languages.match(changeData.documentSelector, document)) {\r\n                return {\r\n                    send: (event) => {\r\n                        this.callback(event);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        throw new Error(`No provider available for the given text document`);\r\n    }\r\n}\r\nclass WillSaveFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass WillSaveWaitUntilFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._selectors = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSaveWaitUntil = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(event) {\r\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\r\n            let middleware = this._client.clientOptions.middleware;\r\n            let willSaveWaitUntil = (event) => {\r\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\r\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\r\n                    return vEdits === void 0 ? [] : vEdits;\r\n                });\r\n            };\r\n            event.waitUntil(middleware.willSaveWaitUntil\r\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\r\n                : willSaveWaitUntil(event));\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\r\n            });\r\n        }\r\n    }\r\n    register(method, data) {\r\n        this._includeText = !!data.registerOptions.includeText;\r\n        super.register(method, data);\r\n    }\r\n}\r\nclass FileSystemWatcherFeature {\r\n    constructor(_client, _notifyFileEvent) {\r\n        this._client = _client;\r\n        this._notifyFileEvent = _notifyFileEvent;\r\n        this._watchers = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\r\n    }\r\n    initialize(_capabilities, _documentSelector) {\r\n    }\r\n    register(_method, data) {\r\n        if (!Array.isArray(data.registerOptions.watchers)) {\r\n            return;\r\n        }\r\n        let disposeables = [];\r\n        for (let watcher of data.registerOptions.watchers) {\r\n            if (!Is.string(watcher.globPattern)) {\r\n                continue;\r\n            }\r\n            let watchCreate = true, watchChange = true, watchDelete = true;\r\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\r\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\r\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) !== 0;\r\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) !== 0;\r\n            }\r\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\r\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\r\n            disposeables.push(fileSystemWatcher);\r\n        }\r\n        this._watchers.set(data.id, disposeables);\r\n    }\r\n    registerRaw(id, fileSystemWatchers) {\r\n        let disposeables = [];\r\n        for (let fileSystemWatcher of fileSystemWatchers) {\r\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\r\n        }\r\n        this._watchers.set(id, disposeables);\r\n    }\r\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\r\n        if (watchCreate) {\r\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\r\n            }), null, listeners);\r\n        }\r\n        if (watchChange) {\r\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\r\n            }), null, listeners);\r\n        }\r\n        if (watchDelete) {\r\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\r\n            }), null, listeners);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._watchers.get(id);\r\n        if (disposeables) {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this._watchers.forEach((disposeables) => {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        });\r\n        this._watchers.clear();\r\n    }\r\n}\r\nclass TextDocumentFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._registrations = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wrong feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let registration = this.registerLanguageProvider(data.registerOptions);\r\n        this._registrations.set(data.id, { disposable: registration[0], data, provider: registration[1] });\r\n    }\r\n    unregister(id) {\r\n        let registration = this._registrations.get(id);\r\n        if (registration !== undefined) {\r\n            registration.disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._registrations.forEach((value) => {\r\n            value.disposable.dispose();\r\n        });\r\n        this._registrations.clear();\r\n    }\r\n    getRegistration(documentSelector, capability) {\r\n        if (!capability) {\r\n            return [undefined, undefined];\r\n        }\r\n        else if (vscode_languageserver_protocol_1.TextDocumentRegistrationOptions.is(capability)) {\r\n            const id = vscode_languageserver_protocol_1.StaticRegistrationOptions.hasId(capability) ? capability.id : UUID.generateUuid();\r\n            const selector = capability.documentSelector || documentSelector;\r\n            if (selector) {\r\n                return [id, Object.assign({}, capability, { documentSelector: selector })];\r\n            }\r\n        }\r\n        else if (Is.boolean(capability) && capability === true || vscode_languageserver_protocol_1.WorkDoneProgressOptions.is(capability)) {\r\n            if (!documentSelector) {\r\n                return [undefined, undefined];\r\n            }\r\n            let options = (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\r\n            return [UUID.generateUuid(), options];\r\n        }\r\n        return [undefined, undefined];\r\n    }\r\n    getRegistrationOptions(documentSelector, capability) {\r\n        if (!documentSelector || !capability) {\r\n            return undefined;\r\n        }\r\n        return (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\r\n    }\r\n    getProvider(textDocument) {\r\n        for (const registration of this._registrations.values()) {\r\n            let selector = registration.data.registerOptions.documentSelector;\r\n            if (selector !== null && vscode_1.languages.match(selector, textDocument)) {\r\n                return registration.provider;\r\n            }\r\n        }\r\n        throw new Error(`The feature has no registration for the provided text document ${textDocument.uri.toString()}`);\r\n    }\r\n}\r\nexports.TextDocumentFeature = TextDocumentFeature;\r\nclass WorkspaceFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._registrations = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        const registration = this.registerLanguageProvider(data.registerOptions);\r\n        this._registrations.set(data.id, { disposable: registration[0], provider: registration[1] });\r\n    }\r\n    unregister(id) {\r\n        let registration = this._registrations.get(id);\r\n        if (registration !== undefined) {\r\n            registration.disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._registrations.forEach((registration) => {\r\n            registration.disposable.dispose();\r\n        });\r\n        this._registrations.clear();\r\n    }\r\n    getProviders() {\r\n        const result = [];\r\n        for (const registration of this._registrations.values()) {\r\n            result.push(registration.provider);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nclass CompletionItemFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\r\n        completion.dynamicRegistration = true;\r\n        completion.contextSupport = true;\r\n        completion.completionItem = {\r\n            snippetSupport: true,\r\n            commitCharactersSupport: true,\r\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\r\n            deprecatedSupport: true,\r\n            preselectSupport: true,\r\n            tagSupport: { valueSet: [vscode_languageserver_protocol_1.CompletionItemTag.Deprecated] }\r\n        };\r\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.completionProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: options\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const triggerCharacters = options.triggerCharacters || [];\r\n        const provider = {\r\n            provideCompletionItems: (document, position, token, context) => {\r\n                const client = this._client;\r\n                const middleware = this._client.clientOptions.middleware;\r\n                const provideCompletionItems = (document, position, context, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                return middleware.provideCompletionItem\r\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\r\n                    : provideCompletionItems(document, position, context, token);\r\n            },\r\n            resolveCompletionItem: options.resolveProvider\r\n                ? (item, token) => {\r\n                    const client = this._client;\r\n                    const middleware = this._client.clientOptions.middleware;\r\n                    const resolveCompletionItem = (item, token) => {\r\n                        return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\r\n                            client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\r\n                            return Promise.resolve(item);\r\n                        });\r\n                    };\r\n                    return middleware.resolveCompletionItem\r\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\r\n                        : resolveCompletionItem(item, token);\r\n                }\r\n                : undefined\r\n        };\r\n        return [vscode_1.languages.registerCompletionItemProvider(options.documentSelector, provider, ...triggerCharacters), provider];\r\n    }\r\n}\r\nclass HoverFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\r\n        hoverCapability.dynamicRegistration = true;\r\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.hoverProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: options\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideHover: (document, position, token) => {\r\n                const client = this._client;\r\n                const provideHover = (document, position, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideHover\r\n                    ? middleware.provideHover(document, position, token, provideHover)\r\n                    : provideHover(document, position, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerHoverProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass SignatureHelpFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\r\n        config.dynamicRegistration = true;\r\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\r\n        config.signatureInformation.parameterInformation = { labelOffsetSupport: true };\r\n        config.contextSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.signatureHelpProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: options\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideSignatureHelp: (document, position, token, context) => {\r\n                const client = this._client;\r\n                const providerSignatureHelp = (document, position, context, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asSignatureHelpParams(document, position, context), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideSignatureHelp\r\n                    ? middleware.provideSignatureHelp(document, position, context, token, providerSignatureHelp)\r\n                    : providerSignatureHelp(document, position, context, token);\r\n            }\r\n        };\r\n        let disposable;\r\n        if (options.retriggerCharacters === undefined) {\r\n            const triggerCharacters = options.triggerCharacters || [];\r\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, ...triggerCharacters);\r\n        }\r\n        else {\r\n            const metaData = {\r\n                triggerCharacters: options.triggerCharacters || [],\r\n                retriggerCharacters: options.retriggerCharacters || []\r\n            };\r\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, metaData);\r\n        }\r\n        return [disposable, provider];\r\n    }\r\n}\r\nclass DefinitionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let definitionSupport = ensure(ensure(capabilites, 'textDocument'), 'definition');\r\n        definitionSupport.dynamicRegistration = true;\r\n        definitionSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.definitionProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideDefinition: (document, position, token) => {\r\n                const client = this._client;\r\n                const provideDefinition = (document, position, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideDefinition\r\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\r\n                    : provideDefinition(document, position, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerDefinitionProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass ReferencesFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.referencesProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideReferences: (document, position, options, token) => {\r\n                const client = this._client;\r\n                const _providerReferences = (document, position, options, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideReferences\r\n                    ? middleware.provideReferences(document, position, options, token, _providerReferences)\r\n                    : _providerReferences(document, position, options, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerReferenceProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass DocumentHighlightFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentHighlightProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideDocumentHighlights: (document, position, token) => {\r\n                const client = this._client;\r\n                const _provideDocumentHighlights = (document, position, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideDocumentHighlights\r\n                    ? middleware.provideDocumentHighlights(document, position, token, _provideDocumentHighlights)\r\n                    : _provideDocumentHighlights(document, position, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass DocumentSymbolFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupportedSymbolKinds\r\n        };\r\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentSymbolProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideDocumentSymbols: (document, token) => {\r\n                const client = this._client;\r\n                const _provideDocumentSymbols = (document, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then((data) => {\r\n                        if (data === null) {\r\n                            return undefined;\r\n                        }\r\n                        if (data.length === 0) {\r\n                            return [];\r\n                        }\r\n                        else {\r\n                            let element = data[0];\r\n                            if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\r\n                                return client.protocol2CodeConverter.asDocumentSymbols(data);\r\n                            }\r\n                            else {\r\n                                return client.protocol2CodeConverter.asSymbolInformations(data);\r\n                            }\r\n                        }\r\n                    }, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideDocumentSymbols\r\n                    ? middleware.provideDocumentSymbols(document, token, _provideDocumentSymbols)\r\n                    : _provideDocumentSymbols(document, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupportedSymbolKinds\r\n        };\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.workspaceSymbolProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: capabilities.workspaceSymbolProvider === true ? { workDoneProgress: false } : capabilities.workspaceSymbolProvider\r\n        });\r\n    }\r\n    registerLanguageProvider(_options) {\r\n        const provider = {\r\n            provideWorkspaceSymbols: (query, token) => {\r\n                const client = this._client;\r\n                const provideWorkspaceSymbols = (query, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideWorkspaceSymbols\r\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\r\n                    : provideWorkspaceSymbols(query, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerWorkspaceSymbolProvider(provider), provider];\r\n    }\r\n}\r\nclass CodeActionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const cap = ensure(ensure(capabilites, 'textDocument'), 'codeAction');\r\n        cap.dynamicRegistration = true;\r\n        cap.isPreferredSupport = true;\r\n        cap.codeActionLiteralSupport = {\r\n            codeActionKind: {\r\n                valueSet: [\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Empty,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\r\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeActionProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideCodeActions: (document, range, context, token) => {\r\n                const client = this._client;\r\n                const _provideCodeActions = (document, range, context, token) => {\r\n                    const params = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                        range: client.code2ProtocolConverter.asRange(range),\r\n                        context: client.code2ProtocolConverter.asCodeActionContext(context)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\r\n                        if (values === null) {\r\n                            return undefined;\r\n                        }\r\n                        const result = [];\r\n                        for (let item of values) {\r\n                            if (vscode_languageserver_protocol_1.Command.is(item)) {\r\n                                result.push(client.protocol2CodeConverter.asCommand(item));\r\n                            }\r\n                            else {\r\n                                result.push(client.protocol2CodeConverter.asCodeAction(item));\r\n                            }\r\n                        }\r\n                        return result;\r\n                    }, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideCodeActions\r\n                    ? middleware.provideCodeActions(document, range, context, token, _provideCodeActions)\r\n                    : _provideCodeActions(document, range, context, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerCodeActionsProvider(options.documentSelector, provider, (options.codeActionKinds\r\n                ? { providedCodeActionKinds: this._client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\r\n                : undefined)), provider];\r\n    }\r\n}\r\nclass CodeLensFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeLensProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideCodeLenses: (document, token) => {\r\n                const client = this._client;\r\n                const provideCodeLenses = (document, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideCodeLenses\r\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\r\n                    : provideCodeLenses(document, token);\r\n            },\r\n            resolveCodeLens: (options.resolveProvider)\r\n                ? (codeLens, token) => {\r\n                    const client = this._client;\r\n                    const resolveCodeLens = (codeLens, token) => {\r\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\r\n                            client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\r\n                            return codeLens;\r\n                        });\r\n                    };\r\n                    const middleware = client.clientOptions.middleware;\r\n                    return middleware.resolveCodeLens\r\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\r\n                        : resolveCodeLens(codeLens, token);\r\n                }\r\n                : undefined\r\n        };\r\n        return [vscode_1.languages.registerCodeLensProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass DocumentFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentFormattingProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideDocumentFormattingEdits: (document, options, token) => {\r\n                const client = this._client;\r\n                const provideDocumentFormattingEdits = (document, options, token) => {\r\n                    const params = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideDocumentFormattingEdits\r\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\r\n                    : provideDocumentFormattingEdits(document, options, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentRangeFormattingProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\r\n                const client = this._client;\r\n                const provideDocumentRangeFormattingEdits = (document, range, options, token) => {\r\n                    let params = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                        range: client.code2ProtocolConverter.asRange(range),\r\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                let middleware = client.clientOptions.middleware;\r\n                return middleware.provideDocumentRangeFormattingEdits\r\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\r\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentOnTypeFormattingProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\r\n                const client = this._client;\r\n                const provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\r\n                    let params = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                        position: client.code2ProtocolConverter.asPosition(position),\r\n                        ch: ch,\r\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideOnTypeFormattingEdits\r\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\r\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\r\n            }\r\n        };\r\n        const moreTriggerCharacter = options.moreTriggerCharacter || [];\r\n        return [vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, provider, options.firstTriggerCharacter, ...moreTriggerCharacter), provider];\r\n    }\r\n}\r\nclass RenameFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let rename = ensure(ensure(capabilites, 'textDocument'), 'rename');\r\n        rename.dynamicRegistration = true;\r\n        rename.prepareSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.renameProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        if (Is.boolean(capabilities.renameProvider)) {\r\n            options.prepareProvider = false;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideRenameEdits: (document, position, newName, token) => {\r\n                const client = this._client;\r\n                const provideRenameEdits = (document, position, newName, token) => {\r\n                    let params = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                        position: client.code2ProtocolConverter.asPosition(position),\r\n                        newName: newName\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\r\n                        return Promise.reject(new Error(error.message));\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideRenameEdits\r\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\r\n                    : provideRenameEdits(document, position, newName, token);\r\n            },\r\n            prepareRename: options.prepareProvider\r\n                ? (document, position, token) => {\r\n                    const client = this._client;\r\n                    const prepareRename = (document, position, token) => {\r\n                        let params = {\r\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                            position: client.code2ProtocolConverter.asPosition(position),\r\n                        };\r\n                        return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\r\n                            if (vscode_languageserver_protocol_1.Range.is(result)) {\r\n                                return client.protocol2CodeConverter.asRange(result);\r\n                            }\r\n                            else if (result && vscode_languageserver_protocol_1.Range.is(result.range)) {\r\n                                return {\r\n                                    range: client.protocol2CodeConverter.asRange(result.range),\r\n                                    placeholder: result.placeholder\r\n                                };\r\n                            }\r\n                            // To cancel the rename vscode API expects a rejected promise.\r\n                            return Promise.reject(new Error(`The element can't be renamed.`));\r\n                        }, (error) => {\r\n                            client.logFailedRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, error);\r\n                            return Promise.reject(new Error(error.message));\r\n                        });\r\n                    };\r\n                    const middleware = client.clientOptions.middleware;\r\n                    return middleware.prepareRename\r\n                        ? middleware.prepareRename(document, position, token, prepareRename)\r\n                        : prepareRename(document, position, token);\r\n                }\r\n                : undefined\r\n        };\r\n        return [vscode_1.languages.registerRenameProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass DocumentLinkFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const documentLinkCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentLink');\r\n        documentLinkCapabilities.dynamicRegistration = true;\r\n        documentLinkCapabilities.tooltipSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentLinkProvider);\r\n        if (!options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideDocumentLinks: (document, token) => {\r\n                const client = this._client;\r\n                const provideDocumentLinks = (document, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\r\n                        return Promise.resolve([]);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideDocumentLinks\r\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\r\n                    : provideDocumentLinks(document, token);\r\n            },\r\n            resolveDocumentLink: options.resolveProvider\r\n                ? (link, token) => {\r\n                    const client = this._client;\r\n                    let resolveDocumentLink = (link, token) => {\r\n                        return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\r\n                            client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\r\n                            return Promise.resolve(link);\r\n                        });\r\n                    };\r\n                    const middleware = client.clientOptions.middleware;\r\n                    return middleware.resolveDocumentLink\r\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\r\n                        : resolveDocumentLink(link, token);\r\n                }\r\n                : undefined\r\n        };\r\n        return [vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\r\n    }\r\n    initialize() {\r\n        let section = this._client.clientOptions.synchronize.configurationSection;\r\n        if (section !== void 0) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: {\r\n                    section: section\r\n                }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\r\n        });\r\n        this._listeners.set(data.id, disposable);\r\n        if (data.registerOptions.section !== void 0) {\r\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable) {\r\n            this._listeners.delete(id);\r\n            disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    onDidChangeConfiguration(configurationSection, event) {\r\n        let sections;\r\n        if (Is.string(configurationSection)) {\r\n            sections = [configurationSection];\r\n        }\r\n        else {\r\n            sections = configurationSection;\r\n        }\r\n        if (sections !== void 0 && event !== void 0) {\r\n            let affected = sections.some((section) => event.affectsConfiguration(section));\r\n            if (!affected) {\r\n                return;\r\n            }\r\n        }\r\n        let didChangeConfiguration = (sections) => {\r\n            if (sections === void 0) {\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\r\n                return;\r\n            }\r\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\r\n        };\r\n        let middleware = this.getMiddleware();\r\n        middleware\r\n            ? middleware(sections, didChangeConfiguration)\r\n            : didChangeConfiguration(sections);\r\n    }\r\n    extractSettingsInformation(keys) {\r\n        function ensurePath(config, path) {\r\n            let current = config;\r\n            for (let i = 0; i < path.length - 1; i++) {\r\n                let obj = current[path[i]];\r\n                if (!obj) {\r\n                    obj = Object.create(null);\r\n                    current[path[i]] = obj;\r\n                }\r\n                current = obj;\r\n            }\r\n            return current;\r\n        }\r\n        let resource = this._client.clientOptions.workspaceFolder\r\n            ? this._client.clientOptions.workspaceFolder.uri\r\n            : undefined;\r\n        let result = Object.create(null);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let index = key.indexOf('.');\r\n            let config = null;\r\n            if (index >= 0) {\r\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\r\n            }\r\n            else {\r\n                config = vscode_1.workspace.getConfiguration(key, resource);\r\n            }\r\n            if (config) {\r\n                let path = keys[i].split('.');\r\n                ensurePath(result, path)[path[path.length - 1]] = config;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\r\n            return middleware.workspace.didChangeConfiguration;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nclass ExecuteCommandFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._commands = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.executeCommandProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\r\n        });\r\n    }\r\n    register(_message, data) {\r\n        const client = this._client;\r\n        const middleware = client.clientOptions.middleware;\r\n        const executeCommand = (command, args) => {\r\n            let params = {\r\n                command,\r\n                arguments: args\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\r\n            });\r\n        };\r\n        if (data.registerOptions.commands) {\r\n            const disposeables = [];\r\n            for (const command of data.registerOptions.commands) {\r\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\r\n                    return middleware.executeCommand\r\n                        ? middleware.executeCommand(command, args, executeCommand)\r\n                        : executeCommand(command, args);\r\n                }));\r\n            }\r\n            this._commands.set(data.id, disposeables);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._commands.get(id);\r\n        if (disposeables) {\r\n            disposeables.forEach(disposable => disposable.dispose());\r\n        }\r\n    }\r\n    dispose() {\r\n        this._commands.forEach((value) => {\r\n            value.forEach(disposable => disposable.dispose());\r\n        });\r\n        this._commands.clear();\r\n    }\r\n}\r\nvar MessageTransports;\r\n(function (MessageTransports) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\r\n    }\r\n    MessageTransports.is = is;\r\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\r\nclass OnReady {\r\n    constructor(_resolve, _reject) {\r\n        this._resolve = _resolve;\r\n        this._reject = _reject;\r\n        this._used = false;\r\n    }\r\n    get isUsed() {\r\n        return this._used;\r\n    }\r\n    resolve() {\r\n        this._used = true;\r\n        this._resolve();\r\n    }\r\n    reject(error) {\r\n        this._used = true;\r\n        this._reject(error);\r\n    }\r\n}\r\nclass BaseLanguageClient {\r\n    constructor(id, name, clientOptions) {\r\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        this._features = [];\r\n        this._method2Message = new Map();\r\n        this._dynamicFeatures = new Map();\r\n        this._id = id;\r\n        this._name = name;\r\n        clientOptions = clientOptions || {};\r\n        this._clientOptions = {\r\n            documentSelector: clientOptions.documentSelector || [],\r\n            synchronize: clientOptions.synchronize || {},\r\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\r\n            outputChannelName: clientOptions.outputChannelName || this._name,\r\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\r\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\r\n            initializationOptions: clientOptions.initializationOptions,\r\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\r\n            progressOnInitialization: !!clientOptions.progressOnInitialization,\r\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\r\n            middleware: clientOptions.middleware || {},\r\n            uriConverters: clientOptions.uriConverters,\r\n            workspaceFolder: clientOptions.workspaceFolder\r\n        };\r\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\r\n        this.state = ClientState.Initial;\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        this._initializeResult = undefined;\r\n        if (clientOptions.outputChannel) {\r\n            this._outputChannel = clientOptions.outputChannel;\r\n            this._disposeOutputChannel = false;\r\n        }\r\n        else {\r\n            this._outputChannel = undefined;\r\n            this._disposeOutputChannel = true;\r\n        }\r\n        this._traceOutputChannel = clientOptions.traceOutputChannel;\r\n        this._listeners = undefined;\r\n        this._providers = undefined;\r\n        this._diagnostics = undefined;\r\n        this._fileEvents = [];\r\n        this._fileEventDelayer = new async_1.Delayer(250);\r\n        this._onReady = new Promise((resolve, reject) => {\r\n            this._onReadyCallbacks = new OnReady(resolve, reject);\r\n        });\r\n        this._onStop = undefined;\r\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._tracer = {\r\n            log: (messageOrDataObject, data) => {\r\n                if (Is.string(messageOrDataObject)) {\r\n                    this.logTrace(messageOrDataObject, data);\r\n                }\r\n                else {\r\n                    this.logObjectTrace(messageOrDataObject);\r\n                }\r\n            },\r\n        };\r\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\r\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\r\n        this._syncedDocuments = new Map();\r\n        this.registerBuiltinFeatures();\r\n    }\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    set state(value) {\r\n        let oldState = this.getPublicState();\r\n        this._state = value;\r\n        let newState = this.getPublicState();\r\n        if (newState !== oldState) {\r\n            this._stateChangeEmitter.fire({ oldState, newState });\r\n        }\r\n    }\r\n    getPublicState() {\r\n        if (this.state === ClientState.Running) {\r\n            return State.Running;\r\n        }\r\n        else if (this.state === ClientState.Starting) {\r\n            return State.Starting;\r\n        }\r\n        else {\r\n            return State.Stopped;\r\n        }\r\n    }\r\n    get initializeResult() {\r\n        return this._initializeResult;\r\n    }\r\n    sendRequest(type, ...params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            return this._resolvedConnection.sendRequest(type, ...params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onRequest(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onRequest(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    sendNotification(type, params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            this._resolvedConnection.sendNotification(type, params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onNotification(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onNotification(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onProgress(type, token, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            return this._resolvedConnection.onProgress(type, token, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering progress handler for token ${token} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    sendProgress(type, token, value) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            this._resolvedConnection.sendProgress(type, token, value);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending progress for token ${token} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    get clientOptions() {\r\n        return this._clientOptions;\r\n    }\r\n    get protocol2CodeConverter() {\r\n        return this._p2c;\r\n    }\r\n    get code2ProtocolConverter() {\r\n        return this._c2p;\r\n    }\r\n    get onTelemetry() {\r\n        return this._telemetryEmitter.event;\r\n    }\r\n    get onDidChangeState() {\r\n        return this._stateChangeEmitter.event;\r\n    }\r\n    get outputChannel() {\r\n        if (!this._outputChannel) {\r\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\r\n        }\r\n        return this._outputChannel;\r\n    }\r\n    get traceOutputChannel() {\r\n        if (this._traceOutputChannel) {\r\n            return this._traceOutputChannel;\r\n        }\r\n        return this.outputChannel;\r\n    }\r\n    get diagnostics() {\r\n        return this._diagnostics;\r\n    }\r\n    createDefaultErrorHandler() {\r\n        return new DefaultErrorHandler(this._name);\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n        this.onReady().then(() => {\r\n            this.resolveConnection().then((connection) => {\r\n                connection.trace(this._trace, this._tracer, {\r\n                    sendNotification: false,\r\n                    traceFormat: this._traceFormat\r\n                });\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n    data2String(data) {\r\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n            const responseError = data;\r\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\r\n        }\r\n        if (data instanceof Error) {\r\n            if (Is.string(data.stack)) {\r\n                return data.stack;\r\n            }\r\n            return data.message;\r\n        }\r\n        if (Is.string(data)) {\r\n            return data;\r\n        }\r\n        return data.toString();\r\n    }\r\n    info(message, data) {\r\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\r\n            this.showNotificationMessage();\r\n        }\r\n    }\r\n    warn(message, data) {\r\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\r\n            this.showNotificationMessage();\r\n        }\r\n    }\r\n    error(message, data) {\r\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\r\n            this.showNotificationMessage();\r\n        }\r\n    }\r\n    showNotificationMessage() {\r\n        vscode_1.window.showInformationMessage('A request has failed. See the output for more information.', 'Go to output').then(() => {\r\n            this.outputChannel.show(true);\r\n        });\r\n    }\r\n    logTrace(message, data) {\r\n        this.traceOutputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.traceOutputChannel.appendLine(this.data2String(data));\r\n        }\r\n    }\r\n    logObjectTrace(data) {\r\n        if (data.isLSPMessage && data.type) {\r\n            this.traceOutputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        else {\r\n            this.traceOutputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\r\n        }\r\n        if (data) {\r\n            this.traceOutputChannel.appendLine(`${JSON.stringify(data)}`);\r\n        }\r\n    }\r\n    needsStart() {\r\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\r\n    }\r\n    needsStop() {\r\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\r\n    }\r\n    onReady() {\r\n        return this._onReady;\r\n    }\r\n    isConnectionActive() {\r\n        return this.state === ClientState.Running && !!this._resolvedConnection;\r\n    }\r\n    start() {\r\n        if (this._onReadyCallbacks.isUsed) {\r\n            this._onReady = new Promise((resolve, reject) => {\r\n                this._onReadyCallbacks = new OnReady(resolve, reject);\r\n            });\r\n        }\r\n        this._listeners = [];\r\n        this._providers = [];\r\n        // If we restart then the diagnostics collection is reused.\r\n        if (!this._diagnostics) {\r\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\r\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\r\n                : vscode_1.languages.createDiagnosticCollection();\r\n        }\r\n        this.state = ClientState.Starting;\r\n        this.resolveConnection().then((connection) => {\r\n            connection.onLogMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        this.error(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        this.warn(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        this.info(message.message);\r\n                        break;\r\n                    default:\r\n                        this.outputChannel.appendLine(message.message);\r\n                }\r\n            });\r\n            connection.onShowMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        vscode_1.window.showErrorMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        vscode_1.window.showWarningMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                        break;\r\n                    default:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                }\r\n            });\r\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\r\n                let messageFunc;\r\n                switch (params.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        messageFunc = vscode_1.window.showErrorMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        messageFunc = vscode_1.window.showWarningMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                        break;\r\n                    default:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                }\r\n                let actions = params.actions || [];\r\n                return messageFunc(params.message, ...actions);\r\n            });\r\n            connection.onTelemetry((data) => {\r\n                this._telemetryEmitter.fire(data);\r\n            });\r\n            connection.listen();\r\n            // Error is handled in the initialize call.\r\n            return this.initialize(connection);\r\n        }).then(undefined, (error) => {\r\n            this.state = ClientState.StartFailed;\r\n            this._onReadyCallbacks.reject(error);\r\n            this.error('Starting client failed', error);\r\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\r\n        });\r\n        return new vscode_1.Disposable(() => {\r\n            if (this.needsStop()) {\r\n                this.stop();\r\n            }\r\n        });\r\n    }\r\n    resolveConnection() {\r\n        if (!this._connectionPromise) {\r\n            this._connectionPromise = this.createConnection();\r\n        }\r\n        return this._connectionPromise;\r\n    }\r\n    initialize(connection) {\r\n        this.refreshTrace(connection, false);\r\n        let initOption = this._clientOptions.initializationOptions;\r\n        let rootPath = this._clientOptions.workspaceFolder\r\n            ? this._clientOptions.workspaceFolder.uri.fsPath\r\n            : this._clientGetRootPath();\r\n        let initParams = {\r\n            processId: process.pid,\r\n            clientInfo: {\r\n                name: 'vscode',\r\n                version: vscode_1.version\r\n            },\r\n            rootPath: rootPath ? rootPath : null,\r\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\r\n            capabilities: this.computeClientCapabilities(),\r\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\r\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\r\n            workspaceFolders: null\r\n        };\r\n        this.fillInitializeParams(initParams);\r\n        if (this._clientOptions.progressOnInitialization) {\r\n            const token = UUID.generateUuid();\r\n            const part = new progressPart_1.ProgressPart(connection, token);\r\n            initParams.workDoneToken = token;\r\n            return this.doInitialize(connection, initParams).then((result) => {\r\n                part.done();\r\n                return result;\r\n            }, (error) => {\r\n                part.cancel();\r\n                throw error;\r\n            });\r\n        }\r\n        else {\r\n            return this.doInitialize(connection, initParams);\r\n        }\r\n    }\r\n    doInitialize(connection, initParams) {\r\n        return connection.initialize(initParams).then((result) => {\r\n            this._resolvedConnection = connection;\r\n            this._initializeResult = result;\r\n            this.state = ClientState.Running;\r\n            let textDocumentSyncOptions = undefined;\r\n            if (Is.number(result.capabilities.textDocumentSync)) {\r\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: false,\r\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\r\n                        save: undefined\r\n                    };\r\n                }\r\n                else {\r\n                    textDocumentSyncOptions = {\r\n                        openClose: true,\r\n                        change: result.capabilities.textDocumentSync,\r\n                        save: {\r\n                            includeText: false\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\r\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\r\n            }\r\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\r\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\r\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\r\n            this.hookFileEvents(connection);\r\n            this.hookConfigurationChanged(connection);\r\n            this.initializeFeatures(connection);\r\n            this._onReadyCallbacks.resolve();\r\n            return result;\r\n        }).then(undefined, (error) => {\r\n            if (this._clientOptions.initializationFailedHandler) {\r\n                if (this._clientOptions.initializationFailedHandler(error)) {\r\n                    this.initialize(connection);\r\n                }\r\n                else {\r\n                    this.stop();\r\n                    this._onReadyCallbacks.reject(error);\r\n                }\r\n            }\r\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\r\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: 'retry' }).then(item => {\r\n                    if (item && item.id === 'retry') {\r\n                        this.initialize(connection);\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                        this._onReadyCallbacks.reject(error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (error && error.message) {\r\n                    vscode_1.window.showErrorMessage(error.message);\r\n                }\r\n                this.error('Server initialization failed.', error);\r\n                this.stop();\r\n                this._onReadyCallbacks.reject(error);\r\n            }\r\n            throw error;\r\n        });\r\n    }\r\n    _clientGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    stop() {\r\n        this._initializeResult = undefined;\r\n        if (!this._connectionPromise) {\r\n            this.state = ClientState.Stopped;\r\n            return Promise.resolve();\r\n        }\r\n        if (this.state === ClientState.Stopping && this._onStop) {\r\n            return this._onStop;\r\n        }\r\n        this.state = ClientState.Stopping;\r\n        this.cleanUp(false);\r\n        // unhook listeners\r\n        return this._onStop = this.resolveConnection().then(connection => {\r\n            return connection.shutdown().then(() => {\r\n                connection.exit();\r\n                connection.dispose();\r\n                this.state = ClientState.Stopped;\r\n                this.cleanUpChannel();\r\n                this._onStop = undefined;\r\n                this._connectionPromise = undefined;\r\n                this._resolvedConnection = undefined;\r\n            });\r\n        });\r\n    }\r\n    cleanUp(channel = true, diagnostics = true) {\r\n        if (this._listeners) {\r\n            this._listeners.forEach(listener => listener.dispose());\r\n            this._listeners = undefined;\r\n        }\r\n        if (this._providers) {\r\n            this._providers.forEach(provider => provider.dispose());\r\n            this._providers = undefined;\r\n        }\r\n        if (this._syncedDocuments) {\r\n            this._syncedDocuments.clear();\r\n        }\r\n        for (let handler of this._dynamicFeatures.values()) {\r\n            handler.dispose();\r\n        }\r\n        if (channel) {\r\n            this.cleanUpChannel();\r\n        }\r\n        if (diagnostics && this._diagnostics) {\r\n            this._diagnostics.dispose();\r\n            this._diagnostics = undefined;\r\n        }\r\n    }\r\n    cleanUpChannel() {\r\n        if (this._outputChannel && this._disposeOutputChannel) {\r\n            this._outputChannel.dispose();\r\n            this._outputChannel = undefined;\r\n        }\r\n    }\r\n    notifyFileEvent(event) {\r\n        var _a;\r\n        const client = this;\r\n        function didChangeWatchedFile(event) {\r\n            client._fileEvents.push(event);\r\n            client._fileEventDelayer.trigger(() => {\r\n                client.onReady().then(() => {\r\n                    client.resolveConnection().then(connection => {\r\n                        if (client.isConnectionActive()) {\r\n                            client.forceDocumentSync();\r\n                            connection.didChangeWatchedFiles({ changes: client._fileEvents });\r\n                        }\r\n                        client._fileEvents = [];\r\n                    });\r\n                }, (error) => {\r\n                    client.error(`Notify file events failed.`, error);\r\n                });\r\n            });\r\n        }\r\n        const workSpaceMiddleware = (_a = this.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\r\n        (workSpaceMiddleware === null || workSpaceMiddleware === void 0 ? void 0 : workSpaceMiddleware.didChangeWatchedFile) ? workSpaceMiddleware.didChangeWatchedFile(event, didChangeWatchedFile) : didChangeWatchedFile(event);\r\n    }\r\n    forceDocumentSync() {\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\r\n    }\r\n    handleDiagnostics(params) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        let uri = this._p2c.asUri(params.uri);\r\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\r\n        let middleware = this.clientOptions.middleware;\r\n        if (middleware.handleDiagnostics) {\r\n            middleware.handleDiagnostics(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\r\n        }\r\n        else {\r\n            this.setDiagnostics(uri, diagnostics);\r\n        }\r\n    }\r\n    setDiagnostics(uri, diagnostics) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        this._diagnostics.set(uri, diagnostics);\r\n    }\r\n    createConnection() {\r\n        let errorHandler = (error, message, count) => {\r\n            this.handleConnectionError(error, message, count);\r\n        };\r\n        let closeHandler = () => {\r\n            this.handleConnectionClosed();\r\n        };\r\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\r\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\r\n        });\r\n    }\r\n    handleConnectionClosed() {\r\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\r\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\r\n            return;\r\n        }\r\n        try {\r\n            if (this._resolvedConnection) {\r\n                this._resolvedConnection.dispose();\r\n            }\r\n        }\r\n        catch (error) {\r\n            // Disposing a connection could fail if error cases.\r\n        }\r\n        let action = CloseAction.DoNotRestart;\r\n        try {\r\n            action = this._clientOptions.errorHandler.closed();\r\n        }\r\n        catch (error) {\r\n            // Ignore errors coming from the error handler.\r\n        }\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        if (action === CloseAction.DoNotRestart) {\r\n            this.error('Connection to server got closed. Server will not be restarted.');\r\n            this.state = ClientState.Stopped;\r\n            this.cleanUp(false, true);\r\n        }\r\n        else if (action === CloseAction.Restart) {\r\n            this.info('Connection to server got closed. Server will restart.');\r\n            this.cleanUp(false, false);\r\n            this.state = ClientState.Initial;\r\n            this.start();\r\n        }\r\n    }\r\n    handleConnectionError(error, message, count) {\r\n        let action = this._clientOptions.errorHandler.error(error, message, count);\r\n        if (action === ErrorAction.Shutdown) {\r\n            this.error('Connection to server is erroring. Shutting down server.');\r\n            this.stop();\r\n        }\r\n    }\r\n    hookConfigurationChanged(connection) {\r\n        vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.refreshTrace(connection, true);\r\n        });\r\n    }\r\n    refreshTrace(connection, sendNotification = false) {\r\n        let config = vscode_1.workspace.getConfiguration(this._id);\r\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\r\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\r\n        if (config) {\r\n            const traceConfig = config.get('trace.server', 'off');\r\n            if (typeof traceConfig === 'string') {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\r\n            }\r\n            else {\r\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\r\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\r\n            }\r\n        }\r\n        this._trace = trace;\r\n        this._traceFormat = traceFormat;\r\n        connection.trace(this._trace, this._tracer, {\r\n            sendNotification,\r\n            traceFormat: this._traceFormat\r\n        });\r\n    }\r\n    hookFileEvents(_connection) {\r\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\r\n        if (!fileEvents) {\r\n            return;\r\n        }\r\n        let watchers;\r\n        if (Is.array(fileEvents)) {\r\n            watchers = fileEvents;\r\n        }\r\n        else {\r\n            watchers = [fileEvents];\r\n        }\r\n        if (!watchers) {\r\n            return;\r\n        }\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\r\n    }\r\n    registerFeatures(features) {\r\n        for (let feature of features) {\r\n            this.registerFeature(feature);\r\n        }\r\n    }\r\n    registerFeature(feature) {\r\n        this._features.push(feature);\r\n        if (DynamicFeature.is(feature)) {\r\n            let messages = feature.messages;\r\n            if (Array.isArray(messages)) {\r\n                for (let message of messages) {\r\n                    this._method2Message.set(message.method, message);\r\n                    this._dynamicFeatures.set(message.method, feature);\r\n                }\r\n            }\r\n            else {\r\n                this._method2Message.set(messages.method, messages);\r\n                this._dynamicFeatures.set(messages.method, feature);\r\n            }\r\n        }\r\n    }\r\n    getFeature(request) {\r\n        return this._dynamicFeatures.get(request);\r\n    }\r\n    registerBuiltinFeatures() {\r\n        this.registerFeature(new ConfigurationFeature(this));\r\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\r\n        this.registerFeature(new WillSaveFeature(this));\r\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\r\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\r\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\r\n        this.registerFeature(new CompletionItemFeature(this));\r\n        this.registerFeature(new HoverFeature(this));\r\n        this.registerFeature(new SignatureHelpFeature(this));\r\n        this.registerFeature(new DefinitionFeature(this));\r\n        this.registerFeature(new ReferencesFeature(this));\r\n        this.registerFeature(new DocumentHighlightFeature(this));\r\n        this.registerFeature(new DocumentSymbolFeature(this));\r\n        this.registerFeature(new WorkspaceSymbolFeature(this));\r\n        this.registerFeature(new CodeActionFeature(this));\r\n        this.registerFeature(new CodeLensFeature(this));\r\n        this.registerFeature(new DocumentFormattingFeature(this));\r\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\r\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\r\n        this.registerFeature(new RenameFeature(this));\r\n        this.registerFeature(new DocumentLinkFeature(this));\r\n        this.registerFeature(new ExecuteCommandFeature(this));\r\n    }\r\n    fillInitializeParams(params) {\r\n        for (let feature of this._features) {\r\n            if (Is.func(feature.fillInitializeParams)) {\r\n                feature.fillInitializeParams(params);\r\n            }\r\n        }\r\n    }\r\n    computeClientCapabilities() {\r\n        let result = {};\r\n        ensure(result, 'workspace').applyEdit = true;\r\n        let workspaceEdit = ensure(ensure(result, 'workspace'), 'workspaceEdit');\r\n        workspaceEdit.documentChanges = true;\r\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\r\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\r\n        let diagnostics = ensure(ensure(result, 'textDocument'), 'publishDiagnostics');\r\n        diagnostics.relatedInformation = true;\r\n        diagnostics.versionSupport = false;\r\n        diagnostics.tagSupport = { valueSet: [vscode_languageserver_protocol_1.DiagnosticTag.Unnecessary, vscode_languageserver_protocol_1.DiagnosticTag.Deprecated] };\r\n        for (let feature of this._features) {\r\n            feature.fillClientCapabilities(result);\r\n        }\r\n        return result;\r\n    }\r\n    initializeFeatures(_connection) {\r\n        let documentSelector = this._clientOptions.documentSelector;\r\n        for (let feature of this._features) {\r\n            feature.initialize(this._capabilities, documentSelector);\r\n        }\r\n    }\r\n    handleRegistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let registration of params.registrations) {\r\n                const feature = this._dynamicFeatures.get(registration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\r\n                    return;\r\n                }\r\n                const options = registration.registerOptions || {};\r\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\r\n                const data = {\r\n                    id: registration.id,\r\n                    registerOptions: options\r\n                };\r\n                feature.register(this._method2Message.get(registration.method), data);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    handleUnregistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let unregistration of params.unregisterations) {\r\n                const feature = this._dynamicFeatures.get(unregistration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\r\n                    return;\r\n                }\r\n                feature.unregister(unregistration.id);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    handleApplyWorkspaceEdit(params) {\r\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\r\n        // However doing it here adds some safety since the server can lag more behind then an extension.\r\n        let workspaceEdit = params.edit;\r\n        let openTextDocuments = new Map();\r\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\r\n        let versionMismatch = false;\r\n        if (workspaceEdit.documentChanges) {\r\n            for (const change of workspaceEdit.documentChanges) {\r\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\r\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\r\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\r\n                        versionMismatch = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (versionMismatch) {\r\n            return Promise.resolve({ applied: false });\r\n        }\r\n        return Is.asPromise(vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; }));\r\n    }\r\n    logFailedRequest(type, error) {\r\n        // If we get a request cancel or a content modified don't log anything.\r\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && (error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled || error.code === vscode_languageserver_protocol_1.ErrorCodes.ContentModified)) {\r\n            return;\r\n        }\r\n        this.error(`Request ${type.method} failed.`, error);\r\n    }\r\n}\r\nexports.BaseLanguageClient = BaseLanguageClient;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nvar ProgressNotification;\r\n(function (ProgressNotification) {\r\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\r\n})(ProgressNotification || (ProgressNotification = {}));\r\nclass ProgressType {\r\n    constructor() {\r\n    }\r\n}\r\nexports.ProgressType = ProgressType;\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        if (!Is.string(value)) {\r\n            return Trace.Off;\r\n        }\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let progressHandlers = new Map();\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let unhandledProgressEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        onProgress: (_type, token, handler) => {\r\n            if (progressHandlers.has(token)) {\r\n                throw new Error(`Progress handler for token ${token} already registered`);\r\n            }\r\n            progressHandlers.set(token, handler);\r\n            return {\r\n                dispose: () => {\r\n                    progressHandlers.delete(token);\r\n                }\r\n            };\r\n        },\r\n        sendProgress: (_type, token, value) => {\r\n            connection.sendNotification(ProgressNotification.type, { token, value });\r\n        },\r\n        onUnhandledProgress: unhandledProgressEmitter.event,\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            // eslint-disable-next-line no-console\r\n            console.log('inspect');\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    connection.onNotification(ProgressNotification.type, (params) => {\r\n        const handler = progressHandlers.get(params.token);\r\n        if (handler) {\r\n            handler(params.value);\r\n        }\r\n        else {\r\n            unhandledProgressEmitter.fire(params);\r\n        }\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./Constants\"));\r\n__export(require(\"./Generated\"));\r\n__export(require(\"./TelemetryTypes\"));\r\n//# sourceMappingURL=index.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nmodule.exports = Domain;\r\n//# sourceMappingURL=Domain.js.map","\"use strict\";\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar url = require(\"url\");\r\nvar constants = require(\"constants\");\r\nvar Logging = require(\"./Logging\");\r\nvar RequestResponseHeaders = require(\"./RequestResponseHeaders\");\r\nvar Util = (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (name, cookie) {\r\n        var value = \"\";\r\n        if (name && name.length && typeof cookie === \"string\") {\r\n            var cookieName = name + \"=\";\r\n            var cookies = cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (typeof str === \"string\") {\r\n            return str.replace(/^\\s+|\\s+$/g, \"\");\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    };\r\n    /**\r\n     * Convert an array of int32 to Base64 (no '==' at the end).\r\n     * MSB first.\r\n     */\r\n    Util.int32ArrayToBase64 = function (array) {\r\n        var toChar = function (v, i) {\r\n            return String.fromCharCode((v >> i) & 0xFF);\r\n        };\r\n        var int32AsString = function (v) {\r\n            return toChar(v, 24) + toChar(v, 16) + toChar(v, 8) + toChar(v, 0);\r\n        };\r\n        var x = array.map(int32AsString).join(\"\");\r\n        var b = Buffer.from ? Buffer.from(x, \"binary\") : new Buffer(x, \"binary\");\r\n        var s = b.toString(\"base64\");\r\n        return s.substr(0, s.indexOf(\"=\"));\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (0x00000000..0xFFFFFFFF).\r\n     */\r\n    Util.randomu32 = function () {\r\n        return Util.random32() + 0x80000000;\r\n    };\r\n    /**\r\n     * generate W3C-compatible trace id\r\n     * https://github.com/w3c/distributed-tracing/blob/master/trace_context/HTTP_HEADER_FORMAT.md#trace-id\r\n     */\r\n    Util.w3cTraceId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return obj instanceof Error;\r\n    };\r\n    Util.isPrimitive = function (input) {\r\n        var propType = typeof input;\r\n        return propType === \"string\" || propType === \"number\" || propType === \"boolean\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        var sec = ((totalms / 1000) % 60).toFixed(7).replace(/0{0,4}$/, \"\");\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        sec = sec.indexOf(\".\") < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        var daysText = days > 0 ? days + \".\" : \"\";\r\n        return daysText + hour + \":\" + min + \":\" + sec;\r\n    };\r\n    /**\r\n     * Using JSON.stringify, by default Errors do not serialize to something useful:\r\n     * Simplify a generic Node Error into a simpler map for customDimensions\r\n     * Custom errors can still implement toJSON to override this functionality\r\n     */\r\n    Util.extractError = function (err) {\r\n        // Error is often subclassed so may have code OR id properties:\r\n        // https://nodejs.org/api/errors.html#errors_error_code\r\n        var looseError = err;\r\n        return {\r\n            message: err.message,\r\n            code: looseError.code || looseError.id || \"\",\r\n        };\r\n    };\r\n    /**\r\n     * Manually call toJSON if available to pre-convert the value.\r\n     * If a primitive is returned, then the consumer of this function can skip JSON.stringify.\r\n     * This avoids double escaping of quotes for Date objects, for example.\r\n     */\r\n    Util.extractObject = function (origProperty) {\r\n        if (origProperty instanceof Error) {\r\n            return Util.extractError(origProperty);\r\n        }\r\n        if (typeof origProperty.toJSON === \"function\") {\r\n            return origProperty.toJSON();\r\n        }\r\n        return origProperty;\r\n    };\r\n    /**\r\n     * Validate that an object is of type { [key: string]: string }\r\n     */\r\n    Util.validateStringMap = function (obj) {\r\n        if (typeof obj !== \"object\") {\r\n            Logging.info(\"Invalid properties dropped from payload\");\r\n            return;\r\n        }\r\n        var map = {};\r\n        for (var field in obj) {\r\n            var property = '';\r\n            var origProperty = obj[field];\r\n            var propType = typeof origProperty;\r\n            if (Util.isPrimitive(origProperty)) {\r\n                property = origProperty.toString();\r\n            }\r\n            else if (origProperty === null || propType === \"undefined\") {\r\n                property = \"\";\r\n            }\r\n            else if (propType === \"function\") {\r\n                Logging.info(\"key: \" + field + \" was function; will not serialize\");\r\n                continue;\r\n            }\r\n            else {\r\n                var stringTarget = Util.isArray(origProperty) ? origProperty : Util.extractObject(origProperty);\r\n                try {\r\n                    if (Util.isPrimitive(stringTarget)) {\r\n                        property = stringTarget;\r\n                    }\r\n                    else {\r\n                        property = JSON.stringify(stringTarget);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    property = origProperty.constructor.name.toString() + \" (Error: \" + e.message + \")\";\r\n                    Logging.info(\"key: \" + field + \", could not be serialized\");\r\n                }\r\n            }\r\n            map[field] = property.substring(0, Util.MAX_PROPERTY_LENGTH);\r\n        }\r\n        return map;\r\n    };\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list\r\n     * and if it is safe to add correlation headers\r\n     */\r\n    Util.canIncludeCorrelationHeader = function (client, requestUrl) {\r\n        var excludedDomains = client && client.config && client.config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length == 0 || !requestUrl) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(url.parse(requestUrl).hostname)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Util.getCorrelationContextTarget = function (response, key) {\r\n        var contextHeaders = response.headers && response.headers[RequestResponseHeaders.requestContextHeader];\r\n        if (contextHeaders) {\r\n            var keyValues = contextHeaders.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length == 2 && keyValue[0] == key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Generate request\r\n     *\r\n     * Proxify the request creation to handle proxy http\r\n     *\r\n     * @param {string} requestUrl url endpoint\r\n     * @param {Object} requestOptions Request option\r\n     * @param {Function} requestCallback callback on request\r\n     * @returns {http.ClientRequest} request object\r\n     */\r\n    Util.makeRequest = function (config, requestUrl, requestOptions, requestCallback) {\r\n        if (requestUrl && requestUrl.indexOf('//') === 0) {\r\n            requestUrl = 'https:' + requestUrl;\r\n        }\r\n        var requestUrlParsed = url.parse(requestUrl);\r\n        var options = __assign({}, requestOptions, { host: requestUrlParsed.hostname, port: requestUrlParsed.port, path: requestUrlParsed.pathname });\r\n        var proxyUrl = undefined;\r\n        if (requestUrlParsed.protocol === 'https:') {\r\n            proxyUrl = config.proxyHttpsUrl || undefined;\r\n        }\r\n        if (requestUrlParsed.protocol === 'http:') {\r\n            proxyUrl = config.proxyHttpUrl || undefined;\r\n        }\r\n        if (proxyUrl) {\r\n            if (proxyUrl.indexOf('//') === 0) {\r\n                proxyUrl = 'http:' + proxyUrl;\r\n            }\r\n            var proxyUrlParsed = url.parse(proxyUrl);\r\n            // https is not supported at the moment\r\n            if (proxyUrlParsed.protocol === 'https:') {\r\n                Logging.info(\"Proxies that use HTTPS are not supported\");\r\n                proxyUrl = undefined;\r\n            }\r\n            else {\r\n                options = __assign({}, options, { host: proxyUrlParsed.hostname, port: proxyUrlParsed.port || \"80\", path: requestUrl, headers: __assign({}, options.headers, { Host: requestUrlParsed.hostname }) });\r\n            }\r\n        }\r\n        var isHttps = requestUrlParsed.protocol === 'https:' && !proxyUrl;\r\n        if (isHttps && config.httpsAgent !== undefined) {\r\n            options.agent = config.httpsAgent;\r\n        }\r\n        else if (!isHttps && config.httpAgent !== undefined) {\r\n            options.agent = config.httpAgent;\r\n        }\r\n        else if (isHttps) {\r\n            // HTTPS without a passed in agent. Use one that enforces our TLS rules\r\n            options.agent = Util.tlsRestrictedAgent;\r\n        }\r\n        if (isHttps) {\r\n            return https.request(options, requestCallback);\r\n        }\r\n        else {\r\n            return http.request(options, requestCallback);\r\n        }\r\n    };\r\n    ;\r\n    Util.MAX_PROPERTY_LENGTH = 8192;\r\n    Util.tlsRestrictedAgent = new https.Agent({\r\n        secureOptions: constants.SSL_OP_NO_SSLv2 | constants.SSL_OP_NO_SSLv3 |\r\n            constants.SSL_OP_NO_TLSv1 | constants.SSL_OP_NO_TLSv1_1\r\n    });\r\n    return Util;\r\n}());\r\nmodule.exports = Util;\r\n//# sourceMappingURL=Util.js.map","module.exports = require(\"fs\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","module.exports = require(\"os\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\nfunction asPromise(value) {\r\n    if (value instanceof Promise) {\r\n        return value;\r\n    }\r\n    else if (thenable(value)) {\r\n        return new Promise((resolve, reject) => {\r\n            value.then((resolved) => resolve(resolved), (error) => reject(error));\r\n        });\r\n    }\r\n    else {\r\n        return Promise.resolve(value);\r\n    }\r\n}\r\nexports.asPromise = asPromise;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Logging = require(\"../Library/Logging\");\r\nvar DiagChannel = require(\"./diagnostic-channel/initialization\");\r\nvar CorrelationContextManager = (function () {\r\n    function CorrelationContextManager() {\r\n    }\r\n    /**\r\n     *  Provides the current Context.\r\n     *  The context is the most recent one entered into for the current\r\n     *  logical chain of execution, including across asynchronous calls.\r\n     */\r\n    CorrelationContextManager.getCurrentContext = function () {\r\n        if (!CorrelationContextManager.enabled) {\r\n            return null;\r\n        }\r\n        return Zone.current.get(\"context\");\r\n    };\r\n    /**\r\n     *  A helper to generate objects conforming to the CorrelationContext interface\r\n     */\r\n    CorrelationContextManager.generateContextObject = function (operationId, parentId, operationName, correlationContextHeader) {\r\n        parentId = parentId || operationId;\r\n        if (this.enabled) {\r\n            return {\r\n                operation: {\r\n                    name: operationName,\r\n                    id: operationId,\r\n                    parentId: parentId\r\n                },\r\n                customProperties: new CustomPropertiesImpl(correlationContextHeader)\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Runs a function inside a given Context.\r\n     *  All logical children of the execution path that entered this Context\r\n     *  will receive this Context object on calls to GetCurrentContext.\r\n     */\r\n    CorrelationContextManager.runWithContext = function (context, fn) {\r\n        if (CorrelationContextManager.enabled) {\r\n            var newZone = Zone.current.fork({\r\n                name: \"AI-\" + ((context && context.operation.parentId) || \"Unknown\"),\r\n                properties: { context: context }\r\n            });\r\n            newZone.run(fn);\r\n        }\r\n        else {\r\n            fn();\r\n        }\r\n    };\r\n    /**\r\n     *  Patches a callback to restore the correct Context when getCurrentContext\r\n     *  is run within it. This is necessary if automatic correlation fails to work\r\n     *  with user-included libraries.\r\n     *\r\n     *  The supplied callback will be given the same context that was present for\r\n     *  the call to wrapCallback.  */\r\n    CorrelationContextManager.wrapCallback = function (fn) {\r\n        if (CorrelationContextManager.enabled) {\r\n            return Zone.current.wrap(fn, \"User-wrapped method\");\r\n        }\r\n        return fn;\r\n    };\r\n    /**\r\n     *  Enables the CorrelationContextManager.\r\n     */\r\n    CorrelationContextManager.enable = function () {\r\n        if (this.enabled) {\r\n            return;\r\n        }\r\n        if (!this.isNodeVersionCompatible()) {\r\n            this.enabled = false;\r\n            return;\r\n        }\r\n        // Run patches for Zone.js\r\n        if (!CorrelationContextManager.hasEverEnabled) {\r\n            this.hasEverEnabled = true;\r\n            // Load in Zone.js\r\n            try {\r\n                // Require zone if we can't detect its presence - guarded because of issue #346\r\n                // Note that usually multiple requires of zone.js does not error - but we see reports of it happening\r\n                // in the Azure Functions environment.\r\n                // This indicates that the file is being included multiple times in the same global scope,\r\n                // averting require's cache somehow.\r\n                if (typeof Zone === \"undefined\") {\r\n                    require(\"zone.js\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Zone was already loaded even though we couldn't find its global variable\r\n                Logging.warn(\"Failed to require zone.js\");\r\n            }\r\n            DiagChannel.registerContextPreservation(function (cb) {\r\n                return Zone.current.wrap(cb, \"AI-ContextPreservation\");\r\n            });\r\n            this.patchError();\r\n            this.patchTimers([\"setTimeout\", \"setInterval\"]);\r\n        }\r\n        this.enabled = true;\r\n    };\r\n    /**\r\n     *  Disables the CorrelationContextManager.\r\n     */\r\n    CorrelationContextManager.disable = function () {\r\n        this.enabled = false;\r\n    };\r\n    /**\r\n     *  Reports if the CorrelationContextManager is able to run in this environment\r\n     */\r\n    CorrelationContextManager.isNodeVersionCompatible = function () {\r\n        // Unit tests warn of errors < 3.3 from timer patching. All versions before 4 were 0.x\r\n        var nodeVer = process.versions.node.split(\".\");\r\n        return parseInt(nodeVer[0]) > 3 || (parseInt(nodeVer[0]) > 2 && parseInt(nodeVer[1]) > 2);\r\n    };\r\n    // Zone.js breaks concatenation of timer return values.\r\n    // This fixes that.\r\n    CorrelationContextManager.patchTimers = function (methodNames) {\r\n        methodNames.forEach(function (methodName) {\r\n            var orig = global[methodName];\r\n            global[methodName] = function () {\r\n                var ret = orig.apply(this, arguments);\r\n                ret.toString = function () {\r\n                    if (this.data && typeof this.data.handleId !== 'undefined') {\r\n                        return this.data.handleId.toString();\r\n                    }\r\n                    else {\r\n                        return Object.prototype.toString.call(this);\r\n                    }\r\n                };\r\n                return ret;\r\n            };\r\n        });\r\n    };\r\n    // Zone.js breaks deepEqual on error objects (by making internal properties enumerable).\r\n    // This fixes that by subclassing the error object and making all properties not enumerable\r\n    CorrelationContextManager.patchError = function () {\r\n        var orig = global.Error;\r\n        // New error handler\r\n        function AppInsightsAsyncCorrelatedErrorWrapper() {\r\n            if (!(this instanceof AppInsightsAsyncCorrelatedErrorWrapper)) {\r\n                return AppInsightsAsyncCorrelatedErrorWrapper.apply(Object.create(AppInsightsAsyncCorrelatedErrorWrapper.prototype), arguments);\r\n            }\r\n            // Is this object set to rewrite the stack?\r\n            // If so, we should turn off some Zone stuff that is prone to break\r\n            var stackRewrite = orig.stackRewrite;\r\n            if (orig.prepareStackTrace) {\r\n                orig.stackRewrite = false;\r\n                var stackTrace = orig.prepareStackTrace;\r\n                orig.prepareStackTrace = function (e, s) {\r\n                    // Remove some AI and Zone methods from the stack trace\r\n                    // Otherwise we leave side-effects\r\n                    // Algorithm is to find the first frame on the stack after the first instance(s)\r\n                    // of AutoCollection/CorrelationContextManager\r\n                    // Eg. this should return the User frame on an array like below:\r\n                    //  Zone | Zone | CorrelationContextManager | CorrelationContextManager | User\r\n                    var foundOne = false;\r\n                    for (var i = 0; i < s.length; i++) {\r\n                        var fileName = s[i].getFileName();\r\n                        if (fileName) {\r\n                            if (fileName.indexOf(\"AutoCollection/CorrelationContextManager\") === -1 &&\r\n                                fileName.indexOf(\"AutoCollection\\\\CorrelationContextManager\") === -1) {\r\n                                if (foundOne) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                foundOne = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Loop above goes one extra step\r\n                    i = Math.max(0, i - 1);\r\n                    if (foundOne) {\r\n                        s.splice(0, i);\r\n                    }\r\n                    return stackTrace(e, s);\r\n                };\r\n            }\r\n            // Apply the error constructor\r\n            orig.apply(this, arguments);\r\n            // Restore Zone stack rewriting settings\r\n            orig.stackRewrite = stackRewrite;\r\n            // Remove unexpected bits from stack trace\r\n            if (this.stack && typeof this.stack === \"string\") {\r\n                var stackFrames = this.stack.split(\"\\n\");\r\n                // Remove this class\r\n                if (stackFrames.length > 3) {\r\n                    if (stackFrames[2].trim().indexOf(\"at Error.AppInsightsAsyncCorrelatedErrorWrapper\") === 0) {\r\n                        stackFrames.splice(2, 1);\r\n                    }\r\n                    else if (stackFrames[1].trim().indexOf(\"at AppInsightsAsyncCorrelatedErrorWrapper.ZoneAwareError\") === 0\r\n                        && stackFrames[2].trim().indexOf(\"at new AppInsightsAsyncCorrelatedErrorWrapper\") === 0) {\r\n                        stackFrames.splice(1, 2);\r\n                    }\r\n                }\r\n                // Remove AI correlation ids\r\n                this.stack = stackFrames.map(function (v) {\r\n                    var startIndex = v.indexOf(\") [\");\r\n                    if (startIndex > -1) {\r\n                        v = v.substr(0, startIndex + 1);\r\n                    }\r\n                    return v;\r\n                }).join(\"\\n\");\r\n            }\r\n            // getOwnPropertyNames should be a superset of Object.keys...\r\n            // This appears to not always be the case\r\n            var props = Object.getOwnPropertyNames(this).concat(Object.keys(this));\r\n            // Zone.js will automatically create some hidden properties at read time.\r\n            // We need to proactively make those not enumerable as well as the currently visible properties\r\n            for (var i = 0; i < props.length; i++) {\r\n                var propertyName = props[i];\r\n                var hiddenPropertyName = Zone['__symbol__'](propertyName);\r\n                Object.defineProperty(this, propertyName, { enumerable: false });\r\n                Object.defineProperty(this, hiddenPropertyName, { enumerable: false, writable: true });\r\n            }\r\n            return this;\r\n        }\r\n        // Inherit from the Zone.js error handler\r\n        AppInsightsAsyncCorrelatedErrorWrapper.prototype = orig.prototype;\r\n        // We need this loop to copy outer methods like Error.captureStackTrace\r\n        var props = Object.getOwnPropertyNames(orig);\r\n        for (var i = 0; i < props.length; i++) {\r\n            var propertyName = props[i];\r\n            if (!AppInsightsAsyncCorrelatedErrorWrapper[propertyName]) {\r\n                Object.defineProperty(AppInsightsAsyncCorrelatedErrorWrapper, propertyName, Object.getOwnPropertyDescriptor(orig, propertyName));\r\n            }\r\n        }\r\n        // explicit cast to <any> required to avoid type error for captureStackTrace\r\n        // with latest node.d.ts (despite workaround above)\r\n        global.Error = AppInsightsAsyncCorrelatedErrorWrapper;\r\n    };\r\n    CorrelationContextManager.enabled = false;\r\n    CorrelationContextManager.hasEverEnabled = false;\r\n    return CorrelationContextManager;\r\n}());\r\nexports.CorrelationContextManager = CorrelationContextManager;\r\nvar CustomPropertiesImpl = (function () {\r\n    function CustomPropertiesImpl(header) {\r\n        this.props = [];\r\n        this.addHeaderData(header);\r\n    }\r\n    CustomPropertiesImpl.prototype.addHeaderData = function (header) {\r\n        var keyvals = header ? header.split(\", \") : [];\r\n        this.props = keyvals.map(function (keyval) {\r\n            var parts = keyval.split(\"=\");\r\n            return { key: parts[0], value: parts[1] };\r\n        }).concat(this.props);\r\n    };\r\n    CustomPropertiesImpl.prototype.serializeToHeader = function () {\r\n        return this.props.map(function (keyval) {\r\n            return keyval.key + \"=\" + keyval.value;\r\n        }).join(\", \");\r\n    };\r\n    CustomPropertiesImpl.prototype.getProperty = function (prop) {\r\n        for (var i = 0; i < this.props.length; ++i) {\r\n            var keyval = this.props[i];\r\n            if (keyval.key === prop) {\r\n                return keyval.value;\r\n            }\r\n        }\r\n        return;\r\n    };\r\n    // TODO: Strictly according to the spec, properties which are recieved from\r\n    // an incoming request should be left untouched, while we may add our own new\r\n    // properties. The logic here will need to change to track that.\r\n    CustomPropertiesImpl.prototype.setProperty = function (prop, val) {\r\n        if (CustomPropertiesImpl.bannedCharacters.test(prop) || CustomPropertiesImpl.bannedCharacters.test(val)) {\r\n            Logging.warn(\"Correlation context property keys and values must not contain ',' or '='. setProperty was called with key: \" + prop + \" and value: \" + val);\r\n            return;\r\n        }\r\n        for (var i = 0; i < this.props.length; ++i) {\r\n            var keyval = this.props[i];\r\n            if (keyval.key === prop) {\r\n                keyval.value = val;\r\n                return;\r\n            }\r\n        }\r\n        this.props.push({ key: prop, value: val });\r\n    };\r\n    CustomPropertiesImpl.bannedCharacters = /[,=]/;\r\n    return CustomPropertiesImpl;\r\n}());\r\n//# sourceMappingURL=CorrelationContextManager.js.map","\"use strict\";\r\nmodule.exports = {\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    requestContextHeader: \"request-context\",\r\n    /**\r\n     * Source instrumentation header that is added by an application while making http\r\n     * requests and retrieved by the other application when processing incoming requests.\r\n     */\r\n    requestContextSourceKey: \"appId\",\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    requestContextTargetKey: \"appId\",\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    requestIdHeader: \"request-id\",\r\n    /**\r\n     * Legacy Header containing the id of the immidiate caller\r\n     */\r\n    parentIdHeader: \"x-ms-request-id\",\r\n    /**\r\n     * Legacy Header containing the correlation id that kept the same for every telemetry item\r\n     * accross transactions\r\n     */\r\n    rootIdHeader: \"x-ms-request-root-id\",\r\n    /**\r\n     * Correlation-Context header\r\n     *\r\n     * Not currently actively used, but the contents should be passed from incoming to outgoing requests\r\n     */\r\n    correlationContextHeader: \"correlation-context\"\r\n};\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\nEmitter._noop = function () { };\r\n","module.exports = require(\"url\");","module.exports = require(\"child_process\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't received the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.socket.destroy();\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IsInitialized = !process.env[\"APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL\"];\r\nif (exports.IsInitialized) {\r\n    var publishers = require(\"diagnostic-channel-publishers\");\r\n    var individualOptOuts = process.env[\"APPLICATION_INSIGHTS_NO_PATCH_MODULES\"] || \"\";\r\n    var unpatchedModules = individualOptOuts.split(\",\");\r\n    var modules = {\r\n        bunyan: publishers.bunyan,\r\n        console: publishers.console,\r\n        mongodb: publishers.mongodb,\r\n        mongodbCore: publishers.mongodbCore,\r\n        mysql: publishers.mysql,\r\n        redis: publishers.redis,\r\n        pg: publishers.pg,\r\n        pgPool: publishers.pgPool,\r\n        winston: publishers.winston\r\n    };\r\n    for (var mod in modules) {\r\n        if (unpatchedModules.indexOf(mod) === -1) {\r\n            modules[mod].enable();\r\n        }\r\n    }\r\n}\r\nfunction registerContextPreservation(cb) {\r\n    if (!exports.IsInitialized) {\r\n        return;\r\n    }\r\n    require(\"diagnostic-channel\").channel.addContextPreservation(cb);\r\n}\r\nexports.registerContextPreservation = registerContextPreservation;\r\n//# sourceMappingURL=initialization.js.map","\"use strict\";\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar Logging = require(\"../Library/Logging\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar HttpDependencyParser = require(\"./HttpDependencyParser\");\r\nvar CorrelationContextManager_1 = require(\"./CorrelationContextManager\");\r\nvar DiagChannel = require(\"./diagnostic-channel/initialization\");\r\nvar AutoCollectHttpDependencies = (function () {\r\n    function AutoCollectHttpDependencies(client) {\r\n        if (!!AutoCollectHttpDependencies.INSTANCE) {\r\n            throw new Error(\"Client request tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectHttpDependencies.INSTANCE = this;\r\n        this._client = client;\r\n    }\r\n    AutoCollectHttpDependencies.prototype.enable = function (isEnabled) {\r\n        this._isEnabled = isEnabled;\r\n        if (this._isEnabled && !this._isInitialized) {\r\n            this._initialize();\r\n        }\r\n        if (DiagChannel.IsInitialized) {\r\n            require(\"./diagnostic-channel/mongodb.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/mysql.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/redis.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/postgres.sub\").enable(isEnabled, this._client);\r\n        }\r\n    };\r\n    AutoCollectHttpDependencies.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectHttpDependencies.prototype._initialize = function () {\r\n        var _this = this;\r\n        this._isInitialized = true;\r\n        var originalGet = http.get;\r\n        var originalRequest = http.request;\r\n        var originalHttpsRequest = https.request;\r\n        var clientRequestPatch = function (request, options) {\r\n            var shouldCollect = !options[AutoCollectHttpDependencies.disableCollectionRequestOption] &&\r\n                !request[AutoCollectHttpDependencies.alreadyAutoCollectedFlag];\r\n            request[AutoCollectHttpDependencies.alreadyAutoCollectedFlag] = true;\r\n            if (request && options && shouldCollect) {\r\n                AutoCollectHttpDependencies.trackRequest(_this._client, { options: options, request: request });\r\n            }\r\n        };\r\n        // On node >= v0.11.12 and < 9.0 (excluding 8.9.0) https.request just calls http.request (with additional options).\r\n        // On node < 0.11.12, 8.9.0, and 9.0 > https.request is handled separately\r\n        // Patch both and leave a flag to not double-count on versions that just call through\r\n        // We add the flag to both http and https to protect against strange double collection in other scenarios\r\n        http.request = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = originalRequest.call.apply(originalRequest, [http, options].concat(requestArgs));\r\n            clientRequestPatch(request, options);\r\n            return request;\r\n        };\r\n        https.request = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = originalHttpsRequest.call.apply(originalHttpsRequest, [https, options].concat(requestArgs));\r\n            clientRequestPatch(request, options);\r\n            return request;\r\n        };\r\n        // Node 8 calls http.request from http.get using a local reference!\r\n        // We have to patch .get manually in this case and can't just assume request is enough\r\n        // We have to replace the entire method in this case. We can't call the original.\r\n        // This is because calling the original will give us no chance to set headers as it internally does .end().\r\n        http.get = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = (_a = http.request).call.apply(_a, [http, options].concat(requestArgs));\r\n            request.end();\r\n            return request;\r\n            var _a;\r\n        };\r\n        https.get = function (options) {\r\n            var requestArgs = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                requestArgs[_i - 1] = arguments[_i];\r\n            }\r\n            var request = (_a = https.request).call.apply(_a, [https, options].concat(requestArgs));\r\n            request.end();\r\n            return request;\r\n            var _a;\r\n        };\r\n    };\r\n    /**\r\n     * Tracks an outgoing request. Because it may set headers this method must be called before\r\n     * writing content to or ending the request.\r\n     */\r\n    AutoCollectHttpDependencies.trackRequest = function (client, telemetry) {\r\n        if (!telemetry.options || !telemetry.request || !client) {\r\n            Logging.info(\"AutoCollectHttpDependencies.trackRequest was called with invalid parameters: \", !telemetry.options, !telemetry.request, !client);\r\n            return;\r\n        }\r\n        var requestParser = new HttpDependencyParser(telemetry.options, telemetry.request);\r\n        var currentContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        var uniqueRequestId = currentContext && currentContext.operation && (currentContext.operation.parentId + AutoCollectHttpDependencies.requestNumber++ + '.');\r\n        // Add the source correlationId to the request headers, if a value was not already provided.\r\n        // The getHeader/setHeader methods aren't available on very old Node versions, and\r\n        // are not included in the v0.10 type declarations currently used. So check if the\r\n        // methods exist before invoking them.\r\n        if (Util.canIncludeCorrelationHeader(client, requestParser.getUrl()) && telemetry.request.getHeader && telemetry.request.setHeader) {\r\n            if (client.config && client.config.correlationId) {\r\n                var correlationHeader = telemetry.request.getHeader(RequestResponseHeaders.requestContextHeader);\r\n                if (correlationHeader) {\r\n                    var components = correlationHeader.split(\",\");\r\n                    var key_1 = RequestResponseHeaders.requestContextSourceKey + \"=\";\r\n                    if (!components.some(function (value) { return value.substring(0, key_1.length) === key_1; })) {\r\n                        telemetry.request.setHeader(RequestResponseHeaders.requestContextHeader, correlationHeader + \",\" + RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n                    }\r\n                }\r\n                else {\r\n                    telemetry.request.setHeader(RequestResponseHeaders.requestContextHeader, RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n                }\r\n            }\r\n            if (currentContext && currentContext.operation) {\r\n                telemetry.request.setHeader(RequestResponseHeaders.requestIdHeader, uniqueRequestId);\r\n                // Also set legacy headers\r\n                telemetry.request.setHeader(RequestResponseHeaders.parentIdHeader, currentContext.operation.id);\r\n                telemetry.request.setHeader(RequestResponseHeaders.rootIdHeader, uniqueRequestId);\r\n                var correlationContextHeader = currentContext.customProperties.serializeToHeader();\r\n                if (correlationContextHeader) {\r\n                    telemetry.request.setHeader(RequestResponseHeaders.correlationContextHeader, correlationContextHeader);\r\n                }\r\n            }\r\n        }\r\n        // Collect dependency telemetry about the request when it finishes.\r\n        if (telemetry.request.on) {\r\n            telemetry.request.on('response', function (response) {\r\n                requestParser.onResponse(response);\r\n                var dependencyTelemetry = requestParser.getDependencyTelemetry(telemetry, uniqueRequestId);\r\n                dependencyTelemetry.contextObjects = dependencyTelemetry.contextObjects || {};\r\n                dependencyTelemetry.contextObjects[\"http.RequestOptions\"] = telemetry.options;\r\n                dependencyTelemetry.contextObjects[\"http.ClientRequest\"] = telemetry.request;\r\n                dependencyTelemetry.contextObjects[\"http.ClientResponse\"] = response;\r\n                client.trackDependency(dependencyTelemetry);\r\n            });\r\n            telemetry.request.on('error', function (e) {\r\n                requestParser.onError(e);\r\n                var dependencyTelemetry = requestParser.getDependencyTelemetry(telemetry, uniqueRequestId);\r\n                dependencyTelemetry.contextObjects = dependencyTelemetry.contextObjects || {};\r\n                dependencyTelemetry.contextObjects[\"http.RequestOptions\"] = telemetry.options;\r\n                dependencyTelemetry.contextObjects[\"http.ClientRequest\"] = telemetry.request;\r\n                dependencyTelemetry.contextObjects[\"Error\"] = e;\r\n                client.trackDependency(dependencyTelemetry);\r\n            });\r\n        }\r\n    };\r\n    AutoCollectHttpDependencies.prototype.dispose = function () {\r\n        AutoCollectHttpDependencies.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectHttpDependencies.disableCollectionRequestOption = 'disableAppInsightsAutoCollection';\r\n    AutoCollectHttpDependencies.requestNumber = 1;\r\n    AutoCollectHttpDependencies.alreadyAutoCollectedFlag = '_appInsightsAutoCollected';\r\n    return AutoCollectHttpDependencies;\r\n}());\r\nmodule.exports = AutoCollectHttpDependencies;\r\n//# sourceMappingURL=HttpDependencies.js.map","module.exports = require(\"http\");","module.exports = require(\"https\");","\"use strict\";\r\nvar Util = require(\"./Util\");\r\nvar Logging = require(\"./Logging\");\r\nvar CorrelationIdManager = (function () {\r\n    function CorrelationIdManager() {\r\n    }\r\n    CorrelationIdManager.queryCorrelationId = function (config, callback) {\r\n        // GET request to `${this.endpointBase}/api/profiles/${this.instrumentationKey}/appId`\r\n        // If it 404s, the iKey is bad and we should give up\r\n        // If it fails otherwise, try again later\r\n        var appIdUrlString = config.profileQueryEndpoint + \"/api/profiles/\" + config.instrumentationKey + \"/appId\";\r\n        if (CorrelationIdManager.completedLookups.hasOwnProperty(appIdUrlString)) {\r\n            callback(CorrelationIdManager.completedLookups[appIdUrlString]);\r\n            return;\r\n        }\r\n        else if (CorrelationIdManager.pendingLookups[appIdUrlString]) {\r\n            CorrelationIdManager.pendingLookups[appIdUrlString].push(callback);\r\n            return;\r\n        }\r\n        CorrelationIdManager.pendingLookups[appIdUrlString] = [callback];\r\n        var fetchAppId = function () {\r\n            if (!CorrelationIdManager.pendingLookups[appIdUrlString]) {\r\n                // This query has been cancelled.\r\n                return;\r\n            }\r\n            var requestOptions = {\r\n                method: 'GET',\r\n                // Ensure this request is not captured by auto-collection.\r\n                // Note: we don't refer to the property in HttpDependencyParser because that would cause a cyclical dependency\r\n                disableAppInsightsAutoCollection: true\r\n            };\r\n            Logging.info(CorrelationIdManager.TAG, requestOptions);\r\n            var req = Util.makeRequest(config, appIdUrlString, requestOptions, function (res) {\r\n                if (res.statusCode === 200) {\r\n                    // Success; extract the appId from the body\r\n                    var appId_1 = \"\";\r\n                    res.setEncoding(\"utf-8\");\r\n                    res.on('data', function (data) {\r\n                        appId_1 += data;\r\n                    });\r\n                    res.on('end', function () {\r\n                        Logging.info(CorrelationIdManager.TAG, appId_1);\r\n                        var result = CorrelationIdManager.correlationIdPrefix + appId_1;\r\n                        CorrelationIdManager.completedLookups[appIdUrlString] = result;\r\n                        if (CorrelationIdManager.pendingLookups[appIdUrlString]) {\r\n                            CorrelationIdManager.pendingLookups[appIdUrlString].forEach(function (cb) { return cb(result); });\r\n                        }\r\n                        delete CorrelationIdManager.pendingLookups[appIdUrlString];\r\n                    });\r\n                }\r\n                else if (res.statusCode >= 400 && res.statusCode < 500) {\r\n                    // Not found, probably a bad key. Do not try again.\r\n                    CorrelationIdManager.completedLookups[appIdUrlString] = undefined;\r\n                    delete CorrelationIdManager.pendingLookups[appIdUrlString];\r\n                }\r\n                else {\r\n                    // Retry after timeout.\r\n                    setTimeout(fetchAppId, config.correlationIdRetryIntervalMs);\r\n                }\r\n            });\r\n            if (req) {\r\n                req.on('error', function (error) {\r\n                    // Unable to contact endpoint.\r\n                    // Do nothing for now.\r\n                    Logging.warn(CorrelationIdManager.TAG, error);\r\n                });\r\n                req.end();\r\n            }\r\n        };\r\n        setTimeout(fetchAppId, 0);\r\n    };\r\n    CorrelationIdManager.cancelCorrelationIdQuery = function (config, callback) {\r\n        var appIdUrlString = config.profileQueryEndpoint + \"/api/profiles/\" + config.instrumentationKey + \"/appId\";\r\n        var pendingLookups = CorrelationIdManager.pendingLookups[appIdUrlString];\r\n        if (pendingLookups) {\r\n            CorrelationIdManager.pendingLookups[appIdUrlString] = pendingLookups.filter(function (cb) { return cb != callback; });\r\n            if (CorrelationIdManager.pendingLookups[appIdUrlString].length == 0) {\r\n                delete CorrelationIdManager.pendingLookups[appIdUrlString];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Generate a request Id according to https://github.com/lmolkova/correlation/blob/master/hierarchical_request_id.md\r\n     * @param parentId\r\n     */\r\n    CorrelationIdManager.generateRequestId = function (parentId) {\r\n        if (parentId) {\r\n            parentId = parentId[0] == '|' ? parentId : '|' + parentId;\r\n            if (parentId[parentId.length - 1] !== '.') {\r\n                parentId += '.';\r\n            }\r\n            var suffix = (CorrelationIdManager.currentRootId++).toString(16);\r\n            return CorrelationIdManager.appendSuffix(parentId, suffix, '_');\r\n        }\r\n        else {\r\n            return CorrelationIdManager.generateRootId();\r\n        }\r\n    };\r\n    /**\r\n     * Given a hierarchical identifier of the form |X.*\r\n     * return the root identifier X\r\n     * @param id\r\n     */\r\n    CorrelationIdManager.getRootId = function (id) {\r\n        var endIndex = id.indexOf('.');\r\n        if (endIndex < 0) {\r\n            endIndex = id.length;\r\n        }\r\n        var startIndex = id[0] === '|' ? 1 : 0;\r\n        return id.substring(startIndex, endIndex);\r\n    };\r\n    CorrelationIdManager.generateRootId = function () {\r\n        return '|' + Util.w3cTraceId() + '.';\r\n    };\r\n    CorrelationIdManager.appendSuffix = function (parentId, suffix, delimiter) {\r\n        if (parentId.length + suffix.length < CorrelationIdManager.requestIdMaxLength) {\r\n            return parentId + suffix + delimiter;\r\n        }\r\n        // Combined identifier would be too long, so we must truncate it.\r\n        // We need 9 characters of space: 8 for the overflow ID, 1 for the\r\n        // overflow delimiter '#'\r\n        var trimPosition = CorrelationIdManager.requestIdMaxLength - 9;\r\n        if (parentId.length > trimPosition) {\r\n            for (; trimPosition > 1; --trimPosition) {\r\n                var c = parentId[trimPosition - 1];\r\n                if (c === '.' || c === '_') {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (trimPosition <= 1) {\r\n            // parentId is not a valid ID\r\n            return CorrelationIdManager.generateRootId();\r\n        }\r\n        suffix = Util.randomu32().toString(16);\r\n        while (suffix.length < 8) {\r\n            suffix = '0' + suffix;\r\n        }\r\n        return parentId.substring(0, trimPosition) + suffix + '#';\r\n    };\r\n    CorrelationIdManager.TAG = \"CorrelationIdManager\";\r\n    CorrelationIdManager.correlationIdPrefix = \"cid-v1:\";\r\n    // To avoid extraneous HTTP requests, we maintain a queue of callbacks waiting on a particular appId lookup,\r\n    // as well as a cache of completed lookups so future requests can be resolved immediately.\r\n    CorrelationIdManager.pendingLookups = {};\r\n    CorrelationIdManager.completedLookups = {};\r\n    CorrelationIdManager.requestIdMaxLength = 1024;\r\n    CorrelationIdManager.currentRootId = Util.randomu32();\r\n    return CorrelationIdManager;\r\n}());\r\nmodule.exports = CorrelationIdManager;\r\n//# sourceMappingURL=CorrelationIdManager.js.map","module.exports = require(\"crypto\");","module.exports = require(\"net\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCompletionItem extends code.CompletionItem {\r\n    constructor(label) {\r\n        super(label);\r\n    }\r\n}\r\nexports.default = ProtocolCompletionItem;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCodeLens extends code.CodeLens {\r\n    constructor(range) {\r\n        super(range);\r\n    }\r\n}\r\nexports.default = ProtocolCodeLens;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolDocumentLink extends code.DocumentLink {\r\n    constructor(range, target) {\r\n        super(range, target);\r\n    }\r\n}\r\nexports.default = ProtocolDocumentLink;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nclass ProgressPart {\r\n    constructor(_client, _token) {\r\n        this._client = _client;\r\n        this._token = _token;\r\n        this._reported = 0;\r\n        this._disposable = this._client.onProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, (value) => {\r\n            switch (value.kind) {\r\n                case 'begin':\r\n                    this.begin(value);\r\n                    break;\r\n                case 'report':\r\n                    this.report(value);\r\n                    break;\r\n                case 'end':\r\n                    this.done();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    begin(params) {\r\n        let location = params.cancellable ? vscode_1.ProgressLocation.Notification : vscode_1.ProgressLocation.Window;\r\n        vscode_1.window.withProgress({ location, cancellable: params.cancellable, title: params.title }, async (progress, cancellationToken) => {\r\n            this._progress = progress;\r\n            this._infinite = params.percentage === undefined;\r\n            this._cancellationToken = cancellationToken;\r\n            this._cancellationToken.onCancellationRequested(() => {\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, { token: this._token });\r\n            });\r\n            this.report(params);\r\n            return new Promise((resolve, reject) => {\r\n                this._resolve = resolve;\r\n                this._reject = reject;\r\n            });\r\n        });\r\n    }\r\n    report(params) {\r\n        if (this._infinite && Is.string(params.message)) {\r\n            this._progress.report({ message: params.message });\r\n        }\r\n        else if (Is.number(params.percentage)) {\r\n            let percentage = Math.max(0, Math.min(params.percentage, 100));\r\n            let delta = Math.max(0, percentage - this._reported);\r\n            this._progress.report({ message: params.message, increment: delta });\r\n            this._reported += delta;\r\n        }\r\n    }\r\n    cancel() {\r\n        if (this._disposable) {\r\n            this._disposable.dispose();\r\n            this._disposable = undefined;\r\n        }\r\n        if (this._reject) {\r\n            this._reject();\r\n            this._resolve = undefined;\r\n            this._reject = undefined;\r\n        }\r\n    }\r\n    done() {\r\n        if (this._disposable) {\r\n            this._disposable.dispose();\r\n            this._disposable = undefined;\r\n        }\r\n        if (this._resolve) {\r\n            this._resolve();\r\n            this._resolve = undefined;\r\n            this._reject = undefined;\r\n        }\r\n    }\r\n}\r\nexports.ProgressPart = ProgressPart;\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar semver = require(\"semver\");\r\n/* tslint:disable-next-line:no-var-requires */\r\nvar moduleModule = require(\"module\");\r\nvar nativeModules = Object.keys(process.binding(\"natives\"));\r\nvar originalRequire = moduleModule.prototype.require;\r\nfunction makePatchingRequire(knownPatches) {\r\n    var patchedModules = {};\r\n    return function patchedRequire(moduleId) {\r\n        var originalModule = originalRequire.apply(this, arguments);\r\n        if (knownPatches[moduleId]) {\r\n            // Fetch the specific path of the module\r\n            var modulePath = moduleModule._resolveFilename(moduleId, this);\r\n            if (patchedModules.hasOwnProperty(modulePath)) {\r\n                // This module has already been patched, no need to reapply\r\n                return patchedModules[modulePath];\r\n            }\r\n            var moduleVersion = void 0;\r\n            if (nativeModules.indexOf(moduleId) < 0) {\r\n                try {\r\n                    moduleVersion = originalRequire.call(this, path.join(moduleId, \"package.json\")).version;\r\n                }\r\n                catch (e) {\r\n                    // This should only happen if moduleId is actually a path rather than a module\r\n                    // This is not a supported scenario\r\n                    return originalModule;\r\n                }\r\n            }\r\n            else {\r\n                // This module is implemented natively so we cannot find a package.json\r\n                // Instead, take the version of node itself\r\n                moduleVersion = process.version.substring(1);\r\n            }\r\n            var prereleaseTagIndex = moduleVersion.indexOf(\"-\");\r\n            if (prereleaseTagIndex >= 0) {\r\n                // We ignore prerelease tags to avoid impossible to fix gaps in support\r\n                // e.g. supporting console in >= 4.0.0 would otherwise not include\r\n                // 8.0.0-pre\r\n                moduleVersion = moduleVersion.substring(0, prereleaseTagIndex);\r\n            }\r\n            var modifiedModule = originalModule;\r\n            for (var _i = 0, _a = knownPatches[moduleId]; _i < _a.length; _i++) {\r\n                var modulePatcher = _a[_i];\r\n                if (semver.satisfies(moduleVersion, modulePatcher.versionSpecifier)) {\r\n                    modifiedModule = modulePatcher.patch(modifiedModule, modulePath);\r\n                }\r\n            }\r\n            return patchedModules[modulePath] = modifiedModule;\r\n        }\r\n        return originalModule;\r\n    };\r\n}\r\nexports.makePatchingRequire = makePatchingRequire;\r\n//# sourceMappingURL=patchRequire.js.map","module.exports = require(\"module\");","module.exports = require(\"events\");","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AvailabilityData = require(\"./AvailabilityData\");\r\nexports.Base = require(\"./Base\");\r\nexports.ContextTagKeys = require(\"./ContextTagKeys\");\r\nexports.Data = require(\"./Data\");\r\nexports.DataPoint = require(\"./DataPoint\");\r\nexports.DataPointType = require(\"./DataPointType\");\r\nexports.Domain = require(\"./Domain\");\r\nexports.Envelope = require(\"./Envelope\");\r\nexports.EventData = require(\"./EventData\");\r\nexports.ExceptionData = require(\"./ExceptionData\");\r\nexports.ExceptionDetails = require(\"./ExceptionDetails\");\r\nexports.MessageData = require(\"./MessageData\");\r\nexports.MetricData = require(\"./MetricData\");\r\nexports.PageViewData = require(\"./PageViewData\");\r\nexports.RemoteDependencyData = require(\"./RemoteDependencyData\");\r\nexports.RequestData = require(\"./RequestData\");\r\nexports.SeverityLevel = require(\"./SeverityLevel\");\r\nexports.StackFrame = require(\"./StackFrame\");\r\n//# sourceMappingURL=index.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nmodule.exports = Base;\r\n//# sourceMappingURL=Base.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nvar DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\nmodule.exports = DataPointType;\r\n//# sourceMappingURL=DataPointType.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = (function (_super) {\r\n    __extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nmodule.exports = EventData;\r\n//# sourceMappingURL=EventData.js.map","\"use strict\";\r\nvar os = require(\"os\");\r\nvar Logging = require(\"../Library/Logging\");\r\nvar AutoCollectPerformance = (function () {\r\n    function AutoCollectPerformance(client) {\r\n        if (!!AutoCollectPerformance.INSTANCE) {\r\n            throw new Error(\"Performance tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectPerformance.INSTANCE = this;\r\n        this._isInitialized = false;\r\n        this._client = client;\r\n    }\r\n    AutoCollectPerformance.prototype.enable = function (isEnabled) {\r\n        var _this = this;\r\n        this._isEnabled = isEnabled;\r\n        if (this._isEnabled && !this._isInitialized) {\r\n            this._isInitialized = true;\r\n        }\r\n        if (isEnabled) {\r\n            if (!this._handle) {\r\n                this._lastCpus = os.cpus();\r\n                this._lastRequests = {\r\n                    totalRequestCount: AutoCollectPerformance._totalRequestCount,\r\n                    totalFailedRequestCount: AutoCollectPerformance._totalFailedRequestCount,\r\n                    time: +new Date\r\n                };\r\n                if (typeof process.cpuUsage === 'function') {\r\n                    this._lastAppCpuUsage = process.cpuUsage();\r\n                }\r\n                this._lastHrtime = process.hrtime();\r\n                this._handle = setInterval(function () { return _this.trackPerformance(); }, 60000);\r\n                this._handle.unref(); // Allow the app to terminate even while this loop is going on\r\n            }\r\n        }\r\n        else {\r\n            if (this._handle) {\r\n                clearInterval(this._handle);\r\n                this._handle = undefined;\r\n            }\r\n        }\r\n    };\r\n    AutoCollectPerformance.countRequest = function (request, response) {\r\n        var _this = this;\r\n        if (!AutoCollectPerformance.isEnabled()) {\r\n            return;\r\n        }\r\n        var start = +new Date;\r\n        if (!request || !response) {\r\n            Logging.warn(\"AutoCollectPerformance.countRequest was called with invalid parameters: \", !!request, !!response);\r\n            return;\r\n        }\r\n        // response listeners\r\n        if (typeof response.once === \"function\") {\r\n            response.once(\"finish\", function () {\r\n                var end = +new Date;\r\n                _this._lastRequestExecutionTime = end - start;\r\n                AutoCollectPerformance._totalRequestCount++;\r\n                if (response.statusCode >= 400) {\r\n                    AutoCollectPerformance._totalFailedRequestCount++;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    AutoCollectPerformance.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectPerformance.isEnabled = function () {\r\n        return AutoCollectPerformance.INSTANCE && AutoCollectPerformance.INSTANCE._isEnabled;\r\n    };\r\n    AutoCollectPerformance.prototype.trackPerformance = function () {\r\n        this._trackCpu();\r\n        this._trackMemory();\r\n        this._trackNetwork();\r\n    };\r\n    AutoCollectPerformance.prototype._trackCpu = function () {\r\n        // this reports total ms spent in each category since the OS was booted, to calculate percent it is necessary\r\n        // to find the delta since the last measurement\r\n        var cpus = os.cpus();\r\n        if (cpus && cpus.length && this._lastCpus && cpus.length === this._lastCpus.length) {\r\n            var totalUser = 0;\r\n            var totalSys = 0;\r\n            var totalNice = 0;\r\n            var totalIdle = 0;\r\n            var totalIrq = 0;\r\n            for (var i = 0; !!cpus && i < cpus.length; i++) {\r\n                var cpu = cpus[i];\r\n                var lastCpu = this._lastCpus[i];\r\n                var name = \"% cpu(\" + i + \") \";\r\n                var model = cpu.model;\r\n                var speed = cpu.speed;\r\n                var times = cpu.times;\r\n                var lastTimes = lastCpu.times;\r\n                // user cpu time (or) % CPU time spent in user space\r\n                var user = (times.user - lastTimes.user) || 0;\r\n                totalUser += user;\r\n                // system cpu time (or) % CPU time spent in kernel space\r\n                var sys = (times.sys - lastTimes.sys) || 0;\r\n                totalSys += sys;\r\n                // user nice cpu time (or) % CPU time spent on low priority processes\r\n                var nice = (times.nice - lastTimes.nice) || 0;\r\n                totalNice += nice;\r\n                // idle cpu time (or) % CPU time spent idle\r\n                var idle = (times.idle - lastTimes.idle) || 0;\r\n                totalIdle += idle;\r\n                // irq (or) % CPU time spent servicing/handling hardware interrupts\r\n                var irq = (times.irq - lastTimes.irq) || 0;\r\n                totalIrq += irq;\r\n            }\r\n            // Calculate % of total cpu time (user + system) this App Process used (Only supported by node v6.1.0+)\r\n            var appCpuPercent = undefined;\r\n            if (typeof process.cpuUsage === 'function') {\r\n                var appCpuUsage = process.cpuUsage();\r\n                var hrtime = process.hrtime();\r\n                var totalApp = ((appCpuUsage.user - this._lastAppCpuUsage.user) + (appCpuUsage.system - this._lastAppCpuUsage.system)) || 0;\r\n                if (typeof this._lastHrtime !== 'undefined' && this._lastHrtime.length === 2) {\r\n                    var elapsedTime = ((hrtime[0] - this._lastHrtime[0]) * 1e6 + (hrtime[1] - this._lastHrtime[1]) / 1e3) || 0; // convert to microseconds\r\n                    appCpuPercent = 100 * totalApp / (elapsedTime * cpus.length);\r\n                }\r\n                // Set previous\r\n                this._lastAppCpuUsage = appCpuUsage;\r\n                this._lastHrtime = hrtime;\r\n            }\r\n            var combinedTotal = (totalUser + totalSys + totalNice + totalIdle + totalIrq) || 1;\r\n            this._client.trackMetric({ name: \"\\\\Processor(_Total)\\\\% Processor Time\", value: ((combinedTotal - totalIdle) / combinedTotal) * 100 });\r\n            this._client.trackMetric({ name: \"\\\\Process(??APP_WIN32_PROC??)\\\\% Processor Time\", value: appCpuPercent || ((totalUser / combinedTotal) * 100) });\r\n        }\r\n        this._lastCpus = cpus;\r\n    };\r\n    AutoCollectPerformance.prototype._trackMemory = function () {\r\n        var freeMem = os.freemem();\r\n        var usedMem = process.memoryUsage().rss;\r\n        this._client.trackMetric({ name: \"\\\\Process(??APP_WIN32_PROC??)\\\\Private Bytes\", value: usedMem });\r\n        this._client.trackMetric({ name: \"\\\\Memory\\\\Available Bytes\", value: freeMem });\r\n    };\r\n    AutoCollectPerformance.prototype._trackNetwork = function () {\r\n        // track total request counters\r\n        var lastRequests = this._lastRequests;\r\n        var requests = {\r\n            totalRequestCount: AutoCollectPerformance._totalRequestCount,\r\n            totalFailedRequestCount: AutoCollectPerformance._totalFailedRequestCount,\r\n            time: +new Date\r\n        };\r\n        var intervalRequests = (requests.totalRequestCount - lastRequests.totalRequestCount) || 0;\r\n        var intervalFailedRequests = (requests.totalFailedRequestCount - lastRequests.totalFailedRequestCount) || 0;\r\n        var elapsedMs = requests.time - lastRequests.time;\r\n        var elapsedSeconds = elapsedMs / 1000;\r\n        if (elapsedMs > 0) {\r\n            var requestsPerSec = intervalRequests / elapsedSeconds;\r\n            var failedRequestsPerSec = intervalFailedRequests / elapsedSeconds;\r\n            this._client.trackMetric({ name: \"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Requests/Sec\", value: requestsPerSec });\r\n            this._client.trackMetric({ name: \"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Request Execution Time\", value: AutoCollectPerformance._lastRequestExecutionTime });\r\n        }\r\n        this._lastRequests = requests;\r\n    };\r\n    AutoCollectPerformance.prototype.dispose = function () {\r\n        AutoCollectPerformance.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectPerformance._totalRequestCount = 0;\r\n    AutoCollectPerformance._totalFailedRequestCount = 0;\r\n    AutoCollectPerformance._lastRequestExecutionTime = 0;\r\n    return AutoCollectPerformance;\r\n}());\r\nmodule.exports = AutoCollectPerformance;\r\n//# sourceMappingURL=Performance.js.map","\"use strict\";\r\n/**\r\n * Base class for helpers that read data from HTTP requst/response objects and convert them\r\n * into the telemetry contract objects.\r\n */\r\nvar RequestParser = (function () {\r\n    function RequestParser() {\r\n    }\r\n    /**\r\n     * Gets a url parsed out from request options\r\n     */\r\n    RequestParser.prototype.getUrl = function () {\r\n        return this.url;\r\n    };\r\n    RequestParser.prototype.RequestParser = function () {\r\n        this.startTime = +new Date();\r\n    };\r\n    RequestParser.prototype._setStatus = function (status, error) {\r\n        var endTime = +new Date();\r\n        this.duration = endTime - this.startTime;\r\n        this.statusCode = status;\r\n        var properties = this.properties || {};\r\n        if (error) {\r\n            if (typeof error === \"string\") {\r\n                properties[\"error\"] = error;\r\n            }\r\n            else if (error instanceof Error) {\r\n                properties[\"error\"] = error.message;\r\n            }\r\n            else if (typeof error === \"object\") {\r\n                for (var key in error) {\r\n                    properties[key] = error[key] && error[key].toString && error[key].toString();\r\n                }\r\n            }\r\n        }\r\n        this.properties = properties;\r\n    };\r\n    RequestParser.prototype._isSuccess = function () {\r\n        return (0 < this.statusCode) && (this.statusCode < 400);\r\n    };\r\n    return RequestParser;\r\n}());\r\nmodule.exports = RequestParser;\r\n//# sourceMappingURL=RequestParser.js.map","\"use strict\";\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar Logging = require(\"../Library/Logging\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar HttpRequestParser = require(\"./HttpRequestParser\");\r\nvar CorrelationContextManager_1 = require(\"./CorrelationContextManager\");\r\nvar AutoCollectPerformance = require(\"./Performance\");\r\nvar AutoCollectHttpRequests = (function () {\r\n    function AutoCollectHttpRequests(client) {\r\n        if (!!AutoCollectHttpRequests.INSTANCE) {\r\n            throw new Error(\"Server request tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectHttpRequests.INSTANCE = this;\r\n        this._client = client;\r\n    }\r\n    AutoCollectHttpRequests.prototype.enable = function (isEnabled) {\r\n        this._isEnabled = isEnabled;\r\n        // Autocorrelation requires automatic monitoring of incoming server requests\r\n        // Disabling autocollection but enabling autocorrelation will still enable\r\n        // request monitoring but will not produce request events\r\n        if ((this._isAutoCorrelating || this._isEnabled || AutoCollectPerformance.isEnabled()) && !this._isInitialized) {\r\n            this.useAutoCorrelation(this._isAutoCorrelating);\r\n            this._initialize();\r\n        }\r\n    };\r\n    AutoCollectHttpRequests.prototype.useAutoCorrelation = function (isEnabled) {\r\n        if (isEnabled && !this._isAutoCorrelating) {\r\n            CorrelationContextManager_1.CorrelationContextManager.enable();\r\n        }\r\n        else if (!isEnabled && this._isAutoCorrelating) {\r\n            CorrelationContextManager_1.CorrelationContextManager.disable();\r\n        }\r\n        this._isAutoCorrelating = isEnabled;\r\n    };\r\n    AutoCollectHttpRequests.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectHttpRequests.prototype.isAutoCorrelating = function () {\r\n        return this._isAutoCorrelating;\r\n    };\r\n    AutoCollectHttpRequests.prototype._generateCorrelationContext = function (requestParser) {\r\n        if (!this._isAutoCorrelating) {\r\n            return;\r\n        }\r\n        return CorrelationContextManager_1.CorrelationContextManager.generateContextObject(requestParser.getOperationId(this._client.context.tags), requestParser.getRequestId(), requestParser.getOperationName(this._client.context.tags), requestParser.getCorrelationContextHeader());\r\n    };\r\n    AutoCollectHttpRequests.prototype._initialize = function () {\r\n        var _this = this;\r\n        this._isInitialized = true;\r\n        var wrapOnRequestHandler = function (onRequest) {\r\n            if (!onRequest) {\r\n                return undefined;\r\n            }\r\n            if (typeof onRequest !== 'function') {\r\n                throw new Error('onRequest handler must be a function');\r\n            }\r\n            return function (request, response) {\r\n                var shouldCollect = request && !request[AutoCollectHttpRequests.alreadyAutoCollectedFlag];\r\n                if (request && shouldCollect) {\r\n                    // Set up correlation context\r\n                    var requestParser_1 = new HttpRequestParser(request);\r\n                    var correlationContext = _this._generateCorrelationContext(requestParser_1);\r\n                    // Note: Check for if correlation is enabled happens within this method.\r\n                    // If not enabled, function will directly call the callback.\r\n                    CorrelationContextManager_1.CorrelationContextManager.runWithContext(correlationContext, function () {\r\n                        if (_this._isEnabled) {\r\n                            // Mark as auto collected\r\n                            request[AutoCollectHttpRequests.alreadyAutoCollectedFlag] = true;\r\n                            // Auto collect request\r\n                            AutoCollectHttpRequests.trackRequest(_this._client, { request: request, response: response }, requestParser_1);\r\n                        }\r\n                        // Add this request to the performance counter\r\n                        // Note: Check for if perf counters are enabled happens within this method.\r\n                        // TODO: Refactor common bits between trackRequest and countRequest so they can\r\n                        // be used together, even when perf counters are on, and request tracking is off\r\n                        AutoCollectPerformance.countRequest(request, response);\r\n                        if (typeof onRequest === \"function\") {\r\n                            onRequest(request, response);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    if (typeof onRequest === \"function\") {\r\n                        onRequest(request, response);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        // The `http.createServer` function will instantiate a new http.Server object.\r\n        // Inside the Server's constructor, it is using addListener to register the\r\n        // onRequest handler. So there are two ways to inject the wrapped onRequest handler:\r\n        // 1) Overwrite Server.prototype.addListener (and .on()) globally and not patching\r\n        //    the http.createServer call. Or\r\n        // 2) Overwrite the http.createServer method and add a patched addListener to the\r\n        //    fresh server instance. This seems more stable for possible future changes as\r\n        //    it also covers the case where the Server might not use addListener to manage\r\n        //    the callback internally.\r\n        //    And also as long as the constructor uses addListener to add the handle, it is\r\n        //    ok to patch the addListener after construction only. Because if we would patch\r\n        //    the prototype one and the createServer method, we would wrap the handler twice\r\n        //    in case of the constructor call.\r\n        var wrapServerEventHandler = function (server) {\r\n            var originalAddListener = server.addListener.bind(server);\r\n            server.addListener = function (eventType, eventHandler) {\r\n                switch (eventType) {\r\n                    case 'request':\r\n                    case 'checkContinue':\r\n                        return originalAddListener(eventType, wrapOnRequestHandler(eventHandler));\r\n                    default:\r\n                        return originalAddListener(eventType, eventHandler);\r\n                }\r\n            };\r\n            // on is an alias to addListener only\r\n            server.on = server.addListener;\r\n        };\r\n        var originalHttpServer = http.createServer;\r\n        http.createServer = function (onRequest) {\r\n            // todo: get a pointer to the server so the IP address can be read from server.address\r\n            var server = originalHttpServer(wrapOnRequestHandler(onRequest));\r\n            wrapServerEventHandler(server);\r\n            return server;\r\n        };\r\n        var originalHttpsServer = https.createServer;\r\n        https.createServer = function (options, onRequest) {\r\n            var server = originalHttpsServer(options, wrapOnRequestHandler(onRequest));\r\n            wrapServerEventHandler(server);\r\n            return server;\r\n        };\r\n    };\r\n    /**\r\n     * Tracks a request synchronously (doesn't wait for response 'finish' event)\r\n     */\r\n    AutoCollectHttpRequests.trackRequestSync = function (client, telemetry) {\r\n        if (!telemetry.request || !telemetry.response || !client) {\r\n            Logging.info(\"AutoCollectHttpRequests.trackRequestSync was called with invalid parameters: \", !telemetry.request, !telemetry.response, !client);\r\n            return;\r\n        }\r\n        AutoCollectHttpRequests.addResponseCorrelationIdHeader(client, telemetry.response);\r\n        // store data about the request\r\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        var requestParser = new HttpRequestParser(telemetry.request, (correlationContext && correlationContext.operation.parentId));\r\n        // Overwrite correlation context with request parser results\r\n        if (correlationContext) {\r\n            correlationContext.operation.id = requestParser.getOperationId(client.context.tags) || correlationContext.operation.id;\r\n            correlationContext.operation.name = requestParser.getOperationName(client.context.tags) || correlationContext.operation.name;\r\n            correlationContext.operation.parentId = requestParser.getRequestId() || correlationContext.operation.parentId;\r\n            correlationContext.customProperties.addHeaderData(requestParser.getCorrelationContextHeader());\r\n        }\r\n        AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, telemetry.duration, telemetry.error);\r\n    };\r\n    /**\r\n     * Tracks a request by listening to the response 'finish' event\r\n     */\r\n    AutoCollectHttpRequests.trackRequest = function (client, telemetry, _requestParser) {\r\n        if (!telemetry.request || !telemetry.response || !client) {\r\n            Logging.info(\"AutoCollectHttpRequests.trackRequest was called with invalid parameters: \", !telemetry.request, !telemetry.response, !client);\r\n            return;\r\n        }\r\n        // store data about the request\r\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        var requestParser = _requestParser || new HttpRequestParser(telemetry.request, correlationContext && correlationContext.operation.parentId);\r\n        if (Util.canIncludeCorrelationHeader(client, requestParser.getUrl())) {\r\n            AutoCollectHttpRequests.addResponseCorrelationIdHeader(client, telemetry.response);\r\n        }\r\n        // Overwrite correlation context with request parser results (if not an automatic track. we've already precalculated the correlation context in that case)\r\n        if (correlationContext && !_requestParser) {\r\n            correlationContext.operation.id = requestParser.getOperationId(client.context.tags) || correlationContext.operation.id;\r\n            correlationContext.operation.name = requestParser.getOperationName(client.context.tags) || correlationContext.operation.name;\r\n            correlationContext.operation.parentId = requestParser.getOperationParentId(client.context.tags) || correlationContext.operation.parentId;\r\n            correlationContext.customProperties.addHeaderData(requestParser.getCorrelationContextHeader());\r\n        }\r\n        // response listeners\r\n        if (telemetry.response.once) {\r\n            telemetry.response.once(\"finish\", function () {\r\n                AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, null, null);\r\n            });\r\n        }\r\n        // track a failed request if an error is emitted\r\n        if (telemetry.request.on) {\r\n            telemetry.request.on(\"error\", function (error) {\r\n                AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, null, error);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Add the target correlationId to the response headers, if not already provided.\r\n     */\r\n    AutoCollectHttpRequests.addResponseCorrelationIdHeader = function (client, response) {\r\n        if (client.config && client.config.correlationId &&\r\n            response.getHeader && response.setHeader && !response.headersSent) {\r\n            var correlationHeader = response.getHeader(RequestResponseHeaders.requestContextHeader);\r\n            if (correlationHeader) {\r\n                var components = correlationHeader.split(\",\");\r\n                var key_1 = RequestResponseHeaders.requestContextSourceKey + \"=\";\r\n                if (!components.some(function (value) { return value.substring(0, key_1.length) === key_1; })) {\r\n                    response.setHeader(RequestResponseHeaders.requestContextHeader, correlationHeader + \",\" + RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n                }\r\n            }\r\n            else {\r\n                response.setHeader(RequestResponseHeaders.requestContextHeader, RequestResponseHeaders.requestContextSourceKey + \"=\" + client.config.correlationId);\r\n            }\r\n        }\r\n    };\r\n    AutoCollectHttpRequests.endRequest = function (client, requestParser, telemetry, ellapsedMilliseconds, error) {\r\n        if (error) {\r\n            requestParser.onError(error, ellapsedMilliseconds);\r\n        }\r\n        else {\r\n            requestParser.onResponse(telemetry.response, ellapsedMilliseconds);\r\n        }\r\n        var requestTelemetry = requestParser.getRequestTelemetry(telemetry);\r\n        requestTelemetry.tagOverrides = requestParser.getRequestTags(client.context.tags);\r\n        if (telemetry.tagOverrides) {\r\n            for (var key in telemetry.tagOverrides) {\r\n                requestTelemetry.tagOverrides[key] = telemetry.tagOverrides[key];\r\n            }\r\n        }\r\n        requestTelemetry.contextObjects = requestTelemetry.contextObjects || {};\r\n        requestTelemetry.contextObjects[\"http.ServerRequest\"] = telemetry.request;\r\n        requestTelemetry.contextObjects[\"http.ServerResponse\"] = telemetry.response;\r\n        client.trackRequest(requestTelemetry);\r\n    };\r\n    AutoCollectHttpRequests.prototype.dispose = function () {\r\n        AutoCollectHttpRequests.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectHttpRequests.alreadyAutoCollectedFlag = '_appInsightsAutoCollected';\r\n    return AutoCollectHttpRequests;\r\n}());\r\nmodule.exports = AutoCollectHttpRequests;\r\n//# sourceMappingURL=HttpRequests.js.map",null,"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar fs = require(\"fs\");\r\nvar toString = Object.prototype.toString;\r\nfunction isDefined(value) {\r\n    return typeof value !== 'undefined';\r\n}\r\nfunction isNumber(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nfunction isString(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nfunction isBoolean(value) {\r\n    return value === true || value === false;\r\n}\r\nfunction readJsonFileSync(filename) {\r\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\r\n}\r\nvar MessageFormat;\r\n(function (MessageFormat) {\r\n    MessageFormat[\"file\"] = \"file\";\r\n    MessageFormat[\"bundle\"] = \"bundle\";\r\n    MessageFormat[\"both\"] = \"both\";\r\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\r\nvar BundleFormat;\r\n(function (BundleFormat) {\r\n    // the nls.bundle format\r\n    BundleFormat[\"standalone\"] = \"standalone\";\r\n    BundleFormat[\"languagePack\"] = \"languagePack\";\r\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\r\nvar LocalizeInfo;\r\n(function (LocalizeInfo) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\r\n    }\r\n    LocalizeInfo.is = is;\r\n})(LocalizeInfo || (LocalizeInfo = {}));\r\nvar resolvedLanguage;\r\nvar resolvedBundles;\r\nvar options;\r\nvar isPseudo;\r\nfunction initializeSettings() {\r\n    options = { locale: undefined, language: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\r\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\r\n        try {\r\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\r\n            var language = void 0;\r\n            var locale = void 0;\r\n            if (vscodeOptions.availableLanguages) {\r\n                var value = vscodeOptions.availableLanguages['*'];\r\n                if (isString(value)) {\r\n                    language = value;\r\n                }\r\n            }\r\n            if (isString(vscodeOptions.locale)) {\r\n                options.locale = vscodeOptions.locale.toLowerCase();\r\n            }\r\n            if (language === undefined) {\r\n                options.language = options.locale;\r\n            }\r\n            else if (language !== 'en') {\r\n                options.language = language;\r\n            }\r\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\r\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\r\n            }\r\n            if (isString(vscodeOptions._cacheRoot)) {\r\n                options.cacheRoot = vscodeOptions._cacheRoot;\r\n            }\r\n            if (isString(vscodeOptions._languagePackId)) {\r\n                options.languagePackId = vscodeOptions._languagePackId;\r\n            }\r\n            if (isString(vscodeOptions._translationsConfigFile)) {\r\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\r\n                try {\r\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\r\n                }\r\n                catch (error) {\r\n                    // We can't read the translation config file. Mark the cache as corrupted.\r\n                    if (vscodeOptions._corruptedFile) {\r\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\r\n                            console.error(err);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing.\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    resolvedLanguage = undefined;\r\n    resolvedBundles = Object.create(null);\r\n}\r\ninitializeSettings();\r\nfunction supportsLanguagePack() {\r\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\r\n        && options.translationsConfig !== undefined;\r\n}\r\nfunction format(message, args) {\r\n    var result;\r\n    if (isPseudo) {\r\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\r\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\r\n    }\r\n    if (args.length === 0) {\r\n        result = message;\r\n    }\r\n    else {\r\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\r\n            var index = rest[0];\r\n            var arg = args[index];\r\n            var replacement = match;\r\n            if (typeof arg === 'string') {\r\n                replacement = arg;\r\n            }\r\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\r\n                replacement = String(arg);\r\n            }\r\n            return replacement;\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction createScopedLocalizeFunction(messages) {\r\n    return function (key, message) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (isNumber(key)) {\r\n            if (key >= messages.length) {\r\n                console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \" + new Error('').stack);\r\n                return;\r\n            }\r\n            return format(messages[key], args);\r\n        }\r\n        else {\r\n            if (isString(message)) {\r\n                console.warn(\"Message \" + message + \" didn't get externalized correctly.\");\r\n                return format(message, args);\r\n            }\r\n            else {\r\n                console.error(\"Broken localize call found. Stacktrace is\\n: \" + new Error('').stack);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction localize(key, message) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return format(message, args);\r\n}\r\nfunction resolveLanguage(file) {\r\n    var resolvedLanguage;\r\n    if (options.cacheLanguageResolution && resolvedLanguage) {\r\n        resolvedLanguage = resolvedLanguage;\r\n    }\r\n    else {\r\n        if (isPseudo || !options.language) {\r\n            resolvedLanguage = '.nls.json';\r\n        }\r\n        else {\r\n            var locale = options.language;\r\n            while (locale) {\r\n                var candidate = '.nls.' + locale + '.json';\r\n                if (fs.existsSync(file + candidate)) {\r\n                    resolvedLanguage = candidate;\r\n                    break;\r\n                }\r\n                else {\r\n                    var index = locale.lastIndexOf('-');\r\n                    if (index > 0) {\r\n                        locale = locale.substring(0, index);\r\n                    }\r\n                    else {\r\n                        resolvedLanguage = '.nls.json';\r\n                        locale = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (options.cacheLanguageResolution) {\r\n            resolvedLanguage = resolvedLanguage;\r\n        }\r\n    }\r\n    return file + resolvedLanguage;\r\n}\r\nfunction findInTheBoxBundle(root) {\r\n    var language = options.language;\r\n    while (language) {\r\n        var candidate = path.join(root, \"nls.bundle.\" + language + \".json\");\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n        else {\r\n            var index = language.lastIndexOf('-');\r\n            if (index > 0) {\r\n                language = language.substring(0, index);\r\n            }\r\n            else {\r\n                language = undefined;\r\n            }\r\n        }\r\n    }\r\n    // Test if we can reslove the default bundle.\r\n    if (language === undefined) {\r\n        var candidate = path.join(root, 'nls.bundle.json');\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction mkdir(directory) {\r\n    try {\r\n        fs.mkdirSync(directory);\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'EEXIST') {\r\n            return;\r\n        }\r\n        else if (err.code === 'ENOENT') {\r\n            var parent = path.dirname(directory);\r\n            if (parent !== directory) {\r\n                mkdir(parent);\r\n                fs.mkdirSync(directory);\r\n            }\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nfunction createDefaultNlsBundle(folder) {\r\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_1 in metaData) {\r\n        var entry = metaData[module_1];\r\n        result[module_1] = entry.messages;\r\n    }\r\n    return result;\r\n}\r\nfunction createNLSBundle(header, metaDataPath) {\r\n    var languagePackLocation = options.translationsConfig[header.id];\r\n    if (!languagePackLocation) {\r\n        return undefined;\r\n    }\r\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\r\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_2 in metaData) {\r\n        var entry = metaData[module_2];\r\n        var translations = languagePack[header.outDir + \"/\" + module_2];\r\n        if (translations) {\r\n            var resultMessages = [];\r\n            for (var i = 0; i < entry.keys.length; i++) {\r\n                var messageKey = entry.keys[i];\r\n                var key = isString(messageKey) ? messageKey : messageKey.key;\r\n                var translatedMessage = translations[key];\r\n                if (translatedMessage === undefined) {\r\n                    translatedMessage = entry.messages[i];\r\n                }\r\n                resultMessages.push(translatedMessage);\r\n            }\r\n            result[module_2] = resultMessages;\r\n        }\r\n        else {\r\n            result[module_2] = entry.messages;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction touch(file) {\r\n    var d = new Date();\r\n    fs.utimes(file, d, d, function () {\r\n        // Do nothing. Ignore\r\n    });\r\n}\r\nfunction cacheBundle(key, bundle) {\r\n    resolvedBundles[key] = bundle;\r\n    return bundle;\r\n}\r\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\r\n    var result;\r\n    var bundle = path.join(options.cacheRoot, header.id + \"-\" + header.hash + \".json\");\r\n    var useMemoryOnly = false;\r\n    var writeBundle = false;\r\n    try {\r\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\r\n        touch(bundle);\r\n        return result;\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'ENOENT') {\r\n            writeBundle = true;\r\n        }\r\n        else if (err instanceof SyntaxError) {\r\n            // We have a syntax error. So no valid JSON. Use\r\n            console.log(\"Syntax error parsing message bundle: \" + err.message + \".\");\r\n            fs.unlink(bundle, function (err) {\r\n                if (err) {\r\n                    console.error(\"Deleting corrupted bundle \" + bundle + \" failed.\");\r\n                }\r\n            });\r\n            useMemoryOnly = true;\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    result = createNLSBundle(header, bundlePath);\r\n    if (!result || useMemoryOnly) {\r\n        return result;\r\n    }\r\n    if (writeBundle) {\r\n        try {\r\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\r\n        }\r\n        catch (err) {\r\n            if (err.code === 'EEXIST') {\r\n                return result;\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadDefaultNlsBundle(bundlePath) {\r\n    try {\r\n        return createDefaultNlsBundle(bundlePath);\r\n    }\r\n    catch (err) {\r\n        console.log(\"Generating default bundle from meta data failed.\", err);\r\n        return undefined;\r\n    }\r\n}\r\nfunction loadNlsBundle(header, bundlePath) {\r\n    var result;\r\n    // Core decided to use a language pack. Do the same in the extension\r\n    if (supportsLanguagePack()) {\r\n        try {\r\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Load or create bundle failed \", err);\r\n        }\r\n    }\r\n    if (!result) {\r\n        // No language pack found, but core is running in language pack mode\r\n        // Don't try to use old in the box bundles since the might be stale\r\n        // Fall right back to the default bundle.\r\n        if (options.languagePackSupport) {\r\n            return loadDefaultNlsBundle(bundlePath);\r\n        }\r\n        var candidate = findInTheBoxBundle(bundlePath);\r\n        if (candidate) {\r\n            try {\r\n                return readJsonFileSync(candidate);\r\n            }\r\n            catch (err) {\r\n                console.log(\"Loading in the box message bundle failed.\", err);\r\n            }\r\n        }\r\n        result = loadDefaultNlsBundle(bundlePath);\r\n    }\r\n    return result;\r\n}\r\nfunction tryFindMetaDataHeaderFile(file) {\r\n    var result;\r\n    var dirname = path.dirname(file);\r\n    while (true) {\r\n        result = path.join(dirname, 'nls.metadata.header.json');\r\n        if (fs.existsSync(result)) {\r\n            break;\r\n        }\r\n        var parent = path.dirname(dirname);\r\n        if (parent === dirname) {\r\n            result = undefined;\r\n            break;\r\n        }\r\n        else {\r\n            dirname = parent;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadMessageBundle(file) {\r\n    if (!file) {\r\n        // No file. We are in dev mode. Return the default\r\n        // localize function.\r\n        return localize;\r\n    }\r\n    // Remove extension since we load json files.\r\n    var ext = path.extname(file);\r\n    if (ext) {\r\n        file = file.substr(0, file.length - ext.length);\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\r\n        var headerFile = tryFindMetaDataHeaderFile(file);\r\n        if (headerFile) {\r\n            var bundlePath = path.dirname(headerFile);\r\n            var bundle = resolvedBundles[bundlePath];\r\n            if (bundle === undefined) {\r\n                try {\r\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\r\n                    try {\r\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\r\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\r\n                    }\r\n                    catch (err) {\r\n                        console.error('Failed to load nls bundle', err);\r\n                        bundle = cacheBundle(bundlePath, null);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.error('Failed to read header file', err);\r\n                    bundle = cacheBundle(bundlePath, null);\r\n                }\r\n            }\r\n            if (bundle) {\r\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\/g, '/');\r\n                var messages = bundle.nlsBundle[module_3];\r\n                if (messages === undefined) {\r\n                    console.error(\"Messages for file \" + file + \" not found. See console for details.\");\r\n                    return function () {\r\n                        return 'Messages not found.';\r\n                    };\r\n                }\r\n                return createScopedLocalizeFunction(messages);\r\n            }\r\n        }\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\r\n        // Try to load a single file bundle\r\n        try {\r\n            var json = readJsonFileSync(resolveLanguage(file));\r\n            if (Array.isArray(json)) {\r\n                return createScopedLocalizeFunction(json);\r\n            }\r\n            else {\r\n                if (isDefined(json.messages) && isDefined(json.keys)) {\r\n                    return createScopedLocalizeFunction(json.messages);\r\n                }\r\n                else {\r\n                    console.error(\"String bundle '\" + file + \"' uses an unsupported format.\");\r\n                    return function () {\r\n                        return 'File bundle has unsupported format. See console for details';\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.code !== 'ENOENT') {\r\n                console.error('Failed to load single file bundle', err);\r\n            }\r\n        }\r\n    }\r\n    console.error(\"Failed to load message bundle for file \" + file);\r\n    return function () {\r\n        return 'Failed to load message bundle. See console for details.';\r\n    };\r\n}\r\nexports.loadMessageBundle = loadMessageBundle;\r\nfunction config(opts) {\r\n    if (opts) {\r\n        if (isString(opts.locale)) {\r\n            options.locale = opts.locale.toLowerCase();\r\n            options.language = options.locale;\r\n            resolvedLanguage = undefined;\r\n            resolvedBundles = Object.create(null);\r\n        }\r\n        if (opts.messageFormat !== undefined) {\r\n            options.messageFormat = opts.messageFormat;\r\n        }\r\n        if (opts.bundleFormat === BundleFormat.standalone && options.languagePackSupport === true) {\r\n            options.languagePackSupport = false;\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    return loadMessageBundle;\r\n}\r\nexports.config = config;\r\n//# sourceMappingURL=main.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst fs = require(\"fs\");\r\nconst SemVer = require(\"semver\");\r\nconst client_1 = require(\"./client\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst colorProvider_1 = require(\"./colorProvider\");\r\nconst configuration_1 = require(\"./configuration\");\r\nconst implementation_1 = require(\"./implementation\");\r\nconst typeDefinition_1 = require(\"./typeDefinition\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst foldingRange_1 = require(\"./foldingRange\");\r\nconst declaration_1 = require(\"./declaration\");\r\nconst selectionRange_1 = require(\"./selectionRange\");\r\nconst progress_1 = require(\"./progress\");\r\nconst callHierarchy_proposed_1 = require(\"./callHierarchy.proposed\");\r\nconst semanticTokens_proposed_1 = require(\"./semanticTokens.proposed\");\r\nconst Is = require(\"./utils/is\");\r\nconst processes_1 = require(\"./utils/processes\");\r\n__export(require(\"./client\"));\r\nconst REQUIRED_VSCODE_VERSION = '^1.42.0'; // do not change format, updated by `updateVSCode` script\r\nvar Executable;\r\n(function (Executable) {\r\n    function is(value) {\r\n        return Is.string(value.command);\r\n    }\r\n    Executable.is = is;\r\n})(Executable || (Executable = {}));\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\nvar Transport;\r\n(function (Transport) {\r\n    function isSocket(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\r\n    }\r\n    Transport.isSocket = isSocket;\r\n})(Transport || (Transport = {}));\r\nvar NodeModule;\r\n(function (NodeModule) {\r\n    function is(value) {\r\n        return Is.string(value.module);\r\n    }\r\n    NodeModule.is = is;\r\n})(NodeModule || (NodeModule = {}));\r\nvar StreamInfo;\r\n(function (StreamInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\r\n    }\r\n    StreamInfo.is = is;\r\n})(StreamInfo || (StreamInfo = {}));\r\nvar ChildProcessInfo;\r\n(function (ChildProcessInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\r\n    }\r\n    ChildProcessInfo.is = is;\r\n})(ChildProcessInfo || (ChildProcessInfo = {}));\r\nclass LanguageClient extends client_1.BaseLanguageClient {\r\n    constructor(arg1, arg2, arg3, arg4, arg5) {\r\n        let id;\r\n        let name;\r\n        let serverOptions;\r\n        let clientOptions;\r\n        let forceDebug;\r\n        if (Is.string(arg2)) {\r\n            id = arg1;\r\n            name = arg2;\r\n            serverOptions = arg3;\r\n            clientOptions = arg4;\r\n            forceDebug = !!arg5;\r\n        }\r\n        else {\r\n            id = arg1.toLowerCase();\r\n            name = arg1;\r\n            serverOptions = arg2;\r\n            clientOptions = arg3;\r\n            forceDebug = arg4;\r\n        }\r\n        if (forceDebug === void 0) {\r\n            forceDebug = false;\r\n        }\r\n        super(id, name, clientOptions);\r\n        this._serverOptions = serverOptions;\r\n        this._forceDebug = forceDebug;\r\n        try {\r\n            this.checkVersion();\r\n        }\r\n        catch (error) {\r\n            if (Is.string(error.message)) {\r\n                this.outputChannel.appendLine(error.message);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    checkVersion() {\r\n        let codeVersion = SemVer.parse(vscode_1.version);\r\n        if (!codeVersion) {\r\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\r\n        }\r\n        // Remove the insider pre-release since we stay API compatible.\r\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\r\n            codeVersion.prerelease = [];\r\n        }\r\n        if (!SemVer.satisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\r\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\r\n        }\r\n    }\r\n    stop() {\r\n        return super.stop().then(() => {\r\n            if (this._serverProcess) {\r\n                let toCheck = this._serverProcess;\r\n                this._serverProcess = undefined;\r\n                if (this._isDetached === void 0 || !this._isDetached) {\r\n                    this.checkProcessDied(toCheck);\r\n                }\r\n                this._isDetached = undefined;\r\n            }\r\n        });\r\n    }\r\n    checkProcessDied(childProcess) {\r\n        if (!childProcess) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            // Test if the process is still alive. Throws an exception if not\r\n            try {\r\n                process.kill(childProcess.pid, 0);\r\n                processes_1.terminate(childProcess);\r\n            }\r\n            catch (error) {\r\n                // All is fine.\r\n            }\r\n        }, 2000);\r\n    }\r\n    handleConnectionClosed() {\r\n        this._serverProcess = undefined;\r\n        super.handleConnectionClosed();\r\n    }\r\n    createMessageTransports(encoding) {\r\n        function getEnvironment(env, fork) {\r\n            if (!env && !fork) {\r\n                return undefined;\r\n            }\r\n            let result = Object.create(null);\r\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\r\n            if (fork) {\r\n                result['ELECTRON_RUN_AS_NODE'] = '1';\r\n                result['ELECTRON_NO_ASAR'] = '1';\r\n            }\r\n            if (env) {\r\n                Object.keys(env).forEach(key => result[key] = env[key]);\r\n            }\r\n            return result;\r\n        }\r\n        const debugStartWith = ['--debug=', '--debug-brk=', '--inspect=', '--inspect-brk='];\r\n        const debugEquals = ['--debug', '--debug-brk', '--inspect', '--inspect-brk'];\r\n        function startedInDebugMode() {\r\n            let args = process.execArgv;\r\n            if (args) {\r\n                return args.some((arg) => {\r\n                    return debugStartWith.some(value => arg.startsWith(value)) ||\r\n                        debugEquals.some(value => arg === value);\r\n                });\r\n            }\r\n            return false;\r\n        }\r\n        function assertStdio(process) {\r\n            if (process.stdin === null || process.stdout === null || process.stderr === null) {\r\n                throw new Error('Process created without stdio streams');\r\n            }\r\n        }\r\n        let server = this._serverOptions;\r\n        // We got a function.\r\n        if (Is.func(server)) {\r\n            return server().then((result) => {\r\n                if (client_1.MessageTransports.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return result;\r\n                }\r\n                else if (StreamInfo.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\r\n                }\r\n                else {\r\n                    let cp;\r\n                    if (ChildProcessInfo.is(result)) {\r\n                        cp = result.process;\r\n                        this._isDetached = result.detached;\r\n                    }\r\n                    else {\r\n                        cp = result;\r\n                        this._isDetached = false;\r\n                    }\r\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\r\n                }\r\n            });\r\n        }\r\n        let json;\r\n        let runDebug = server;\r\n        if (runDebug.run || runDebug.debug) {\r\n            if (this._forceDebug || startedInDebugMode()) {\r\n                json = runDebug.debug;\r\n            }\r\n            else {\r\n                json = runDebug.run;\r\n            }\r\n        }\r\n        else {\r\n            json = server;\r\n        }\r\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\r\n            if (NodeModule.is(json) && json.module) {\r\n                let node = json;\r\n                let transport = node.transport || TransportKind.stdio;\r\n                if (node.runtime) {\r\n                    let args = [];\r\n                    let options = node.options || Object.create(null);\r\n                    if (options.execArgv) {\r\n                        options.execArgv.forEach(element => args.push(element));\r\n                    }\r\n                    args.push(node.module);\r\n                    if (node.args) {\r\n                        node.args.forEach(element => args.push(element));\r\n                    }\r\n                    let execOptions = Object.create(null);\r\n                    execOptions.cwd = serverWorkingDir;\r\n                    execOptions.env = getEnvironment(options.env, false);\r\n                    let pipeName = undefined;\r\n                    if (transport === TransportKind.ipc) {\r\n                        // exec options not correctly typed in lib\r\n                        execOptions.stdio = [null, null, null, 'ipc'];\r\n                        args.push('--node-ipc');\r\n                    }\r\n                    else if (transport === TransportKind.stdio) {\r\n                        args.push('--stdio');\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                        args.push(`--pipe=${pipeName}`);\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        args.push(`--socket=${transport.port}`);\r\n                    }\r\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                        let serverProcess = cp.spawn(node.runtime, args, execOptions);\r\n                        if (!serverProcess || !serverProcess.pid) {\r\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                        }\r\n                        this._serverProcess = serverProcess;\r\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        if (transport === TransportKind.ipc) {\r\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\r\n                        }\r\n                        else {\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                        }\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    let pipeName = undefined;\r\n                    return new Promise((resolve, _reject) => {\r\n                        let args = node.args && node.args.slice() || [];\r\n                        if (transport === TransportKind.ipc) {\r\n                            args.push('--node-ipc');\r\n                        }\r\n                        else if (transport === TransportKind.stdio) {\r\n                            args.push('--stdio');\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                            args.push(`--pipe=${pipeName}`);\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            args.push(`--socket=${transport.port}`);\r\n                        }\r\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                        let options = node.options || Object.create(null);\r\n                        options.env = getEnvironment(options.env, true);\r\n                        options.execArgv = options.execArgv || [];\r\n                        options.cwd = serverWorkingDir;\r\n                        options.silent = true;\r\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                            let sp = cp.fork(node.module, args || [], options);\r\n                            assertStdio(sp);\r\n                            this._serverProcess = sp;\r\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            if (transport === TransportKind.ipc) {\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\r\n                            }\r\n                            else {\r\n                                resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(sp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(sp.stdin) });\r\n                            }\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                assertStdio(sp);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                                let sp = cp.fork(node.module, args || [], options);\r\n                                assertStdio(sp);\r\n                                this._serverProcess = sp;\r\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                transport.onConnected().then((protocol) => {\r\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (Executable.is(json) && json.command) {\r\n                let command = json;\r\n                let args = command.args || [];\r\n                let options = Object.assign({}, command.options);\r\n                options.cwd = options.cwd || serverWorkingDir;\r\n                let serverProcess = cp.spawn(command.command, args, options);\r\n                if (!serverProcess || !serverProcess.pid) {\r\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\r\n                }\r\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                this._serverProcess = serverProcess;\r\n                this._isDetached = !!options.detached;\r\n                return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n            }\r\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\r\n        });\r\n    }\r\n    registerProposedFeatures() {\r\n        this.registerFeatures(ProposedFeatures.createAll(this));\r\n    }\r\n    registerBuiltinFeatures() {\r\n        super.registerBuiltinFeatures();\r\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\r\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\r\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\r\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\r\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\r\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\r\n        this.registerFeature(new declaration_1.DeclarationFeature(this));\r\n        this.registerFeature(new selectionRange_1.SelectionRangeFeature(this));\r\n        this.registerFeature(new progress_1.ProgressFeature(this));\r\n    }\r\n    _mainGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    _getServerWorkingDir(options) {\r\n        let cwd = options && options.cwd;\r\n        if (!cwd) {\r\n            cwd = this.clientOptions.workspaceFolder\r\n                ? this.clientOptions.workspaceFolder.uri.fsPath\r\n                : this._mainGetRootPath();\r\n        }\r\n        if (cwd) {\r\n            // make sure the folder exists otherwise creating the process will fail\r\n            return new Promise(s => {\r\n                fs.lstat(cwd, (err, stats) => {\r\n                    s(!err && stats.isDirectory() ? cwd : undefined);\r\n                });\r\n            });\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n}\r\nexports.LanguageClient = LanguageClient;\r\nclass SettingMonitor {\r\n    constructor(_client, _setting) {\r\n        this._client = _client;\r\n        this._setting = _setting;\r\n        this._listeners = [];\r\n    }\r\n    start() {\r\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\r\n        this.onDidChangeConfiguration();\r\n        return new vscode_1.Disposable(() => {\r\n            if (this._client.needsStop()) {\r\n                this._client.stop();\r\n            }\r\n        });\r\n    }\r\n    onDidChangeConfiguration() {\r\n        let index = this._setting.indexOf('.');\r\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\r\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\r\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\r\n        if (enabled && this._client.needsStart()) {\r\n            this._client.start();\r\n        }\r\n        else if (!enabled && this._client.needsStop()) {\r\n            this._client.stop();\r\n        }\r\n    }\r\n}\r\nexports.SettingMonitor = SettingMonitor;\r\n// Exporting proposed protocol.\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    function createAll(client) {\r\n        let result = [\r\n            new callHierarchy_proposed_1.CallHierarchyFeature(client),\r\n            new semanticTokens_proposed_1.SemanticTokensFeature(client)\r\n        ];\r\n        return result;\r\n    }\r\n    ProposedFeatures.createAll = createAll;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    ErrorCodes.ContentModified = -32801;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n *\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\n/**\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n    dispose() {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = undefined;\r\n        }\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The diagnostic tags.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var DiagnosticTag;\r\n(function (DiagnosticTag) {\r\n    /**\r\n     * Unused or unnecessary code.\r\n     *\r\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\r\n     * an error squiggle.\r\n     */\r\n    DiagnosticTag.Unnecessary = 1;\r\n    /**\r\n     * Deprecated or obsolete code.\r\n     *\r\n     * Clients are allowed to rendered diagnostics with this tag strike through.\r\n     */\r\n    DiagnosticTag.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * Completion item tags are extra annotations that tweak the rendering of a completion\r\n * item.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    /**\r\n     * Render a completion as obsolete, usually using a strike-out.\r\n     */\r\n    CompletionItemTag.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\n/**\r\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\r\n * @since 3.15\r\n */\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    /**\r\n     * Render a symbol as obsolete, usually using a strike-out.\r\n     */\r\n    SymbolTag.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nexport var DocumentSymbol;\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Empty kind.\r\n     */\r\n    CodeActionKind.Empty = '';\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n    /**\r\n     * Base kind for auto-fix source actions: `source.fixAll`.\r\n     *\r\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\r\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    CodeActionKind.SourceFixAll = 'source.fixAll';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void 0) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data)) {\r\n            result.data = data;\r\n        }\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\nexport var DocumentLink;\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\n/**\r\n * The SelectionRange namespace provides helper function to work with\r\n * SelectionRange literals.\r\n */\r\nexport var SelectionRange;\r\n(function (SelectionRange) {\r\n    /**\r\n     * Creates a new SelectionRange\r\n     * @param range the range.\r\n     * @param parent an optional parent.\r\n     */\r\n    function create(range, parent) {\r\n        return { range: range, parent: parent };\r\n    }\r\n    SelectionRange.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\r\n    }\r\n    SelectionRange.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\n/**\r\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\r\n */\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = undefined;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = undefined;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === undefined) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\r\nexports.SelectionRangeRequest = protocol_selectionRange_1.SelectionRangeRequest;\r\nconst protocol_progress_1 = require(\"./protocol.progress\");\r\nexports.WorkDoneProgress = protocol_progress_1.WorkDoneProgress;\r\nexports.WorkDoneProgressCreateRequest = protocol_progress_1.WorkDoneProgressCreateRequest;\r\nexports.WorkDoneProgressCancelNotification = protocol_progress_1.WorkDoneProgressCancelNotification;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * The DocumentFilter namespace provides helper functions to work with\r\n * [DocumentFilter](#DocumentFilter) literals.\r\n */\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The DocumentSelector namespace provides helper functions to work with\r\n * [DocumentSelector](#DocumentSelector)s.\r\n */\r\nvar DocumentSelector;\r\n(function (DocumentSelector) {\r\n    function is(value) {\r\n        if (!Array.isArray(value)) {\r\n            return false;\r\n        }\r\n        for (let elem of value) {\r\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    DocumentSelector.is = is;\r\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guarantee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * The StaticRegistrationOptions namespace provides helper functions to work with\r\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\r\n */\r\nvar StaticRegistrationOptions;\r\n(function (StaticRegistrationOptions) {\r\n    function hasId(value) {\r\n        const candidate = value;\r\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\r\n    }\r\n    StaticRegistrationOptions.hasId = hasId;\r\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\r\n/**\r\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\r\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\r\n */\r\nvar TextDocumentRegistrationOptions;\r\n(function (TextDocumentRegistrationOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\r\n    }\r\n    TextDocumentRegistrationOptions.is = is;\r\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\r\n/**\r\n * The WorkDoneProgressOptions namespace provides helper functions to work with\r\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\r\n */\r\nvar WorkDoneProgressOptions;\r\n(function (WorkDoneProgressOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\r\n    }\r\n    WorkDoneProgressOptions.is = is;\r\n    function hasWorkDoneProgress(value) {\r\n        const candidate = value;\r\n        return candidate && Is.boolean(candidate.workDoneProgress);\r\n    }\r\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\r\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\r\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\r\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\r\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\r\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\r\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\r\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.method = 'textDocument/completion';\r\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\r\n    /** @deprecated Use CompletionRequest.type */\r\n    CompletionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.method = 'completionItem/resolve';\r\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.method = 'textDocument/hover';\r\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\n/**\r\n * How a signature help was triggered.\r\n *\r\n * @since 3.15.0\r\n */\r\nvar SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    /**\r\n     * Signature help was invoked manually by the user or by a command.\r\n     */\r\n    SignatureHelpTriggerKind.Invoked = 1;\r\n    /**\r\n     * Signature help was triggered by a trigger character.\r\n     */\r\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Signature help was triggered by the cursor moving or by the document content changing.\r\n     */\r\n    SignatureHelpTriggerKind.ContentChange = 3;\r\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\r\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.method = 'textDocument/definition';\r\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\r\n    /** @deprecated Use DefinitionRequest.type */\r\n    DefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.method = 'textDocument/references';\r\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\r\n    /** @deprecated Use ReferencesRequest.type */\r\n    ReferencesRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\r\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\r\n    /** @deprecated Use DocumentHighlightRequest.type */\r\n    DocumentHighlightRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\r\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\r\n    /** @deprecated Use DocumentSymbolRequest.type */\r\n    DocumentSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.method = 'textDocument/codeAction';\r\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\r\n    /** @deprecated Use CodeActionRequest.type */\r\n    CodeActionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\r\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\r\n    /** @deprecated Use WorkspaceSymbolRequest.type */\r\n    WorkspaceSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new messages_1.ProtocolRequestType('textDocument/codeLens');\r\n    /** @deprecated Use CodeLensRequest.type */\r\n    CodeLensRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.method = 'textDocument/documentLink';\r\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\r\n    /** @deprecated Use DocumentLinkRequest.type */\r\n    DocumentLinkRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.method = 'textDocument/formatting';\r\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\r\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\r\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.method = 'textDocument/rename';\r\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\r\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction objectLiteral(value) {\r\n    // Strictly speaking class instances pass this check as well. Since the LSP\r\n    // doesn't use classes we ignore this for now. If we do we need to add something\r\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n    return value !== null && typeof value === 'object';\r\n}\r\nexports.objectLiteral = objectLiteral;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.method = 'textDocument/implementation';\r\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\r\n    /** @deprecated Use ImplementationRequest.type */\r\n    ImplementationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\r\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\r\n    /** @deprecated Use TypeDefinitionRequest.type */\r\n    TypeDefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.method = 'textDocument/documentColor';\r\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\r\n    /** @deprecated Use DocumentColorRequest.type */\r\n    DocumentColorRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\r\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\r\n    /** @deprecated Use FoldingRangeRequest.type */\r\n    FoldingRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.method = 'textDocument/declaration';\r\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\r\n    /** @deprecated Use DeclarationRequest.type */\r\n    DeclarationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to provide selection ranges in a document. The request's\r\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\r\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar SelectionRangeRequest;\r\n(function (SelectionRangeRequest) {\r\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\r\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\r\n    /** @deprecated  Use SelectionRangeRequest.type */\r\n    SelectionRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nvar WorkDoneProgress;\r\n(function (WorkDoneProgress) {\r\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\r\n/**\r\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\r\n * reporting from the server.\r\n */\r\nvar WorkDoneProgressCreateRequest;\r\n(function (WorkDoneProgressCreateRequest) {\r\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\r\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\r\n/**\r\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\r\n * initiated on the server side.\r\n */\r\nvar WorkDoneProgressCancelNotification;\r\n(function (WorkDoneProgressCancelNotification) {\r\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\r\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) TypeFox and others. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to result a `CallHierarchyItem` in a document at a given position.\r\n * Can be used as an input to a incoming or outgoing call hierarchy.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyPrepareRequest;\r\n(function (CallHierarchyPrepareRequest) {\r\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\r\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\r\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\r\n/**\r\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyIncomingCallsRequest;\r\n(function (CallHierarchyIncomingCallsRequest) {\r\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\r\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\r\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\r\n/**\r\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyOutgoingCallsRequest;\r\n(function (CallHierarchyOutgoingCallsRequest) {\r\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\r\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\r\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A set of predefined token types. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenTypes;\r\n(function (SemanticTokenTypes) {\r\n    SemanticTokenTypes[\"comment\"] = \"comment\";\r\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\r\n    SemanticTokenTypes[\"string\"] = \"string\";\r\n    SemanticTokenTypes[\"number\"] = \"number\";\r\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\r\n    SemanticTokenTypes[\"operator\"] = \"operator\";\r\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\r\n    SemanticTokenTypes[\"type\"] = \"type\";\r\n    SemanticTokenTypes[\"struct\"] = \"struct\";\r\n    SemanticTokenTypes[\"class\"] = \"class\";\r\n    SemanticTokenTypes[\"interface\"] = \"interface\";\r\n    SemanticTokenTypes[\"enum\"] = \"enum\";\r\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\r\n    SemanticTokenTypes[\"function\"] = \"function\";\r\n    SemanticTokenTypes[\"member\"] = \"member\";\r\n    SemanticTokenTypes[\"property\"] = \"property\";\r\n    SemanticTokenTypes[\"macro\"] = \"macro\";\r\n    SemanticTokenTypes[\"variable\"] = \"variable\";\r\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\r\n    SemanticTokenTypes[\"label\"] = \"label\";\r\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\r\n/**\r\n * A set of predefined token modifiers. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenModifiers;\r\n(function (SemanticTokenModifiers) {\r\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\r\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\r\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\r\n    SemanticTokenModifiers[\"reference\"] = \"reference\";\r\n    SemanticTokenModifiers[\"static\"] = \"static\";\r\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\r\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\r\n    SemanticTokenModifiers[\"async\"] = \"async\";\r\n    SemanticTokenModifiers[\"volatile\"] = \"volatile\";\r\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\r\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokens;\r\n(function (SemanticTokens) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\r\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\r\n    }\r\n    SemanticTokens.is = is;\r\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRequest;\r\n(function (SemanticTokensRequest) {\r\n    SemanticTokensRequest.method = 'textDocument/semanticTokens';\r\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\r\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensEditsRequest;\r\n(function (SemanticTokensEditsRequest) {\r\n    SemanticTokensEditsRequest.method = 'textDocument/semanticTokens/edits';\r\n    SemanticTokensEditsRequest.type = new messages_1.ProtocolRequestType(SemanticTokensEditsRequest.method);\r\n})(SemanticTokensEditsRequest = exports.SemanticTokensEditsRequest || (exports.SemanticTokensEditsRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRangeRequest;\r\n(function (SemanticTokensRangeRequest) {\r\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\r\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\r\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst proto = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => value.toString();\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri)\r\n        };\r\n    }\r\n    function asVersionedTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri),\r\n            version: textDocument.version\r\n        };\r\n    }\r\n    function asOpenTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: {\r\n                uri: _uriConverter(textDocument.uri),\r\n                languageId: textDocument.languageId,\r\n                version: textDocument.version,\r\n                text: textDocument.getText()\r\n            }\r\n        };\r\n    }\r\n    function isTextDocumentChangeEvent(value) {\r\n        let candidate = value;\r\n        return !!candidate.document && !!candidate.contentChanges;\r\n    }\r\n    function isTextDocument(value) {\r\n        let candidate = value;\r\n        return !!candidate.uri && !!candidate.version;\r\n    }\r\n    function asChangeTextDocumentParams(arg) {\r\n        if (isTextDocument(arg)) {\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(arg.uri),\r\n                    version: arg.version\r\n                },\r\n                contentChanges: [{ text: arg.getText() }]\r\n            };\r\n            return result;\r\n        }\r\n        else if (isTextDocumentChangeEvent(arg)) {\r\n            let document = arg.document;\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(document.uri),\r\n                    version: document.version\r\n                },\r\n                contentChanges: arg.contentChanges.map((change) => {\r\n                    let range = change.range;\r\n                    return {\r\n                        range: {\r\n                            start: { line: range.start.line, character: range.start.character },\r\n                            end: { line: range.end.line, character: range.end.character }\r\n                        },\r\n                        rangeLength: change.rangeLength,\r\n                        text: change.text\r\n                    };\r\n                })\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            throw Error('Unsupported text document change parameter');\r\n        }\r\n    }\r\n    function asCloseTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\r\n        let result = {\r\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\r\n        };\r\n        if (includeContent) {\r\n            result.text = textDocument.getText();\r\n        }\r\n        return result;\r\n    }\r\n    function asTextDocumentSaveReason(reason) {\r\n        switch (reason) {\r\n            case code.TextDocumentSaveReason.Manual:\r\n                return proto.TextDocumentSaveReason.Manual;\r\n            case code.TextDocumentSaveReason.AfterDelay:\r\n                return proto.TextDocumentSaveReason.AfterDelay;\r\n            case code.TextDocumentSaveReason.FocusOut:\r\n                return proto.TextDocumentSaveReason.FocusOut;\r\n        }\r\n        return proto.TextDocumentSaveReason.Manual;\r\n    }\r\n    function asWillSaveTextDocumentParams(event) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(event.document),\r\n            reason: asTextDocumentSaveReason(event.reason)\r\n        };\r\n    }\r\n    function asTextDocumentPositionParams(textDocument, position) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position)\r\n        };\r\n    }\r\n    function asCompletionTriggerKind(triggerKind) {\r\n        switch (triggerKind) {\r\n            case code.CompletionTriggerKind.TriggerCharacter:\r\n                return proto.CompletionTriggerKind.TriggerCharacter;\r\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\r\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\r\n            default:\r\n                return proto.CompletionTriggerKind.Invoked;\r\n        }\r\n    }\r\n    function asCompletionParams(textDocument, position, context) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: {\r\n                triggerKind: asCompletionTriggerKind(context.triggerKind),\r\n                triggerCharacter: context.triggerCharacter\r\n            }\r\n        };\r\n    }\r\n    function asSignatureHelpTriggerKind(triggerKind) {\r\n        switch (triggerKind) {\r\n            case code.SignatureHelpTriggerKind.Invoke:\r\n                return proto.SignatureHelpTriggerKind.Invoked;\r\n            case code.SignatureHelpTriggerKind.TriggerCharacter:\r\n                return proto.SignatureHelpTriggerKind.TriggerCharacter;\r\n            case code.SignatureHelpTriggerKind.ContentChange:\r\n                return proto.SignatureHelpTriggerKind.ContentChange;\r\n        }\r\n    }\r\n    function asParameterInformation(value) {\r\n        // We leave the documentation out on purpose since it usually adds no\r\n        // value for the server.\r\n        return {\r\n            label: value.label\r\n        };\r\n    }\r\n    function asParameterInformations(values) {\r\n        return values.map(asParameterInformation);\r\n    }\r\n    function asSignatureInformation(value) {\r\n        // We leave the documentation out on purpose since it usually adds no\r\n        // value for the server.\r\n        return {\r\n            label: value.label,\r\n            parameters: asParameterInformations(value.parameters)\r\n        };\r\n    }\r\n    function asSignatureInformations(values) {\r\n        return values.map(asSignatureInformation);\r\n    }\r\n    function asSignatureHelp(value) {\r\n        if (value === undefined) {\r\n            return value;\r\n        }\r\n        return {\r\n            signatures: asSignatureInformations(value.signatures),\r\n            activeSignature: value.activeSignature,\r\n            activeParameter: value.activeParameter\r\n        };\r\n    }\r\n    function asSignatureHelpParams(textDocument, position, context) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: {\r\n                isRetrigger: context.isRetrigger,\r\n                triggerCharacter: context.triggerCharacter,\r\n                triggerKind: asSignatureHelpTriggerKind(context.triggerKind),\r\n                activeSignatureHelp: asSignatureHelp(context.activeSignatureHelp)\r\n            }\r\n        };\r\n    }\r\n    function asWorkerPosition(position) {\r\n        return { line: position.line, character: position.character };\r\n    }\r\n    function asPosition(value) {\r\n        if (value === undefined || value === null) {\r\n            return value;\r\n        }\r\n        return { line: value.line, character: value.character };\r\n    }\r\n    function asPositions(value) {\r\n        let result = [];\r\n        for (let elem of value) {\r\n            result.push(asPosition(elem));\r\n        }\r\n        return result;\r\n    }\r\n    function isInsertReplace(value) {\r\n        const candidate = value;\r\n        return candidate && !!candidate.inserting && !!candidate.replacing;\r\n    }\r\n    function asRange(value) {\r\n        if (value === undefined || value === null) {\r\n            return value;\r\n        }\r\n        // The LSP has no support yet for insert replace. So this can never happen.\r\n        if (isInsertReplace(value)) {\r\n            throw new Error(`Receving unknown insert replace range.`);\r\n        }\r\n        return { start: asPosition(value.start), end: asPosition(value.end) };\r\n    }\r\n    function asLocation(value) {\r\n        if (value === undefined || value === null) {\r\n            return value;\r\n        }\r\n        return proto.Location.create(asUri(value.uri), asRange(value.range));\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        switch (value) {\r\n            case code.DiagnosticSeverity.Error:\r\n                return proto.DiagnosticSeverity.Error;\r\n            case code.DiagnosticSeverity.Warning:\r\n                return proto.DiagnosticSeverity.Warning;\r\n            case code.DiagnosticSeverity.Information:\r\n                return proto.DiagnosticSeverity.Information;\r\n            case code.DiagnosticSeverity.Hint:\r\n                return proto.DiagnosticSeverity.Hint;\r\n        }\r\n    }\r\n    function asDiagnosticTags(tags) {\r\n        if (!tags) {\r\n            return undefined;\r\n        }\r\n        let result = [];\r\n        for (let tag of tags) {\r\n            let converted = asDiagnosticTag(tag);\r\n            if (converted !== undefined) {\r\n                result.push(converted);\r\n            }\r\n        }\r\n        return result.length > 0 ? result : undefined;\r\n    }\r\n    function asDiagnosticTag(tag) {\r\n        switch (tag) {\r\n            case code.DiagnosticTag.Unnecessary:\r\n                return proto.DiagnosticTag.Unnecessary;\r\n            case code.DiagnosticTag.Deprecated:\r\n                return proto.DiagnosticTag.Deprecated;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n    function asRelatedInformation(item) {\r\n        return {\r\n            message: item.message,\r\n            location: asLocation(item.location)\r\n        };\r\n    }\r\n    function asRelatedInformations(items) {\r\n        return items.map(asRelatedInformation);\r\n    }\r\n    function asDiagnostic(item) {\r\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\r\n        if (Is.number(item.severity)) {\r\n            result.severity = asDiagnosticSeverity(item.severity);\r\n        }\r\n        if (Is.number(item.code) || Is.string(item.code)) {\r\n            result.code = item.code;\r\n        }\r\n        if (Array.isArray(item.tags)) {\r\n            result.tags = asDiagnosticTags(item.tags);\r\n        }\r\n        if (item.relatedInformation) {\r\n            result.relatedInformation = asRelatedInformations(item.relatedInformation);\r\n        }\r\n        if (item.source) {\r\n            result.source = item.source;\r\n        }\r\n        return result;\r\n    }\r\n    function asDiagnostics(items) {\r\n        if (items === undefined || items === null) {\r\n            return items;\r\n        }\r\n        return items.map(asDiagnostic);\r\n    }\r\n    function asDocumentation(format, documentation) {\r\n        switch (format) {\r\n            case '$string':\r\n                return documentation;\r\n            case proto.MarkupKind.PlainText:\r\n                return { kind: format, value: documentation };\r\n            case proto.MarkupKind.Markdown:\r\n                return { kind: format, value: documentation.value };\r\n            default:\r\n                return `Unsupported Markup content received. Kind is: ${format}`;\r\n        }\r\n    }\r\n    function asCompletionItemTag(tag) {\r\n        switch (tag) {\r\n            case code.CompletionItemTag.Deprecated:\r\n                return proto.CompletionItemTag.Deprecated;\r\n        }\r\n        return undefined;\r\n    }\r\n    function asCompletionItemTags(tags) {\r\n        if (tags === undefined) {\r\n            return tags;\r\n        }\r\n        const result = [];\r\n        for (let tag of tags) {\r\n            const converted = asCompletionItemTag(tag);\r\n            if (converted !== undefined) {\r\n                result.push(converted);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionItemKind(value, original) {\r\n        if (original !== undefined) {\r\n            return original;\r\n        }\r\n        return value + 1;\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = { label: item.label };\r\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        // We only send items back we created. So this can't be something else than\r\n        // a string right now.\r\n        if (item.documentation) {\r\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\r\n                result.documentation = item.documentation;\r\n            }\r\n            else {\r\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\r\n            }\r\n        }\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        fillPrimaryInsertText(result, item);\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (item.commitCharacters) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        const tags = asCompletionItemTags(item.tags);\r\n        if (protocolItem) {\r\n            if (protocolItem.data !== undefined) {\r\n                result.data = protocolItem.data;\r\n            }\r\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\r\n                if (protocolItem.deprecated === true && tags !== undefined && tags.length > 0) {\r\n                    const index = tags.indexOf(code.CompletionItemTag.Deprecated);\r\n                    if (index !== -1) {\r\n                        tags.splice(index, 1);\r\n                    }\r\n                }\r\n                result.deprecated = protocolItem.deprecated;\r\n            }\r\n        }\r\n        if (tags !== undefined && tags.length > 0) {\r\n            result.tags = tags;\r\n        }\r\n        return result;\r\n    }\r\n    function fillPrimaryInsertText(target, source) {\r\n        let format = proto.InsertTextFormat.PlainText;\r\n        let text = undefined;\r\n        let range = undefined;\r\n        if (source.textEdit) {\r\n            text = source.textEdit.newText;\r\n            range = asRange(source.textEdit.range);\r\n        }\r\n        else if (source.insertText instanceof code.SnippetString) {\r\n            format = proto.InsertTextFormat.Snippet;\r\n            text = source.insertText.value;\r\n        }\r\n        else {\r\n            text = source.insertText;\r\n        }\r\n        if (source.range) {\r\n            range = asRange(source.range);\r\n        }\r\n        target.insertTextFormat = format;\r\n        if (source.fromEdit && text !== undefined && range !== undefined) {\r\n            target.textEdit = { newText: text, range: range };\r\n        }\r\n        else {\r\n            target.insertText = text;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        return { range: asRange(edit.range), newText: edit.newText };\r\n    }\r\n    function asTextEdits(edits) {\r\n        if (edits === undefined || edits === null) {\r\n            return edits;\r\n        }\r\n        return edits.map(asTextEdit);\r\n    }\r\n    function asSymbolKind(item) {\r\n        if (item <= code.SymbolKind.TypeParameter) {\r\n            // Symbol kind is one based in the protocol and zero based in code.\r\n            return (item + 1);\r\n        }\r\n        return proto.SymbolKind.Property;\r\n    }\r\n    function asSymbolTag(item) {\r\n        return item;\r\n    }\r\n    function asSymbolTags(items) {\r\n        return items.map(asSymbolTag);\r\n    }\r\n    function asReferenceParams(textDocument, position, options) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: { includeDeclaration: options.includeDeclaration }\r\n        };\r\n    }\r\n    function asCodeActionContext(context) {\r\n        if (context === undefined || context === null) {\r\n            return context;\r\n        }\r\n        let only;\r\n        if (context.only && Is.string(context.only.value)) {\r\n            only = [context.only.value];\r\n        }\r\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), only);\r\n    }\r\n    function asCommand(item) {\r\n        let result = proto.Command.create(item.title, item.command);\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        let result = proto.CodeLens.create(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item instanceof protocolCodeLens_1.default) {\r\n            if (item.data) {\r\n                result.data = item.data;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function asFormattingOptions(item) {\r\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\r\n    }\r\n    function asDocumentSymbolParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asCodeLensParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asDocumentLink(item) {\r\n        let result = proto.DocumentLink.create(asRange(item.range));\r\n        if (item.target) {\r\n            result.target = asUri(item.target);\r\n        }\r\n        if (item.tooltip !== undefined) {\r\n            result.tooltip = item.tooltip;\r\n        }\r\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\r\n        if (protocolItem && protocolItem.data) {\r\n            result.data = protocolItem.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLinkParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    return {\r\n        asUri,\r\n        asTextDocumentIdentifier,\r\n        asVersionedTextDocumentIdentifier,\r\n        asOpenTextDocumentParams,\r\n        asChangeTextDocumentParams,\r\n        asCloseTextDocumentParams,\r\n        asSaveTextDocumentParams,\r\n        asWillSaveTextDocumentParams,\r\n        asTextDocumentPositionParams,\r\n        asCompletionParams,\r\n        asSignatureHelpParams,\r\n        asWorkerPosition,\r\n        asRange,\r\n        asPosition,\r\n        asPositions,\r\n        asLocation,\r\n        asDiagnosticSeverity,\r\n        asDiagnosticTag,\r\n        asDiagnostic,\r\n        asDiagnostics,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asSymbolKind,\r\n        asSymbolTag,\r\n        asSymbolTags,\r\n        asReferenceParams,\r\n        asCodeActionContext,\r\n        asCommand,\r\n        asCodeLens,\r\n        asFormattingOptions,\r\n        asDocumentSymbolParams,\r\n        asCodeLensParams,\r\n        asDocumentLink,\r\n        asDocumentLinkParams\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst ls = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nvar CodeBlock;\r\n(function (CodeBlock) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\r\n    }\r\n    CodeBlock.is = is;\r\n})(CodeBlock || (CodeBlock = {}));\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => code.Uri.parse(value);\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asDiagnostics(diagnostics) {\r\n        return diagnostics.map(asDiagnostic);\r\n    }\r\n    function asDiagnostic(diagnostic) {\r\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\r\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\r\n            result.code = diagnostic.code;\r\n        }\r\n        if (diagnostic.source) {\r\n            result.source = diagnostic.source;\r\n        }\r\n        if (diagnostic.relatedInformation) {\r\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\r\n        }\r\n        if (Array.isArray(diagnostic.tags)) {\r\n            result.tags = asDiagnosticTags(diagnostic.tags);\r\n        }\r\n        return result;\r\n    }\r\n    function asRelatedInformation(relatedInformation) {\r\n        return relatedInformation.map(asDiagnosticRelatedInformation);\r\n    }\r\n    function asDiagnosticRelatedInformation(information) {\r\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\r\n    }\r\n    function asDiagnosticTags(tags) {\r\n        if (!tags) {\r\n            return undefined;\r\n        }\r\n        let result = [];\r\n        for (let tag of tags) {\r\n            let converted = asDiagnosticTag(tag);\r\n            if (converted !== undefined) {\r\n                result.push(converted);\r\n            }\r\n        }\r\n        return result.length > 0 ? result : undefined;\r\n    }\r\n    function asDiagnosticTag(tag) {\r\n        switch (tag) {\r\n            case ls.DiagnosticTag.Unnecessary:\r\n                return code.DiagnosticTag.Unnecessary;\r\n            case ls.DiagnosticTag.Deprecated:\r\n                return code.DiagnosticTag.Deprecated;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n    function asPosition(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Position(value.line, value.character);\r\n    }\r\n    function asRange(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Range(asPosition(value.start), asPosition(value.end));\r\n    }\r\n    function asRanges(value) {\r\n        return value.map(value => asRange(value));\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        if (value === undefined || value === null) {\r\n            return code.DiagnosticSeverity.Error;\r\n        }\r\n        switch (value) {\r\n            case ls.DiagnosticSeverity.Error:\r\n                return code.DiagnosticSeverity.Error;\r\n            case ls.DiagnosticSeverity.Warning:\r\n                return code.DiagnosticSeverity.Warning;\r\n            case ls.DiagnosticSeverity.Information:\r\n                return code.DiagnosticSeverity.Information;\r\n            case ls.DiagnosticSeverity.Hint:\r\n                return code.DiagnosticSeverity.Hint;\r\n        }\r\n        return code.DiagnosticSeverity.Error;\r\n    }\r\n    function asHoverContent(value) {\r\n        if (Is.string(value)) {\r\n            return new code.MarkdownString(value);\r\n        }\r\n        else if (CodeBlock.is(value)) {\r\n            let result = new code.MarkdownString();\r\n            return result.appendCodeblock(value.value, value.language);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            let result = [];\r\n            for (let element of value) {\r\n                let item = new code.MarkdownString();\r\n                if (CodeBlock.is(element)) {\r\n                    item.appendCodeblock(element.value, element.language);\r\n                }\r\n                else {\r\n                    item.appendMarkdown(element);\r\n                }\r\n                result.push(item);\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            let result;\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(value.value);\r\n                    return result;\r\n                default:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\r\n                    return result;\r\n            }\r\n        }\r\n    }\r\n    function asDocumentation(value) {\r\n        if (Is.string(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    return value.value;\r\n                default:\r\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\r\n            }\r\n        }\r\n    }\r\n    function asHover(hover) {\r\n        if (!hover) {\r\n            return undefined;\r\n        }\r\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\r\n    }\r\n    function asCompletionResult(result) {\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        if (Array.isArray(result)) {\r\n            let items = result;\r\n            return items.map(asCompletionItem);\r\n        }\r\n        let list = result;\r\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\r\n    }\r\n    function asCompletionItemKind(value) {\r\n        // Protocol item kind is 1 based, codes item kind is zero based.\r\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\r\n            return [value - 1, undefined];\r\n        }\r\n        return [code.CompletionItemKind.Text, value];\r\n    }\r\n    function asCompletionItemTag(tag) {\r\n        switch (tag) {\r\n            case ls.CompletionItemTag.Deprecated:\r\n                return code.CompletionItemTag.Deprecated;\r\n        }\r\n        return undefined;\r\n    }\r\n    function asCompletionItemTags(tags) {\r\n        if (tags === undefined || tags === null) {\r\n            return [];\r\n        }\r\n        const result = [];\r\n        for (let tag of tags) {\r\n            const converted = asCompletionItemTag(tag);\r\n            if (converted !== undefined) {\r\n                result.push(converted);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionItem(item) {\r\n        let tags = asCompletionItemTags(item.tags);\r\n        let result = new protocolCompletionItem_1.default(item.label);\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\r\n        }\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        let insertText = asCompletionInsertText(item);\r\n        if (insertText) {\r\n            result.insertText = insertText.text;\r\n            result.range = insertText.range;\r\n            result.fromEdit = insertText.fromEdit;\r\n        }\r\n        if (Is.number(item.kind)) {\r\n            let [itemKind, original] = asCompletionItemKind(item.kind);\r\n            result.kind = itemKind;\r\n            if (original) {\r\n                result.originalItemKind = original;\r\n            }\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (Is.stringArray(item.commitCharacters)) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.deprecated === true || item.deprecated === false) {\r\n            result.deprecated = item.deprecated;\r\n            if (item.deprecated === true) {\r\n                tags.push(code.CompletionItemTag.Deprecated);\r\n            }\r\n        }\r\n        if (item.preselect === true || item.preselect === false) {\r\n            result.preselect = item.preselect;\r\n        }\r\n        if (item.data !== undefined) {\r\n            result.data = item.data;\r\n        }\r\n        if (tags.length > 0) {\r\n            result.tags = tags;\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionInsertText(item) {\r\n        if (item.textEdit) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n            else {\r\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n        }\r\n        else if (item.insertText) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\r\n            }\r\n            else {\r\n                return { text: item.insertText, fromEdit: false };\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        if (!edit) {\r\n            return undefined;\r\n        }\r\n        return new code.TextEdit(asRange(edit.range), edit.newText);\r\n    }\r\n    function asTextEdits(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asTextEdit);\r\n    }\r\n    function asSignatureHelp(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.SignatureHelp();\r\n        if (Is.number(item.activeSignature)) {\r\n            result.activeSignature = item.activeSignature;\r\n        }\r\n        else {\r\n            // activeSignature was optional in the past\r\n            result.activeSignature = 0;\r\n        }\r\n        if (Is.number(item.activeParameter)) {\r\n            result.activeParameter = item.activeParameter;\r\n        }\r\n        else {\r\n            // activeParameter was optional in the past\r\n            result.activeParameter = 0;\r\n        }\r\n        if (item.signatures) {\r\n            result.signatures = asSignatureInformations(item.signatures);\r\n        }\r\n        return result;\r\n    }\r\n    function asSignatureInformations(items) {\r\n        return items.map(asSignatureInformation);\r\n    }\r\n    function asSignatureInformation(item) {\r\n        let result = new code.SignatureInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        if (item.parameters) {\r\n            result.parameters = asParameterInformations(item.parameters);\r\n        }\r\n        return result;\r\n    }\r\n    function asParameterInformations(item) {\r\n        return item.map(asParameterInformation);\r\n    }\r\n    function asParameterInformation(item) {\r\n        let result = new code.ParameterInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        return result;\r\n    }\r\n    function asLocation(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\r\n    }\r\n    function asDeclarationResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return asLocationResult(item);\r\n    }\r\n    function asDefinitionResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return asLocationResult(item);\r\n    }\r\n    function asLocationLink(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = {\r\n            targetUri: _uriConverter(item.targetUri),\r\n            targetRange: asRange(item.targetSelectionRange),\r\n            originSelectionRange: asRange(item.originSelectionRange),\r\n            targetSelectionRange: asRange(item.targetSelectionRange)\r\n        };\r\n        if (!result.targetSelectionRange) {\r\n            throw new Error(`targetSelectionRange must not be undefined or null`);\r\n        }\r\n        return result;\r\n    }\r\n    function asLocationResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        if (Is.array(item)) {\r\n            if (item.length === 0) {\r\n                return [];\r\n            }\r\n            else if (ls.LocationLink.is(item[0])) {\r\n                let links = item;\r\n                return links.map((link) => asLocationLink(link));\r\n            }\r\n            else {\r\n                let locations = item;\r\n                return locations.map((location) => asLocation(location));\r\n            }\r\n        }\r\n        else if (ls.LocationLink.is(item)) {\r\n            return [asLocationLink(item)];\r\n        }\r\n        else {\r\n            return asLocation(item);\r\n        }\r\n    }\r\n    function asReferences(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(location => asLocation(location));\r\n    }\r\n    function asDocumentHighlights(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentHighlight);\r\n    }\r\n    function asDocumentHighlight(item) {\r\n        let result = new code.DocumentHighlight(asRange(item.range));\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asDocumentHighlightKind(item.kind);\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentHighlightKind(item) {\r\n        switch (item) {\r\n            case ls.DocumentHighlightKind.Text:\r\n                return code.DocumentHighlightKind.Text;\r\n            case ls.DocumentHighlightKind.Read:\r\n                return code.DocumentHighlightKind.Read;\r\n            case ls.DocumentHighlightKind.Write:\r\n                return code.DocumentHighlightKind.Write;\r\n        }\r\n        return code.DocumentHighlightKind.Text;\r\n    }\r\n    function asSymbolInformations(values, uri) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(information => asSymbolInformation(information, uri));\r\n    }\r\n    function asSymbolKind(item) {\r\n        if (item <= ls.SymbolKind.TypeParameter) {\r\n            // Symbol kind is one based in the protocol and zero based in code.\r\n            return item - 1;\r\n        }\r\n        return code.SymbolKind.Property;\r\n    }\r\n    function asSymbolTag(value) {\r\n        return value;\r\n    }\r\n    function asSymbolTags(items) {\r\n        if (items === undefined || items === null) {\r\n            return undefined;\r\n        }\r\n        return items.map(asSymbolTag);\r\n    }\r\n    function asSymbolInformation(item, uri) {\r\n        // Symbol kind is one based in the protocol and zero based in code.\r\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\r\n        if (item.containerName) {\r\n            result.containerName = item.containerName;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentSymbols(values) {\r\n        if (values === undefined || values === null) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentSymbol);\r\n    }\r\n    function asDocumentSymbol(value) {\r\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\r\n        if (value.children !== undefined && value.children.length > 0) {\r\n            let children = [];\r\n            for (let child of value.children) {\r\n                children.push(asDocumentSymbol(child));\r\n            }\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommand(item) {\r\n        let result = { title: item.title, command: item.command };\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommands(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asCommand);\r\n    }\r\n    const kindMapping = new Map();\r\n    kindMapping.set(ls.CodeActionKind.Empty, code.CodeActionKind.Empty);\r\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\r\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\r\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\r\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\r\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\r\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\r\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\r\n    function asCodeActionKind(item) {\r\n        if (item === undefined || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = kindMapping.get(item);\r\n        if (result) {\r\n            return result;\r\n        }\r\n        let parts = item.split('.');\r\n        result = code.CodeActionKind.Empty;\r\n        for (let part of parts) {\r\n            result = result.append(part);\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeActionKinds(items) {\r\n        if (items === undefined || items === null) {\r\n            return undefined;\r\n        }\r\n        return items.map(kind => asCodeActionKind(kind));\r\n    }\r\n    function asCodeAction(item) {\r\n        if (item === undefined || item === null) {\r\n            return undefined;\r\n        }\r\n        let result = new code.CodeAction(item.title);\r\n        if (item.kind !== undefined) {\r\n            result.kind = asCodeActionKind(item.kind);\r\n        }\r\n        if (item.diagnostics) {\r\n            result.diagnostics = asDiagnostics(item.diagnostics);\r\n        }\r\n        if (item.edit) {\r\n            result.edit = asWorkspaceEdit(item.edit);\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.isPreferred !== undefined) {\r\n            result.isPreferred = item.isPreferred;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new protocolCodeLens_1.default(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.data !== undefined && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLenses(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map((codeLens) => asCodeLens(codeLens));\r\n    }\r\n    function asWorkspaceEdit(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.WorkspaceEdit();\r\n        if (item.documentChanges) {\r\n            item.documentChanges.forEach(change => {\r\n                if (ls.CreateFile.is(change)) {\r\n                    result.createFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.RenameFile.is(change)) {\r\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options);\r\n                }\r\n                else if (ls.DeleteFile.is(change)) {\r\n                    result.deleteFile(_uriConverter(change.uri), change.options);\r\n                }\r\n                else if (ls.TextDocumentEdit.is(change)) {\r\n                    result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\r\n                }\r\n                else {\r\n                    console.error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\r\n                }\r\n            });\r\n        }\r\n        else if (item.changes) {\r\n            Object.keys(item.changes).forEach(key => {\r\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLink(item) {\r\n        let range = asRange(item.range);\r\n        let target = item.target ? asUri(item.target) : undefined;\r\n        // target must be optional in DocumentLink\r\n        let link = new protocolDocumentLink_1.default(range, target);\r\n        if (item.tooltip !== undefined) {\r\n            link.tooltip = item.tooltip;\r\n        }\r\n        if (item.data !== undefined && item.data !== null) {\r\n            link.data = item.data;\r\n        }\r\n        return link;\r\n    }\r\n    function asDocumentLinks(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asDocumentLink);\r\n    }\r\n    function asColor(color) {\r\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    function asColorInformation(ci) {\r\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\r\n    }\r\n    function asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(asColorInformation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asColorPresentation(cp) {\r\n        let presentation = new code.ColorPresentation(cp.label);\r\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\r\n        if (cp.textEdit) {\r\n            presentation.textEdit = asTextEdit(cp.textEdit);\r\n        }\r\n        return presentation;\r\n    }\r\n    function asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(asColorPresentation);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case ls.FoldingRangeKind.Comment:\r\n                    return code.FoldingRangeKind.Comment;\r\n                case ls.FoldingRangeKind.Imports:\r\n                    return code.FoldingRangeKind.Imports;\r\n                case ls.FoldingRangeKind.Region:\r\n                    return code.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    function asFoldingRange(r) {\r\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\r\n    }\r\n    function asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(asFoldingRange);\r\n        }\r\n        return undefined;\r\n    }\r\n    function asSelectionRange(selectionRange) {\r\n        return new code.SelectionRange(asRange(selectionRange.range), selectionRange.parent ? asSelectionRange(selectionRange.parent) : undefined);\r\n    }\r\n    function asSelectionRanges(selectionRanges) {\r\n        if (!Array.isArray(selectionRanges)) {\r\n            return [];\r\n        }\r\n        let result = [];\r\n        for (let range of selectionRanges) {\r\n            result.push(asSelectionRange(range));\r\n        }\r\n        return result;\r\n    }\r\n    return {\r\n        asUri,\r\n        asDiagnostics,\r\n        asDiagnostic,\r\n        asRange,\r\n        asRanges,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asDiagnosticTag,\r\n        asHover,\r\n        asCompletionResult,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asTextEdits,\r\n        asSignatureHelp,\r\n        asSignatureInformations,\r\n        asSignatureInformation,\r\n        asParameterInformations,\r\n        asParameterInformation,\r\n        asDeclarationResult,\r\n        asDefinitionResult,\r\n        asLocation,\r\n        asReferences,\r\n        asDocumentHighlights,\r\n        asDocumentHighlight,\r\n        asDocumentHighlightKind,\r\n        asSymbolKind,\r\n        asSymbolTag,\r\n        asSymbolTags,\r\n        asSymbolInformations,\r\n        asSymbolInformation,\r\n        asDocumentSymbols,\r\n        asDocumentSymbol,\r\n        asCommand,\r\n        asCommands,\r\n        asCodeAction,\r\n        asCodeActionKind,\r\n        asCodeActionKinds,\r\n        asCodeLens,\r\n        asCodeLenses,\r\n        asWorkspaceEdit,\r\n        asDocumentLink,\r\n        asDocumentLinks,\r\n        asFoldingRangeKind,\r\n        asFoldingRange,\r\n        asFoldingRanges,\r\n        asColor,\r\n        asColorInformation,\r\n        asColorInformations,\r\n        asColorPresentation,\r\n        asColorPresentations,\r\n        asSelectionRange,\r\n        asSelectionRanges\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Delayer {\r\n    constructor(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = undefined;\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n    }\r\n    trigger(task, delay = this.defaultDelay) {\r\n        this.task = task;\r\n        if (delay >= 0) {\r\n            this.cancelTimeout();\r\n        }\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new Promise((resolve) => {\r\n                this.onSuccess = resolve;\r\n            }).then(() => {\r\n                this.completionPromise = undefined;\r\n                this.onSuccess = undefined;\r\n                var result = this.task();\r\n                this.task = undefined;\r\n                return result;\r\n            });\r\n        }\r\n        if (delay >= 0 || this.timeout === void 0) {\r\n            this.timeout = setTimeout(() => {\r\n                this.timeout = undefined;\r\n                this.onSuccess(undefined);\r\n            }, delay >= 0 ? delay : this.defaultDelay);\r\n        }\r\n        return this.completionPromise;\r\n    }\r\n    forceDelivery() {\r\n        if (!this.completionPromise) {\r\n            return undefined;\r\n        }\r\n        this.cancelTimeout();\r\n        let result = this.task();\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n        return result;\r\n    }\r\n    isTriggered() {\r\n        return this.timeout !== void 0;\r\n    }\r\n    cancel() {\r\n        this.cancelTimeout();\r\n        this.completionPromise = undefined;\r\n    }\r\n    cancelTimeout() {\r\n        if (this.timeout !== void 0) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Delayer = Delayer;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let [id, options] = this.getRegistration(documentSelector, capabilities.colorProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideColorPresentations: (color, context, token) => {\r\n                const client = this._client;\r\n                const provideColorPresentations = (color, context, token) => {\r\n                    const requestParams = {\r\n                        color,\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\r\n                        range: client.code2ProtocolConverter.asRange(context.range)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideColorPresentations\r\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\r\n                    : provideColorPresentations(color, context, token);\r\n            },\r\n            provideDocumentColors: (document, token) => {\r\n                const client = this._client;\r\n                const provideDocumentColors = (document, token) => {\r\n                    const requestParams = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideDocumentColors\r\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\r\n                    : provideDocumentColors(document, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerColorProvider(options.documentSelector, provider), provider];\r\n    }\r\n    asColor(color) {\r\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(ci => {\r\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n    asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(cp => {\r\n                let presentation = new vscode_1.ColorPresentation(cp.label);\r\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\r\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\r\n                return presentation;\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.ColorProviderFeature = ColorProviderFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.configuration = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\r\n            let configuration = (params) => {\r\n                let result = [];\r\n                for (let item of params.items) {\r\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\r\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\r\n                }\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.configuration\r\n                ? middleware.configuration(params, token, configuration)\r\n                : configuration(params, token);\r\n        });\r\n    }\r\n    getConfiguration(resource, section) {\r\n        let result = null;\r\n        if (section) {\r\n            let index = section.lastIndexOf('.');\r\n            if (index === -1) {\r\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\r\n            }\r\n            else {\r\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index), resource);\r\n                if (config) {\r\n                    result = config.get(section.substr(index + 1));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\r\n            result = {};\r\n            for (let key of Object.keys(config)) {\r\n                if (config.has(key)) {\r\n                    result[key] = config.get(key);\r\n                }\r\n            }\r\n        }\r\n        if (!result) {\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.ConfigurationFeature = ConfigurationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ImplementationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let implementationSupport = ensure(ensure(capabilites, 'textDocument'), 'implementation');\r\n        implementationSupport.dynamicRegistration = true;\r\n        implementationSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let [id, options] = this.getRegistration(documentSelector, capabilities.implementationProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideImplementation: (document, position, token) => {\r\n                const client = this._client;\r\n                const provideImplementation = (document, position, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideImplementation\r\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\r\n                    : provideImplementation(document, position, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerImplementationProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nexports.ImplementationFeature = ImplementationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\r\n        let typeDefinitionSupport = ensure(ensure(capabilites, 'textDocument'), 'typeDefinition');\r\n        typeDefinitionSupport.dynamicRegistration = true;\r\n        typeDefinitionSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let [id, options] = this.getRegistration(documentSelector, capabilities.typeDefinitionProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideTypeDefinition: (document, position, token) => {\r\n                const client = this._client;\r\n                const provideTypeDefinition = (document, position, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideTypeDefinition\r\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\r\n                    : provideTypeDefinition(document, position, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nfunction access(target, key) {\r\n    if (target === void 0) {\r\n        return undefined;\r\n    }\r\n    return target[key];\r\n}\r\nfunction arrayDiff(left, right) {\r\n    return left.filter(element => right.indexOf(element) < 0);\r\n}\r\nexports.arrayDiff = arrayDiff;\r\nclass WorkspaceFoldersFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\r\n    }\r\n    fillInitializeParams(params) {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        this.initializeWithFolders(folders);\r\n        if (folders === void 0) {\r\n            params.workspaceFolders = null;\r\n        }\r\n        else {\r\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\r\n        }\r\n    }\r\n    initializeWithFolders(currentWorkspaceFolders) {\r\n        this._initialFolders = currentWorkspaceFolders;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.workspaceFolders = true;\r\n    }\r\n    initialize(capabilities) {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\r\n            let workspaceFolders = () => {\r\n                let folders = vscode_1.workspace.workspaceFolders;\r\n                if (folders === void 0) {\r\n                    return null;\r\n                }\r\n                let result = folders.map((folder) => {\r\n                    return this.asProtocol(folder);\r\n                });\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.workspaceFolders\r\n                ? middleware.workspaceFolders(token, workspaceFolders)\r\n                : workspaceFolders(token);\r\n        });\r\n        let value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\r\n        let id;\r\n        if (typeof value === 'string') {\r\n            id = value;\r\n        }\r\n        else if (value === true) {\r\n            id = UUID.generateUuid();\r\n        }\r\n        if (id) {\r\n            this.register(this.messages, {\r\n                id: id,\r\n                registerOptions: undefined\r\n            });\r\n        }\r\n    }\r\n    sendInitialEvent(currentWorkspaceFolders) {\r\n        if (this._initialFolders && currentWorkspaceFolders) {\r\n            const removed = arrayDiff(this._initialFolders, currentWorkspaceFolders);\r\n            const added = arrayDiff(currentWorkspaceFolders, this._initialFolders);\r\n            if (added.length > 0 || removed.length > 0) {\r\n                this.doSendEvent(added, removed);\r\n            }\r\n        }\r\n        else if (this._initialFolders) {\r\n            this.doSendEvent([], this._initialFolders);\r\n        }\r\n        else if (currentWorkspaceFolders) {\r\n            this.doSendEvent(currentWorkspaceFolders, []);\r\n        }\r\n    }\r\n    doSendEvent(addedFolders, removedFolders) {\r\n        let params = {\r\n            event: {\r\n                added: addedFolders.map(folder => this.asProtocol(folder)),\r\n                removed: removedFolders.map(folder => this.asProtocol(folder))\r\n            }\r\n        };\r\n        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\r\n    }\r\n    register(_message, data) {\r\n        let id = data.id;\r\n        let client = this._client;\r\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\r\n            let didChangeWorkspaceFolders = (event) => {\r\n                this.doSendEvent(event.added, event.removed);\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            middleware && middleware.didChangeWorkspaceFolders\r\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\r\n                : didChangeWorkspaceFolders(event);\r\n        });\r\n        this._listeners.set(id, disposable);\r\n        this.sendInitialEvent(vscode_1.workspace.workspaceFolders);\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable === void 0) {\r\n            return;\r\n        }\r\n        this._listeners.delete(id);\r\n        disposable.dispose();\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    asProtocol(workspaceFolder) {\r\n        if (workspaceFolder === void 0) {\r\n            return null;\r\n        }\r\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\r\n    }\r\n}\r\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass FoldingRangeFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'foldingRange');\r\n        capability.dynamicRegistration = true;\r\n        capability.rangeLimit = 5000;\r\n        capability.lineFoldingOnly = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let [id, options] = this.getRegistration(documentSelector, capabilities.foldingRangeProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideFoldingRanges: (document, context, token) => {\r\n                const client = this._client;\r\n                const provideFoldingRanges = (document, _, token) => {\r\n                    const requestParams = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(this.asFoldingRanges.bind(this), (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideFoldingRanges\r\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\r\n                    : provideFoldingRanges(document, context, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, provider), provider];\r\n    }\r\n    asFoldingRangeKind(kind) {\r\n        if (kind) {\r\n            switch (kind) {\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\r\n                    return vscode_1.FoldingRangeKind.Comment;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\r\n                    return vscode_1.FoldingRangeKind.Imports;\r\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\r\n                    return vscode_1.FoldingRangeKind.Region;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    asFoldingRanges(foldingRanges) {\r\n        if (Array.isArray(foldingRanges)) {\r\n            return foldingRanges.map(r => {\r\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, this.asFoldingRangeKind(r.kind));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.FoldingRangeFeature = FoldingRangeFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass DeclarationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DeclarationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const declarationSupport = ensure(ensure(capabilites, 'textDocument'), 'declaration');\r\n        declarationSupport.dynamicRegistration = true;\r\n        declarationSupport.linkSupport = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        const [id, options] = this.getRegistration(documentSelector, capabilities.declarationProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideDeclaration: (document, position, token) => {\r\n                const client = this._client;\r\n                const provideDeclaration = (document, position, token) => {\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDeclarationResult, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideDeclaration\r\n                    ? middleware.provideDeclaration(document, position, token, provideDeclaration)\r\n                    : provideDeclaration(document, position, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerDeclarationProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nexports.DeclarationFeature = DeclarationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = Object.create(null);\r\n    }\r\n    return target[key];\r\n}\r\nclass SelectionRangeFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.SelectionRangeRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'selectionRange');\r\n        capability.dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let [id, options] = this.getRegistration(documentSelector, capabilities.selectionRangeProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const provider = {\r\n            provideSelectionRanges: (document, positions, token) => {\r\n                const client = this._client;\r\n                const provideSelectionRanges = (document, positions, token) => {\r\n                    const requestParams = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                        positions: client.code2ProtocolConverter.asPositions(positions)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, requestParams, token).then((ranges) => client.protocol2CodeConverter.asSelectionRanges(ranges), (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, error);\r\n                        return Promise.resolve(null);\r\n                    });\r\n                };\r\n                const middleware = client.clientOptions.middleware;\r\n                return middleware.provideSelectionRanges\r\n                    ? middleware.provideSelectionRanges(document, positions, token, provideSelectionRanges)\r\n                    : provideSelectionRanges(document, positions, token);\r\n            }\r\n        };\r\n        return [vscode_1.languages.registerSelectionRangeProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nexports.SelectionRangeFeature = SelectionRangeFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst progressPart_1 = require(\"./progressPart\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = Object.create(null);\r\n    }\r\n    return target[key];\r\n}\r\nclass ProgressFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(capabilities, 'window').workDoneProgress = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        let createHandler = (params) => {\r\n            new progressPart_1.ProgressPart(this._client, params.token);\r\n        };\r\n        client.onRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, createHandler);\r\n    }\r\n}\r\nexports.ProgressFeature = ProgressFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nvar protocol2code;\r\n(function (protocol2code) {\r\n    function asCallHierarchyItem(converter, item) {\r\n        if (item === null) {\r\n            return undefined;\r\n        }\r\n        let result = new vscode_1.CallHierarchyItem(converter.asSymbolKind(item.kind), item.name, item.detail || '', converter.asUri(item.uri), converter.asRange(item.range), converter.asRange(item.selectionRange));\r\n        if (item.tags !== undefined) {\r\n            result.tags = converter.asSymbolTags(item.tags);\r\n        }\r\n        return result;\r\n    }\r\n    protocol2code.asCallHierarchyItem = asCallHierarchyItem;\r\n    function asCallHierarchyItems(converter, items) {\r\n        if (items === null) {\r\n            return undefined;\r\n        }\r\n        let result = items.map(item => asCallHierarchyItem(converter, item));\r\n        return result[0];\r\n    }\r\n    protocol2code.asCallHierarchyItems = asCallHierarchyItems;\r\n    function asCallHierarchyIncomingCall(converter, item) {\r\n        return new vscode_1.CallHierarchyIncomingCall(asCallHierarchyItem(converter, item.from), converter.asRanges(item.fromRanges));\r\n    }\r\n    protocol2code.asCallHierarchyIncomingCall = asCallHierarchyIncomingCall;\r\n    function asCallHierarchyIncomingCalls(converter, items) {\r\n        if (items === null) {\r\n            return undefined;\r\n        }\r\n        return items.map(item => asCallHierarchyIncomingCall(converter, item));\r\n    }\r\n    protocol2code.asCallHierarchyIncomingCalls = asCallHierarchyIncomingCalls;\r\n    function asCallHierarchyOutgoingCall(converter, item) {\r\n        return new vscode_1.CallHierarchyOutgoingCall(asCallHierarchyItem(converter, item.to), converter.asRanges(item.fromRanges));\r\n    }\r\n    protocol2code.asCallHierarchyOutgoingCall = asCallHierarchyOutgoingCall;\r\n    function asCallHierarchyOutgoingCalls(converter, items) {\r\n        if (items === null) {\r\n            return undefined;\r\n        }\r\n        return items.map(item => asCallHierarchyOutgoingCall(converter, item));\r\n    }\r\n    protocol2code.asCallHierarchyOutgoingCalls = asCallHierarchyOutgoingCalls;\r\n})(protocol2code || (protocol2code = {}));\r\nvar code2protocol;\r\n(function (code2protocol) {\r\n    function asCallHierarchyItem(converter, value) {\r\n        const result = {\r\n            name: value.name,\r\n            kind: converter.asSymbolKind(value.kind),\r\n            uri: converter.asUri(value.uri),\r\n            range: converter.asRange(value.range),\r\n            selectionRange: converter.asRange(value.selectionRange)\r\n        };\r\n        if (value.detail !== undefined && value.detail.length > 0) {\r\n            result.detail = value.detail;\r\n        }\r\n        if (value.tags !== undefined) {\r\n            result.tags = converter.asSymbolTags(value.tags);\r\n        }\r\n        return result;\r\n    }\r\n    code2protocol.asCallHierarchyItem = asCallHierarchyItem;\r\n})(code2protocol || (code2protocol = {}));\r\nclass CallHierarchyProvider {\r\n    constructor(client) {\r\n        this.client = client;\r\n        this.middleware = client.clientOptions.middleware;\r\n    }\r\n    prepareCallHierarchy(document, position, token) {\r\n        const client = this.client;\r\n        const middleware = this.middleware;\r\n        const prepareCallHierarchy = (document, position, token) => {\r\n            const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\r\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, params, token).then((result) => {\r\n                return protocol2code.asCallHierarchyItems(this.client.protocol2CodeConverter, result);\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        return middleware.prepareCallHierarchy\r\n            ? middleware.prepareCallHierarchy(document, position, token, prepareCallHierarchy)\r\n            : prepareCallHierarchy(document, position, token);\r\n    }\r\n    provideCallHierarchyIncomingCalls(item, token) {\r\n        const client = this.client;\r\n        const middleware = this.middleware;\r\n        const provideCallHierarchyIncomingCalls = (item, token) => {\r\n            const params = {\r\n                item: code2protocol.asCallHierarchyItem(client.code2ProtocolConverter, item)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type, params, token).then((result) => {\r\n                return protocol2code.asCallHierarchyIncomingCalls(client.protocol2CodeConverter, result);\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        return middleware.provideCallHierarchyIncomingCalls\r\n            ? middleware.provideCallHierarchyIncomingCalls(item, token, provideCallHierarchyIncomingCalls)\r\n            : provideCallHierarchyIncomingCalls(item, token);\r\n    }\r\n    provideCallHierarchyOutgoingCalls(item, token) {\r\n        const client = this.client;\r\n        const middleware = this.middleware;\r\n        const provideCallHierarchyOutgoingCalls = (item, token) => {\r\n            const params = {\r\n                item: code2protocol.asCallHierarchyItem(client.code2ProtocolConverter, item)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type, params, token).then((result) => {\r\n                return protocol2code.asCallHierarchyOutgoingCalls(client.protocol2CodeConverter, result);\r\n            }, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        return middleware.provideCallHierarchyOutgingCalls\r\n            ? middleware.provideCallHierarchyOutgingCalls(item, token, provideCallHierarchyOutgoingCalls)\r\n            : provideCallHierarchyOutgoingCalls(item, token);\r\n    }\r\n}\r\nclass CallHierarchyFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type);\r\n    }\r\n    fillClientCapabilities(cap) {\r\n        const capabilites = cap;\r\n        const capability = ensure(ensure(capabilites, 'textDocument'), 'callHierarchy');\r\n        capability.dynamicRegistration = true;\r\n    }\r\n    initialize(cap, documentSelector) {\r\n        const capabilities = cap;\r\n        const [id, options] = this.getRegistration(documentSelector, capabilities.callHierarchyProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const client = this._client;\r\n        const provider = new CallHierarchyProvider(client);\r\n        return [vscode_1.languages.registerCallHierarchyProvider(options.documentSelector, provider), provider];\r\n    }\r\n}\r\nexports.CallHierarchyFeature = CallHierarchyFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode = require(\"vscode\");\r\nconst client_1 = require(\"./client\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nvar protocol2code;\r\n(function (protocol2code) {\r\n    function asSemanticTokens(value) {\r\n        if (value === undefined || value === null) {\r\n            return undefined;\r\n        }\r\n        return new vscode.SemanticTokens(new Uint32Array(value.data), value.resultId);\r\n    }\r\n    protocol2code.asSemanticTokens = asSemanticTokens;\r\n    function asSemanticTokensEdit(value) {\r\n        return new vscode.SemanticTokensEdit(value.start, value.deleteCount, value.data !== undefined ? new Uint32Array(value.data) : undefined);\r\n    }\r\n    protocol2code.asSemanticTokensEdit = asSemanticTokensEdit;\r\n    function asSemanticTokensEdits(value) {\r\n        if (value === undefined || value === null) {\r\n            return undefined;\r\n        }\r\n        return new vscode.SemanticTokensEdits(value.edits.map(asSemanticTokensEdit), value.resultId);\r\n    }\r\n    protocol2code.asSemanticTokensEdits = asSemanticTokensEdits;\r\n    function asLegend(value) {\r\n        return value;\r\n    }\r\n    protocol2code.asLegend = asLegend;\r\n})(protocol2code || (protocol2code = {}));\r\nclass SemanticTokensFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type);\r\n    }\r\n    fillClientCapabilities(cap) {\r\n        const capabilites = cap;\r\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'semanticTokens');\r\n        capability.dynamicRegistration = true;\r\n        capability.tokenTypes = [\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.comment,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.keyword,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.number,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.regexp,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.operator,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.namespace,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.type,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.struct,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.class,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.interface,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.enum,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.typeParameter,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.function,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.member,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.macro,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.variable,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.parameter,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.property,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.label\r\n        ];\r\n        capability.tokenModifiers = [\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.declaration,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.documentation,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.static,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.abstract,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.deprecated,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.async,\r\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.readonly\r\n        ];\r\n    }\r\n    initialize(cap, documentSelector) {\r\n        const capabilities = cap;\r\n        let [id, options] = this.getRegistration(documentSelector, capabilities.semanticTokensProvider);\r\n        if (!id || !options) {\r\n            return;\r\n        }\r\n        this.register(this.messages, { id: id, registerOptions: options });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        const hasEditProvider = options.documentProvider !== undefined && typeof options.documentProvider !== 'boolean' && options.documentProvider.edits === true;\r\n        const documentProvider = {\r\n            provideDocumentSemanticTokens: (document, token) => {\r\n                const client = this._client;\r\n                const middleware = client.clientOptions.middleware;\r\n                const provideDocumentSemanticTokens = (document, token) => {\r\n                    const params = {\r\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type, params, token).then((result) => {\r\n                        return protocol2code.asSemanticTokens(result);\r\n                    }, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type, error);\r\n                        return undefined;\r\n                    });\r\n                };\r\n                return middleware.provideDocumentSemanticTokens\r\n                    ? middleware.provideDocumentSemanticTokens(document, token, provideDocumentSemanticTokens)\r\n                    : provideDocumentSemanticTokens(document, token);\r\n            },\r\n            provideDocumentSemanticTokensEdits: hasEditProvider\r\n                ? (document, previousResultId, token) => {\r\n                    const client = this._client;\r\n                    const middleware = client.clientOptions.middleware;\r\n                    const provideDocumentSemanticTokensEdits = (document, previousResultId, token) => {\r\n                        const params = {\r\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                            previousResultId\r\n                        };\r\n                        return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type, params, token).then((result) => {\r\n                            if (vscode_languageserver_protocol_1.Proposed.SemanticTokens.is(result)) {\r\n                                return protocol2code.asSemanticTokens(result);\r\n                            }\r\n                            else {\r\n                                return protocol2code.asSemanticTokensEdits(result);\r\n                            }\r\n                        }, (error) => {\r\n                            client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type, error);\r\n                            return undefined;\r\n                        });\r\n                    };\r\n                    return middleware.provideDocumentSemanticTokensEdits\r\n                        ? middleware.provideDocumentSemanticTokensEdits(document, previousResultId, token, provideDocumentSemanticTokensEdits)\r\n                        : provideDocumentSemanticTokensEdits(document, previousResultId, token);\r\n                }\r\n                : undefined\r\n        };\r\n        const hasRangeProvider = options.rangeProvider === true;\r\n        const rangeProvider = hasRangeProvider\r\n            ? {\r\n                provideDocumentRangeSemanticTokens: (document, range, token) => {\r\n                    const client = this._client;\r\n                    const middleware = client.clientOptions.middleware;\r\n                    const provideDocumentRangeSemanticTokens = (document, range, token) => {\r\n                        const params = {\r\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                            range: client.code2ProtocolConverter.asRange(range)\r\n                        };\r\n                        return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type, params, token).then((result) => {\r\n                            return protocol2code.asSemanticTokens(result);\r\n                        }, (error) => {\r\n                            client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type, error);\r\n                            return undefined;\r\n                        });\r\n                    };\r\n                    return middleware.provideDocumentRangeSemanticTokens\r\n                        ? middleware.provideDocumentRangeSemanticTokens(document, range, token, provideDocumentRangeSemanticTokens)\r\n                        : provideDocumentRangeSemanticTokens(document, range, token);\r\n                }\r\n            }\r\n            : undefined;\r\n        const disposables = [];\r\n        const legend = protocol2code.asLegend(options.legend);\r\n        disposables.push(vscode.languages.registerDocumentSemanticTokensProvider(options.documentSelector, documentProvider, legend));\r\n        if (rangeProvider !== undefined) {\r\n            disposables.push(vscode.languages.registerDocumentRangeSemanticTokensProvider(options.documentSelector, rangeProvider, legend));\r\n        }\r\n        return [new vscode.Disposable(() => disposables.forEach(item => item.dispose())), { document: documentProvider, range: rangeProvider }];\r\n    }\r\n}\r\nexports.SemanticTokensFeature = SemanticTokensFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const EMPTY_ELEMENTS: string[] = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { window, workspace, Disposable, TextDocumentContentChangeEvent, TextDocument, Position, SnippetString } from 'vscode';\n\nexport function activateTagClosing(tagProvider: (document: TextDocument, position: Position) => Thenable<string>, supportedLanguages: { [id: string]: boolean }, configName: string): Disposable {\n\n\tlet disposables: Disposable[] = [];\n\tworkspace.onDidChangeTextDocument(event => onDidChangeTextDocument(event.document, event.contentChanges), null, disposables);\n\n\tlet isEnabled = false;\n\tupdateEnabledState();\n\twindow.onDidChangeActiveTextEditor(updateEnabledState, null, disposables);\n\n\tlet timeout: NodeJS.Timer | undefined = undefined;\n\n\tfunction updateEnabledState() {\n\t\tisEnabled = false;\n\t\tlet editor = window.activeTextEditor;\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tlet document = editor.document;\n\t\tif (!supportedLanguages[document.languageId]) {\n\t\t\treturn;\n\t\t}\n\t\tif (!workspace.getConfiguration(undefined, document.uri).get<boolean>(configName)) {\n\t\t\treturn;\n\t\t}\n\t\tisEnabled = true;\n\t}\n\n\tfunction onDidChangeTextDocument(document: TextDocument, changes: readonly TextDocumentContentChangeEvent[]) {\n\t\tif (!isEnabled) {\n\t\t\treturn;\n\t\t}\n\t\tlet activeDocument = window.activeTextEditor && window.activeTextEditor.document;\n\t\tif (document !== activeDocument || changes.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof timeout !== 'undefined') {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\tlet lastChange = changes[changes.length - 1];\n\t\tlet lastCharacter = lastChange.text[lastChange.text.length - 1];\n\t\tif (lastChange.rangeLength > 0 || lastCharacter !== '>' && lastCharacter !== '/') {\n\t\t\treturn;\n\t\t}\n\t\tlet rangeStart = lastChange.range.start;\n\t\tlet version = document.version;\n\t\ttimeout = setTimeout(() => {\n\t\t\tlet position = new Position(rangeStart.line, rangeStart.character + lastChange.text.length);\n\t\t\ttagProvider(document, position).then(text => {\n\t\t\t\tif (text && isEnabled) {\n\t\t\t\t\tlet activeEditor = window.activeTextEditor;\n\t\t\t\t\tif (activeEditor) {\n\t\t\t\t\t\tlet activeDocument = activeEditor.document;\n\t\t\t\t\t\tif (document === activeDocument && activeDocument.version === version) {\n\t\t\t\t\t\t\tlet selections = activeEditor.selections;\n\t\t\t\t\t\t\tif (selections.length && selections.some(s => s.active.isEqual(position))) {\n\t\t\t\t\t\t\t\tactiveEditor.insertSnippet(new SnippetString(text), selections.map(s => s.active));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tactiveEditor.insertSnippet(new SnippetString(text), position);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\ttimeout = undefined;\n\t\t}, 100);\n\t}\n\treturn Disposable.from(...disposables);\n}","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nprocess.env['APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL'] = true;\nvar fs = require(\"fs\");\nvar os = require(\"os\");\nvar path = require(\"path\");\nvar vscode = require(\"vscode\");\nvar appInsights = require(\"applicationinsights\");\nvar TelemetryReporter = /** @class */ (function () {\n    // tslint:disable-next-line\n    function TelemetryReporter(extensionId, extensionVersion, key) {\n        var _this = this;\n        this.extensionId = extensionId;\n        this.extensionVersion = extensionVersion;\n        this.userOptIn = false;\n        var logFilePath = process.env['VSCODE_LOGS'] || '';\n        if (logFilePath && extensionId && process.env['VSCODE_LOG_LEVEL'] === 'trace') {\n            logFilePath = path.join(logFilePath, extensionId + \".txt\");\n            this.logStream = fs.createWriteStream(logFilePath, { flags: 'a', encoding: 'utf8', autoClose: true });\n        }\n        this.updateUserOptIn(key);\n        this.configListener = vscode.workspace.onDidChangeConfiguration(function () { return _this.updateUserOptIn(key); });\n    }\n    TelemetryReporter.prototype.updateUserOptIn = function (key) {\n        var config = vscode.workspace.getConfiguration(TelemetryReporter.TELEMETRY_CONFIG_ID);\n        if (this.userOptIn !== config.get(TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID, true)) {\n            this.userOptIn = config.get(TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID, true);\n            if (this.userOptIn) {\n                this.createAppInsightsClient(key);\n            }\n            else {\n                this.dispose();\n            }\n        }\n    };\n    TelemetryReporter.prototype.createAppInsightsClient = function (key) {\n        //check if another instance is already initialized\n        if (appInsights.defaultClient) {\n            this.appInsightsClient = new appInsights.TelemetryClient(key);\n            // no other way to enable offline mode\n            this.appInsightsClient.channel.setUseDiskRetryCaching(true);\n        }\n        else {\n            appInsights.setup(key)\n                .setAutoCollectRequests(false)\n                .setAutoCollectPerformance(false)\n                .setAutoCollectExceptions(false)\n                .setAutoCollectDependencies(false)\n                .setAutoDependencyCorrelation(false)\n                .setAutoCollectConsole(false)\n                .setUseDiskRetryCaching(true)\n                .start();\n            this.appInsightsClient = appInsights.defaultClient;\n        }\n        this.appInsightsClient.commonProperties = this.getCommonProperties();\n        if (vscode && vscode.env) {\n            this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.userId] = vscode.env.machineId;\n            this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.sessionId] = vscode.env.sessionId;\n        }\n        //check if it's an Asimov key to change the endpoint\n        if (key && key.indexOf('AIF-') === 0) {\n            this.appInsightsClient.config.endpointUrl = \"https://vortex.data.microsoft.com/collect/v1\";\n        }\n    };\n    // __GDPR__COMMON__ \"common.os\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.platformversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extname\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extversion\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodemachineid\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodesessionid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodeversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    TelemetryReporter.prototype.getCommonProperties = function () {\n        var commonProperties = Object.create(null);\n        commonProperties['common.os'] = os.platform();\n        commonProperties['common.platformversion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n        commonProperties['common.extname'] = this.extensionId;\n        commonProperties['common.extversion'] = this.extensionVersion;\n        if (vscode && vscode.env) {\n            commonProperties['common.vscodemachineid'] = vscode.env.machineId;\n            commonProperties['common.vscodesessionid'] = vscode.env.sessionId;\n            commonProperties['common.vscodeversion'] = vscode.version;\n        }\n        return commonProperties;\n    };\n    TelemetryReporter.prototype.sendTelemetryEvent = function (eventName, properties, measurements) {\n        if (this.userOptIn && eventName && this.appInsightsClient) {\n            this.appInsightsClient.trackEvent({\n                name: this.extensionId + \"/\" + eventName,\n                properties: properties,\n                measurements: measurements\n            });\n            if (this.logStream) {\n                this.logStream.write(\"telemetry/\" + eventName + \" \" + JSON.stringify({ properties: properties, measurements: measurements }) + \"\\n\");\n            }\n        }\n    };\n    TelemetryReporter.prototype.dispose = function () {\n        var _this = this;\n        this.configListener.dispose();\n        var flushEventsToLogger = new Promise(function (resolve) {\n            if (!_this.logStream) {\n                return resolve(void 0);\n            }\n            _this.logStream.on('finish', resolve);\n            _this.logStream.end();\n        });\n        var flushEventsToAI = new Promise(function (resolve) {\n            if (_this.appInsightsClient) {\n                _this.appInsightsClient.flush({\n                    callback: function () {\n                        // all data flushed\n                        _this.appInsightsClient = undefined;\n                        resolve(void 0);\n                    }\n                });\n            }\n            else {\n                resolve(void 0);\n            }\n        });\n        return Promise.all([flushEventsToAI, flushEventsToLogger]);\n    };\n    TelemetryReporter.TELEMETRY_CONFIG_ID = 'telemetry';\n    TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID = 'enableTelemetry';\n    return TelemetryReporter;\n}());\nexports.default = TelemetryReporter;\n//# sourceMappingURL=telemetryReporter.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CorrelationContextManager = require(\"./AutoCollection/CorrelationContextManager\"); // Keep this first\r\nvar AutoCollectConsole = require(\"./AutoCollection/Console\");\r\nvar AutoCollectExceptions = require(\"./AutoCollection/Exceptions\");\r\nvar AutoCollectPerformance = require(\"./AutoCollection/Performance\");\r\nvar AutoCollectHttpDependencies = require(\"./AutoCollection/HttpDependencies\");\r\nvar AutoCollectHttpRequests = require(\"./AutoCollection/HttpRequests\");\r\nvar Logging = require(\"./Library/Logging\");\r\n// We export these imports so that SDK users may use these classes directly.\r\n// They're exposed using \"export import\" so that types are passed along as expected\r\nexports.TelemetryClient = require(\"./Library/NodeClient\");\r\nexports.Contracts = require(\"./Declarations/Contracts\");\r\n// Default autocollection configuration\r\nvar _isConsole = true;\r\nvar _isConsoleLog = false;\r\nvar _isExceptions = true;\r\nvar _isPerformance = true;\r\nvar _isRequests = true;\r\nvar _isDependencies = true;\r\nvar _isDiskRetry = true;\r\nvar _isCorrelating = true;\r\nvar _diskRetryInterval = undefined;\r\nvar _diskRetryMaxBytes = undefined;\r\nvar _console;\r\nvar _exceptions;\r\nvar _performance;\r\nvar _serverRequests;\r\nvar _clientRequests;\r\nvar _isStarted = false;\r\n/**\r\n * Initializes the default client. Should be called after setting\r\n * configuration options.\r\n *\r\n * @param instrumentationKey the instrumentation key to use. Optional, if\r\n * this is not specified, the value will be read from the environment\r\n * variable APPINSIGHTS_INSTRUMENTATIONKEY.\r\n * @returns {Configuration} the configuration class to initialize\r\n * and start the SDK.\r\n */\r\nfunction setup(instrumentationKey) {\r\n    if (!exports.defaultClient) {\r\n        exports.defaultClient = new exports.TelemetryClient(instrumentationKey);\r\n        _console = new AutoCollectConsole(exports.defaultClient);\r\n        _exceptions = new AutoCollectExceptions(exports.defaultClient);\r\n        _performance = new AutoCollectPerformance(exports.defaultClient);\r\n        _serverRequests = new AutoCollectHttpRequests(exports.defaultClient);\r\n        _clientRequests = new AutoCollectHttpDependencies(exports.defaultClient);\r\n    }\r\n    else {\r\n        Logging.info(\"The default client is already setup\");\r\n    }\r\n    if (exports.defaultClient && exports.defaultClient.channel) {\r\n        exports.defaultClient.channel.setUseDiskRetryCaching(_isDiskRetry, _diskRetryInterval, _diskRetryMaxBytes);\r\n    }\r\n    return Configuration;\r\n}\r\nexports.setup = setup;\r\n/**\r\n * Starts automatic collection of telemetry. Prior to calling start no\r\n * telemetry will be *automatically* collected, though manual collection\r\n * is enabled.\r\n * @returns {ApplicationInsights} this class\r\n */\r\nfunction start() {\r\n    if (!!exports.defaultClient) {\r\n        _isStarted = true;\r\n        _console.enable(_isConsole, _isConsoleLog);\r\n        _exceptions.enable(_isExceptions);\r\n        _performance.enable(_isPerformance);\r\n        _serverRequests.useAutoCorrelation(_isCorrelating);\r\n        _serverRequests.enable(_isRequests);\r\n        _clientRequests.enable(_isDependencies);\r\n    }\r\n    else {\r\n        Logging.warn(\"Start cannot be called before setup\");\r\n    }\r\n    return Configuration;\r\n}\r\nexports.start = start;\r\n/**\r\n * Returns an object that is shared across all code handling a given request.\r\n * This can be used similarly to thread-local storage in other languages.\r\n * Properties set on this object will be available to telemetry processors.\r\n *\r\n * Do not store sensitive information here.\r\n * Custom properties set on this object can be exposed in a future SDK\r\n * release via outgoing HTTP headers.\r\n * This is to allow for correlating data cross-component.\r\n *\r\n * This method will return null if automatic dependency correlation is disabled.\r\n * @returns A plain object for request storage or null if automatic dependency correlation is disabled.\r\n */\r\nfunction getCorrelationContext() {\r\n    if (_isCorrelating) {\r\n        return CorrelationContextManager.CorrelationContextManager.getCurrentContext();\r\n    }\r\n    return null;\r\n}\r\nexports.getCorrelationContext = getCorrelationContext;\r\n/**\r\n * Returns a function that will get the same correlation context within its\r\n * function body as the code executing this function.\r\n * Use this method if automatic dependency correlation is not propagating\r\n * correctly to an asynchronous callback.\r\n */\r\nfunction wrapWithCorrelationContext(fn) {\r\n    return CorrelationContextManager.CorrelationContextManager.wrapCallback(fn);\r\n}\r\nexports.wrapWithCorrelationContext = wrapWithCorrelationContext;\r\n/**\r\n * The active configuration for global SDK behaviors, such as autocollection.\r\n */\r\nvar Configuration = (function () {\r\n    function Configuration() {\r\n    }\r\n    /**\r\n     * Sets the state of console and logger tracking (enabled by default for third-party loggers only)\r\n     * @param value if true logger activity will be sent to Application Insights\r\n     * @param collectConsoleLog if true, logger autocollection will include console.log calls (default false)\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectConsole = function (value, collectConsoleLog) {\r\n        if (collectConsoleLog === void 0) { collectConsoleLog = false; }\r\n        _isConsole = value;\r\n        _isConsoleLog = collectConsoleLog;\r\n        if (_isStarted) {\r\n            _console.enable(value, collectConsoleLog);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of exception tracking (enabled by default)\r\n     * @param value if true uncaught exceptions will be sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectExceptions = function (value) {\r\n        _isExceptions = value;\r\n        if (_isStarted) {\r\n            _exceptions.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of performance tracking (enabled by default)\r\n     * @param value if true performance counters will be collected every second and sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectPerformance = function (value) {\r\n        _isPerformance = value;\r\n        if (_isStarted) {\r\n            _performance.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of request tracking (enabled by default)\r\n     * @param value if true requests will be sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectRequests = function (value) {\r\n        _isRequests = value;\r\n        if (_isStarted) {\r\n            _serverRequests.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of dependency tracking (enabled by default)\r\n     * @param value if true dependencies will be sent to Application Insights\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoCollectDependencies = function (value) {\r\n        _isDependencies = value;\r\n        if (_isStarted) {\r\n            _clientRequests.enable(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Sets the state of automatic dependency correlation (enabled by default)\r\n     * @param value if true dependencies will be correlated with requests\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setAutoDependencyCorrelation = function (value) {\r\n        _isCorrelating = value;\r\n        if (_isStarted) {\r\n            _serverRequests.useAutoCorrelation(value);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Enable or disable disk-backed retry caching to cache events when client is offline (enabled by default)\r\n     * Note that this method only applies to the default client. Disk-backed retry caching is disabled by default for additional clients.\r\n     * For enable for additional clients, use client.channel.setUseDiskRetryCaching(true).\r\n     * These cached events are stored in your system or user's temporary directory and access restricted to your user when possible.\r\n     * @param value if true events that occured while client is offline will be cached on disk\r\n     * @param resendInterval The wait interval for resending cached events.\r\n     * @param maxBytesOnDisk The maximum size (in bytes) that the created temporary directory for cache events can grow to, before caching is disabled.\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setUseDiskRetryCaching = function (value, resendInterval, maxBytesOnDisk) {\r\n        _isDiskRetry = value;\r\n        _diskRetryInterval = resendInterval;\r\n        _diskRetryMaxBytes = maxBytesOnDisk;\r\n        if (exports.defaultClient && exports.defaultClient.channel) {\r\n            exports.defaultClient.channel.setUseDiskRetryCaching(value, resendInterval, maxBytesOnDisk);\r\n        }\r\n        return Configuration;\r\n    };\r\n    /**\r\n     * Enables debug and warning logging for AppInsights itself.\r\n     * @param enableDebugLogging if true, enables debug logging\r\n     * @param enableWarningLogging if true, enables warning logging\r\n     * @returns {Configuration} this class\r\n     */\r\n    Configuration.setInternalLogging = function (enableDebugLogging, enableWarningLogging) {\r\n        if (enableDebugLogging === void 0) { enableDebugLogging = false; }\r\n        if (enableWarningLogging === void 0) { enableWarningLogging = true; }\r\n        Logging.enableDebug = enableDebugLogging;\r\n        Logging.disableWarnings = !enableWarningLogging;\r\n        return Configuration;\r\n    };\r\n    // Convenience shortcut to ApplicationInsights.start\r\n    Configuration.start = start;\r\n    return Configuration;\r\n}());\r\nexports.Configuration = Configuration;\r\n/**\r\n * Disposes the default client and all the auto collectors so they can be reinitialized with different configuration\r\n*/\r\nfunction dispose() {\r\n    exports.defaultClient = null;\r\n    _isStarted = false;\r\n    if (_console) {\r\n        _console.dispose();\r\n    }\r\n    if (_exceptions) {\r\n        _exceptions.dispose();\r\n    }\r\n    if (_performance) {\r\n        _performance.dispose();\r\n    }\r\n    if (_serverRequests) {\r\n        _serverRequests.dispose();\r\n    }\r\n    if (_clientRequests) {\r\n        _clientRequests.dispose();\r\n    }\r\n}\r\nexports.dispose = dispose;\r\n//# sourceMappingURL=applicationinsights.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bunyan = require(\"./bunyan.pub\");\r\nexports.bunyan = bunyan;\r\nvar consolePub = require(\"./console.pub\");\r\nexports.console = consolePub;\r\nvar mongodbCore = require(\"./mongodb-core.pub\");\r\nexports.mongodbCore = mongodbCore;\r\nvar mongodb = require(\"./mongodb.pub\");\r\nexports.mongodb = mongodb;\r\nvar mysql = require(\"./mysql.pub\");\r\nexports.mysql = mysql;\r\nvar pgPool = require(\"./pg-pool.pub\");\r\nexports.pgPool = pgPool;\r\nvar pg = require(\"./pg.pub\");\r\nexports.pg = pg;\r\nvar redis = require(\"./redis.pub\");\r\nexports.redis = redis;\r\nvar winston = require(\"./winston.pub\");\r\nexports.winston = winston;\r\nfunction enable() {\r\n    bunyan.enable();\r\n    consolePub.enable();\r\n    mongodbCore.enable();\r\n    mongodb.enable();\r\n    mysql.enable();\r\n    pg.enable();\r\n    pgPool.enable();\r\n    redis.enable();\r\n    winston.enable();\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar bunyanPatchFunction = function (originalBunyan) {\r\n    var originalEmit = originalBunyan.prototype._emit;\r\n    originalBunyan.prototype._emit = function (rec, noemit) {\r\n        var ret = originalEmit.apply(this, arguments);\r\n        if (!noemit) {\r\n            var str = ret;\r\n            if (!str) {\r\n                str = originalEmit.call(this, rec, true);\r\n            }\r\n            diagnostic_channel_1.channel.publish(\"bunyan\", { level: rec.level, result: str });\r\n        }\r\n        return ret;\r\n    };\r\n    return originalBunyan;\r\n};\r\nexports.bunyan = {\r\n    versionSpecifier: \">= 1.0.0 < 2.0.0\",\r\n    patch: bunyanPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"bunyan\", exports.bunyan);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=bunyan.pub.js.map","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nComparator.prototype.intersects = function(comp, loose) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, loose);\n    return satisfies(this.value, rangeTmp, loose);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, loose);\n    return satisfies(comp.semver, rangeTmp, loose);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, loose) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, loose) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range) {\n    if (range.loose === loose) {\n      return range;\n    } else {\n      return new Range(range.raw, loose);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, loose);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, loose) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, loose);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, loose);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, loose);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, loose) {\n  r1 = new Range(r1, loose)\n  r2 = new Range(r2, loose)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar stream_1 = require(\"stream\");\r\nvar consolePatchFunction = function (originalConsole) {\r\n    var aiLoggingOutStream = new stream_1.Writable();\r\n    var aiLoggingErrStream = new stream_1.Writable();\r\n    // Default console is roughly equivalent to `new Console(process.stdout, process.stderr)`\r\n    // We create a version which publishes to the channel and also to stdout/stderr\r\n    aiLoggingOutStream.write = function (chunk) {\r\n        if (!chunk) {\r\n            return true;\r\n        }\r\n        var message = chunk.toString();\r\n        diagnostic_channel_1.channel.publish(\"console\", { message: message });\r\n        return true;\r\n    };\r\n    aiLoggingErrStream.write = function (chunk) {\r\n        if (!chunk) {\r\n            return true;\r\n        }\r\n        var message = chunk.toString();\r\n        diagnostic_channel_1.channel.publish(\"console\", { message: message, stderr: true });\r\n        return true;\r\n    };\r\n    var aiLoggingConsole = new originalConsole.Console(aiLoggingOutStream, aiLoggingErrStream);\r\n    var consoleMethods = [\"log\", \"info\", \"warn\", \"error\", \"dir\", \"time\", \"timeEnd\", \"trace\", \"assert\"];\r\n    var _loop_1 = function (method) {\r\n        var originalMethod = originalConsole[method];\r\n        if (originalMethod) {\r\n            originalConsole[method] = function () {\r\n                if (aiLoggingConsole[method]) {\r\n                    try {\r\n                        aiLoggingConsole[method].apply(aiLoggingConsole, arguments);\r\n                    }\r\n                    catch (e) {\r\n                        // Ignore errors; allow the original method to throw if necessary\r\n                    }\r\n                }\r\n                return originalMethod.apply(originalConsole, arguments);\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, consoleMethods_1 = consoleMethods; _i < consoleMethods_1.length; _i++) {\r\n        var method = consoleMethods_1[_i];\r\n        _loop_1(method);\r\n    }\r\n    return originalConsole;\r\n};\r\nexports.console = {\r\n    versionSpecifier: \">= 4.0.0\",\r\n    patch: consolePatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"console\", exports.console);\r\n    // Force patching of console\r\n    /* tslint:disable-next-line:no-var-requires */\r\n    require(\"console\");\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=console.pub.js.map","module.exports = require(\"stream\");","module.exports = require(\"console\");","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar mongodbcorePatchFunction = function (originalMongoCore) {\r\n    var originalConnect = originalMongoCore.Server.prototype.connect;\r\n    originalMongoCore.Server.prototype.connect = function contextPreservingConnect() {\r\n        var ret = originalConnect.apply(this, arguments);\r\n        // Messages sent to mongo progress through a pool\r\n        // This can result in context getting mixed between different responses\r\n        // so we wrap the callbacks to restore appropriate state\r\n        var originalWrite = this.s.pool.write;\r\n        this.s.pool.write = function contextPreservingWrite() {\r\n            var cbidx = typeof arguments[1] === \"function\" ? 1 : 2;\r\n            if (typeof arguments[cbidx] === \"function\") {\r\n                arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(arguments[cbidx]);\r\n            }\r\n            return originalWrite.apply(this, arguments);\r\n        };\r\n        // Logout is a special case, it doesn't call the write function but instead\r\n        // directly calls into connection.write\r\n        var originalLogout = this.s.pool.logout;\r\n        this.s.pool.logout = function contextPreservingLogout() {\r\n            if (typeof arguments[1] === \"function\") {\r\n                arguments[1] = diagnostic_channel_1.channel.bindToContext(arguments[1]);\r\n            }\r\n            return originalLogout.apply(this, arguments);\r\n        };\r\n        return ret;\r\n    };\r\n    return originalMongoCore;\r\n};\r\nexports.mongoCore2 = {\r\n    versionSpecifier: \">= 2.0.0 < 2.2.0\",\r\n    patch: mongodbcorePatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"mongodb-core\", exports.mongoCore2);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mongodb-core.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar mongodbPatchFunction = function (originalMongo) {\r\n    var listener = originalMongo.instrument({\r\n        operationIdGenerator: {\r\n            next: function () {\r\n                return diagnostic_channel_1.channel.bindToContext(function (cb) { return cb(); });\r\n            },\r\n        },\r\n    });\r\n    var eventMap = {};\r\n    listener.on(\"started\", function (event) {\r\n        if (eventMap[event.requestId]) {\r\n            // Note: Mongo can generate 2 completely separate requests\r\n            // which share the same requestId, if a certain race condition is triggered.\r\n            // For now, we accept that this can happen and potentially miss or mislabel some events.\r\n            return;\r\n        }\r\n        eventMap[event.requestId] = event;\r\n    });\r\n    listener.on(\"succeeded\", function (event) {\r\n        var startedData = eventMap[event.requestId];\r\n        if (startedData) {\r\n            delete eventMap[event.requestId];\r\n        }\r\n        event.operationId(function () { return diagnostic_channel_1.channel.publish(\"mongodb\", { startedData: startedData, event: event, succeeded: true }); });\r\n    });\r\n    listener.on(\"failed\", function (event) {\r\n        var startedData = eventMap[event.requestId];\r\n        if (startedData) {\r\n            delete eventMap[event.requestId];\r\n        }\r\n        event.operationId(function () { return diagnostic_channel_1.channel.publish(\"mongodb\", { startedData: startedData, event: event, succeeded: false }); });\r\n    });\r\n    return originalMongo;\r\n};\r\nexports.mongo2 = {\r\n    versionSpecifier: \">= 2.0.0 <= 2.2.x\",\r\n    patch: mongodbPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"mongodb\", exports.mongo2);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mongodb.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar path = require(\"path\");\r\nvar mysqlPatchFunction = function (originalMysql, originalMysqlPath) {\r\n    // The `name` passed in here is for debugging purposes,\r\n    // to help distinguish which object is being patched.\r\n    var patchObjectFunction = function (obj, name) {\r\n        return function (func, cbWrapper) {\r\n            var originalFunc = obj[func];\r\n            if (originalFunc) {\r\n                obj[func] = function mysqlContextPreserver() {\r\n                    // Find the callback, if there is one\r\n                    var cbidx = arguments.length - 1;\r\n                    for (var i = arguments.length - 1; i >= 0; --i) {\r\n                        if (typeof arguments[i] === \"function\") {\r\n                            cbidx = i;\r\n                            break;\r\n                        }\r\n                        else if (typeof arguments[i] !== \"undefined\") {\r\n                            break;\r\n                        }\r\n                    }\r\n                    var cb = arguments[cbidx];\r\n                    var resultContainer = { result: null, startTime: null };\r\n                    if (typeof cb === \"function\") {\r\n                        // Preserve context on the callback.\r\n                        // If this is one of the functions that we want to track,\r\n                        // then wrap the callback with the tracking wrapper\r\n                        if (cbWrapper) {\r\n                            resultContainer.startTime = process.hrtime();\r\n                            arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(cbWrapper(resultContainer, cb));\r\n                        }\r\n                        else {\r\n                            arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(cb);\r\n                        }\r\n                    }\r\n                    var result = originalFunc.apply(this, arguments);\r\n                    resultContainer.result = result;\r\n                    return result;\r\n                };\r\n            }\r\n        };\r\n    };\r\n    var patchClassMemberFunction = function (classObject, name) {\r\n        return patchObjectFunction(classObject.prototype, name + \".prototype\");\r\n    };\r\n    var connectionCallbackFunctions = [\r\n        \"connect\", \"changeUser\",\r\n        \"ping\", \"statistics\", \"end\",\r\n    ];\r\n    var connectionClass = require(path.dirname(originalMysqlPath) + \"/lib/Connection\");\r\n    connectionCallbackFunctions.forEach(function (value) { return patchClassMemberFunction(connectionClass, \"Connection\")(value); });\r\n    // Connection.createQuery is a static method\r\n    patchObjectFunction(connectionClass, \"Connection\")(\"createQuery\", function (resultContainer, cb) {\r\n        return function (err) {\r\n            var hrDuration = process.hrtime(resultContainer.startTime);\r\n            /* tslint:disable-next-line:no-bitwise */\r\n            var duration = (hrDuration[0] * 1e3 + hrDuration[1] / 1e6) | 0;\r\n            diagnostic_channel_1.channel.publish(\"mysql\", { query: resultContainer.result, callbackArgs: arguments, err: err, duration: duration });\r\n            cb.apply(this, arguments);\r\n        };\r\n    });\r\n    var poolCallbackFunctions = [\r\n        \"_enqueueCallback\",\r\n    ];\r\n    var poolClass = require(path.dirname(originalMysqlPath) + \"/lib/Pool\");\r\n    poolCallbackFunctions.forEach(function (value) { return patchClassMemberFunction(poolClass, \"Pool\")(value); });\r\n    return originalMysql;\r\n};\r\nexports.mysql = {\r\n    versionSpecifier: \">= 2.0.0 <= 2.14.x\",\r\n    patch: mysqlPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"mysql\", exports.mysql);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mysql.pub.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 96;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 97;","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nfunction postgresPool1PatchFunction(originalPgPool) {\r\n    var originalConnect = originalPgPool.prototype.connect;\r\n    originalPgPool.prototype.connect = function connect(callback) {\r\n        if (callback) {\r\n            arguments[0] = diagnostic_channel_1.channel.bindToContext(callback);\r\n        }\r\n        originalConnect.apply(this, arguments);\r\n    };\r\n    return originalPgPool;\r\n}\r\nexports.postgresPool1 = {\r\n    versionSpecifier: \"1.x\",\r\n    patch: postgresPool1PatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"pg-pool\", exports.postgresPool1);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=pg-pool.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar events_1 = require(\"events\");\r\nfunction postgres6PatchFunction(originalPg, originalPgPath) {\r\n    var originalClientQuery = originalPg.Client.prototype.query;\r\n    var diagnosticOriginalFunc = \"__diagnosticOriginalFunc\";\r\n    // wherever the callback is passed, find it, save it, and remove it from the call\r\n    // to the the original .query() function\r\n    originalPg.Client.prototype.query = function query(config, values, callback) {\r\n        var data = {\r\n            query: {},\r\n            database: {\r\n                host: this.connectionParameters.host,\r\n                port: this.connectionParameters.port,\r\n            },\r\n            result: null,\r\n            error: null,\r\n            duration: 0,\r\n        };\r\n        var start = process.hrtime();\r\n        var queryResult;\r\n        function patchCallback(cb) {\r\n            if (cb && cb[diagnosticOriginalFunc]) {\r\n                cb = cb[diagnosticOriginalFunc];\r\n            }\r\n            var trackingCallback = diagnostic_channel_1.channel.bindToContext(function (err, res) {\r\n                var end = process.hrtime(start);\r\n                data.result = res && { rowCount: res.rowCount, command: res.command };\r\n                data.error = err;\r\n                data.duration = Math.ceil((end[0] * 1e3) + (end[1] / 1e6));\r\n                diagnostic_channel_1.channel.publish(\"postgres\", data);\r\n                // emulate weird internal behavior in pg@6\r\n                // on success, the callback is called *before* query events are emitted\r\n                // on failure, the callback is called *instead of* the query emitting events\r\n                // with no events, that means no promises (since the promise is resolved/rejected in an event handler)\r\n                // since we are always inserting ourselves as a callback, we have to restore the original\r\n                // behavior if the user didn't provide one themselves\r\n                if (err) {\r\n                    if (cb) {\r\n                        return cb.apply(this, arguments);\r\n                    }\r\n                    else if (queryResult && queryResult instanceof events_1.EventEmitter) {\r\n                        queryResult.emit(\"error\", err);\r\n                    }\r\n                }\r\n                else if (cb) {\r\n                    cb.apply(this, arguments);\r\n                }\r\n            });\r\n            try {\r\n                Object.defineProperty(trackingCallback, diagnosticOriginalFunc, { value: cb });\r\n                return trackingCallback;\r\n            }\r\n            catch (e) {\r\n                // this should never happen, but bailout in case it does\r\n                return cb;\r\n            }\r\n        }\r\n        // this function takes too many variations of arguments.\r\n        // this patches any provided callback or creates a new callback if one wasn't provided.\r\n        // since the callback is always called (if provided) in addition to always having a Promisified\r\n        // EventEmitter returned (well, sometimes -- see above), its safe to insert a callback if none was given\r\n        try {\r\n            if (typeof config === \"string\") {\r\n                if (values instanceof Array) {\r\n                    data.query.preparable = {\r\n                        text: config,\r\n                        args: values,\r\n                    };\r\n                    callback = patchCallback(callback);\r\n                }\r\n                else {\r\n                    data.query.text = config;\r\n                    // pg v6 will, for some reason, accept both\r\n                    // client.query(\"...\", undefined, () => {...})\r\n                    // **and**\r\n                    // client.query(\"...\", () => {...});\r\n                    // Internally, precedence is given to the callback argument\r\n                    if (callback) {\r\n                        callback = patchCallback(callback);\r\n                    }\r\n                    else {\r\n                        values = patchCallback(values);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (typeof config.name === \"string\") {\r\n                    data.query.plan = config.name;\r\n                }\r\n                else if (config.values instanceof Array) {\r\n                    data.query.preparable = {\r\n                        text: config.text,\r\n                        args: config.values,\r\n                    };\r\n                }\r\n                else {\r\n                    data.query.text = config.text;\r\n                }\r\n                if (callback) {\r\n                    callback = patchCallback(callback);\r\n                }\r\n                else if (values) {\r\n                    values = patchCallback(values);\r\n                }\r\n                else {\r\n                    config.callback = patchCallback(config.callback);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // if our logic here throws, bail out and just let pg do its thing\r\n            return originalClientQuery.apply(this, arguments);\r\n        }\r\n        arguments[0] = config;\r\n        arguments[1] = values;\r\n        arguments[2] = callback;\r\n        arguments.length = (arguments.length > 3) ? arguments.length : 3;\r\n        queryResult = originalClientQuery.apply(this, arguments);\r\n        return queryResult;\r\n    };\r\n    return originalPg;\r\n}\r\nexports.postgres6 = {\r\n    versionSpecifier: \"6.x\",\r\n    patch: postgres6PatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"pg\", exports.postgres6);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=pg.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar redisPatchFunction = function (originalRedis) {\r\n    var originalSend = originalRedis.RedisClient.prototype.internal_send_command;\r\n    // Note: This is mixing together both context tracking and dependency tracking\r\n    originalRedis.RedisClient.prototype.internal_send_command = function (commandObj) {\r\n        if (commandObj) {\r\n            var cb_1 = commandObj.callback;\r\n            if (!cb_1 || !cb_1.pubsubBound) {\r\n                var address_1 = this.address;\r\n                var startTime_1 = process.hrtime();\r\n                // Note: augmenting the callback on internal_send_command is correct for context\r\n                // tracking, but may be too low-level for dependency tracking. There are some 'errors'\r\n                // which higher levels expect in some cases\r\n                // However, the only other option is to intercept every individual command.\r\n                commandObj.callback = diagnostic_channel_1.channel.bindToContext(function (err, result) {\r\n                    var hrDuration = process.hrtime(startTime_1);\r\n                    /* tslint:disable-next-line:no-bitwise */\r\n                    var duration = (hrDuration[0] * 1e3 + hrDuration[1] / 1e6) | 0;\r\n                    diagnostic_channel_1.channel.publish(\"redis\", { duration: duration, address: address_1, commandObj: commandObj, err: err, result: result });\r\n                    if (typeof cb_1 === \"function\") {\r\n                        cb_1.apply(this, arguments);\r\n                    }\r\n                });\r\n                commandObj.callback.pubsubBound = true;\r\n            }\r\n        }\r\n        return originalSend.call(this, commandObj);\r\n    };\r\n    return originalRedis;\r\n};\r\nexports.redis = {\r\n    versionSpecifier: \">= 2.0.0 < 3.0.0\",\r\n    patch: redisPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"redis\", exports.redis);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=redis.pub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\n// register a \"filter\" with each logger that publishes the data about to be logged\r\nvar winstonPatchFunction = function (originalWinston) {\r\n    var originalLog = originalWinston.Logger.prototype.log;\r\n    var curLevels;\r\n    var loggingFilter = function (level, message, meta) {\r\n        var levelKind;\r\n        if (curLevels === originalWinston.config.npm.levels) {\r\n            levelKind = \"npm\";\r\n        }\r\n        else if (curLevels === originalWinston.config.syslog.levels) {\r\n            levelKind = \"syslog\";\r\n        }\r\n        else {\r\n            levelKind = \"unknown\";\r\n        }\r\n        diagnostic_channel_1.channel.publish(\"winston\", { level: level, message: message, meta: meta, levelKind: levelKind });\r\n        return message;\r\n    };\r\n    // whenever someone logs, ensure our filter comes last\r\n    originalWinston.Logger.prototype.log = function log() {\r\n        curLevels = this.levels;\r\n        if (!this.filters || this.filters.length === 0) {\r\n            this.filters = [loggingFilter];\r\n        }\r\n        else if (this.filters[this.filters.length - 1] !== loggingFilter) {\r\n            this.filters = this.filters.filter(function (f) { return f !== loggingFilter; });\r\n            this.filters.push(loggingFilter);\r\n        }\r\n        return originalLog.apply(this, arguments);\r\n    };\r\n    return originalWinston;\r\n};\r\nexports.winston = {\r\n    versionSpecifier: \"2.x\",\r\n    patch: winstonPatchFunction,\r\n};\r\nfunction enable() {\r\n    diagnostic_channel_1.channel.registerMonkeyPatch(\"winston\", exports.winston);\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=winston.pub.js.map","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar Zone$1 = (function (global) {\n    if (global['Zone']) {\n        throw new Error('Zone already loaded.');\n    }\n    var Zone = (function () {\n        function Zone(parent, zoneSpec) {\n            this._properties = null;\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global.Promise !== ZoneAwarePromise) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZoneFrame.zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        \n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            task.runCount++;\n            if (task.zone != this)\n                throw new Error('A task can only be run in the zone which created it! (Creation: ' + task.zone.name +\n                    '; Execution: ' + this.name + ')');\n            var previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\n            try {\n                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = null;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            var value = this._zoneDelegate.cancelTask(this, task);\n            task.runCount = -1;\n            task.cancelFn = null;\n            return value;\n        };\n        return Zone;\n    }());\n    Zone.__symbol__ = __symbol__;\n    \n    var ZoneDelegate = (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);\n            this._hasTaskDlgt =\n                zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);\n            this._hasTaskCurrZone = zoneSpec && (zoneSpec.onHasTask ? this.zone : parentDelegate.zone);\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ?\n                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            try {\n                if (this._scheduleTaskZS) {\n                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                }\n                else if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == 'microTask') {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n                return task;\n            }\n            finally {\n                if (targetZone == this.zone) {\n                    this._updateTaskCount(task.type, 1);\n                }\n            }\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            try {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            finally {\n                if (targetZone == this.zone && (task.type != 'eventTask') &&\n                    !(task.data && task.data.isPeriodic)) {\n                    this._updateTaskCount(task.type, -1);\n                }\n            }\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else if (!task.cancelFn) {\n                throw new Error('Task does not support cancellation, or is already canceled.');\n            }\n            else {\n                value = task.cancelFn(task);\n            }\n            if (targetZone == this.zone) {\n                // this should not be in the finally block, because exceptions assume not canceled.\n                this._updateTaskCount(task.type, -1);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            return this._hasTaskZS &&\n                this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts.microTask > 0,\n                    macroTask: counts.macroTask > 0,\n                    eventTask: counts.eventTask > 0,\n                    change: type\n                };\n                try {\n                    this.hasTask(this.zone, isEmpty);\n                }\n                finally {\n                    if (this._parentDelegate) {\n                        this._parentDelegate._updateTaskCount(type, count);\n                    }\n                }\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = (function () {\n        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {\n            this.runCount = 0;\n            this.type = type;\n            this.zone = zone;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            this.invoke = function () {\n                _numberOfNestedTaskFrames++;\n                try {\n                    return zone.runTask(self, this, arguments);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            };\n        }\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId;\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        ZoneTask.prototype.toJSON = function () {\n            return {\n                type: this.type,\n                source: this.source,\n                data: this.data,\n                zone: this.zone.name,\n                invoke: this.invoke,\n                scheduleFn: this.scheduleFn,\n                cancelFn: this.cancelFn,\n                runCount: this.runCount,\n                callback: this.callback\n            };\n        };\n        return ZoneTask;\n    }());\n    var ZoneFrame = (function () {\n        function ZoneFrame(parent, zone) {\n            this.parent = parent;\n            this.zone = zone;\n        }\n        return ZoneFrame;\n    }());\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    \n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _currentZoneFrame = new ZoneFrame(null, new Zone(null, null));\n    var _currentTask = null;\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var _uncaughtPromiseErrors = [];\n    var _numberOfNestedTaskFrames = 0;\n    function scheduleQueueDrain() {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (global[symbolPromise]) {\n                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n    }\n    function scheduleMicroTask(task) {\n        scheduleQueueDrain();\n        _microTaskQueue.push(task);\n    }\n    function consoleError(e) {\n        var rejection = e && e.rejection;\n        if (rejection) {\n            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n        }\n        console.error(e);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (e) {\n                        consoleError(e);\n                    }\n                }\n            }\n            while (_uncaughtPromiseErrors.length) {\n                var _loop_1 = function () {\n                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(function () {\n                            throw uncaughtPromiseError;\n                        });\n                    }\n                    catch (e) {\n                        consoleError(e);\n                    }\n                };\n                while (_uncaughtPromiseErrors.length) {\n                    _loop_1();\n                }\n            }\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            resolvePromise(promise, state, v);\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    function resolvePromise(promise, state, value) {\n        if (promise[symbolState] === UNRESOLVED) {\n            if (value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) &&\n                value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (isThenable(value)) {\n                value.then(makeResolver(promise, state), makeResolver(promise, false));\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        throw new Error('Uncaught (in promise): ' + value +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (e) {\n                        var error_1 = e;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        scheduleQueueDrain();\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));\n            }\n            catch (error) {\n                resolvePromise(chainPromise, false, error);\n            }\n        });\n    }\n    var ZoneAwarePromise = (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (e) {\n                resolvePromise(promise, false, e);\n            }\n        }\n        ZoneAwarePromise.toString = function () {\n            return 'function ZoneAwarePromise() { [native code] }';\n        };\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                _a = [res, rej], resolve = _a[0], reject = _a[1];\n                var _a;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var value = values_1[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var count = 0;\n            var resolvedValues = [];\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n                var value = values_2[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then((function (index) { return function (value) {\n                    resolvedValues[index] = value;\n                    count--;\n                    if (!count) {\n                        resolve(resolvedValues);\n                    }\n                }; })(count), reject);\n                count++;\n            }\n            if (!count)\n                resolve(resolvedValues);\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[__symbol__('Promise')] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    function patchThen(NativePromise) {\n        var NativePromiseProtototype = NativePromise.prototype;\n        var NativePromiseThen = NativePromiseProtototype[__symbol__('then')] =\n            NativePromiseProtototype.then;\n        NativePromiseProtototype.then = function (onResolve, onReject) {\n            var nativePromise = this;\n            return new ZoneAwarePromise(function (resolve, reject) {\n                NativePromiseThen.call(nativePromise, resolve, reject);\n            })\n                .then(onResolve, onReject);\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        if (typeof global['fetch'] !== 'undefined') {\n            var fetchPromise = void 0;\n            try {\n                // In MS Edge this throws\n                fetchPromise = global['fetch']();\n            }\n            catch (e) {\n                // In Chrome this throws instead.\n                fetchPromise = global['fetch']('about:blank');\n            }\n            // ignore output to prevent error;\n            fetchPromise.then(function () { return null; }, function () { return null; });\n            if (fetchPromise.constructor != NativePromise &&\n                fetchPromise.constructor != ZoneAwarePromise) {\n                patchThen(fetchPromise.constructor);\n            }\n        }\n    }\n    // This is not part of public API, but it is usefull for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    /*\n     * This code patches Error so that:\n     *   - It ignores un-needed stack frames.\n     *   - It Shows the associated Zone for reach frame.\n     */\n    var FrameType;\n    (function (FrameType) {\n        /// Skip this frame when printing out stack\n        FrameType[FrameType[\"blackList\"] = 0] = \"blackList\";\n        /// This frame marks zone transition\n        FrameType[FrameType[\"transition\"] = 1] = \"transition\";\n    })(FrameType || (FrameType = {}));\n    var NativeError = global[__symbol__('Error')] = global.Error;\n    // Store the frames which should be removed from the stack frames\n    var blackListedStackFrames = {};\n    // We must find the frame where Error was created, otherwise we assume we don't understand stack\n    var zoneAwareFrame;\n    global.Error = ZoneAwareError;\n    // How should the stack frames be parsed.\n    var frameParserStrategy = null;\n    var stackRewrite = 'stackRewrite';\n    // fix #595, create property descriptor\n    // for error properties\n    var createProperty = function (props, key) {\n        // if property is already defined, skip it.\n        if (props[key]) {\n            return;\n        }\n        // define a local property\n        // in case error property is not settable\n        var name = __symbol__(key);\n        props[key] = {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                // if local property has no value\n                // use internal error's property value\n                if (!this[name]) {\n                    var error_2 = this[__symbol__('error')];\n                    if (error_2) {\n                        this[name] = error_2[key];\n                    }\n                }\n                return this[name];\n            },\n            set: function (value) {\n                // setter will set value to local property value\n                this[name] = value;\n            }\n        };\n    };\n    // fix #595, create property descriptor\n    // for error method properties\n    var createMethodProperty = function (props, key) {\n        if (props[key]) {\n            return;\n        }\n        props[key] = {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: function () {\n                var error = this[__symbol__('error')];\n                var errorMethod = (error && error[key]) || this[key];\n                if (errorMethod) {\n                    return errorMethod.apply(error, arguments);\n                }\n            }\n        };\n    };\n    var createErrorProperties = function () {\n        var props = Object.create(null);\n        var error = new NativeError();\n        var keys = Object.getOwnPropertyNames(error);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(error, key)) {\n                createProperty(props, key);\n            }\n        }\n        var proto = NativeError.prototype;\n        if (proto) {\n            var pKeys = Object.getOwnPropertyNames(proto);\n            for (var i = 0; i < pKeys.length; i++) {\n                var key = pKeys[i];\n                // skip constructor\n                if (key !== 'constructor' && key !== 'toString' && key !== 'toSource') {\n                    createProperty(props, key);\n                }\n            }\n        }\n        // some other properties are not\n        // in NativeError\n        createProperty(props, 'originalStack');\n        createProperty(props, 'zoneAwareStack');\n        // define toString, toSource as method property\n        createMethodProperty(props, 'toString');\n        createMethodProperty(props, 'toSource');\n        return props;\n    };\n    var errorProperties = createErrorProperties();\n    // for derived Error class which extends ZoneAwareError\n    // we should not override the derived class's property\n    // so we create a new props object only copy the properties\n    // from errorProperties which not exist in derived Error's prototype\n    var getErrorPropertiesForPrototype = function (prototype) {\n        // if the prototype is ZoneAwareError.prototype\n        // we just return the prebuilt errorProperties.\n        if (prototype === ZoneAwareError.prototype) {\n            return errorProperties;\n        }\n        var newProps = Object.create(null);\n        var cKeys = Object.getOwnPropertyNames(errorProperties);\n        var keys = Object.getOwnPropertyNames(prototype);\n        cKeys.forEach(function (cKey) {\n            if (keys.filter(function (key) {\n                return key === cKey;\n            })\n                .length === 0) {\n                newProps[cKey] = errorProperties[cKey];\n            }\n        });\n        return newProps;\n    };\n    /**\n     * This is ZoneAwareError which processes the stack frame and cleans up extra frames as well as\n     * adds zone information to it.\n     */\n    function ZoneAwareError() {\n        // make sure we have a valid this\n        // if this is undefined(call Error without new) or this is global\n        // or this is some other objects, we should force to create a\n        // valid ZoneAwareError by call Object.create()\n        if (!(this instanceof ZoneAwareError)) {\n            return ZoneAwareError.apply(Object.create(ZoneAwareError.prototype), arguments);\n        }\n        // Create an Error.\n        var error = NativeError.apply(this, arguments);\n        this[__symbol__('error')] = error;\n        // Save original stack trace\n        error.originalStack = error.stack;\n        // Process the stack trace and rewrite the frames.\n        if (ZoneAwareError[stackRewrite] && error.originalStack) {\n            var frames_1 = error.originalStack.split('\\n');\n            var zoneFrame = _currentZoneFrame;\n            var i = 0;\n            // Find the first frame\n            while (frames_1[i] !== zoneAwareFrame && i < frames_1.length) {\n                i++;\n            }\n            for (; i < frames_1.length && zoneFrame; i++) {\n                var frame = frames_1[i];\n                if (frame.trim()) {\n                    var frameType = blackListedStackFrames.hasOwnProperty(frame) && blackListedStackFrames[frame];\n                    if (frameType === FrameType.blackList) {\n                        frames_1.splice(i, 1);\n                        i--;\n                    }\n                    else if (frameType === FrameType.transition) {\n                        if (zoneFrame.parent) {\n                            // This is the special frame where zone changed. Print and process it accordingly\n                            frames_1[i] += \" [\" + zoneFrame.parent.zone.name + \" => \" + zoneFrame.zone.name + \"]\";\n                            zoneFrame = zoneFrame.parent;\n                        }\n                        else {\n                            zoneFrame = null;\n                        }\n                    }\n                    else {\n                        frames_1[i] += \" [\" + zoneFrame.zone.name + \"]\";\n                    }\n                }\n            }\n            error.stack = error.zoneAwareStack = frames_1.join('\\n');\n        }\n        // use defineProperties here instead of copy property value\n        // because of issue #595 which will break angular2.\n        Object.defineProperties(this, getErrorPropertiesForPrototype(Object.getPrototypeOf(this)));\n        return this;\n    }\n    // Copy the prototype so that instanceof operator works as expected\n    ZoneAwareError.prototype = NativeError.prototype;\n    ZoneAwareError[Zone.__symbol__('blacklistedStackFrames')] = blackListedStackFrames;\n    ZoneAwareError[stackRewrite] = false;\n    if (NativeError.hasOwnProperty('stackTraceLimit')) {\n        // Extend default stack limit as we will be removing few frames.\n        NativeError.stackTraceLimit = Math.max(NativeError.stackTraceLimit, 15);\n        // make sure that ZoneAwareError has the same property which forwards to NativeError.\n        Object.defineProperty(ZoneAwareError, 'stackTraceLimit', {\n            get: function () {\n                return NativeError.stackTraceLimit;\n            },\n            set: function (value) {\n                return NativeError.stackTraceLimit = value;\n            }\n        });\n    }\n    if (NativeError.hasOwnProperty('captureStackTrace')) {\n        Object.defineProperty(ZoneAwareError, 'captureStackTrace', {\n            // add named function here because we need to remove this\n            // stack frame when prepareStackTrace below\n            value: function zoneCaptureStackTrace(targetObject, constructorOpt) {\n                NativeError.captureStackTrace(targetObject, constructorOpt);\n            }\n        });\n    }\n    Object.defineProperty(ZoneAwareError, 'prepareStackTrace', {\n        get: function () {\n            return NativeError.prepareStackTrace;\n        },\n        set: function (value) {\n            if (!value || typeof value !== 'function') {\n                return NativeError.prepareStackTrace = value;\n            }\n            return NativeError.prepareStackTrace = function (error, structuredStackTrace) {\n                // remove additional stack information from ZoneAwareError.captureStackTrace\n                if (structuredStackTrace) {\n                    for (var i = 0; i < structuredStackTrace.length; i++) {\n                        var st = structuredStackTrace[i];\n                        // remove the first function which name is zoneCaptureStackTrace\n                        if (st.getFunctionName() === 'zoneCaptureStackTrace') {\n                            structuredStackTrace.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                return value.apply(this, [error, structuredStackTrace]);\n            };\n        }\n    });\n    // Now we need to populet the `blacklistedStackFrames` as well as find the\n    // run/runGuraded/runTask frames. This is done by creating a detect zone and then threading\n    // the execution through all of the above methods so that we can look at the stack trace and\n    // find the frames of interest.\n    var detectZone = Zone.current.fork({\n        name: 'detect',\n        onInvoke: function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n            // Here only so that it will show up in the stack frame so that it can be black listed.\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        },\n        onHandleError: function (parentZD, current, target, error) {\n            if (error.originalStack && Error === ZoneAwareError) {\n                var frames_2 = error.originalStack.split(/\\n/);\n                var runFrame = false, runGuardedFrame = false, runTaskFrame = false;\n                while (frames_2.length) {\n                    var frame = frames_2.shift();\n                    // On safari it is possible to have stack frame with no line number.\n                    // This check makes sure that we don't filter frames on name only (must have\n                    // linenumber)\n                    if (/:\\d+:\\d+/.test(frame)) {\n                        // Get rid of the path so that we don't accidintely find function name in path.\n                        // In chrome the seperator is `(` and `@` in FF and safari\n                        // Chrome: at Zone.run (zone.js:100)\n                        // Chrome: at Zone.run (http://localhost:9876/base/build/lib/zone.js:100:24)\n                        // FireFox: Zone.prototype.run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        // Safari: run@http://localhost:9876/base/build/lib/zone.js:101:24\n                        var fnName = frame.split('(')[0].split('@')[0];\n                        var frameType = FrameType.transition;\n                        if (fnName.indexOf('ZoneAwareError') !== -1) {\n                            zoneAwareFrame = frame;\n                        }\n                        if (fnName.indexOf('runGuarded') !== -1) {\n                            runGuardedFrame = true;\n                        }\n                        else if (fnName.indexOf('runTask') !== -1) {\n                            runTaskFrame = true;\n                        }\n                        else if (fnName.indexOf('run') !== -1) {\n                            runFrame = true;\n                        }\n                        else {\n                            frameType = FrameType.blackList;\n                        }\n                        blackListedStackFrames[frame] = frameType;\n                        // Once we find all of the frames we can stop looking.\n                        if (runFrame && runGuardedFrame && runTaskFrame) {\n                            ZoneAwareError[stackRewrite] = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n    });\n    // carefully constructor a stack frame which contains all of the frames of interest which\n    // need to be detected and blacklisted.\n    var detectRunFn = function () {\n        detectZone.run(function () {\n            detectZone.runGuarded(function () {\n                throw new Error('blacklistStackFrames');\n            });\n        });\n    };\n    // Cause the error to extract the stack frames.\n    detectZone.runTask(detectZone.scheduleMacroTask('detect', detectRunFn, null, function () { return null; }, null));\n    return global['Zone'] = Zone;\n})(typeof window === 'object' && window || typeof self === 'object' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars}\n */\nvar zoneSymbol = function (n) { return \"__zone_symbol__\" + n; };\nvar _global$1 = typeof window === 'object' && window || typeof self === 'object' && self || global;\nfunction bindArguments(args, source) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = Zone.current.wrap(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\n\n\nvar isNode = (!('nw' in _global$1) && typeof process !== 'undefined' &&\n    {}.toString.call(process) === '[object process]');\n\n\n\n\n\nvar EVENT_TASKS = zoneSymbol('eventTasks');\n// For EventTarget\nvar ADD_EVENT_LISTENER = 'addEventListener';\nvar REMOVE_EVENT_LISTENER = 'removeEventListener';\nfunction findExistingRegisteredTask(target, handler, name, capture, remove) {\n    var eventTasks = target[EVENT_TASKS];\n    if (eventTasks) {\n        for (var i = 0; i < eventTasks.length; i++) {\n            var eventTask = eventTasks[i];\n            var data = eventTask.data;\n            var listener = data.handler;\n            if ((data.handler === handler || listener.listener === handler) &&\n                data.useCapturing === capture && data.eventName === name) {\n                if (remove) {\n                    eventTasks.splice(i, 1);\n                }\n                return eventTask;\n            }\n        }\n    }\n    return null;\n}\nfunction findAllExistingRegisteredTasks(target, name, capture, remove) {\n    var eventTasks = target[EVENT_TASKS];\n    if (eventTasks) {\n        var result = [];\n        for (var i = eventTasks.length - 1; i >= 0; i--) {\n            var eventTask = eventTasks[i];\n            var data = eventTask.data;\n            if (data.eventName === name && data.useCapturing === capture) {\n                result.push(eventTask);\n                if (remove) {\n                    eventTasks.splice(i, 1);\n                }\n            }\n        }\n        return result;\n    }\n    return null;\n}\nfunction attachRegisteredEvent(target, eventTask, isPrepend) {\n    var eventTasks = target[EVENT_TASKS];\n    if (!eventTasks) {\n        eventTasks = target[EVENT_TASKS] = [];\n    }\n    if (isPrepend) {\n        eventTasks.unshift(eventTask);\n    }\n    else {\n        eventTasks.push(eventTask);\n    }\n}\nvar defaultListenerMetaCreator = function (self, args) {\n    return {\n        useCapturing: args[2],\n        eventName: args[0],\n        handler: args[1],\n        target: self || _global$1,\n        name: args[0],\n        invokeAddFunc: function (addFnSymbol, delegate) {\n            if (delegate && delegate.invoke) {\n                return this.target[addFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\n            }\n            else {\n                return this.target[addFnSymbol](this.eventName, delegate, this.useCapturing);\n            }\n        },\n        invokeRemoveFunc: function (removeFnSymbol, delegate) {\n            if (delegate && delegate.invoke) {\n                return this.target[removeFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\n            }\n            else {\n                return this.target[removeFnSymbol](this.eventName, delegate, this.useCapturing);\n            }\n        }\n    };\n};\nfunction makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates, isPrepend, metaCreator) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    if (allowDuplicates === void 0) { allowDuplicates = false; }\n    if (isPrepend === void 0) { isPrepend = false; }\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\n    var addFnSymbol = zoneSymbol(addFnName);\n    var removeFnSymbol = zoneSymbol(removeFnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    function scheduleEventListener(eventTask) {\n        var meta = eventTask.data;\n        attachRegisteredEvent(meta.target, eventTask, isPrepend);\n        return meta.invokeAddFunc(addFnSymbol, eventTask);\n    }\n    function cancelEventListener(eventTask) {\n        var meta = eventTask.data;\n        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);\n        return meta.invokeRemoveFunc(removeFnSymbol, eventTask);\n    }\n    return function zoneAwareAddListener(self, args) {\n        var data = metaCreator(self, args);\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var delegate = null;\n        if (typeof data.handler == 'function') {\n            delegate = data.handler;\n        }\n        else if (data.handler && data.handler.handleEvent) {\n            delegate = function (event) { return data.handler.handleEvent(event); };\n        }\n        var validZoneHandler = false;\n        try {\n            // In cross site contexts (such as WebDriver frameworks like Selenium),\n            // accessing the handler object here will cause an exception to be thrown which\n            // will fail tests prematurely.\n            validZoneHandler = data.handler && data.handler.toString() === '[object FunctionWrapper]';\n        }\n        catch (e) {\n            // Returning nothing here is fine, because objects in a cross-site context are unusable\n            return;\n        }\n        // Ignore special listeners of IE11 & Edge dev tools, see\n        // https://github.com/angular/zone.js/issues/150\n        if (!delegate || validZoneHandler) {\n            return data.invokeAddFunc(addFnSymbol, data.handler);\n        }\n        if (!allowDuplicates) {\n            var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, false);\n            if (eventTask) {\n                // we already registered, so this will have noop.\n                return data.invokeAddFunc(addFnSymbol, eventTask);\n            }\n        }\n        var zone = Zone.current;\n        var source = data.target.constructor['name'] + '.' + addFnName + ':' + data.eventName;\n        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);\n    };\n}\nfunction makeZoneAwareRemoveListener(fnName, useCapturingParam, metaCreator) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\n    var symbol = zoneSymbol(fnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    return function zoneAwareRemoveListener(self, args) {\n        var data = metaCreator(self, args);\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\n        // see https://github.com/angular/zone.js/issues/190\n        var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, true);\n        if (eventTask) {\n            eventTask.zone.cancelTask(eventTask);\n        }\n        else {\n            data.invokeRemoveFunc(symbol, data.handler);\n        }\n    };\n}\nfunction makeZoneAwareRemoveAllListeners(fnName, useCapturingParam) {\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\n    var symbol = zoneSymbol(fnName);\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\n    return function zoneAwareRemoveAllListener(self, args) {\n        var target = self || _global$1;\n        if (args.length === 0) {\n            // remove all listeners without eventName\n            target[EVENT_TASKS] = [];\n            // we don't cancel Task either, because call native eventEmitter.removeAllListeners will\n            // will do remove listener(cancelTask) for us\n            target[symbol]();\n            return;\n        }\n        var eventName = args[0];\n        var useCapturing = args[1] || defaultUseCapturing;\n        // call this function just remove the related eventTask from target[EVENT_TASKS]\n        findAllExistingRegisteredTasks(target, eventName, useCapturing, true);\n        // we don't need useCapturing here because useCapturing is just for DOM, and\n        // removeAllListeners should only be called by node eventEmitter\n        // and we don't cancel Task either, because call native eventEmitter.removeAllListeners will\n        // will do remove listener(cancelTask) for us\n        target[symbol](eventName);\n    };\n}\nfunction makeZoneAwareListeners(fnName) {\n    var symbol = zoneSymbol(fnName);\n    return function zoneAwareEventListeners(self, args) {\n        var eventName = args[0];\n        var target = self || _global$1;\n        if (!target[EVENT_TASKS]) {\n            return [];\n        }\n        return target[EVENT_TASKS]\n            .filter(function (task) { return task.data.eventName === eventName; })\n            .map(function (task) { return task.data.handler; });\n    };\n}\nvar zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);\nvar zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);\n\nvar originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\n\n\nfunction createNamedFn(name, delegate) {\n    try {\n        return (Function('f', \"return function \" + name + \"(){return f(this, arguments)}\"))(delegate);\n    }\n    catch (e) {\n        // if we fail, we must be CSP, just return delegate.\n        return function () {\n            return delegate(this, arguments);\n        };\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));\n    }\n    return delegate;\n}\n// TODO: support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    var setNative = null;\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[data.callbackIndex] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\n        var meta = metaCreator(self, args);\n        if (meta.callbackIndex >= 0 && typeof args[meta.callbackIndex] === 'function') {\n            var task = Zone.current.scheduleMacroTask(meta.name, args[meta.callbackIndex], meta, scheduleTask, null);\n            return task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar callAndReturnFirstParam = function (fn) {\n    return function (self, args) {\n        fn(self, args);\n        return self;\n    };\n};\n// For EventEmitter\nvar EE_ADD_LISTENER = 'addListener';\nvar EE_PREPEND_LISTENER = 'prependListener';\nvar EE_REMOVE_LISTENER = 'removeListener';\nvar EE_REMOVE_ALL_LISTENER = 'removeAllListeners';\nvar EE_LISTENERS = 'listeners';\nvar EE_ON = 'on';\nvar zoneAwareAddListener$1 = callAndReturnFirstParam(makeZoneAwareAddListener(EE_ADD_LISTENER, EE_REMOVE_LISTENER, false, true, false));\nvar zoneAwarePrependListener = callAndReturnFirstParam(makeZoneAwareAddListener(EE_PREPEND_LISTENER, EE_REMOVE_LISTENER, false, true, true));\nvar zoneAwareRemoveListener$1 = callAndReturnFirstParam(makeZoneAwareRemoveListener(EE_REMOVE_LISTENER, false));\nvar zoneAwareRemoveAllListeners = callAndReturnFirstParam(makeZoneAwareRemoveAllListeners(EE_REMOVE_ALL_LISTENER, false));\nvar zoneAwareListeners = makeZoneAwareListeners(EE_LISTENERS);\nfunction patchEventEmitterMethods(obj) {\n    if (obj && obj.addListener) {\n        patchMethod(obj, EE_ADD_LISTENER, function () { return zoneAwareAddListener$1; });\n        patchMethod(obj, EE_PREPEND_LISTENER, function () { return zoneAwarePrependListener; });\n        patchMethod(obj, EE_REMOVE_LISTENER, function () { return zoneAwareRemoveListener$1; });\n        patchMethod(obj, EE_REMOVE_ALL_LISTENER, function () { return zoneAwareRemoveAllListeners; });\n        patchMethod(obj, EE_LISTENERS, function () { return zoneAwareListeners; });\n        obj[EE_ON] = obj[EE_ADD_LISTENER];\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n// EventEmitter\nvar events;\ntry {\n    events = require('events');\n}\ncatch (err) {\n}\nif (events && events.EventEmitter) {\n    patchEventEmitterMethods(events.EventEmitter.prototype);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar fs;\ntry {\n    fs = require('fs');\n}\ncatch (err) {\n}\n// watch, watchFile, unwatchFile has been patched\n// because EventEmitter has been patched\nvar TO_PATCH_MACROTASK_METHODS = [\n    'access', 'appendFile', 'chmod', 'chown', 'close', 'exists', 'fchmod',\n    'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchmod',\n    'lchown', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'read',\n    'readdir', 'readFile', 'readlink', 'realpath', 'rename', 'rmdir', 'stat',\n    'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile',\n];\nif (fs) {\n    TO_PATCH_MACROTASK_METHODS.filter(function (name) { return !!fs[name] && typeof fs[name] === 'function'; })\n        .forEach(function (name) {\n        patchMacroTask(fs, name, function (self, args) {\n            return {\n                name: 'fs.' + name,\n                args: args,\n                callbackIndex: args.length > 0 ? args.length - 1 : -1,\n                target: self\n            };\n        });\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[0] = function () {\n            task.invoke.apply(this, arguments);\n            delete tasksByHandleId[data.handleId];\n        };\n        data.handleId = setNative.apply(window, data.args);\n        tasksByHandleId[data.handleId] = task;\n        return task;\n    }\n    function clearTask(task) {\n        delete tasksByHandleId[task.data.handleId];\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var zone = Zone.current;\n                var options = {\n                    handleId: null,\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n                    args: args\n                };\n                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                if (handle.ref && handle.unref) {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\n            if (task && typeof task.type === 'string') {\n                if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar set = 'set';\nvar clear = 'clear';\nvar _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\n// Timers\nvar timers = require('timers');\npatchTimer(timers, set, clear, 'Timeout');\npatchTimer(timers, set, clear, 'Interval');\npatchTimer(timers, set, clear, 'Immediate');\nvar shouldPatchGlobalTimers = global.setTimeout !== timers.setTimeout;\nif (shouldPatchGlobalTimers) {\n    patchTimer(_global, set, clear, 'Timeout');\n    patchTimer(_global, set, clear, 'Interval');\n    patchTimer(_global, set, clear, 'Immediate');\n}\npatchNextTick();\n// Crypto\nvar crypto;\ntry {\n    crypto = require('crypto');\n}\ncatch (err) {\n}\n// TODO(gdi2290): implement a better way to patch these methods\nif (crypto) {\n    var nativeRandomBytes_1 = crypto.randomBytes;\n    crypto.randomBytes = function randomBytesZone(size, callback) {\n        if (!callback) {\n            return nativeRandomBytes_1(size);\n        }\n        else {\n            var zone = Zone.current;\n            var source = crypto.constructor.name + '.randomBytes';\n            return nativeRandomBytes_1(size, zone.wrap(callback, source));\n        }\n    }.bind(crypto);\n    var nativePbkdf2_1 = crypto.pbkdf2;\n    crypto.pbkdf2 = function pbkdf2Zone() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var fn = args[args.length - 1];\n        if (typeof fn === 'function') {\n            var zone = Zone.current;\n            var source = crypto.constructor.name + '.pbkdf2';\n            args[args.length - 1] = zone.wrap(fn, source);\n            return nativePbkdf2_1.apply(void 0, args);\n        }\n        else {\n            return nativePbkdf2_1.apply(void 0, args);\n        }\n    }.bind(crypto);\n}\n// HTTP Client\nvar httpClient;\ntry {\n    httpClient = require('_http_client');\n}\ncatch (err) {\n}\nif (httpClient && httpClient.ClientRequest) {\n    var ClientRequest_1 = httpClient.ClientRequest.bind(httpClient);\n    httpClient.ClientRequest = function (options, callback) {\n        if (!callback) {\n            return new ClientRequest_1(options);\n        }\n        else {\n            var zone = Zone.current;\n            return new ClientRequest_1(options, zone.wrap(callback, 'http.ClientRequest'));\n        }\n    };\n}\nfunction patchNextTick() {\n    var setNative = null;\n    function scheduleTask(task) {\n        var args = task.data;\n        args[0] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(process, args);\n        return task;\n    }\n    setNative =\n        patchMethod(process, 'nextTick', function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var zone = Zone.current;\n                var task = zone.scheduleMicroTask('nextTick', args[0], args, scheduleTask);\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(process, args);\n            }\n        }; });\n}\n\n})));\n","module.exports = require(\"timers\");","module.exports = require(\"_http_client\");","\"use strict\";\r\nvar DiagChannel = require(\"./diagnostic-channel/initialization\");\r\nvar AutoCollectConsole = (function () {\r\n    function AutoCollectConsole(client) {\r\n        if (!!AutoCollectConsole.INSTANCE) {\r\n            throw new Error(\"Console logging adapter tracking should be configured from the applicationInsights object\");\r\n        }\r\n        this._client = client;\r\n        AutoCollectConsole.INSTANCE = this;\r\n    }\r\n    AutoCollectConsole.prototype.enable = function (isEnabled, collectConsoleLog) {\r\n        if (DiagChannel.IsInitialized) {\r\n            require(\"./diagnostic-channel/console.sub\").enable(isEnabled && collectConsoleLog, this._client);\r\n            require(\"./diagnostic-channel/bunyan.sub\").enable(isEnabled, this._client);\r\n            require(\"./diagnostic-channel/winston.sub\").enable(isEnabled, this._client);\r\n        }\r\n    };\r\n    AutoCollectConsole.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectConsole.prototype.dispose = function () {\r\n        AutoCollectConsole.INSTANCE = null;\r\n        this.enable(false, false);\r\n    };\r\n    AutoCollectConsole._methodNames = [\"debug\", \"info\", \"log\", \"warn\", \"error\"];\r\n    return AutoCollectConsole;\r\n}());\r\nmodule.exports = AutoCollectConsole;\r\n//# sourceMappingURL=Console.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts_1 = require(\"../../Declarations/Contracts\");\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nvar subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        // Message can have a trailing newline\r\n        var message = event.data.message;\r\n        if (message.lastIndexOf(\"\\n\") == message.length - 1) {\r\n            message = message.substring(0, message.length - 1);\r\n        }\r\n        client.trackTrace({ message: message, severity: (event.data.stderr ? Contracts_1.SeverityLevel.Warning : Contracts_1.SeverityLevel.Information) });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"console\", subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"console\", subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=console.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Generated_1 = require(\"./Generated\");\r\nvar RemoteDependencyDataConstants = (function () {\r\n    function RemoteDependencyDataConstants() {\r\n    }\r\n    RemoteDependencyDataConstants.TYPE_HTTP = \"Http\";\r\n    RemoteDependencyDataConstants.TYPE_AI = \"Http (tracked component)\";\r\n    return RemoteDependencyDataConstants;\r\n}());\r\nexports.RemoteDependencyDataConstants = RemoteDependencyDataConstants;\r\nfunction domainSupportsProperties(domain) {\r\n    return \"properties\" in domain ||\r\n        domain instanceof Generated_1.EventData ||\r\n        domain instanceof Generated_1.ExceptionData ||\r\n        domain instanceof Generated_1.MessageData ||\r\n        domain instanceof Generated_1.MetricData ||\r\n        domain instanceof Generated_1.PageViewData ||\r\n        domain instanceof Generated_1.RemoteDependencyData ||\r\n        domain instanceof Generated_1.RequestData;\r\n}\r\nexports.domainSupportsProperties = domainSupportsProperties;\r\n//# sourceMappingURL=Constants.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * Instances of AvailabilityData represent the result of executing an availability test.\r\n */\r\nvar AvailabilityData = (function (_super) {\r\n    __extends(AvailabilityData, _super);\r\n    function AvailabilityData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return AvailabilityData;\r\n}(Domain));\r\nmodule.exports = AvailabilityData;\r\n//# sourceMappingURL=AvailabilityData.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\nvar ContextTagKeys = (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nmodule.exports = ContextTagKeys;\r\n//# sourceMappingURL=ContextTagKeys.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Base = require(\"./Base\");\r\n\"use strict\";\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = (function (_super) {\r\n    __extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nmodule.exports = Data;\r\n//# sourceMappingURL=Data.js.map","\"use strict\";\r\n// THIS FILE WAS AUTOGENERATED\r\nvar DataPointType = require(\"./DataPointType\");\r\n\"use strict\";\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nmodule.exports = DataPoint;\r\n//# sourceMappingURL=DataPoint.js.map","\"use strict\";\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nmodule.exports = Envelope;\r\n//# sourceMappingURL=Envelope.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = (function (_super) {\r\n    __extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nmodule.exports = ExceptionData;\r\n//# sourceMappingURL=ExceptionData.js.map","\"use strict\";\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nmodule.exports = ExceptionDetails;\r\n//# sourceMappingURL=ExceptionDetails.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = (function (_super) {\r\n    __extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nmodule.exports = MessageData;\r\n//# sourceMappingURL=MessageData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = (function (_super) {\r\n    __extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nmodule.exports = MetricData;\r\n//# sourceMappingURL=MetricData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar EventData = require(\"./EventData\");\r\n\"use strict\";\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = (function (_super) {\r\n    __extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nmodule.exports = PageViewData;\r\n//# sourceMappingURL=PageViewData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = (function (_super) {\r\n    __extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nmodule.exports = RemoteDependencyData;\r\n//# sourceMappingURL=RemoteDependencyData.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// THIS FILE WAS AUTOGENERATED\r\nvar Domain = require(\"./Domain\");\r\n\"use strict\";\r\n/**\r\n * An instance of Request represents completion of an external request to the application to do work and contains a summary of that request execution and the results.\r\n */\r\nvar RequestData = (function (_super) {\r\n    __extends(RequestData, _super);\r\n    function RequestData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RequestData;\r\n}(Domain));\r\nmodule.exports = RequestData;\r\n//# sourceMappingURL=RequestData.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nvar SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\nmodule.exports = SeverityLevel;\r\n//# sourceMappingURL=SeverityLevel.js.map","// THIS FILE WAS AUTOGENERATED\r\n\"use strict\";\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nmodule.exports = StackFrame;\r\n//# sourceMappingURL=StackFrame.js.map","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./TelemetryType\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Converts the user-friendly enumeration TelemetryType to the underlying schema baseType value\r\n * @param type Type to convert to BaseData string\r\n */\r\nfunction telemetryTypeToBaseType(type) {\r\n    switch (type) {\r\n        case TelemetryType.Event:\r\n            return \"EventData\";\r\n        case TelemetryType.Exception:\r\n            return \"ExceptionData\";\r\n        case TelemetryType.Trace:\r\n            return \"MessageData\";\r\n        case TelemetryType.Metric:\r\n            return \"MetricData\";\r\n        case TelemetryType.Request:\r\n            return \"RequestData\";\r\n        case TelemetryType.Dependency:\r\n            return \"RemoteDependencyData\";\r\n    }\r\n    return undefined;\r\n}\r\nexports.telemetryTypeToBaseType = telemetryTypeToBaseType;\r\n/**\r\n * Converts the schema baseType value to the user-friendly enumeration TelemetryType\r\n * @param baseType BaseData string to convert to TelemetryType\r\n */\r\nfunction baseTypeToTelemetryType(baseType) {\r\n    switch (baseType) {\r\n        case \"EventData\":\r\n            return TelemetryType.Event;\r\n        case \"ExceptionData\":\r\n            return TelemetryType.Exception;\r\n        case \"MessageData\":\r\n            return TelemetryType.Trace;\r\n        case \"MetricData\":\r\n            return TelemetryType.Metric;\r\n        case \"RequestData\":\r\n            return TelemetryType.Request;\r\n        case \"RemoteDependencyData\":\r\n            return TelemetryType.Dependency;\r\n    }\r\n    return undefined;\r\n}\r\nexports.baseTypeToTelemetryType = baseTypeToTelemetryType;\r\n/**\r\n * Telemetry types supported by this SDK\r\n */\r\nvar TelemetryType;\r\n(function (TelemetryType) {\r\n    TelemetryType[TelemetryType[\"Event\"] = 0] = \"Event\";\r\n    TelemetryType[TelemetryType[\"Exception\"] = 1] = \"Exception\";\r\n    TelemetryType[TelemetryType[\"Trace\"] = 2] = \"Trace\";\r\n    TelemetryType[TelemetryType[\"Metric\"] = 3] = \"Metric\";\r\n    TelemetryType[TelemetryType[\"Request\"] = 4] = \"Request\";\r\n    TelemetryType[TelemetryType[\"Dependency\"] = 5] = \"Dependency\";\r\n})(TelemetryType = exports.TelemetryType || (exports.TelemetryType = {}));\r\n//# sourceMappingURL=TelemetryType.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts_1 = require(\"../../Declarations/Contracts\");\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\n// Mapping from bunyan levels defined at https://github.com/trentm/node-bunyan/blob/master/lib/bunyan.js#L256\r\nvar bunyanToAILevelMap = {\r\n    10: Contracts_1.SeverityLevel.Verbose,\r\n    20: Contracts_1.SeverityLevel.Verbose,\r\n    30: Contracts_1.SeverityLevel.Information,\r\n    40: Contracts_1.SeverityLevel.Warning,\r\n    50: Contracts_1.SeverityLevel.Error,\r\n    60: Contracts_1.SeverityLevel.Critical,\r\n};\r\nvar subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var AIlevel = bunyanToAILevelMap[event.data.level];\r\n        client.trackTrace({ message: event.data.result, severity: AIlevel });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"bunyan\", subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"bunyan\", subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=bunyan.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts_1 = require(\"../../Declarations/Contracts\");\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nvar winstonToAILevelMap = {\r\n    syslog: function (og) {\r\n        var map = {\r\n            emerg: Contracts_1.SeverityLevel.Critical,\r\n            alert: Contracts_1.SeverityLevel.Critical,\r\n            crit: Contracts_1.SeverityLevel.Critical,\r\n            error: Contracts_1.SeverityLevel.Error,\r\n            warning: Contracts_1.SeverityLevel.Warning,\r\n            notice: Contracts_1.SeverityLevel.Information,\r\n            info: Contracts_1.SeverityLevel.Information,\r\n            debug: Contracts_1.SeverityLevel.Verbose\r\n        };\r\n        return map[og] === undefined ? Contracts_1.SeverityLevel.Information : map[og];\r\n    },\r\n    npm: function (og) {\r\n        var map = {\r\n            error: Contracts_1.SeverityLevel.Error,\r\n            warn: Contracts_1.SeverityLevel.Warning,\r\n            info: Contracts_1.SeverityLevel.Information,\r\n            verbose: Contracts_1.SeverityLevel.Verbose,\r\n            debug: Contracts_1.SeverityLevel.Verbose,\r\n            silly: Contracts_1.SeverityLevel.Verbose\r\n        };\r\n        return map[og] === undefined ? Contracts_1.SeverityLevel.Information : map[og];\r\n    },\r\n    unknown: function (og) {\r\n        return Contracts_1.SeverityLevel.Information;\r\n    }\r\n};\r\nvar subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var AIlevel = winstonToAILevelMap[event.data.levelKind](event.data.level);\r\n        client.trackTrace({\r\n            message: event.data.message,\r\n            severity: AIlevel,\r\n            properties: event.data.meta\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"winston\", subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"winston\", subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=winston.sub.js.map","\"use strict\";\r\nvar AutoCollectExceptions = (function () {\r\n    function AutoCollectExceptions(client) {\r\n        if (!!AutoCollectExceptions.INSTANCE) {\r\n            throw new Error(\"Exception tracking should be configured from the applicationInsights object\");\r\n        }\r\n        AutoCollectExceptions.INSTANCE = this;\r\n        this._client = client;\r\n    }\r\n    Object.defineProperty(AutoCollectExceptions, \"UNCAUGHT_EXCEPTION_HANDLER_NAME\", {\r\n        get: function () { return \"uncaughtException\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AutoCollectExceptions, \"UNHANDLED_REJECTION_HANDLER_NAME\", {\r\n        get: function () { return \"unhandledRejection\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AutoCollectExceptions.prototype.isInitialized = function () {\r\n        return this._isInitialized;\r\n    };\r\n    AutoCollectExceptions.prototype.enable = function (isEnabled) {\r\n        var _this = this;\r\n        if (isEnabled) {\r\n            this._isInitialized = true;\r\n            var self = this;\r\n            if (!this._exceptionListenerHandle) {\r\n                var handle = function (reThrow, error) {\r\n                    _this._client.trackException({ exception: error });\r\n                    _this._client.flush({ isAppCrashing: true });\r\n                    if (reThrow) {\r\n                        var THIS_IS_APPLICATION_INSIGHTS_RETHROWING_YOUR_EXCEPTION = error;\r\n                        throw THIS_IS_APPLICATION_INSIGHTS_RETHROWING_YOUR_EXCEPTION; // Error originated somewhere else in your app\r\n                    }\r\n                };\r\n                this._exceptionListenerHandle = handle.bind(this, true);\r\n                this._rejectionListenerHandle = handle.bind(this, false);\r\n                process.on(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\r\n                process.on(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\r\n            }\r\n        }\r\n        else {\r\n            if (this._exceptionListenerHandle) {\r\n                process.removeListener(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\r\n                process.removeListener(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\r\n                this._exceptionListenerHandle = undefined;\r\n                this._rejectionListenerHandle = undefined;\r\n                delete this._exceptionListenerHandle;\r\n                delete this._rejectionListenerHandle;\r\n            }\r\n        }\r\n    };\r\n    AutoCollectExceptions.prototype.dispose = function () {\r\n        AutoCollectExceptions.INSTANCE = null;\r\n        this.enable(false);\r\n        this._isInitialized = false;\r\n    };\r\n    AutoCollectExceptions.INSTANCE = null;\r\n    return AutoCollectExceptions;\r\n}());\r\nmodule.exports = AutoCollectExceptions;\r\n//# sourceMappingURL=Exceptions.js.map","module.exports = require(\"constants\");","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar url = require(\"url\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar RequestParser = require(\"./RequestParser\");\r\nvar CorrelationIdManager = require(\"../Library/CorrelationIdManager\");\r\n/**\r\n * Helper class to read data from the requst/response objects and convert them into the telemetry contract\r\n */\r\nvar HttpDependencyParser = (function (_super) {\r\n    __extends(HttpDependencyParser, _super);\r\n    function HttpDependencyParser(requestOptions, request) {\r\n        var _this = _super.call(this) || this;\r\n        if (request && request.method && requestOptions) {\r\n            // The ClientRequest.method property isn't documented, but is always there.\r\n            _this.method = request.method;\r\n            _this.url = HttpDependencyParser._getUrlFromRequestOptions(requestOptions, request);\r\n            _this.startTime = +new Date();\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Called when the ClientRequest emits an error event.\r\n     */\r\n    HttpDependencyParser.prototype.onError = function (error) {\r\n        this._setStatus(undefined, error);\r\n    };\r\n    /**\r\n     * Called when the ClientRequest emits a response event.\r\n     */\r\n    HttpDependencyParser.prototype.onResponse = function (response) {\r\n        this._setStatus(response.statusCode, undefined);\r\n        this.correlationId = Util.getCorrelationContextTarget(response, RequestResponseHeaders.requestContextTargetKey);\r\n    };\r\n    /**\r\n     * Gets a dependency data contract object for a completed ClientRequest.\r\n     */\r\n    HttpDependencyParser.prototype.getDependencyTelemetry = function (baseTelemetry, dependencyId) {\r\n        var urlObject = url.parse(this.url);\r\n        urlObject.search = undefined;\r\n        urlObject.hash = undefined;\r\n        var dependencyName = this.method.toUpperCase() + \" \" + urlObject.pathname;\r\n        var remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_HTTP;\r\n        var remoteDependencyTarget = urlObject.hostname;\r\n        if (this.correlationId) {\r\n            remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_AI;\r\n            if (this.correlationId !== CorrelationIdManager.correlationIdPrefix) {\r\n                remoteDependencyTarget = urlObject.hostname + \" | \" + this.correlationId;\r\n            }\r\n        }\r\n        else {\r\n            remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_HTTP;\r\n        }\r\n        var dependencyTelemetry = {\r\n            id: dependencyId,\r\n            name: dependencyName,\r\n            data: this.url,\r\n            duration: this.duration,\r\n            success: this._isSuccess(),\r\n            resultCode: this.statusCode ? this.statusCode.toString() : null,\r\n            properties: this.properties || {},\r\n            dependencyTypeName: remoteDependencyType,\r\n            target: remoteDependencyTarget\r\n        };\r\n        // We should keep any parameters the user passed in\r\n        // Except the fields defined above in requestTelemetry, which take priority\r\n        // Except the properties field, where they're merged instead, with baseTelemetry taking priority\r\n        if (baseTelemetry) {\r\n            // Copy missing fields\r\n            for (var key in baseTelemetry) {\r\n                if (!dependencyTelemetry[key]) {\r\n                    dependencyTelemetry[key] = baseTelemetry[key];\r\n                }\r\n            }\r\n            // Merge properties\r\n            if (baseTelemetry.properties) {\r\n                for (var key in baseTelemetry.properties) {\r\n                    dependencyTelemetry.properties[key] = baseTelemetry.properties[key];\r\n                }\r\n            }\r\n        }\r\n        return dependencyTelemetry;\r\n    };\r\n    /**\r\n     * Builds a URL from request options, using the same logic as http.request(). This is\r\n     * necessary because a ClientRequest object does not expose a url property.\r\n     */\r\n    HttpDependencyParser._getUrlFromRequestOptions = function (options, request) {\r\n        if (typeof options === 'string') {\r\n            options = url.parse(options);\r\n        }\r\n        else {\r\n            // Avoid modifying the original options object.\r\n            var originalOptions_1 = options;\r\n            options = {};\r\n            if (originalOptions_1) {\r\n                Object.keys(originalOptions_1).forEach(function (key) {\r\n                    options[key] = originalOptions_1[key];\r\n                });\r\n            }\r\n        }\r\n        // Oddly, url.format ignores path and only uses pathname and search,\r\n        // so create them from the path, if path was specified\r\n        if (options.path) {\r\n            var parsedQuery = url.parse(options.path);\r\n            options.pathname = parsedQuery.pathname;\r\n            options.search = parsedQuery.search;\r\n        }\r\n        // Simiarly, url.format ignores hostname and port if host is specified,\r\n        // even if host doesn't have the port, but http.request does not work\r\n        // this way. It will use the port if one is not specified in host,\r\n        // effectively treating host as hostname, but will use the port specified\r\n        // in host if it exists.\r\n        if (options.host && options.port) {\r\n            // Force a protocol so it will parse the host as the host, not path.\r\n            // It is discarded and not used, so it doesn't matter if it doesn't match\r\n            var parsedHost = url.parse(\"http://\" + options.host);\r\n            if (!parsedHost.port && options.port) {\r\n                options.hostname = options.host;\r\n                delete options.host;\r\n            }\r\n        }\r\n        // Mix in default values used by http.request and others\r\n        options.protocol = options.protocol || (request.agent && request.agent.protocol) || undefined;\r\n        options.hostname = options.hostname || 'localhost';\r\n        return url.format(options);\r\n    };\r\n    return HttpDependencyParser;\r\n}(RequestParser));\r\nmodule.exports = HttpDependencyParser;\r\n//# sourceMappingURL=HttpDependencyParser.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var dbName = (event.data.startedData && event.data.startedData.databaseName) || \"Unknown database\";\r\n        client.trackDependency({\r\n            target: dbName,\r\n            data: event.data.event.commandName,\r\n            name: event.data.event.commandName,\r\n            duration: event.data.event.duration,\r\n            success: event.data.succeeded,\r\n            /* TODO: transmit result code from mongo */\r\n            resultCode: event.data.succeeded ? \"0\" : \"1\",\r\n            dependencyTypeName: 'mongodb'\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"mongodb\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"mongodb\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mongodb.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var queryObj = event.data.query || {};\r\n        var sqlString = queryObj.sql || \"Unknown query\";\r\n        var success = !event.data.err;\r\n        var connection = queryObj._connection || {};\r\n        var connectionConfig = connection.config || {};\r\n        var dbName = connectionConfig.socketPath ? connectionConfig.socketPath : (connectionConfig.host || \"localhost\") + \":\" + connectionConfig.port;\r\n        client.trackDependency({\r\n            target: dbName,\r\n            data: sqlString,\r\n            name: sqlString,\r\n            duration: event.data.duration,\r\n            success: success,\r\n            /* TODO: transmit result code from mysql */\r\n            resultCode: success ? \"0\" : \"1\",\r\n            dependencyTypeName: \"mysql\"\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"mysql\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"mysql\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=mysql.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        if (event.data.commandObj.command === \"info\") {\r\n            // We don't want to report 'info', it's irrelevant\r\n            return;\r\n        }\r\n        client.trackDependency({\r\n            target: event.data.address,\r\n            name: event.data.commandObj.command,\r\n            data: event.data.commandObj.command,\r\n            duration: event.data.duration,\r\n            success: !event.data.err,\r\n            /* TODO: transmit result code from redis */\r\n            resultCode: event.data.err ? \"1\" : \"0\",\r\n            dependencyTypeName: \"redis\"\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"redis\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"redis\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=redis.sub.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar diagnostic_channel_1 = require(\"diagnostic-channel\");\r\nvar clients = [];\r\nexports.subscriber = function (event) {\r\n    clients.forEach(function (client) {\r\n        var q = event.data.query;\r\n        var sql = (q.preparable && q.preparable.text) || q.plan || q.text || \"unknown query\";\r\n        var success = !event.data.error;\r\n        var conn = event.data.database.host + \":\" + event.data.database.port;\r\n        client.trackDependency({\r\n            target: conn,\r\n            data: sql,\r\n            name: sql,\r\n            duration: event.data.duration,\r\n            success: success,\r\n            resultCode: success ? \"0\" : \"1\",\r\n            dependencyTypeName: \"postgres\"\r\n        });\r\n    });\r\n};\r\nfunction enable(enabled, client) {\r\n    if (enabled) {\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.subscribe(\"postgres\", exports.subscriber);\r\n        }\r\n        ;\r\n        clients.push(client);\r\n    }\r\n    else {\r\n        clients = clients.filter(function (c) { return c != client; });\r\n        if (clients.length === 0) {\r\n            diagnostic_channel_1.channel.unsubscribe(\"postgres\", exports.subscriber);\r\n        }\r\n    }\r\n}\r\nexports.enable = enable;\r\n//# sourceMappingURL=postgres.sub.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar url = require(\"url\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Util = require(\"../Library/Util\");\r\nvar RequestResponseHeaders = require(\"../Library/RequestResponseHeaders\");\r\nvar RequestParser = require(\"./RequestParser\");\r\nvar CorrelationIdManager = require(\"../Library/CorrelationIdManager\");\r\n/**\r\n * Helper class to read data from the requst/response objects and convert them into the telemetry contract\r\n */\r\nvar HttpRequestParser = (function (_super) {\r\n    __extends(HttpRequestParser, _super);\r\n    function HttpRequestParser(request, requestId) {\r\n        var _this = _super.call(this) || this;\r\n        if (request) {\r\n            _this.method = request.method;\r\n            _this.url = _this._getAbsoluteUrl(request);\r\n            _this.startTime = +new Date();\r\n            _this.socketRemoteAddress = request.socket && request.socket.remoteAddress;\r\n            _this.parseHeaders(request, requestId);\r\n            if (request.connection) {\r\n                _this.connectionRemoteAddress = request.connection.remoteAddress;\r\n                _this.legacySocketRemoteAddress = request.connection[\"socket\"] && request.connection[\"socket\"].remoteAddress;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    HttpRequestParser.prototype.onError = function (error, ellapsedMilliseconds) {\r\n        this._setStatus(undefined, error);\r\n        // This parameter is only for overrides. setStatus handles this internally for the autocollected case\r\n        if (ellapsedMilliseconds) {\r\n            this.duration = ellapsedMilliseconds;\r\n        }\r\n    };\r\n    HttpRequestParser.prototype.onResponse = function (response, ellapsedMilliseconds) {\r\n        this._setStatus(response.statusCode, undefined);\r\n        // This parameter is only for overrides. setStatus handles this internally for the autocollected case\r\n        if (ellapsedMilliseconds) {\r\n            this.duration = ellapsedMilliseconds;\r\n        }\r\n    };\r\n    HttpRequestParser.prototype.getRequestTelemetry = function (baseTelemetry) {\r\n        var requestTelemetry = {\r\n            id: this.requestId,\r\n            name: this.method + \" \" + url.parse(this.url).pathname,\r\n            url: this.url,\r\n            /*\r\n            See https://github.com/Microsoft/ApplicationInsights-dotnet-server/blob/25d695e6a906fbe977f67be3966d25dbf1c50a79/Src/Web/Web.Shared.Net/RequestTrackingTelemetryModule.cs#L250\r\n            for reference\r\n            */\r\n            source: this.sourceCorrelationId,\r\n            duration: this.duration,\r\n            resultCode: this.statusCode ? this.statusCode.toString() : null,\r\n            success: this._isSuccess(),\r\n            properties: this.properties\r\n        };\r\n        // We should keep any parameters the user passed in\r\n        // Except the fields defined above in requestTelemetry, which take priority\r\n        // Except the properties field, where they're merged instead, with baseTelemetry taking priority\r\n        if (baseTelemetry) {\r\n            // Copy missing fields\r\n            for (var key in baseTelemetry) {\r\n                if (!requestTelemetry[key]) {\r\n                    requestTelemetry[key] = baseTelemetry[key];\r\n                }\r\n            }\r\n            // Merge properties\r\n            if (baseTelemetry.properties) {\r\n                for (var key in baseTelemetry.properties) {\r\n                    requestTelemetry.properties[key] = baseTelemetry.properties[key];\r\n                }\r\n            }\r\n        }\r\n        return requestTelemetry;\r\n    };\r\n    HttpRequestParser.prototype.getRequestTags = function (tags) {\r\n        // create a copy of the context for requests since client info will be used here\r\n        var newTags = {};\r\n        for (var key in tags) {\r\n            newTags[key] = tags[key];\r\n        }\r\n        // don't override tags if they are already set\r\n        newTags[HttpRequestParser.keys.locationIp] = tags[HttpRequestParser.keys.locationIp] || this._getIp();\r\n        newTags[HttpRequestParser.keys.sessionId] = tags[HttpRequestParser.keys.sessionId] || this._getId(\"ai_session\");\r\n        newTags[HttpRequestParser.keys.userId] = tags[HttpRequestParser.keys.userId] || this._getId(\"ai_user\");\r\n        newTags[HttpRequestParser.keys.userAuthUserId] = tags[HttpRequestParser.keys.userAuthUserId] || this._getId(\"ai_authUser\");\r\n        newTags[HttpRequestParser.keys.operationName] = this.getOperationName(tags);\r\n        newTags[HttpRequestParser.keys.operationParentId] = this.getOperationParentId(tags);\r\n        newTags[HttpRequestParser.keys.operationId] = this.getOperationId(tags);\r\n        return newTags;\r\n    };\r\n    HttpRequestParser.prototype.getOperationId = function (tags) {\r\n        return tags[HttpRequestParser.keys.operationId] || this.operationId;\r\n    };\r\n    HttpRequestParser.prototype.getOperationParentId = function (tags) {\r\n        return tags[HttpRequestParser.keys.operationParentId] || this.parentId || this.getOperationId(tags);\r\n    };\r\n    HttpRequestParser.prototype.getOperationName = function (tags) {\r\n        return tags[HttpRequestParser.keys.operationName] || this.method + \" \" + url.parse(this.url).pathname;\r\n    };\r\n    HttpRequestParser.prototype.getRequestId = function () {\r\n        return this.requestId;\r\n    };\r\n    HttpRequestParser.prototype.getCorrelationContextHeader = function () {\r\n        return this.correlationContextHeader;\r\n    };\r\n    HttpRequestParser.prototype._getAbsoluteUrl = function (request) {\r\n        if (!request.headers) {\r\n            return request.url;\r\n        }\r\n        var encrypted = request.connection ? request.connection.encrypted : null;\r\n        var requestUrl = url.parse(request.url);\r\n        var pathName = requestUrl.pathname;\r\n        var search = requestUrl.search;\r\n        var absoluteUrl = url.format({\r\n            protocol: encrypted ? \"https\" : \"http\",\r\n            host: request.headers.host,\r\n            pathname: pathName,\r\n            search: search\r\n        });\r\n        return absoluteUrl;\r\n    };\r\n    HttpRequestParser.prototype._getIp = function () {\r\n        // regex to match ipv4 without port\r\n        // Note: including the port would cause the payload to be rejected by the data collector\r\n        var ipMatch = /[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/;\r\n        var check = function (str) {\r\n            var results = ipMatch.exec(str);\r\n            if (results) {\r\n                return results[0];\r\n            }\r\n        };\r\n        var ip = check(this.rawHeaders[\"x-forwarded-for\"])\r\n            || check(this.rawHeaders[\"x-client-ip\"])\r\n            || check(this.rawHeaders[\"x-real-ip\"])\r\n            || check(this.connectionRemoteAddress)\r\n            || check(this.socketRemoteAddress)\r\n            || check(this.legacySocketRemoteAddress);\r\n        // node v12 returns this if the address is \"localhost\"\r\n        if (!ip\r\n            && this.connectionRemoteAddress\r\n            && this.connectionRemoteAddress.substr\r\n            && this.connectionRemoteAddress.substr(0, 2) === \"::\") {\r\n            ip = \"127.0.0.1\";\r\n        }\r\n        return ip;\r\n    };\r\n    HttpRequestParser.prototype._getId = function (name) {\r\n        var cookie = (this.rawHeaders && this.rawHeaders[\"cookie\"] &&\r\n            typeof this.rawHeaders[\"cookie\"] === 'string' && this.rawHeaders[\"cookie\"]) || \"\";\r\n        var value = HttpRequestParser.parseId(Util.getCookie(name, cookie));\r\n        return value;\r\n    };\r\n    HttpRequestParser.prototype.parseHeaders = function (request, requestId) {\r\n        this.rawHeaders = request.headers || request.rawHeaders;\r\n        this.userAgent = request.headers && request.headers[\"user-agent\"];\r\n        this.sourceCorrelationId = Util.getCorrelationContextTarget(request, RequestResponseHeaders.requestContextSourceKey);\r\n        if (request.headers) {\r\n            this.correlationContextHeader = request.headers[RequestResponseHeaders.correlationContextHeader];\r\n            if (request.headers[RequestResponseHeaders.requestIdHeader]) {\r\n                this.parentId = request.headers[RequestResponseHeaders.requestIdHeader];\r\n                this.requestId = CorrelationIdManager.generateRequestId(this.parentId);\r\n                this.correlationContextHeader = request.headers[RequestResponseHeaders.correlationContextHeader];\r\n            }\r\n            else {\r\n                // Legacy fallback\r\n                var rootId = request.headers[RequestResponseHeaders.rootIdHeader];\r\n                this.parentId = request.headers[RequestResponseHeaders.parentIdHeader];\r\n                this.requestId = CorrelationIdManager.generateRequestId(rootId || this.parentId);\r\n                this.correlationContextHeader = null;\r\n            }\r\n            if (requestId) {\r\n                // For the scenarios that don't guarantee an AI-created context,\r\n                // override the requestId with the provided one.\r\n                this.requestId = requestId;\r\n            }\r\n            this.operationId = CorrelationIdManager.getRootId(this.requestId);\r\n        }\r\n    };\r\n    HttpRequestParser.parseId = function (cookieValue) {\r\n        return cookieValue.substr(0, cookieValue.indexOf('|'));\r\n    };\r\n    HttpRequestParser.keys = new Contracts.ContextTagKeys();\r\n    return HttpRequestParser;\r\n}(RequestParser));\r\nmodule.exports = HttpRequestParser;\r\n//# sourceMappingURL=HttpRequestParser.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar TelemetryClient = require(\"./TelemetryClient\");\r\nvar ServerRequestTracking = require(\"../AutoCollection/HttpRequests\");\r\nvar ClientRequestTracking = require(\"../AutoCollection/HttpDependencies\");\r\nvar Logging = require(\"./Logging\");\r\n/**\r\n * Application Insights Telemetry Client for Node.JS. Provides the Application Insights TelemetryClient API\r\n * in addition to Node-specific helper functions.\r\n * Construct a new TelemetryClient to have an instance with a different configuration than the default client.\r\n * In most cases, `appInsights.defaultClient` should be used instead.\r\n */\r\nvar NodeClient = (function (_super) {\r\n    __extends(NodeClient, _super);\r\n    function NodeClient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Log RequestTelemetry from HTTP request and response. This method will log immediately without waitng for request completion\r\n     * and it requires duration parameter to be specified on NodeHttpRequestTelemetry object.\r\n     * Use trackNodeHttpRequest function to log the telemetry after request completion\r\n     * @param telemetry Object encapsulating incoming request, response and duration information\r\n     */\r\n    NodeClient.prototype.trackNodeHttpRequestSync = function (telemetry) {\r\n        if (telemetry && telemetry.request && telemetry.response && telemetry.duration) {\r\n            ServerRequestTracking.trackRequestSync(this, telemetry);\r\n        }\r\n        else {\r\n            Logging.warn(\"trackNodeHttpRequestSync requires NodeHttpRequestTelemetry object with request, response and duration specified.\");\r\n        }\r\n    };\r\n    /**\r\n     * Log RequestTelemetry from HTTP request and response. This method will `follow` the request to completion.\r\n     * Use trackNodeHttpRequestSync function to log telemetry immediately without waiting for request completion\r\n     * @param telemetry Object encapsulating incoming request and response information\r\n     */\r\n    NodeClient.prototype.trackNodeHttpRequest = function (telemetry) {\r\n        if (telemetry.duration || telemetry.error) {\r\n            Logging.warn(\"trackNodeHttpRequest will ignore supplied duration and error parameters. These values are collected from the request and response objects.\");\r\n        }\r\n        if (telemetry && telemetry.request && telemetry.response) {\r\n            ServerRequestTracking.trackRequest(this, telemetry);\r\n        }\r\n        else {\r\n            Logging.warn(\"trackNodeHttpRequest requires NodeHttpRequestTelemetry object with request and response specified.\");\r\n        }\r\n    };\r\n    /**\r\n     * Log DependencyTelemetry from outgoing HTTP request. This method will instrument the outgoing request and append\r\n     * the specified headers and will log the telemetry when outgoing request is complete\r\n     * @param telemetry Object encapsulating outgoing request information\r\n     */\r\n    NodeClient.prototype.trackNodeHttpDependency = function (telemetry) {\r\n        if (telemetry && telemetry.request) {\r\n            ClientRequestTracking.trackRequest(this, telemetry);\r\n        }\r\n        else {\r\n            Logging.warn(\"trackNodeHttpDependency requires NodeHttpDependencyTelemetry object with request specified.\");\r\n        }\r\n    };\r\n    return NodeClient;\r\n}(TelemetryClient));\r\nmodule.exports = NodeClient;\r\n//# sourceMappingURL=NodeClient.js.map","\"use strict\";\r\nvar url = require(\"url\");\r\nvar Config = require(\"./Config\");\r\nvar Context = require(\"./Context\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Channel = require(\"./Channel\");\r\nvar TelemetryProcessors = require(\"../TelemetryProcessors\");\r\nvar CorrelationContextManager_1 = require(\"../AutoCollection/CorrelationContextManager\");\r\nvar Sender = require(\"./Sender\");\r\nvar Util = require(\"./Util\");\r\nvar Logging = require(\"./Logging\");\r\nvar EnvelopeFactory = require(\"./EnvelopeFactory\");\r\n/**\r\n * Application Insights telemetry client provides interface to track telemetry items, register telemetry initializers and\r\n * and manually trigger immediate sending (flushing)\r\n */\r\nvar TelemetryClient = (function () {\r\n    /**\r\n     * Constructs a new client of the client\r\n     * @param iKey the instrumentation key to use (read from environment variable if not specified)\r\n     */\r\n    function TelemetryClient(iKey) {\r\n        this._telemetryProcessors = [];\r\n        var config = new Config(iKey);\r\n        this.config = config;\r\n        this.context = new Context();\r\n        this.commonProperties = {};\r\n        var sender = new Sender(this.config);\r\n        this.channel = new Channel(function () { return config.disableAppInsights; }, function () { return config.maxBatchSize; }, function () { return config.maxBatchIntervalMs; }, sender);\r\n    }\r\n    /**\r\n     * Log a trace message\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackTrace = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Trace);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used to send regular reports of performance indicators.\r\n     * To send a single measurement, use just the first two parameters. If you take measurements very frequently, you can reduce the\r\n     * telemetry bandwidth by aggregating multiple measurements and sending the resulting average at intervals.\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackMetric = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Metric);\r\n    };\r\n    /**\r\n     * Log an exception\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackException = function (telemetry) {\r\n        if (telemetry && telemetry.exception && !Util.isError(telemetry.exception)) {\r\n            telemetry.exception = new Error(telemetry.exception.toString());\r\n        }\r\n        this.track(telemetry, Contracts.TelemetryType.Exception);\r\n    };\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackEvent = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Event);\r\n    };\r\n    /**\r\n     * Log a request. Note that the default client will attempt to collect HTTP requests automatically so only use this for requests\r\n     * that aren't automatically captured or if you've disabled automatic request collection.\r\n     *\r\n     * @param telemetry      Object encapsulating tracking options\r\n     */\r\n    TelemetryClient.prototype.trackRequest = function (telemetry) {\r\n        this.track(telemetry, Contracts.TelemetryType.Request);\r\n    };\r\n    /**\r\n     * Log a dependency. Note that the default client will attempt to collect dependencies automatically so only use this for dependencies\r\n     * that aren't automatically captured or if you've disabled automatic dependency collection.\r\n     *\r\n     * @param telemetry      Object encapsulating tracking option\r\n     * */\r\n    TelemetryClient.prototype.trackDependency = function (telemetry) {\r\n        if (telemetry && !telemetry.target && telemetry.data) {\r\n            // url.parse().host returns null for non-urls,\r\n            // making this essentially a no-op in those cases\r\n            // If this logic is moved, update jsdoc in DependencyTelemetry.target\r\n            telemetry.target = url.parse(telemetry.data).host;\r\n        }\r\n        this.track(telemetry, Contracts.TelemetryType.Dependency);\r\n    };\r\n    /**\r\n     * Immediately send all queued telemetry.\r\n     * @param options Flush options, including indicator whether app is crashing and callback\r\n     */\r\n    TelemetryClient.prototype.flush = function (options) {\r\n        this.channel.triggerSend(options ? !!options.isAppCrashing : false, options ? options.callback : undefined);\r\n    };\r\n    /**\r\n     * Generic track method for all telemetry types\r\n     * @param data the telemetry to send\r\n     * @param telemetryType specify the type of telemetry you are tracking from the list of Contracts.DataTypes\r\n     */\r\n    TelemetryClient.prototype.track = function (telemetry, telemetryType) {\r\n        if (telemetry && Contracts.telemetryTypeToBaseType(telemetryType)) {\r\n            var envelope = EnvelopeFactory.createEnvelope(telemetry, telemetryType, this.commonProperties, this.context, this.config);\r\n            // Set time on the envelope if it was set on the telemetry item\r\n            if (telemetry.time) {\r\n                envelope.time = telemetry.time.toISOString();\r\n            }\r\n            var accepted = this.runTelemetryProcessors(envelope, telemetry.contextObjects);\r\n            // Ideally we would have a central place for \"internal\" telemetry processors and users can configure which ones are in use.\r\n            // This will do for now. Otherwise clearTelemetryProcessors() would be problematic.\r\n            accepted = accepted && TelemetryProcessors.samplingTelemetryProcessor(envelope, { correlationContext: CorrelationContextManager_1.CorrelationContextManager.getCurrentContext() });\r\n            if (accepted) {\r\n                this.channel.send(envelope);\r\n            }\r\n        }\r\n        else {\r\n            Logging.warn(\"track() requires telemetry object and telemetryType to be specified.\");\r\n        }\r\n    };\r\n    /**\r\n     * Adds telemetry processor to the collection. Telemetry processors will be called one by one\r\n     * before telemetry item is pushed for sending and in the order they were added.\r\n     *\r\n     * @param telemetryProcessor function, takes Envelope, and optional context object and returns boolean\r\n     */\r\n    TelemetryClient.prototype.addTelemetryProcessor = function (telemetryProcessor) {\r\n        this._telemetryProcessors.push(telemetryProcessor);\r\n    };\r\n    /*\r\n     * Removes all telemetry processors\r\n     */\r\n    TelemetryClient.prototype.clearTelemetryProcessors = function () {\r\n        this._telemetryProcessors = [];\r\n    };\r\n    TelemetryClient.prototype.runTelemetryProcessors = function (envelope, contextObjects) {\r\n        var accepted = true;\r\n        var telemetryProcessorsCount = this._telemetryProcessors.length;\r\n        if (telemetryProcessorsCount === 0) {\r\n            return accepted;\r\n        }\r\n        contextObjects = contextObjects || {};\r\n        contextObjects['correlationContext'] = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        for (var i = 0; i < telemetryProcessorsCount; ++i) {\r\n            try {\r\n                var processor = this._telemetryProcessors[i];\r\n                if (processor) {\r\n                    if (processor.apply(null, [envelope, contextObjects]) === false) {\r\n                        accepted = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            catch (error) {\r\n                accepted = true;\r\n                Logging.warn(\"One of telemetry processors failed, telemetry item will be sent.\", error, envelope);\r\n            }\r\n        }\r\n        return accepted;\r\n    };\r\n    return TelemetryClient;\r\n}());\r\nmodule.exports = TelemetryClient;\r\n//# sourceMappingURL=TelemetryClient.js.map","\"use strict\";\r\nvar CorrelationIdManager = require(\"./CorrelationIdManager\");\r\nvar Config = (function () {\r\n    function Config(instrumentationKey) {\r\n        var _this = this;\r\n        this.endpointBase = \"https://dc.services.visualstudio.com\";\r\n        this.instrumentationKey = instrumentationKey || Config._getInstrumentationKey();\r\n        this.endpointUrl = this.endpointBase + \"/v2/track\";\r\n        this.maxBatchSize = 250;\r\n        this.maxBatchIntervalMs = 15000;\r\n        this.disableAppInsights = false;\r\n        this.samplingPercentage = 100;\r\n        this.correlationIdRetryIntervalMs = 30 * 1000;\r\n        this.correlationHeaderExcludedDomains = [\r\n            \"*.core.windows.net\",\r\n            \"*.core.chinacloudapi.cn\",\r\n            \"*.core.cloudapi.de\",\r\n            \"*.core.usgovcloudapi.net\"\r\n        ];\r\n        this.setCorrelationId = function (correlationId) { return _this.correlationId = correlationId; };\r\n        this.profileQueryEndpoint = process.env[Config.ENV_profileQueryEndpoint] || this.endpointBase;\r\n        this.proxyHttpUrl = process.env[Config.ENV_http_proxy] || undefined;\r\n        this.proxyHttpsUrl = process.env[Config.ENV_https_proxy] || undefined;\r\n        this.httpAgent = undefined;\r\n        this.httpsAgent = undefined;\r\n    }\r\n    Object.defineProperty(Config.prototype, \"profileQueryEndpoint\", {\r\n        get: function () {\r\n            return this._profileQueryEndpoint;\r\n        },\r\n        set: function (endpoint) {\r\n            CorrelationIdManager.cancelCorrelationIdQuery(this, this.setCorrelationId);\r\n            this._profileQueryEndpoint = endpoint;\r\n            this.correlationId = CorrelationIdManager.correlationIdPrefix; // Reset the correlationId while we wait for the new query\r\n            CorrelationIdManager.queryCorrelationId(this, this.setCorrelationId);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Config._getInstrumentationKey = function () {\r\n        // check for both the documented env variable and the azure-prefixed variable\r\n        var iKey = process.env[Config.ENV_iKey]\r\n            || process.env[Config.ENV_azurePrefix + Config.ENV_iKey]\r\n            || process.env[Config.legacy_ENV_iKey]\r\n            || process.env[Config.ENV_azurePrefix + Config.legacy_ENV_iKey];\r\n        if (!iKey || iKey == \"\") {\r\n            throw new Error(\"Instrumentation key not found, pass the key in the config to this method or set the key in the environment variable APPINSIGHTS_INSTRUMENTATIONKEY before starting the server\");\r\n        }\r\n        return iKey;\r\n    };\r\n    // Azure adds this prefix to all environment variables\r\n    Config.ENV_azurePrefix = \"APPSETTING_\";\r\n    // This key is provided in the readme\r\n    Config.ENV_iKey = \"APPINSIGHTS_INSTRUMENTATIONKEY\";\r\n    Config.legacy_ENV_iKey = \"APPINSIGHTS_INSTRUMENTATION_KEY\";\r\n    Config.ENV_profileQueryEndpoint = \"APPINSIGHTS_PROFILE_QUERY_ENDPOINT\";\r\n    Config.ENV_http_proxy = \"http_proxy\";\r\n    Config.ENV_https_proxy = \"https_proxy\";\r\n    return Config;\r\n}());\r\nmodule.exports = Config;\r\n//# sourceMappingURL=Config.js.map","\"use strict\";\r\nvar os = require(\"os\");\r\nvar fs = require(\"fs\");\r\nvar path = require(\"path\");\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Logging = require(\"./Logging\");\r\nvar Context = (function () {\r\n    function Context(packageJsonPath) {\r\n        this.keys = new Contracts.ContextTagKeys();\r\n        this.tags = {};\r\n        this._loadApplicationContext();\r\n        this._loadDeviceContext();\r\n        this._loadInternalContext();\r\n    }\r\n    Context.prototype._loadApplicationContext = function (packageJsonPath) {\r\n        // note: this should return the host package.json\r\n        packageJsonPath = packageJsonPath || path.resolve(__dirname, \"../../../../package.json\");\r\n        if (!Context.appVersion[packageJsonPath]) {\r\n            Context.appVersion[packageJsonPath] = \"unknown\";\r\n            try {\r\n                var packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n                if (packageJson && typeof packageJson.version === \"string\") {\r\n                    Context.appVersion[packageJsonPath] = packageJson.version;\r\n                }\r\n            }\r\n            catch (exception) {\r\n                Logging.info(\"unable to read app version: \", exception);\r\n            }\r\n        }\r\n        this.tags[this.keys.applicationVersion] = Context.appVersion[packageJsonPath];\r\n    };\r\n    Context.prototype._loadDeviceContext = function () {\r\n        this.tags[this.keys.deviceId] = \"\";\r\n        this.tags[this.keys.cloudRoleInstance] = os && os.hostname();\r\n        this.tags[this.keys.deviceOSVersion] = os && (os.type() + \" \" + os.release());\r\n        this.tags[this.keys.cloudRole] = Context.DefaultRoleName;\r\n        // not yet supported tags\r\n        this.tags[\"ai.device.osArchitecture\"] = os && os.arch();\r\n        this.tags[\"ai.device.osPlatform\"] = os && os.platform();\r\n    };\r\n    Context.prototype._loadInternalContext = function () {\r\n        // note: this should return the sdk package.json\r\n        var packageJsonPath = path.resolve(__dirname, \"../../package.json\");\r\n        if (!Context.sdkVersion) {\r\n            Context.sdkVersion = \"unknown\";\r\n            try {\r\n                var packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n                if (packageJson && typeof packageJson.version === \"string\") {\r\n                    Context.sdkVersion = packageJson.version;\r\n                }\r\n            }\r\n            catch (exception) {\r\n                Logging.info(\"unable to read app version: \", exception);\r\n            }\r\n        }\r\n        this.tags[this.keys.internalSdkVersion] = \"node:\" + Context.sdkVersion;\r\n    };\r\n    Context.DefaultRoleName = \"Web\";\r\n    Context.appVersion = {};\r\n    Context.sdkVersion = null;\r\n    return Context;\r\n}());\r\nmodule.exports = Context;\r\n//# sourceMappingURL=Context.js.map","\"use strict\";\r\nvar Logging = require(\"./Logging\");\r\nvar Channel = (function () {\r\n    function Channel(isDisabled, getBatchSize, getBatchIntervalMs, sender) {\r\n        this._buffer = [];\r\n        this._lastSend = 0;\r\n        this._isDisabled = isDisabled;\r\n        this._getBatchSize = getBatchSize;\r\n        this._getBatchIntervalMs = getBatchIntervalMs;\r\n        this._sender = sender;\r\n    }\r\n    /**\r\n     * Enable or disable disk-backed retry caching to cache events when client is offline (enabled by default)\r\n     * These cached events are stored in your system or user's temporary directory and access restricted to your user when possible.\r\n     * @param value if true events that occured while client is offline will be cached on disk\r\n     * @param resendInterval The wait interval for resending cached events.\r\n     * @param maxBytesOnDisk The maximum size (in bytes) that the created temporary directory for cache events can grow to, before caching is disabled.\r\n     * @returns {Configuration} this class\r\n     */\r\n    Channel.prototype.setUseDiskRetryCaching = function (value, resendInterval, maxBytesOnDisk) {\r\n        this._sender.setDiskRetryMode(value, resendInterval, maxBytesOnDisk);\r\n    };\r\n    /**\r\n     * Add a telemetry item to the send buffer\r\n     */\r\n    Channel.prototype.send = function (envelope) {\r\n        var _this = this;\r\n        // if master off switch is set, don't send any data\r\n        if (this._isDisabled()) {\r\n            // Do not send/save data\r\n            return;\r\n        }\r\n        // validate input\r\n        if (!envelope) {\r\n            Logging.warn(\"Cannot send null/undefined telemetry\");\r\n            return;\r\n        }\r\n        // check if the incoming payload is too large, truncate if necessary\r\n        var payload = this._stringify(envelope);\r\n        if (typeof payload !== \"string\") {\r\n            return;\r\n        }\r\n        // enqueue the payload\r\n        this._buffer.push(payload);\r\n        // flush if we would exceed the max-size limit by adding this item\r\n        if (this._buffer.length >= this._getBatchSize()) {\r\n            this.triggerSend(false);\r\n            return;\r\n        }\r\n        // ensure an invocation timeout is set if anything is in the buffer\r\n        if (!this._timeoutHandle && this._buffer.length > 0) {\r\n            this._timeoutHandle = setTimeout(function () {\r\n                _this._timeoutHandle = null;\r\n                _this.triggerSend(false);\r\n            }, this._getBatchIntervalMs());\r\n        }\r\n    };\r\n    /**\r\n     * Immediately send buffered data\r\n     */\r\n    Channel.prototype.triggerSend = function (isNodeCrashing, callback) {\r\n        var bufferIsEmpty = this._buffer.length < 1;\r\n        if (!bufferIsEmpty) {\r\n            // compose an array of payloads\r\n            var batch = this._buffer.join(\"\\n\");\r\n            // invoke send\r\n            if (isNodeCrashing) {\r\n                this._sender.saveOnCrash(batch);\r\n                if (typeof callback === \"function\") {\r\n                    callback(\"data saved on crash\");\r\n                }\r\n            }\r\n            else {\r\n                this._sender.send(Buffer.from ? Buffer.from(batch) : new Buffer(batch), callback);\r\n            }\r\n        }\r\n        // update lastSend time to enable throttling\r\n        this._lastSend = +new Date;\r\n        // clear buffer\r\n        this._buffer.length = 0;\r\n        clearTimeout(this._timeoutHandle);\r\n        this._timeoutHandle = null;\r\n        if (bufferIsEmpty && typeof callback === \"function\") {\r\n            callback(\"no data to send\");\r\n        }\r\n    };\r\n    Channel.prototype._stringify = function (envelope) {\r\n        try {\r\n            return JSON.stringify(envelope);\r\n        }\r\n        catch (error) {\r\n            Logging.warn(\"Failed to serialize payload\", error, envelope);\r\n        }\r\n    };\r\n    return Channel;\r\n}());\r\nmodule.exports = Channel;\r\n//# sourceMappingURL=Channel.js.map","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./SamplingTelemetryProcessor\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\n/**\r\n *  A telemetry processor that handles sampling.\r\n */\r\nfunction samplingTelemetryProcessor(envelope, contextObjects) {\r\n    var samplingPercentage = envelope.sampleRate; // Set for us in Client.getEnvelope\r\n    var isSampledIn = false;\r\n    if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n        return true;\r\n    }\r\n    else if (envelope.data && Contracts.TelemetryType.Metric === Contracts.baseTypeToTelemetryType(envelope.data.baseType)) {\r\n        // Exclude MetricData telemetry from sampling\r\n        return true;\r\n    }\r\n    else if (contextObjects.correlationContext && contextObjects.correlationContext.operation) {\r\n        // If we're using dependency correlation, sampling should retain all telemetry from a given request \r\n        isSampledIn = getSamplingHashCode(contextObjects.correlationContext.operation.id) < samplingPercentage;\r\n    }\r\n    else {\r\n        // If we're not using dependency correlation, sampling should use a random distribution on each item\r\n        isSampledIn = (Math.random() * 100) < samplingPercentage;\r\n    }\r\n    return isSampledIn;\r\n}\r\nexports.samplingTelemetryProcessor = samplingTelemetryProcessor;\r\n/** Ported from AI .NET SDK */\r\nfunction getSamplingHashCode(input) {\r\n    var csharpMin = -2147483648;\r\n    var csharpMax = 2147483647;\r\n    var hash = 5381;\r\n    if (!input) {\r\n        return 0;\r\n    }\r\n    while (input.length < 8) {\r\n        input = input + input;\r\n    }\r\n    for (var i = 0; i < input.length; i++) {\r\n        // JS doesn't respond to integer overflow by wrapping around. Simulate it with bitwise operators ( | 0)\r\n        hash = ((((hash << 5) + hash) | 0) + input.charCodeAt(i) | 0);\r\n    }\r\n    hash = hash <= csharpMin ? csharpMax : Math.abs(hash);\r\n    return (hash / csharpMax) * 100;\r\n}\r\nexports.getSamplingHashCode = getSamplingHashCode;\r\n//# sourceMappingURL=SamplingTelemetryProcessor.js.map","\"use strict\";\r\nvar fs = require(\"fs\");\r\nvar os = require(\"os\");\r\nvar path = require(\"path\");\r\nvar zlib = require(\"zlib\");\r\nvar child_process = require(\"child_process\");\r\nvar Logging = require(\"./Logging\");\r\nvar AutoCollectHttpDependencies = require(\"../AutoCollection/HttpDependencies\");\r\nvar Util = require(\"./Util\");\r\nvar Sender = (function () {\r\n    function Sender(config, onSuccess, onError) {\r\n        this._config = config;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n        this._enableDiskRetryMode = false;\r\n        this._resendInterval = Sender.WAIT_BETWEEN_RESEND;\r\n        this._maxBytesOnDisk = Sender.MAX_BYTES_ON_DISK;\r\n        this._numConsecutiveFailures = 0;\r\n        if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n            // Node's chmod levels do not appropriately restrict file access on Windows\r\n            // Use the built-in command line tool ICACLS on Windows to properly restrict\r\n            // access to the temporary directory used for disk retry mode.\r\n            if (Sender.USE_ICACLS) {\r\n                // This should be async - but it's currently safer to have this synchronous\r\n                // This guarantees we can immediately fail setDiskRetryMode if we need to\r\n                try {\r\n                    Sender.OS_PROVIDES_FILE_PROTECTION = fs.existsSync(Sender.ICACLS_PATH);\r\n                }\r\n                catch (e) { }\r\n                if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n                    Logging.warn(Sender.TAG, \"Could not find ICACLS in expected location! This is necessary to use disk retry mode on Windows.\");\r\n                }\r\n            }\r\n            else {\r\n                // chmod works everywhere else\r\n                Sender.OS_PROVIDES_FILE_PROTECTION = true;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n    * Enable or disable offline mode\r\n    */\r\n    Sender.prototype.setDiskRetryMode = function (value, resendInterval, maxBytesOnDisk) {\r\n        this._enableDiskRetryMode = Sender.OS_PROVIDES_FILE_PROTECTION && value;\r\n        if (typeof resendInterval === 'number' && resendInterval >= 0) {\r\n            this._resendInterval = Math.floor(resendInterval);\r\n        }\r\n        if (typeof maxBytesOnDisk === 'number' && maxBytesOnDisk >= 0) {\r\n            this._maxBytesOnDisk = Math.floor(maxBytesOnDisk);\r\n        }\r\n        if (value && !Sender.OS_PROVIDES_FILE_PROTECTION) {\r\n            this._enableDiskRetryMode = false;\r\n            Logging.warn(Sender.TAG, \"Ignoring request to enable disk retry mode. Sufficient file protection capabilities were not detected.\");\r\n        }\r\n    };\r\n    Sender.prototype.send = function (payload, callback) {\r\n        var _this = this;\r\n        var endpointUrl = this._config.endpointUrl;\r\n        // todo: investigate specifying an agent here: https://nodejs.org/api/http.html#http_class_http_agent\r\n        var options = {\r\n            method: \"POST\",\r\n            withCredentials: false,\r\n            headers: {\r\n                \"Content-Type\": \"application/x-json-stream\"\r\n            }\r\n        };\r\n        zlib.gzip(payload, function (err, buffer) {\r\n            var dataToSend = buffer;\r\n            if (err) {\r\n                Logging.warn(err);\r\n                dataToSend = payload; // something went wrong so send without gzip\r\n                options.headers[\"Content-Length\"] = payload.length.toString();\r\n            }\r\n            else {\r\n                options.headers[\"Content-Encoding\"] = \"gzip\";\r\n                options.headers[\"Content-Length\"] = buffer.length;\r\n            }\r\n            Logging.info(Sender.TAG, options);\r\n            // Ensure this request is not captured by auto-collection.\r\n            options[AutoCollectHttpDependencies.disableCollectionRequestOption] = true;\r\n            var requestCallback = function (res) {\r\n                res.setEncoding(\"utf-8\");\r\n                //returns empty if the data is accepted\r\n                var responseString = \"\";\r\n                res.on(\"data\", function (data) {\r\n                    responseString += data;\r\n                });\r\n                res.on(\"end\", function () {\r\n                    _this._numConsecutiveFailures = 0;\r\n                    Logging.info(Sender.TAG, responseString);\r\n                    if (typeof _this._onSuccess === \"function\") {\r\n                        _this._onSuccess(responseString);\r\n                    }\r\n                    if (typeof callback === \"function\") {\r\n                        callback(responseString);\r\n                    }\r\n                    if (_this._enableDiskRetryMode) {\r\n                        // try to send any cached events if the user is back online\r\n                        if (res.statusCode === 200) {\r\n                            setTimeout(function () { return _this._sendFirstFileOnDisk(); }, _this._resendInterval);\r\n                            // store to disk in case of burst throttling\r\n                        }\r\n                        else if (res.statusCode === 408 ||\r\n                            res.statusCode === 429 ||\r\n                            res.statusCode === 439 ||\r\n                            res.statusCode === 500 ||\r\n                            res.statusCode === 503) {\r\n                            // TODO: Do not support partial success (206) until _sendFirstFileOnDisk checks payload age\r\n                            _this._storeToDisk(payload);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            var req = Util.makeRequest(_this._config, endpointUrl, options, requestCallback);\r\n            req.on(\"error\", function (error) {\r\n                // todo: handle error codes better (group to recoverable/non-recoverable and persist)\r\n                _this._numConsecutiveFailures++;\r\n                // Only use warn level if retries are disabled or we've had some number of consecutive failures sending data\r\n                // This is because warn level is printed in the console by default, and we don't want to be noisy for transient and self-recovering errors\r\n                // Continue informing on each failure if verbose logging is being used\r\n                if (!_this._enableDiskRetryMode || _this._numConsecutiveFailures > 0 && _this._numConsecutiveFailures % Sender.MAX_CONNECTION_FAILURES_BEFORE_WARN === 0) {\r\n                    var notice = \"Ingestion endpoint could not be reached. This batch of telemetry items has been lost. Use Disk Retry Caching to enable resending of failed telemetry. Error:\";\r\n                    if (_this._enableDiskRetryMode) {\r\n                        notice = \"Ingestion endpoint could not be reached \" + _this._numConsecutiveFailures + \" consecutive times. There may be resulting telemetry loss. Most recent error:\";\r\n                    }\r\n                    Logging.warn(Sender.TAG, notice, error);\r\n                }\r\n                else {\r\n                    var notice = \"Transient failure to reach ingestion endpoint. This batch of telemetry items will be retried. Error:\";\r\n                    Logging.info(Sender.TAG, notice, error);\r\n                }\r\n                _this._onErrorHelper(error);\r\n                if (typeof callback === \"function\") {\r\n                    var errorMessage = \"error sending telemetry\";\r\n                    if (error && (typeof error.toString === \"function\")) {\r\n                        errorMessage = error.toString();\r\n                    }\r\n                    callback(errorMessage);\r\n                }\r\n                if (_this._enableDiskRetryMode) {\r\n                    _this._storeToDisk(payload);\r\n                }\r\n            });\r\n            req.write(dataToSend);\r\n            req.end();\r\n        });\r\n    };\r\n    Sender.prototype.saveOnCrash = function (payload) {\r\n        if (this._enableDiskRetryMode) {\r\n            this._storeToDiskSync(payload);\r\n        }\r\n    };\r\n    Sender.prototype._runICACLS = function (args, callback) {\r\n        var aclProc = child_process.spawn(Sender.ICACLS_PATH, args, { windowsHide: true });\r\n        aclProc.on(\"error\", function (e) { return callback(e); });\r\n        aclProc.on(\"close\", function (code, signal) {\r\n            return callback(code === 0 ? null : new Error(\"Setting ACL restrictions did not succeed (ICACLS returned code \" + code + \")\"));\r\n        });\r\n    };\r\n    Sender.prototype._runICACLSSync = function (args) {\r\n        // Some very old versions of Node (< 0.11) don't have this\r\n        if (child_process.spawnSync) {\r\n            var aclProc = child_process.spawnSync(Sender.ICACLS_PATH, args, { windowsHide: true });\r\n            if (aclProc.error) {\r\n                throw aclProc.error;\r\n            }\r\n            else if (aclProc.status !== 0) {\r\n                throw new Error(\"Setting ACL restrictions did not succeed (ICACLS returned code \" + aclProc.status + \")\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Could not synchronously call ICACLS under current version of Node.js\");\r\n        }\r\n    };\r\n    Sender.prototype._getACLIdentity = function (callback) {\r\n        if (Sender.ACL_IDENTITY) {\r\n            return callback(null, Sender.ACL_IDENTITY);\r\n        }\r\n        var psProc = child_process.spawn(Sender.POWERSHELL_PATH, [\"-Command\", \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"], {\r\n            windowsHide: true,\r\n            stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\r\n        });\r\n        var data = \"\";\r\n        psProc.stdout.on(\"data\", function (d) { return data += d; });\r\n        psProc.on(\"error\", function (e) { return callback(e, null); });\r\n        psProc.on(\"close\", function (code, signal) {\r\n            Sender.ACL_IDENTITY = data && data.trim();\r\n            return callback(code === 0 ? null : new Error(\"Getting ACL identity did not succeed (PS returned code \" + code + \")\"), Sender.ACL_IDENTITY);\r\n        });\r\n    };\r\n    Sender.prototype._getACLIdentitySync = function () {\r\n        if (Sender.ACL_IDENTITY) {\r\n            return Sender.ACL_IDENTITY;\r\n        }\r\n        // Some very old versions of Node (< 0.11) don't have this\r\n        if (child_process.spawnSync) {\r\n            var psProc = child_process.spawnSync(Sender.POWERSHELL_PATH, [\"-Command\", \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"], {\r\n                windowsHide: true,\r\n                stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\r\n            });\r\n            if (psProc.error) {\r\n                throw psProc.error;\r\n            }\r\n            else if (psProc.status !== 0) {\r\n                throw new Error(\"Getting ACL identity did not succeed (PS returned code \" + psProc.status + \")\");\r\n            }\r\n            Sender.ACL_IDENTITY = psProc.stdout && psProc.stdout.toString().trim();\r\n            return Sender.ACL_IDENTITY;\r\n        }\r\n        else {\r\n            throw new Error(\"Could not synchronously get ACL identity under current version of Node.js\");\r\n        }\r\n    };\r\n    Sender.prototype._getACLArguments = function (directory, identity) {\r\n        return [directory,\r\n            \"/grant\", \"*S-1-5-32-544:(OI)(CI)F\",\r\n            \"/grant\", identity + \":(OI)(CI)F\",\r\n            \"/inheritance:r\"]; // Remove all inherited permissions\r\n    };\r\n    Sender.prototype._applyACLRules = function (directory, callback) {\r\n        var _this = this;\r\n        if (!Sender.USE_ICACLS) {\r\n            return callback(null);\r\n        }\r\n        // For performance, only run ACL rules if we haven't already during this session\r\n        if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\r\n            // Avoid multiple calls race condition by setting ACLED_DIRECTORIES to false for this directory immediately\r\n            // If batches are being failed faster than the processes spawned below return, some data won't be stored to disk\r\n            // This is better than the alternative of potentially infinitely spawned processes\r\n            Sender.ACLED_DIRECTORIES[directory] = false;\r\n            // Restrict this directory to only current user and administrator access\r\n            this._getACLIdentity(function (err, identity) {\r\n                if (err) {\r\n                    Sender.ACLED_DIRECTORIES[directory] = false; // false is used to cache failed (vs undefined which is \"not yet tried\")\r\n                    return callback(err);\r\n                }\r\n                else {\r\n                    _this._runICACLS(_this._getACLArguments(directory, identity), function (err) {\r\n                        Sender.ACLED_DIRECTORIES[directory] = !err;\r\n                        return callback(err);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            return callback(Sender.ACLED_DIRECTORIES[directory] ? null :\r\n                new Error(\"Setting ACL restrictions did not succeed (cached result)\"));\r\n        }\r\n    };\r\n    Sender.prototype._applyACLRulesSync = function (directory) {\r\n        if (Sender.USE_ICACLS) {\r\n            // For performance, only run ACL rules if we haven't already during this session\r\n            if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\r\n                this._runICACLSSync(this._getACLArguments(directory, this._getACLIdentitySync()));\r\n                Sender.ACLED_DIRECTORIES[directory] = true; // If we get here, it succeeded. _runIACLSSync will throw on failures\r\n                return;\r\n            }\r\n            else if (!Sender.ACLED_DIRECTORIES[directory]) {\r\n                throw new Error(\"Setting ACL restrictions did not succeed (cached result)\");\r\n            }\r\n        }\r\n    };\r\n    Sender.prototype._confirmDirExists = function (directory, callback) {\r\n        var _this = this;\r\n        fs.lstat(directory, function (err, stats) {\r\n            if (err && err.code === 'ENOENT') {\r\n                fs.mkdir(directory, function (err) {\r\n                    if (err && err.code !== 'EEXIST') {\r\n                        callback(err);\r\n                    }\r\n                    else {\r\n                        _this._applyACLRules(directory, callback);\r\n                    }\r\n                });\r\n            }\r\n            else if (!err && stats.isDirectory()) {\r\n                _this._applyACLRules(directory, callback);\r\n            }\r\n            else {\r\n                callback(err || new Error(\"Path existed but was not a directory\"));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Computes the size (in bytes) of all files in a directory at the root level. Asynchronously.\r\n     */\r\n    Sender.prototype._getShallowDirectorySize = function (directory, callback) {\r\n        // Get the directory listing\r\n        fs.readdir(directory, function (err, files) {\r\n            if (err) {\r\n                return callback(err, -1);\r\n            }\r\n            var error = null;\r\n            var totalSize = 0;\r\n            var count = 0;\r\n            if (files.length === 0) {\r\n                callback(null, 0);\r\n                return;\r\n            }\r\n            // Query all file sizes\r\n            for (var i = 0; i < files.length; i++) {\r\n                fs.stat(path.join(directory, files[i]), function (err, fileStats) {\r\n                    count++;\r\n                    if (err) {\r\n                        error = err;\r\n                    }\r\n                    else {\r\n                        if (fileStats.isFile()) {\r\n                            totalSize += fileStats.size;\r\n                        }\r\n                    }\r\n                    if (count === files.length) {\r\n                        // Did we get an error?\r\n                        if (error) {\r\n                            callback(error, -1);\r\n                        }\r\n                        else {\r\n                            callback(error, totalSize);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Computes the size (in bytes) of all files in a directory at the root level. Synchronously.\r\n     */\r\n    Sender.prototype._getShallowDirectorySizeSync = function (directory) {\r\n        var files = fs.readdirSync(directory);\r\n        var totalSize = 0;\r\n        for (var i = 0; i < files.length; i++) {\r\n            totalSize += fs.statSync(path.join(directory, files[i])).size;\r\n        }\r\n        return totalSize;\r\n    };\r\n    /**\r\n     * Stores the payload as a json file on disk in the temp directory\r\n     */\r\n    Sender.prototype._storeToDisk = function (payload) {\r\n        var _this = this;\r\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\r\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n        // This will create the dir if it does not exist\r\n        // Default permissions on *nix are directory listing from other users but no file creations\r\n        Logging.info(Sender.TAG, \"Checking existance of data storage directory: \" + directory);\r\n        this._confirmDirExists(directory, function (error) {\r\n            if (error) {\r\n                Logging.warn(Sender.TAG, \"Error while checking/creating directory: \" + (error && error.message));\r\n                _this._onErrorHelper(error);\r\n                return;\r\n            }\r\n            _this._getShallowDirectorySize(directory, function (err, size) {\r\n                if (err || size < 0) {\r\n                    Logging.warn(Sender.TAG, \"Error while checking directory size: \" + (err && err.message));\r\n                    _this._onErrorHelper(err);\r\n                    return;\r\n                }\r\n                else if (size > _this._maxBytesOnDisk) {\r\n                    Logging.warn(Sender.TAG, \"Not saving data due to max size limit being met. Directory size in bytes is: \" + size);\r\n                    return;\r\n                }\r\n                //create file - file name for now is the timestamp, a better approach would be a UUID but that\r\n                //would require an external dependency\r\n                var fileName = new Date().getTime() + \".ai.json\";\r\n                var fileFullPath = path.join(directory, fileName);\r\n                // Mode 600 is w/r for creator and no read access for others (only applies on *nix)\r\n                // For Windows, ACL rules are applied to the entire directory (see logic in _confirmDirExists and _applyACLRules)\r\n                Logging.info(Sender.TAG, \"saving data to disk at: \" + fileFullPath);\r\n                fs.writeFile(fileFullPath, payload, { mode: 384 }, function (error) { return _this._onErrorHelper(error); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stores the payload as a json file on disk using sync file operations\r\n     * this is used when storing data before crashes\r\n     */\r\n    Sender.prototype._storeToDiskSync = function (payload) {\r\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\r\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n        try {\r\n            Logging.info(Sender.TAG, \"Checking existance of data storage directory: \" + directory);\r\n            if (!fs.existsSync(directory)) {\r\n                fs.mkdirSync(directory);\r\n            }\r\n            // Make sure permissions are valid\r\n            this._applyACLRulesSync(directory);\r\n            var dirSize = this._getShallowDirectorySizeSync(directory);\r\n            if (dirSize > this._maxBytesOnDisk) {\r\n                Logging.info(Sender.TAG, \"Not saving data due to max size limit being met. Directory size in bytes is: \" + dirSize);\r\n                return;\r\n            }\r\n            //create file - file name for now is the timestamp, a better approach would be a UUID but that\r\n            //would require an external dependency\r\n            var fileName = new Date().getTime() + \".ai.json\";\r\n            var fileFullPath = path.join(directory, fileName);\r\n            // Mode 600 is w/r for creator and no access for anyone else (only applies on *nix)\r\n            Logging.info(Sender.TAG, \"saving data before crash to disk at: \" + fileFullPath);\r\n            fs.writeFileSync(fileFullPath, payload, { mode: 384 });\r\n        }\r\n        catch (error) {\r\n            Logging.warn(Sender.TAG, \"Error while saving data to disk: \" + (error && error.message));\r\n            this._onErrorHelper(error);\r\n        }\r\n    };\r\n    /**\r\n     * Check for temp telemetry files\r\n     * reads the first file if exist, deletes it and tries to send its load\r\n     */\r\n    Sender.prototype._sendFirstFileOnDisk = function () {\r\n        var _this = this;\r\n        var tempDir = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\r\n        fs.exists(tempDir, function (exists) {\r\n            if (exists) {\r\n                fs.readdir(tempDir, function (error, files) {\r\n                    if (!error) {\r\n                        files = files.filter(function (f) { return path.basename(f).indexOf(\".ai.json\") > -1; });\r\n                        if (files.length > 0) {\r\n                            var firstFile = files[0];\r\n                            var filePath = path.join(tempDir, firstFile);\r\n                            fs.readFile(filePath, function (error, payload) {\r\n                                if (!error) {\r\n                                    // delete the file first to prevent double sending\r\n                                    fs.unlink(filePath, function (error) {\r\n                                        if (!error) {\r\n                                            _this.send(payload);\r\n                                        }\r\n                                        else {\r\n                                            _this._onErrorHelper(error);\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    _this._onErrorHelper(error);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this._onErrorHelper(error);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n    Sender.prototype._onErrorHelper = function (error) {\r\n        if (typeof this._onError === \"function\") {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    Sender.TAG = \"Sender\";\r\n    Sender.ICACLS_PATH = process.env.systemdrive + \"/windows/system32/icacls.exe\";\r\n    Sender.POWERSHELL_PATH = process.env.systemdrive + \"/windows/system32/windowspowershell/v1.0/powershell.exe\";\r\n    Sender.ACLED_DIRECTORIES = {};\r\n    Sender.ACL_IDENTITY = null;\r\n    // the amount of time the SDK will wait between resending cached data, this buffer is to avoid any throtelling from the service side\r\n    Sender.WAIT_BETWEEN_RESEND = 60 * 1000;\r\n    Sender.MAX_BYTES_ON_DISK = 50 * 1000 * 1000;\r\n    Sender.MAX_CONNECTION_FAILURES_BEFORE_WARN = 5;\r\n    Sender.TEMPDIR_PREFIX = \"appInsights-node\";\r\n    Sender.OS_PROVIDES_FILE_PROTECTION = false;\r\n    Sender.USE_ICACLS = os.type() === \"Windows_NT\";\r\n    return Sender;\r\n}());\r\nmodule.exports = Sender;\r\n//# sourceMappingURL=Sender.js.map","module.exports = require(\"zlib\");","\"use strict\";\r\nvar Contracts = require(\"../Declarations/Contracts\");\r\nvar Util = require(\"./Util\");\r\nvar CorrelationContextManager_1 = require(\"../AutoCollection/CorrelationContextManager\");\r\n/**\r\n * Manages the logic of creating envelopes from Telemetry objects\r\n */\r\nvar EnvelopeFactory = (function () {\r\n    function EnvelopeFactory() {\r\n    }\r\n    /**\r\n     * Creates envelope ready to be sent by Channel\r\n     * @param telemetry Telemetry data\r\n     * @param telemetryType Type of telemetry\r\n     * @param commonProperties Bag of custom common properties to be added to the envelope\r\n     * @param context Client context\r\n     * @param config Client configuration\r\n     */\r\n    EnvelopeFactory.createEnvelope = function (telemetry, telemetryType, commonProperties, context, config) {\r\n        var data = null;\r\n        switch (telemetryType) {\r\n            case Contracts.TelemetryType.Trace:\r\n                data = EnvelopeFactory.createTraceData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Dependency:\r\n                data = EnvelopeFactory.createDependencyData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Event:\r\n                data = EnvelopeFactory.createEventData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Exception:\r\n                data = EnvelopeFactory.createExceptionData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Request:\r\n                data = EnvelopeFactory.createRequestData(telemetry);\r\n                break;\r\n            case Contracts.TelemetryType.Metric:\r\n                data = EnvelopeFactory.createMetricData(telemetry);\r\n                break;\r\n        }\r\n        if (commonProperties && Contracts.domainSupportsProperties(data.baseData)) {\r\n            if (data && data.baseData) {\r\n                // if no properties are specified just add the common ones\r\n                if (!data.baseData.properties) {\r\n                    data.baseData.properties = commonProperties;\r\n                }\r\n                else {\r\n                    // otherwise, check each of the common ones\r\n                    for (var name in commonProperties) {\r\n                        // only override if the property `name` has not been set on this item\r\n                        if (!data.baseData.properties[name]) {\r\n                            data.baseData.properties[name] = commonProperties[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // sanitize properties\r\n            data.baseData.properties = Util.validateStringMap(data.baseData.properties);\r\n        }\r\n        var iKey = config ? config.instrumentationKey || \"\" : \"\";\r\n        var envelope = new Contracts.Envelope();\r\n        envelope.data = data;\r\n        envelope.iKey = iKey;\r\n        // this is kind of a hack, but the envelope name is always the same as the data name sans the chars \"data\"\r\n        envelope.name =\r\n            \"Microsoft.ApplicationInsights.\" +\r\n                iKey.replace(/-/g, \"\") +\r\n                \".\" +\r\n                data.baseType.substr(0, data.baseType.length - 4);\r\n        envelope.tags = this.getTags(context, telemetry.tagOverrides);\r\n        envelope.time = (new Date()).toISOString();\r\n        envelope.ver = 1;\r\n        envelope.sampleRate = config ? config.samplingPercentage : 100;\r\n        // Exclude metrics from sampling by default\r\n        if (telemetryType === Contracts.TelemetryType.Metric) {\r\n            envelope.sampleRate = 100;\r\n        }\r\n        return envelope;\r\n    };\r\n    EnvelopeFactory.createTraceData = function (telemetry) {\r\n        var trace = new Contracts.MessageData();\r\n        trace.message = telemetry.message;\r\n        trace.properties = telemetry.properties;\r\n        if (!isNaN(telemetry.severity)) {\r\n            trace.severityLevel = telemetry.severity;\r\n        }\r\n        else {\r\n            trace.severityLevel = Contracts.SeverityLevel.Information;\r\n        }\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Trace);\r\n        data.baseData = trace;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createDependencyData = function (telemetry) {\r\n        var remoteDependency = new Contracts.RemoteDependencyData();\r\n        remoteDependency.name = telemetry.name;\r\n        remoteDependency.data = telemetry.data;\r\n        remoteDependency.target = telemetry.target;\r\n        remoteDependency.duration = Util.msToTimeSpan(telemetry.duration);\r\n        remoteDependency.success = telemetry.success;\r\n        remoteDependency.type = telemetry.dependencyTypeName;\r\n        remoteDependency.properties = telemetry.properties;\r\n        remoteDependency.resultCode = (telemetry.resultCode ? telemetry.resultCode + '' : '');\r\n        if (telemetry.id) {\r\n            remoteDependency.id = telemetry.id;\r\n        }\r\n        else {\r\n            remoteDependency.id = Util.w3cTraceId();\r\n        }\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Dependency);\r\n        data.baseData = remoteDependency;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createEventData = function (telemetry) {\r\n        var event = new Contracts.EventData();\r\n        event.name = telemetry.name;\r\n        event.properties = telemetry.properties;\r\n        event.measurements = telemetry.measurements;\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Event);\r\n        data.baseData = event;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createExceptionData = function (telemetry) {\r\n        var exception = new Contracts.ExceptionData();\r\n        exception.properties = telemetry.properties;\r\n        exception.severityLevel = Contracts.SeverityLevel.Error;\r\n        exception.measurements = telemetry.measurements;\r\n        exception.exceptions = [];\r\n        var stack = telemetry.exception[\"stack\"];\r\n        var exceptionDetails = new Contracts.ExceptionDetails();\r\n        exceptionDetails.message = telemetry.exception.message;\r\n        exceptionDetails.typeName = telemetry.exception.name;\r\n        exceptionDetails.parsedStack = this.parseStack(stack);\r\n        exceptionDetails.hasFullStack = Util.isArray(exceptionDetails.parsedStack) && exceptionDetails.parsedStack.length > 0;\r\n        exception.exceptions.push(exceptionDetails);\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Exception);\r\n        data.baseData = exception;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createRequestData = function (telemetry) {\r\n        var requestData = new Contracts.RequestData();\r\n        if (telemetry.id) {\r\n            requestData.id = telemetry.id;\r\n        }\r\n        else {\r\n            requestData.id = Util.w3cTraceId();\r\n        }\r\n        requestData.name = telemetry.name;\r\n        requestData.url = telemetry.url;\r\n        requestData.source = telemetry.source;\r\n        requestData.duration = Util.msToTimeSpan(telemetry.duration);\r\n        requestData.responseCode = (telemetry.resultCode ? telemetry.resultCode + '' : '');\r\n        requestData.success = telemetry.success;\r\n        requestData.properties = telemetry.properties;\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Request);\r\n        data.baseData = requestData;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.createMetricData = function (telemetry) {\r\n        var metrics = new Contracts.MetricData(); // todo: enable client-batching of these\r\n        metrics.metrics = [];\r\n        var metric = new Contracts.DataPoint();\r\n        metric.count = !isNaN(telemetry.count) ? telemetry.count : 1;\r\n        metric.kind = Contracts.DataPointType.Aggregation;\r\n        metric.max = !isNaN(telemetry.max) ? telemetry.max : telemetry.value;\r\n        metric.min = !isNaN(telemetry.min) ? telemetry.min : telemetry.value;\r\n        metric.name = telemetry.name;\r\n        metric.stdDev = !isNaN(telemetry.stdDev) ? telemetry.stdDev : 0;\r\n        metric.value = telemetry.value;\r\n        metrics.metrics.push(metric);\r\n        metrics.properties = telemetry.properties;\r\n        var data = new Contracts.Data();\r\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Metric);\r\n        data.baseData = metrics;\r\n        return data;\r\n    };\r\n    EnvelopeFactory.getTags = function (context, tagOverrides) {\r\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\r\n        // Make a copy of context tags so we don't alter the actual object\r\n        // Also perform tag overriding\r\n        var newTags = {};\r\n        if (context && context.tags) {\r\n            for (var key in context.tags) {\r\n                newTags[key] = context.tags[key];\r\n            }\r\n        }\r\n        if (tagOverrides) {\r\n            for (var key in tagOverrides) {\r\n                newTags[key] = tagOverrides[key];\r\n            }\r\n        }\r\n        // Fill in internally-populated values if not already set\r\n        if (correlationContext) {\r\n            newTags[context.keys.operationId] = newTags[context.keys.operationId] || correlationContext.operation.id;\r\n            newTags[context.keys.operationName] = newTags[context.keys.operationName] || correlationContext.operation.name;\r\n            newTags[context.keys.operationParentId] = newTags[context.keys.operationParentId] || correlationContext.operation.parentId;\r\n        }\r\n        return newTags;\r\n    };\r\n    EnvelopeFactory.parseStack = function (stack) {\r\n        var parsedStack = undefined;\r\n        if (typeof stack === \"string\") {\r\n            var frames = stack.split(\"\\n\");\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames.length; i++) {\r\n                var frame = frames[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return EnvelopeFactory;\r\n}());\r\nvar _StackFrame = (function () {\r\n    function _StackFrame(frame, level) {\r\n        this.sizeInBytes = 0;\r\n        this.level = level;\r\n        this.method = \"<no_method>\";\r\n        this.assembly = Util.trim(frame);\r\n        var matches = frame.match(_StackFrame.regex);\r\n        if (matches && matches.length >= 5) {\r\n            this.method = Util.trim(matches[2]) || this.method;\r\n            this.fileName = Util.trim(matches[4]) || \"<no_filename>\";\r\n            this.line = parseInt(matches[5]) || 0;\r\n        }\r\n        this.sizeInBytes += this.method.length;\r\n        this.sizeInBytes += this.fileName.length;\r\n        this.sizeInBytes += this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        this.sizeInBytes += _StackFrame.baseSize;\r\n        this.sizeInBytes += this.level.toString().length;\r\n        this.sizeInBytes += this.line.toString().length;\r\n    }\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nmodule.exports = EnvelopeFactory;\r\n//# sourceMappingURL=EnvelopeFactory.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport { workspace, WorkspaceFolder, extensions } from 'vscode';\n\ninterface ExperimentalConfig {\n\tcustomData?: string[];\n\texperimental?: {\n\t\tcustomData?: string[];\n\t};\n}\n\nexport function getCustomDataPathsInAllWorkspaces(workspaceFolders: readonly WorkspaceFolder[] | undefined): string[] {\n\tconst dataPaths: string[] = [];\n\n\tif (!workspaceFolders) {\n\t\treturn dataPaths;\n\t}\n\n\tworkspaceFolders.forEach(wf => {\n\t\tconst allHtmlConfig = workspace.getConfiguration(undefined, wf.uri);\n\t\tconst wfHtmlConfig = allHtmlConfig.inspect<ExperimentalConfig>('html');\n\n\t\tif (wfHtmlConfig && wfHtmlConfig.workspaceFolderValue && wfHtmlConfig.workspaceFolderValue.customData) {\n\t\t\tconst customData = wfHtmlConfig.workspaceFolderValue.customData;\n\t\t\tif (Array.isArray(customData)) {\n\t\t\t\tcustomData.forEach(t => {\n\t\t\t\t\tif (typeof t === 'string') {\n\t\t\t\t\t\tdataPaths.push(path.resolve(wf.uri.fsPath, t));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\treturn dataPaths;\n}\n\nexport function getCustomDataPathsFromAllExtensions(): string[] {\n\tconst dataPaths: string[] = [];\n\n\tfor (const extension of extensions.all) {\n\t\tconst contributes = extension.packageJSON && extension.packageJSON.contributes;\n\n\t\tif (contributes && contributes.html && contributes.html.customData && Array.isArray(contributes.html.customData)) {\n\t\t\tconst relativePaths: string[] = contributes.html.customData;\n\t\t\trelativePaths.forEach(rp => {\n\t\t\t\tdataPaths.push(path.resolve(extension.extensionPath, rp));\n\t\t\t});\n\t\t}\n\t}\n\n\treturn dataPaths;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\twindow,\n\tworkspace,\n\tDisposable,\n\tTextDocument,\n\tPosition,\n\tTextEditorSelectionChangeEvent,\n\tSelection,\n\tRange,\n\tWorkspaceEdit\n} from 'vscode';\n\nexport function activateMirrorCursor(\n\tmatchingTagPositionProvider: (document: TextDocument, position: Position) => Thenable<Position | null>,\n\tsupportedLanguages: { [id: string]: boolean },\n\tconfigName: string\n): Disposable {\n\tlet disposables: Disposable[] = [];\n\n\twindow.onDidChangeTextEditorSelection(event => onDidChangeTextEditorSelection(event), null, disposables);\n\n\tlet isEnabled = false;\n\tupdateEnabledState();\n\n\twindow.onDidChangeActiveTextEditor(updateEnabledState, null, disposables);\n\n\tfunction updateEnabledState() {\n\t\tisEnabled = false;\n\t\tlet editor = window.activeTextEditor;\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\tlet document = editor.document;\n\t\tif (!supportedLanguages[document.languageId]) {\n\t\t\treturn;\n\t\t}\n\t\tif (!workspace.getConfiguration(undefined, document.uri).get<boolean>(configName)) {\n\t\t\treturn;\n\t\t}\n\t\tisEnabled = true;\n\t}\n\n\tlet prevCursors: readonly Selection[] = [];\n\tlet cursors: readonly Selection[] = [];\n\tlet inMirrorMode = false;\n\n\tfunction onDidChangeTextEditorSelection(event: TextEditorSelectionChangeEvent) {\n\t\tif (!isEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.textEditor.document?.languageId !== 'html' && event.textEditor.document?.languageId !== 'handlebars') {\n\t\t\treturn;\n\t\t}\n\n\t\tprevCursors = cursors;\n\t\tcursors = event.selections;\n\n\t\tif (cursors.length === 1) {\n\t\t\tif (inMirrorMode && prevCursors.length === 2) {\n\t\t\t\tif (cursors[0].isEqual(prevCursors[0]) || cursors[0].isEqual(prevCursors[1])) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.selections[0].isEmpty) {\n\t\t\t\tmatchingTagPositionProvider(event.textEditor.document, event.selections[0].active).then(matchingTagPosition => {\n\t\t\t\t\tif (matchingTagPosition && window.activeTextEditor) {\n\t\t\t\t\t\tconst charBeforeAndAfterPositionsRoughlyEqual = isCharBeforeAndAfterPositionsRoughlyEqual(\n\t\t\t\t\t\t\tevent.textEditor.document,\n\t\t\t\t\t\t\tevent.selections[0].anchor,\n\t\t\t\t\t\t\tnew Position(matchingTagPosition.line, matchingTagPosition.character)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (charBeforeAndAfterPositionsRoughlyEqual) {\n\t\t\t\t\t\t\tinMirrorMode = true;\n\t\t\t\t\t\t\tconst newCursor = new Selection(\n\t\t\t\t\t\t\t\tmatchingTagPosition.line,\n\t\t\t\t\t\t\t\tmatchingTagPosition.character,\n\t\t\t\t\t\t\t\tmatchingTagPosition.line,\n\t\t\t\t\t\t\t\tmatchingTagPosition.character\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\twindow.activeTextEditor.selections = [...window.activeTextEditor.selections, newCursor];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst exitMirrorMode = () => {\n\t\t\tinMirrorMode = false;\n\t\t\twindow.activeTextEditor!.selections = [window.activeTextEditor!.selections[0]];\n\t\t};\n\n\t\tif (cursors.length === 2 && inMirrorMode) {\n\t\t\t/**\n\t\t\t * Both cursors are positions\n\t\t\t */\n\t\t\tif (event.selections[0].isEmpty && event.selections[1].isEmpty) {\n\t\t\t\tif (\n\t\t\t\t\tprevCursors.length === 2 &&\n\t\t\t\t\tevent.selections[0].anchor.line !== prevCursors[0].anchor.line &&\n\t\t\t\t\tevent.selections[1].anchor.line !== prevCursors[0].anchor.line\n\t\t\t\t) {\n\t\t\t\t\texitMirrorMode();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst charBeforeAndAfterPositionsRoughlyEqual = isCharBeforeAndAfterPositionsRoughlyEqual(\n\t\t\t\t\tevent.textEditor.document,\n\t\t\t\t\tevent.selections[0].anchor,\n\t\t\t\t\tevent.selections[1].anchor\n\t\t\t\t);\n\n\t\t\t\tif (!charBeforeAndAfterPositionsRoughlyEqual) {\n\t\t\t\t\texitMirrorMode();\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// Need to cleanup in the case of <div |></div |>\n\t\t\t\t\tif (\n\t\t\t\t\t\tshouldDoCleanupForHtmlAttributeInput(\n\t\t\t\t\t\t\tevent.textEditor.document,\n\t\t\t\t\t\t\tevent.selections[0].anchor,\n\t\t\t\t\t\t\tevent.selections[1].anchor\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst cleanupEdit = new WorkspaceEdit();\n\t\t\t\t\t\tconst cleanupRange = new Range(event.selections[1].anchor.translate(0, -1), event.selections[1].anchor);\n\t\t\t\t\t\tcleanupEdit.replace(event.textEditor.document.uri, cleanupRange, '');\n\t\t\t\t\t\texitMirrorMode();\n\t\t\t\t\t\tworkspace.applyEdit(cleanupEdit);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Both cursors are selections\n\t\t\t\t */\n\t\t\t\tconst charBeforeAndAfterAnchorPositionsRoughlyEqual = isCharBeforeAndAfterPositionsRoughlyEqual(\n\t\t\t\t\tevent.textEditor.document,\n\t\t\t\t\tevent.selections[0].anchor,\n\t\t\t\t\tevent.selections[1].anchor\n\t\t\t\t);\n\n\t\t\t\tconst charBeforeAndAfterActivePositionsRoughlyEqual = isCharBeforeAndAfterPositionsRoughlyEqual(\n\t\t\t\t\tevent.textEditor.document,\n\t\t\t\t\tevent.selections[0].active,\n\t\t\t\t\tevent.selections[1].active\n\t\t\t\t);\n\n\t\t\t\tif (!charBeforeAndAfterAnchorPositionsRoughlyEqual || !charBeforeAndAfterActivePositionsRoughlyEqual) {\n\t\t\t\t\texitMirrorMode();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn Disposable.from(...disposables);\n}\n\nfunction getCharBefore(document: TextDocument, position: Position) {\n\tconst offset = document.offsetAt(position);\n\tif (offset === 0) {\n\t\treturn '';\n\t}\n\n\treturn document.getText(new Range(document.positionAt(offset - 1), position));\n}\n\nfunction getCharAfter(document: TextDocument, position: Position) {\n\tconst offset = document.offsetAt(position);\n\tif (offset === document.getText().length) {\n\t\treturn '';\n\t}\n\n\treturn document.getText(new Range(position, document.positionAt(offset + 1)));\n}\n\n// Check if chars before and after the two positions are equal\n// For the chars before, `<` and `/` are considered equal to handle the case of `<|></|>`\nfunction isCharBeforeAndAfterPositionsRoughlyEqual(document: TextDocument, firstPos: Position, secondPos: Position) {\n\tconst charBeforePrimarySelection = getCharBefore(document, firstPos);\n\tconst charAfterPrimarySelection = getCharAfter(document, firstPos);\n\tconst charBeforeSecondarySelection = getCharBefore(document, secondPos);\n\tconst charAfterSecondarySelection = getCharAfter(document, secondPos);\n\n\t/**\n\t * Special case for exiting\n\t * |<div>\n\t * |</div>\n\t */\n\tif (\n\t\tcharBeforePrimarySelection === ' ' &&\n\t\tcharBeforeSecondarySelection === ' ' &&\n\t\tcharAfterPrimarySelection === '<' &&\n\t\tcharAfterSecondarySelection === '<'\n\t) {\n\t\treturn false;\n\t}\n\t/**\n\t * Special case for exiting\n\t * |  <div>\n\t * |  </div>\n\t */\n\tif (charBeforePrimarySelection === '\\n' && charBeforeSecondarySelection === '\\n') {\n\t\treturn false;\n\t}\n\t/**\n\t * Special case for exiting\n\t * <div>|\n\t * </div>|\n\t */\n\tif (charAfterPrimarySelection === '\\n' && charAfterSecondarySelection === '\\n') {\n\t\treturn false;\n\t}\n\n\t// Exit mirror mode when cursor position no longer mirror\n\t// Unless it's in the case of `<|></|>`\n\tconst charBeforeBothPositionRoughlyEqual =\n\t\tcharBeforePrimarySelection === charBeforeSecondarySelection ||\n\t\t(charBeforePrimarySelection === '/' && charBeforeSecondarySelection === '<') ||\n\t\t(charBeforeSecondarySelection === '/' && charBeforePrimarySelection === '<');\n\tconst charAfterBothPositionRoughlyEqual =\n\t\tcharAfterPrimarySelection === charAfterSecondarySelection ||\n\t\t(charAfterPrimarySelection === ' ' && charAfterSecondarySelection === '>') ||\n\t\t(charAfterSecondarySelection === ' ' && charAfterPrimarySelection === '>');\n\n\treturn charBeforeBothPositionRoughlyEqual && charAfterBothPositionRoughlyEqual;\n}\n\nfunction shouldDoCleanupForHtmlAttributeInput(document: TextDocument, firstPos: Position, secondPos: Position) {\n\t// Need to cleanup in the case of <div |></div |>\n\tconst charBeforePrimarySelection = getCharBefore(document, firstPos);\n\tconst charAfterPrimarySelection = getCharAfter(document, firstPos);\n\tconst charBeforeSecondarySelection = getCharBefore(document, secondPos);\n\tconst charAfterSecondarySelection = getCharAfter(document, secondPos);\n\n\tconst primaryBeforeSecondary = document.offsetAt(firstPos) < document.offsetAt(secondPos);\n\n\t/**\n\t * Check two cases\n\t * <div |></div >\n\t * <div | id=\"a\"></div >\n\t * Before 1st cursor: ` `\n\t * After  1st cursor: `>` or ` `\n\t * Before 2nd cursor: ` `\n\t * After  2nd cursor: `>`\n\t */\n\treturn (\n\t\tprimaryBeforeSecondary &&\n\t\tcharBeforePrimarySelection === ' ' &&\n\t\t(charAfterPrimarySelection === '>' || charAfterPrimarySelection === ' ') &&\n\t\tcharBeforeSecondarySelection === ' ' &&\n\t\tcharAfterSecondarySelection === '>'\n\t);\n}\n"],"sourceRoot":""}