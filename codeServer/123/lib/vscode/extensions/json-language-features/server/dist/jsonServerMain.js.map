{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/vscode-languageserver-protocol/lib/messages.js","webpack:///./node_modules/vscode-nls/lib/main.js","webpack:///./node_modules/vscode-jsonrpc/lib/main.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/main.js","webpack:///external \"url\"","webpack:///./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack:///./node_modules/vscode-jsonrpc/lib/is.js","webpack:///external \"util\"","webpack:///./node_modules/vscode-uri/lib/esm/index.js","webpack:///./node_modules/vscode-jsonrpc/lib/events.js","webpack:///external \"path\"","webpack:///external \"net\"","webpack:///./node_modules/vscode-jsonrpc/lib/messageReader.js","webpack:///./node_modules/vscode-jsonrpc/lib/messageWriter.js","webpack:///external \"fs\"","webpack:///external \"https\"","webpack:///./node_modules/vscode-languageserver/lib/main.js","webpack:///external \"os\"","webpack:///./node_modules/vscode-languageserver/lib/utils/is.js","webpack:///./node_modules/vscode-languageserver/lib/utils/uuid.js","webpack:///external \"tls\"","webpack:///./node_modules/es6-promisify/dist/promisify.js","webpack:///external \"events\"","webpack:///./node_modules/debug/src/index.js","webpack:///./node_modules/debug/src/debug.js","webpack:///../src/repo/lib/vscode/extensions/json-language-features/server/src/jsonServerMain.ts","webpack:///./node_modules/vscode-jsonrpc/lib/messages.js","webpack:///./node_modules/vscode-jsonrpc/lib/cancellation.js","webpack:///./node_modules/vscode-jsonrpc/lib/linkedMap.js","webpack:///./node_modules/vscode-jsonrpc/lib/pipeSupport.js","webpack:///external \"crypto\"","webpack:///./node_modules/vscode-jsonrpc/lib/socketSupport.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/utils/is.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.selectionRange.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.progress.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.callHierarchy.proposed.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/protocol.sematicTokens.proposed.js","webpack:///./node_modules/vscode-languageserver/lib/configuration.js","webpack:///./node_modules/vscode-languageserver/lib/workspaceFolders.js","webpack:///./node_modules/vscode-languageserver/lib/progress.js","webpack:///./node_modules/vscode-languageserver/lib/files.js","webpack:///external \"child_process\"","webpack:///./node_modules/vscode-languageserver/lib/callHierarchy.proposed.js","webpack:///./node_modules/vscode-languageserver/lib/sematicTokens.proposed.js","webpack:///./node_modules/request-light/lib/main.js","webpack:///external \"http\"","webpack:///./node_modules/http-proxy-agent/index.js","webpack:///./node_modules/agent-base/index.js","webpack:///./node_modules/agent-base/patch-core.js","webpack:///./node_modules/es6-promisify/dist/promise.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/debug/src/node.js","webpack:///external \"tty\"","webpack:////repo/lib/vscode/node_modules/supports-color/index.js","webpack:////repo/lib/vscode/node_modules/has-flag/index.js","webpack:///./node_modules/https-proxy-agent/index.js","webpack:///external \"assert\"","webpack:///./node_modules/https-proxy-agent/node_modules/agent-base/index.js","webpack:///./node_modules/https-proxy-agent/node_modules/agent-base/patch-core.js","webpack:///external \"zlib\"","webpack:///external \"timers\"","webpack:///../src/repo/lib/vscode/extensions/json-language-features/server/src/utils/runner.ts","webpack:///../src/repo/lib/vscode/extensions/json-language-features/server/src/languageModelCache.ts","webpack:///./node_modules/jsonc-parser/lib/esm/impl/scanner.js","webpack:///./node_modules/jsonc-parser/lib/esm/impl/format.js","webpack:///./node_modules/jsonc-parser/lib/esm/impl/parser.js","webpack:///./node_modules/jsonc-parser/lib/esm/main.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/utils/objects.js","webpack:///./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/jsonLanguageTypes.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/parser/jsonParser.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/utils/strings.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/jsonCompletion.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/utils/json.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/jsonHover.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/jsonSchemaService.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/jsonValidation.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/utils/colors.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/jsonDocumentSymbols.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/configuration.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/jsonFolding.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/services/jsonSelectionRanges.js","webpack:///./node_modules/vscode-json-languageservice/lib/esm/jsonLanguageService.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vscode_jsonrpc_1","ProtocolRequestType0","RequestType0","[object Object]","method","super","ProtocolRequestType","RequestType","ProtocolNotificationType","NotificationType","ProtocolNotificationType0","NotificationType0","MessageFormat","BundleFormat","LocalizeInfo","resolvedBundles","options","isPseudo","path","fs","toString","isDefined","isString","readJsonFileSync","filename","JSON","parse","readFileSync","format","message","args","replace","length","match","rest","index","arg","replacement","String","createScopedLocalizeFunction","messages","_i","arguments","isNumber","console","error","Error","stack","warn","localize","cacheBundle","bundle","loadNlsBundleOrCreateFromI18n","header","bundlePath","result","join","cacheRoot","id","hash","useMemoryOnly","writeBundle","encoding","flag","file","Date","utimes","touch","err","code","SyntaxError","log","unlink","metaDataPath","languagePackLocation","translationsConfig","languagePack","contents","metaData","module_2","entry","translations","outDir","resultMessages","keys","messageKey","translatedMessage","undefined","push","createNLSBundle","writeFileSync","stringify","loadDefaultNlsBundle","folder","module_1","createDefaultNlsBundle","loadNlsBundle","languagePackSupport","languagePackId","translationsConfigFile","candidate","root","language","existsSync","lastIndexOf","substring","findInTheBoxBundle","loadMessageBundle","ext","extname","substr","messageFormat","both","headerFile","dirname","parent","tryFindMetaDataHeaderFile","nlsBundle","module_3","json","resolvedLanguage","cacheLanguageResolution","locale","resolveLanguage","Array","isArray","is","comment","process","env","VSCODE_NLS_CONFIG","vscodeOptions","availableLanguages","toLowerCase","isBoolean","_languagePackSupport","_cacheRoot","_languagePackId","_translationsConfigFile","_corruptedFile","writeFile","_a","initializeSettings","config","opts","bundleFormat","standalone","__export","Is","messages_1","RequestType1","RequestType2","RequestType3","RequestType4","RequestType5","RequestType6","RequestType7","RequestType8","RequestType9","ResponseError","ErrorCodes","NotificationType1","NotificationType2","NotificationType3","NotificationType4","NotificationType5","NotificationType6","NotificationType7","NotificationType8","NotificationType9","messageReader_1","MessageReader","StreamMessageReader","IPCMessageReader","SocketMessageReader","messageWriter_1","MessageWriter","StreamMessageWriter","IPCMessageWriter","SocketMessageWriter","events_1","Disposable","Event","Emitter","cancellation_1","CancellationTokenSource","CancellationToken","linkedMap_1","CancelNotification","ProgressNotification","Trace","TraceFormat","SetTraceNotification","LogTraceNotification","ConnectionErrors","ConnectionState","type","ProgressType","NullLogger","freeze","info","fromString","string","Off","Messages","Verbose","Text","ConnectionError","this","setPrototypeOf","_createMessageConnection","messageReader","messageWriter","logger","strategy","sequenceNumber","notificationSquenceNumber","unknownResponseSquenceNumber","version","timer","tracer","starRequestHandler","requestHandlers","starNotificationHandler","notificationHandlers","progressHandlers","Map","messageQueue","LinkedMap","responsePromises","requestTokens","trace","traceFormat","state","New","errorEmitter","closeEmitter","unhandledNotificationEmitter","unhandledProgressEmitter","disposeEmitter","createRequestQueueKey","addMessageToQueue","queue","isRequestMessage","set","isResponseMessage","createResponseQueueKey","cancelUndispatched","_message","isListening","Listening","isClosed","Closed","isDisposed","Disposed","closeHandler","fire","triggerMessageQueue","size","setImmediate","shift","requestMessage","reply","resultOrError","startTime","jsonrpc","toJson","traceSendingResponse","write","replyError","data","params","logLSPMessage","traceReceivedRequest","requestHandler","element","handler","now","cancellationSource","tokenKey","handlerResult","promise","numberOfParams","token","array","then","InternalError","replySuccess","MethodNotFound","handleRequest","isNotificationMessage","notificationHandler","source","cancel","traceReceivedNotification","handleNotification","responseMessage","responsePromise","timerStart","traceReceivedResponse","reject","resolve","handleResponse","number","responseHandler","handleInvalidMessage","processMessageQueue","onClose","onError","callback","toCancel","response","delete","lspMessage","isLSPMessage","timestamp","throwIfClosedOrDisposed","undefinedToNull","param","computeMessageParams","connection","sendNotification","messageParams","notificationMessage","traceSendingNotification","onNotification","func","onProgress","_type","has","dispose","sendProgress","onUnhandledProgress","event","sendRequest","throwIfNotListening","last","slice","map","Promise","traceSendingRequest","e","MessageWriteError","onCancellationRequested","onRequest","_value","_tracer","sendNotificationOrTraceOptions","_sendNotification","_traceFormat","boolean","onUnhandledNotification","onDispose","forEach","listen","AlreadyListening","throwIfListening","inspect","verbose","ConnectionStrategy","createMessageConnection","input","output","read","isMessageReader","end","isMessageWriter","createClientPipeTransport","createServerPipeTransport","generateRandomPipeName","createClientSocketTransport","createServerSocketTransport","callHierarchy","st","Proposed","CallHierarchyPrepareRequest","CallHierarchyIncomingCallsRequest","CallHierarchyOutgoingCallsRequest","SemanticTokensRequest","SemanticTokensEditsRequest","SemanticTokensRangeRequest","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","createProtocolConnection","reader","writer","require","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","__webpack_exports__","TextDocument","line","character","objectLiteral","one","two","three","four","start","uri","range","defined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","label","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","location","Warning","Information","Hint","Unnecessary","Deprecated","severity","relatedInformation","title","command","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","DocumentSymbol","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","TextEditChangeImpl","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","textEditChange","configurable","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","languageId","text","PlainText","Markdown","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","documentation","parameters","Read","Write","Namespace","Package","Number","Boolean","Key","Null","containerName","detail","selectionRange","children","deprecated","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","diagnostics","only","commandOrEdit","isPreferred","tabSize","insertSpaces","target","EOL","content","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","right","leftIdx","rightIdx","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","check","stringArray","elem","URI","isWindows","__extends","extendStatics","__proto__","__","constructor","platform","navigator","userAgent","indexOf","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","schemeOrData","authority","query","fragment","_strict","scheme","_schemeFix","_referenceResolution","test","_validateUri","isUri","thing","fsPath","with","_makeFsPath","_URI","exec","decodeURIComponent","idx","from","components","skipEncoding","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","_super","apply","res","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","charCodeAt","encodeURIComponent","escaped","encodeURIComponentMinimal","encoder","userinfo","fromCharCode","_disposable","None","CallbackList","context","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","callbacks","contexts","_options","_event","listener","thisArgs","disposables","onFirstListenerAdd","isEmpty","_noop","onLastListenerRemove","invoke","DefaultSize","CR","Buffer","LF","CRLF","MessageBuffer","buffer","allocUnsafe","chunk","toAppend","str","bufferLen","byteLength","copy","newSize","ceil","concat","current","split","trim","nextStart","numberOfBytes","onPartialMessage","AbstractMessageReader","partialMessageEmitter","asError","readable","_partialMessageTimeout","partialMessageTimeout","timeout","nextMessageLength","messageToken","partialMessageTimer","on","onData","fireError","fireClose","append","headers","tryReadHeaders","contentLength","parseInt","isNaN","msg","tryReadContent","setPartialMessageTimer","clearPartialMessageTimer","clearTimeout","setTimeout","firePartialMessage","waitingTime","eventEmitter","socket","ContentLength","AbstractMessageWriter","count","writable","errorCount","sending","doWriteMessage","send","destroy","handleError","vscode_languageserver_protocol_1","configuration_1","workspaceFolders_1","progress_1","UUID","fm","Files","uriToFilePath","resolveGlobalNodePath","resolveGlobalYarnPath","resolveModulePath","shutdownReceived","exitTimer","null2Undefined","runTimer","processId","setInterval","kill","ex","exit","argv","setupExitTimer","TextDocuments","configuration","_documents","_configuration","_onDidChangeContent","_onDidOpen","_onDidClose","_onDidSave","_onWillSave","onDidChangeContent","onDidOpen","onWillSave","_willSaveWaitUntil","onDidSave","onDidClose","__textDocumentSync","TextDocumentSyncKind","Full","onDidOpenTextDocument","td","toFire","onDidChangeTextDocument","contentChanges","onDidCloseTextDocument","onWillSaveTextDocument","reason","onWillSaveTextDocumentWaitUntil","onDidSaveTextDocument","ErrorMessageTracker","_messages","window","showErrorMessage","RemoteConsoleImpl","_rawConnection","_connection","_capabilities","MessageType","Info","Log","LogMessageNotification","RemoteWindowImpl","ProgressFeature","actions","ShowMessageRequest","BulkRegistration","BulkRegistrationImpl","_registrations","_registered","Set","registerOptions","generateUuid","registrations","BulkUnregistration","BulkUnregistrationImpl","unregistrations","_unregistrations","unregistration","isAttached","values","unregisterations","UnregistrationRequest","_error","RemoteClientImpl","typeOrRegistrations","registerOptionsOrType","registerMany","registerSingle1","registerSingle2","attach","RegistrationRequest","_result","unregisterSingle","asRegistrationParams","registration","RemoteWorkspaceImpl","WorkspaceFoldersFeature","ConfigurationFeature","paramOrEdit","isApplyWorkspaceEditParams","ApplyWorkspaceEditRequest","TelemetryImpl","TelemetryEventNotification","TracerImpl","_trace","LanguagesImpl","attachWorkDone","attachPartialResult","combineConsoleFeatures","Base","combineTelemetryFeatures","combineTracerFeatures","combineClientFeatures","combineWindowFeatures","combineWorkspaceFeatures","combineLanguagesFeatures","combineFeatures","combine","__brand","telemetry","client","workspace","createConnection","arg1","arg2","arg3","arg4","factories","port","pipeName","stdin","stdout","transport","commandLineMessage","inputStream","rawAttach","remoteWindow","languages","allRemotes","shutdownHandler","initializeHandler","exitHandler","protocolConnection","onInitialize","onInitialized","InitializedNotification","onShutdown","onExit","onDidChangeConfiguration","DidChangeConfigurationNotification","onDidChangeWatchedFiles","DidChangeWatchedFilesNotification","DidOpenTextDocumentNotification","DidChangeTextDocumentNotification","DidCloseTextDocumentNotification","WillSaveTextDocumentNotification","WillSaveTextDocumentWaitUntilRequest","DidSaveTextDocumentNotification","sendDiagnostics","PublishDiagnosticsNotification","onHover","HoverRequest","onCompletion","CompletionRequest","onCompletionResolve","CompletionResolveRequest","onSignatureHelp","SignatureHelpRequest","onDeclaration","DeclarationRequest","onDefinition","DefinitionRequest","onTypeDefinition","TypeDefinitionRequest","onImplementation","ImplementationRequest","onReferences","ReferencesRequest","onDocumentHighlight","DocumentHighlightRequest","onDocumentSymbol","DocumentSymbolRequest","onWorkspaceSymbol","WorkspaceSymbolRequest","onCodeAction","CodeActionRequest","onCodeLens","CodeLensRequest","onCodeLensResolve","CodeLensResolveRequest","onDocumentFormatting","DocumentFormattingRequest","onDocumentRangeFormatting","DocumentRangeFormattingRequest","onDocumentOnTypeFormatting","DocumentOnTypeFormattingRequest","onRenameRequest","RenameRequest","onPrepareRename","PrepareRenameRequest","onDocumentLinks","DocumentLinkRequest","onDocumentLinkResolve","DocumentLinkResolveRequest","onDocumentColor","DocumentColorRequest","onColorPresentation","ColorPresentationRequest","onFoldingRanges","FoldingRangeRequest","onSelectionRanges","SelectionRangeRequest","onExecuteCommand","ExecuteCommandRequest","remote","InitializeRequest","initialize","capabilities","thenable","resolved","asPromise","textDocumentSync","fillServerCapabilities","ShutdownRequest","ExitNotification","_createConnection","callHierarchy_proposed_1","ProposedFeatures","CallHierarchyFeature","SemanticTokensFeature","SemanticTokensBuilder","ValueUUID","other","asHex","V4UUID","_randomHex","_oneOf","_timeHighBits","random","_chars","v4","empty","_UUIDPattern","isUUID","ES6Promise","original","settings","_len","_key","returnMultipleArguments","multiArgs","thisArg","_len2","_key2","catch","thatLooksLikeAPromiseToMe","createDebug","namespace","prevTime","debug","enabled","self","curr","ms","prev","coerce","unshift","formatter","formatters","val","formatArgs","useColors","colors","abs","selectColor","init","instances","disable","enable","namespaces","save","names","skips","RegExp","instance","humanize","vscode_languageserver_1","request_light_1","vscode_uri_1","URL","path_1","timers_1","runner_1","vscode_json_languageservice_1","languageModelCache_1","SchemaAssociationNotification","VSCodeContentRequest","SchemaContentChangeNotification","ResultLimitReachedNotification","ForceValidateRequest","formatError","workspaceContext","resolveRelativePath","relativePath","resource","fileRequestService","readFile","httpRequestService","xhr","url","followRedirects","Accept-Encoding","responseText","getErrorStatusDescription","status","languageService","getLanguageService","contributions","clientCapabilities","ClientCapabilities","LATEST","documents","clientSnippetSupport","dynamicFormatterRegistration","hierarchicalDocumentSymbolSupport","foldingRangeLimitDefault","MAX_VALUE","foldingRangeLimit","resultLimit","formatterMaxNumberOfEdits","LimitExceededWarnings","handledProtocols","initializationOptions","handledSchemaProtocols","getClientCapability","def","schemaRequestService","handledSchemas","builtInHandlers","protocol","builtInHandler","getSchemaRequestService","_b","provideFormatter","_e","_d","_c","customCapabilities","rangeFormatting","editLimit","Incremental","completionProvider","resolveProvider","triggerCharacters","hoverProvider","documentSymbolProvider","documentRangeFormattingProvider","colorProvider","foldingRangeProvider","selectionRangeProvider","pendingWarnings","warning","onResultLimitExceeded","features","refresh","posix","basename","jsonConfigurationSettings","schemaAssociations","formatterRegistration","updateConfiguration","languageSettings","validate","allowComments","schemas","pattern","association","fileMatch","schema","configure","triggerValidation","http","proxy","proxyStrictSSL","trunc","register","documentSelector","associations","resetSchema","validateTextDocument","cleanPendingValidation","pendingValidationRequests","validationDelayMs","request","respond","jsonDocument","getJSONDocument","documentSettings","comments","trailingCommas","doValidation","currDocument","hasChanges","jsonDocuments","getLanguageModelCache","parseJSONDocument","onDocumentRemoved","textDocumentPosition","runSafeAsync","async","doComplete","completionItem","doResolve","textDocumentPositionParams","doHover","documentSymbolParams","runSafe","findDocumentSymbols2","findDocumentSymbols","formatParams","findDocumentColors","getColorPresentations","onRangeLimitExceeded","getFoldingRanges","rangeLimit","getSelectionRanges","positions","ParseError","InvalidRequest","InvalidParams","serverErrorStart","serverErrorEnd","ServerNotInitialized","UnknownErrorCode","RequestCancelled","ContentModified","MessageReadError","AbstractMessageType","_method","_numberOfParams","_","isCancellationRequested","Cancelled","shortcutEvent","handle","MutableToken","_isCancelled","_emitter","_token","Touch","First","Last","_map","_head","_tail","_size","item","next","previous","addItemLast","addItemFirst","removeItem","callbackfn","os_1","crypto_1","net_1","randomSuffix","randomBytes","tmpdir","connectResolve","connected","_reject","server","createServer","close","removeListener","onConnected","protocol_implementation_1","protocol_typeDefinition_1","protocol_workspaceFolders_1","WorkspaceFoldersRequest","DidChangeWorkspaceFoldersNotification","protocol_configuration_1","ConfigurationRequest","protocol_colorProvider_1","protocol_foldingRange_1","protocol_declaration_1","protocol_selectionRange_1","protocol_progress_1","DocumentFilter","DocumentSelector","WorkDoneProgress","WorkDoneProgressCreateRequest","WorkDoneProgressCancelNotification","ResourceOperationKind","Create","Rename","Delete","FailureHandlingKind","Abort","Transactional","TextOnlyTransactional","Undo","StaticRegistrationOptions","hasId","TextDocumentRegistrationOptions","WorkDoneProgressOptions","workDoneProgress","hasWorkDoneProgress","InitializeError","unknownProtocolVersion","ShowMessageNotification","TextDocumentSaveReason","Manual","AfterDelay","FocusOut","FileChangeType","Created","Changed","Deleted","WatchKind","Change","CompletionTriggerKind","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","resultType","SignatureHelpTriggerKind","ContentChange","resultId","_getConfiguration","section","workspaceCapabilities","workspaceFolders","_onDidChangeWorkspaceFolders","onDidChangeWorkspaceFolders","_unregistration","uuid_1","WorkDoneProgressImpl","Instances","_source","percentage","cancellable","arg0","NullProgress","ResultProgress","workDoneToken","_progressSupported","progress","ResultProgressImpl","partialResultToken","__filename","child_process_1","moduleName","nodePath","cwd","app","newEnv","delimiter","cp","fork","execArgv","pid","npmCommand","shell","spawnSync","prefix","FileSystem","parsed","segments","first","second","normalize","yarnCommand","results","stderr","lines","yarn","_isCaseSensitive","isCaseSensitive","toUpperCase","isParent","child","workspaceRoot","isAbsolute","onPrepare","attachWorkDoneProgress","onIncomingCalls","attachPartialResultProgress","onOutgoingCalls","semanticTokens","onEdits","onRange","_prevData","_id","_prevLine","_prevChar","_data","_dataLen","char","tokenType","tokenModifiers","pushLine","pushChar","prevDataLength","dataLength","startIndex","endIndex","newData","deleteCount","build","url_1","https","HttpProxyAgent","HttpsProxyAgent","zlib","nls","proxyUrl","strictSSL","assign","destination","sources","_proxyUrl","_strictSSL","agent","rawRequestURL","requestURL","proxyURL","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","host","hostname","auth","rejectUnauthorized","getProxyAgent","req","endpoint","user","password","statusCode","isCompleted","gunzip","createGunzip","pipe","inflate","createInflate","responseType","net","tls","Agent","inherits","secureProxy","pathname","fn","absolute","setHeader","connect","_header","_implicitHeader","endOfHeaders","promisify","EventEmitter","_opts","addRequest","ownOpts","secureEndpoint","_defaultAgent","defaultPort","_last","shouldKeepAlive","timedOut","timeoutMs","onerror","_hadError","emit","callbackError","onSocket","cb","globalObject","global","P","x","isFunction","factory","vertxNext","customSchedulerFn","asap","flush","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","onFulfillment","onRejection","_arguments","noop","PROMISE_ID","makePromise","_state","invokeCallback","subscribe","resolve$1","nextTick","iterations","observer","node","createTextNode","observe","characterData","useMutationObserver","channel","port1","onmessage","port2","postMessage","useMessageChannel","vertx","runOnLoop","runOnContext","attemptVertx","PENDING","FULFILLED","REJECTED","GET_THEN_ERROR","ErrorObject","getThen","handleMaybeThenable","maybeThenable","then$$1","fulfill","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","TypeError","objectOrFunction","publishRejection","_onerror","publish","_subscribers","subscribers","settled","TRY_CATCH_ERROR","hasCallback","succeeded","failed","tryCatch","Enumerator$1","_instanceConstructor","_remaining","_enumerate","Promise$2","resolver","needsResolver","initializePromise","needsNew","_eachEntry","resolve$$1","_then","_settledAt","_willSettleAt","enumerator","entries","race","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","polyfill","local","promiseToString","cast","load","storage","DEBUG","lastC","documentElement","style","WebkitAppearance","firebug","exception","table","$1","chrome","localStorage","localstorage","j","v","h","y","plural","parseFloat","long","fmtLong","round","fmtShort","tty","util","inspectOpts","colorCode","hideDate","toISOString","isatty","fd","supportsColor","level","filter","reduce","obj","prop","k","O","os","hasFlag","forceColor","getSupportLevel","stream","hasBasic","has256","has16m","translateLevel","isTTY","osRelease","release","versions","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","FORCE_COLOR","startsWith","terminatorPos","assert","ALPNProtocols","resume","buffers","buffersLength","buffered","firstLine","sock","servername","cleanup","once","Socket","onsocket","ondata","onend","onclose","listenerCount","secure","isDefaultPort","_promisifiedCallback","freeSocket","isAgent","patchMarker","_url","cancelValue","errorVal","errorMessage","maxEntries","cleanupIntervalTimeInSec","languageModels","nModels","cleanupInterval","cutoffTime","uris","cTime","languageModelInfo","languageModel","oldestTime","oldestUri","clearInterval","createScanner","ignoreTrivia","tokenOffset","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","exact","digits","scanNext","isWhiteSpace","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","format_format","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","isEOL","nChars","computeIndentLevel","indentValue","eol","getEOL","lineBreak","indentLevel","repeat","scanner","hasError","newLineAndIndent","editOperations","addEdit","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","ParseOptions","visit","visitor","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","disallowComments","allowTrailingComma","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","main_createScanner","main_parse","errors","currentProperty","currentParent","previousParents","onValue","pop","main_findNodeAtOffset","findNodeAtOffset","includeRightBound","contains","main_getNodePath","getNodePath","main_getNodeValue","getNodeValue","valueNode","equals","oneKeys","sort","otherKeys","ErrorCode","jsonLanguageTypes_ClientCapabilities","changes_1","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","rangeLength","isAtLineStart","textOffset","getWellformedEdit","spans","sortedEdits_1","completion","documentationFormat","main","commitCharactersSupport","EnumMatch","lib_main","formats","color-hex","date-time","date","time","email","ASTNodeImpl","NullASTNodeImpl","BooleanASTNodeImpl","boolValue","ArrayASTNodeImpl","NumberASTNodeImpl","isInteger","NaN","StringASTNodeImpl","PropertyASTNodeImpl","keyNode","colonOffset","ObjectASTNodeImpl","properties","asSchema","not","SchemaCollector","focusOffset","exclude","merge","include","jsonParser_contains","newSub","NoOpSchemaCollector","jsonParser_ValidationResult","ValidationResult","problems","propertiesMatches","propertiesValueMatches","primaryValueMatches","enumValueMatch","enumValues","hasProblems","mergeAll","validationResults","validationResults_1","validationResult","mergeEnumValues","EnumValueMismatch","mergePropertyMatch","propertyValidationResult","jsonParser_getNodeValue","jsonParser_getNodePath","jsonParser_JSONDocument","JSONDocument","syntaxErrors","getNodeFromOffset","doVisit_1","ctn","getMatchingSchemas","matchingSchemas","seenKeys","unprocessedProperties","propertyNode","required","propertyName","propertyProcessed","propertySchema","patternProperties","_f","_g","propertyPattern","regex","_h","_j","additionalProperties","_k","unprocessedProperties_1","_l","unprocessedProperties_2","maxProperties","minProperties","dependencies","_m","_o","propertyDep","_p","propertyDep_1","requiredProp","propertyNames","_q","_r","f","_validateObjectNode","subSchemas","subSchemaRef","subSchema","itemValidationResult","additionalItems","itemSchema","containsSchema","doesContain","minItems","maxItems","uniqueItems","values_1","duplicates","_validateArrayNode","minLength","maxLength","patternErrorMessage","_validateStringNode","multipleOf","getExclusiveLimit","limit","exclusive","getLimit","exclusiveMinimum","minimum","exclusiveMaximum","maximum","_validateNumberNode","matchesType","allOf","notSchema","subValidationResult","subMatchingSchemas","inverted","testAlternatives","alternatives","maxOneMatch","matches","bestMatch","alternatives_1","compareResult","anyOf","oneOf","testBranch","ifSchema","if","thenSchema","elseSchema","testCondition","else","enum","const","deprecationMessage","_validateNode","jsonParser_parse","lastProblemOffset","commentRanges","collectComments","_scanNext","token_1","_checkScanError","_errorAtRange","_finalize","token_2","InvalidUnicode","InvalidEscapeCharacter","UnexpectedEndOfNumber","UnexpectedEndOfComment","UnexpectedEndOfString","InvalidCharacter","keyPlaceholder","_parseProperty","keysSeen","_parseString","Undefined","seen","DuplicateKey","ColonExpected","_parseValue","ValueExpected","commaOffset","TrailingComma","CommaExpected","CommaOrCloseBacketExpected","_parseArray","PropertyExpected","CommaOrCloseBraceExpected","_parseObject","tokenValue","numberValue","_parseNumber","_parseLiteral","_root","endsWith","haystack","needle","convertSimple2RegExpPattern","jsonCompletion_localize","jsonCompletion_JSONCompletion","JSONCompletion","schemaService","promiseConstructor","resolveCompletion","doc","isInComment","overwriteRange","currentWord","getCurrentWord","overwriteStart","proposed","collector","suggestion","existing","shortendedLabel","insertText","setAsIncomplete","getNumberOfProposals","getSchemaForResource","collectionPromises","addValue","currentKey","separatorAfter_1","evaluateSeparatorAfter","getPropertyCompletions","getSchemaLessPropertyCompletions","location_1","contribution","collectPromise","collectPropertyCompletions","getLabelForValue","getInsertTextForProperty","insertTextFormat","types","getValueCompletions","getSchemaLessValueCompletions","getContributedValueCompletions","offsetForSeparator","separatorAfter","addFillerValueCompletions","schemaProperties_1","doNotSuggest","proposal","filterText","getFilterTextForValue","fromMarkup","markdownDescription","description","collectCompletionsForSimilarObject","getInsertTextForValue","parentKey_1","getSuggestionKind","collectSuggestionsForValues","getLabelTextForMatchingNode","getInsertTextForMatchingNode","addBooleanValueCompletion","parentKey_2","addDollarSchemaCompletions","parentKey_3","parentKey","valueNode_1","matchingSchemas_1","findItemAtOffset","addSchemaValueCompletions","addNullValueCompletion","parentKey_4","location_2","collectValueCompletions","collectDefaultCompletions","addEnumValueCompletions","addDefaultValueCompletions","collectTypes","arrayDepth","hasProposals","default","examples","example","defaultSnippets","body","getInsertTextForSnippetValue","getFilterTextForSnippetValue","getLabelForSnippetValue","bodyText","suffix","indent","enm","markdownEnumDescriptions","doesSupportMarkdown","enumDescriptions","getInsertTextForGuessedValue","getRegisteredSchemaIds","schemaId","getInsertTextForPlainText","stringifyObject","stringifyLiteral","newIndent","snippetValue","propertyText","resultText","nValueProposals","markupString","supportsMarkdown","doesSupportsCommitCharacters","supportsCommitCharacters","jsonHover_JSONHover","JSONHover","hoverRangeNode","hoverRange","createHover","getInfoContribution","htmlContent","title_1","markdownDescription_1","markdownEnumValueDescription_1","enumValue_1","toMarkdown","toMarkdownCodeBlock","plain","jsonSchemaService_localize","jsonSchemaService_FilePatternAssociation","FilePatternAssociation","patternRegExps","isInclude","pattern_1","matchesPattern","fileName","getURIs","SchemaHandle","service","unresolvedSchemaContent","unresolvedSchema","UnresolvedSchema","getUnresolvedSchema","loadSchema","getResolvedSchema","resolvedSchema","unresolved","resolveSchemaContent","clearSchema","jsonSchemaService_ResolvedSchema","ResolvedSchema","getSection","schemaRef","getSectionRecursive","jsonSchemaService_JSONSchemaService","JSONSchemaService","requestService","contextService","callOnDispose","contributionSchemas","contributionAssociations","schemasById","filePatternAssociations","registeredSchemasIds","esm","onResourceChange","toWalk","normalizeId","setSchemaContributions","schemaContributions","normalizedId","addSchemaHandle","schemaAssociations_1","schemaAssociation","addFilePatternAssociation","schemaHandle","getOrAddSchemaHandle","fpa","registerExternalSchema","filePatterns","cachedSchemaForResource","clearExternalSchemas","contributionAssociation","toDisplayString","schemaContent","jsonErrors","errorSplit","schemaToResolve","schemaURL","resolveErrors","$schema","sourceRoot","sourceURI","refSegment","part","findSection","resolveExternalLink","parentSchemaURL","parentSchemaDependencies","referencedHandle","loc","resolveRefs","parentSchema","openPromises","handleRef","seenRefs","$ref","ref","entries_1","collectEntries","maps","maps_1","collectMapEntries","definitions","arrays","arrays_1","array_1","collectArrayEntries","schemaProperties","schemeId","createCombinedSchema","schemaIds","combinedSchemaId","combinedSchema","jsonValidation_localize","jsonValidation_JSONValidation","JSONValidation","jsonSchemaService","validationEnabled","raw","commentSeverity","added","addProblem","problem","signature","getDiagnostics","trailingCommaSeverity","toDiagnosticSeverity","astRoot","SchemaResolveError","semanticErrors","schemaAllowsComments","allow","schemaAllowsTrailingCommas","allowTrailingCommas","deprSchemaRef","message_1","CommentNotPermitted","idCounter","severityLevel","Digit0","Digit9","A","colors_f","hexDigit","charCode","colorFromHex","jsonDocumentSymbols_JSONDocumentSymbols","JSONDocumentSymbols","resourceString","result_1","getRange","toVisit","nextToVisit","limitExceeded","collectOutlineEntries","childContainerName","getKeyLabel","getSymbolKind","result_2","symbol","nodeType","visitedNode","nodeId","red256","green256","blue256","toTwoDigitHex","configuration_localize","http://json-schema.org/schema#","http://json-schema.org/draft-04/schema#","schemaArray","positiveInteger","positiveIntegerDefault0","simpleTypes","http://json-schema.org/draft-07/schema#","nonNegativeInteger","nonNegativeIntegerDefault0","$id","$comment","readOnly","contentMediaType","contentEncoding","descriptions","schemaName","configuration_schema","configuration_property","propertyObject","ranges","nestingLevels","prevStart","addRange","Comment","Region","counts","nestingLevels_1","maxLevel","newRange","getOffsetAfterNextToken","expectedToken","cStart","cEnd","afterCommaOffset","jsonCompletion","jsonHover","jsonDocumentSymbols","jsonValidation","newJSONDocument","findColorSymbols","main_format"],"mappings":"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","file":"jsonServerMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType0 = ProtocolRequestType0;\r\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType = ProtocolRequestType;\r\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType = ProtocolNotificationType;\r\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar fs = require(\"fs\");\r\nvar toString = Object.prototype.toString;\r\nfunction isDefined(value) {\r\n    return typeof value !== 'undefined';\r\n}\r\nfunction isNumber(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nfunction isString(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nfunction isBoolean(value) {\r\n    return value === true || value === false;\r\n}\r\nfunction readJsonFileSync(filename) {\r\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\r\n}\r\nvar MessageFormat;\r\n(function (MessageFormat) {\r\n    MessageFormat[\"file\"] = \"file\";\r\n    MessageFormat[\"bundle\"] = \"bundle\";\r\n    MessageFormat[\"both\"] = \"both\";\r\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\r\nvar BundleFormat;\r\n(function (BundleFormat) {\r\n    // the nls.bundle format\r\n    BundleFormat[\"standalone\"] = \"standalone\";\r\n    BundleFormat[\"languagePack\"] = \"languagePack\";\r\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\r\nvar LocalizeInfo;\r\n(function (LocalizeInfo) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\r\n    }\r\n    LocalizeInfo.is = is;\r\n})(LocalizeInfo || (LocalizeInfo = {}));\r\nvar resolvedLanguage;\r\nvar resolvedBundles;\r\nvar options;\r\nvar isPseudo;\r\nfunction initializeSettings() {\r\n    options = { locale: undefined, language: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\r\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\r\n        try {\r\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\r\n            var language = void 0;\r\n            var locale = void 0;\r\n            if (vscodeOptions.availableLanguages) {\r\n                var value = vscodeOptions.availableLanguages['*'];\r\n                if (isString(value)) {\r\n                    language = value;\r\n                }\r\n            }\r\n            if (isString(vscodeOptions.locale)) {\r\n                options.locale = vscodeOptions.locale.toLowerCase();\r\n            }\r\n            if (language === undefined) {\r\n                options.language = options.locale;\r\n            }\r\n            else if (language !== 'en') {\r\n                options.language = language;\r\n            }\r\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\r\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\r\n            }\r\n            if (isString(vscodeOptions._cacheRoot)) {\r\n                options.cacheRoot = vscodeOptions._cacheRoot;\r\n            }\r\n            if (isString(vscodeOptions._languagePackId)) {\r\n                options.languagePackId = vscodeOptions._languagePackId;\r\n            }\r\n            if (isString(vscodeOptions._translationsConfigFile)) {\r\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\r\n                try {\r\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\r\n                }\r\n                catch (error) {\r\n                    // We can't read the translation config file. Mark the cache as corrupted.\r\n                    if (vscodeOptions._corruptedFile) {\r\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\r\n                            console.error(err);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing.\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    resolvedLanguage = undefined;\r\n    resolvedBundles = Object.create(null);\r\n}\r\ninitializeSettings();\r\nfunction supportsLanguagePack() {\r\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\r\n        && options.translationsConfig !== undefined;\r\n}\r\nfunction format(message, args) {\r\n    var result;\r\n    if (isPseudo) {\r\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\r\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\r\n    }\r\n    if (args.length === 0) {\r\n        result = message;\r\n    }\r\n    else {\r\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\r\n            var index = rest[0];\r\n            var arg = args[index];\r\n            var replacement = match;\r\n            if (typeof arg === 'string') {\r\n                replacement = arg;\r\n            }\r\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\r\n                replacement = String(arg);\r\n            }\r\n            return replacement;\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction createScopedLocalizeFunction(messages) {\r\n    return function (key, message) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (isNumber(key)) {\r\n            if (key >= messages.length) {\r\n                console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \" + new Error('').stack);\r\n                return;\r\n            }\r\n            return format(messages[key], args);\r\n        }\r\n        else {\r\n            if (isString(message)) {\r\n                console.warn(\"Message \" + message + \" didn't get externalized correctly.\");\r\n                return format(message, args);\r\n            }\r\n            else {\r\n                console.error(\"Broken localize call found. Stacktrace is\\n: \" + new Error('').stack);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction localize(key, message) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return format(message, args);\r\n}\r\nfunction resolveLanguage(file) {\r\n    var resolvedLanguage;\r\n    if (options.cacheLanguageResolution && resolvedLanguage) {\r\n        resolvedLanguage = resolvedLanguage;\r\n    }\r\n    else {\r\n        if (isPseudo || !options.language) {\r\n            resolvedLanguage = '.nls.json';\r\n        }\r\n        else {\r\n            var locale = options.language;\r\n            while (locale) {\r\n                var candidate = '.nls.' + locale + '.json';\r\n                if (fs.existsSync(file + candidate)) {\r\n                    resolvedLanguage = candidate;\r\n                    break;\r\n                }\r\n                else {\r\n                    var index = locale.lastIndexOf('-');\r\n                    if (index > 0) {\r\n                        locale = locale.substring(0, index);\r\n                    }\r\n                    else {\r\n                        resolvedLanguage = '.nls.json';\r\n                        locale = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (options.cacheLanguageResolution) {\r\n            resolvedLanguage = resolvedLanguage;\r\n        }\r\n    }\r\n    return file + resolvedLanguage;\r\n}\r\nfunction findInTheBoxBundle(root) {\r\n    var language = options.language;\r\n    while (language) {\r\n        var candidate = path.join(root, \"nls.bundle.\" + language + \".json\");\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n        else {\r\n            var index = language.lastIndexOf('-');\r\n            if (index > 0) {\r\n                language = language.substring(0, index);\r\n            }\r\n            else {\r\n                language = undefined;\r\n            }\r\n        }\r\n    }\r\n    // Test if we can reslove the default bundle.\r\n    if (language === undefined) {\r\n        var candidate = path.join(root, 'nls.bundle.json');\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction mkdir(directory) {\r\n    try {\r\n        fs.mkdirSync(directory);\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'EEXIST') {\r\n            return;\r\n        }\r\n        else if (err.code === 'ENOENT') {\r\n            var parent = path.dirname(directory);\r\n            if (parent !== directory) {\r\n                mkdir(parent);\r\n                fs.mkdirSync(directory);\r\n            }\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nfunction createDefaultNlsBundle(folder) {\r\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_1 in metaData) {\r\n        var entry = metaData[module_1];\r\n        result[module_1] = entry.messages;\r\n    }\r\n    return result;\r\n}\r\nfunction createNLSBundle(header, metaDataPath) {\r\n    var languagePackLocation = options.translationsConfig[header.id];\r\n    if (!languagePackLocation) {\r\n        return undefined;\r\n    }\r\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\r\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_2 in metaData) {\r\n        var entry = metaData[module_2];\r\n        var translations = languagePack[header.outDir + \"/\" + module_2];\r\n        if (translations) {\r\n            var resultMessages = [];\r\n            for (var i = 0; i < entry.keys.length; i++) {\r\n                var messageKey = entry.keys[i];\r\n                var key = isString(messageKey) ? messageKey : messageKey.key;\r\n                var translatedMessage = translations[key];\r\n                if (translatedMessage === undefined) {\r\n                    translatedMessage = entry.messages[i];\r\n                }\r\n                resultMessages.push(translatedMessage);\r\n            }\r\n            result[module_2] = resultMessages;\r\n        }\r\n        else {\r\n            result[module_2] = entry.messages;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction touch(file) {\r\n    var d = new Date();\r\n    fs.utimes(file, d, d, function () {\r\n        // Do nothing. Ignore\r\n    });\r\n}\r\nfunction cacheBundle(key, bundle) {\r\n    resolvedBundles[key] = bundle;\r\n    return bundle;\r\n}\r\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\r\n    var result;\r\n    var bundle = path.join(options.cacheRoot, header.id + \"-\" + header.hash + \".json\");\r\n    var useMemoryOnly = false;\r\n    var writeBundle = false;\r\n    try {\r\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\r\n        touch(bundle);\r\n        return result;\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'ENOENT') {\r\n            writeBundle = true;\r\n        }\r\n        else if (err instanceof SyntaxError) {\r\n            // We have a syntax error. So no valid JSON. Use\r\n            console.log(\"Syntax error parsing message bundle: \" + err.message + \".\");\r\n            fs.unlink(bundle, function (err) {\r\n                if (err) {\r\n                    console.error(\"Deleting corrupted bundle \" + bundle + \" failed.\");\r\n                }\r\n            });\r\n            useMemoryOnly = true;\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    result = createNLSBundle(header, bundlePath);\r\n    if (!result || useMemoryOnly) {\r\n        return result;\r\n    }\r\n    if (writeBundle) {\r\n        try {\r\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\r\n        }\r\n        catch (err) {\r\n            if (err.code === 'EEXIST') {\r\n                return result;\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadDefaultNlsBundle(bundlePath) {\r\n    try {\r\n        return createDefaultNlsBundle(bundlePath);\r\n    }\r\n    catch (err) {\r\n        console.log(\"Generating default bundle from meta data failed.\", err);\r\n        return undefined;\r\n    }\r\n}\r\nfunction loadNlsBundle(header, bundlePath) {\r\n    var result;\r\n    // Core decided to use a language pack. Do the same in the extension\r\n    if (supportsLanguagePack()) {\r\n        try {\r\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Load or create bundle failed \", err);\r\n        }\r\n    }\r\n    if (!result) {\r\n        // No language pack found, but core is running in language pack mode\r\n        // Don't try to use old in the box bundles since the might be stale\r\n        // Fall right back to the default bundle.\r\n        if (options.languagePackSupport) {\r\n            return loadDefaultNlsBundle(bundlePath);\r\n        }\r\n        var candidate = findInTheBoxBundle(bundlePath);\r\n        if (candidate) {\r\n            try {\r\n                return readJsonFileSync(candidate);\r\n            }\r\n            catch (err) {\r\n                console.log(\"Loading in the box message bundle failed.\", err);\r\n            }\r\n        }\r\n        result = loadDefaultNlsBundle(bundlePath);\r\n    }\r\n    return result;\r\n}\r\nfunction tryFindMetaDataHeaderFile(file) {\r\n    var result;\r\n    var dirname = path.dirname(file);\r\n    while (true) {\r\n        result = path.join(dirname, 'nls.metadata.header.json');\r\n        if (fs.existsSync(result)) {\r\n            break;\r\n        }\r\n        var parent = path.dirname(dirname);\r\n        if (parent === dirname) {\r\n            result = undefined;\r\n            break;\r\n        }\r\n        else {\r\n            dirname = parent;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadMessageBundle(file) {\r\n    if (!file) {\r\n        // No file. We are in dev mode. Return the default\r\n        // localize function.\r\n        return localize;\r\n    }\r\n    // Remove extension since we load json files.\r\n    var ext = path.extname(file);\r\n    if (ext) {\r\n        file = file.substr(0, file.length - ext.length);\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\r\n        var headerFile = tryFindMetaDataHeaderFile(file);\r\n        if (headerFile) {\r\n            var bundlePath = path.dirname(headerFile);\r\n            var bundle = resolvedBundles[bundlePath];\r\n            if (bundle === undefined) {\r\n                try {\r\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\r\n                    try {\r\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\r\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\r\n                    }\r\n                    catch (err) {\r\n                        console.error('Failed to load nls bundle', err);\r\n                        bundle = cacheBundle(bundlePath, null);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.error('Failed to read header file', err);\r\n                    bundle = cacheBundle(bundlePath, null);\r\n                }\r\n            }\r\n            if (bundle) {\r\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\/g, '/');\r\n                var messages = bundle.nlsBundle[module_3];\r\n                if (messages === undefined) {\r\n                    console.error(\"Messages for file \" + file + \" not found. See console for details.\");\r\n                    return function () {\r\n                        return 'Messages not found.';\r\n                    };\r\n                }\r\n                return createScopedLocalizeFunction(messages);\r\n            }\r\n        }\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\r\n        // Try to load a single file bundle\r\n        try {\r\n            var json = readJsonFileSync(resolveLanguage(file));\r\n            if (Array.isArray(json)) {\r\n                return createScopedLocalizeFunction(json);\r\n            }\r\n            else {\r\n                if (isDefined(json.messages) && isDefined(json.keys)) {\r\n                    return createScopedLocalizeFunction(json.messages);\r\n                }\r\n                else {\r\n                    console.error(\"String bundle '\" + file + \"' uses an unsupported format.\");\r\n                    return function () {\r\n                        return 'File bundle has unsupported format. See console for details';\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.code !== 'ENOENT') {\r\n                console.error('Failed to load single file bundle', err);\r\n            }\r\n        }\r\n    }\r\n    console.error(\"Failed to load message bundle for file \" + file);\r\n    return function () {\r\n        return 'Failed to load message bundle. See console for details.';\r\n    };\r\n}\r\nexports.loadMessageBundle = loadMessageBundle;\r\nfunction config(opts) {\r\n    if (opts) {\r\n        if (isString(opts.locale)) {\r\n            options.locale = opts.locale.toLowerCase();\r\n            options.language = options.locale;\r\n            resolvedLanguage = undefined;\r\n            resolvedBundles = Object.create(null);\r\n        }\r\n        if (opts.messageFormat !== undefined) {\r\n            options.messageFormat = opts.messageFormat;\r\n        }\r\n        if (opts.bundleFormat === BundleFormat.standalone && options.languagePackSupport === true) {\r\n            options.languagePackSupport = false;\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    return loadMessageBundle;\r\n}\r\nexports.config = config;\r\n//# sourceMappingURL=main.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nvar ProgressNotification;\r\n(function (ProgressNotification) {\r\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\r\n})(ProgressNotification || (ProgressNotification = {}));\r\nclass ProgressType {\r\n    constructor() {\r\n    }\r\n}\r\nexports.ProgressType = ProgressType;\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        if (!Is.string(value)) {\r\n            return Trace.Off;\r\n        }\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let progressHandlers = new Map();\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let unhandledProgressEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        onProgress: (_type, token, handler) => {\r\n            if (progressHandlers.has(token)) {\r\n                throw new Error(`Progress handler for token ${token} already registered`);\r\n            }\r\n            progressHandlers.set(token, handler);\r\n            return {\r\n                dispose: () => {\r\n                    progressHandlers.delete(token);\r\n                }\r\n            };\r\n        },\r\n        sendProgress: (_type, token, value) => {\r\n            connection.sendNotification(ProgressNotification.type, { token, value });\r\n        },\r\n        onUnhandledProgress: unhandledProgressEmitter.event,\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            // eslint-disable-next-line no-console\r\n            console.log('inspect');\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    connection.onNotification(ProgressNotification.type, (params) => {\r\n        const handler = progressHandlers.get(params.token);\r\n        if (handler) {\r\n            handler(params.value);\r\n        }\r\n        else {\r\n            unhandledProgressEmitter.fire(params);\r\n        }\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\nexports.ProgressType = vscode_jsonrpc_1.ProgressType;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nconst callHierarchy = require(\"./protocol.callHierarchy.proposed\");\r\nconst st = require(\"./protocol.sematicTokens.proposed\");\r\nvar Proposed;\r\n(function (Proposed) {\r\n    let CallHierarchyPrepareRequest;\r\n    (function (CallHierarchyPrepareRequest) {\r\n        CallHierarchyPrepareRequest.method = callHierarchy.CallHierarchyPrepareRequest.method;\r\n        CallHierarchyPrepareRequest.type = callHierarchy.CallHierarchyPrepareRequest.type;\r\n    })(CallHierarchyPrepareRequest = Proposed.CallHierarchyPrepareRequest || (Proposed.CallHierarchyPrepareRequest = {}));\r\n    let CallHierarchyIncomingCallsRequest;\r\n    (function (CallHierarchyIncomingCallsRequest) {\r\n        CallHierarchyIncomingCallsRequest.method = callHierarchy.CallHierarchyIncomingCallsRequest.method;\r\n        CallHierarchyIncomingCallsRequest.type = callHierarchy.CallHierarchyIncomingCallsRequest.type;\r\n    })(CallHierarchyIncomingCallsRequest = Proposed.CallHierarchyIncomingCallsRequest || (Proposed.CallHierarchyIncomingCallsRequest = {}));\r\n    let CallHierarchyOutgoingCallsRequest;\r\n    (function (CallHierarchyOutgoingCallsRequest) {\r\n        CallHierarchyOutgoingCallsRequest.method = callHierarchy.CallHierarchyOutgoingCallsRequest.method;\r\n        CallHierarchyOutgoingCallsRequest.type = callHierarchy.CallHierarchyOutgoingCallsRequest.type;\r\n    })(CallHierarchyOutgoingCallsRequest = Proposed.CallHierarchyOutgoingCallsRequest || (Proposed.CallHierarchyOutgoingCallsRequest = {}));\r\n    Proposed.SemanticTokenTypes = st.SemanticTokenTypes;\r\n    Proposed.SemanticTokenModifiers = st.SemanticTokenModifiers;\r\n    Proposed.SemanticTokens = st.SemanticTokens;\r\n    let SemanticTokensRequest;\r\n    (function (SemanticTokensRequest) {\r\n        SemanticTokensRequest.method = st.SemanticTokensRequest.method;\r\n        SemanticTokensRequest.type = st.SemanticTokensRequest.type;\r\n    })(SemanticTokensRequest = Proposed.SemanticTokensRequest || (Proposed.SemanticTokensRequest = {}));\r\n    let SemanticTokensEditsRequest;\r\n    (function (SemanticTokensEditsRequest) {\r\n        SemanticTokensEditsRequest.method = st.SemanticTokensEditsRequest.method;\r\n        SemanticTokensEditsRequest.type = st.SemanticTokensEditsRequest.type;\r\n    })(SemanticTokensEditsRequest = Proposed.SemanticTokensEditsRequest || (Proposed.SemanticTokensEditsRequest = {}));\r\n    let SemanticTokensRangeRequest;\r\n    (function (SemanticTokensRangeRequest) {\r\n        SemanticTokensRangeRequest.method = st.SemanticTokensRangeRequest.method;\r\n        SemanticTokensRangeRequest.type = st.SemanticTokensRangeRequest.type;\r\n    })(SemanticTokensRangeRequest = Proposed.SemanticTokensRangeRequest || (Proposed.SemanticTokensRangeRequest = {}));\r\n})(Proposed = exports.Proposed || (exports.Proposed = {}));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","module.exports = require(\"url\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The diagnostic tags.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var DiagnosticTag;\r\n(function (DiagnosticTag) {\r\n    /**\r\n     * Unused or unnecessary code.\r\n     *\r\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\r\n     * an error squiggle.\r\n     */\r\n    DiagnosticTag.Unnecessary = 1;\r\n    /**\r\n     * Deprecated or obsolete code.\r\n     *\r\n     * Clients are allowed to rendered diagnostics with this tag strike through.\r\n     */\r\n    DiagnosticTag.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * Completion item tags are extra annotations that tweak the rendering of a completion\r\n * item.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    /**\r\n     * Render a completion as obsolete, usually using a strike-out.\r\n     */\r\n    CompletionItemTag.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\n/**\r\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\r\n * @since 3.15\r\n */\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    /**\r\n     * Render a symbol as obsolete, usually using a strike-out.\r\n     */\r\n    SymbolTag.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nexport var DocumentSymbol;\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Empty kind.\r\n     */\r\n    CodeActionKind.Empty = '';\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n    /**\r\n     * Base kind for auto-fix source actions: `source.fixAll`.\r\n     *\r\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\r\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    CodeActionKind.SourceFixAll = 'source.fixAll';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void 0) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data)) {\r\n            result.data = data;\r\n        }\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\nexport var DocumentLink;\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\n/**\r\n * The SelectionRange namespace provides helper function to work with\r\n * SelectionRange literals.\r\n */\r\nexport var SelectionRange;\r\n(function (SelectionRange) {\r\n    /**\r\n     * Creates a new SelectionRange\r\n     * @param range the range.\r\n     * @param parent an optional parent.\r\n     */\r\n    function create(range, parent) {\r\n        return { range: range, parent: parent };\r\n    }\r\n    SelectionRange.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\r\n    }\r\n    SelectionRange.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\n/**\r\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\r\n */\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = undefined;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = undefined;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === undefined) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","module.exports = require(\"util\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nvar isWindows;\nif (typeof process === 'object') {\n    isWindows = process.platform === 'win32';\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    isWindows = userAgent.indexOf('Windows') >= 0;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction isLowerAsciiHex(code) {\n    return code >= 97 /* a */ && code <= 102 /* f */;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n//#endregion\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\nvar _pathSepMarker = isWindows ? 1 : undefined;\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\nEmitter._noop = function () { };\r\n","module.exports = require(\"path\");","module.exports = require(\"net\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't received the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.socket.destroy();\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","module.exports = require(\"fs\");","module.exports = require(\"https\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.Event = vscode_languageserver_protocol_1.Event;\r\nconst configuration_1 = require(\"./configuration\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst progress_1 = require(\"./progress\");\r\nconst Is = require(\"./utils/is\");\r\nconst UUID = require(\"./utils/uuid\");\r\n// ------------- Reexport the API surface of the language worker API ----------------------\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nconst fm = require(\"./files\");\r\nvar Files;\r\n(function (Files) {\r\n    Files.uriToFilePath = fm.uriToFilePath;\r\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\r\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\r\n    Files.resolve = fm.resolve;\r\n    Files.resolveModulePath = fm.resolveModulePath;\r\n})(Files = exports.Files || (exports.Files = {}));\r\nlet shutdownReceived = false;\r\nlet exitTimer = undefined;\r\nfunction setupExitTimer() {\r\n    const argName = '--clientProcessId';\r\n    function runTimer(value) {\r\n        try {\r\n            let processId = parseInt(value);\r\n            if (!isNaN(processId)) {\r\n                exitTimer = setInterval(() => {\r\n                    try {\r\n                        process.kill(processId, 0);\r\n                    }\r\n                    catch (ex) {\r\n                        // Parent process doesn't exist anymore. Exit the server.\r\n                        process.exit(shutdownReceived ? 0 : 1);\r\n                    }\r\n                }, 3000);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Ignore errors;\r\n        }\r\n    }\r\n    for (let i = 2; i < process.argv.length; i++) {\r\n        let arg = process.argv[i];\r\n        if (arg === argName && i + 1 < process.argv.length) {\r\n            runTimer(process.argv[i + 1]);\r\n            return;\r\n        }\r\n        else {\r\n            let args = arg.split('=');\r\n            if (args[0] === argName) {\r\n                runTimer(args[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\nsetupExitTimer();\r\nfunction null2Undefined(value) {\r\n    if (value === null) {\r\n        return void 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A manager for simple text documents\r\n */\r\nclass TextDocuments {\r\n    /**\r\n     * Create a new text document manager.\r\n     */\r\n    constructor(configuration) {\r\n        this._documents = Object.create(null);\r\n        this._configuration = configuration;\r\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened or the content changes.\r\n     */\r\n    get onDidChangeContent() {\r\n        return this._onDidChangeContent.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened.\r\n     */\r\n    get onDidOpen() {\r\n        return this._onDidOpen.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * will be saved.\r\n     */\r\n    get onWillSave() {\r\n        return this._onWillSave.event;\r\n    }\r\n    /**\r\n     * Sets a handler that will be called if a participant wants to provide\r\n     * edits during a text document save.\r\n     */\r\n    onWillSaveWaitUntil(handler) {\r\n        this._willSaveWaitUntil = handler;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been saved.\r\n     */\r\n    get onDidSave() {\r\n        return this._onDidSave.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been closed.\r\n     */\r\n    get onDidClose() {\r\n        return this._onDidClose.event;\r\n    }\r\n    /**\r\n     * Returns the document for the given URI. Returns undefined if\r\n     * the document is not mananged by this instance.\r\n     *\r\n     * @param uri The text document's URI to retrieve.\r\n     * @return the text document or `undefined`.\r\n     */\r\n    get(uri) {\r\n        return this._documents[uri];\r\n    }\r\n    /**\r\n     * Returns all text documents managed by this instance.\r\n     *\r\n     * @return all text documents.\r\n     */\r\n    all() {\r\n        return Object.keys(this._documents).map(key => this._documents[key]);\r\n    }\r\n    /**\r\n     * Returns the URIs of all text documents managed by this instance.\r\n     *\r\n     * @return the URI's of all text documents.\r\n     */\r\n    keys() {\r\n        return Object.keys(this._documents);\r\n    }\r\n    /**\r\n     * Listens for `low level` notification on the given connection to\r\n     * update the text documents managed by this instance.\r\n     *\r\n     * @param connection The connection to listen on.\r\n     */\r\n    listen(connection) {\r\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\r\n        connection.onDidOpenTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let document = this._configuration.create(td.uri, td.languageId, td.version, td.text);\r\n            this._documents[td.uri] = document;\r\n            let toFire = Object.freeze({ document });\r\n            this._onDidOpen.fire(toFire);\r\n            this._onDidChangeContent.fire(toFire);\r\n        });\r\n        connection.onDidChangeTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let changes = event.contentChanges;\r\n            if (changes.length === 0) {\r\n                return;\r\n            }\r\n            let document = this._documents[td.uri];\r\n            const { version } = td;\r\n            if (version === null || version === void 0) {\r\n                throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\r\n            }\r\n            document = this._configuration.update(document, changes, version);\r\n            this._documents[td.uri] = document;\r\n            this._onDidChangeContent.fire(Object.freeze({ document }));\r\n        });\r\n        connection.onDidCloseTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                delete this._documents[event.textDocument.uri];\r\n                this._onDidClose.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onWillSave.fire(Object.freeze({ document, reason: event.reason }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocumentWaitUntil((event, token) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document && this._willSaveWaitUntil) {\r\n                return this._willSaveWaitUntil(Object.freeze({ document, reason: event.reason }), token);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        connection.onDidSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onDidSave.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TextDocuments = TextDocuments;\r\n/**\r\n * Helps tracking error message. Equal occurences of the same\r\n * message are only stored once. This class is for example\r\n * useful if text documents are validated in a loop and equal\r\n * error message should be folded into one.\r\n */\r\nclass ErrorMessageTracker {\r\n    constructor() {\r\n        this._messages = Object.create(null);\r\n    }\r\n    /**\r\n     * Add a message to the tracker.\r\n     *\r\n     * @param message The message to add.\r\n     */\r\n    add(message) {\r\n        let count = this._messages[message];\r\n        if (!count) {\r\n            count = 0;\r\n        }\r\n        count++;\r\n        this._messages[message] = count;\r\n    }\r\n    /**\r\n     * Send all tracked messages to the connection's window.\r\n     *\r\n     * @param connection The connection established between client and server.\r\n     */\r\n    sendErrors(connection) {\r\n        Object.keys(this._messages).forEach(message => {\r\n            connection.window.showErrorMessage(message);\r\n        });\r\n    }\r\n}\r\nexports.ErrorMessageTracker = ErrorMessageTracker;\r\nclass RemoteConsoleImpl {\r\n    constructor() {\r\n    }\r\n    rawAttach(connection) {\r\n        this._rawConnection = connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    error(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\r\n    }\r\n    warn(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\r\n    }\r\n    info(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\r\n    }\r\n    log(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\r\n    }\r\n    send(type, message) {\r\n        if (this._rawConnection) {\r\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message });\r\n        }\r\n    }\r\n}\r\nclass _RemoteWindowImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    showErrorMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showWarningMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showInformationMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n}\r\nconst RemoteWindowImpl = progress_1.ProgressFeature(_RemoteWindowImpl);\r\nvar BulkRegistration;\r\n(function (BulkRegistration) {\r\n    /**\r\n     * Creates a new bulk registration.\r\n     * @return an empty bulk registration.\r\n     */\r\n    function create() {\r\n        return new BulkRegistrationImpl();\r\n    }\r\n    BulkRegistration.create = create;\r\n})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));\r\nclass BulkRegistrationImpl {\r\n    constructor() {\r\n        this._registrations = [];\r\n        this._registered = new Set();\r\n    }\r\n    add(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        if (this._registered.has(method)) {\r\n            throw new Error(`${method} is already added to this registration`);\r\n        }\r\n        const id = UUID.generateUuid();\r\n        this._registrations.push({\r\n            id: id,\r\n            method: method,\r\n            registerOptions: registerOptions || {}\r\n        });\r\n        this._registered.add(method);\r\n    }\r\n    asRegistrationParams() {\r\n        return {\r\n            registrations: this._registrations\r\n        };\r\n    }\r\n}\r\nvar BulkUnregistration;\r\n(function (BulkUnregistration) {\r\n    function create() {\r\n        return new BulkUnregistrationImpl(undefined, []);\r\n    }\r\n    BulkUnregistration.create = create;\r\n})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));\r\nclass BulkUnregistrationImpl {\r\n    constructor(_connection, unregistrations) {\r\n        this._connection = _connection;\r\n        this._unregistrations = new Map();\r\n        unregistrations.forEach(unregistration => {\r\n            this._unregistrations.set(unregistration.method, unregistration);\r\n        });\r\n    }\r\n    get isAttached() {\r\n        return !!this._connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    add(unregistration) {\r\n        this._unregistrations.set(unregistration.method, unregistration);\r\n    }\r\n    dispose() {\r\n        let unregistrations = [];\r\n        for (let unregistration of this._unregistrations.values()) {\r\n            unregistrations.push(unregistration);\r\n        }\r\n        let params = {\r\n            unregisterations: unregistrations\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this._connection.console.info(`Bulk unregistration failed.`);\r\n        });\r\n    }\r\n    disposeSingle(arg) {\r\n        const method = Is.string(arg) ? arg : arg.method;\r\n        const unregistration = this._unregistrations.get(method);\r\n        if (!unregistration) {\r\n            return false;\r\n        }\r\n        let params = {\r\n            unregisterations: [unregistration]\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\r\n            this._unregistrations.delete(method);\r\n        }, (_error) => {\r\n            this._connection.console.info(`Unregistering request handler for ${unregistration.id} failed.`);\r\n        });\r\n        return true;\r\n    }\r\n}\r\nclass RemoteClientImpl {\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\r\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\r\n            return this.registerMany(typeOrRegistrations);\r\n        }\r\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\r\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\r\n        }\r\n        else {\r\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\r\n        }\r\n    }\r\n    registerSingle1(unregistration, type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        if (!unregistration.isAttached) {\r\n            unregistration.attach(this._connection);\r\n        }\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            unregistration.add({ id: id, method: method });\r\n            return unregistration;\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    registerSingle2(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\r\n                this.unregisterSingle(id, method);\r\n            });\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    unregisterSingle(id, method) {\r\n        let params = {\r\n            unregisterations: [{ id, method }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this.connection.console.info(`Unregistering request handler for ${id} failed.`);\r\n        });\r\n    }\r\n    registerMany(registrations) {\r\n        let params = registrations.asRegistrationParams();\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\r\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\r\n        }, (_error) => {\r\n            this.connection.console.info(`Bulk registration failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n}\r\nclass _RemoteWorkspaceImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    applyEdit(paramOrEdit) {\r\n        function isApplyWorkspaceEditParams(value) {\r\n            return value && !!value.edit;\r\n        }\r\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\r\n    }\r\n}\r\nconst RemoteWorkspaceImpl = workspaceFolders_1.WorkspaceFoldersFeature(configuration_1.ConfigurationFeature(_RemoteWorkspaceImpl));\r\nclass TelemetryImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    logEvent(data) {\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data);\r\n    }\r\n}\r\nclass TracerImpl {\r\n    constructor() {\r\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n    }\r\n    log(message, verbose) {\r\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\r\n            return;\r\n        }\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\r\n            message: message,\r\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\r\n        });\r\n    }\r\n}\r\nclass LanguagesImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    attachWorkDoneProgress(params) {\r\n        return progress_1.attachWorkDone(this.connection, params);\r\n    }\r\n    attachPartialResultProgress(_type, params) {\r\n        return progress_1.attachPartialResult(this.connection, params);\r\n    }\r\n}\r\nexports.LanguagesImpl = LanguagesImpl;\r\nfunction combineConsoleFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineConsoleFeatures = combineConsoleFeatures;\r\nfunction combineTelemetryFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\r\nfunction combineTracerFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTracerFeatures = combineTracerFeatures;\r\nfunction combineClientFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineClientFeatures = combineClientFeatures;\r\nfunction combineWindowFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWindowFeatures = combineWindowFeatures;\r\nfunction combineWorkspaceFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\r\nfunction combineLanguagesFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineLanguagesFeatures = combineLanguagesFeatures;\r\nfunction combineFeatures(one, two) {\r\n    function combine(one, two, func) {\r\n        if (one && two) {\r\n            return func(one, two);\r\n        }\r\n        else if (one) {\r\n            return one;\r\n        }\r\n        else {\r\n            return two;\r\n        }\r\n    }\r\n    let result = {\r\n        __brand: 'features',\r\n        console: combine(one.console, two.console, combineConsoleFeatures),\r\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\r\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\r\n        client: combine(one.client, two.client, combineClientFeatures),\r\n        window: combine(one.window, two.window, combineWindowFeatures),\r\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures)\r\n    };\r\n    return result;\r\n}\r\nexports.combineFeatures = combineFeatures;\r\nfunction createConnection(arg1, arg2, arg3, arg4) {\r\n    let factories;\r\n    let input;\r\n    let output;\r\n    let strategy;\r\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\r\n        factories = arg1;\r\n        arg1 = arg2;\r\n        arg2 = arg3;\r\n        arg3 = arg4;\r\n    }\r\n    if (vscode_languageserver_protocol_1.ConnectionStrategy.is(arg1)) {\r\n        strategy = arg1;\r\n    }\r\n    else {\r\n        input = arg1;\r\n        output = arg2;\r\n        strategy = arg3;\r\n    }\r\n    return _createConnection(input, output, strategy, factories);\r\n}\r\nexports.createConnection = createConnection;\r\nfunction _createConnection(input, output, strategy, factories) {\r\n    if (!input && !output && process.argv.length > 2) {\r\n        let port = void 0;\r\n        let pipeName = void 0;\r\n        let argv = process.argv.slice(2);\r\n        for (let i = 0; i < argv.length; i++) {\r\n            let arg = argv[i];\r\n            if (arg === '--node-ipc') {\r\n                input = new vscode_languageserver_protocol_1.IPCMessageReader(process);\r\n                output = new vscode_languageserver_protocol_1.IPCMessageWriter(process);\r\n                break;\r\n            }\r\n            else if (arg === '--stdio') {\r\n                input = process.stdin;\r\n                output = process.stdout;\r\n                break;\r\n            }\r\n            else if (arg === '--socket') {\r\n                port = parseInt(argv[i + 1]);\r\n                break;\r\n            }\r\n            else if (arg === '--pipe') {\r\n                pipeName = argv[i + 1];\r\n                break;\r\n            }\r\n            else {\r\n                var args = arg.split('=');\r\n                if (args[0] === '--socket') {\r\n                    port = parseInt(args[1]);\r\n                    break;\r\n                }\r\n                else if (args[0] === '--pipe') {\r\n                    pipeName = args[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (port) {\r\n            let transport = vscode_languageserver_protocol_1.createServerSocketTransport(port);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n        else if (pipeName) {\r\n            let transport = vscode_languageserver_protocol_1.createServerPipeTransport(pipeName);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n    }\r\n    var commandLineMessage = 'Use arguments of createConnection or set command line parameters: \\'--node-ipc\\', \\'--stdio\\' or \\'--socket={number}\\'';\r\n    if (!input) {\r\n        throw new Error('Connection input stream is not set. ' + commandLineMessage);\r\n    }\r\n    if (!output) {\r\n        throw new Error('Connection output stream is not set. ' + commandLineMessage);\r\n    }\r\n    // Backwards compatibility\r\n    if (Is.func(input.read) && Is.func(input.on)) {\r\n        let inputStream = input;\r\n        inputStream.on('end', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n        inputStream.on('close', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n    }\r\n    const logger = (factories && factories.console ? new (factories.console(RemoteConsoleImpl))() : new RemoteConsoleImpl());\r\n    const connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger, strategy);\r\n    logger.rawAttach(connection);\r\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\r\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\r\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\r\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\r\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\r\n    const languages = (factories && factories.languages ? new (factories.languages(LanguagesImpl))() : new LanguagesImpl());\r\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace, languages];\r\n    function asPromise(value) {\r\n        if (value instanceof Promise) {\r\n            return value;\r\n        }\r\n        else if (Is.thenable(value)) {\r\n            return new Promise((resolve, reject) => {\r\n                value.then((resolved) => resolve(resolved), (error) => reject(error));\r\n            });\r\n        }\r\n        else {\r\n            return Promise.resolve(value);\r\n        }\r\n    }\r\n    let shutdownHandler = undefined;\r\n    let initializeHandler = undefined;\r\n    let exitHandler = undefined;\r\n    let protocolConnection = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(type, handler),\r\n        sendNotification: (type, param) => {\r\n            const method = Is.string(type) ? type : type.method;\r\n            if (arguments.length === 1) {\r\n                connection.sendNotification(method);\r\n            }\r\n            else {\r\n                connection.sendNotification(method, param);\r\n            }\r\n        },\r\n        onNotification: (type, handler) => connection.onNotification(type, handler),\r\n        onProgress: connection.onProgress,\r\n        sendProgress: connection.sendProgress,\r\n        onInitialize: (handler) => initializeHandler = handler,\r\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\r\n        onShutdown: (handler) => shutdownHandler = handler,\r\n        onExit: (handler) => exitHandler = handler,\r\n        get console() { return logger; },\r\n        get telemetry() { return telemetry; },\r\n        get tracer() { return tracer; },\r\n        get client() { return client; },\r\n        get window() { return remoteWindow; },\r\n        get workspace() { return workspace; },\r\n        get languages() { return languages; },\r\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\r\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\r\n        __textDocumentSync: undefined,\r\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\r\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\r\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\r\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\r\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\r\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\r\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onSelectionRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    for (let remote of allRemotes) {\r\n        remote.attach(protocolConnection);\r\n    }\r\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\r\n        const processId = params.processId;\r\n        if (Is.number(processId) && exitTimer === void 0) {\r\n            // We received a parent process id. Set up a timer to periodically check\r\n            // if the parent is still alive.\r\n            setInterval(() => {\r\n                try {\r\n                    process.kill(processId, 0);\r\n                }\r\n                catch (ex) {\r\n                    // Parent process doesn't exist anymore. Exit the server.\r\n                    process.exit(shutdownReceived ? 0 : 1);\r\n                }\r\n            }, 3000);\r\n        }\r\n        if (Is.string(params.trace)) {\r\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\r\n        }\r\n        for (let remote of allRemotes) {\r\n            remote.initialize(params.capabilities);\r\n        }\r\n        if (initializeHandler) {\r\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token, progress_1.attachWorkDone(connection, params), undefined);\r\n            return asPromise(result).then((value) => {\r\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n                    return value;\r\n                }\r\n                let result = value;\r\n                if (!result) {\r\n                    result = { capabilities: {} };\r\n                }\r\n                let capabilities = result.capabilities;\r\n                if (!capabilities) {\r\n                    capabilities = {};\r\n                    result.capabilities = capabilities;\r\n                }\r\n                if (capabilities.textDocumentSync === void 0 || capabilities.textDocumentSync === null) {\r\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\r\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                for (let remote of allRemotes) {\r\n                    remote.fillServerCapabilities(capabilities);\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        else {\r\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\r\n            for (let remote of allRemotes) {\r\n                remote.fillServerCapabilities(result.capabilities);\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\r\n        shutdownReceived = true;\r\n        if (shutdownHandler) {\r\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\r\n        try {\r\n            if (exitHandler) {\r\n                exitHandler();\r\n            }\r\n        }\r\n        finally {\r\n            if (shutdownReceived) {\r\n                process.exit(0);\r\n            }\r\n            else {\r\n                process.exit(1);\r\n            }\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\r\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\r\n    });\r\n    return protocolConnection;\r\n}\r\n// Export the protocol currently in proposed state.\r\nconst callHierarchy_proposed_1 = require(\"./callHierarchy.proposed\");\r\nconst st = require(\"./sematicTokens.proposed\");\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    ProposedFeatures.all = {\r\n        __brand: 'features',\r\n        languages: combineLanguagesFeatures(callHierarchy_proposed_1.CallHierarchyFeature, st.SemanticTokensFeature)\r\n    };\r\n    ProposedFeatures.SemanticTokensBuilder = st.SemanticTokensBuilder;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n//# sourceMappingURL=main.js.map","module.exports = require(\"os\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n//# sourceMappingURL=is.js.map","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n//# sourceMappingURL=uuid.js.map","module.exports = require(\"tls\");","\"use strict\";\n\n/* global module, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    // Get a promise object. This may be native, or it may be polyfilled\n\n    var ES6Promise = require(\"./promise.js\");\n\n    /**\n     * thatLooksLikeAPromiseToMe()\n     *\n     * Duck-types a promise.\n     *\n     * @param {object} o\n     * @return {bool} True if this resembles a promise\n     */\n    function thatLooksLikeAPromiseToMe(o) {\n        return o && typeof o.then === \"function\" && typeof o.catch === \"function\";\n    }\n\n    /**\n     * promisify()\n     *\n     * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) -- into\n     * an ES6-compatible Promise. Promisify provides a default callback of the form (error, result)\n     * and rejects when `error` is truthy. You can also supply settings object as the second argument.\n     *\n     * @param {function} original - The function to promisify\n     * @param {object} settings - Settings object\n     * @param {object} settings.thisArg - A `this` context to use. If not set, assume `settings` _is_ `thisArg`\n     * @param {bool} settings.multiArgs - Should multiple arguments be returned as an array?\n     * @return {function} A promisified version of `original`\n     */\n    return function promisify(original, settings) {\n\n        return function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            var returnMultipleArguments = settings && settings.multiArgs;\n\n            var target = void 0;\n            if (settings && settings.thisArg) {\n                target = settings.thisArg;\n            } else if (settings) {\n                target = settings;\n            }\n\n            // Return the promisified function\n            return new ES6Promise(function (resolve, reject) {\n\n                // Append the callback bound to the context\n                args.push(function callback(err) {\n\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    for (var _len2 = arguments.length, values = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                        values[_key2 - 1] = arguments[_key2];\n                    }\n\n                    if (false === !!returnMultipleArguments) {\n                        return resolve(values[0]);\n                    }\n\n                    resolve(values);\n                });\n\n                // Call the function\n                var response = original.apply(target, args);\n\n                // If it looks like original already returns a promise,\n                // then just resolve with that promise. Hopefully, the callback function we added will just be ignored.\n                if (thatLooksLikeAPromiseToMe(response)) {\n                    resolve(response);\n                }\n            });\n        };\n    };\n}();","module.exports = require(\"events\");","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tcreateConnection, IConnection,\n\tTextDocuments, InitializeParams, InitializeResult, NotificationType, RequestType,\n\tDocumentRangeFormattingRequest, Disposable, ServerCapabilities, TextDocumentSyncKind, TextEdit\n} from 'vscode-languageserver';\n\nimport { xhr, XHRResponse, configure as configureHttpRequests, getErrorStatusDescription } from 'request-light';\nimport * as fs from 'fs';\nimport { URI } from 'vscode-uri';\nimport * as URL from 'url';\nimport { posix } from 'path';\nimport { setTimeout, clearTimeout } from 'timers';\nimport { formatError, runSafe, runSafeAsync } from './utils/runner';\nimport { TextDocument, JSONDocument, JSONSchema, getLanguageService, DocumentLanguageSettings, SchemaConfiguration, ClientCapabilities, SchemaRequestService, Diagnostic, Range, Position } from 'vscode-json-languageservice';\nimport { getLanguageModelCache } from './languageModelCache';\n\ninterface ISchemaAssociations {\n\t[pattern: string]: string[];\n}\n\nnamespace SchemaAssociationNotification {\n\texport const type: NotificationType<ISchemaAssociations, any> = new NotificationType('json/schemaAssociations');\n}\n\nnamespace VSCodeContentRequest {\n\texport const type: RequestType<string, string, any, any> = new RequestType('vscode/content');\n}\n\nnamespace SchemaContentChangeNotification {\n\texport const type: NotificationType<string, any> = new NotificationType('json/schemaContent');\n}\n\nnamespace ResultLimitReachedNotification {\n\texport const type: NotificationType<string, any> = new NotificationType('json/resultLimitReached');\n}\n\nnamespace ForceValidateRequest {\n\texport const type: RequestType<string, Diagnostic[], any, any> = new RequestType('json/validate');\n}\n\n// Create a connection for the server\nconst connection: IConnection = createConnection();\n\nprocess.on('unhandledRejection', (e: any) => {\n\tconsole.error(formatError(`Unhandled exception`, e));\n});\nprocess.on('uncaughtException', (e: any) => {\n\tconsole.error(formatError(`Unhandled exception`, e));\n});\n\n\nconsole.log = connection.console.log.bind(connection.console);\nconsole.error = connection.console.error.bind(connection.console);\n\nconst workspaceContext = {\n\tresolveRelativePath: (relativePath: string, resource: string) => {\n\t\treturn URL.resolve(resource, relativePath);\n\t}\n};\n\nconst fileRequestService: SchemaRequestService = (uri: string) => {\n\tconst fsPath = URI.parse(uri).fsPath;\n\treturn new Promise<string>((c, e) => {\n\t\tfs.readFile(fsPath, 'UTF-8', (err, result) => {\n\t\t\terr ? e(err.message || err.toString()) : c(result.toString());\n\t\t});\n\t});\n};\n\nconst httpRequestService: SchemaRequestService = (uri: string) => {\n\tconst headers = { 'Accept-Encoding': 'gzip, deflate' };\n\treturn xhr({ url: uri, followRedirects: 5, headers }).then(response => {\n\t\treturn response.responseText;\n\t}, (error: XHRResponse) => {\n\t\treturn Promise.reject(error.responseText || getErrorStatusDescription(error.status) || error.toString());\n\t});\n};\n\nfunction getSchemaRequestService(handledSchemas: string[] = ['https', 'http', 'file']) {\n\tconst builtInHandlers: { [protocol: string]: SchemaRequestService } = {};\n\tfor (let protocol of handledSchemas) {\n\t\tif (protocol === 'file') {\n\t\t\tbuiltInHandlers[protocol] = fileRequestService;\n\t\t} else if (protocol === 'http' || protocol === 'https') {\n\t\t\tbuiltInHandlers[protocol] = httpRequestService;\n\t\t}\n\t}\n\treturn (uri: string): Thenable<string> => {\n\t\tconst protocol = uri.substr(0, uri.indexOf(':'));\n\n\t\tconst builtInHandler = builtInHandlers[protocol];\n\t\tif (builtInHandler) {\n\t\t\treturn builtInHandler(uri);\n\t\t}\n\t\treturn connection.sendRequest(VSCodeContentRequest.type, uri).then(responseText => {\n\t\t\treturn responseText;\n\t\t}, error => {\n\t\t\treturn Promise.reject(error.message);\n\t\t});\n\t};\n}\n\n// create the JSON language service\nlet languageService = getLanguageService({\n\tworkspaceContext,\n\tcontributions: [],\n\tclientCapabilities: ClientCapabilities.LATEST\n});\n\n// Create a text document manager.\nconst documents = new TextDocuments(TextDocument);\n\n// Make the text document manager listen on the connection\n// for open, change and close text document events\ndocuments.listen(connection);\n\nlet clientSnippetSupport = false;\nlet dynamicFormatterRegistration = false;\nlet hierarchicalDocumentSymbolSupport = false;\n\nlet foldingRangeLimitDefault = Number.MAX_VALUE;\nlet foldingRangeLimit = Number.MAX_VALUE;\nlet resultLimit = Number.MAX_VALUE;\nlet formatterMaxNumberOfEdits = Number.MAX_VALUE;\n\n// After the server has started the client sends an initialize request. The server receives\n// in the passed params the rootPath of the workspace plus the client capabilities.\nconnection.onInitialize((params: InitializeParams): InitializeResult => {\n\n\tconst handledProtocols = params.initializationOptions?.handledSchemaProtocols;\n\n\tlanguageService = getLanguageService({\n\t\tschemaRequestService: getSchemaRequestService(handledProtocols),\n\t\tworkspaceContext,\n\t\tcontributions: [],\n\t\tclientCapabilities: params.capabilities\n\t});\n\n\tfunction getClientCapability<T>(name: string, def: T) {\n\t\tconst keys = name.split('.');\n\t\tlet c: any = params.capabilities;\n\t\tfor (let i = 0; c && i < keys.length; i++) {\n\t\t\tif (!c.hasOwnProperty(keys[i])) {\n\t\t\t\treturn def;\n\t\t\t}\n\t\t\tc = c[keys[i]];\n\t\t}\n\t\treturn c;\n\t}\n\n\tclientSnippetSupport = getClientCapability('textDocument.completion.completionItem.snippetSupport', false);\n\tdynamicFormatterRegistration = getClientCapability('textDocument.rangeFormatting.dynamicRegistration', false) && (typeof params.initializationOptions?.provideFormatter !== 'boolean');\n\tfoldingRangeLimitDefault = getClientCapability('textDocument.foldingRange.rangeLimit', Number.MAX_VALUE);\n\thierarchicalDocumentSymbolSupport = getClientCapability('textDocument.documentSymbol.hierarchicalDocumentSymbolSupport', false);\n\tformatterMaxNumberOfEdits = params.initializationOptions?.customCapabilities?.rangeFormatting?.editLimit || Number.MAX_VALUE;\n\tconst capabilities: ServerCapabilities = {\n\t\ttextDocumentSync: TextDocumentSyncKind.Incremental,\n\t\tcompletionProvider: clientSnippetSupport ? {\n\t\t\tresolveProvider: false, // turn off resolving as the current language service doesn't do anything on resolve. Also fixes #91747\n\t\t\ttriggerCharacters: ['\"', ':']\n\t\t} : undefined,\n\t\thoverProvider: true,\n\t\tdocumentSymbolProvider: true,\n\t\tdocumentRangeFormattingProvider: params.initializationOptions.provideFormatter === true,\n\t\tcolorProvider: {},\n\t\tfoldingRangeProvider: true,\n\t\tselectionRangeProvider: true\n\t};\n\n\treturn { capabilities };\n});\n\n\n\n// The settings interface describes the server relevant settings part\ninterface Settings {\n\tjson: {\n\t\tschemas: JSONSchemaSettings[];\n\t\tformat: { enable: boolean; };\n\t\tresultLimit?: number;\n\t};\n\thttp: {\n\t\tproxy: string;\n\t\tproxyStrictSSL: boolean;\n\t};\n}\n\ninterface JSONSchemaSettings {\n\tfileMatch?: string[];\n\turl?: string;\n\tschema?: JSONSchema;\n}\n\nnamespace LimitExceededWarnings {\n\tconst pendingWarnings: { [uri: string]: { features: { [name: string]: string }; timeout?: NodeJS.Timeout; } } = {};\n\n\texport function cancel(uri: string) {\n\t\tconst warning = pendingWarnings[uri];\n\t\tif (warning && warning.timeout) {\n\t\t\tclearTimeout(warning.timeout);\n\t\t\tdelete pendingWarnings[uri];\n\t\t}\n\t}\n\n\texport function onResultLimitExceeded(uri: string, resultLimit: number, name: string) {\n\t\treturn () => {\n\t\t\tlet warning = pendingWarnings[uri];\n\t\t\tif (warning) {\n\t\t\t\tif (!warning.timeout) {\n\t\t\t\t\t// already shown\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\twarning.features[name] = name;\n\t\t\t\twarning.timeout.refresh();\n\t\t\t} else {\n\t\t\t\twarning = { features: { [name]: name } };\n\t\t\t\twarning.timeout = setTimeout(() => {\n\t\t\t\t\tconnection.sendNotification(ResultLimitReachedNotification.type, `${posix.basename(uri)}: For performance reasons, ${Object.keys(warning.features).join(' and ')} have been limited to ${resultLimit} items.`);\n\t\t\t\t\twarning.timeout = undefined;\n\t\t\t\t}, 2000);\n\t\t\t\tpendingWarnings[uri] = warning;\n\t\t\t}\n\t\t};\n\t}\n}\n\nlet jsonConfigurationSettings: JSONSchemaSettings[] | undefined = undefined;\nlet schemaAssociations: ISchemaAssociations | undefined = undefined;\nlet formatterRegistration: Thenable<Disposable> | null = null;\n\n// The settings have changed. Is send on server activation as well.\nconnection.onDidChangeConfiguration((change) => {\n\tlet settings = <Settings>change.settings;\n\tconfigureHttpRequests(settings.http && settings.http.proxy, settings.http && settings.http.proxyStrictSSL);\n\n\tjsonConfigurationSettings = settings.json && settings.json.schemas;\n\tupdateConfiguration();\n\n\tfoldingRangeLimit = Math.trunc(Math.max(settings.json && settings.json.resultLimit || foldingRangeLimitDefault, 0));\n\tresultLimit = Math.trunc(Math.max(settings.json && settings.json.resultLimit || Number.MAX_VALUE, 0));\n\n\t// dynamically enable & disable the formatter\n\tif (dynamicFormatterRegistration) {\n\t\tconst enableFormatter = settings && settings.json && settings.json.format && settings.json.format.enable;\n\t\tif (enableFormatter) {\n\t\t\tif (!formatterRegistration) {\n\t\t\t\tformatterRegistration = connection.client.register(DocumentRangeFormattingRequest.type, { documentSelector: [{ language: 'json' }, { language: 'jsonc' }] });\n\t\t\t}\n\t\t} else if (formatterRegistration) {\n\t\t\tformatterRegistration.then(r => r.dispose());\n\t\t\tformatterRegistration = null;\n\t\t}\n\t}\n});\n\n// The jsonValidation extension configuration has changed\nconnection.onNotification(SchemaAssociationNotification.type, associations => {\n\tschemaAssociations = associations;\n\tupdateConfiguration();\n});\n\n// A schema has changed\nconnection.onNotification(SchemaContentChangeNotification.type, uri => {\n\tlanguageService.resetSchema(uri);\n});\n\n// Retry schema validation on all open documents\nconnection.onRequest(ForceValidateRequest.type, uri => {\n\treturn new Promise<Diagnostic[]>(resolve => {\n\t\tconst document = documents.get(uri);\n\t\tif (document) {\n\t\t\tupdateConfiguration();\n\t\t\tvalidateTextDocument(document, diagnostics => {\n\t\t\t\tresolve(diagnostics);\n\t\t\t});\n\t\t} else {\n\t\t\tresolve([]);\n\t\t}\n\t});\n});\n\nfunction updateConfiguration() {\n\tconst languageSettings = {\n\t\tvalidate: true,\n\t\tallowComments: true,\n\t\tschemas: new Array<SchemaConfiguration>()\n\t};\n\tif (schemaAssociations) {\n\t\tfor (const pattern in schemaAssociations) {\n\t\t\tconst association = schemaAssociations[pattern];\n\t\t\tif (Array.isArray(association)) {\n\t\t\t\tassociation.forEach(uri => {\n\t\t\t\t\tlanguageSettings.schemas.push({ uri, fileMatch: [pattern] });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tif (jsonConfigurationSettings) {\n\t\tjsonConfigurationSettings.forEach((schema, index) => {\n\t\t\tlet uri = schema.url;\n\t\t\tif (!uri && schema.schema) {\n\t\t\t\turi = schema.schema.id || `vscode://schemas/custom/${index}`;\n\t\t\t}\n\t\t\tif (uri) {\n\t\t\t\tlanguageSettings.schemas.push({ uri, fileMatch: schema.fileMatch, schema: schema.schema });\n\t\t\t}\n\t\t});\n\t}\n\tlanguageService.configure(languageSettings);\n\n\t// Revalidate any open text documents\n\tdocuments.all().forEach(triggerValidation);\n}\n\n// The content of a text document has changed. This event is emitted\n// when the text document first opened or when its content has changed.\ndocuments.onDidChangeContent((change) => {\n\tLimitExceededWarnings.cancel(change.document.uri);\n\ttriggerValidation(change.document);\n});\n\n// a document has closed: clear all diagnostics\ndocuments.onDidClose(event => {\n\tLimitExceededWarnings.cancel(event.document.uri);\n\tcleanPendingValidation(event.document);\n\tconnection.sendDiagnostics({ uri: event.document.uri, diagnostics: [] });\n});\n\nconst pendingValidationRequests: { [uri: string]: NodeJS.Timer; } = {};\nconst validationDelayMs = 300;\n\nfunction cleanPendingValidation(textDocument: TextDocument): void {\n\tconst request = pendingValidationRequests[textDocument.uri];\n\tif (request) {\n\t\tclearTimeout(request);\n\t\tdelete pendingValidationRequests[textDocument.uri];\n\t}\n}\n\nfunction triggerValidation(textDocument: TextDocument): void {\n\tcleanPendingValidation(textDocument);\n\tpendingValidationRequests[textDocument.uri] = setTimeout(() => {\n\t\tdelete pendingValidationRequests[textDocument.uri];\n\t\tvalidateTextDocument(textDocument);\n\t}, validationDelayMs);\n}\n\nfunction validateTextDocument(textDocument: TextDocument, callback?: (diagnostics: Diagnostic[]) => void): void {\n\tconst respond = (diagnostics: Diagnostic[]) => {\n\t\tconnection.sendDiagnostics({ uri: textDocument.uri, diagnostics });\n\t\tif (callback) {\n\t\t\tcallback(diagnostics);\n\t\t}\n\t};\n\tif (textDocument.getText().length === 0) {\n\t\trespond([]); // ignore empty documents\n\t\treturn;\n\t}\n\tconst jsonDocument = getJSONDocument(textDocument);\n\tconst version = textDocument.version;\n\n\tconst documentSettings: DocumentLanguageSettings = textDocument.languageId === 'jsonc' ? { comments: 'ignore', trailingCommas: 'warning' } : { comments: 'error', trailingCommas: 'error' };\n\tlanguageService.doValidation(textDocument, jsonDocument, documentSettings).then(diagnostics => {\n\t\tsetImmediate(() => {\n\t\t\tconst currDocument = documents.get(textDocument.uri);\n\t\t\tif (currDocument && currDocument.version === version) {\n\t\t\t\trespond(diagnostics); // Send the computed diagnostics to VSCode.\n\t\t\t}\n\t\t});\n\t}, error => {\n\t\tconnection.console.error(formatError(`Error while validating ${textDocument.uri}`, error));\n\t});\n}\n\nconnection.onDidChangeWatchedFiles((change) => {\n\t// Monitored files have changed in VSCode\n\tlet hasChanges = false;\n\tchange.changes.forEach(c => {\n\t\tif (languageService.resetSchema(c.uri)) {\n\t\t\thasChanges = true;\n\t\t}\n\t});\n\tif (hasChanges) {\n\t\tdocuments.all().forEach(triggerValidation);\n\t}\n});\n\nconst jsonDocuments = getLanguageModelCache<JSONDocument>(10, 60, document => languageService.parseJSONDocument(document));\ndocuments.onDidClose(e => {\n\tjsonDocuments.onDocumentRemoved(e.document);\n});\nconnection.onShutdown(() => {\n\tjsonDocuments.dispose();\n});\n\nfunction getJSONDocument(document: TextDocument): JSONDocument {\n\treturn jsonDocuments.get(document);\n}\n\nconnection.onCompletion((textDocumentPosition, token) => {\n\treturn runSafeAsync(async () => {\n\t\tconst document = documents.get(textDocumentPosition.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst jsonDocument = getJSONDocument(document);\n\t\t\treturn languageService.doComplete(document, textDocumentPosition.position, jsonDocument);\n\t\t}\n\t\treturn null;\n\t}, null, `Error while computing completions for ${textDocumentPosition.textDocument.uri}`, token);\n});\n\nconnection.onCompletionResolve((completionItem, token) => {\n\treturn runSafeAsync(() => {\n\t\treturn languageService.doResolve(completionItem);\n\t}, completionItem, `Error while resolving completion proposal`, token);\n});\n\nconnection.onHover((textDocumentPositionParams, token) => {\n\treturn runSafeAsync(async () => {\n\t\tconst document = documents.get(textDocumentPositionParams.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst jsonDocument = getJSONDocument(document);\n\t\t\treturn languageService.doHover(document, textDocumentPositionParams.position, jsonDocument);\n\t\t}\n\t\treturn null;\n\t}, null, `Error while computing hover for ${textDocumentPositionParams.textDocument.uri}`, token);\n});\n\nconnection.onDocumentSymbol((documentSymbolParams, token) => {\n\treturn runSafe(() => {\n\t\tconst document = documents.get(documentSymbolParams.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst jsonDocument = getJSONDocument(document);\n\t\t\tconst onResultLimitExceeded = LimitExceededWarnings.onResultLimitExceeded(document.uri, resultLimit, 'document symbols');\n\t\t\tif (hierarchicalDocumentSymbolSupport) {\n\t\t\t\treturn languageService.findDocumentSymbols2(document, jsonDocument, { resultLimit, onResultLimitExceeded });\n\t\t\t} else {\n\t\t\t\treturn languageService.findDocumentSymbols(document, jsonDocument, { resultLimit, onResultLimitExceeded });\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}, [], `Error while computing document symbols for ${documentSymbolParams.textDocument.uri}`, token);\n});\n\nconnection.onDocumentRangeFormatting((formatParams, token) => {\n\treturn runSafe(() => {\n\t\tconst document = documents.get(formatParams.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst edits = languageService.format(document, formatParams.range, formatParams.options);\n\t\t\tif (edits.length > formatterMaxNumberOfEdits) {\n\t\t\t\tconst newText = TextDocument.applyEdits(document, edits);\n\t\t\t\treturn [TextEdit.replace(Range.create(Position.create(0, 0), document.positionAt(document.getText().length)), newText)];\n\t\t\t}\n\t\t\treturn edits;\n\t\t}\n\t\treturn [];\n\t}, [], `Error while formatting range for ${formatParams.textDocument.uri}`, token);\n});\n\nconnection.onDocumentColor((params, token) => {\n\treturn runSafeAsync(async () => {\n\t\tconst document = documents.get(params.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst onResultLimitExceeded = LimitExceededWarnings.onResultLimitExceeded(document.uri, resultLimit, 'document colors');\n\t\t\tconst jsonDocument = getJSONDocument(document);\n\t\t\treturn languageService.findDocumentColors(document, jsonDocument, { resultLimit, onResultLimitExceeded });\n\t\t}\n\t\treturn [];\n\t}, [], `Error while computing document colors for ${params.textDocument.uri}`, token);\n});\n\nconnection.onColorPresentation((params, token) => {\n\treturn runSafe(() => {\n\t\tconst document = documents.get(params.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst jsonDocument = getJSONDocument(document);\n\t\t\treturn languageService.getColorPresentations(document, jsonDocument, params.color, params.range);\n\t\t}\n\t\treturn [];\n\t}, [], `Error while computing color presentations for ${params.textDocument.uri}`, token);\n});\n\nconnection.onFoldingRanges((params, token) => {\n\treturn runSafe(() => {\n\t\tconst document = documents.get(params.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst onRangeLimitExceeded = LimitExceededWarnings.onResultLimitExceeded(document.uri, foldingRangeLimit, 'folding ranges');\n\t\t\treturn languageService.getFoldingRanges(document, { rangeLimit: foldingRangeLimit, onRangeLimitExceeded });\n\t\t}\n\t\treturn null;\n\t}, null, `Error while computing folding ranges for ${params.textDocument.uri}`, token);\n});\n\n\nconnection.onSelectionRanges((params, token) => {\n\treturn runSafe(() => {\n\t\tconst document = documents.get(params.textDocument.uri);\n\t\tif (document) {\n\t\t\tconst jsonDocument = getJSONDocument(document);\n\t\t\treturn languageService.getSelectionRanges(document, params.positions, jsonDocument);\n\t\t}\n\t\treturn [];\n\t}, [], `Error while computing selection ranges for ${params.textDocument.uri}`, token);\n});\n\n// Listen on the connection\nconnection.listen();\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    ErrorCodes.ContentModified = -32801;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n *\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\n/**\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n    dispose() {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = undefined;\r\n        }\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","module.exports = require(\"crypto\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\r\nexports.SelectionRangeRequest = protocol_selectionRange_1.SelectionRangeRequest;\r\nconst protocol_progress_1 = require(\"./protocol.progress\");\r\nexports.WorkDoneProgress = protocol_progress_1.WorkDoneProgress;\r\nexports.WorkDoneProgressCreateRequest = protocol_progress_1.WorkDoneProgressCreateRequest;\r\nexports.WorkDoneProgressCancelNotification = protocol_progress_1.WorkDoneProgressCancelNotification;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * The DocumentFilter namespace provides helper functions to work with\r\n * [DocumentFilter](#DocumentFilter) literals.\r\n */\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The DocumentSelector namespace provides helper functions to work with\r\n * [DocumentSelector](#DocumentSelector)s.\r\n */\r\nvar DocumentSelector;\r\n(function (DocumentSelector) {\r\n    function is(value) {\r\n        if (!Array.isArray(value)) {\r\n            return false;\r\n        }\r\n        for (let elem of value) {\r\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    DocumentSelector.is = is;\r\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guarantee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * The StaticRegistrationOptions namespace provides helper functions to work with\r\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\r\n */\r\nvar StaticRegistrationOptions;\r\n(function (StaticRegistrationOptions) {\r\n    function hasId(value) {\r\n        const candidate = value;\r\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\r\n    }\r\n    StaticRegistrationOptions.hasId = hasId;\r\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\r\n/**\r\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\r\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\r\n */\r\nvar TextDocumentRegistrationOptions;\r\n(function (TextDocumentRegistrationOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\r\n    }\r\n    TextDocumentRegistrationOptions.is = is;\r\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\r\n/**\r\n * The WorkDoneProgressOptions namespace provides helper functions to work with\r\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\r\n */\r\nvar WorkDoneProgressOptions;\r\n(function (WorkDoneProgressOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\r\n    }\r\n    WorkDoneProgressOptions.is = is;\r\n    function hasWorkDoneProgress(value) {\r\n        const candidate = value;\r\n        return candidate && Is.boolean(candidate.workDoneProgress);\r\n    }\r\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\r\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\r\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\r\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\r\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\r\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\r\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\r\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.method = 'textDocument/completion';\r\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\r\n    /** @deprecated Use CompletionRequest.type */\r\n    CompletionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.method = 'completionItem/resolve';\r\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.method = 'textDocument/hover';\r\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\n/**\r\n * How a signature help was triggered.\r\n *\r\n * @since 3.15.0\r\n */\r\nvar SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    /**\r\n     * Signature help was invoked manually by the user or by a command.\r\n     */\r\n    SignatureHelpTriggerKind.Invoked = 1;\r\n    /**\r\n     * Signature help was triggered by a trigger character.\r\n     */\r\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Signature help was triggered by the cursor moving or by the document content changing.\r\n     */\r\n    SignatureHelpTriggerKind.ContentChange = 3;\r\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\r\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.method = 'textDocument/definition';\r\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\r\n    /** @deprecated Use DefinitionRequest.type */\r\n    DefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.method = 'textDocument/references';\r\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\r\n    /** @deprecated Use ReferencesRequest.type */\r\n    ReferencesRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\r\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\r\n    /** @deprecated Use DocumentHighlightRequest.type */\r\n    DocumentHighlightRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\r\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\r\n    /** @deprecated Use DocumentSymbolRequest.type */\r\n    DocumentSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.method = 'textDocument/codeAction';\r\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\r\n    /** @deprecated Use CodeActionRequest.type */\r\n    CodeActionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\r\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\r\n    /** @deprecated Use WorkspaceSymbolRequest.type */\r\n    WorkspaceSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new messages_1.ProtocolRequestType('textDocument/codeLens');\r\n    /** @deprecated Use CodeLensRequest.type */\r\n    CodeLensRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.method = 'textDocument/documentLink';\r\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\r\n    /** @deprecated Use DocumentLinkRequest.type */\r\n    DocumentLinkRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.method = 'textDocument/formatting';\r\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\r\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\r\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.method = 'textDocument/rename';\r\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\r\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction objectLiteral(value) {\r\n    // Strictly speaking class instances pass this check as well. Since the LSP\r\n    // doesn't use classes we ignore this for now. If we do we need to add something\r\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n    return value !== null && typeof value === 'object';\r\n}\r\nexports.objectLiteral = objectLiteral;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.method = 'textDocument/implementation';\r\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\r\n    /** @deprecated Use ImplementationRequest.type */\r\n    ImplementationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\r\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\r\n    /** @deprecated Use TypeDefinitionRequest.type */\r\n    TypeDefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.method = 'textDocument/documentColor';\r\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\r\n    /** @deprecated Use DocumentColorRequest.type */\r\n    DocumentColorRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\r\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\r\n    /** @deprecated Use FoldingRangeRequest.type */\r\n    FoldingRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.method = 'textDocument/declaration';\r\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\r\n    /** @deprecated Use DeclarationRequest.type */\r\n    DeclarationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to provide selection ranges in a document. The request's\r\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\r\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar SelectionRangeRequest;\r\n(function (SelectionRangeRequest) {\r\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\r\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\r\n    /** @deprecated  Use SelectionRangeRequest.type */\r\n    SelectionRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nvar WorkDoneProgress;\r\n(function (WorkDoneProgress) {\r\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\r\n/**\r\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\r\n * reporting from the server.\r\n */\r\nvar WorkDoneProgressCreateRequest;\r\n(function (WorkDoneProgressCreateRequest) {\r\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\r\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\r\n/**\r\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\r\n * initiated on the server side.\r\n */\r\nvar WorkDoneProgressCancelNotification;\r\n(function (WorkDoneProgressCancelNotification) {\r\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\r\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) TypeFox and others. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to result a `CallHierarchyItem` in a document at a given position.\r\n * Can be used as an input to a incoming or outgoing call hierarchy.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyPrepareRequest;\r\n(function (CallHierarchyPrepareRequest) {\r\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\r\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\r\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\r\n/**\r\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyIncomingCallsRequest;\r\n(function (CallHierarchyIncomingCallsRequest) {\r\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\r\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\r\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\r\n/**\r\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyOutgoingCallsRequest;\r\n(function (CallHierarchyOutgoingCallsRequest) {\r\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\r\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\r\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A set of predefined token types. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenTypes;\r\n(function (SemanticTokenTypes) {\r\n    SemanticTokenTypes[\"comment\"] = \"comment\";\r\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\r\n    SemanticTokenTypes[\"string\"] = \"string\";\r\n    SemanticTokenTypes[\"number\"] = \"number\";\r\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\r\n    SemanticTokenTypes[\"operator\"] = \"operator\";\r\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\r\n    SemanticTokenTypes[\"type\"] = \"type\";\r\n    SemanticTokenTypes[\"struct\"] = \"struct\";\r\n    SemanticTokenTypes[\"class\"] = \"class\";\r\n    SemanticTokenTypes[\"interface\"] = \"interface\";\r\n    SemanticTokenTypes[\"enum\"] = \"enum\";\r\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\r\n    SemanticTokenTypes[\"function\"] = \"function\";\r\n    SemanticTokenTypes[\"member\"] = \"member\";\r\n    SemanticTokenTypes[\"property\"] = \"property\";\r\n    SemanticTokenTypes[\"macro\"] = \"macro\";\r\n    SemanticTokenTypes[\"variable\"] = \"variable\";\r\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\r\n    SemanticTokenTypes[\"label\"] = \"label\";\r\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\r\n/**\r\n * A set of predefined token modifiers. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenModifiers;\r\n(function (SemanticTokenModifiers) {\r\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\r\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\r\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\r\n    SemanticTokenModifiers[\"reference\"] = \"reference\";\r\n    SemanticTokenModifiers[\"static\"] = \"static\";\r\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\r\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\r\n    SemanticTokenModifiers[\"async\"] = \"async\";\r\n    SemanticTokenModifiers[\"volatile\"] = \"volatile\";\r\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\r\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokens;\r\n(function (SemanticTokens) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\r\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\r\n    }\r\n    SemanticTokens.is = is;\r\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRequest;\r\n(function (SemanticTokensRequest) {\r\n    SemanticTokensRequest.method = 'textDocument/semanticTokens';\r\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\r\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensEditsRequest;\r\n(function (SemanticTokensEditsRequest) {\r\n    SemanticTokensEditsRequest.method = 'textDocument/semanticTokens/edits';\r\n    SemanticTokensEditsRequest.type = new messages_1.ProtocolRequestType(SemanticTokensEditsRequest.method);\r\n})(SemanticTokensEditsRequest = exports.SemanticTokensEditsRequest || (exports.SemanticTokensEditsRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRangeRequest;\r\n(function (SemanticTokensRangeRequest) {\r\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\r\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\r\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nexports.ConfigurationFeature = (Base) => {\r\n    return class extends Base {\r\n        getConfiguration(arg) {\r\n            if (!arg) {\r\n                return this._getConfiguration({});\r\n            }\r\n            else if (Is.string(arg)) {\r\n                return this._getConfiguration({ section: arg });\r\n            }\r\n            else {\r\n                return this._getConfiguration(arg);\r\n            }\r\n        }\r\n        _getConfiguration(arg) {\r\n            let params = {\r\n                items: Array.isArray(arg) ? arg : [arg]\r\n            };\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {\r\n                return Array.isArray(arg) ? result : result[0];\r\n            });\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=configuration.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.WorkspaceFoldersFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(capabilities) {\r\n            let workspaceCapabilities = capabilities.workspace;\r\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\r\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\r\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\r\n                });\r\n            }\r\n        }\r\n        getWorkspaceFolders() {\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\r\n        }\r\n        get onDidChangeWorkspaceFolders() {\r\n            if (!this._onDidChangeWorkspaceFolders) {\r\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\r\n            }\r\n            if (!this._unregistration) {\r\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\r\n            }\r\n            return this._onDidChangeWorkspaceFolders.event;\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=workspaceFolders.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst uuid_1 = require(\"./utils/uuid\");\r\nclass WorkDoneProgressImpl {\r\n    constructor(_connection, _token) {\r\n        this._connection = _connection;\r\n        this._token = _token;\r\n        WorkDoneProgressImpl.Instances.set(this._token, this);\r\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\r\n    }\r\n    get token() {\r\n        return this._source.token;\r\n    }\r\n    begin(title, percentage, message, cancellable) {\r\n        let param = {\r\n            kind: 'begin',\r\n            title,\r\n            percentage,\r\n            message,\r\n            cancellable\r\n        };\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\r\n    }\r\n    report(arg0, arg1) {\r\n        let param = {\r\n            kind: 'report'\r\n        };\r\n        if (typeof arg0 === 'number') {\r\n            param.percentage = arg0;\r\n            if (arg1 !== undefined) {\r\n                param.message = arg1;\r\n            }\r\n        }\r\n        else {\r\n            param.message = arg0;\r\n        }\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\r\n    }\r\n    done() {\r\n        WorkDoneProgressImpl.Instances.delete(this._token);\r\n        this._source.dispose();\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, { kind: 'end' });\r\n    }\r\n    cancel() {\r\n        this._source.cancel();\r\n    }\r\n}\r\nWorkDoneProgressImpl.Instances = new Map();\r\nclass NullProgress {\r\n    constructor() {\r\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\r\n    }\r\n    get token() {\r\n        return this._source.token;\r\n    }\r\n    begin() {\r\n    }\r\n    report() {\r\n    }\r\n    done() {\r\n    }\r\n}\r\nfunction attachWorkDone(connection, params) {\r\n    if (params === undefined || params.workDoneToken === undefined) {\r\n        return new NullProgress();\r\n    }\r\n    const token = params.workDoneToken;\r\n    delete params.workDoneToken;\r\n    return new WorkDoneProgressImpl(connection, token);\r\n}\r\nexports.attachWorkDone = attachWorkDone;\r\nexports.ProgressFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(capabilities) {\r\n            var _a;\r\n            if (((_a = capabilities === null || capabilities === void 0 ? void 0 : capabilities.window) === null || _a === void 0 ? void 0 : _a.workDoneProgress) === true) {\r\n                this._progressSupported = true;\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, (params) => {\r\n                    let progress = WorkDoneProgressImpl.Instances.get(params.token);\r\n                    if (progress !== undefined) {\r\n                        progress.cancel();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        attachWorkDoneProgress(token) {\r\n            if (token === undefined) {\r\n                return new NullProgress();\r\n            }\r\n            else {\r\n                return new WorkDoneProgressImpl(this.connection, token);\r\n            }\r\n        }\r\n        createWorkDoneProgress() {\r\n            if (this._progressSupported) {\r\n                const token = uuid_1.generateUuid();\r\n                return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, { token }).then(() => {\r\n                    const result = new WorkDoneProgressImpl(this.connection, token);\r\n                    return result;\r\n                });\r\n            }\r\n            else {\r\n                return Promise.resolve(new NullProgress());\r\n            }\r\n        }\r\n    };\r\n};\r\nvar ResultProgress;\r\n(function (ResultProgress) {\r\n    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\r\n})(ResultProgress || (ResultProgress = {}));\r\nclass ResultProgressImpl {\r\n    constructor(_connection, _token) {\r\n        this._connection = _connection;\r\n        this._token = _token;\r\n    }\r\n    report(data) {\r\n        this._connection.sendProgress(ResultProgress.type, this._token, data);\r\n    }\r\n}\r\nfunction attachPartialResult(connection, params) {\r\n    if (params === undefined || params.partialResultToken === undefined) {\r\n        return undefined;\r\n    }\r\n    const token = params.partialResultToken;\r\n    delete params.partialResultToken;\r\n    return new ResultProgressImpl(connection, token);\r\n}\r\nexports.attachPartialResult = attachPartialResult;\r\n//# sourceMappingURL=progress.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst url = require(\"url\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst child_process_1 = require(\"child_process\");\r\n/**\r\n * @deprecated Use the `vscode-uri` npm module which provides a more\r\n * complete implementation of handling VS Code URIs.\r\n */\r\nfunction uriToFilePath(uri) {\r\n    let parsed = url.parse(uri);\r\n    if (parsed.protocol !== 'file:' || !parsed.path) {\r\n        return undefined;\r\n    }\r\n    let segments = parsed.path.split('/');\r\n    for (var i = 0, len = segments.length; i < len; i++) {\r\n        segments[i] = decodeURIComponent(segments[i]);\r\n    }\r\n    if (process.platform === 'win32' && segments.length > 1) {\r\n        let first = segments[0];\r\n        let second = segments[1];\r\n        // Do we have a drive letter and we started with a / which is the\r\n        // case if the first segement is empty (see split above)\r\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\r\n            // Remove first slash\r\n            segments.shift();\r\n        }\r\n    }\r\n    return path.normalize(segments.join('/'));\r\n}\r\nexports.uriToFilePath = uriToFilePath;\r\nfunction isWindows() {\r\n    return process.platform === 'win32';\r\n}\r\nfunction resolve(moduleName, nodePath, cwd, tracer) {\r\n    const nodePathKey = 'NODE_PATH';\r\n    const app = [\r\n        'var p = process;',\r\n        'p.on(\\'message\\',function(m){',\r\n        'if(m.c===\\'e\\'){',\r\n        'p.exit(0);',\r\n        '}',\r\n        'else if(m.c===\\'rs\\'){',\r\n        'try{',\r\n        'var r=require.resolve(m.a);',\r\n        'p.send({c:\\'r\\',s:true,r:r});',\r\n        '}',\r\n        'catch(err){',\r\n        'p.send({c:\\'r\\',s:false});',\r\n        '}',\r\n        '}',\r\n        '});'\r\n    ].join('');\r\n    return new Promise((resolve, reject) => {\r\n        let env = process.env;\r\n        let newEnv = Object.create(null);\r\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\r\n        if (nodePath && fs.existsSync(nodePath) /* see issue 545 */) {\r\n            if (newEnv[nodePathKey]) {\r\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\r\n            }\r\n            else {\r\n                newEnv[nodePathKey] = nodePath;\r\n            }\r\n            if (tracer) {\r\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\r\n            }\r\n        }\r\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\r\n        try {\r\n            let cp = child_process_1.fork('', [], {\r\n                cwd: cwd,\r\n                env: newEnv,\r\n                execArgv: ['-e', app]\r\n            });\r\n            if (cp.pid === void 0) {\r\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\r\n                return;\r\n            }\r\n            cp.on('error', (error) => {\r\n                reject(error);\r\n            });\r\n            cp.on('message', (message) => {\r\n                if (message.c === 'r') {\r\n                    cp.send({ c: 'e' });\r\n                    if (message.s) {\r\n                        resolve(message.r);\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\r\n                    }\r\n                }\r\n            });\r\n            let message = {\r\n                c: 'rs',\r\n                a: moduleName\r\n            };\r\n            cp.send(message);\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\nexports.resolve = resolve;\r\n/**\r\n * Resolve the global npm package path.\r\n * @deprecated Since this depends on the used package manager and their version the best is that servers\r\n * implement this themselves since they know best what kind of package managers to support.\r\n * @param tracer the tracer to use\r\n */\r\nfunction resolveGlobalNodePath(tracer) {\r\n    let npmCommand = 'npm';\r\n    const env = Object.create(null);\r\n    Object.keys(process.env).forEach(key => env[key] = process.env[key]);\r\n    env['NO_UPDATE_NOTIFIER'] = 'true';\r\n    const options = {\r\n        encoding: 'utf8',\r\n        env\r\n    };\r\n    if (isWindows()) {\r\n        npmCommand = 'npm.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let stdout = child_process_1.spawnSync(npmCommand, ['config', 'get', 'prefix'], options).stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'npm config get prefix' didn't return a value.`);\r\n            }\r\n            return undefined;\r\n        }\r\n        let prefix = stdout.trim();\r\n        if (tracer) {\r\n            tracer(`'npm config get prefix' value is: ${prefix}`);\r\n        }\r\n        if (prefix.length > 0) {\r\n            if (isWindows()) {\r\n                return path.join(prefix, 'node_modules');\r\n            }\r\n            else {\r\n                return path.join(prefix, 'lib', 'node_modules');\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\r\n/*\r\n * Resolve the global yarn pakage path.\r\n * @deprecated Since this depends on the used package manager and their version the best is that servers\r\n * implement this themselves since they know best what kind of package managers to support.\r\n * @param tracer the tracer to use\r\n */\r\nfunction resolveGlobalYarnPath(tracer) {\r\n    let yarnCommand = 'yarn';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        yarnCommand = 'yarn.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let results = child_process_1.spawnSync(yarnCommand, ['global', 'dir', '--json'], options);\r\n        let stdout = results.stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'yarn global dir' didn't return a value.`);\r\n                if (results.stderr) {\r\n                    tracer(results.stderr);\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        let lines = stdout.trim().split(/\\r?\\n/);\r\n        for (let line of lines) {\r\n            try {\r\n                let yarn = JSON.parse(line);\r\n                if (yarn.type === 'log') {\r\n                    return path.join(yarn.data, 'node_modules');\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Do nothing. Ignore the line\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\r\nvar FileSystem;\r\n(function (FileSystem) {\r\n    let _isCaseSensitive = undefined;\r\n    function isCaseSensitive() {\r\n        if (_isCaseSensitive !== void 0) {\r\n            return _isCaseSensitive;\r\n        }\r\n        if (process.platform === 'win32') {\r\n            _isCaseSensitive = false;\r\n        }\r\n        else {\r\n            // convert current file name to upper case / lower case and check if file exists\r\n            // (guards against cases when name is already all uppercase or lowercase)\r\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\r\n        }\r\n        return _isCaseSensitive;\r\n    }\r\n    FileSystem.isCaseSensitive = isCaseSensitive;\r\n    function isParent(parent, child) {\r\n        if (isCaseSensitive()) {\r\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\r\n        }\r\n        else {\r\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) === 0;\r\n        }\r\n    }\r\n    FileSystem.isParent = isParent;\r\n})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));\r\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\r\n    if (nodePath) {\r\n        if (!path.isAbsolute(nodePath)) {\r\n            nodePath = path.join(workspaceRoot, nodePath);\r\n        }\r\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\r\n            if (FileSystem.isParent(nodePath, value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\r\n            }\r\n        }).then(undefined, (_error) => {\r\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n        });\r\n    }\r\n    else {\r\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n    }\r\n}\r\nexports.resolveModulePath = resolveModulePath;\r\n//# sourceMappingURL=files.js.map","module.exports = require(\"child_process\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.CallHierarchyFeature = (Base) => {\r\n    return class extends Base {\r\n        get callHierarchy() {\r\n            return {\r\n                onPrepare: (handler) => {\r\n                    this.connection.onRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\r\n                    });\r\n                },\r\n                onIncomingCalls: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                },\r\n                onOutgoingCalls: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=callHierarchy.proposed.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.SemanticTokensFeature = (Base) => {\r\n    return class extends Base {\r\n        get semanticTokens() {\r\n            return {\r\n                on: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                },\r\n                onEdits: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                },\r\n                onRange: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n};\r\nclass SemanticTokensBuilder {\r\n    constructor() {\r\n        this._prevData = undefined;\r\n        this.initialize();\r\n    }\r\n    initialize() {\r\n        this._id = Date.now();\r\n        this._prevLine = 0;\r\n        this._prevChar = 0;\r\n        this._data = [];\r\n        this._dataLen = 0;\r\n    }\r\n    push(line, char, length, tokenType, tokenModifiers) {\r\n        let pushLine = line;\r\n        let pushChar = char;\r\n        if (this._dataLen > 0) {\r\n            pushLine -= this._prevLine;\r\n            if (pushLine === 0) {\r\n                pushChar -= this._prevChar;\r\n            }\r\n        }\r\n        this._data[this._dataLen++] = pushLine;\r\n        this._data[this._dataLen++] = pushChar;\r\n        this._data[this._dataLen++] = length;\r\n        this._data[this._dataLen++] = tokenType;\r\n        this._data[this._dataLen++] = tokenModifiers;\r\n        this._prevLine = line;\r\n        this._prevChar = char;\r\n    }\r\n    get id() {\r\n        return this._id.toString();\r\n    }\r\n    previousResult(id) {\r\n        if (this.id === id) {\r\n            this._prevData = this._data;\r\n        }\r\n        this.initialize();\r\n    }\r\n    build() {\r\n        this._prevData = undefined;\r\n        return {\r\n            resultId: this.id,\r\n            data: this._data\r\n        };\r\n    }\r\n    canBuildEdits() {\r\n        return this._prevData !== undefined;\r\n    }\r\n    buildEdits() {\r\n        if (this._prevData !== undefined) {\r\n            const prevDataLength = this._prevData.length;\r\n            const dataLength = this._data.length;\r\n            let startIndex = 0;\r\n            while (startIndex < dataLength && startIndex < prevDataLength && this._prevData[startIndex] === this._data[startIndex]) {\r\n                startIndex++;\r\n            }\r\n            if (startIndex < dataLength && startIndex < prevDataLength) {\r\n                // Find end index\r\n                let endIndex = 0;\r\n                while (endIndex < dataLength && endIndex < prevDataLength && this._prevData[prevDataLength - 1 - endIndex] === this._data[dataLength - 1 - endIndex]) {\r\n                    endIndex++;\r\n                }\r\n                const newData = this._data.slice(startIndex, dataLength - endIndex);\r\n                const result = {\r\n                    resultId: this.id,\r\n                    edits: [\r\n                        { start: startIndex, deleteCount: prevDataLength - endIndex - startIndex, data: newData }\r\n                    ]\r\n                };\r\n                return result;\r\n            }\r\n            else if (startIndex < dataLength) {\r\n                return { resultId: this.id, edits: [\r\n                        { start: startIndex, deleteCount: 0, data: this._data.slice(startIndex) }\r\n                    ] };\r\n            }\r\n            else if (startIndex < prevDataLength) {\r\n                return { resultId: this.id, edits: [\r\n                        { start: startIndex, deleteCount: prevDataLength - startIndex }\r\n                    ] };\r\n            }\r\n            else {\r\n                return { resultId: this.id, edits: [] };\r\n            }\r\n        }\r\n        else {\r\n            return this.build();\r\n        }\r\n    }\r\n}\r\nexports.SemanticTokensBuilder = SemanticTokensBuilder;\r\n//# sourceMappingURL=sematicTokens.proposed.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar url_1 = require(\"url\");\nvar https = require(\"https\");\nvar http = require(\"http\");\nvar HttpProxyAgent = require(\"http-proxy-agent\");\nvar HttpsProxyAgent = require(\"https-proxy-agent\");\nvar zlib = require(\"zlib\");\nvar nls = require(\"vscode-nls\");\nnls.config(process.env['VSCODE_NLS_CONFIG']);\nvar localize = nls.loadMessageBundle();\nvar proxyUrl = null;\nvar strictSSL = true;\nfunction configure(_proxyUrl, _strictSSL) {\n    proxyUrl = _proxyUrl;\n    strictSSL = _strictSSL;\n}\nexports.configure = configure;\nfunction xhr(options) {\n    var agent = getProxyAgent(options.url, { proxyUrl: proxyUrl, strictSSL: strictSSL });\n    options = assign({}, options);\n    options = assign(options, { agent: agent, strictSSL: strictSSL });\n    if (typeof options.followRedirects !== 'number') {\n        options.followRedirects = 5;\n    }\n    return request(options).then(function (result) { return new Promise(function (c, e) {\n        var res = result.res;\n        var readable = res;\n        var encoding = res.headers && res.headers['content-encoding'];\n        var isCompleted = false;\n        if (encoding === 'gzip') {\n            var gunzip = zlib.createGunzip();\n            res.pipe(gunzip);\n            readable = gunzip;\n        }\n        else if (encoding === 'deflate') {\n            var inflate = zlib.createInflate();\n            res.pipe(inflate);\n            readable = inflate;\n        }\n        var data = [];\n        readable.on('data', function (c) { return data.push(c); });\n        readable.on('end', function () {\n            if (isCompleted) {\n                return;\n            }\n            isCompleted = true;\n            if (options.followRedirects > 0 && (res.statusCode >= 300 && res.statusCode <= 303 || res.statusCode === 307)) {\n                var location = res.headers['location'];\n                if (location) {\n                    var newOptions = {\n                        type: options.type, url: location, user: options.user, password: options.password, responseType: options.responseType, headers: options.headers,\n                        timeout: options.timeout, followRedirects: options.followRedirects - 1, data: options.data\n                    };\n                    xhr(newOptions).then(c, e);\n                    return;\n                }\n            }\n            var response = {\n                responseText: data.join(''),\n                status: res.statusCode\n            };\n            if ((res.statusCode >= 200 && res.statusCode < 300) || res.statusCode === 1223) {\n                c(response);\n            }\n            else {\n                e(response);\n            }\n        });\n        readable.on('error', function (err) {\n            var response = {\n                responseText: localize('error', 'Unable to access {0}. Error: {1}', options.url, err.message),\n                status: 500\n            };\n            isCompleted = true;\n            e(response);\n        });\n    }); }, function (err) {\n        var message;\n        if (agent) {\n            message = localize('error.cannot.connect.proxy', 'Unable to connect to {0} through a proxy . Error: {1}', options.url, err.message);\n        }\n        else {\n            message = localize('error.cannot.connect', 'Unable to connect to {0}. Error: {1}', options.url, err.message);\n        }\n        return Promise.reject({\n            responseText: message,\n            status: 404\n        });\n    });\n}\nexports.xhr = xhr;\nfunction assign(destination) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) { return Object.keys(source).forEach(function (key) { return destination[key] = source[key]; }); });\n    return destination;\n}\nfunction request(options) {\n    var req;\n    return new Promise(function (c, e) {\n        var endpoint = url_1.parse(options.url);\n        var opts = {\n            hostname: endpoint.hostname,\n            port: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n            path: endpoint.path,\n            method: options.type || 'GET',\n            headers: options.headers,\n            agent: options.agent,\n            rejectUnauthorized: (typeof options.strictSSL === 'boolean') ? options.strictSSL : true\n        };\n        if (options.user && options.password) {\n            opts.auth = options.user + ':' + options.password;\n        }\n        var handler = function (res) {\n            if (res.statusCode >= 300 && res.statusCode < 400 && options.followRedirects && options.followRedirects > 0 && res.headers['location']) {\n                c(request(assign({}, options, {\n                    url: res.headers['location'],\n                    followRedirects: options.followRedirects - 1\n                })));\n            }\n            else {\n                c({ req: req, res: res });\n            }\n        };\n        if (endpoint.protocol === 'https:') {\n            req = https.request(opts, handler);\n        }\n        else {\n            req = http.request(opts, handler);\n        }\n        req.on('error', e);\n        if (options.timeout) {\n            req.setTimeout(options.timeout);\n        }\n        if (options.data) {\n            req.write(options.data);\n        }\n        req.end();\n    });\n}\nfunction getErrorStatusDescription(status) {\n    if (status < 400) {\n        return void 0;\n    }\n    switch (status) {\n        case 400: return localize('status.400', 'Bad request. The request cannot be fulfilled due to bad syntax.');\n        case 401: return localize('status.401', 'Unauthorized. The server is refusing to respond.');\n        case 403: return localize('status.403', 'Forbidden. The server is refusing to respond.');\n        case 404: return localize('status.404', 'Not Found. The requested location could not be found.');\n        case 405: return localize('status.405', 'Method not allowed. A request was made using a request method not supported by that location.');\n        case 406: return localize('status.406', 'Not Acceptable. The server can only generate a response that is not accepted by the client.');\n        case 407: return localize('status.407', 'Proxy Authentication Required. The client must first authenticate itself with the proxy.');\n        case 408: return localize('status.408', 'Request Timeout. The server timed out waiting for the request.');\n        case 409: return localize('status.409', 'Conflict. The request could not be completed because of a conflict in the request.');\n        case 410: return localize('status.410', 'Gone. The requested page is no longer available.');\n        case 411: return localize('status.411', 'Length Required. The \"Content-Length\" is not defined.');\n        case 412: return localize('status.412', 'Precondition Failed. The precondition given in the request evaluated to false by the server.');\n        case 413: return localize('status.413', 'Request Entity Too Large. The server will not accept the request, because the request entity is too large.');\n        case 414: return localize('status.414', 'Request-URI Too Long. The server will not accept the request, because the URL is too long.');\n        case 415: return localize('status.415', 'Unsupported Media Type. The server will not accept the request, because the media type is not supported.');\n        case 500: return localize('status.500', 'Internal Server Error.');\n        case 501: return localize('status.501', 'Not Implemented. The server either does not recognize the request method, or it lacks the ability to fulfill the request.');\n        case 503: return localize('status.503', 'Service Unavailable. The server is currently unavailable (overloaded or down).');\n        default: return localize('status.416', 'HTTP status code {0}', status);\n    }\n}\nexports.getErrorStatusDescription = getErrorStatusDescription;\n// proxy handling\nfunction getSystemProxyURI(requestURL) {\n    if (requestURL.protocol === 'http:') {\n        return process.env.HTTP_PROXY || process.env.http_proxy || null;\n    }\n    else if (requestURL.protocol === 'https:') {\n        return process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n    }\n    return null;\n}\nfunction getProxyAgent(rawRequestURL, options) {\n    if (options === void 0) { options = {}; }\n    var requestURL = url_1.parse(rawRequestURL);\n    var proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n    if (!proxyURL) {\n        return null;\n    }\n    var proxyEndpoint = url_1.parse(proxyURL);\n    if (!/^https?:$/.test(proxyEndpoint.protocol)) {\n        return null;\n    }\n    var opts = {\n        host: proxyEndpoint.hostname,\n        port: Number(proxyEndpoint.port),\n        auth: proxyEndpoint.auth,\n        rejectUnauthorized: (typeof options.strictSSL === 'boolean') ? options.strictSSL : true\n    };\n    return requestURL.protocol === 'http:' ? new HttpProxyAgent(opts) : new HttpsProxyAgent(opts);\n}\n","module.exports = require(\"http\");","\n/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('http-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpProxyAgent;\n\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\n\nfunction HttpProxyAgent (opts) {\n  if (!(this instanceof HttpProxyAgent)) return new HttpProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts) throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n  debug('creating new HttpProxyAgent instance: %o', opts);\n  Agent.call(this, opts);\n\n  var proxy = Object.assign({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n}\ninherits(HttpProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpProxyAgent.prototype.callback = function connect (req, opts, fn) {\n  var proxy = this.proxy;\n\n  // change the `http.ClientRequest` instance's \"path\" field\n  // to the absolute path of the URL that will be requested\n  var parsed = url.parse(req.path);\n  if (null == parsed.protocol) parsed.protocol = 'http:';\n  if (null == parsed.hostname) parsed.hostname = opts.hostname || opts.host;\n  if (null == parsed.port) parsed.port = opts.port;\n  if (parsed.port == 80) {\n    // if port is 80, then we can remove the port so that the\n    // \":80\" portion is not on the produced URL\n    delete parsed.port;\n  }\n  var absolute = url.format(parsed);\n  req.path = absolute;\n\n  // inject the `Proxy-Authorization` header if necessary\n  if (proxy.auth) {\n    req.setHeader(\n      'Proxy-Authorization',\n      'Basic ' + Buffer.from(proxy.auth).toString('base64')\n    );\n  }\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // at this point, the http ClientRequest's internal `_header` field might have\n  // already been set. If this is the case then we'll need to re-generate the\n  // string since we just changed the `req.path`\n  if (req._header) {\n    debug('regenerating stored HTTP header string for request');\n    req._header = null;\n    req._implicitHeader();\n    if (req.output && req.output.length > 0) {\n      debug('patching connection write() output buffer with updated header');\n      // the _header has already been queued to be written to the socket\n      var first = req.output[0];\n      var endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n      req.output[0] = req._header + first.substring(endOfHeaders);\n      debug('output buffer: %o', req.output);\n    }\n  }\n\n  fn(null, socket);\n};\n","'use strict';\n\n/**\n * Module dependencies.\n */\n\nrequire('./patch-core');\nconst inherits = require('util').inherits;\nconst promisify = require('es6-promisify');\nconst EventEmitter = require('events').EventEmitter;\n\n/**\n * Module exports.\n */\n\nmodule.exports = Agent;\n\n/**\n * Base `http.Agent` implementation.\n * No pooling/keep-alive is implemented by default.\n *\n * @param {Function} callback\n * @api public\n */\n\nfunction Agent(callback, _opts) {\n  if (!(this instanceof Agent)) {\n    return new Agent(callback, _opts);\n  }\n\n  EventEmitter.call(this);\n\n  let opts = _opts;\n  if ('function' === typeof callback) {\n    this.callback = callback;\n  } else if (callback) {\n    opts = callback;\n  }\n\n  // timeout for the socket to be returned from the callback\n  this.timeout = (opts && opts.timeout) || null;\n\n  this.options = opts;\n}\ninherits(Agent, EventEmitter);\n\n/**\n * Override this function in your subclass!\n */\nAgent.prototype.callback = function callback(req, opts) {\n  throw new Error(\n    '\"agent-base\" has no default implementation, you must subclass and override `callback()`'\n  );\n};\n\n/**\n * Called by node-core's \"_http_client.js\" module when creating\n * a new HTTP request with this Agent instance.\n *\n * @api public\n */\n\nAgent.prototype.addRequest = function addRequest(\n  req,\n  _opts\n) {\n  const ownOpts = Object.assign({}, _opts);\n\n  // set default `host` for HTTP to localhost\n  if (null == ownOpts.host) {\n    ownOpts.host = 'localhost';\n  }\n\n  // set default `port` for HTTP if none was explicitly specified\n  if (null == ownOpts.port) {\n    ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n  }\n\n  const opts = Object.assign({}, this.options, ownOpts);\n\n  if (opts.host && opts.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete opts.path;\n  }\n\n  delete opts.agent;\n  delete opts.hostname;\n  delete opts._defaultAgent;\n  delete opts.defaultPort;\n  delete opts.createConnection;\n\n  // hint to use \"Connection: close\"\n  // XXX: non-documented `http` module API :(\n  req._last = true;\n  req.shouldKeepAlive = false;\n\n  // create the `stream.Duplex` instance\n  let timeout;\n  let timedOut = false;\n  const timeoutMs = this.timeout;\n\n  function onerror(err) {\n    if (req._hadError) return;\n    req.emit('error', err);\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req._hadError = true;\n  }\n\n  function ontimeout() {\n    timedOut = true;\n    const err = new Error(\n      'A \"socket\" was not created for HTTP request before ' + timeoutMs + 'ms'\n    );\n    err.code = 'ETIMEOUT';\n    onerror(err);\n  }\n\n  function callbackError(err) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n    }\n    onerror(err);\n  }\n\n  function onsocket(socket) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n    }\n    if (socket) {\n      req.onSocket(socket);\n    } else {\n      const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n      onerror(err);\n    }\n  }\n\n  if (this.callback.length >= 3) {\n    // legacy callback function, convert to Promise\n    this.callback = promisify(this.callback, this);\n  }\n\n  if (timeoutMs > 0) {\n    timeout = setTimeout(ontimeout, timeoutMs);\n  }\n\n  try {\n    Promise.resolve(this.callback(req, opts))\n      .then(onsocket, callbackError);\n  } catch (err) {\n    Promise.reject(err)\n      .catch(callbackError);\n  }\n};\n","'use strict';\n\nconst url = require('url');\nconst https = require('https');\n\n/**\n * This currently needs to be applied to all Node.js versions\n * in order to determine if the `req` is an HTTP or HTTPS request.\n *\n * There is currently no PR attempting to move this property upstream.\n */\nhttps.request = (function(request) {\n  return function(_options, cb) {\n    let options;\n    if (typeof _options === 'string') {\n      options = url.parse(_options);\n    } else {\n      options = Object.assign({}, _options);\n    }\n    if (null == options.port) {\n      options.port = 443;\n    }\n    options.secureEndpoint = true;\n    return request.call(https, options, cb);\n  };\n})(https.request);\n\n/**\n * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the\n * patched `https.request()`.\n *\n * Ref: https://github.com/nodejs/node/commit/5118f31\n */\nhttps.get = function(options, cb) {\n  const req = https.request(options, cb);\n  req.end();\n  return req;\n};\n","\"use strict\";\n\n/* global self, window, module, global, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    var globalObject = void 0;\n\n    function isFunction(x) {\n        return typeof x === \"function\";\n    }\n\n    // Seek the global object\n    if (global !== undefined) {\n        globalObject = global;\n    } else if (window !== undefined && window.document) {\n        globalObject = window;\n    } else {\n        globalObject = self;\n    }\n\n    // Test for any native promise implementation, and if that\n    // implementation appears to conform to the specificaton.\n    // This code mostly nicked from the es6-promise module polyfill\n    // and then fooled with.\n    var hasPromiseSupport = function () {\n\n        // No promise object at all, and it's a non-starter\n        if (!globalObject.hasOwnProperty(\"Promise\")) {\n            return false;\n        }\n\n        // There is a Promise object. Does it conform to the spec?\n        var P = globalObject.Promise;\n\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n            return false;\n        }\n\n        if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n            return false;\n        }\n\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        return function () {\n\n            var resolve = void 0;\n\n            var p = new globalObject.Promise(function (r) {\n                resolve = r;\n            });\n\n            if (p) {\n                return isFunction(resolve);\n            }\n\n            return false;\n        }();\n    }();\n\n    // Export the native Promise implementation if it\n    // looks like it matches the spec\n    if (hasPromiseSupport) {\n        return globalObject.Promise;\n    }\n\n    //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n    return require(\"es6-promise\").Promise;\n}();","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.1\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator$1(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate(input);\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nEnumerator$1.prototype._enumerate = function (input) {\n  for (var i = 0; this._state === PENDING && i < input.length; i++) {\n    this._eachEntry(input[i], i);\n  }\n};\n\nEnumerator$1.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$1 = c.resolve;\n\n  if (resolve$$1 === resolve$1) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise$2) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$1) {\n        return resolve$$1(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$1(entry), i);\n  }\n};\n\nEnumerator$1.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator$1.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all$1(entries) {\n  return new Enumerator$1(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race$1(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise$2(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise$2 ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise$2.all = all$1;\nPromise$2.race = race$1;\nPromise$2.resolve = resolve$1;\nPromise$2.reject = reject$1;\nPromise$2._setScheduler = setScheduler;\nPromise$2._setAsap = setAsap;\nPromise$2._asap = asap;\n\nPromise$2.prototype = {\n  constructor: Promise$2,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\n/*global self*/\nfunction polyfill$1() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise$2;\n}\n\n// Strange compat..\nPromise$2.polyfill = polyfill$1;\nPromise$2.Promise = Promise$2;\n\nreturn Promise$2;\n\n})));\n\n//# sourceMappingURL=es6-promise.map\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\n\ntry {\n  var supportsColor = require('supports-color');\n  if (supportsColor && supportsColor.level >= 2) {\n    exports.colors = [\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\n      205, 206, 207, 208, 209, 214, 215, 220, 221\n    ];\n  }\n} catch (err) {\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(process.stderr.fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  } else {\n    return new Date().toISOString() + ' ';\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","module.exports = require(\"tty\");","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar assert = require('assert');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('https-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpsProxyAgent;\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * @api public\n */\n\nfunction HttpsProxyAgent(opts) {\n\tif (!(this instanceof HttpsProxyAgent)) return new HttpsProxyAgent(opts);\n\tif ('string' == typeof opts) opts = url.parse(opts);\n\tif (!opts)\n\t\tthrow new Error(\n\t\t\t'an HTTP(S) proxy server `host` and `port` must be specified!'\n\t\t);\n\tdebug('creating new HttpsProxyAgent instance: %o', opts);\n\tAgent.call(this, opts);\n\n\tvar proxy = Object.assign({}, opts);\n\n\t// if `true`, then connect to the proxy server over TLS. defaults to `false`.\n\tthis.secureProxy = proxy.protocol\n\t\t? /^https:?$/i.test(proxy.protocol)\n\t\t: false;\n\n\t// prefer `hostname` over `host`, and set the `port` if needed\n\tproxy.host = proxy.hostname || proxy.host;\n\tproxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n\t// ALPN is supported by Node.js >= v5.\n\t// attempt to negotiate http/1.1 for proxy servers that support http/2\n\tif (this.secureProxy && !('ALPNProtocols' in proxy)) {\n\t\tproxy.ALPNProtocols = ['http 1.1'];\n\t}\n\n\tif (proxy.host && proxy.path) {\n\t\t// if both a `host` and `path` are specified then it's most likely the\n\t\t// result of a `url.parse()` call... we need to remove the `path` portion so\n\t\t// that `net.connect()` doesn't attempt to open that as a unix socket file.\n\t\tdelete proxy.path;\n\t\tdelete proxy.pathname;\n\t}\n\n\tthis.proxy = proxy;\n\tthis.defaultPort = 443;\n}\ninherits(HttpsProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\n\tvar proxy = this.proxy;\n\n\t// create a socket connection to the proxy server\n\tvar socket;\n\tif (this.secureProxy) {\n\t\tsocket = tls.connect(proxy);\n\t} else {\n\t\tsocket = net.connect(proxy);\n\t}\n\n\t// we need to buffer any HTTP traffic that happens with the proxy before we get\n\t// the CONNECT response, so that if the response is anything other than an \"200\"\n\t// response code, then we can re-play the \"data\" events on the socket once the\n\t// HTTP parser is hooked up...\n\tvar buffers = [];\n\tvar buffersLength = 0;\n\n\tfunction read() {\n\t\tvar b = socket.read();\n\t\tif (b) ondata(b);\n\t\telse socket.once('readable', read);\n\t}\n\n\tfunction cleanup() {\n\t\tsocket.removeListener('end', onend);\n\t\tsocket.removeListener('error', onerror);\n\t\tsocket.removeListener('close', onclose);\n\t\tsocket.removeListener('readable', read);\n\t}\n\n\tfunction onclose(err) {\n\t\tdebug('onclose had error %o', err);\n\t}\n\n\tfunction onend() {\n\t\tdebug('onend');\n\t}\n\n\tfunction onerror(err) {\n\t\tcleanup();\n\t\tfn(err);\n\t}\n\n\tfunction ondata(b) {\n\t\tbuffers.push(b);\n\t\tbuffersLength += b.length;\n\t\tvar buffered = Buffer.concat(buffers, buffersLength);\n\t\tvar str = buffered.toString('ascii');\n\n\t\tif (!~str.indexOf('\\r\\n\\r\\n')) {\n\t\t\t// keep buffering\n\t\t\tdebug('have not received end of HTTP headers yet...');\n\t\t\tread();\n\t\t\treturn;\n\t\t}\n\n\t\tvar firstLine = str.substring(0, str.indexOf('\\r\\n'));\n\t\tvar statusCode = +firstLine.split(' ')[1];\n\t\tdebug('got proxy server response: %o', firstLine);\n\n\t\tif (200 == statusCode) {\n\t\t\t// 200 Connected status code!\n\t\t\tvar sock = socket;\n\n\t\t\t// nullify the buffered data since we won't be needing it\n\t\t\tbuffers = buffered = null;\n\n\t\t\tif (opts.secureEndpoint) {\n\t\t\t\t// since the proxy is connecting to an SSL server, we have\n\t\t\t\t// to upgrade this socket connection to an SSL connection\n\t\t\t\tdebug(\n\t\t\t\t\t'upgrading proxy-connected socket to TLS connection: %o',\n\t\t\t\t\topts.host\n\t\t\t\t);\n\t\t\t\topts.socket = socket;\n\t\t\t\topts.servername = opts.servername || opts.host;\n\t\t\t\topts.host = null;\n\t\t\t\topts.hostname = null;\n\t\t\t\topts.port = null;\n\t\t\t\tsock = tls.connect(opts);\n\t\t\t}\n\n\t\t\tcleanup();\n\t\t\treq.once('socket', resume);\n\t\t\tfn(null, sock);\n\t\t} else {\n\t\t\t// some other status code that's not 200... need to re-play the HTTP header\n\t\t\t// \"data\" events onto the socket once the HTTP machinery is attached so\n\t\t\t// that the node core `http` can parse and handle the error status code\n\t\t\tcleanup();\n\n\t\t\t// the original socket is closed, and a new closed socket is\n\t\t\t// returned instead, so that the proxy doesn't get the HTTP request\n\t\t\t// written to it (which may contain `Authorization` headers or other\n\t\t\t// sensitive data).\n\t\t\t//\n\t\t\t// See: https://hackerone.com/reports/541502\n\t\t\tsocket.destroy();\n\t\t\tsocket = new net.Socket();\n\t\t\tsocket.readable = true;\n\n\n\t\t\t// save a reference to the concat'd Buffer for the `onsocket` callback\n\t\t\tbuffers = buffered;\n\n\t\t\t// need to wait for the \"socket\" event to re-play the \"data\" events\n\t\t\treq.once('socket', onsocket);\n\n\t\t\tfn(null, socket);\n\t\t}\n\t}\n\n\tfunction onsocket(socket) {\n\t\tdebug('replaying proxy buffer for failed request');\n\t\tassert(socket.listenerCount('data') > 0);\n\n\t\t// replay the \"buffers\" Buffer onto the `socket`, since at this point\n\t\t// the HTTP module machinery has been hooked up for the user\n\t\tsocket.push(buffers);\n\n\t\t// nullify the cached Buffer instance\n\t\tbuffers = null;\n\t}\n\n\tsocket.on('error', onerror);\n\tsocket.on('close', onclose);\n\tsocket.on('end', onend);\n\n\tread();\n\n\tvar hostname = opts.host + ':' + opts.port;\n\tvar msg = 'CONNECT ' + hostname + ' HTTP/1.1\\r\\n';\n\n\tvar headers = Object.assign({}, proxy.headers);\n\tif (proxy.auth) {\n\t\theaders['Proxy-Authorization'] =\n\t\t\t'Basic ' + Buffer.from(proxy.auth).toString('base64');\n\t}\n\n\t// the Host header should only include the port\n\t// number when it is a non-standard port\n\tvar host = opts.host;\n\tif (!isDefaultPort(opts.port, opts.secureEndpoint)) {\n\t\thost += ':' + opts.port;\n\t}\n\theaders['Host'] = host;\n\n\theaders['Connection'] = 'close';\n\tObject.keys(headers).forEach(function(name) {\n\t\tmsg += name + ': ' + headers[name] + '\\r\\n';\n\t});\n\n\tsocket.write(msg + '\\r\\n');\n};\n\n/**\n * Resumes a socket.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket to resume\n * @api public\n */\n\nfunction resume(socket) {\n\tsocket.resume();\n}\n\nfunction isDefaultPort(port, secure) {\n\treturn Boolean((!secure && port === 80) || (secure && port === 443));\n}\n","module.exports = require(\"assert\");","'use strict';\nrequire('./patch-core');\nconst inherits = require('util').inherits;\nconst promisify = require('es6-promisify');\nconst EventEmitter = require('events').EventEmitter;\n\nmodule.exports = Agent;\n\nfunction isAgent(v) {\n  return v && typeof v.addRequest === 'function';\n}\n\n/**\n * Base `http.Agent` implementation.\n * No pooling/keep-alive is implemented by default.\n *\n * @param {Function} callback\n * @api public\n */\nfunction Agent(callback, _opts) {\n  if (!(this instanceof Agent)) {\n    return new Agent(callback, _opts);\n  }\n\n  EventEmitter.call(this);\n\n  // The callback gets promisified if it has 3 parameters\n  // (i.e. it has a callback function) lazily\n  this._promisifiedCallback = false;\n\n  let opts = _opts;\n  if ('function' === typeof callback) {\n    this.callback = callback;\n  } else if (callback) {\n    opts = callback;\n  }\n\n  // timeout for the socket to be returned from the callback\n  this.timeout = (opts && opts.timeout) || null;\n\n  this.options = opts;\n}\ninherits(Agent, EventEmitter);\n\n/**\n * Override this function in your subclass!\n */\nAgent.prototype.callback = function callback(req, opts) {\n  throw new Error(\n    '\"agent-base\" has no default implementation, you must subclass and override `callback()`'\n  );\n};\n\n/**\n * Called by node-core's \"_http_client.js\" module when creating\n * a new HTTP request with this Agent instance.\n *\n * @api public\n */\nAgent.prototype.addRequest = function addRequest(req, _opts) {\n  const ownOpts = Object.assign({}, _opts);\n\n  // Set default `host` for HTTP to localhost\n  if (null == ownOpts.host) {\n    ownOpts.host = 'localhost';\n  }\n\n  // Set default `port` for HTTP if none was explicitly specified\n  if (null == ownOpts.port) {\n    ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n  }\n\n  const opts = Object.assign({}, this.options, ownOpts);\n\n  if (opts.host && opts.path) {\n    // If both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete opts.path;\n  }\n\n  delete opts.agent;\n  delete opts.hostname;\n  delete opts._defaultAgent;\n  delete opts.defaultPort;\n  delete opts.createConnection;\n\n  // Hint to use \"Connection: close\"\n  // XXX: non-documented `http` module API :(\n  req._last = true;\n  req.shouldKeepAlive = false;\n\n  // Create the `stream.Duplex` instance\n  let timeout;\n  let timedOut = false;\n  const timeoutMs = this.timeout;\n  const freeSocket = this.freeSocket;\n\n  function onerror(err) {\n    if (req._hadError) return;\n    req.emit('error', err);\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req._hadError = true;\n  }\n\n  function ontimeout() {\n    timeout = null;\n    timedOut = true;\n    const err = new Error(\n      'A \"socket\" was not created for HTTP request before ' + timeoutMs + 'ms'\n    );\n    err.code = 'ETIMEOUT';\n    onerror(err);\n  }\n\n  function callbackError(err) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    onerror(err);\n  }\n\n  function onsocket(socket) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    if (isAgent(socket)) {\n      // `socket` is actually an http.Agent instance, so relinquish\n      // responsibility for this `req` to the Agent from here on\n      socket.addRequest(req, opts);\n    } else if (socket) {\n      function onfree() {\n        freeSocket(socket, opts);\n      }\n      socket.on('free', onfree);\n      req.onSocket(socket);\n    } else {\n      const err = new Error(\n        'no Duplex stream was returned to agent-base for `' + req.method + ' ' + req.path + '`'\n      );\n      onerror(err);\n    }\n  }\n\n  if (!this._promisifiedCallback && this.callback.length >= 3) {\n    // Legacy callback function - convert to a Promise\n    this.callback = promisify(this.callback, this);\n    this._promisifiedCallback = true;\n  }\n\n  if (timeoutMs > 0) {\n    timeout = setTimeout(ontimeout, timeoutMs);\n  }\n\n  try {\n    Promise.resolve(this.callback(req, opts)).then(onsocket, callbackError);\n  } catch (err) {\n    Promise.reject(err).catch(callbackError);\n  }\n};\n\nAgent.prototype.freeSocket = function freeSocket(socket, opts) {\n  // TODO reuse sockets\n  socket.destroy();\n};\n","'use strict';\nconst url = require('url');\nconst https = require('https');\n\n/**\n * This currently needs to be applied to all Node.js versions\n * in order to determine if the `req` is an HTTP or HTTPS request.\n *\n * There is currently no PR attempting to move this property upstream.\n */\nconst patchMarker = \"__agent_base_https_request_patched__\";\nif (!https.request[patchMarker]) {\n  https.request = (function(request) {\n    return function(_options, cb) {\n      let options;\n      if (typeof _options === 'string') {\n        options = url.parse(_options);\n      } else {\n        options = Object.assign({}, _options);\n      }\n      if (null == options.port) {\n        options.port = 443;\n      }\n      options.secureEndpoint = true;\n      return request.call(https, options, cb);\n    };\n  })(https.request);\n  https.request[patchMarker] = true;\n}\n\n/**\n * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the\n * patched `https.request()`.\n *\n * Ref: https://github.com/nodejs/node/commit/5118f31\n */\nhttps.get = function (_url, _options, cb) {\n    let options;\n    if (typeof _url === 'string' && _options && typeof _options !== 'function') {\n      options = Object.assign({}, url.parse(_url), _options);\n    } else if (!_options && !cb) {\n      options = _url;\n    } else if (!cb) {\n      options = _url;\n      cb = _options;\n    }\n\n  const req = https.request(options, cb);\n  req.end();\n  return req;\n};\n","module.exports = require(\"zlib\");","module.exports = require(\"timers\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, ResponseError, ErrorCodes } from 'vscode-languageserver';\n\nexport function formatError(message: string, err: any): string {\n\tif (err instanceof Error) {\n\t\tlet error = <Error>err;\n\t\treturn `${message}: ${error.message}\\n${error.stack}`;\n\t} else if (typeof err === 'string') {\n\t\treturn `${message}: ${err}`;\n\t} else if (err) {\n\t\treturn `${message}: ${err.toString()}`;\n\t}\n\treturn message;\n}\n\nexport function runSafeAsync<T>(func: () => Thenable<T>, errorVal: T, errorMessage: string, token: CancellationToken): Thenable<T | ResponseError<any>> {\n\treturn new Promise<T | ResponseError<any>>((resolve) => {\n\t\tsetImmediate(() => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tresolve(cancelValue());\n\t\t\t}\n\t\t\treturn func().then(result => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tresolve(cancelValue());\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t}, e => {\n\t\t\t\tconsole.error(formatError(errorMessage, e));\n\t\t\t\tresolve(errorVal);\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function runSafe<T, E>(func: () => T, errorVal: T, errorMessage: string, token: CancellationToken): Thenable<T | ResponseError<E>> {\n\treturn new Promise<T | ResponseError<E>>((resolve) => {\n\t\tsetImmediate(() => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tresolve(cancelValue());\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tlet result = func();\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tresolve(cancelValue());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(formatError(errorMessage, e));\n\t\t\t\t\tresolve(errorVal);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction cancelValue<E>() {\n\tconsole.log('cancelled');\n\treturn new ResponseError<E>(ErrorCodes.RequestCancelled, 'Request cancelled');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextDocument } from 'vscode-languageserver';\n\nexport interface LanguageModelCache<T> {\n\tget(document: TextDocument): T;\n\tonDocumentRemoved(document: TextDocument): void;\n\tdispose(): void;\n}\n\nexport function getLanguageModelCache<T>(maxEntries: number, cleanupIntervalTimeInSec: number, parse: (document: TextDocument) => T): LanguageModelCache<T> {\n\tlet languageModels: { [uri: string]: { version: number, languageId: string, cTime: number, languageModel: T } } = {};\n\tlet nModels = 0;\n\n\tlet cleanupInterval: NodeJS.Timer | undefined = undefined;\n\tif (cleanupIntervalTimeInSec > 0) {\n\t\tcleanupInterval = setInterval(() => {\n\t\t\tlet cutoffTime = Date.now() - cleanupIntervalTimeInSec * 1000;\n\t\t\tlet uris = Object.keys(languageModels);\n\t\t\tfor (let uri of uris) {\n\t\t\t\tlet languageModelInfo = languageModels[uri];\n\t\t\t\tif (languageModelInfo.cTime < cutoffTime) {\n\t\t\t\t\tdelete languageModels[uri];\n\t\t\t\t\tnModels--;\n\t\t\t\t}\n\t\t\t}\n\t\t}, cleanupIntervalTimeInSec * 1000);\n\t}\n\n\treturn {\n\t\tget(document: TextDocument): T {\n\t\t\tlet version = document.version;\n\t\t\tlet languageId = document.languageId;\n\t\t\tlet languageModelInfo = languageModels[document.uri];\n\t\t\tif (languageModelInfo && languageModelInfo.version === version && languageModelInfo.languageId === languageId) {\n\t\t\t\tlanguageModelInfo.cTime = Date.now();\n\t\t\t\treturn languageModelInfo.languageModel;\n\t\t\t}\n\t\t\tlet languageModel = parse(document);\n\t\t\tlanguageModels[document.uri] = { languageModel, version, languageId, cTime: Date.now() };\n\t\t\tif (!languageModelInfo) {\n\t\t\t\tnModels++;\n\t\t\t}\n\n\t\t\tif (nModels === maxEntries) {\n\t\t\t\tlet oldestTime = Number.MAX_VALUE;\n\t\t\t\tlet oldestUri = null;\n\t\t\t\tfor (let uri in languageModels) {\n\t\t\t\t\tlet languageModelInfo = languageModels[uri];\n\t\t\t\t\tif (languageModelInfo.cTime < oldestTime) {\n\t\t\t\t\t\toldestUri = uri;\n\t\t\t\t\t\toldestTime = languageModelInfo.cTime;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oldestUri) {\n\t\t\t\t\tdelete languageModels[oldestUri];\n\t\t\t\t\tnModels--;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn languageModel;\n\n\t\t},\n\t\tonDocumentRemoved(document: TextDocument) {\n\t\t\tlet uri = document.uri;\n\t\t\tif (languageModels[uri]) {\n\t\t\t\tdelete languageModels[uri];\n\t\t\t\tnModels--;\n\t\t\t}\n\t\t},\n\t\tdispose() {\n\t\t\tif (typeof cleanupInterval !== 'undefined') {\n\t\t\t\tclearInterval(cleanupInterval);\n\t\t\t\tcleanupInterval = undefined;\n\t\t\t\tlanguageModels = {};\n\t\t\t\tnModels = 0;\n\t\t\t}\n\t\t}\n\t};\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var len = text.length;\n    var pos = 0, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                var ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenStartLine: function () { return lineStartOffset; },\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\n        getTokenError: function () { return scanError; },\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = undefined;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    var i, key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        var oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        var otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function isNumber(val) {\n    return typeof val === 'number';\n}\nexport function isDefined(val) {\n    return typeof val !== 'undefined';\n}\nexport function isBoolean(val) {\n    return typeof val === 'boolean';\n}\nexport function isString(val) {\n    return typeof val === 'string';\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (changes, version) {\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                var range = getWellformedRange(change.range);\n                // update content\n                var startOffset = this.offsetAt(range.start);\n                var endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                var startLine = Math.max(range.start.line, 0);\n                var endLine = Math.max(range.end.line, 0);\n                var lineOffsets = this._lineOffsets;\n                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice.apply(lineOffsets, [startLine + 1, endLine - startLine].concat(addedLineOffsets));\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                var diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return { line: line, character: offset - lineOffsets[line] };\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.isIncremental = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    };\n    FullTextDocument.isFull = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    };\n    return FullTextDocument;\n}());\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifing its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = 0;\n        var spans = [];\n        for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {\n            var e = sortedEdits_1[_i];\n            var startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    var p = (data.length / 2) | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        var ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset) {\n    if (textOffset === void 0) { textOffset = 0; }\n    var result = isAtLineStart ? [textOffset] : [];\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charCodeAt(i);\n        if (ch === 13 /* CarriageReturn */ || ch === 10 /* LineFeed */) {\n            if (ch === 13 /* CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    var start = range.start;\n    var end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    var range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range: range };\n    }\n    return textEdit;\n}\n","import { MarkupKind } from 'vscode-languageserver-types';\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nexport * from 'vscode-languageserver-types';\n/**\n * Error codes used by diagnostics\n */\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[ErrorCode[\"Undefined\"] = 0] = \"Undefined\";\n    ErrorCode[ErrorCode[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n    ErrorCode[ErrorCode[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n    ErrorCode[ErrorCode[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n    ErrorCode[ErrorCode[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n    ErrorCode[ErrorCode[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n    ErrorCode[ErrorCode[\"CommaExpected\"] = 514] = \"CommaExpected\";\n    ErrorCode[ErrorCode[\"ColonExpected\"] = 515] = \"ColonExpected\";\n    ErrorCode[ErrorCode[\"ValueExpected\"] = 516] = \"ValueExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n    ErrorCode[ErrorCode[\"TrailingComma\"] = 519] = \"TrailingComma\";\n    ErrorCode[ErrorCode[\"DuplicateKey\"] = 520] = \"DuplicateKey\";\n    ErrorCode[ErrorCode[\"CommentNotPermitted\"] = 521] = \"CommentNotPermitted\";\n    ErrorCode[ErrorCode[\"SchemaResolveError\"] = 768] = \"SchemaResolveError\";\n})(ErrorCode || (ErrorCode = {}));\nexport var ClientCapabilities;\n(function (ClientCapabilities) {\n    ClientCapabilities.LATEST = {\n        textDocument: {\n            completion: {\n                completionItem: {\n                    documentationFormat: [MarkupKind.Markdown, MarkupKind.PlainText],\n                    commitCharactersSupport: true\n                }\n            }\n        }\n    };\n})(ClientCapabilities || (ClientCapabilities = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as Json from 'jsonc-parser';\nimport { isNumber, equals, isBoolean, isString, isDefined } from '../utils/objects';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes';\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nvar formats = {\n    'color-hex': { errorMessage: localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.'), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n    'date-time': { errorMessage: localize('dateTimeFormatWarning', 'String is not a RFC3339 date-time.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'date': { errorMessage: localize('dateFormatWarning', 'String is not a RFC3339 date.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n    'time': { errorMessage: localize('timeFormatWarning', 'String is not a RFC3339 time.'), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'email': { errorMessage: localize('emailFormatWarning', 'String is not an e-mail address.'), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ }\n};\nvar ASTNodeImpl = /** @class */ (function () {\n    function ASTNodeImpl(parent, offset, length) {\n        if (length === void 0) { length = 0; }\n        this.offset = offset;\n        this.length = length;\n        this.parent = parent;\n    }\n    Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ASTNodeImpl.prototype.toString = function () {\n        return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n    };\n    return ASTNodeImpl;\n}());\nexport { ASTNodeImpl };\nvar NullASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NullASTNodeImpl, _super);\n    function NullASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'null';\n        _this.value = null;\n        return _this;\n    }\n    return NullASTNodeImpl;\n}(ASTNodeImpl));\nexport { NullASTNodeImpl };\nvar BooleanASTNodeImpl = /** @class */ (function (_super) {\n    __extends(BooleanASTNodeImpl, _super);\n    function BooleanASTNodeImpl(parent, boolValue, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'boolean';\n        _this.value = boolValue;\n        return _this;\n    }\n    return BooleanASTNodeImpl;\n}(ASTNodeImpl));\nexport { BooleanASTNodeImpl };\nvar ArrayASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ArrayASTNodeImpl, _super);\n    function ArrayASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'array';\n        _this.items = [];\n        return _this;\n    }\n    Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArrayASTNodeImpl;\n}(ASTNodeImpl));\nexport { ArrayASTNodeImpl };\nvar NumberASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NumberASTNodeImpl, _super);\n    function NumberASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'number';\n        _this.isInteger = true;\n        _this.value = Number.NaN;\n        return _this;\n    }\n    return NumberASTNodeImpl;\n}(ASTNodeImpl));\nexport { NumberASTNodeImpl };\nvar StringASTNodeImpl = /** @class */ (function (_super) {\n    __extends(StringASTNodeImpl, _super);\n    function StringASTNodeImpl(parent, offset, length) {\n        var _this = _super.call(this, parent, offset, length) || this;\n        _this.type = 'string';\n        _this.value = '';\n        return _this;\n    }\n    return StringASTNodeImpl;\n}(ASTNodeImpl));\nexport { StringASTNodeImpl };\nvar PropertyASTNodeImpl = /** @class */ (function (_super) {\n    __extends(PropertyASTNodeImpl, _super);\n    function PropertyASTNodeImpl(parent, offset, keyNode) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'property';\n        _this.colonOffset = -1;\n        _this.keyNode = keyNode;\n        return _this;\n    }\n    Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PropertyASTNodeImpl;\n}(ASTNodeImpl));\nexport { PropertyASTNodeImpl };\nvar ObjectASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ObjectASTNodeImpl, _super);\n    function ObjectASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'object';\n        _this.properties = [];\n        return _this;\n    }\n    Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ObjectASTNodeImpl;\n}(ASTNodeImpl));\nexport { ObjectASTNodeImpl };\nexport function asSchema(schema) {\n    if (isBoolean(schema)) {\n        return schema ? {} : { \"not\": {} };\n    }\n    return schema;\n}\nexport var EnumMatch;\n(function (EnumMatch) {\n    EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n    EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar SchemaCollector = /** @class */ (function () {\n    function SchemaCollector(focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        this.focusOffset = focusOffset;\n        this.exclude = exclude;\n        this.schemas = [];\n    }\n    SchemaCollector.prototype.add = function (schema) {\n        this.schemas.push(schema);\n    };\n    SchemaCollector.prototype.merge = function (other) {\n        var _a;\n        (_a = this.schemas).push.apply(_a, other.schemas);\n    };\n    SchemaCollector.prototype.include = function (node) {\n        return (this.focusOffset === -1 || contains(node, this.focusOffset)) && (node !== this.exclude);\n    };\n    SchemaCollector.prototype.newSub = function () {\n        return new SchemaCollector(-1, this.exclude);\n    };\n    return SchemaCollector;\n}());\nvar NoOpSchemaCollector = /** @class */ (function () {\n    function NoOpSchemaCollector() {\n    }\n    Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    NoOpSchemaCollector.prototype.add = function (schema) { };\n    NoOpSchemaCollector.prototype.merge = function (other) { };\n    NoOpSchemaCollector.prototype.include = function (node) { return true; };\n    NoOpSchemaCollector.prototype.newSub = function () { return this; };\n    NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n    return NoOpSchemaCollector;\n}());\nvar ValidationResult = /** @class */ (function () {\n    function ValidationResult() {\n        this.problems = [];\n        this.propertiesMatches = 0;\n        this.propertiesValueMatches = 0;\n        this.primaryValueMatches = 0;\n        this.enumValueMatch = false;\n        this.enumValues = undefined;\n    }\n    ValidationResult.prototype.hasProblems = function () {\n        return !!this.problems.length;\n    };\n    ValidationResult.prototype.mergeAll = function (validationResults) {\n        for (var _i = 0, validationResults_1 = validationResults; _i < validationResults_1.length; _i++) {\n            var validationResult = validationResults_1[_i];\n            this.merge(validationResult);\n        }\n    };\n    ValidationResult.prototype.merge = function (validationResult) {\n        this.problems = this.problems.concat(validationResult.problems);\n    };\n    ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n        if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n            this.enumValues = this.enumValues.concat(validationResult.enumValues);\n            for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n                var error = _a[_i];\n                if (error.code === ErrorCode.EnumValueMismatch) {\n                    error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) { return JSON.stringify(v); }).join(', '));\n                }\n            }\n        }\n    };\n    ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n        this.merge(propertyValidationResult);\n        this.propertiesMatches++;\n        if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n            this.propertiesValueMatches++;\n        }\n        if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n            this.primaryValueMatches++;\n        }\n    };\n    ValidationResult.prototype.compare = function (other) {\n        var hasProblems = this.hasProblems();\n        if (hasProblems !== other.hasProblems()) {\n            return hasProblems ? -1 : 1;\n        }\n        if (this.enumValueMatch !== other.enumValueMatch) {\n            return other.enumValueMatch ? -1 : 1;\n        }\n        if (this.primaryValueMatches !== other.primaryValueMatches) {\n            return this.primaryValueMatches - other.primaryValueMatches;\n        }\n        if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n            return this.propertiesValueMatches - other.propertiesValueMatches;\n        }\n        return this.propertiesMatches - other.propertiesMatches;\n    };\n    return ValidationResult;\n}());\nexport { ValidationResult };\nexport function newJSONDocument(root, diagnostics) {\n    if (diagnostics === void 0) { diagnostics = []; }\n    return new JSONDocument(root, diagnostics, []);\n}\nexport function getNodeValue(node) {\n    return Json.getNodeValue(node);\n}\nexport function getNodePath(node) {\n    return Json.getNodePath(node);\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return offset >= node.offset && offset < (node.offset + node.length) || includeRightBound && offset === (node.offset + node.length);\n}\nvar JSONDocument = /** @class */ (function () {\n    function JSONDocument(root, syntaxErrors, comments) {\n        if (syntaxErrors === void 0) { syntaxErrors = []; }\n        if (comments === void 0) { comments = []; }\n        this.root = root;\n        this.syntaxErrors = syntaxErrors;\n        this.comments = comments;\n    }\n    JSONDocument.prototype.getNodeFromOffset = function (offset, includeRightBound) {\n        if (includeRightBound === void 0) { includeRightBound = false; }\n        if (this.root) {\n            return Json.findNodeAtOffset(this.root, offset, includeRightBound);\n        }\n        return undefined;\n    };\n    JSONDocument.prototype.visit = function (visitor) {\n        if (this.root) {\n            var doVisit_1 = function (node) {\n                var ctn = visitor(node);\n                var children = node.children;\n                if (Array.isArray(children)) {\n                    for (var i = 0; i < children.length && ctn; i++) {\n                        ctn = doVisit_1(children[i]);\n                    }\n                }\n                return ctn;\n            };\n            doVisit_1(this.root);\n        }\n    };\n    JSONDocument.prototype.validate = function (textDocument, schema) {\n        if (this.root && schema) {\n            var validationResult = new ValidationResult();\n            validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n            return validationResult.problems.map(function (p) {\n                var range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n                return Diagnostic.create(range, p.message, p.severity, p.code);\n            });\n        }\n        return undefined;\n    };\n    JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n        if (this.root && schema) {\n            validate(this.root, schema, new ValidationResult(), matchingSchemas);\n        }\n        return matchingSchemas.schemas;\n    };\n    return JSONDocument;\n}());\nexport { JSONDocument };\nfunction validate(n, schema, validationResult, matchingSchemas) {\n    if (!n || !matchingSchemas.include(n)) {\n        return;\n    }\n    var node = n;\n    switch (node.type) {\n        case 'object':\n            _validateObjectNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'array':\n            _validateArrayNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'string':\n            _validateStringNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'number':\n            _validateNumberNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'property':\n            return validate(node.valueNode, schema, validationResult, matchingSchemas);\n    }\n    _validateNode();\n    matchingSchemas.add({ node: node, schema: schema });\n    function _validateNode() {\n        function matchesType(type) {\n            return node.type === type || (type === 'integer' && node.type === 'number' && node.isInteger);\n        }\n        if (Array.isArray(schema.type)) {\n            if (!schema.type.some(matchesType)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n                });\n            }\n        }\n        else if (schema.type) {\n            if (!matchesType(schema.type)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n                });\n            }\n        }\n        if (Array.isArray(schema.allOf)) {\n            for (var _i = 0, _a = schema.allOf; _i < _a.length; _i++) {\n                var subSchemaRef = _a[_i];\n                validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n            }\n        }\n        var notSchema = asSchema(schema.not);\n        if (notSchema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, notSchema, subValidationResult, subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n                });\n            }\n            for (var _b = 0, _c = subMatchingSchemas.schemas; _b < _c.length; _b++) {\n                var ms = _c[_b];\n                ms.inverted = !ms.inverted;\n                matchingSchemas.add(ms);\n            }\n        }\n        var testAlternatives = function (alternatives, maxOneMatch) {\n            var matches = [];\n            // remember the best match that is used for error messages\n            var bestMatch = undefined;\n            for (var _i = 0, alternatives_1 = alternatives; _i < alternatives_1.length; _i++) {\n                var subSchemaRef = alternatives_1[_i];\n                var subSchema = asSchema(subSchemaRef);\n                var subValidationResult = new ValidationResult();\n                var subMatchingSchemas = matchingSchemas.newSub();\n                validate(node, subSchema, subValidationResult, subMatchingSchemas);\n                if (!subValidationResult.hasProblems()) {\n                    matches.push(subSchema);\n                }\n                if (!bestMatch) {\n                    bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                }\n                else {\n                    if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n                        // no errors, both are equally good matches\n                        bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                        bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n                        bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n                    }\n                    else {\n                        var compareResult = subValidationResult.compare(bestMatch.validationResult);\n                        if (compareResult > 0) {\n                            // our node is the best matching so far\n                            bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                        }\n                        else if (compareResult === 0) {\n                            // there's already a best matching but we are as good\n                            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                            bestMatch.validationResult.mergeEnumValues(subValidationResult);\n                        }\n                    }\n                }\n            }\n            if (matches.length > 1 && maxOneMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: 1 },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n                });\n            }\n            if (bestMatch) {\n                validationResult.merge(bestMatch.validationResult);\n                validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n                validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n                matchingSchemas.merge(bestMatch.matchingSchemas);\n            }\n            return matches.length;\n        };\n        if (Array.isArray(schema.anyOf)) {\n            testAlternatives(schema.anyOf, false);\n        }\n        if (Array.isArray(schema.oneOf)) {\n            testAlternatives(schema.oneOf, true);\n        }\n        var testBranch = function (schema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, asSchema(schema), subValidationResult, subMatchingSchemas);\n            validationResult.merge(subValidationResult);\n            validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            matchingSchemas.merge(subMatchingSchemas);\n        };\n        var testCondition = function (ifSchema, thenSchema, elseSchema) {\n            var subSchema = asSchema(ifSchema);\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, subSchema, subValidationResult, subMatchingSchemas);\n            matchingSchemas.merge(subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                if (thenSchema) {\n                    testBranch(thenSchema);\n                }\n            }\n            else if (elseSchema) {\n                testBranch(elseSchema);\n            }\n        };\n        var ifSchema = asSchema(schema.if);\n        if (ifSchema) {\n            testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n        }\n        if (Array.isArray(schema.enum)) {\n            var val = getNodeValue(node);\n            var enumValueMatch = false;\n            for (var _d = 0, _e = schema.enum; _d < _e.length; _d++) {\n                var e = _e[_d];\n                if (equals(val, e)) {\n                    enumValueMatch = true;\n                    break;\n                }\n            }\n            validationResult.enumValues = schema.enum;\n            validationResult.enumValueMatch = enumValueMatch;\n            if (!enumValueMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) { return JSON.stringify(v); }).join(', '))\n                });\n            }\n        }\n        if (isDefined(schema.const)) {\n            var val = getNodeValue(node);\n            if (!equals(val, schema.const)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n                });\n                validationResult.enumValueMatch = false;\n            }\n            else {\n                validationResult.enumValueMatch = true;\n            }\n            validationResult.enumValues = [schema.const];\n        }\n        if (schema.deprecationMessage && node.parent) {\n            validationResult.problems.push({\n                location: { offset: node.parent.offset, length: node.parent.length },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.deprecationMessage\n            });\n        }\n    }\n    function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n        var val = node.value;\n        if (isNumber(schema.multipleOf)) {\n            if (val % schema.multipleOf !== 0) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n                });\n            }\n        }\n        function getExclusiveLimit(limit, exclusive) {\n            if (isNumber(exclusive)) {\n                return exclusive;\n            }\n            if (isBoolean(exclusive) && exclusive) {\n                return limit;\n            }\n            return undefined;\n        }\n        function getLimit(limit, exclusive) {\n            if (!isBoolean(exclusive) || !exclusive) {\n                return limit;\n            }\n            return undefined;\n        }\n        var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n            });\n        }\n        var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n            });\n        }\n        var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(minimum) && val < minimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n            });\n        }\n        var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(maximum) && val > maximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n            });\n        }\n    }\n    function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n        if (isNumber(schema.minLength) && node.value.length < schema.minLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n            });\n        }\n        if (isNumber(schema.maxLength) && node.value.length > schema.maxLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n            });\n        }\n        if (isString(schema.pattern)) {\n            var regex = new RegExp(schema.pattern);\n            if (!regex.test(node.value)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n                });\n            }\n        }\n        if (schema.format) {\n            switch (schema.format) {\n                case 'uri':\n                case 'uri-reference':\n                    {\n                        var errorMessage = void 0;\n                        if (!node.value) {\n                            errorMessage = localize('uriEmpty', 'URI expected.');\n                        }\n                        else {\n                            var match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node.value);\n                            if (!match) {\n                                errorMessage = localize('uriMissing', 'URI is expected.');\n                            }\n                            else if (!match[2] && schema.format === 'uri') {\n                                errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n                            }\n                        }\n                        if (errorMessage) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n                            });\n                        }\n                    }\n                    break;\n                case 'color-hex':\n                case 'date-time':\n                case 'date':\n                case 'time':\n                case 'email':\n                    var format = formats[schema.format];\n                    if (!node.value || !format.pattern.exec(node.value)) {\n                        validationResult.problems.push({\n                            location: { offset: node.offset, length: node.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.patternErrorMessage || schema.errorMessage || format.errorMessage\n                        });\n                    }\n                default:\n            }\n        }\n    }\n    function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n        if (Array.isArray(schema.items)) {\n            var subSchemas = schema.items;\n            for (var index = 0; index < subSchemas.length; index++) {\n                var subSchemaRef = subSchemas[index];\n                var subSchema = asSchema(subSchemaRef);\n                var itemValidationResult = new ValidationResult();\n                var item = node.items[index];\n                if (item) {\n                    validate(item, subSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n                else if (node.items.length >= subSchemas.length) {\n                    validationResult.propertiesValueMatches++;\n                }\n            }\n            if (node.items.length > subSchemas.length) {\n                if (typeof schema.additionalItems === 'object') {\n                    for (var i = subSchemas.length; i < node.items.length; i++) {\n                        var itemValidationResult = new ValidationResult();\n                        validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(itemValidationResult);\n                    }\n                }\n                else if (schema.additionalItems === false) {\n                    validationResult.problems.push({\n                        location: { offset: node.offset, length: node.length },\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas.length)\n                    });\n                }\n            }\n        }\n        else {\n            var itemSchema = asSchema(schema.items);\n            if (itemSchema) {\n                for (var _i = 0, _a = node.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    var itemValidationResult = new ValidationResult();\n                    validate(item, itemSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n            }\n        }\n        var containsSchema = asSchema(schema.contains);\n        if (containsSchema) {\n            var doesContain = node.items.some(function (item) {\n                var itemValidationResult = new ValidationResult();\n                validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n                return !itemValidationResult.hasProblems();\n            });\n            if (!doesContain) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.')\n                });\n            }\n        }\n        if (isNumber(schema.minItems) && node.items.length < schema.minItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n            });\n        }\n        if (isNumber(schema.maxItems) && node.items.length > schema.maxItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.maxItems)\n            });\n        }\n        if (schema.uniqueItems === true) {\n            var values_1 = getNodeValue(node);\n            var duplicates = values_1.some(function (value, index) {\n                return index !== values_1.lastIndexOf(value);\n            });\n            if (duplicates) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n                });\n            }\n        }\n    }\n    function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n        var seenKeys = Object.create(null);\n        var unprocessedProperties = [];\n        for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n            var propertyNode = _a[_i];\n            var key = propertyNode.keyNode.value;\n            seenKeys[key] = propertyNode.valueNode;\n            unprocessedProperties.push(key);\n        }\n        if (Array.isArray(schema.required)) {\n            for (var _b = 0, _c = schema.required; _b < _c.length; _b++) {\n                var propertyName = _c[_b];\n                if (!seenKeys[propertyName]) {\n                    var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n                    var location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node.offset, length: 1 };\n                    validationResult.problems.push({\n                        location: location,\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n                    });\n                }\n            }\n        }\n        var propertyProcessed = function (prop) {\n            var index = unprocessedProperties.indexOf(prop);\n            while (index >= 0) {\n                unprocessedProperties.splice(index, 1);\n                index = unprocessedProperties.indexOf(prop);\n            }\n        };\n        if (schema.properties) {\n            for (var _d = 0, _e = Object.keys(schema.properties); _d < _e.length; _d++) {\n                var propertyName = _e[_d];\n                propertyProcessed(propertyName);\n                var propertySchema = schema.properties[propertyName];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    if (isBoolean(propertySchema)) {\n                        if (!propertySchema) {\n                            var propertyNode = child.parent;\n                            validationResult.problems.push({\n                                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                            });\n                        }\n                        else {\n                            validationResult.propertiesMatches++;\n                            validationResult.propertiesValueMatches++;\n                        }\n                    }\n                    else {\n                        var propertyValidationResult = new ValidationResult();\n                        validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(propertyValidationResult);\n                    }\n                }\n            }\n        }\n        if (schema.patternProperties) {\n            for (var _f = 0, _g = Object.keys(schema.patternProperties); _f < _g.length; _f++) {\n                var propertyPattern = _g[_f];\n                var regex = new RegExp(propertyPattern);\n                for (var _h = 0, _j = unprocessedProperties.slice(0); _h < _j.length; _h++) {\n                    var propertyName = _j[_h];\n                    if (regex.test(propertyName)) {\n                        propertyProcessed(propertyName);\n                        var child = seenKeys[propertyName];\n                        if (child) {\n                            var propertySchema = schema.patternProperties[propertyPattern];\n                            if (isBoolean(propertySchema)) {\n                                if (!propertySchema) {\n                                    var propertyNode = child.parent;\n                                    validationResult.problems.push({\n                                        location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                        severity: DiagnosticSeverity.Warning,\n                                        message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                                    });\n                                }\n                                else {\n                                    validationResult.propertiesMatches++;\n                                    validationResult.propertiesValueMatches++;\n                                }\n                            }\n                            else {\n                                var propertyValidationResult = new ValidationResult();\n                                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                                validationResult.mergePropertyMatch(propertyValidationResult);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            for (var _k = 0, unprocessedProperties_1 = unprocessedProperties; _k < unprocessedProperties_1.length; _k++) {\n                var propertyName = unprocessedProperties_1[_k];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    var propertyValidationResult = new ValidationResult();\n                    validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n            }\n        }\n        else if (schema.additionalProperties === false) {\n            if (unprocessedProperties.length > 0) {\n                for (var _l = 0, unprocessedProperties_2 = unprocessedProperties; _l < unprocessedProperties_2.length; _l++) {\n                    var propertyName = unprocessedProperties_2[_l];\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyNode = child.parent;\n                        validationResult.problems.push({\n                            location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                        });\n                    }\n                }\n            }\n        }\n        if (isNumber(schema.maxProperties)) {\n            if (node.properties.length > schema.maxProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n                });\n            }\n        }\n        if (isNumber(schema.minProperties)) {\n            if (node.properties.length < schema.minProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n                });\n            }\n        }\n        if (schema.dependencies) {\n            for (var _m = 0, _o = Object.keys(schema.dependencies); _m < _o.length; _m++) {\n                var key = _o[_m];\n                var prop = seenKeys[key];\n                if (prop) {\n                    var propertyDep = schema.dependencies[key];\n                    if (Array.isArray(propertyDep)) {\n                        for (var _p = 0, propertyDep_1 = propertyDep; _p < propertyDep_1.length; _p++) {\n                            var requiredProp = propertyDep_1[_p];\n                            if (!seenKeys[requiredProp]) {\n                                validationResult.problems.push({\n                                    location: { offset: node.offset, length: node.length },\n                                    severity: DiagnosticSeverity.Warning,\n                                    message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                                });\n                            }\n                            else {\n                                validationResult.propertiesValueMatches++;\n                            }\n                        }\n                    }\n                    else {\n                        var propertySchema = asSchema(propertyDep);\n                        if (propertySchema) {\n                            var propertyValidationResult = new ValidationResult();\n                            validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n                            validationResult.mergePropertyMatch(propertyValidationResult);\n                        }\n                    }\n                }\n            }\n        }\n        var propertyNames = asSchema(schema.propertyNames);\n        if (propertyNames) {\n            for (var _q = 0, _r = node.properties; _q < _r.length; _q++) {\n                var f = _r[_q];\n                var key = f.keyNode;\n                if (key) {\n                    validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n                }\n            }\n        }\n    }\n}\nexport function parse(textDocument, config) {\n    var problems = [];\n    var lastProblemOffset = -1;\n    var text = textDocument.getText();\n    var scanner = Json.createScanner(text, false);\n    var commentRanges = config && config.collectComments ? [] : undefined;\n    function _scanNext() {\n        while (true) {\n            var token_1 = scanner.scan();\n            _checkScanError();\n            switch (token_1) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (Array.isArray(commentRanges)) {\n                        commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n                    }\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token_1;\n            }\n        }\n    }\n    function _accept(token) {\n        if (scanner.getToken() === token) {\n            _scanNext();\n            return true;\n        }\n        return false;\n    }\n    function _errorAtRange(message, code, startOffset, endOffset, severity) {\n        if (severity === void 0) { severity = DiagnosticSeverity.Error; }\n        if (problems.length === 0 || startOffset !== lastProblemOffset) {\n            var range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n            problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n            lastProblemOffset = startOffset;\n        }\n    }\n    function _error(message, code, node, skipUntilAfter, skipUntil) {\n        if (node === void 0) { node = undefined; }\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        var start = scanner.getTokenOffset();\n        var end = scanner.getTokenOffset() + scanner.getTokenLength();\n        if (start === end && start > 0) {\n            start--;\n            while (start > 0 && /\\s/.test(text.charAt(start))) {\n                start--;\n            }\n            end = start + 1;\n        }\n        _errorAtRange(message, code, start, end);\n        if (node) {\n            _finalize(node, false);\n        }\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token_2 = scanner.getToken();\n            while (token_2 !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token_2) !== -1) {\n                    _scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token_2) !== -1) {\n                    break;\n                }\n                token_2 = _scanNext();\n            }\n        }\n        return node;\n    }\n    function _checkScanError() {\n        switch (scanner.getTokenError()) {\n            case 4 /* InvalidUnicode */:\n                _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n                return true;\n            case 5 /* InvalidEscapeCharacter */:\n                _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n                return true;\n            case 3 /* UnexpectedEndOfNumber */:\n                _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n                return true;\n            case 1 /* UnexpectedEndOfComment */:\n                _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n                return true;\n            case 2 /* UnexpectedEndOfString */:\n                _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n                return true;\n            case 6 /* InvalidCharacter */:\n                _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n                return true;\n        }\n        return false;\n    }\n    function _finalize(node, scanNext) {\n        node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n        if (scanNext) {\n            _scanNext();\n        }\n        return node;\n    }\n    function _parseArray(parent) {\n        if (scanner.getToken() !== 3 /* OpenBracketToken */) {\n            return undefined;\n        }\n        var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n        _scanNext(); // consume OpenBracketToken\n        var count = 0;\n        var needsComma = false;\n        while (scanner.getToken() !== 4 /* CloseBracketToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 4 /* CloseBracketToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var item = _parseValue(node);\n            if (!item) {\n                _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, undefined, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.items.push(item);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 4 /* CloseBracketToken */) {\n            return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    var keyPlaceholder = new StringASTNodeImpl(undefined, 0, 0);\n    function _parseProperty(parent, keysSeen) {\n        var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset(), keyPlaceholder);\n        var key = _parseString(node);\n        if (!key) {\n            if (scanner.getToken() === 16 /* Unknown */) {\n                // give a more helpful error message\n                _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n                var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n                keyNode.value = scanner.getTokenValue();\n                key = keyNode;\n                _scanNext(); // consume Unknown\n            }\n            else {\n                return undefined;\n            }\n        }\n        node.keyNode = key;\n        var seen = keysSeen[key.value];\n        if (seen) {\n            _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n            if (typeof seen === 'object') {\n                _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n            }\n            keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n        }\n        else {\n            keysSeen[key.value] = node;\n        }\n        if (scanner.getToken() === 6 /* ColonToken */) {\n            node.colonOffset = scanner.getTokenOffset();\n            _scanNext(); // consume ColonToken\n        }\n        else {\n            _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n            if (scanner.getToken() === 10 /* StringLiteral */ && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n                node.length = key.length;\n                return node;\n            }\n        }\n        var value = _parseValue(node);\n        if (!value) {\n            return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        node.valueNode = value;\n        node.length = value.offset + value.length - node.offset;\n        return node;\n    }\n    function _parseObject(parent) {\n        if (scanner.getToken() !== 1 /* OpenBraceToken */) {\n            return undefined;\n        }\n        var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n        var keysSeen = Object.create(null);\n        _scanNext(); // consume OpenBraceToken\n        var needsComma = false;\n        while (scanner.getToken() !== 2 /* CloseBraceToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 2 /* CloseBraceToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var property = _parseProperty(node, keysSeen);\n            if (!property) {\n                _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, undefined, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.properties.push(property);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 2 /* CloseBraceToken */) {\n            return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseString(parent) {\n        if (scanner.getToken() !== 10 /* StringLiteral */) {\n            return undefined;\n        }\n        var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n        node.value = scanner.getTokenValue();\n        return _finalize(node, true);\n    }\n    function _parseNumber(parent) {\n        if (scanner.getToken() !== 11 /* NumericLiteral */) {\n            return undefined;\n        }\n        var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n        if (scanner.getTokenError() === 0 /* None */) {\n            var tokenValue = scanner.getTokenValue();\n            try {\n                var numberValue = JSON.parse(tokenValue);\n                if (!isNumber(numberValue)) {\n                    return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n                }\n                node.value = numberValue;\n            }\n            catch (e) {\n                return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n            }\n            node.isInteger = tokenValue.indexOf('.') === -1;\n        }\n        return _finalize(node, true);\n    }\n    function _parseLiteral(parent) {\n        var node;\n        switch (scanner.getToken()) {\n            case 7 /* NullKeyword */:\n                return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n            case 8 /* TrueKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n            case 9 /* FalseKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n            default:\n                return undefined;\n        }\n    }\n    function _parseValue(parent) {\n        return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n    }\n    var _root = undefined;\n    var token = _scanNext();\n    if (token !== 17 /* EOF */) {\n        _root = _parseValue(_root);\n        if (!_root) {\n            _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n        }\n        else if (scanner.getToken() !== 17 /* EOF */) {\n            _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n        }\n    }\n    return new JSONDocument(_root, problems, commentRanges);\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser';\nimport * as Json from 'jsonc-parser';\nimport { stringifyObject } from '../utils/json';\nimport { endsWith } from '../utils/strings';\nimport { isDefined } from '../utils/objects';\nimport { CompletionItem, CompletionItemKind, Range, TextEdit, InsertTextFormat, MarkupKind } from '../jsonLanguageTypes';\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nvar valueCommitCharacters = [',', '}', ']'];\nvar propertyCommitCharacters = [':'];\nvar JSONCompletion = /** @class */ (function () {\n    function JSONCompletion(schemaService, contributions, promiseConstructor, clientCapabilities) {\n        if (contributions === void 0) { contributions = []; }\n        if (promiseConstructor === void 0) { promiseConstructor = Promise; }\n        if (clientCapabilities === void 0) { clientCapabilities = {}; }\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promiseConstructor = promiseConstructor;\n        this.clientCapabilities = clientCapabilities;\n    }\n    JSONCompletion.prototype.doResolve = function (item) {\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            var resolveCompletion = this.contributions[i].resolveCompletion;\n            if (resolveCompletion) {\n                var resolver = resolveCompletion(item);\n                if (resolver) {\n                    return resolver;\n                }\n            }\n        }\n        return this.promiseConstructor.resolve(item);\n    };\n    JSONCompletion.prototype.doComplete = function (document, position, doc) {\n        var _this = this;\n        var result = {\n            items: [],\n            isIncomplete: false\n        };\n        var text = document.getText();\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset, true);\n        if (this.isInComment(document, node ? node.offset : 0, offset)) {\n            return Promise.resolve(result);\n        }\n        if (node && (offset === node.offset + node.length) && offset > 0) {\n            var ch = text[offset - 1];\n            if (node.type === 'object' && ch === '}' || node.type === 'array' && ch === ']') {\n                // after ] or }\n                node = node.parent;\n            }\n        }\n        var currentWord = this.getCurrentWord(document, offset);\n        var overwriteRange;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            overwriteRange = Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n        }\n        else {\n            var overwriteStart = offset - currentWord.length;\n            if (overwriteStart > 0 && text[overwriteStart - 1] === '\"') {\n                overwriteStart--;\n            }\n            overwriteRange = Range.create(document.positionAt(overwriteStart), position);\n        }\n        var supportsCommitCharacters = false; //this.doesSupportsCommitCharacters(); disabled for now, waiting for new API: https://github.com/microsoft/vscode/issues/42544\n        var proposed = {};\n        var collector = {\n            add: function (suggestion) {\n                var label = suggestion.label;\n                var existing = proposed[label];\n                if (!existing) {\n                    label = label.replace(/[\\n]/g, '↵');\n                    if (label.length > 60) {\n                        var shortendedLabel = label.substr(0, 57).trim() + '...';\n                        if (!proposed[shortendedLabel]) {\n                            label = shortendedLabel;\n                        }\n                    }\n                    if (overwriteRange && suggestion.insertText !== undefined) {\n                        suggestion.textEdit = TextEdit.replace(overwriteRange, suggestion.insertText);\n                    }\n                    if (supportsCommitCharacters) {\n                        suggestion.commitCharacters = suggestion.kind === CompletionItemKind.Property ? propertyCommitCharacters : valueCommitCharacters;\n                    }\n                    suggestion.label = label;\n                    proposed[label] = suggestion;\n                    result.items.push(suggestion);\n                }\n                else if (!existing.documentation) {\n                    existing.documentation = suggestion.documentation;\n                }\n            },\n            setAsIncomplete: function () {\n                result.isIncomplete = true;\n            },\n            error: function (message) {\n                console.error(message);\n            },\n            log: function (message) {\n                console.log(message);\n            },\n            getNumberOfProposals: function () {\n                return result.items.length;\n            }\n        };\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var collectionPromises = [];\n            var addValue = true;\n            var currentKey = '';\n            var currentProperty = undefined;\n            if (node) {\n                if (node.type === 'string') {\n                    var parent = node.parent;\n                    if (parent && parent.type === 'property' && parent.keyNode === node) {\n                        addValue = !parent.valueNode;\n                        currentProperty = parent;\n                        currentKey = text.substr(node.offset + 1, node.length - 2);\n                        if (parent) {\n                            node = parent.parent;\n                        }\n                    }\n                }\n            }\n            // proposals for properties\n            if (node && node.type === 'object') {\n                // don't suggest keys when the cursor is just before the opening curly brace\n                if (node.offset === offset) {\n                    return result;\n                }\n                // don't suggest properties that are already present\n                var properties = node.properties;\n                properties.forEach(function (p) {\n                    if (!currentProperty || currentProperty !== p) {\n                        proposed[p.keyNode.value] = CompletionItem.create('__');\n                    }\n                });\n                var separatorAfter_1 = '';\n                if (addValue) {\n                    separatorAfter_1 = _this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n                }\n                if (schema) {\n                    // property proposals with schema\n                    _this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter_1, collector);\n                }\n                else {\n                    // property proposals without schema\n                    _this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n                }\n                var location_1 = Parser.getNodePath(node);\n                _this.contributions.forEach(function (contribution) {\n                    var collectPromise = contribution.collectPropertyCompletions(document.uri, location_1, currentWord, addValue, separatorAfter_1 === '', collector);\n                    if (collectPromise) {\n                        collectionPromises.push(collectPromise);\n                    }\n                });\n                if ((!schema && currentWord.length > 0 && text.charAt(offset - currentWord.length - 1) !== '\"')) {\n                    collector.add({\n                        kind: CompletionItemKind.Property,\n                        label: _this.getLabelForValue(currentWord),\n                        insertText: _this.getInsertTextForProperty(currentWord, undefined, false, separatorAfter_1),\n                        insertTextFormat: InsertTextFormat.Snippet, documentation: '',\n                    });\n                    collector.setAsIncomplete();\n                }\n            }\n            // proposals for values\n            var types = {};\n            if (schema) {\n                // value proposals with schema\n                _this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n            }\n            else {\n                // value proposals without schema\n                _this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n            }\n            if (_this.contributions.length > 0) {\n                _this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n            }\n            return _this.promiseConstructor.all(collectionPromises).then(function () {\n                if (collector.getNumberOfProposals() === 0) {\n                    var offsetForSeparator = offset;\n                    if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n                        offsetForSeparator = node.offset + node.length;\n                    }\n                    var separatorAfter = _this.evaluateSeparatorAfter(document, offsetForSeparator);\n                    _this.addFillerValueCompletions(types, separatorAfter, collector);\n                }\n                return result;\n            });\n        });\n    };\n    JSONCompletion.prototype.getPropertyCompletions = function (schema, doc, node, addValue, separatorAfter, collector) {\n        var _this = this;\n        var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        matchingSchemas.forEach(function (s) {\n            if (s.node === node && !s.inverted) {\n                var schemaProperties_1 = s.schema.properties;\n                if (schemaProperties_1) {\n                    Object.keys(schemaProperties_1).forEach(function (key) {\n                        var propertySchema = schemaProperties_1[key];\n                        if (typeof propertySchema === 'object' && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n                            var proposal = {\n                                kind: CompletionItemKind.Property,\n                                label: key,\n                                insertText: _this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                                insertTextFormat: InsertTextFormat.Snippet,\n                                filterText: _this.getFilterTextForValue(key),\n                                documentation: _this.fromMarkup(propertySchema.markdownDescription) || propertySchema.description || '',\n                            };\n                            if (proposal.insertText && endsWith(proposal.insertText, \"$1\" + separatorAfter)) {\n                                proposal.command = {\n                                    title: 'Suggest',\n                                    command: 'editor.action.triggerSuggest'\n                                };\n                            }\n                            collector.add(proposal);\n                        }\n                    });\n                }\n            }\n        });\n    };\n    JSONCompletion.prototype.getSchemaLessPropertyCompletions = function (doc, node, currentKey, collector) {\n        var _this = this;\n        var collectCompletionsForSimilarObject = function (obj) {\n            obj.properties.forEach(function (p) {\n                var key = p.keyNode.value;\n                collector.add({\n                    kind: CompletionItemKind.Property,\n                    label: key,\n                    insertText: _this.getInsertTextForValue(key, ''),\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    filterText: _this.getFilterTextForValue(key),\n                    documentation: ''\n                });\n            });\n        };\n        if (node.parent) {\n            if (node.parent.type === 'property') {\n                // if the object is a property value, check the tree for other objects that hang under a property of the same name\n                var parentKey_1 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n !== node.parent && n.keyNode.value === parentKey_1 && n.valueNode && n.valueNode.type === 'object') {\n                        collectCompletionsForSimilarObject(n.valueNode);\n                    }\n                    return true;\n                });\n            }\n            else if (node.parent.type === 'array') {\n                // if the object is in an array, use all other array elements as similar objects\n                node.parent.items.forEach(function (n) {\n                    if (n.type === 'object' && n !== node) {\n                        collectCompletionsForSimilarObject(n);\n                    }\n                });\n            }\n        }\n        else if (node.type === 'object') {\n            collector.add({\n                kind: CompletionItemKind.Property,\n                label: '$schema',\n                insertText: this.getInsertTextForProperty('$schema', undefined, true, ''),\n                insertTextFormat: InsertTextFormat.Snippet, documentation: '',\n                filterText: this.getFilterTextForValue(\"$schema\")\n            });\n        }\n    };\n    JSONCompletion.prototype.getSchemaLessValueCompletions = function (doc, node, offset, document, collector) {\n        var _this = this;\n        var offsetForSeparator = offset;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            node = node.parent;\n        }\n        if (!node) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: 'Empty object',\n                insertText: this.getInsertTextForValue({}, ''),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: ''\n            });\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: 'Empty array',\n                insertText: this.getInsertTextForValue([], ''),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: ''\n            });\n            return;\n        }\n        var separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n        var collectSuggestionsForValues = function (value) {\n            if (value.parent && !Parser.contains(value.parent, offset, true)) {\n                collector.add({\n                    kind: _this.getSuggestionKind(value.type),\n                    label: _this.getLabelTextForMatchingNode(value, document),\n                    insertText: _this.getInsertTextForMatchingNode(value, document, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet, documentation: ''\n                });\n            }\n            if (value.type === 'boolean') {\n                _this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n            }\n        };\n        if (node.type === 'property') {\n            if (offset > (node.colonOffset || 0)) {\n                var valueNode = node.valueNode;\n                if (valueNode && (offset > (valueNode.offset + valueNode.length) || valueNode.type === 'object' || valueNode.type === 'array')) {\n                    return;\n                }\n                // suggest values at the same key\n                var parentKey_2 = node.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.keyNode.value === parentKey_2 && n.valueNode) {\n                        collectSuggestionsForValues(n.valueNode);\n                    }\n                    return true;\n                });\n                if (parentKey_2 === '$schema' && node.parent && !node.parent.parent) {\n                    this.addDollarSchemaCompletions(separatorAfter, collector);\n                }\n            }\n        }\n        if (node.type === 'array') {\n            if (node.parent && node.parent.type === 'property') {\n                // suggest items of an array at the same key\n                var parentKey_3 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.keyNode.value === parentKey_3 && n.valueNode && n.valueNode.type === 'array') {\n                        n.valueNode.items.forEach(collectSuggestionsForValues);\n                    }\n                    return true;\n                });\n            }\n            else {\n                // suggest items in the same array\n                node.items.forEach(collectSuggestionsForValues);\n            }\n        }\n    };\n    JSONCompletion.prototype.getValueCompletions = function (schema, doc, node, offset, document, collector, types) {\n        var offsetForSeparator = offset;\n        var parentKey = undefined;\n        var valueNode = undefined;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            valueNode = node;\n            node = node.parent;\n        }\n        if (!node) {\n            this.addSchemaValueCompletions(schema.schema, '', collector, types);\n            return;\n        }\n        if ((node.type === 'property') && offset > (node.colonOffset || 0)) {\n            var valueNode_1 = node.valueNode;\n            if (valueNode_1 && offset > (valueNode_1.offset + valueNode_1.length)) {\n                return; // we are past the value node\n            }\n            parentKey = node.keyNode.value;\n            node = node.parent;\n        }\n        if (node && (parentKey !== undefined || node.type === 'array')) {\n            var separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n            var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n            for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n                var s = matchingSchemas_1[_i];\n                if (s.node === node && !s.inverted && s.schema) {\n                    if (node.type === 'array' && s.schema.items) {\n                        if (Array.isArray(s.schema.items)) {\n                            var index = this.findItemAtOffset(node, document, offset);\n                            if (index < s.schema.items.length) {\n                                this.addSchemaValueCompletions(s.schema.items[index], separatorAfter, collector, types);\n                            }\n                        }\n                        else {\n                            this.addSchemaValueCompletions(s.schema.items, separatorAfter, collector, types);\n                        }\n                    }\n                    if (s.schema.properties && parentKey !== undefined) {\n                        var propertySchema = s.schema.properties[parentKey];\n                        if (propertySchema) {\n                            this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n                        }\n                    }\n                }\n            }\n            if (parentKey === '$schema' && !node.parent) {\n                this.addDollarSchemaCompletions(separatorAfter, collector);\n            }\n            if (types['boolean']) {\n                this.addBooleanValueCompletion(true, separatorAfter, collector);\n                this.addBooleanValueCompletion(false, separatorAfter, collector);\n            }\n            if (types['null']) {\n                this.addNullValueCompletion(separatorAfter, collector);\n            }\n        }\n    };\n    JSONCompletion.prototype.getContributedValueCompletions = function (doc, node, offset, document, collector, collectionPromises) {\n        if (!node) {\n            this.contributions.forEach(function (contribution) {\n                var collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n                if (collectPromise) {\n                    collectionPromises.push(collectPromise);\n                }\n            });\n        }\n        else {\n            if (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null') {\n                node = node.parent;\n            }\n            if (node && (node.type === 'property') && offset > (node.colonOffset || 0)) {\n                var parentKey_4 = node.keyNode.value;\n                var valueNode = node.valueNode;\n                if ((!valueNode || offset <= (valueNode.offset + valueNode.length)) && node.parent) {\n                    var location_2 = Parser.getNodePath(node.parent);\n                    this.contributions.forEach(function (contribution) {\n                        var collectPromise = contribution.collectValueCompletions(document.uri, location_2, parentKey_4, collector);\n                        if (collectPromise) {\n                            collectionPromises.push(collectPromise);\n                        }\n                    });\n                }\n            }\n        }\n    };\n    JSONCompletion.prototype.addSchemaValueCompletions = function (schema, separatorAfter, collector, types) {\n        var _this = this;\n        if (typeof schema === 'object') {\n            this.addEnumValueCompletions(schema, separatorAfter, collector);\n            this.addDefaultValueCompletions(schema, separatorAfter, collector);\n            this.collectTypes(schema, types);\n            if (Array.isArray(schema.allOf)) {\n                schema.allOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.anyOf)) {\n                schema.anyOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.oneOf)) {\n                schema.oneOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n        }\n    };\n    JSONCompletion.prototype.addDefaultValueCompletions = function (schema, separatorAfter, collector, arrayDepth) {\n        var _this = this;\n        if (arrayDepth === void 0) { arrayDepth = 0; }\n        var hasProposals = false;\n        if (isDefined(schema.default)) {\n            var type = schema.type;\n            var value = schema.default;\n            for (var i = arrayDepth; i > 0; i--) {\n                value = [value];\n                type = 'array';\n            }\n            collector.add({\n                kind: this.getSuggestionKind(type),\n                label: this.getLabelForValue(value),\n                insertText: this.getInsertTextForValue(value, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('json.suggest.default', 'Default value')\n            });\n            hasProposals = true;\n        }\n        if (Array.isArray(schema.examples)) {\n            schema.examples.forEach(function (example) {\n                var type = schema.type;\n                var value = example;\n                for (var i = arrayDepth; i > 0; i--) {\n                    value = [value];\n                    type = 'array';\n                }\n                collector.add({\n                    kind: _this.getSuggestionKind(type),\n                    label: _this.getLabelForValue(value),\n                    insertText: _this.getInsertTextForValue(value, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet\n                });\n                hasProposals = true;\n            });\n        }\n        if (Array.isArray(schema.defaultSnippets)) {\n            schema.defaultSnippets.forEach(function (s) {\n                var type = schema.type;\n                var value = s.body;\n                var label = s.label;\n                var insertText;\n                var filterText;\n                if (isDefined(value)) {\n                    var type_1 = schema.type;\n                    for (var i = arrayDepth; i > 0; i--) {\n                        value = [value];\n                        type_1 = 'array';\n                    }\n                    insertText = _this.getInsertTextForSnippetValue(value, separatorAfter);\n                    filterText = _this.getFilterTextForSnippetValue(value);\n                    label = label || _this.getLabelForSnippetValue(value);\n                }\n                else if (typeof s.bodyText === 'string') {\n                    var prefix = '', suffix = '', indent = '';\n                    for (var i = arrayDepth; i > 0; i--) {\n                        prefix = prefix + indent + '[\\n';\n                        suffix = suffix + '\\n' + indent + ']';\n                        indent += '\\t';\n                        type = 'array';\n                    }\n                    insertText = prefix + indent + s.bodyText.split('\\n').join('\\n' + indent) + suffix + separatorAfter;\n                    label = label || insertText,\n                        filterText = insertText.replace(/[\\n]/g, ''); // remove new lines\n                }\n                else {\n                    return;\n                }\n                collector.add({\n                    kind: _this.getSuggestionKind(type),\n                    label: label,\n                    documentation: _this.fromMarkup(s.markdownDescription) || s.description,\n                    insertText: insertText,\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    filterText: filterText\n                });\n                hasProposals = true;\n            });\n        }\n        if (!hasProposals && typeof schema.items === 'object' && !Array.isArray(schema.items) && arrayDepth < 5 /* beware of recursion */) {\n            this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n        }\n    };\n    JSONCompletion.prototype.addEnumValueCompletions = function (schema, separatorAfter, collector) {\n        if (isDefined(schema.const)) {\n            collector.add({\n                kind: this.getSuggestionKind(schema.type),\n                label: this.getLabelForValue(schema.const),\n                insertText: this.getInsertTextForValue(schema.const, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: this.fromMarkup(schema.markdownDescription) || schema.description\n            });\n        }\n        if (Array.isArray(schema.enum)) {\n            for (var i = 0, length = schema.enum.length; i < length; i++) {\n                var enm = schema.enum[i];\n                var documentation = this.fromMarkup(schema.markdownDescription) || schema.description;\n                if (schema.markdownEnumDescriptions && i < schema.markdownEnumDescriptions.length && this.doesSupportMarkdown()) {\n                    documentation = this.fromMarkup(schema.markdownEnumDescriptions[i]);\n                }\n                else if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n                    documentation = schema.enumDescriptions[i];\n                }\n                collector.add({\n                    kind: this.getSuggestionKind(schema.type),\n                    label: this.getLabelForValue(enm),\n                    insertText: this.getInsertTextForValue(enm, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    documentation: documentation\n                });\n            }\n        }\n    };\n    JSONCompletion.prototype.collectTypes = function (schema, types) {\n        if (Array.isArray(schema.enum) || isDefined(schema.const)) {\n            return;\n        }\n        var type = schema.type;\n        if (Array.isArray(type)) {\n            type.forEach(function (t) { return types[t] = true; });\n        }\n        else if (type) {\n            types[type] = true;\n        }\n    };\n    JSONCompletion.prototype.addFillerValueCompletions = function (types, separatorAfter, collector) {\n        if (types['object']) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: '{}',\n                insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('defaults.object', 'New object'),\n                documentation: ''\n            });\n        }\n        if (types['array']) {\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: '[]',\n                insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('defaults.array', 'New array'),\n                documentation: ''\n            });\n        }\n    };\n    JSONCompletion.prototype.addBooleanValueCompletion = function (value, separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('boolean'),\n            label: value ? 'true' : 'false',\n            insertText: this.getInsertTextForValue(value, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addNullValueCompletion = function (separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('null'),\n            label: 'null',\n            insertText: 'null' + separatorAfter,\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addDollarSchemaCompletions = function (separatorAfter, collector) {\n        var _this = this;\n        var schemaIds = this.schemaService.getRegisteredSchemaIds(function (schema) { return schema === 'http' || schema === 'https'; });\n        schemaIds.forEach(function (schemaId) { return collector.add({\n            kind: CompletionItemKind.Module,\n            label: _this.getLabelForValue(schemaId),\n            filterText: _this.getFilterTextForValue(schemaId),\n            insertText: _this.getInsertTextForValue(schemaId, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet, documentation: ''\n        }); });\n    };\n    JSONCompletion.prototype.getLabelForValue = function (value) {\n        return JSON.stringify(value);\n    };\n    JSONCompletion.prototype.getFilterTextForValue = function (value) {\n        return JSON.stringify(value);\n    };\n    JSONCompletion.prototype.getFilterTextForSnippetValue = function (value) {\n        return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n    };\n    JSONCompletion.prototype.getLabelForSnippetValue = function (value) {\n        var label = JSON.stringify(value);\n        return label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n    };\n    JSONCompletion.prototype.getInsertTextForPlainText = function (text) {\n        return text.replace(/[\\\\\\$\\}]/g, '\\\\$&'); // escape $, \\ and } \n    };\n    JSONCompletion.prototype.getInsertTextForValue = function (value, separatorAfter) {\n        var text = JSON.stringify(value, null, '\\t');\n        if (text === '{}') {\n            return '{$1}' + separatorAfter;\n        }\n        else if (text === '[]') {\n            return '[$1]' + separatorAfter;\n        }\n        return this.getInsertTextForPlainText(text + separatorAfter);\n    };\n    JSONCompletion.prototype.getInsertTextForSnippetValue = function (value, separatorAfter) {\n        var replacer = function (value) {\n            if (typeof value === 'string') {\n                if (value[0] === '^') {\n                    return value.substr(1);\n                }\n            }\n            return JSON.stringify(value);\n        };\n        return stringifyObject(value, '', replacer) + separatorAfter;\n    };\n    JSONCompletion.prototype.getInsertTextForGuessedValue = function (value, separatorAfter) {\n        switch (typeof value) {\n            case 'object':\n                if (value === null) {\n                    return '${1:null}' + separatorAfter;\n                }\n                return this.getInsertTextForValue(value, separatorAfter);\n            case 'string':\n                var snippetValue = JSON.stringify(value);\n                snippetValue = snippetValue.substr(1, snippetValue.length - 2); // remove quotes\n                snippetValue = this.getInsertTextForPlainText(snippetValue); // escape \\ and }\n                return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n            case 'number':\n            case 'boolean':\n                return '${1:' + JSON.stringify(value) + '}' + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n    };\n    JSONCompletion.prototype.getSuggestionKind = function (type) {\n        if (Array.isArray(type)) {\n            var array = type;\n            type = array.length > 0 ? array[0] : undefined;\n        }\n        if (!type) {\n            return CompletionItemKind.Value;\n        }\n        switch (type) {\n            case 'string': return CompletionItemKind.Value;\n            case 'object': return CompletionItemKind.Module;\n            case 'property': return CompletionItemKind.Property;\n            default: return CompletionItemKind.Value;\n        }\n    };\n    JSONCompletion.prototype.getLabelTextForMatchingNode = function (node, document) {\n        switch (node.type) {\n            case 'array':\n                return '[]';\n            case 'object':\n                return '{}';\n            default:\n                var content = document.getText().substr(node.offset, node.length);\n                return content;\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForMatchingNode = function (node, document, separatorAfter) {\n        switch (node.type) {\n            case 'array':\n                return this.getInsertTextForValue([], separatorAfter);\n            case 'object':\n                return this.getInsertTextForValue({}, separatorAfter);\n            default:\n                var content = document.getText().substr(node.offset, node.length) + separatorAfter;\n                return this.getInsertTextForPlainText(content);\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForProperty = function (key, propertySchema, addValue, separatorAfter) {\n        var propertyText = this.getInsertTextForValue(key, '');\n        if (!addValue) {\n            return propertyText;\n        }\n        var resultText = propertyText + ': ';\n        var value;\n        var nValueProposals = 0;\n        if (propertySchema) {\n            if (Array.isArray(propertySchema.defaultSnippets)) {\n                if (propertySchema.defaultSnippets.length === 1) {\n                    var body = propertySchema.defaultSnippets[0].body;\n                    if (isDefined(body)) {\n                        value = this.getInsertTextForSnippetValue(body, '');\n                    }\n                }\n                nValueProposals += propertySchema.defaultSnippets.length;\n            }\n            if (propertySchema.enum) {\n                if (!value && propertySchema.enum.length === 1) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.enum[0], '');\n                }\n                nValueProposals += propertySchema.enum.length;\n            }\n            if (isDefined(propertySchema.default)) {\n                if (!value) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.default, '');\n                }\n                nValueProposals++;\n            }\n            if (Array.isArray(propertySchema.examples) && propertySchema.examples.length) {\n                if (!value) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.examples[0], '');\n                }\n                nValueProposals += propertySchema.examples.length;\n            }\n            if (nValueProposals === 0) {\n                var type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n                if (!type) {\n                    if (propertySchema.properties) {\n                        type = 'object';\n                    }\n                    else if (propertySchema.items) {\n                        type = 'array';\n                    }\n                }\n                switch (type) {\n                    case 'boolean':\n                        value = '$1';\n                        break;\n                    case 'string':\n                        value = '\"$1\"';\n                        break;\n                    case 'object':\n                        value = '{$1}';\n                        break;\n                    case 'array':\n                        value = '[$1]';\n                        break;\n                    case 'number':\n                    case 'integer':\n                        value = '${1:0}';\n                        break;\n                    case 'null':\n                        value = '${1:null}';\n                        break;\n                    default:\n                        return propertyText;\n                }\n            }\n        }\n        if (!value || nValueProposals > 1) {\n            value = '$1';\n        }\n        return resultText + value + separatorAfter;\n    };\n    JSONCompletion.prototype.getCurrentWord = function (document, offset) {\n        var i = offset - 1;\n        var text = document.getText();\n        while (i >= 0 && ' \\t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n            i--;\n        }\n        return text.substring(i + 1, offset);\n    };\n    JSONCompletion.prototype.evaluateSeparatorAfter = function (document, offset) {\n        var scanner = Json.createScanner(document.getText(), true);\n        scanner.setPosition(offset);\n        var token = scanner.scan();\n        switch (token) {\n            case 5 /* CommaToken */:\n            case 2 /* CloseBraceToken */:\n            case 4 /* CloseBracketToken */:\n            case 17 /* EOF */:\n                return '';\n            default:\n                return ',';\n        }\n    };\n    JSONCompletion.prototype.findItemAtOffset = function (node, document, offset) {\n        var scanner = Json.createScanner(document.getText(), true);\n        var children = node.items;\n        for (var i = children.length - 1; i >= 0; i--) {\n            var child = children[i];\n            if (offset > child.offset + child.length) {\n                scanner.setPosition(child.offset + child.length);\n                var token = scanner.scan();\n                if (token === 5 /* CommaToken */ && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n                    return i + 1;\n                }\n                return i;\n            }\n            else if (offset >= child.offset) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    JSONCompletion.prototype.isInComment = function (document, start, offset) {\n        var scanner = Json.createScanner(document.getText(), false);\n        scanner.setPosition(start);\n        var token = scanner.scan();\n        while (token !== 17 /* EOF */ && (scanner.getTokenOffset() + scanner.getTokenLength() < offset)) {\n            token = scanner.scan();\n        }\n        return (token === 12 /* LineCommentTrivia */ || token === 13 /* BlockCommentTrivia */) && scanner.getTokenOffset() <= offset;\n    };\n    JSONCompletion.prototype.fromMarkup = function (markupString) {\n        if (markupString && this.doesSupportMarkdown()) {\n            return {\n                kind: MarkupKind.Markdown,\n                value: markupString\n            };\n        }\n        return undefined;\n    };\n    JSONCompletion.prototype.doesSupportMarkdown = function () {\n        if (!isDefined(this.supportsMarkdown)) {\n            var completion = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;\n            this.supportsMarkdown = completion && completion.completionItem && Array.isArray(completion.completionItem.documentationFormat) && completion.completionItem.documentationFormat.indexOf(MarkupKind.Markdown) !== -1;\n        }\n        return this.supportsMarkdown;\n    };\n    JSONCompletion.prototype.doesSupportsCommitCharacters = function () {\n        if (!isDefined(this.supportsCommitCharacters)) {\n            var completion = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;\n            this.supportsCommitCharacters = completion && completion.completionItem && !!completion.completionItem.commitCharactersSupport;\n        }\n        return this.supportsCommitCharacters;\n    };\n    return JSONCompletion;\n}());\nexport { JSONCompletion };\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function stringifyObject(obj, indent, stringifyLiteral) {\n    if (obj !== null && typeof obj === 'object') {\n        var newIndent = indent + '\\t';\n        if (Array.isArray(obj)) {\n            if (obj.length === 0) {\n                return '[]';\n            }\n            var result = '[\\n';\n            for (var i = 0; i < obj.length; i++) {\n                result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n                if (i < obj.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + ']';\n            return result;\n        }\n        else {\n            var keys = Object.keys(obj);\n            if (keys.length === 0) {\n                return '{}';\n            }\n            var result = '{\\n';\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                result += newIndent + JSON.stringify(key) + ': ' + stringifyObject(obj[key], newIndent, stringifyLiteral);\n                if (i < keys.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + '}';\n            return result;\n        }\n    }\n    return stringifyLiteral(obj);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser';\nimport { Range } from '../jsonLanguageTypes';\nvar JSONHover = /** @class */ (function () {\n    function JSONHover(schemaService, contributions, promiseConstructor) {\n        if (contributions === void 0) { contributions = []; }\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promise = promiseConstructor || Promise;\n    }\n    JSONHover.prototype.doHover = function (document, position, doc) {\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset);\n        if (!node || (node.type === 'object' || node.type === 'array') && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n            return this.promise.resolve(null);\n        }\n        var hoverRangeNode = node;\n        // use the property description when hovering over an object key\n        if (node.type === 'string') {\n            var parent = node.parent;\n            if (parent && parent.type === 'property' && parent.keyNode === node) {\n                node = parent.valueNode;\n                if (!node) {\n                    return this.promise.resolve(null);\n                }\n            }\n        }\n        var hoverRange = Range.create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n        var createHover = function (contents) {\n            var result = {\n                contents: contents,\n                range: hoverRange\n            };\n            return result;\n        };\n        var location = Parser.getNodePath(node);\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            var contribution = this.contributions[i];\n            var promise = contribution.getInfoContribution(document.uri, location);\n            if (promise) {\n                return promise.then(function (htmlContent) { return createHover(htmlContent); });\n            }\n        }\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            if (schema && node) {\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n                var title_1 = undefined;\n                var markdownDescription_1 = undefined;\n                var markdownEnumValueDescription_1 = undefined, enumValue_1 = undefined;\n                matchingSchemas.every(function (s) {\n                    if (s.node === node && !s.inverted && s.schema) {\n                        title_1 = title_1 || s.schema.title;\n                        markdownDescription_1 = markdownDescription_1 || s.schema.markdownDescription || toMarkdown(s.schema.description);\n                        if (s.schema.enum) {\n                            var idx = s.schema.enum.indexOf(Parser.getNodeValue(node));\n                            if (s.schema.markdownEnumDescriptions) {\n                                markdownEnumValueDescription_1 = s.schema.markdownEnumDescriptions[idx];\n                            }\n                            else if (s.schema.enumDescriptions) {\n                                markdownEnumValueDescription_1 = toMarkdown(s.schema.enumDescriptions[idx]);\n                            }\n                            if (markdownEnumValueDescription_1) {\n                                enumValue_1 = s.schema.enum[idx];\n                                if (typeof enumValue_1 !== 'string') {\n                                    enumValue_1 = JSON.stringify(enumValue_1);\n                                }\n                            }\n                        }\n                    }\n                    return true;\n                });\n                var result = '';\n                if (title_1) {\n                    result = toMarkdown(title_1);\n                }\n                if (markdownDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += markdownDescription_1;\n                }\n                if (markdownEnumValueDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += \"`\" + toMarkdownCodeBlock(enumValue_1) + \"`: \" + markdownEnumValueDescription_1;\n                }\n                return createHover([result]);\n            }\n            return null;\n        });\n    };\n    return JSONHover;\n}());\nexport { JSONHover };\nfunction toMarkdown(plain) {\n    if (plain) {\n        var res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, '$1\\n\\n$3'); // single new lines to \\n\\n (Markdown paragraph)\n        return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    return undefined;\n}\nfunction toMarkdownCodeBlock(content) {\n    // see https://daringfireball.net/projects/markdown/syntax#precode\n    if (content.indexOf('`') !== -1) {\n        return '`` ' + content + ' ``';\n    }\n    return content;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Json from 'jsonc-parser';\nimport { URI } from 'vscode-uri';\nimport * as Strings from '../utils/strings';\nimport * as Parser from '../parser/jsonParser';\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nvar FilePatternAssociation = /** @class */ (function () {\n    function FilePatternAssociation(pattern, uris) {\n        this.patternRegExps = [];\n        this.isInclude = [];\n        try {\n            for (var _i = 0, pattern_1 = pattern; _i < pattern_1.length; _i++) {\n                var p = pattern_1[_i];\n                var include = p[0] !== '!';\n                if (!include) {\n                    p = p.substring(1);\n                }\n                this.patternRegExps.push(new RegExp(Strings.convertSimple2RegExpPattern(p) + '$'));\n                this.isInclude.push(include);\n            }\n            this.uris = uris;\n        }\n        catch (e) {\n            // invalid pattern\n            this.patternRegExps.length = 0;\n            this.isInclude.length = 0;\n            this.uris = [];\n        }\n    }\n    FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n        var match = false;\n        for (var i = 0; i < this.patternRegExps.length; i++) {\n            var regExp = this.patternRegExps[i];\n            if (regExp.test(fileName)) {\n                match = this.isInclude[i];\n            }\n        }\n        return match;\n    };\n    FilePatternAssociation.prototype.getURIs = function () {\n        return this.uris;\n    };\n    return FilePatternAssociation;\n}());\nvar SchemaHandle = /** @class */ (function () {\n    function SchemaHandle(service, url, unresolvedSchemaContent) {\n        this.service = service;\n        this.url = url;\n        this.dependencies = {};\n        if (unresolvedSchemaContent) {\n            this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n        }\n    }\n    SchemaHandle.prototype.getUnresolvedSchema = function () {\n        if (!this.unresolvedSchema) {\n            this.unresolvedSchema = this.service.loadSchema(this.url);\n        }\n        return this.unresolvedSchema;\n    };\n    SchemaHandle.prototype.getResolvedSchema = function () {\n        var _this = this;\n        if (!this.resolvedSchema) {\n            this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n                return _this.service.resolveSchemaContent(unresolved, _this.url, _this.dependencies);\n            });\n        }\n        return this.resolvedSchema;\n    };\n    SchemaHandle.prototype.clearSchema = function () {\n        this.resolvedSchema = undefined;\n        this.unresolvedSchema = undefined;\n        this.dependencies = {};\n    };\n    return SchemaHandle;\n}());\nvar UnresolvedSchema = /** @class */ (function () {\n    function UnresolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    return UnresolvedSchema;\n}());\nexport { UnresolvedSchema };\nvar ResolvedSchema = /** @class */ (function () {\n    function ResolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    ResolvedSchema.prototype.getSection = function (path) {\n        var schemaRef = this.getSectionRecursive(path, this.schema);\n        if (schemaRef) {\n            return Parser.asSchema(schemaRef);\n        }\n        return undefined;\n    };\n    ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n        if (!schema || typeof schema === 'boolean' || path.length === 0) {\n            return schema;\n        }\n        var next = path.shift();\n        if (schema.properties && typeof schema.properties[next]) {\n            return this.getSectionRecursive(path, schema.properties[next]);\n        }\n        else if (schema.patternProperties) {\n            for (var _i = 0, _a = Object.keys(schema.patternProperties); _i < _a.length; _i++) {\n                var pattern = _a[_i];\n                var regex = new RegExp(pattern);\n                if (regex.test(next)) {\n                    return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n                }\n            }\n        }\n        else if (typeof schema.additionalProperties === 'object') {\n            return this.getSectionRecursive(path, schema.additionalProperties);\n        }\n        else if (next.match('[0-9]+')) {\n            if (Array.isArray(schema.items)) {\n                var index = parseInt(next, 10);\n                if (!isNaN(index) && schema.items[index]) {\n                    return this.getSectionRecursive(path, schema.items[index]);\n                }\n            }\n            else if (schema.items) {\n                return this.getSectionRecursive(path, schema.items);\n            }\n        }\n        return undefined;\n    };\n    return ResolvedSchema;\n}());\nexport { ResolvedSchema };\nvar JSONSchemaService = /** @class */ (function () {\n    function JSONSchemaService(requestService, contextService, promiseConstructor) {\n        this.contextService = contextService;\n        this.requestService = requestService;\n        this.promiseConstructor = promiseConstructor || Promise;\n        this.callOnDispose = [];\n        this.contributionSchemas = {};\n        this.contributionAssociations = [];\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.registeredSchemasIds = {};\n    }\n    JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n        return Object.keys(this.registeredSchemasIds).filter(function (id) {\n            var scheme = URI.parse(id).scheme;\n            return scheme !== 'schemaservice' && (!filter || filter(scheme));\n        });\n    };\n    Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n        get: function () {\n            return this.promiseConstructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JSONSchemaService.prototype.dispose = function () {\n        while (this.callOnDispose.length > 0) {\n            this.callOnDispose.pop()();\n        }\n    };\n    JSONSchemaService.prototype.onResourceChange = function (uri) {\n        var _this = this;\n        var hasChanges = false;\n        uri = normalizeId(uri);\n        var toWalk = [uri];\n        var all = Object.keys(this.schemasById).map(function (key) { return _this.schemasById[key]; });\n        while (toWalk.length) {\n            var curr = toWalk.pop();\n            for (var i = 0; i < all.length; i++) {\n                var handle = all[i];\n                if (handle && (handle.url === curr || handle.dependencies[curr])) {\n                    if (handle.url !== curr) {\n                        toWalk.push(handle.url);\n                    }\n                    handle.clearSchema();\n                    all[i] = undefined;\n                    hasChanges = true;\n                }\n            }\n        }\n        return hasChanges;\n    };\n    JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n        if (schemaContributions.schemas) {\n            var schemas = schemaContributions.schemas;\n            for (var id in schemas) {\n                var normalizedId = normalizeId(id);\n                this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n            }\n        }\n        if (Array.isArray(schemaContributions.schemaAssociations)) {\n            var schemaAssociations = schemaContributions.schemaAssociations;\n            for (var _i = 0, schemaAssociations_1 = schemaAssociations; _i < schemaAssociations_1.length; _i++) {\n                var schemaAssociation = schemaAssociations_1[_i];\n                var uris = schemaAssociation.uris.map(normalizeId);\n                var association = this.addFilePatternAssociation(schemaAssociation.pattern, uris);\n                this.contributionAssociations.push(association);\n            }\n        }\n    };\n    JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n        var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n        this.schemasById[id] = schemaHandle;\n        return schemaHandle;\n    };\n    JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n        return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n    };\n    JSONSchemaService.prototype.addFilePatternAssociation = function (pattern, uris) {\n        var fpa = new FilePatternAssociation(pattern, uris);\n        this.filePatternAssociations.push(fpa);\n        return fpa;\n    };\n    JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n        var id = normalizeId(uri);\n        this.registeredSchemasIds[id] = true;\n        this.cachedSchemaForResource = undefined;\n        if (filePatterns) {\n            this.addFilePatternAssociation(filePatterns, [uri]);\n        }\n        return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n    };\n    JSONSchemaService.prototype.clearExternalSchemas = function () {\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.registeredSchemasIds = {};\n        this.cachedSchemaForResource = undefined;\n        for (var id in this.contributionSchemas) {\n            this.schemasById[id] = this.contributionSchemas[id];\n            this.registeredSchemasIds[id] = true;\n        }\n        for (var _i = 0, _a = this.contributionAssociations; _i < _a.length; _i++) {\n            var contributionAssociation = _a[_i];\n            this.filePatternAssociations.push(contributionAssociation);\n        }\n    };\n    JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n        var id = normalizeId(schemaId);\n        var schemaHandle = this.schemasById[id];\n        if (schemaHandle) {\n            return schemaHandle.getResolvedSchema();\n        }\n        return this.promise.resolve(undefined);\n    };\n    JSONSchemaService.prototype.loadSchema = function (url) {\n        if (!this.requestService) {\n            var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n            return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n        }\n        return this.requestService(url).then(function (content) {\n            if (!content) {\n                var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n                return new UnresolvedSchema({}, [errorMessage]);\n            }\n            var schemaContent = {};\n            var jsonErrors = [];\n            schemaContent = Json.parse(content, jsonErrors);\n            var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n            return new UnresolvedSchema(schemaContent, errors);\n        }, function (error) {\n            var errorMessage = error.toString();\n            var errorSplit = error.toString().split('Error: ');\n            if (errorSplit.length > 1) {\n                // more concise error message, URL and context are attached by caller anyways\n                errorMessage = errorSplit[1];\n            }\n            if (Strings.endsWith(errorMessage, '.')) {\n                errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n            }\n            return new UnresolvedSchema({}, [localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': {1}.', toDisplayString(url), errorMessage)]);\n        });\n    };\n    JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL, dependencies) {\n        var _this = this;\n        var resolveErrors = schemaToResolve.errors.slice(0);\n        var schema = schemaToResolve.schema;\n        if (schema.$schema) {\n            var id = normalizeId(schema.$schema);\n            if (id === 'http://json-schema.org/draft-03/schema') {\n                return this.promise.resolve(new ResolvedSchema({}, [localize('json.schema.draft03.notsupported', \"Draft-03 schemas are not supported.\")]));\n            }\n            else if (id === 'https://json-schema.org/draft/2019-09/schema') {\n                schemaToResolve.errors.push(localize('json.schema.draft201909.notsupported', \"Draft 2019-09 schemas are not yet fully supported.\"));\n            }\n        }\n        var contextService = this.contextService;\n        var findSection = function (schema, path) {\n            if (!path) {\n                return schema;\n            }\n            var current = schema;\n            if (path[0] === '/') {\n                path = path.substr(1);\n            }\n            path.split('/').some(function (part) {\n                current = current[part];\n                return !current;\n            });\n            return current;\n        };\n        var merge = function (target, sourceRoot, sourceURI, refSegment) {\n            var path = refSegment ? decodeURIComponent(refSegment) : undefined;\n            var section = findSection(sourceRoot, path);\n            if (section) {\n                for (var key in section) {\n                    if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                        target[key] = section[key];\n                    }\n                }\n            }\n            else {\n                resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n            }\n        };\n        var resolveExternalLink = function (node, uri, refSegment, parentSchemaURL, parentSchemaDependencies) {\n            if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n                uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n            }\n            uri = normalizeId(uri);\n            var referencedHandle = _this.getOrAddSchemaHandle(uri);\n            return referencedHandle.getUnresolvedSchema().then(function (unresolvedSchema) {\n                parentSchemaDependencies[uri] = true;\n                if (unresolvedSchema.errors.length) {\n                    var loc = refSegment ? uri + '#' + refSegment : uri;\n                    resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n                }\n                merge(node, unresolvedSchema.schema, uri, refSegment);\n                return resolveRefs(node, unresolvedSchema.schema, uri, referencedHandle.dependencies);\n            });\n        };\n        var resolveRefs = function (node, parentSchema, parentSchemaURL, parentSchemaDependencies) {\n            if (!node || typeof node !== 'object') {\n                return Promise.resolve(null);\n            }\n            var toWalk = [node];\n            var seen = [];\n            var openPromises = [];\n            var collectEntries = function () {\n                var entries = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    entries[_i] = arguments[_i];\n                }\n                for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n                    var entry = entries_1[_a];\n                    if (typeof entry === 'object') {\n                        toWalk.push(entry);\n                    }\n                }\n            };\n            var collectMapEntries = function () {\n                var maps = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    maps[_i] = arguments[_i];\n                }\n                for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                    var map = maps_1[_a];\n                    if (typeof map === 'object') {\n                        for (var k in map) {\n                            var key = k;\n                            var entry = map[key];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var collectArrayEntries = function () {\n                var arrays = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    arrays[_i] = arguments[_i];\n                }\n                for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n                    var array = arrays_1[_a];\n                    if (Array.isArray(array)) {\n                        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n                            var entry = array_1[_b];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var handleRef = function (next) {\n                var seenRefs = [];\n                while (next.$ref) {\n                    var ref = next.$ref;\n                    var segments = ref.split('#', 2);\n                    delete next.$ref;\n                    if (segments[0].length > 0) {\n                        openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL, parentSchemaDependencies));\n                        return;\n                    }\n                    else {\n                        if (seenRefs.indexOf(ref) === -1) {\n                            merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again, use seenRefs to avoid circle\n                            seenRefs.push(ref);\n                        }\n                    }\n                }\n                collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else);\n                collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n                collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n            };\n            while (toWalk.length) {\n                var next = toWalk.pop();\n                if (seen.indexOf(next) >= 0) {\n                    continue;\n                }\n                seen.push(next);\n                handleRef(next);\n            }\n            return _this.promise.all(openPromises);\n        };\n        return resolveRefs(schema, schema, schemaURL, dependencies).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\n    };\n    JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n        // first use $schema if present\n        if (document && document.root && document.root.type === 'object') {\n            var schemaProperties = document.root.properties.filter(function (p) { return (p.keyNode.value === '$schema') && p.valueNode && p.valueNode.type === 'string'; });\n            if (schemaProperties.length > 0) {\n                var valueNode = schemaProperties[0].valueNode;\n                if (valueNode && valueNode.type === 'string') {\n                    var schemeId = Parser.getNodeValue(valueNode);\n                    if (schemeId && Strings.startsWith(schemeId, '.') && this.contextService) {\n                        schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n                    }\n                    if (schemeId) {\n                        var id = normalizeId(schemeId);\n                        return this.getOrAddSchemaHandle(id).getResolvedSchema();\n                    }\n                }\n            }\n        }\n        if (this.cachedSchemaForResource && this.cachedSchemaForResource.resource === resource) {\n            return this.cachedSchemaForResource.resolvedSchema;\n        }\n        var seen = Object.create(null);\n        var schemas = [];\n        for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.matchesPattern(resource)) {\n                for (var _b = 0, _c = entry.getURIs(); _b < _c.length; _b++) {\n                    var schemaId = _c[_b];\n                    if (!seen[schemaId]) {\n                        schemas.push(schemaId);\n                        seen[schemaId] = true;\n                    }\n                }\n            }\n        }\n        var resolvedSchema = schemas.length > 0 ? this.createCombinedSchema(resource, schemas).getResolvedSchema() : this.promise.resolve(undefined);\n        this.cachedSchemaForResource = { resource: resource, resolvedSchema: resolvedSchema };\n        return resolvedSchema;\n    };\n    JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n        if (schemaIds.length === 1) {\n            return this.getOrAddSchemaHandle(schemaIds[0]);\n        }\n        else {\n            var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n            var combinedSchema = {\n                allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\n            };\n            return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n        }\n    };\n    return JSONSchemaService;\n}());\nexport { JSONSchemaService };\nfunction normalizeId(id) {\n    // remove trailing '#', normalize drive capitalization\n    try {\n        return URI.parse(id).toString();\n    }\n    catch (e) {\n        return id;\n    }\n}\nfunction toDisplayString(url) {\n    try {\n        var uri = URI.parse(url);\n        if (uri.scheme === 'file') {\n            return uri.fsPath;\n        }\n    }\n    catch (e) {\n        // ignore\n    }\n    return url;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UnresolvedSchema } from './jsonSchemaService';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes';\nimport * as nls from 'vscode-nls';\nimport { isBoolean } from '../utils/objects';\nvar localize = nls.loadMessageBundle();\nvar JSONValidation = /** @class */ (function () {\n    function JSONValidation(jsonSchemaService, promiseConstructor) {\n        this.jsonSchemaService = jsonSchemaService;\n        this.promise = promiseConstructor;\n        this.validationEnabled = true;\n    }\n    JSONValidation.prototype.configure = function (raw) {\n        if (raw) {\n            this.validationEnabled = raw.validate;\n            this.commentSeverity = raw.allowComments ? undefined : DiagnosticSeverity.Error;\n        }\n    };\n    JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings, schema) {\n        var _this = this;\n        if (!this.validationEnabled) {\n            return this.promise.resolve([]);\n        }\n        var diagnostics = [];\n        var added = {};\n        var addProblem = function (problem) {\n            // remove duplicated messages\n            var signature = problem.range.start.line + ' ' + problem.range.start.character + ' ' + problem.message;\n            if (!added[signature]) {\n                added[signature] = true;\n                diagnostics.push(problem);\n            }\n        };\n        var getDiagnostics = function (schema) {\n            var trailingCommaSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n            var commentSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.comments) : _this.commentSeverity;\n            if (schema) {\n                if (schema.errors.length && jsonDocument.root) {\n                    var astRoot = jsonDocument.root;\n                    var property = astRoot.type === 'object' ? astRoot.properties[0] : undefined;\n                    if (property && property.keyNode.value === '$schema') {\n                        var node = property.valueNode || property;\n                        var range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                    else {\n                        var range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                }\n                else {\n                    var semanticErrors = jsonDocument.validate(textDocument, schema.schema);\n                    if (semanticErrors) {\n                        semanticErrors.forEach(addProblem);\n                    }\n                }\n                if (schemaAllowsComments(schema.schema)) {\n                    commentSeverity = undefined;\n                }\n                if (schemaAllowsTrailingCommas(schema.schema)) {\n                    trailingCommaSeverity = undefined;\n                }\n            }\n            for (var _i = 0, _a = jsonDocument.syntaxErrors; _i < _a.length; _i++) {\n                var p = _a[_i];\n                if (p.code === ErrorCode.TrailingComma) {\n                    if (typeof trailingCommaSeverity !== 'number') {\n                        continue;\n                    }\n                    p.severity = trailingCommaSeverity;\n                }\n                addProblem(p);\n            }\n            if (typeof commentSeverity === 'number') {\n                var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n                jsonDocument.comments.forEach(function (c) {\n                    addProblem(Diagnostic.create(c, message_1, commentSeverity, ErrorCode.CommentNotPermitted));\n                });\n            }\n            return diagnostics;\n        };\n        if (schema) {\n            var id = schema.id || ('schemaservice://untitled/' + idCounter++);\n            return this.jsonSchemaService.resolveSchemaContent(new UnresolvedSchema(schema), id, {}).then(function (resolvedSchema) {\n                return getDiagnostics(resolvedSchema);\n            });\n        }\n        return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n            return getDiagnostics(schema);\n        });\n    };\n    return JSONValidation;\n}());\nexport { JSONValidation };\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowComments)) {\n            return schemaRef.allowComments;\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsComments(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowTrailingCommas)) {\n            return schemaRef.allowTrailingCommas;\n        }\n        var deprSchemaRef = schemaRef;\n        if (isBoolean(deprSchemaRef['allowsTrailingCommas'])) { // deprecated\n            return deprSchemaRef['allowsTrailingCommas'];\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsTrailingCommas(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n    switch (severityLevel) {\n        case 'error': return DiagnosticSeverity.Error;\n        case 'warning': return DiagnosticSeverity.Warning;\n        case 'ignore': return undefined;\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nexport function hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nexport function colorFromHex(text) {\n    if (text[0] !== '#') {\n        return undefined;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return undefined;\n}\nexport function colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser';\nimport * as Strings from '../utils/strings';\nimport { colorFromHex } from '../utils/colors';\nimport { Range, TextEdit, SymbolKind, Location } from \"../jsonLanguageTypes\";\nvar JSONDocumentSymbols = /** @class */ (function () {\n    function JSONDocumentSymbols(schemaService) {\n        this.schemaService = schemaService;\n    }\n    JSONDocumentSymbols.prototype.findDocumentSymbols = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return [];\n        }\n        var limit = context.resultLimit || Number.MAX_VALUE;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_1 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var location = Location.create(document.uri, getRange(document, item));\n                                result_1.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, location: location });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_1;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_1;\n            }\n        }\n        var toVisit = [\n            { node: root, containerName: '' }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var result = [];\n        var collectOutlineEntries = function (node, containerName) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node) {\n                    if (node) {\n                        toVisit.push({ node: node, containerName: containerName });\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var location = Location.create(document.uri, getRange(document, property));\n                            var childContainerName = containerName ? containerName + '.' + property.keyNode.value : property.keyNode.value;\n                            result.push({ name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), location: location, containerName: containerName });\n                            toVisit.push({ node: valueNode, containerName: childContainerName });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.containerName);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.findDocumentSymbols2 = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return [];\n        }\n        var limit = context.resultLimit || Number.MAX_VALUE;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_2 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var range = getRange(document, item);\n                                var selectionRange = getRange(document, property.keyNode);\n                                result_2.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, range: range, selectionRange: selectionRange });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_2;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_2;\n            }\n        }\n        var result = [];\n        var toVisit = [\n            { node: root, result: result }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var collectOutlineEntries = function (node, result) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node, index) {\n                    if (node) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, node);\n                            var selectionRange = range;\n                            var name = String(index);\n                            var symbol = { name: name, kind: _this.getSymbolKind(node.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: node });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, property);\n                            var selectionRange = getRange(document, property.keyNode);\n                            var symbol = { name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: valueNode });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.result);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.getSymbolKind = function (nodeType) {\n        switch (nodeType) {\n            case 'object':\n                return SymbolKind.Module;\n            case 'string':\n                return SymbolKind.String;\n            case 'number':\n                return SymbolKind.Number;\n            case 'array':\n                return SymbolKind.Array;\n            case 'boolean':\n                return SymbolKind.Boolean;\n            default: // 'null'\n                return SymbolKind.Variable;\n        }\n    };\n    JSONDocumentSymbols.prototype.getKeyLabel = function (property) {\n        var name = property.keyNode.value;\n        if (name) {\n            name = name.replace(/[\\n]/g, '↵');\n        }\n        if (name && name.trim()) {\n            return name;\n        }\n        return \"\\\"\" + name + \"\\\"\";\n    };\n    JSONDocumentSymbols.prototype.findDocumentColors = function (document, doc, context) {\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var result = [];\n            if (schema) {\n                var limit = context && typeof context.resultLimit === 'number' ? context.resultLimit : Number.MAX_VALUE;\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema);\n                var visitedNode = {};\n                for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n                    var s = matchingSchemas_1[_i];\n                    if (!s.inverted && s.schema && (s.schema.format === 'color' || s.schema.format === 'color-hex') && s.node && s.node.type === 'string') {\n                        var nodeId = String(s.node.offset);\n                        if (!visitedNode[nodeId]) {\n                            var color = colorFromHex(Parser.getNodeValue(s.node));\n                            if (color) {\n                                var range = getRange(document, s.node);\n                                result.push({ color: color, range: range });\n                            }\n                            visitedNode[nodeId] = true;\n                            limit--;\n                            if (limit <= 0) {\n                                if (context && context.onResultLimitExceeded) {\n                                    context.onResultLimitExceeded(document.uri);\n                                }\n                                return result;\n                            }\n                        }\n                    }\n                }\n            }\n            return result;\n        });\n    };\n    JSONDocumentSymbols.prototype.getColorPresentations = function (document, doc, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        function toTwoDigitHex(n) {\n            var r = n.toString(16);\n            return r.length !== 2 ? '0' + r : r;\n        }\n        var label;\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: TextEdit.replace(range, JSON.stringify(label)) });\n        return result;\n    };\n    return JSONDocumentSymbols;\n}());\nexport { JSONDocumentSymbols };\nfunction getRange(document, node) {\n    return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nexport var schemaContributions = {\n    schemaAssociations: [],\n    schemas: {\n        // refer to the latest schema\n        'http://json-schema.org/schema#': {\n            $ref: 'http://json-schema.org/draft-07/schema#'\n        },\n        // bundle the schema-schema to include (localized) descriptions\n        'http://json-schema.org/draft-04/schema#': {\n            'title': localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n            '$schema': 'http://json-schema.org/draft-04/schema#',\n            'definitions': {\n                'schemaArray': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'items': {\n                        '$ref': '#'\n                    }\n                },\n                'positiveInteger': {\n                    'type': 'integer',\n                    'minimum': 0\n                },\n                'positiveIntegerDefault0': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        },\n                        {\n                            'default': 0\n                        }\n                    ]\n                },\n                'simpleTypes': {\n                    'type': 'string',\n                    'enum': [\n                        'array',\n                        'boolean',\n                        'integer',\n                        'null',\n                        'number',\n                        'object',\n                        'string'\n                    ]\n                },\n                'stringArray': {\n                    'type': 'array',\n                    'items': {\n                        'type': 'string'\n                    },\n                    'minItems': 1,\n                    'uniqueItems': true\n                }\n            },\n            'type': 'object',\n            'properties': {\n                'id': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                '$schema': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                'title': {\n                    'type': 'string'\n                },\n                'description': {\n                    'type': 'string'\n                },\n                'default': {},\n                'multipleOf': {\n                    'type': 'number',\n                    'minimum': 0,\n                    'exclusiveMinimum': true\n                },\n                'maximum': {\n                    'type': 'number'\n                },\n                'exclusiveMaximum': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'minimum': {\n                    'type': 'number'\n                },\n                'exclusiveMinimum': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'maxLength': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minLength': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'pattern': {\n                    'type': 'string',\n                    'format': 'regex'\n                },\n                'additionalItems': {\n                    'anyOf': [\n                        {\n                            'type': 'boolean'\n                        },\n                        {\n                            '$ref': '#'\n                        }\n                    ],\n                    'default': {}\n                },\n                'items': {\n                    'anyOf': [\n                        {\n                            '$ref': '#'\n                        },\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ],\n                    'default': {}\n                },\n                'maxItems': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minItems': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'uniqueItems': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'maxProperties': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minProperties': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'required': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/stringArray'\n                        }\n                    ]\n                },\n                'additionalProperties': {\n                    'anyOf': [\n                        {\n                            'type': 'boolean'\n                        },\n                        {\n                            '$ref': '#'\n                        }\n                    ],\n                    'default': {}\n                },\n                'definitions': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'properties': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'patternProperties': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'dependencies': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        'anyOf': [\n                            {\n                                '$ref': '#'\n                            },\n                            {\n                                '$ref': '#/definitions/stringArray'\n                            }\n                        ]\n                    }\n                },\n                'enum': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'uniqueItems': true\n                },\n                'type': {\n                    'anyOf': [\n                        {\n                            '$ref': '#/definitions/simpleTypes'\n                        },\n                        {\n                            'type': 'array',\n                            'items': {\n                                '$ref': '#/definitions/simpleTypes'\n                            },\n                            'minItems': 1,\n                            'uniqueItems': true\n                        }\n                    ]\n                },\n                'format': {\n                    'anyOf': [\n                        {\n                            'type': 'string',\n                            'enum': [\n                                'date-time',\n                                'uri',\n                                'email',\n                                'hostname',\n                                'ipv4',\n                                'ipv6',\n                                'regex'\n                            ]\n                        },\n                        {\n                            'type': 'string'\n                        }\n                    ]\n                },\n                'allOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'anyOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'oneOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'not': {\n                    'allOf': [\n                        {\n                            '$ref': '#'\n                        }\n                    ]\n                }\n            },\n            'dependencies': {\n                'exclusiveMaximum': [\n                    'maximum'\n                ],\n                'exclusiveMinimum': [\n                    'minimum'\n                ]\n            },\n            'default': {}\n        },\n        'http://json-schema.org/draft-07/schema#': {\n            'title': localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n            'definitions': {\n                'schemaArray': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'items': { '$ref': '#' }\n                },\n                'nonNegativeInteger': {\n                    'type': 'integer',\n                    'minimum': 0\n                },\n                'nonNegativeIntegerDefault0': {\n                    'allOf': [\n                        { '$ref': '#/definitions/nonNegativeInteger' },\n                        { 'default': 0 }\n                    ]\n                },\n                'simpleTypes': {\n                    'enum': [\n                        'array',\n                        'boolean',\n                        'integer',\n                        'null',\n                        'number',\n                        'object',\n                        'string'\n                    ]\n                },\n                'stringArray': {\n                    'type': 'array',\n                    'items': { 'type': 'string' },\n                    'uniqueItems': true,\n                    'default': []\n                }\n            },\n            'type': ['object', 'boolean'],\n            'properties': {\n                '$id': {\n                    'type': 'string',\n                    'format': 'uri-reference'\n                },\n                '$schema': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                '$ref': {\n                    'type': 'string',\n                    'format': 'uri-reference'\n                },\n                '$comment': {\n                    'type': 'string'\n                },\n                'title': {\n                    'type': 'string'\n                },\n                'description': {\n                    'type': 'string'\n                },\n                'default': true,\n                'readOnly': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'examples': {\n                    'type': 'array',\n                    'items': true\n                },\n                'multipleOf': {\n                    'type': 'number',\n                    'exclusiveMinimum': 0\n                },\n                'maximum': {\n                    'type': 'number'\n                },\n                'exclusiveMaximum': {\n                    'type': 'number'\n                },\n                'minimum': {\n                    'type': 'number'\n                },\n                'exclusiveMinimum': {\n                    'type': 'number'\n                },\n                'maxLength': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minLength': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'pattern': {\n                    'type': 'string',\n                    'format': 'regex'\n                },\n                'additionalItems': { '$ref': '#' },\n                'items': {\n                    'anyOf': [\n                        { '$ref': '#' },\n                        { '$ref': '#/definitions/schemaArray' }\n                    ],\n                    'default': true\n                },\n                'maxItems': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minItems': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'uniqueItems': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'contains': { '$ref': '#' },\n                'maxProperties': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minProperties': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'required': { '$ref': '#/definitions/stringArray' },\n                'additionalProperties': { '$ref': '#' },\n                'definitions': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {}\n                },\n                'properties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {}\n                },\n                'patternProperties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'propertyNames': { 'format': 'regex' },\n                    'default': {}\n                },\n                'dependencies': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        'anyOf': [\n                            { '$ref': '#' },\n                            { '$ref': '#/definitions/stringArray' }\n                        ]\n                    }\n                },\n                'propertyNames': { '$ref': '#' },\n                'const': true,\n                'enum': {\n                    'type': 'array',\n                    'items': true,\n                    'minItems': 1,\n                    'uniqueItems': true\n                },\n                'type': {\n                    'anyOf': [\n                        { '$ref': '#/definitions/simpleTypes' },\n                        {\n                            'type': 'array',\n                            'items': { '$ref': '#/definitions/simpleTypes' },\n                            'minItems': 1,\n                            'uniqueItems': true\n                        }\n                    ]\n                },\n                'format': { 'type': 'string' },\n                'contentMediaType': { 'type': 'string' },\n                'contentEncoding': { 'type': 'string' },\n                'if': { '$ref': '#' },\n                'then': { '$ref': '#' },\n                'else': { '$ref': '#' },\n                'allOf': { '$ref': '#/definitions/schemaArray' },\n                'anyOf': { '$ref': '#/definitions/schemaArray' },\n                'oneOf': { '$ref': '#/definitions/schemaArray' },\n                'not': { '$ref': '#' }\n            },\n            'default': true\n        }\n    }\n};\nvar descriptions = {\n    id: localize('schema.json.id', \"A unique identifier for the schema.\"),\n    $schema: localize('schema.json.$schema', \"The schema to verify this document against.\"),\n    title: localize('schema.json.title', \"A descriptive title of the element.\"),\n    description: localize('schema.json.description', \"A long description of the element. Used in hover menus and suggestions.\"),\n    default: localize('schema.json.default', \"A default value. Used by suggestions.\"),\n    multipleOf: localize('schema.json.multipleOf', \"A number that should cleanly divide the current value (i.e. have no remainder).\"),\n    maximum: localize('schema.json.maximum', \"The maximum numerical value, inclusive by default.\"),\n    exclusiveMaximum: localize('schema.json.exclusiveMaximum', \"Makes the maximum property exclusive.\"),\n    minimum: localize('schema.json.minimum', \"The minimum numerical value, inclusive by default.\"),\n    exclusiveMinimum: localize('schema.json.exclusiveMininum', \"Makes the minimum property exclusive.\"),\n    maxLength: localize('schema.json.maxLength', \"The maximum length of a string.\"),\n    minLength: localize('schema.json.minLength', \"The minimum length of a string.\"),\n    pattern: localize('schema.json.pattern', \"A regular expression to match the string against. It is not implicitly anchored.\"),\n    additionalItems: localize('schema.json.additionalItems', \"For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.\"),\n    items: localize('schema.json.items', \"For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.\"),\n    maxItems: localize('schema.json.maxItems', \"The maximum number of items that can be inside an array. Inclusive.\"),\n    minItems: localize('schema.json.minItems', \"The minimum number of items that can be inside an array. Inclusive.\"),\n    uniqueItems: localize('schema.json.uniqueItems', \"If all of the items in the array must be unique. Defaults to false.\"),\n    maxProperties: localize('schema.json.maxProperties', \"The maximum number of properties an object can have. Inclusive.\"),\n    minProperties: localize('schema.json.minProperties', \"The minimum number of properties an object can have. Inclusive.\"),\n    required: localize('schema.json.required', \"An array of strings that lists the names of all properties required on this object.\"),\n    additionalProperties: localize('schema.json.additionalProperties', \"Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.\"),\n    definitions: localize('schema.json.definitions', \"Not used for validation. Place subschemas here that you wish to reference inline with $ref.\"),\n    properties: localize('schema.json.properties', \"A map of property names to schemas for each property.\"),\n    patternProperties: localize('schema.json.patternProperties', \"A map of regular expressions on property names to schemas for matching properties.\"),\n    dependencies: localize('schema.json.dependencies', \"A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.\"),\n    enum: localize('schema.json.enum', \"The set of literal values that are valid.\"),\n    type: localize('schema.json.type', \"Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.\"),\n    format: localize('schema.json.format', \"Describes the format expected for the value.\"),\n    allOf: localize('schema.json.allOf', \"An array of schemas, all of which must match.\"),\n    anyOf: localize('schema.json.anyOf', \"An array of schemas, where at least one must match.\"),\n    oneOf: localize('schema.json.oneOf', \"An array of schemas, exactly one of which must match.\"),\n    not: localize('schema.json.not', \"A schema which must not match.\"),\n    $id: localize('schema.json.$id', \"A unique identifier for the schema.\"),\n    $ref: localize('schema.json.$ref', \"Reference a definition hosted on any location.\"),\n    $comment: localize('schema.json.$comment', \"Comments from schema authors to readers or maintainers of the schema.\"),\n    readOnly: localize('schema.json.readOnly', \"Indicates that the value of the instance is managed exclusively by the owning authority.\"),\n    examples: localize('schema.json.examples', \"Sample JSON values associated with a particular schema, for the purpose of illustrating usage.\"),\n    contains: localize('schema.json.contains', \"An array instance is valid against \\\"contains\\\" if at least one of its elements is valid against the given schema.\"),\n    propertyNames: localize('schema.json.propertyNames', \"If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.\"),\n    const: localize('schema.json.const', \"An instance validates successfully against this keyword if its value is equal to the value of the keyword.\"),\n    contentMediaType: localize('schema.json.contentMediaType', \"Describes the media type of a string property.\"),\n    contentEncoding: localize('schema.json.contentEncoding', \"Describes the content encoding of a string property.\"),\n    if: localize('schema.json.if', \"The validation outcome of the \\\"if\\\" subschema controls which of the \\\"then\\\" or \\\"else\\\" keywords are evaluated.\"),\n    then: localize('schema.json.then', \"The \\\"if\\\" subschema is used for validation when the \\\"if\\\" subschema succeeds.\"),\n    else: localize('schema.json.else', \"The \\\"else\\\" subschema is used for validation when the \\\"if\\\" subschema fails.\")\n};\nfor (var schemaName in schemaContributions.schemas) {\n    var schema = schemaContributions.schemas[schemaName];\n    for (var property in schema.properties) {\n        var propertyObject = schema.properties[property];\n        if (typeof propertyObject === 'boolean') {\n            propertyObject = schema.properties[property] = {};\n        }\n        var description = descriptions[property];\n        if (description) {\n            propertyObject['description'] = description;\n        }\n        else {\n            console.log(property + \": localize('schema.json.\" + property + \"', \\\"\\\")\");\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from 'jsonc-parser';\nimport { FoldingRangeKind, Position } from '../jsonLanguageTypes';\nexport function getFoldingRanges(document, context) {\n    var ranges = [];\n    var nestingLevels = [];\n    var stack = [];\n    var prevStart = -1;\n    var scanner = createScanner(document.getText(), false);\n    var token = scanner.scan();\n    function addRange(range) {\n        ranges.push(range);\n        nestingLevels.push(stack.length);\n    }\n    while (token !== 17 /* EOF */) {\n        switch (token) {\n            case 1 /* OpenBraceToken */:\n            case 3 /* OpenBracketToken */: {\n                var startLine = document.positionAt(scanner.getTokenOffset()).line;\n                var range = { startLine: startLine, endLine: startLine, kind: token === 1 /* OpenBraceToken */ ? 'object' : 'array' };\n                stack.push(range);\n                break;\n            }\n            case 2 /* CloseBraceToken */:\n            case 4 /* CloseBracketToken */: {\n                var kind = token === 2 /* CloseBraceToken */ ? 'object' : 'array';\n                if (stack.length > 0 && stack[stack.length - 1].kind === kind) {\n                    var range = stack.pop();\n                    var line = document.positionAt(scanner.getTokenOffset()).line;\n                    if (range && line > range.startLine + 1 && prevStart !== range.startLine) {\n                        range.endLine = line - 1;\n                        addRange(range);\n                        prevStart = range.startLine;\n                    }\n                }\n                break;\n            }\n            case 13 /* BlockCommentTrivia */: {\n                var startLine = document.positionAt(scanner.getTokenOffset()).line;\n                var endLine = document.positionAt(scanner.getTokenOffset() + scanner.getTokenLength()).line;\n                if (scanner.getTokenError() === 1 /* UnexpectedEndOfComment */ && startLine + 1 < document.lineCount) {\n                    scanner.setPosition(document.offsetAt(Position.create(startLine + 1, 0)));\n                }\n                else {\n                    if (startLine < endLine) {\n                        addRange({ startLine: startLine, endLine: endLine, kind: FoldingRangeKind.Comment });\n                        prevStart = startLine;\n                    }\n                }\n                break;\n            }\n            case 12 /* LineCommentTrivia */: {\n                var text = document.getText().substr(scanner.getTokenOffset(), scanner.getTokenLength());\n                var m = text.match(/^\\/\\/\\s*#(region\\b)|(endregion\\b)/);\n                if (m) {\n                    var line = document.positionAt(scanner.getTokenOffset()).line;\n                    if (m[1]) { // start pattern match\n                        var range = { startLine: line, endLine: line, kind: FoldingRangeKind.Region };\n                        stack.push(range);\n                    }\n                    else {\n                        var i = stack.length - 1;\n                        while (i >= 0 && stack[i].kind !== FoldingRangeKind.Region) {\n                            i--;\n                        }\n                        if (i >= 0) {\n                            var range = stack[i];\n                            stack.length = i;\n                            if (line > range.startLine && prevStart !== range.startLine) {\n                                range.endLine = line;\n                                addRange(range);\n                                prevStart = range.startLine;\n                            }\n                        }\n                    }\n                }\n                break;\n            }\n        }\n        token = scanner.scan();\n    }\n    var rangeLimit = context && context.rangeLimit;\n    if (typeof rangeLimit !== 'number' || ranges.length <= rangeLimit) {\n        return ranges;\n    }\n    if (context && context.onRangeLimitExceeded) {\n        context.onRangeLimitExceeded(document.uri);\n    }\n    var counts = [];\n    for (var _i = 0, nestingLevels_1 = nestingLevels; _i < nestingLevels_1.length; _i++) {\n        var level = nestingLevels_1[_i];\n        if (level < 30) {\n            counts[level] = (counts[level] || 0) + 1;\n        }\n    }\n    var entries = 0;\n    var maxLevel = 0;\n    for (var i = 0; i < counts.length; i++) {\n        var n = counts[i];\n        if (n) {\n            if (n + entries > rangeLimit) {\n                maxLevel = i;\n                break;\n            }\n            entries += n;\n        }\n    }\n    var result = [];\n    for (var i = 0; i < ranges.length; i++) {\n        var level = nestingLevels[i];\n        if (typeof level === 'number') {\n            if (level < maxLevel || (level === maxLevel && entries++ < rangeLimit)) {\n                result.push(ranges[i]);\n            }\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range, SelectionRange } from '../jsonLanguageTypes';\nimport { createScanner } from 'jsonc-parser';\nexport function getSelectionRanges(document, positions, doc) {\n    function getSelectionRange(position) {\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset, true);\n        var result = [];\n        while (node) {\n            switch (node.type) {\n                case 'string':\n                case 'object':\n                case 'array':\n                    // range without \", [ or {\n                    var cStart = node.offset + 1, cEnd = node.offset + node.length - 1;\n                    if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n                        result.push(newRange(cStart, cEnd));\n                    }\n                    result.push(newRange(node.offset, node.offset + node.length));\n                    break;\n                case 'number':\n                case 'boolean':\n                case 'null':\n                case 'property':\n                    result.push(newRange(node.offset, node.offset + node.length));\n                    break;\n            }\n            if (node.type === 'property' || node.parent && node.parent.type === 'array') {\n                var afterCommaOffset = getOffsetAfterNextToken(node.offset + node.length, 5 /* CommaToken */);\n                if (afterCommaOffset !== -1) {\n                    result.push(newRange(node.offset, afterCommaOffset));\n                }\n            }\n            node = node.parent;\n        }\n        var current = undefined;\n        for (var index = result.length - 1; index >= 0; index--) {\n            current = SelectionRange.create(result[index], current);\n        }\n        if (!current) {\n            current = SelectionRange.create(Range.create(position, position));\n        }\n        return current;\n    }\n    function newRange(start, end) {\n        return Range.create(document.positionAt(start), document.positionAt(end));\n    }\n    var scanner = createScanner(document.getText(), true);\n    function getOffsetAfterNextToken(offset, expectedToken) {\n        scanner.setPosition(offset);\n        var token = scanner.scan();\n        if (token === expectedToken) {\n            return scanner.getTokenOffset() + scanner.getTokenLength();\n        }\n        return -1;\n    }\n    return positions.map(getSelectionRange);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { JSONCompletion } from './services/jsonCompletion';\nimport { JSONHover } from './services/jsonHover';\nimport { JSONValidation } from './services/jsonValidation';\nimport { JSONDocumentSymbols } from './services/jsonDocumentSymbols';\nimport { parse as parseJSON, newJSONDocument } from './parser/jsonParser';\nimport { schemaContributions } from './services/configuration';\nimport { JSONSchemaService } from './services/jsonSchemaService';\nimport { getFoldingRanges } from './services/jsonFolding';\nimport { getSelectionRanges } from './services/jsonSelectionRanges';\nimport { format as formatJSON } from 'jsonc-parser';\nimport { Range, TextEdit } from './jsonLanguageTypes';\nexport * from './jsonLanguageTypes';\nexport function getLanguageService(params) {\n    var promise = params.promiseConstructor || Promise;\n    var jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n    jsonSchemaService.setSchemaContributions(schemaContributions);\n    var jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n    var jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n    var jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n    var jsonValidation = new JSONValidation(jsonSchemaService, promise);\n    return {\n        configure: function (settings) {\n            jsonSchemaService.clearExternalSchemas();\n            if (settings.schemas) {\n                settings.schemas.forEach(function (settings) {\n                    jsonSchemaService.registerExternalSchema(settings.uri, settings.fileMatch, settings.schema);\n                });\n            }\n            jsonValidation.configure(settings);\n        },\n        resetSchema: function (uri) { return jsonSchemaService.onResourceChange(uri); },\n        doValidation: jsonValidation.doValidation.bind(jsonValidation),\n        parseJSONDocument: function (document) { return parseJSON(document, { collectComments: true }); },\n        newJSONDocument: function (root, diagnostics) { return newJSONDocument(root, diagnostics); },\n        doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n        doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n        findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n        findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n        findColorSymbols: function (d, s) { return jsonDocumentSymbols.findDocumentColors(d, s).then(function (s) { return s.map(function (s) { return s.range; }); }); },\n        findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n        getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n        doHover: jsonHover.doHover.bind(jsonHover),\n        getFoldingRanges: getFoldingRanges,\n        getSelectionRanges: getSelectionRanges,\n        format: function (d, r, o) {\n            var range = undefined;\n            if (r) {\n                var offset = d.offsetAt(r.start);\n                var length = d.offsetAt(r.end) - offset;\n                range = { offset: offset, length: length };\n            }\n            var options = { tabSize: o ? o.tabSize : 4, insertSpaces: o ? o.insertSpaces : true, eol: '\\n' };\n            return formatJSON(d.getText(), range, options).map(function (e) {\n                return TextEdit.replace(Range.create(d.positionAt(e.offset), d.positionAt(e.offset + e.length)), e.content);\n            });\n        }\n    };\n}\n"],"sourceRoot":""}