{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"external \\\"vscode\\\"\",\"external \\\"path\\\"\",\"external \\\"fs\\\"\",\"/repo/lib/vscode/extensions/vscode-account/src/logger.ts\",\"/repo/lib/vscode/extensions/vscode-account/src/extension.ts\",\"/repo/lib/vscode/extensions/vscode-account/src/AADHelper.ts\",\"external \\\"crypto\\\"\",\"external \\\"https\\\"\",\"external \\\"querystring\\\"\",\"/repo/lib/vscode/extensions/vscode-account/src/authServer.ts\",\"external \\\"http\\\"\",\"external \\\"url\\\"\",\"/repo/lib/vscode/extensions/vscode-account/src/keychain.ts\",\"external \\\"keytar\\\"\",\"/repo/lib/vscode/extensions/vscode-account/src/utils.ts\",\"/repo/lib/vscode/extensions/vscode-account/node_modules/vscode-nls/lib/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"require\",\"vscode\",\"padLeft\",\"pad\",\"repeat\",\"Math\",\"max\",\"length\",\"Logger\",\"[object Object]\",\"this\",\"output\",\"window\",\"createOutputChannel\",\"data\",\"Error\",\"stack\",\"message\",\"success\",\"toString\",\"logLevel\",\"level\",\"appendLine\",\"now\",\"data2String\",\"Date\",\"getUTCHours\",\"getMinutes\",\"getUTCSeconds\",\"getMilliseconds\",\"default\",\"AADHelper_1\",\"localize\",\"loadMessageBundle\",\"join\",\"__dirname\",\"DEFAULT_SCOPES\",\"activate\",\"async\",\"context\",\"loginService\",\"AzureActiveDirectoryService\",\"initialize\",\"subscriptions\",\"push\",\"authentication\",\"registerAuthenticationProvider\",\"id\",\"displayName\",\"onDidChangeSessions\",\"event\",\"getSessions\",\"Promise\",\"resolve\",\"sessions\",\"login\",\"scopes\",\"sort\",\"e\",\"logout\",\"commands\",\"registerCommand\",\"fire\",\"showInformationMessage\",\"selectedSession\",\"showQuickPick\",\"map\",\"session\",\"label\",\"accountName\",\"deactivate\",\"crypto\",\"https\",\"querystring\",\"authServer_1\",\"keychain_1\",\"logger_1\",\"utils_1\",\"redirectUrl\",\"loginEndpointUrl\",\"clientId\",\"tenant\",\"EventEmitter\",\"REFRESH_NETWORK_FAILURE\",\"UriEventHandler\",\"uri\",\"_tokens\",\"_refreshTimeouts\",\"Map\",\"_uriHandler\",\"registerUriHandler\",\"storedData\",\"keychain\",\"getToken\",\"refreshes\",\"parseStoredData\",\"refreshToken\",\"scope\",\"handleRefreshNetworkError\",\"accessToken\",\"undefined\",\"sessionId\",\"pollForReconnect\",\"all\",\"clearSessions\",\"pollForChange\",\"JSON\",\"parse\",\"serializedData\",\"token\",\"setToken\",\"stringify\",\"setTimeout\",\"didChange\",\"promises\",\"some\",\"concat\",\"error\",\"getAccessToken\",\"resolveAccessToken\",\"split\",\"expiresAt\",\"info\",\"Buffer\",\"from\",\"convertToSession\",\"env\",\"uiKind\",\"UIKind\",\"Web\",\"loginWithoutLocalServer\",\"nonce\",\"randomBytes\",\"server\",\"redirectPromise\",\"codePromise\",\"createServer\",\"port\",\"startServer\",\"openExternal\",\"Uri\",\"encodeURIComponent\",\"redirectReq\",\"err\",\"res\",\"writeHead\",\"Location\",\"end\",\"host\",\"req\",\"headers\",\"updatedPortStr\",\"exec\",\"Array\",\"isArray\",\"state\",\"parseInt\",\"codeVerifier\",\"toBase64UrlEncoding\",\"codeChallenge\",\"createHash\",\"update\",\"digest\",\"loginUrl\",\"codeRes\",\"exchangeCodeForToken\",\"code\",\"close\",\"callbackUri\",\"authority\",\"asExternalUri\",\"uriScheme\",\"match\",\"scheme\",\"getCallbackEnvironment\",\"query\",\"signInUrl\",\"with\",\"timeoutPromise\",\"_\",\"reject\",\"wait\",\"clearTimeout\",\"race\",\"handleCodeResponse\",\"uriEventListener\",\"reduce\",\"prev\",\"current\",\"queryString\",\"parseQuery\",\"then\",\"result\",\"dispose\",\"catch\",\"existingTokenIndex\",\"findIndex\",\"splice\",\"clearSessionTimeout\",\"expiresIn\",\"set\",\"storeTokenData\",\"buffer\",\"json\",\"claims\",\"getTokenClaims\",\"access_token\",\"expires_in\",\"refresh_token\",\"tid\",\"oid\",\"altsecid\",\"ipd\",\"email\",\"unique_name\",\"postData\",\"grant_type\",\"client_id\",\"code_verifier\",\"redirect_uri\",\"tokenUrl\",\"post\",\"request\",\"path\",\"method\",\"Content-Type\",\"Content-Length\",\"on\",\"chunk\",\"statusCode\",\"getTokenFromResponse\",\"write\",\"timeout\",\"delete\",\"tokenIndex\",\"attempts\",\"find\",\"delayBeforeRetry\",\"removeInMemorySessionData\",\"deleteToken\",\"forEach\",\"clear\",\"http\",\"url\",\"fs\",\"_typeof\",\"number\",\"string\",\"function\",\"isUndefined\",\"obj\",\"isUndefinedOrNull\",\"assertIsDefined\",\"arg\",\"sendFile\",\"filepath\",\"contentType\",\"readFile\",\"body\",\"console\",\"createTerminateServer\",\"sockets\",\"socketCount\",\"socket\",\"destroy\",\"portTimer\",\"cancelPortTimer\",\"address\",\"listen\",\"deferredRedirect\",\"deferredCode\",\"codeTimer\",\"cancelCodeTimer\",\"reqUrl\",\"pathname\",\"replace\",\"error_description\",\"callback\",\"vscode_1\",\"SERVICE_ID\",\"ACCOUNT_ID\",\"Keychain\",\"keytar\",\"log\",\"getKeytar\",\"setPassword\",\"getPassword\",\"deletePassword\",\"base64string\",\"MessageFormat\",\"BundleFormat\",\"LocalizeInfo\",\"resolvedBundles\",\"options\",\"isPseudo\",\"isDefined\",\"isString\",\"readJsonFileSync\",\"filename\",\"readFileSync\",\"format\",\"args\",\"rest\",\"index\",\"replacement\",\"String\",\"createScopedLocalizeFunction\",\"messages\",\"_i\",\"arguments\",\"isNumber\",\"warn\",\"cacheBundle\",\"bundle\",\"loadNlsBundleOrCreateFromI18n\",\"header\",\"bundlePath\",\"cacheRoot\",\"hash\",\"useMemoryOnly\",\"writeBundle\",\"encoding\",\"flag\",\"file\",\"utimes\",\"touch\",\"SyntaxError\",\"unlink\",\"metaDataPath\",\"languagePackLocation\",\"translationsConfig\",\"languagePack\",\"contents\",\"metaData\",\"module_2\",\"entry\",\"translations\",\"outDir\",\"resultMessages\",\"keys\",\"messageKey\",\"translatedMessage\",\"createNLSBundle\",\"writeFileSync\",\"loadDefaultNlsBundle\",\"folder\",\"module_1\",\"createDefaultNlsBundle\",\"loadNlsBundle\",\"languagePackSupport\",\"languagePackId\",\"translationsConfigFile\",\"candidate\",\"root\",\"language\",\"existsSync\",\"lastIndexOf\",\"substring\",\"findInTheBoxBundle\",\"ext\",\"extname\",\"substr\",\"messageFormat\",\"both\",\"headerFile\",\"dirname\",\"parent\",\"tryFindMetaDataHeaderFile\",\"nlsBundle\",\"module_3\",\"resolvedLanguage\",\"cacheLanguageResolution\",\"locale\",\"resolveLanguage\",\"is\",\"comment\",\"process\",\"VSCODE_NLS_CONFIG\",\"vscodeOptions\",\"availableLanguages\",\"toLowerCase\",\"isBoolean\",\"_languagePackSupport\",\"_cacheRoot\",\"_languagePackId\",\"_translationsConfigFile\",\"_corruptedFile\",\"writeFile\",\"_a\",\"initializeSettings\",\"config\",\"opts\",\"bundleFormat\",\"standalone\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 4);\\n\",\"module.exports = require(\\\"vscode\\\");\",\"module.exports = require(\\\"path\\\");\",\"module.exports = require(\\\"fs\\\");\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport * as vscode from 'vscode';\\n\\ntype LogLevel = 'Trace' | 'Info' | 'Error';\\n\\nclass Log {\\n\\tprivate output: vscode.OutputChannel;\\n\\n\\tconstructor() {\\n\\t\\tthis.output = vscode.window.createOutputChannel('Account');\\n\\t}\\n\\n\\tprivate data2String(data: any): string {\\n\\t\\tif (data instanceof Error) {\\n\\t\\t\\treturn data.stack || data.message;\\n\\t\\t}\\n\\t\\tif (data.success === false && data.message) {\\n\\t\\t\\treturn data.message;\\n\\t\\t}\\n\\t\\treturn data.toString();\\n\\t}\\n\\n\\tpublic info(message: string, data?: any): void {\\n\\t\\tthis.logLevel('Info', message, data);\\n\\t}\\n\\n\\tpublic error(message: string, data?: any): void {\\n\\t\\tthis.logLevel('Error', message, data);\\n\\t}\\n\\n\\tpublic logLevel(level: LogLevel, message: string, data?: any): void {\\n\\t\\tthis.output.appendLine(`[${level}  - ${this.now()}] ${message}`);\\n\\t\\tif (data) {\\n\\t\\t\\tthis.output.appendLine(this.data2String(data));\\n\\t\\t}\\n\\t}\\n\\n\\tprivate now(): string {\\n\\t\\tconst now = new Date();\\n\\t\\treturn padLeft(now.getUTCHours() + '', 2, '0')\\n\\t\\t\\t+ ':' + padLeft(now.getMinutes() + '', 2, '0')\\n\\t\\t\\t+ ':' + padLeft(now.getUTCSeconds() + '', 2, '0') + '.' + now.getMilliseconds();\\n\\t}\\n}\\n\\nfunction padLeft(s: string, n: number, pad = ' ') {\\n\\treturn pad.repeat(Math.max(0, n - s.length)) + s;\\n}\\n\\nconst Logger = new Log();\\nexport default Logger;\\n\",null,\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport * as crypto from 'crypto';\\nimport * as https from 'https';\\nimport * as querystring from 'querystring';\\nimport * as vscode from 'vscode';\\nimport { createServer, startServer } from './authServer';\\nimport { keychain } from './keychain';\\nimport Logger from './logger';\\nimport { toBase64UrlEncoding } from './utils';\\n\\nconst redirectUrl = 'https://vscode-redirect.azurewebsites.net/';\\nconst loginEndpointUrl = 'https://login.microsoftonline.com/';\\nconst clientId = 'aebc6443-996d-45c2-90f0-388ff96faa56';\\nconst tenant = 'organizations';\\n\\ninterface IToken {\\n\\taccessToken?: string; // When unable to refresh due to network problems, the access token becomes undefined\\n\\n\\texpiresIn?: string; // How long access token is valid, in seconds\\n\\texpiresAt?: number; // UNIX epoch time at which token will expire\\n\\trefreshToken: string;\\n\\n\\taccountName: string;\\n\\tscope: string;\\n\\tsessionId: string; // The account id + the scope\\n}\\n\\ninterface ITokenClaims {\\n\\ttid: string;\\n\\temail?: string;\\n\\tunique_name?: string;\\n\\toid?: string;\\n\\taltsecid?: string;\\n\\tipd?: string;\\n\\tscp: string;\\n}\\n\\ninterface IStoredSession {\\n\\tid: string;\\n\\trefreshToken: string;\\n\\tscope: string; // Scopes are alphabetized and joined with a space\\n\\taccountName: string;\\n}\\n\\nfunction parseQuery(uri: vscode.Uri) {\\n\\treturn uri.query.split('&').reduce((prev: any, current) => {\\n\\t\\tconst queryString = current.split('=');\\n\\t\\tprev[queryString[0]] = queryString[1];\\n\\t\\treturn prev;\\n\\t}, {});\\n}\\n\\nexport const onDidChangeSessions = new vscode.EventEmitter<void>();\\n\\nexport const REFRESH_NETWORK_FAILURE = 'Network failure';\\n\\nclass UriEventHandler extends vscode.EventEmitter<vscode.Uri> implements vscode.UriHandler {\\n\\tpublic handleUri(uri: vscode.Uri) {\\n\\t\\tthis.fire(uri);\\n\\t}\\n}\\n\\nexport class AzureActiveDirectoryService {\\n\\tprivate _tokens: IToken[] = [];\\n\\tprivate _refreshTimeouts: Map<string, NodeJS.Timeout> = new Map<string, NodeJS.Timeout>();\\n\\tprivate _uriHandler: UriEventHandler;\\n\\n\\tconstructor() {\\n\\t\\tthis._uriHandler = new UriEventHandler();\\n\\t\\tvscode.window.registerUriHandler(this._uriHandler);\\n\\t}\\n\\n\\tpublic async initialize(): Promise<void> {\\n\\t\\tconst storedData = await keychain.getToken();\\n\\t\\tif (storedData) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst sessions = this.parseStoredData(storedData);\\n\\t\\t\\t\\tconst refreshes = sessions.map(async session => {\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tawait this.refreshToken(session.refreshToken, session.scope);\\n\\t\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\t\\tif (e.message === REFRESH_NETWORK_FAILURE) {\\n\\t\\t\\t\\t\\t\\t\\tconst didSucceedOnRetry = await this.handleRefreshNetworkError(session.id, session.refreshToken, session.scope);\\n\\t\\t\\t\\t\\t\\t\\tif (!didSucceedOnRetry) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis._tokens.push({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taccessToken: undefined,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trefreshToken: session.refreshToken,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\taccountName: session.accountName,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tscope: session.scope,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsessionId: session.id\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.pollForReconnect(session.id, session.refreshToken, session.scope);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tawait this.logout(session.id);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tawait Promise.all(refreshes);\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tawait this.clearSessions();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.pollForChange();\\n\\t}\\n\\n\\tprivate parseStoredData(data: string): IStoredSession[] {\\n\\t\\treturn JSON.parse(data);\\n\\t}\\n\\n\\tprivate async storeTokenData(): Promise<void> {\\n\\t\\tconst serializedData: IStoredSession[] = this._tokens.map(token => {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tid: token.sessionId,\\n\\t\\t\\t\\trefreshToken: token.refreshToken,\\n\\t\\t\\t\\tscope: token.scope,\\n\\t\\t\\t\\taccountName: token.accountName\\n\\t\\t\\t};\\n\\t\\t});\\n\\n\\t\\tawait keychain.setToken(JSON.stringify(serializedData));\\n\\t}\\n\\n\\tprivate pollForChange() {\\n\\t\\tsetTimeout(async () => {\\n\\t\\t\\tlet didChange = false;\\n\\t\\t\\tconst storedData = await keychain.getToken();\\n\\t\\t\\tif (storedData) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst sessions = this.parseStoredData(storedData);\\n\\t\\t\\t\\t\\tlet promises = sessions.map(async session => {\\n\\t\\t\\t\\t\\t\\tconst matchesExisting = this._tokens.some(token => token.scope === session.scope && token.sessionId === session.id);\\n\\t\\t\\t\\t\\t\\tif (!matchesExisting) {\\n\\t\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\t\\tawait this.refreshToken(session.refreshToken, session.scope);\\n\\t\\t\\t\\t\\t\\t\\t\\tdidChange = true;\\n\\t\\t\\t\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (e.message === REFRESH_NETWORK_FAILURE) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore, will automatically retry on next poll.\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tawait this.logout(session.id);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tpromises = promises.concat(this._tokens.map(async token => {\\n\\t\\t\\t\\t\\t\\tconst matchesExisting = sessions.some(session => token.scope === session.scope && token.sessionId === session.id);\\n\\t\\t\\t\\t\\t\\tif (!matchesExisting) {\\n\\t\\t\\t\\t\\t\\t\\tawait this.logout(token.sessionId);\\n\\t\\t\\t\\t\\t\\t\\tdidChange = true;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}));\\n\\n\\t\\t\\t\\t\\tawait Promise.all(promises);\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tLogger.error(e.message);\\n\\t\\t\\t\\t\\t// if data is improperly formatted, remove all of it and send change event\\n\\t\\t\\t\\t\\tthis.clearSessions();\\n\\t\\t\\t\\t\\tdidChange = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (this._tokens.length) {\\n\\t\\t\\t\\t\\t// Log out all\\n\\t\\t\\t\\t\\tawait this.clearSessions();\\n\\t\\t\\t\\t\\tdidChange = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (didChange) {\\n\\t\\t\\t\\tonDidChangeSessions.fire();\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.pollForChange();\\n\\t\\t}, 1000 * 30);\\n\\t}\\n\\n\\tprivate convertToSession(token: IToken): vscode.AuthenticationSession {\\n\\t\\treturn {\\n\\t\\t\\tid: token.sessionId,\\n\\t\\t\\tgetAccessToken: () => this.resolveAccessToken(token),\\n\\t\\t\\taccountName: token.accountName,\\n\\t\\t\\tscopes: token.scope.split(' ')\\n\\t\\t};\\n\\t}\\n\\n\\tprivate async resolveAccessToken(token: IToken): Promise<string> {\\n\\t\\tif (token.accessToken && (!token.expiresAt || token.expiresAt > Date.now())) {\\n\\t\\t\\ttoken.expiresAt\\n\\t\\t\\t\\t? Logger.info(`Token available from cache, expires in ${token.expiresAt - Date.now()} milliseconds`)\\n\\t\\t\\t\\t: Logger.info('Token available from cache');\\n\\t\\t\\treturn Promise.resolve(token.accessToken);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tLogger.info('Token expired or unavailable, trying refresh');\\n\\t\\t\\tconst refreshedToken = await this.refreshToken(token.refreshToken, token.scope);\\n\\t\\t\\tif (refreshedToken.accessToken) {\\n\\t\\t\\t\\tPromise.resolve(token.accessToken);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tthrow new Error();\\n\\t\\t\\t}\\n\\t\\t} catch (e) {\\n\\t\\t\\tthrow new Error('Unavailable due to network problems');\\n\\t\\t}\\n\\n\\t\\tthrow new Error('Unavailable due to network problems');\\n\\t}\\n\\n\\tprivate getTokenClaims(accessToken: string): ITokenClaims {\\n\\t\\ttry {\\n\\t\\t\\treturn JSON.parse(Buffer.from(accessToken.split('.')[1], 'base64').toString());\\n\\t\\t} catch (e) {\\n\\t\\t\\tLogger.error(e.message);\\n\\t\\t\\tthrow new Error('Unable to read token claims');\\n\\t\\t}\\n\\t}\\n\\n\\tget sessions(): vscode.AuthenticationSession[] {\\n\\t\\treturn this._tokens.map(token => this.convertToSession(token));\\n\\t}\\n\\n\\tpublic async login(scope: string): Promise<void> {\\n\\t\\tLogger.info('Logging in...');\\n\\n\\t\\tif (vscode.env.uiKind === vscode.UIKind.Web) {\\n\\t\\t\\tawait this.loginWithoutLocalServer(scope);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst nonce = crypto.randomBytes(16).toString('base64');\\n\\t\\tconst { server, redirectPromise, codePromise } = createServer(nonce);\\n\\n\\t\\tlet token: IToken | undefined;\\n\\t\\ttry {\\n\\t\\t\\tconst port = await startServer(server);\\n\\t\\t\\tvscode.env.openExternal(vscode.Uri.parse(`http://localhost:${port}/signin?nonce=${encodeURIComponent(nonce)}`));\\n\\n\\t\\t\\tconst redirectReq = await redirectPromise;\\n\\t\\t\\tif ('err' in redirectReq) {\\n\\t\\t\\t\\tconst { err, res } = redirectReq;\\n\\t\\t\\t\\tres.writeHead(302, { Location: `/?error=${encodeURIComponent(err && err.message || 'Unknown error')}` });\\n\\t\\t\\t\\tres.end();\\n\\t\\t\\t\\tthrow err;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst host = redirectReq.req.headers.host || '';\\n\\t\\t\\tconst updatedPortStr = (/^[^:]+:(\\\\d+)$/.exec(Array.isArray(host) ? host[0] : host) || [])[1];\\n\\t\\t\\tconst updatedPort = updatedPortStr ? parseInt(updatedPortStr, 10) : port;\\n\\n\\t\\t\\tconst state = `${updatedPort},${encodeURIComponent(nonce)}`;\\n\\n\\t\\t\\tconst codeVerifier = toBase64UrlEncoding(crypto.randomBytes(32).toString('base64'));\\n\\t\\t\\tconst codeChallenge = toBase64UrlEncoding(crypto.createHash('sha256').update(codeVerifier).digest('base64'));\\n\\t\\t\\tconst loginUrl = `${loginEndpointUrl}${tenant}/oauth2/v2.0/authorize?response_type=code&response_mode=query&client_id=${encodeURIComponent(clientId)}&redirect_uri=${encodeURIComponent(redirectUrl)}&state=${state}&scope=${encodeURIComponent(scope)}&prompt=select_account&code_challenge_method=S256&code_challenge=${codeChallenge}`;\\n\\n\\t\\t\\tawait redirectReq.res.writeHead(302, { Location: loginUrl });\\n\\t\\t\\tredirectReq.res.end();\\n\\n\\t\\t\\tconst codeRes = await codePromise;\\n\\t\\t\\tconst res = codeRes.res;\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif ('err' in codeRes) {\\n\\t\\t\\t\\t\\tthrow codeRes.err;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\ttoken = await this.exchangeCodeForToken(codeRes.code, codeVerifier, scope);\\n\\t\\t\\t\\tthis.setToken(token, scope);\\n\\t\\t\\t\\tLogger.info('Login successful');\\n\\t\\t\\t\\tres.writeHead(302, { Location: '/' });\\n\\t\\t\\t\\tres.end();\\n\\t\\t\\t} catch (err) {\\n\\t\\t\\t\\tres.writeHead(302, { Location: `/?error=${encodeURIComponent(err && err.message || 'Unknown error')}` });\\n\\t\\t\\t\\tres.end();\\n\\t\\t\\t\\tthrow new Error(err.message);\\n\\t\\t\\t}\\n\\t\\t} catch (e) {\\n\\t\\t\\tLogger.error(e.message);\\n\\n\\t\\t\\t// If the error was about starting the server, try directly hitting the login endpoint instead\\n\\t\\t\\tif (e.message === 'Error listening to server' || e.message === 'Closed' || e.message === 'Timeout waiting for port') {\\n\\t\\t\\t\\tawait this.loginWithoutLocalServer(scope);\\n\\t\\t\\t}\\n\\t\\t\\tthrow new Error(e.message);\\n\\t\\t} finally {\\n\\t\\t\\tsetTimeout(() => {\\n\\t\\t\\t\\tserver.close();\\n\\t\\t\\t}, 5000);\\n\\t\\t}\\n\\t}\\n\\n\\tprivate getCallbackEnvironment(callbackUri: vscode.Uri): string {\\n\\t\\tswitch (callbackUri.authority) {\\n\\t\\t\\tcase 'online.visualstudio.com':\\n\\t\\t\\t\\treturn 'vso,';\\n\\t\\t\\tcase 'online-ppe.core.vsengsaas.visualstudio.com':\\n\\t\\t\\t\\treturn 'vsoppe,';\\n\\t\\t\\tcase 'online.dev.core.vsengsaas.visualstudio.com':\\n\\t\\t\\t\\treturn 'vsodev,';\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\treturn '';\\n\\t\\t}\\n\\t}\\n\\n\\tprivate async loginWithoutLocalServer(scope: string): Promise<IToken> {\\n\\t\\tconst callbackUri = await vscode.env.asExternalUri(vscode.Uri.parse(`${vscode.env.uriScheme}://vscode.vscode-account`));\\n\\t\\tconst nonce = crypto.randomBytes(16).toString('base64');\\n\\t\\tconst port = (callbackUri.authority.match(/:([0-9]*)$/) || [])[1] || (callbackUri.scheme === 'https' ? 443 : 80);\\n\\t\\tconst callbackEnvironment = this.getCallbackEnvironment(callbackUri);\\n\\t\\tconst state = `${callbackEnvironment}${port},${encodeURIComponent(nonce)},${encodeURIComponent(callbackUri.query)}`;\\n\\t\\tconst signInUrl = `${loginEndpointUrl}${tenant}/oauth2/v2.0/authorize`;\\n\\t\\tlet uri = vscode.Uri.parse(signInUrl);\\n\\t\\tconst codeVerifier = toBase64UrlEncoding(crypto.randomBytes(32).toString('base64'));\\n\\t\\tconst codeChallenge = toBase64UrlEncoding(crypto.createHash('sha256').update(codeVerifier).digest('base64'));\\n\\t\\turi = uri.with({\\n\\t\\t\\tquery: `response_type=code&client_id=${encodeURIComponent(clientId)}&response_mode=query&redirect_uri=${redirectUrl}&state=${state}&scope=${scope}&prompt=select_account&code_challenge_method=S256&code_challenge=${codeChallenge}`\\n\\t\\t});\\n\\t\\tvscode.env.openExternal(uri);\\n\\n\\t\\tconst timeoutPromise = new Promise((_: (value: IToken) => void, reject) => {\\n\\t\\t\\tconst wait = setTimeout(() => {\\n\\t\\t\\t\\tclearTimeout(wait);\\n\\t\\t\\t\\treject('Login timed out.');\\n\\t\\t\\t}, 1000 * 60 * 5);\\n\\t\\t});\\n\\n\\t\\treturn Promise.race([this.handleCodeResponse(state, codeVerifier, scope), timeoutPromise]);\\n\\t}\\n\\n\\tprivate async handleCodeResponse(state: string, codeVerifier: string, scope: string) {\\n\\t\\tlet uriEventListener: vscode.Disposable;\\n\\t\\treturn new Promise((resolve: (value: IToken) => void, reject) => {\\n\\t\\t\\turiEventListener = this._uriHandler.event(async (uri: vscode.Uri) => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tconst query = parseQuery(uri);\\n\\t\\t\\t\\t\\tconst code = query.code;\\n\\n\\t\\t\\t\\t\\tif (query.state !== state) {\\n\\t\\t\\t\\t\\t\\tthrow new Error('State does not match.');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tconst token = await this.exchangeCodeForToken(code, codeVerifier, scope);\\n\\t\\t\\t\\t\\tthis.setToken(token, scope);\\n\\n\\t\\t\\t\\t\\tresolve(token);\\n\\t\\t\\t\\t} catch (err) {\\n\\t\\t\\t\\t\\treject(err);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}).then(result => {\\n\\t\\t\\turiEventListener.dispose();\\n\\t\\t\\treturn result;\\n\\t\\t}).catch(err => {\\n\\t\\t\\turiEventListener.dispose();\\n\\t\\t\\tthrow err;\\n\\t\\t});\\n\\t}\\n\\n\\tprivate async setToken(token: IToken, scope: string): Promise<void> {\\n\\t\\tconst existingTokenIndex = this._tokens.findIndex(t => t.sessionId === token.sessionId);\\n\\t\\tif (existingTokenIndex > -1) {\\n\\t\\t\\tthis._tokens.splice(existingTokenIndex, 1, token);\\n\\t\\t} else {\\n\\t\\t\\tthis._tokens.push(token);\\n\\t\\t}\\n\\n\\t\\tthis.clearSessionTimeout(token.sessionId);\\n\\n\\t\\tif (token.expiresIn) {\\n\\t\\t\\tthis._refreshTimeouts.set(token.sessionId, setTimeout(async () => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tawait this.refreshToken(token.refreshToken, scope);\\n\\t\\t\\t\\t\\tonDidChangeSessions.fire();\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tif (e.message === REFRESH_NETWORK_FAILURE) {\\n\\t\\t\\t\\t\\t\\tconst didSucceedOnRetry = await this.handleRefreshNetworkError(token.sessionId, token.refreshToken, scope);\\n\\t\\t\\t\\t\\t\\tif (!didSucceedOnRetry) {\\n\\t\\t\\t\\t\\t\\t\\tthis.pollForReconnect(token.sessionId, token.refreshToken, token.scope);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tawait this.logout(token.sessionId);\\n\\t\\t\\t\\t\\t\\tonDidChangeSessions.fire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}, 1000 * (parseInt(token.expiresIn) - 30)));\\n\\t\\t}\\n\\n\\t\\tthis.storeTokenData();\\n\\t}\\n\\n\\tprivate getTokenFromResponse(buffer: Buffer[], scope: string): IToken {\\n\\t\\tconst json = JSON.parse(Buffer.concat(buffer).toString());\\n\\t\\tconst claims = this.getTokenClaims(json.access_token);\\n\\t\\treturn {\\n\\t\\t\\texpiresIn: json.expires_in,\\n\\t\\t\\texpiresAt: json.expires_in ? Date.now() + json.expires_in * 1000 : undefined,\\n\\t\\t\\taccessToken: json.access_token,\\n\\t\\t\\trefreshToken: json.refresh_token,\\n\\t\\t\\tscope,\\n\\t\\t\\tsessionId: `${claims.tid}/${(claims.oid || (claims.altsecid || '' + claims.ipd || ''))}/${scope}`,\\n\\t\\t\\taccountName: claims.email || claims.unique_name || 'user@example.com'\\n\\t\\t};\\n\\t}\\n\\n\\tprivate async exchangeCodeForToken(code: string, codeVerifier: string, scope: string): Promise<IToken> {\\n\\t\\treturn new Promise((resolve: (value: IToken) => void, reject) => {\\n\\t\\t\\tLogger.info('Exchanging login code for token');\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst postData = querystring.stringify({\\n\\t\\t\\t\\t\\tgrant_type: 'authorization_code',\\n\\t\\t\\t\\t\\tcode: code,\\n\\t\\t\\t\\t\\tclient_id: clientId,\\n\\t\\t\\t\\t\\tscope: scope,\\n\\t\\t\\t\\t\\tcode_verifier: codeVerifier,\\n\\t\\t\\t\\t\\tredirect_uri: redirectUrl\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tconst tokenUrl = vscode.Uri.parse(`${loginEndpointUrl}${tenant}/oauth2/v2.0/token`);\\n\\n\\t\\t\\t\\tconst post = https.request({\\n\\t\\t\\t\\t\\thost: tokenUrl.authority,\\n\\t\\t\\t\\t\\tpath: tokenUrl.path,\\n\\t\\t\\t\\t\\tmethod: 'POST',\\n\\t\\t\\t\\t\\theaders: {\\n\\t\\t\\t\\t\\t\\t'Content-Type': 'application/x-www-form-urlencoded',\\n\\t\\t\\t\\t\\t\\t'Content-Length': postData.length\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}, result => {\\n\\t\\t\\t\\t\\tconst buffer: Buffer[] = [];\\n\\t\\t\\t\\t\\tresult.on('data', (chunk: Buffer) => {\\n\\t\\t\\t\\t\\t\\tbuffer.push(chunk);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\tresult.on('end', () => {\\n\\t\\t\\t\\t\\t\\tif (result.statusCode === 200) {\\n\\t\\t\\t\\t\\t\\t\\tLogger.info('Exchanging login code for token success');\\n\\t\\t\\t\\t\\t\\t\\tresolve(this.getTokenFromResponse(buffer, scope));\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tLogger.error('Exchanging login code for token failed');\\n\\t\\t\\t\\t\\t\\t\\treject(new Error('Unable to login.'));\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tpost.write(postData);\\n\\n\\t\\t\\t\\tpost.end();\\n\\t\\t\\t\\tpost.on('error', err => {\\n\\t\\t\\t\\t\\treject(err);\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tLogger.error(e.message);\\n\\t\\t\\t\\treject(e);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\tprivate async refreshToken(refreshToken: string, scope: string): Promise<IToken> {\\n\\t\\treturn new Promise((resolve: (value: IToken) => void, reject) => {\\n\\t\\t\\tLogger.info('Refreshing token...');\\n\\t\\t\\tconst postData = querystring.stringify({\\n\\t\\t\\t\\trefresh_token: refreshToken,\\n\\t\\t\\t\\tclient_id: clientId,\\n\\t\\t\\t\\tgrant_type: 'refresh_token',\\n\\t\\t\\t\\tscope: scope\\n\\t\\t\\t});\\n\\n\\t\\t\\tconst post = https.request({\\n\\t\\t\\t\\thost: 'login.microsoftonline.com',\\n\\t\\t\\t\\tpath: `/${tenant}/oauth2/v2.0/token`,\\n\\t\\t\\t\\tmethod: 'POST',\\n\\t\\t\\t\\theaders: {\\n\\t\\t\\t\\t\\t'Content-Type': 'application/x-www-form-urlencoded',\\n\\t\\t\\t\\t\\t'Content-Length': postData.length\\n\\t\\t\\t\\t}\\n\\t\\t\\t}, result => {\\n\\t\\t\\t\\tconst buffer: Buffer[] = [];\\n\\t\\t\\t\\tresult.on('data', (chunk: Buffer) => {\\n\\t\\t\\t\\t\\tbuffer.push(chunk);\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tresult.on('end', async () => {\\n\\t\\t\\t\\t\\tif (result.statusCode === 200) {\\n\\t\\t\\t\\t\\t\\tconst token = this.getTokenFromResponse(buffer, scope);\\n\\t\\t\\t\\t\\t\\tthis.setToken(token, scope);\\n\\t\\t\\t\\t\\t\\tLogger.info('Token refresh success');\\n\\t\\t\\t\\t\\t\\tresolve(token);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tLogger.error('Refreshing token failed');\\n\\t\\t\\t\\t\\t\\treject(new Error('Refreshing token failed.'));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\n\\t\\t\\tpost.write(postData);\\n\\n\\t\\t\\tpost.end();\\n\\t\\t\\tpost.on('error', err => {\\n\\t\\t\\t\\tLogger.error(err.message);\\n\\t\\t\\t\\treject(new Error(REFRESH_NETWORK_FAILURE));\\n\\t\\t\\t});\\n\\t\\t});\\n\\t}\\n\\n\\tprivate clearSessionTimeout(sessionId: string): void {\\n\\t\\tconst timeout = this._refreshTimeouts.get(sessionId);\\n\\t\\tif (timeout) {\\n\\t\\t\\tclearTimeout(timeout);\\n\\t\\t\\tthis._refreshTimeouts.delete(sessionId);\\n\\t\\t}\\n\\t}\\n\\n\\tprivate removeInMemorySessionData(sessionId: string) {\\n\\t\\tconst tokenIndex = this._tokens.findIndex(token => token.sessionId === sessionId);\\n\\t\\tif (tokenIndex > -1) {\\n\\t\\t\\tthis._tokens.splice(tokenIndex, 1);\\n\\t\\t}\\n\\n\\t\\tthis.clearSessionTimeout(sessionId);\\n\\t}\\n\\n\\tprivate pollForReconnect(sessionId: string, refreshToken: string, scope: string): void {\\n\\t\\tthis.clearSessionTimeout(sessionId);\\n\\n\\t\\tthis._refreshTimeouts.set(sessionId, setTimeout(async () => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tawait this.refreshToken(refreshToken, scope);\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tthis.pollForReconnect(sessionId, refreshToken, scope);\\n\\t\\t\\t}\\n\\t\\t}, 1000 * 60 * 30));\\n\\t}\\n\\n\\tprivate handleRefreshNetworkError(sessionId: string, refreshToken: string, scope: string, attempts: number = 1): Promise<boolean> {\\n\\t\\treturn new Promise((resolve, _) => {\\n\\t\\t\\tif (attempts === 3) {\\n\\t\\t\\t\\tLogger.error('Token refresh failed after 3 attempts');\\n\\t\\t\\t\\treturn resolve(false);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (attempts === 1) {\\n\\t\\t\\t\\tconst token = this._tokens.find(token => token.sessionId === sessionId);\\n\\t\\t\\t\\tif (token) {\\n\\t\\t\\t\\t\\ttoken.accessToken = undefined;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tonDidChangeSessions.fire();\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst delayBeforeRetry = 5 * attempts * attempts;\\n\\n\\t\\t\\tthis.clearSessionTimeout(sessionId);\\n\\n\\t\\t\\tthis._refreshTimeouts.set(sessionId, setTimeout(async () => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tawait this.refreshToken(refreshToken, scope);\\n\\t\\t\\t\\t\\treturn resolve(true);\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\treturn resolve(await this.handleRefreshNetworkError(sessionId, refreshToken, scope, attempts + 1));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}, 1000 * delayBeforeRetry));\\n\\t\\t});\\n\\t}\\n\\n\\tpublic async logout(sessionId: string) {\\n\\t\\tLogger.info(`Logging out of session '${sessionId}'`);\\n\\t\\tthis.removeInMemorySessionData(sessionId);\\n\\n\\t\\tif (this._tokens.length === 0) {\\n\\t\\t\\tawait keychain.deleteToken();\\n\\t\\t} else {\\n\\t\\t\\tthis.storeTokenData();\\n\\t\\t}\\n\\t}\\n\\n\\tpublic async clearSessions() {\\n\\t\\tLogger.info('Logging out of all sessions');\\n\\t\\tthis._tokens = [];\\n\\t\\tawait keychain.deleteToken();\\n\\n\\t\\tthis._refreshTimeouts.forEach(timeout => {\\n\\t\\t\\tclearTimeout(timeout);\\n\\t\\t});\\n\\n\\t\\tthis._refreshTimeouts.clear();\\n\\t}\\n}\\n\",\"module.exports = require(\\\"crypto\\\");\",\"module.exports = require(\\\"https\\\");\",\"module.exports = require(\\\"querystring\\\");\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport * as http from 'http';\\nimport * as url from 'url';\\nimport * as fs from 'fs';\\nimport * as net from 'net';\\nimport * as path from 'path';\\n\\ninterface Deferred<T> {\\n\\tresolve: (result: T | Promise<T>) => void;\\n\\treject: (reason: any) => void;\\n}\\n\\nconst _typeof = {\\n\\tnumber: 'number',\\n\\tstring: 'string',\\n\\tundefined: 'undefined',\\n\\tobject: 'object',\\n\\tfunction: 'function'\\n};\\n\\n/**\\n * @returns whether the provided parameter is undefined.\\n */\\nexport function isUndefined(obj: any): obj is undefined {\\n\\treturn typeof (obj) === _typeof.undefined;\\n}\\n\\n/**\\n * @returns whether the provided parameter is undefined or null.\\n */\\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\\n\\treturn isUndefined(obj) || obj === null;\\n}\\n\\n/**\\n * Asserts that the argument passed in is neither undefined nor null.\\n */\\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\\n\\tif (isUndefinedOrNull(arg)) {\\n\\t\\tthrow new Error('Assertion Failed: argument is undefined or null');\\n\\t}\\n\\n\\treturn arg;\\n}\\n\\nexport function createTerminateServer(server: http.Server) {\\n\\tconst sockets: Record<number, net.Socket> = {};\\n\\tlet socketCount = 0;\\n\\tserver.on('connection', socket => {\\n\\t\\tconst id = socketCount++;\\n\\t\\tsockets[id] = socket;\\n\\t\\tsocket.on('close', () => {\\n\\t\\t\\tdelete sockets[id];\\n\\t\\t});\\n\\t});\\n\\treturn async () => {\\n\\t\\tconst result = new Promise<Error | undefined>(resolve => server.close(resolve));\\n\\t\\tfor (const id in sockets) {\\n\\t\\t\\tsockets[id].destroy();\\n\\t\\t}\\n\\t\\treturn result;\\n\\t};\\n}\\n\\nexport async function startServer(server: http.Server): Promise<string> {\\n\\tlet portTimer: NodeJS.Timer;\\n\\n\\tfunction cancelPortTimer() {\\n\\t\\tclearTimeout(portTimer);\\n\\t}\\n\\n\\tconst port = new Promise<string>((resolve, reject) => {\\n\\t\\tportTimer = setTimeout(() => {\\n\\t\\t\\treject(new Error('Timeout waiting for port'));\\n\\t\\t}, 5000);\\n\\n\\t\\tserver.on('listening', () => {\\n\\t\\t\\tconst address = server.address();\\n\\t\\t\\tif (typeof address === 'string') {\\n\\t\\t\\t\\tresolve(address);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tresolve(assertIsDefined(address).port.toString());\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tserver.on('error', _ => {\\n\\t\\t\\treject(new Error('Error listening to server'));\\n\\t\\t});\\n\\n\\t\\tserver.on('close', () => {\\n\\t\\t\\treject(new Error('Closed'));\\n\\t\\t});\\n\\n\\t\\tserver.listen(0);\\n\\t});\\n\\n\\tport.then(cancelPortTimer, cancelPortTimer);\\n\\treturn port;\\n}\\n\\nfunction sendFile(res: http.ServerResponse, filepath: string, contentType: string) {\\n\\tfs.readFile(filepath, (err, body) => {\\n\\t\\tif (err) {\\n\\t\\t\\tconsole.error(err);\\n\\t\\t\\tres.writeHead(404);\\n\\t\\t\\tres.end();\\n\\t\\t} else {\\n\\t\\t\\tres.writeHead(200, {\\n\\t\\t\\t\\t'Content-Length': body.length,\\n\\t\\t\\t\\t'Content-Type': contentType\\n\\t\\t\\t});\\n\\t\\t\\tres.end(body);\\n\\t\\t}\\n\\t});\\n}\\n\\nasync function callback(nonce: string, reqUrl: url.Url): Promise<string> {\\n\\tconst query = reqUrl.query;\\n\\tif (!query || typeof query === 'string') {\\n\\t\\tthrow new Error('No query received.');\\n\\t}\\n\\n\\tlet error = query.error_description || query.error;\\n\\n\\tif (!error) {\\n\\t\\tconst state = (query.state as string) || '';\\n\\t\\tconst receivedNonce = (state.split(',')[1] || '').replace(/ /g, '+');\\n\\t\\tif (receivedNonce !== nonce) {\\n\\t\\t\\terror = 'Nonce does not match.';\\n\\t\\t}\\n\\t}\\n\\n\\tconst code = query.code as string;\\n\\tif (!error && code) {\\n\\t\\treturn code;\\n\\t}\\n\\n\\tthrow new Error((error as string) || 'No code received.');\\n}\\n\\nexport function createServer(nonce: string) {\\n\\ttype RedirectResult = { req: http.IncomingMessage; res: http.ServerResponse; } | { err: any; res: http.ServerResponse; };\\n\\tlet deferredRedirect: Deferred<RedirectResult>;\\n\\tconst redirectPromise = new Promise<RedirectResult>((resolve, reject) => deferredRedirect = { resolve, reject });\\n\\n\\ttype CodeResult = { code: string; res: http.ServerResponse; } | { err: any; res: http.ServerResponse; };\\n\\tlet deferredCode: Deferred<CodeResult>;\\n\\tconst codePromise = new Promise<CodeResult>((resolve, reject) => deferredCode = { resolve, reject });\\n\\n\\tconst codeTimer = setTimeout(() => {\\n\\t\\tdeferredCode.reject(new Error('Timeout waiting for code'));\\n\\t}, 5 * 60 * 1000);\\n\\n\\tfunction cancelCodeTimer() {\\n\\t\\tclearTimeout(codeTimer);\\n\\t}\\n\\n\\tconst server = http.createServer(function (req, res) {\\n\\t\\tconst reqUrl = url.parse(req.url!, /* parseQueryString */ true);\\n\\t\\tswitch (reqUrl.pathname) {\\n\\t\\t\\tcase '/signin':\\n\\t\\t\\t\\tconst receivedNonce = ((reqUrl.query.nonce as string) || '').replace(/ /g, '+');\\n\\t\\t\\t\\tif (receivedNonce === nonce) {\\n\\t\\t\\t\\t\\tdeferredRedirect.resolve({ req, res });\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tconst err = new Error('Nonce does not match.');\\n\\t\\t\\t\\t\\tdeferredRedirect.resolve({ err, res });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase '/':\\n\\t\\t\\t\\tsendFile(res, path.join(__dirname, '../media/auth.html'), 'text/html; charset=utf-8');\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase '/auth.css':\\n\\t\\t\\t\\tsendFile(res, path.join(__dirname, '../media/auth.css'), 'text/css; charset=utf-8');\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase '/callback':\\n\\t\\t\\t\\tdeferredCode.resolve(callback(nonce, reqUrl)\\n\\t\\t\\t\\t\\t.then(code => ({ code, res }), err => ({ err, res })));\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\tres.writeHead(404);\\n\\t\\t\\t\\tres.end();\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t});\\n\\n\\tcodePromise.then(cancelCodeTimer, cancelCodeTimer);\\n\\treturn {\\n\\t\\tserver,\\n\\t\\tredirectPromise,\\n\\t\\tcodePromise\\n\\t};\\n}\\n\",\"module.exports = require(\\\"http\\\");\",\"module.exports = require(\\\"url\\\");\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\n// keytar depends on a native module shipped in vscode, so this is\\n// how we load it\\nimport * as keytarType from 'keytar';\\nimport { env } from 'vscode';\\nimport Logger from './logger';\\n\\nfunction getKeytar(): Keytar | undefined {\\n\\ttry {\\n\\t\\treturn require('keytar');\\n\\t} catch (err) {\\n\\t\\tconsole.log(err);\\n\\t}\\n\\n\\treturn undefined;\\n}\\n\\nexport type Keytar = {\\n\\tgetPassword: typeof keytarType['getPassword'];\\n\\tsetPassword: typeof keytarType['setPassword'];\\n\\tdeletePassword: typeof keytarType['deletePassword'];\\n};\\n\\nconst SERVICE_ID = `${env.uriScheme}-vscode.login`;\\nconst ACCOUNT_ID = 'account';\\n\\nexport class Keychain {\\n\\tprivate keytar: Keytar;\\n\\n\\tconstructor() {\\n\\t\\tconst keytar = getKeytar();\\n\\t\\tif (!keytar) {\\n\\t\\t\\tthrow new Error('System keychain unavailable');\\n\\t\\t}\\n\\n\\t\\tthis.keytar = keytar;\\n\\t}\\n\\n\\tasync setToken(token: string): Promise<void> {\\n\\t\\ttry {\\n\\t\\t\\treturn await this.keytar.setPassword(SERVICE_ID, ACCOUNT_ID, token);\\n\\t\\t} catch (e) {\\n\\t\\t\\t// Ignore\\n\\t\\t\\tLogger.error(`Setting token failed: ${e}`);\\n\\t\\t}\\n\\t}\\n\\n\\tasync getToken(): Promise<string | null | undefined> {\\n\\t\\ttry {\\n\\t\\t\\treturn await this.keytar.getPassword(SERVICE_ID, ACCOUNT_ID);\\n\\t\\t} catch (e) {\\n\\t\\t\\t// Ignore\\n\\t\\t\\tLogger.error(`Getting token failed: ${e}`);\\n\\t\\t\\treturn Promise.resolve(undefined);\\n\\t\\t}\\n\\t}\\n\\n\\tasync deleteToken(): Promise<boolean | undefined> {\\n\\t\\ttry {\\n\\t\\t\\treturn await this.keytar.deletePassword(SERVICE_ID, ACCOUNT_ID);\\n\\t\\t} catch (e) {\\n\\t\\t\\t// Ignore\\n\\t\\t\\tLogger.error(`Deleting token failed: ${e}`);\\n\\t\\t\\treturn Promise.resolve(undefined);\\n\\t\\t}\\n\\t}\\n}\\n\\nexport const keychain = new Keychain();\\n\",\"module.exports = require(\\\"keytar\\\");\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nexport function toBase64UrlEncoding(base64string: string) {\\n\\treturn base64string.replace(/=/g, '').replace(/\\\\+/g, '-').replace(/\\\\//g, '_'); // Need to use base64url encoding\\n}\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar path = require(\\\"path\\\");\\r\\nvar fs = require(\\\"fs\\\");\\r\\nvar toString = Object.prototype.toString;\\r\\nfunction isDefined(value) {\\r\\n    return typeof value !== 'undefined';\\r\\n}\\r\\nfunction isNumber(value) {\\r\\n    return toString.call(value) === '[object Number]';\\r\\n}\\r\\nfunction isString(value) {\\r\\n    return toString.call(value) === '[object String]';\\r\\n}\\r\\nfunction isBoolean(value) {\\r\\n    return value === true || value === false;\\r\\n}\\r\\nfunction readJsonFileSync(filename) {\\r\\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\\r\\n}\\r\\nvar MessageFormat;\\r\\n(function (MessageFormat) {\\r\\n    MessageFormat[\\\"file\\\"] = \\\"file\\\";\\r\\n    MessageFormat[\\\"bundle\\\"] = \\\"bundle\\\";\\r\\n    MessageFormat[\\\"both\\\"] = \\\"both\\\";\\r\\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\\r\\nvar BundleFormat;\\r\\n(function (BundleFormat) {\\r\\n    // the nls.bundle format\\r\\n    BundleFormat[\\\"standalone\\\"] = \\\"standalone\\\";\\r\\n    BundleFormat[\\\"languagePack\\\"] = \\\"languagePack\\\";\\r\\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\\r\\nvar LocalizeInfo;\\r\\n(function (LocalizeInfo) {\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\\r\\n    }\\r\\n    LocalizeInfo.is = is;\\r\\n})(LocalizeInfo || (LocalizeInfo = {}));\\r\\nvar resolvedLanguage;\\r\\nvar resolvedBundles;\\r\\nvar options;\\r\\nvar isPseudo;\\r\\nfunction initializeSettings() {\\r\\n    options = { locale: undefined, language: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\\r\\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\\r\\n        try {\\r\\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\\r\\n            var language = void 0;\\r\\n            var locale = void 0;\\r\\n            if (vscodeOptions.availableLanguages) {\\r\\n                var value = vscodeOptions.availableLanguages['*'];\\r\\n                if (isString(value)) {\\r\\n                    language = value;\\r\\n                }\\r\\n            }\\r\\n            if (isString(vscodeOptions.locale)) {\\r\\n                options.locale = vscodeOptions.locale.toLowerCase();\\r\\n            }\\r\\n            if (language === undefined) {\\r\\n                options.language = options.locale;\\r\\n            }\\r\\n            else if (language !== 'en') {\\r\\n                options.language = language;\\r\\n            }\\r\\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\\r\\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\\r\\n            }\\r\\n            if (isString(vscodeOptions._cacheRoot)) {\\r\\n                options.cacheRoot = vscodeOptions._cacheRoot;\\r\\n            }\\r\\n            if (isString(vscodeOptions._languagePackId)) {\\r\\n                options.languagePackId = vscodeOptions._languagePackId;\\r\\n            }\\r\\n            if (isString(vscodeOptions._translationsConfigFile)) {\\r\\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\\r\\n                try {\\r\\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\\r\\n                }\\r\\n                catch (error) {\\r\\n                    // We can't read the translation config file. Mark the cache as corrupted.\\r\\n                    if (vscodeOptions._corruptedFile) {\\r\\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\\r\\n                            console.error(err);\\r\\n                        });\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (_a) {\\r\\n            // Do nothing.\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    resolvedLanguage = undefined;\\r\\n    resolvedBundles = Object.create(null);\\r\\n}\\r\\ninitializeSettings();\\r\\nfunction supportsLanguagePack() {\\r\\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\\r\\n        && options.translationsConfig !== undefined;\\r\\n}\\r\\nfunction format(message, args) {\\r\\n    var result;\\r\\n    if (isPseudo) {\\r\\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\\r\\n        message = '\\\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\\\uFF3D';\\r\\n    }\\r\\n    if (args.length === 0) {\\r\\n        result = message;\\r\\n    }\\r\\n    else {\\r\\n        result = message.replace(/\\\\{(\\\\d+)\\\\}/g, function (match, rest) {\\r\\n            var index = rest[0];\\r\\n            var arg = args[index];\\r\\n            var replacement = match;\\r\\n            if (typeof arg === 'string') {\\r\\n                replacement = arg;\\r\\n            }\\r\\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\\r\\n                replacement = String(arg);\\r\\n            }\\r\\n            return replacement;\\r\\n        });\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createScopedLocalizeFunction(messages) {\\r\\n    return function (key, message) {\\r\\n        var args = [];\\r\\n        for (var _i = 2; _i < arguments.length; _i++) {\\r\\n            args[_i - 2] = arguments[_i];\\r\\n        }\\r\\n        if (isNumber(key)) {\\r\\n            if (key >= messages.length) {\\r\\n                console.error(\\\"Broken localize call found. Index out of bounds. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n                return;\\r\\n            }\\r\\n            return format(messages[key], args);\\r\\n        }\\r\\n        else {\\r\\n            if (isString(message)) {\\r\\n                console.warn(\\\"Message \\\" + message + \\\" didn't get externalized correctly.\\\");\\r\\n                return format(message, args);\\r\\n            }\\r\\n            else {\\r\\n                console.error(\\\"Broken localize call found. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n}\\r\\nfunction localize(key, message) {\\r\\n    var args = [];\\r\\n    for (var _i = 2; _i < arguments.length; _i++) {\\r\\n        args[_i - 2] = arguments[_i];\\r\\n    }\\r\\n    return format(message, args);\\r\\n}\\r\\nfunction resolveLanguage(file) {\\r\\n    var resolvedLanguage;\\r\\n    if (options.cacheLanguageResolution && resolvedLanguage) {\\r\\n        resolvedLanguage = resolvedLanguage;\\r\\n    }\\r\\n    else {\\r\\n        if (isPseudo || !options.language) {\\r\\n            resolvedLanguage = '.nls.json';\\r\\n        }\\r\\n        else {\\r\\n            var locale = options.language;\\r\\n            while (locale) {\\r\\n                var candidate = '.nls.' + locale + '.json';\\r\\n                if (fs.existsSync(file + candidate)) {\\r\\n                    resolvedLanguage = candidate;\\r\\n                    break;\\r\\n                }\\r\\n                else {\\r\\n                    var index = locale.lastIndexOf('-');\\r\\n                    if (index > 0) {\\r\\n                        locale = locale.substring(0, index);\\r\\n                    }\\r\\n                    else {\\r\\n                        resolvedLanguage = '.nls.json';\\r\\n                        locale = null;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (options.cacheLanguageResolution) {\\r\\n            resolvedLanguage = resolvedLanguage;\\r\\n        }\\r\\n    }\\r\\n    return file + resolvedLanguage;\\r\\n}\\r\\nfunction findInTheBoxBundle(root) {\\r\\n    var language = options.language;\\r\\n    while (language) {\\r\\n        var candidate = path.join(root, \\\"nls.bundle.\\\" + language + \\\".json\\\");\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n        else {\\r\\n            var index = language.lastIndexOf('-');\\r\\n            if (index > 0) {\\r\\n                language = language.substring(0, index);\\r\\n            }\\r\\n            else {\\r\\n                language = undefined;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    // Test if we can reslove the default bundle.\\r\\n    if (language === undefined) {\\r\\n        var candidate = path.join(root, 'nls.bundle.json');\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n    }\\r\\n    return undefined;\\r\\n}\\r\\nfunction mkdir(directory) {\\r\\n    try {\\r\\n        fs.mkdirSync(directory);\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'EEXIST') {\\r\\n            return;\\r\\n        }\\r\\n        else if (err.code === 'ENOENT') {\\r\\n            var parent = path.dirname(directory);\\r\\n            if (parent !== directory) {\\r\\n                mkdir(parent);\\r\\n                fs.mkdirSync(directory);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nfunction createDefaultNlsBundle(folder) {\\r\\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_1 in metaData) {\\r\\n        var entry = metaData[module_1];\\r\\n        result[module_1] = entry.messages;\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createNLSBundle(header, metaDataPath) {\\r\\n    var languagePackLocation = options.translationsConfig[header.id];\\r\\n    if (!languagePackLocation) {\\r\\n        return undefined;\\r\\n    }\\r\\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\\r\\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_2 in metaData) {\\r\\n        var entry = metaData[module_2];\\r\\n        var translations = languagePack[header.outDir + \\\"/\\\" + module_2];\\r\\n        if (translations) {\\r\\n            var resultMessages = [];\\r\\n            for (var i = 0; i < entry.keys.length; i++) {\\r\\n                var messageKey = entry.keys[i];\\r\\n                var key = isString(messageKey) ? messageKey : messageKey.key;\\r\\n                var translatedMessage = translations[key];\\r\\n                if (translatedMessage === undefined) {\\r\\n                    translatedMessage = entry.messages[i];\\r\\n                }\\r\\n                resultMessages.push(translatedMessage);\\r\\n            }\\r\\n            result[module_2] = resultMessages;\\r\\n        }\\r\\n        else {\\r\\n            result[module_2] = entry.messages;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction touch(file) {\\r\\n    var d = new Date();\\r\\n    fs.utimes(file, d, d, function () {\\r\\n        // Do nothing. Ignore\\r\\n    });\\r\\n}\\r\\nfunction cacheBundle(key, bundle) {\\r\\n    resolvedBundles[key] = bundle;\\r\\n    return bundle;\\r\\n}\\r\\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\\r\\n    var result;\\r\\n    var bundle = path.join(options.cacheRoot, header.id + \\\"-\\\" + header.hash + \\\".json\\\");\\r\\n    var useMemoryOnly = false;\\r\\n    var writeBundle = false;\\r\\n    try {\\r\\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\\r\\n        touch(bundle);\\r\\n        return result;\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'ENOENT') {\\r\\n            writeBundle = true;\\r\\n        }\\r\\n        else if (err instanceof SyntaxError) {\\r\\n            // We have a syntax error. So no valid JSON. Use\\r\\n            console.log(\\\"Syntax error parsing message bundle: \\\" + err.message + \\\".\\\");\\r\\n            fs.unlink(bundle, function (err) {\\r\\n                if (err) {\\r\\n                    console.error(\\\"Deleting corrupted bundle \\\" + bundle + \\\" failed.\\\");\\r\\n                }\\r\\n            });\\r\\n            useMemoryOnly = true;\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    result = createNLSBundle(header, bundlePath);\\r\\n    if (!result || useMemoryOnly) {\\r\\n        return result;\\r\\n    }\\r\\n    if (writeBundle) {\\r\\n        try {\\r\\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code === 'EEXIST') {\\r\\n                return result;\\r\\n            }\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadDefaultNlsBundle(bundlePath) {\\r\\n    try {\\r\\n        return createDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    catch (err) {\\r\\n        console.log(\\\"Generating default bundle from meta data failed.\\\", err);\\r\\n        return undefined;\\r\\n    }\\r\\n}\\r\\nfunction loadNlsBundle(header, bundlePath) {\\r\\n    var result;\\r\\n    // Core decided to use a language pack. Do the same in the extension\\r\\n    if (supportsLanguagePack()) {\\r\\n        try {\\r\\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\\r\\n        }\\r\\n        catch (err) {\\r\\n            console.log(\\\"Load or create bundle failed \\\", err);\\r\\n        }\\r\\n    }\\r\\n    if (!result) {\\r\\n        // No language pack found, but core is running in language pack mode\\r\\n        // Don't try to use old in the box bundles since the might be stale\\r\\n        // Fall right back to the default bundle.\\r\\n        if (options.languagePackSupport) {\\r\\n            return loadDefaultNlsBundle(bundlePath);\\r\\n        }\\r\\n        var candidate = findInTheBoxBundle(bundlePath);\\r\\n        if (candidate) {\\r\\n            try {\\r\\n                return readJsonFileSync(candidate);\\r\\n            }\\r\\n            catch (err) {\\r\\n                console.log(\\\"Loading in the box message bundle failed.\\\", err);\\r\\n            }\\r\\n        }\\r\\n        result = loadDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction tryFindMetaDataHeaderFile(file) {\\r\\n    var result;\\r\\n    var dirname = path.dirname(file);\\r\\n    while (true) {\\r\\n        result = path.join(dirname, 'nls.metadata.header.json');\\r\\n        if (fs.existsSync(result)) {\\r\\n            break;\\r\\n        }\\r\\n        var parent = path.dirname(dirname);\\r\\n        if (parent === dirname) {\\r\\n            result = undefined;\\r\\n            break;\\r\\n        }\\r\\n        else {\\r\\n            dirname = parent;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadMessageBundle(file) {\\r\\n    if (!file) {\\r\\n        // No file. We are in dev mode. Return the default\\r\\n        // localize function.\\r\\n        return localize;\\r\\n    }\\r\\n    // Remove extension since we load json files.\\r\\n    var ext = path.extname(file);\\r\\n    if (ext) {\\r\\n        file = file.substr(0, file.length - ext.length);\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\\r\\n        var headerFile = tryFindMetaDataHeaderFile(file);\\r\\n        if (headerFile) {\\r\\n            var bundlePath = path.dirname(headerFile);\\r\\n            var bundle = resolvedBundles[bundlePath];\\r\\n            if (bundle === undefined) {\\r\\n                try {\\r\\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\\r\\n                    try {\\r\\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\\r\\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\\r\\n                    }\\r\\n                    catch (err) {\\r\\n                        console.error('Failed to load nls bundle', err);\\r\\n                        bundle = cacheBundle(bundlePath, null);\\r\\n                    }\\r\\n                }\\r\\n                catch (err) {\\r\\n                    console.error('Failed to read header file', err);\\r\\n                    bundle = cacheBundle(bundlePath, null);\\r\\n                }\\r\\n            }\\r\\n            if (bundle) {\\r\\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\\\\\/g, '/');\\r\\n                var messages = bundle.nlsBundle[module_3];\\r\\n                if (messages === undefined) {\\r\\n                    console.error(\\\"Messages for file \\\" + file + \\\" not found. See console for details.\\\");\\r\\n                    return function () {\\r\\n                        return 'Messages not found.';\\r\\n                    };\\r\\n                }\\r\\n                return createScopedLocalizeFunction(messages);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\\r\\n        // Try to load a single file bundle\\r\\n        try {\\r\\n            var json = readJsonFileSync(resolveLanguage(file));\\r\\n            if (Array.isArray(json)) {\\r\\n                return createScopedLocalizeFunction(json);\\r\\n            }\\r\\n            else {\\r\\n                if (isDefined(json.messages) && isDefined(json.keys)) {\\r\\n                    return createScopedLocalizeFunction(json.messages);\\r\\n                }\\r\\n                else {\\r\\n                    console.error(\\\"String bundle '\\\" + file + \\\"' uses an unsupported format.\\\");\\r\\n                    return function () {\\r\\n                        return 'File bundle has unsupported format. See console for details';\\r\\n                    };\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code !== 'ENOENT') {\\r\\n                console.error('Failed to load single file bundle', err);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    console.error(\\\"Failed to load message bundle for file \\\" + file);\\r\\n    return function () {\\r\\n        return 'Failed to load message bundle. See console for details.';\\r\\n    };\\r\\n}\\r\\nexports.loadMessageBundle = loadMessageBundle;\\r\\nfunction config(opts) {\\r\\n    if (opts) {\\r\\n        if (isString(opts.locale)) {\\r\\n            options.locale = opts.locale.toLowerCase();\\r\\n            options.language = options.locale;\\r\\n            resolvedLanguage = undefined;\\r\\n            resolvedBundles = Object.create(null);\\r\\n        }\\r\\n        if (opts.messageFormat !== undefined) {\\r\\n            options.messageFormat = opts.messageFormat;\\r\\n        }\\r\\n        if (opts.bundleFormat === BundleFormat.standalone && options.languagePackSupport === true) {\\r\\n            options.languagePackSupport = false;\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    return loadMessageBundle;\\r\\n}\\r\\nexports.config = config;\\r\\n//# sourceMappingURL=main.js.map\"]}","code":"!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=4)}([function(e,t){e.exports=require(\"vscode\")},function(e,t){e.exports=require(\"path\")},function(e,t){e.exports=require(\"fs\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const o=n(0);function r(e,t,n=\" \"){return n.repeat(Math.max(0,t-e.length))+e}const s=new class{constructor(){this.output=o.window.createOutputChannel(\"Account\")}data2String(e){return e instanceof Error?e.stack||e.message:!1===e.success&&e.message?e.message:e.toString()}info(e,t){this.logLevel(\"Info\",e,t)}error(e,t){this.logLevel(\"Error\",e,t)}logLevel(e,t,n){this.output.appendLine(`[${e}  - ${this.now()}] ${t}`),n&&this.output.appendLine(this.data2String(n))}now(){const e=new Date;return r(e.getUTCHours()+\"\",2,\"0\")+\":\"+r(e.getMinutes()+\"\",2,\"0\")+\":\"+r(e.getUTCSeconds()+\"\",2,\"0\")+\".\"+e.getMilliseconds()}};t.default=s},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const o=n(0),r=n(5),s=n(15).loadMessageBundle(n(1).join(__dirname,\"extension.ts\"));t.DEFAULT_SCOPES=\"https://management.core.windows.net/.default offline_access\",t.activate=async function(e){const n=new r.AzureActiveDirectoryService;await n.initialize(),e.subscriptions.push(o.authentication.registerAuthenticationProvider({id:\"microsoft\",displayName:\"Microsoft\",onDidChangeSessions:r.onDidChangeSessions.event,getSessions:()=>Promise.resolve(n.sessions),login:async e=>{try{return await n.login(e.sort().join(\" \")),n.sessions[0]}catch(e){throw e}},logout:async e=>n.logout(e)})),e.subscriptions.push(o.commands.registerCommand(\"microsoft.signin\",()=>n.login(t.DEFAULT_SCOPES))),e.subscriptions.push(o.commands.registerCommand(\"microsoft.signout\",async()=>{const e=n.sessions;if(0===e.length)return;if(1===e.length)return await n.logout(n.sessions[0].id),r.onDidChangeSessions.fire(),void o.window.showInformationMessage(s(0,null));const t=await o.window.showQuickPick(e.map(e=>({id:e.id,label:e.accountName})));return t?(await n.logout(t.id),r.onDidChangeSessions.fire(),void o.window.showInformationMessage(s(1,null))):void 0}))},t.deactivate=function(){}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const o=n(6),r=n(7),s=n(8),i=n(0),a=n(9),c=n(12),l=n(3),u=n(14),d=\"https://vscode-redirect.azurewebsites.net/\",f=\"https://login.microsoftonline.com/\",h=\"aebc6443-996d-45c2-90f0-388ff96faa56\",g=\"organizations\";t.onDidChangeSessions=new i.EventEmitter,t.REFRESH_NETWORK_FAILURE=\"Network failure\";class p extends i.EventEmitter{handleUri(e){this.fire(e)}}t.AzureActiveDirectoryService=class{constructor(){this._tokens=[],this._refreshTimeouts=new Map,this._uriHandler=new p,i.window.registerUriHandler(this._uriHandler)}async initialize(){const e=await c.keychain.getToken();if(e)try{const n=this.parseStoredData(e).map(async e=>{try{await this.refreshToken(e.refreshToken,e.scope)}catch(n){n.message===t.REFRESH_NETWORK_FAILURE?await this.handleRefreshNetworkError(e.id,e.refreshToken,e.scope)||(this._tokens.push({accessToken:void 0,refreshToken:e.refreshToken,accountName:e.accountName,scope:e.scope,sessionId:e.id}),this.pollForReconnect(e.id,e.refreshToken,e.scope)):await this.logout(e.id)}});await Promise.all(n)}catch(e){await this.clearSessions()}this.pollForChange()}parseStoredData(e){return JSON.parse(e)}async storeTokenData(){const e=this._tokens.map(e=>({id:e.sessionId,refreshToken:e.refreshToken,scope:e.scope,accountName:e.accountName}));await c.keychain.setToken(JSON.stringify(e))}pollForChange(){setTimeout(async()=>{let e=!1;const n=await c.keychain.getToken();if(n)try{const o=this.parseStoredData(n);let r=o.map(async n=>{if(!this._tokens.some(e=>e.scope===n.scope&&e.sessionId===n.id))try{await this.refreshToken(n.refreshToken,n.scope),e=!0}catch(e){e.message===t.REFRESH_NETWORK_FAILURE||await this.logout(n.id)}});r=r.concat(this._tokens.map(async t=>{o.some(e=>t.scope===e.scope&&t.sessionId===e.id)||(await this.logout(t.sessionId),e=!0)})),await Promise.all(r)}catch(t){l.default.error(t.message),this.clearSessions(),e=!0}else this._tokens.length&&(await this.clearSessions(),e=!0);e&&t.onDidChangeSessions.fire(),this.pollForChange()},3e4)}convertToSession(e){return{id:e.sessionId,getAccessToken:()=>this.resolveAccessToken(e),accountName:e.accountName,scopes:e.scope.split(\" \")}}async resolveAccessToken(e){if(e.accessToken&&(!e.expiresAt||e.expiresAt>Date.now()))return e.expiresAt?l.default.info(`Token available from cache, expires in ${e.expiresAt-Date.now()} milliseconds`):l.default.info(\"Token available from cache\"),Promise.resolve(e.accessToken);try{if(l.default.info(\"Token expired or unavailable, trying refresh\"),!(await this.refreshToken(e.refreshToken,e.scope)).accessToken)throw new Error;Promise.resolve(e.accessToken)}catch(e){throw new Error(\"Unavailable due to network problems\")}throw new Error(\"Unavailable due to network problems\")}getTokenClaims(e){try{return JSON.parse(Buffer.from(e.split(\".\")[1],\"base64\").toString())}catch(e){throw l.default.error(e.message),new Error(\"Unable to read token claims\")}}get sessions(){return this._tokens.map(e=>this.convertToSession(e))}async login(e){if(l.default.info(\"Logging in...\"),i.env.uiKind===i.UIKind.Web)return void await this.loginWithoutLocalServer(e);const t=o.randomBytes(16).toString(\"base64\"),{server:n,redirectPromise:r,codePromise:s}=a.createServer(t);let c;try{const p=await a.startServer(n);i.env.openExternal(i.Uri.parse(`http://localhost:${p}/signin?nonce=${encodeURIComponent(t)}`));const m=await r;if(\"err\"in m){const{err:e,res:t}=m;throw t.writeHead(302,{Location:`/?error=${encodeURIComponent(e&&e.message||\"Unknown error\")}`}),t.end(),e}const v=m.req.headers.host||\"\",w=(/^[^:]+:(\\d+)$/.exec(Array.isArray(v)?v[0]:v)||[])[1],y=`${w?parseInt(w,10):p},${encodeURIComponent(t)}`,k=u.toBase64UrlEncoding(o.randomBytes(32).toString(\"base64\")),_=u.toBase64UrlEncoding(o.createHash(\"sha256\").update(k).digest(\"base64\")),S=`${f}${g}/oauth2/v2.0/authorize?response_type=code&response_mode=query&client_id=${encodeURIComponent(h)}&redirect_uri=${encodeURIComponent(d)}&state=${y}&scope=${encodeURIComponent(e)}&prompt=select_account&code_challenge_method=S256&code_challenge=${_}`;await m.res.writeHead(302,{Location:S}),m.res.end();const T=await s,b=T.res;try{if(\"err\"in T)throw T.err;c=await this.exchangeCodeForToken(T.code,k,e),this.setToken(c,e),l.default.info(\"Login successful\"),b.writeHead(302,{Location:\"/\"}),b.end()}catch(e){throw b.writeHead(302,{Location:`/?error=${encodeURIComponent(e&&e.message||\"Unknown error\")}`}),b.end(),new Error(e.message)}}catch(t){throw l.default.error(t.message),\"Error listening to server\"!==t.message&&\"Closed\"!==t.message&&\"Timeout waiting for port\"!==t.message||await this.loginWithoutLocalServer(e),new Error(t.message)}finally{setTimeout(()=>{n.close()},5e3)}}getCallbackEnvironment(e){switch(e.authority){case\"online.visualstudio.com\":return\"vso,\";case\"online-ppe.core.vsengsaas.visualstudio.com\":return\"vsoppe,\";case\"online.dev.core.vsengsaas.visualstudio.com\":return\"vsodev,\";default:return\"\"}}async loginWithoutLocalServer(e){const t=await i.env.asExternalUri(i.Uri.parse(`${i.env.uriScheme}://vscode.vscode-account`)),n=o.randomBytes(16).toString(\"base64\"),r=(t.authority.match(/:([0-9]*)$/)||[])[1]||(\"https\"===t.scheme?443:80),s=`${this.getCallbackEnvironment(t)}${r},${encodeURIComponent(n)},${encodeURIComponent(t.query)}`,a=`${f}${g}/oauth2/v2.0/authorize`;let c=i.Uri.parse(a);const l=u.toBase64UrlEncoding(o.randomBytes(32).toString(\"base64\")),p=u.toBase64UrlEncoding(o.createHash(\"sha256\").update(l).digest(\"base64\"));c=c.with({query:`response_type=code&client_id=${encodeURIComponent(h)}&response_mode=query&redirect_uri=${d}&state=${s}&scope=${e}&prompt=select_account&code_challenge_method=S256&code_challenge=${p}`}),i.env.openExternal(c);const m=new Promise((e,t)=>{const n=setTimeout(()=>{clearTimeout(n),t(\"Login timed out.\")},3e5)});return Promise.race([this.handleCodeResponse(s,l,e),m])}async handleCodeResponse(e,t,n){let o;return new Promise((r,s)=>{o=this._uriHandler.event(async o=>{try{const i=function(e){return e.query.split(\"&\").reduce((e,t)=>{const n=t.split(\"=\");return e[n[0]]=n[1],e},{})}(o),a=i.code;if(i.state!==e)throw new Error(\"State does not match.\");const c=await this.exchangeCodeForToken(a,t,n);this.setToken(c,n),r(c)}catch(e){s(e)}})}).then(e=>(o.dispose(),e)).catch(e=>{throw o.dispose(),e})}async setToken(e,n){const o=this._tokens.findIndex(t=>t.sessionId===e.sessionId);o>-1?this._tokens.splice(o,1,e):this._tokens.push(e),this.clearSessionTimeout(e.sessionId),e.expiresIn&&this._refreshTimeouts.set(e.sessionId,setTimeout(async()=>{try{await this.refreshToken(e.refreshToken,n),t.onDidChangeSessions.fire()}catch(o){o.message===t.REFRESH_NETWORK_FAILURE?await this.handleRefreshNetworkError(e.sessionId,e.refreshToken,n)||this.pollForReconnect(e.sessionId,e.refreshToken,e.scope):(await this.logout(e.sessionId),t.onDidChangeSessions.fire())}},1e3*(parseInt(e.expiresIn)-30))),this.storeTokenData()}getTokenFromResponse(e,t){const n=JSON.parse(Buffer.concat(e).toString()),o=this.getTokenClaims(n.access_token);return{expiresIn:n.expires_in,expiresAt:n.expires_in?Date.now()+1e3*n.expires_in:void 0,accessToken:n.access_token,refreshToken:n.refresh_token,scope:t,sessionId:`${o.tid}/${o.oid||o.altsecid||\"\"+o.ipd||\"\"}/${t}`,accountName:o.email||o.unique_name||\"user@example.com\"}}async exchangeCodeForToken(e,t,n){return new Promise((o,a)=>{l.default.info(\"Exchanging login code for token\");try{const c=s.stringify({grant_type:\"authorization_code\",code:e,client_id:h,scope:n,code_verifier:t,redirect_uri:d}),u=i.Uri.parse(`${f}${g}/oauth2/v2.0/token`),p=r.request({host:u.authority,path:u.path,method:\"POST\",headers:{\"Content-Type\":\"application/x-www-form-urlencoded\",\"Content-Length\":c.length}},e=>{const t=[];e.on(\"data\",e=>{t.push(e)}),e.on(\"end\",()=>{200===e.statusCode?(l.default.info(\"Exchanging login code for token success\"),o(this.getTokenFromResponse(t,n))):(l.default.error(\"Exchanging login code for token failed\"),a(new Error(\"Unable to login.\")))})});p.write(c),p.end(),p.on(\"error\",e=>{a(e)})}catch(e){l.default.error(e.message),a(e)}})}async refreshToken(e,n){return new Promise((o,i)=>{l.default.info(\"Refreshing token...\");const a=s.stringify({refresh_token:e,client_id:h,grant_type:\"refresh_token\",scope:n}),c=r.request({host:\"login.microsoftonline.com\",path:`/${g}/oauth2/v2.0/token`,method:\"POST\",headers:{\"Content-Type\":\"application/x-www-form-urlencoded\",\"Content-Length\":a.length}},e=>{const t=[];e.on(\"data\",e=>{t.push(e)}),e.on(\"end\",async()=>{if(200===e.statusCode){const e=this.getTokenFromResponse(t,n);this.setToken(e,n),l.default.info(\"Token refresh success\"),o(e)}else l.default.error(\"Refreshing token failed\"),i(new Error(\"Refreshing token failed.\"))})});c.write(a),c.end(),c.on(\"error\",e=>{l.default.error(e.message),i(new Error(t.REFRESH_NETWORK_FAILURE))})})}clearSessionTimeout(e){const t=this._refreshTimeouts.get(e);t&&(clearTimeout(t),this._refreshTimeouts.delete(e))}removeInMemorySessionData(e){const t=this._tokens.findIndex(t=>t.sessionId===e);t>-1&&this._tokens.splice(t,1),this.clearSessionTimeout(e)}pollForReconnect(e,t,n){this.clearSessionTimeout(e),this._refreshTimeouts.set(e,setTimeout(async()=>{try{await this.refreshToken(t,n)}catch(o){this.pollForReconnect(e,t,n)}},18e5))}handleRefreshNetworkError(e,n,o,r=1){return new Promise((s,i)=>{if(3===r)return l.default.error(\"Token refresh failed after 3 attempts\"),s(!1);if(1===r){const n=this._tokens.find(t=>t.sessionId===e);n&&(n.accessToken=void 0),t.onDidChangeSessions.fire()}const a=5*r*r;this.clearSessionTimeout(e),this._refreshTimeouts.set(e,setTimeout(async()=>{try{return await this.refreshToken(n,o),s(!0)}catch(t){return s(await this.handleRefreshNetworkError(e,n,o,r+1))}},1e3*a))})}async logout(e){l.default.info(`Logging out of session '${e}'`),this.removeInMemorySessionData(e),0===this._tokens.length?await c.keychain.deleteToken():this.storeTokenData()}async clearSessions(){l.default.info(\"Logging out of all sessions\"),this._tokens=[],await c.keychain.deleteToken(),this._refreshTimeouts.forEach(e=>{clearTimeout(e)}),this._refreshTimeouts.clear()}}},function(e,t){e.exports=require(\"crypto\")},function(e,t){e.exports=require(\"https\")},function(e,t){e.exports=require(\"querystring\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const o=n(10),r=n(11),s=n(2),i=n(1),a={number:\"number\",string:\"string\",undefined:\"undefined\",object:\"object\",function:\"function\"};function c(e){return typeof e===a.undefined}function l(e){return c(e)||null===e}function u(e){if(l(e))throw new Error(\"Assertion Failed: argument is undefined or null\");return e}function d(e,t,n){s.readFile(t,(t,o)=>{t?(console.error(t),e.writeHead(404),e.end()):(e.writeHead(200,{\"Content-Length\":o.length,\"Content-Type\":n}),e.end(o))})}t.isUndefined=c,t.isUndefinedOrNull=l,t.assertIsDefined=u,t.createTerminateServer=function(e){const t={};let n=0;return e.on(\"connection\",e=>{const o=n++;t[o]=e,e.on(\"close\",()=>{delete t[o]})}),async()=>{const n=new Promise(t=>e.close(t));for(const e in t)t[e].destroy();return n}},t.startServer=async function(e){let t;function n(){clearTimeout(t)}const o=new Promise((n,o)=>{t=setTimeout(()=>{o(new Error(\"Timeout waiting for port\"))},5e3),e.on(\"listening\",()=>{const t=e.address();n(\"string\"==typeof t?t:u(t).port.toString())}),e.on(\"error\",e=>{o(new Error(\"Error listening to server\"))}),e.on(\"close\",()=>{o(new Error(\"Closed\"))}),e.listen(0)});return o.then(n,n),o},t.createServer=function(e){let t;const n=new Promise((e,n)=>t={resolve:e,reject:n});let s;const a=new Promise((e,t)=>s={resolve:e,reject:t}),c=setTimeout(()=>{s.reject(new Error(\"Timeout waiting for code\"))},3e5);function l(){clearTimeout(c)}const u=o.createServer(function(n,o){const a=r.parse(n.url,!0);switch(a.pathname){case\"/signin\":if((a.query.nonce||\"\").replace(/ /g,\"+\")===e)t.resolve({req:n,res:o});else{const e=new Error(\"Nonce does not match.\");t.resolve({err:e,res:o})}break;case\"/\":d(o,i.join(__dirname,\"../media/auth.html\"),\"text/html; charset=utf-8\");break;case\"/auth.css\":d(o,i.join(__dirname,\"../media/auth.css\"),\"text/css; charset=utf-8\");break;case\"/callback\":s.resolve(async function(e,t){const n=t.query;if(!n||\"string\"==typeof n)throw new Error(\"No query received.\");let o=n.error_description||n.error;o||((n.state||\"\").split(\",\")[1]||\"\").replace(/ /g,\"+\")!==e&&(o=\"Nonce does not match.\");const r=n.code;if(!o&&r)return r;throw new Error(o||\"No code received.\")}(e,a).then(e=>({code:e,res:o}),e=>({err:e,res:o})));break;default:o.writeHead(404),o.end()}});return a.then(l,l),{server:u,redirectPromise:n,codePromise:a}}},function(e,t){e.exports=require(\"http\")},function(e,t){e.exports=require(\"url\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const o=n(0),r=n(3);const s=`${o.env.uriScheme}-vscode.login`,i=\"account\";class a{constructor(){const e=function(){try{return n(13)}catch(e){console.log(e)}}();if(!e)throw new Error(\"System keychain unavailable\");this.keytar=e}async setToken(e){try{return await this.keytar.setPassword(s,i,e)}catch(e){r.default.error(`Setting token failed: ${e}`)}}async getToken(){try{return await this.keytar.getPassword(s,i)}catch(e){return r.default.error(`Getting token failed: ${e}`),Promise.resolve(void 0)}}async deleteToken(){try{return await this.keytar.deletePassword(s,i)}catch(e){return r.default.error(`Deleting token failed: ${e}`),Promise.resolve(void 0)}}}t.Keychain=a,t.keychain=new a},function(e,t){e.exports=require(\"keytar\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.toBase64UrlEncoding=function(e){return e.replace(/=/g,\"\").replace(/\\+/g,\"-\").replace(/\\//g,\"_\")}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var o,r,s,i,a,c,l=n(1),u=n(2),d=Object.prototype.toString;function f(e){return void 0!==e}function h(e){return\"[object String]\"===d.call(e)}function g(e){return JSON.parse(u.readFileSync(e,\"utf8\"))}function p(e,t){return c&&(e=\"［\"+e.replace(/[aouei]/g,\"$&$&\")+\"］\"),0===t.length?e:e.replace(/\\{(\\d+)\\}/g,function(e,n){var o=n[0],r=t[o],s=e;return\"string\"==typeof r?s=r:\"number\"!=typeof r&&\"boolean\"!=typeof r&&void 0!==r&&null!==r||(s=String(r)),s})}function m(e){return function(t,n){for(var o=[],r=2;r<arguments.length;r++)o[r-2]=arguments[r];return function(e){return\"[object Number]\"===d.call(e)}(t)?t>=e.length?void console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \"+new Error(\"\").stack):p(e[t],o):h(n)?(console.warn(\"Message \"+n+\" didn't get externalized correctly.\"),p(n,o)):void console.error(\"Broken localize call found. Stacktrace is\\n: \"+new Error(\"\").stack)}}function v(e,t){for(var n=[],o=2;o<arguments.length;o++)n[o-2]=arguments[o];return p(t,n)}function w(e,t){return i[e]=t,t}function y(e,t){var n,o=l.join(a.cacheRoot,e.id+\"-\"+e.hash+\".json\"),r=!1,s=!1;try{return n=JSON.parse(u.readFileSync(o,{encoding:\"utf8\",flag:\"r\"})),function(e){var t=new Date;u.utimes(e,t,t,function(){})}(o),n}catch(e){if(\"ENOENT\"===e.code)s=!0;else{if(!(e instanceof SyntaxError))throw e;console.log(\"Syntax error parsing message bundle: \"+e.message+\".\"),u.unlink(o,function(e){e&&console.error(\"Deleting corrupted bundle \"+o+\" failed.\")}),r=!0}}if(!(n=function(e,t){var n=a.translationsConfig[e.id];if(n){var o=g(n).contents,r=g(l.join(t,\"nls.metadata.json\")),s=Object.create(null);for(var i in r){var c=r[i],u=o[e.outDir+\"/\"+i];if(u){for(var d=[],f=0;f<c.keys.length;f++){var p=c.keys[f],m=u[h(p)?p:p.key];void 0===m&&(m=c.messages[f]),d.push(m)}s[i]=d}else s[i]=c.messages}return s}}(e,t))||r)return n;if(s)try{u.writeFileSync(o,JSON.stringify(n),{encoding:\"utf8\",flag:\"wx\"})}catch(e){if(\"EEXIST\"===e.code)return n;throw e}return n}function k(e){try{return function(e){var t=g(l.join(e,\"nls.metadata.json\")),n=Object.create(null);for(var o in t){var r=t[o];n[o]=r.messages}return n}(e)}catch(e){return void console.log(\"Generating default bundle from meta data failed.\",e)}}function _(e,t){var n;if(!0===a.languagePackSupport&&void 0!==a.cacheRoot&&void 0!==a.languagePackId&&void 0!==a.translationsConfigFile&&void 0!==a.translationsConfig)try{n=y(e,t)}catch(e){console.log(\"Load or create bundle failed \",e)}if(!n){if(a.languagePackSupport)return k(t);var o=function(e){for(var t=a.language;t;){var n=l.join(e,\"nls.bundle.\"+t+\".json\");if(u.existsSync(n))return n;var o=t.lastIndexOf(\"-\");t=o>0?t.substring(0,o):void 0}if(void 0===t&&(n=l.join(e,\"nls.bundle.json\"),u.existsSync(n)))return n}(t);if(o)try{return g(o)}catch(e){console.log(\"Loading in the box message bundle failed.\",e)}n=k(t)}return n}function S(e){if(!e)return v;var t=l.extname(e);if(t&&(e=e.substr(0,e.length-t.length)),a.messageFormat===o.both||a.messageFormat===o.bundle){var n=function(e){for(var t,n=l.dirname(e);t=l.join(n,\"nls.metadata.header.json\"),!u.existsSync(t);){var o=l.dirname(n);if(o===n){t=void 0;break}n=o}return t}(e);if(n){var r=l.dirname(n),s=i[r];if(void 0===s)try{var d=JSON.parse(u.readFileSync(n,\"utf8\"));try{var h=_(d,r);s=w(r,h?{header:d,nlsBundle:h}:null)}catch(e){console.error(\"Failed to load nls bundle\",e),s=w(r,null)}}catch(e){console.error(\"Failed to read header file\",e),s=w(r,null)}if(s){var p=e.substr(r.length+1).replace(/\\\\/g,\"/\"),y=s.nlsBundle[p];return void 0===y?(console.error(\"Messages for file \"+e+\" not found. See console for details.\"),function(){return\"Messages not found.\"}):m(y)}}}if(a.messageFormat===o.both||a.messageFormat===o.file)try{var k=g(function(e){var t;if(a.cacheLanguageResolution&&t)t=t;else{if(c||!a.language)t=\".nls.json\";else for(var n=a.language;n;){var o=\".nls.\"+n+\".json\";if(u.existsSync(e+o)){t=o;break}var r=n.lastIndexOf(\"-\");r>0?n=n.substring(0,r):(t=\".nls.json\",n=null)}a.cacheLanguageResolution&&(t=t)}return e+t}(e));return Array.isArray(k)?m(k):f(k.messages)&&f(k.keys)?m(k.messages):(console.error(\"String bundle '\"+e+\"' uses an unsupported format.\"),function(){return\"File bundle has unsupported format. See console for details\"})}catch(e){\"ENOENT\"!==e.code&&console.error(\"Failed to load single file bundle\",e)}return console.error(\"Failed to load message bundle for file \"+e),function(){return\"Failed to load message bundle. See console for details.\"}}!function(e){e.file=\"file\",e.bundle=\"bundle\",e.both=\"both\"}(o=t.MessageFormat||(t.MessageFormat={})),function(e){e.standalone=\"standalone\",e.languagePack=\"languagePack\"}(r=t.BundleFormat||(t.BundleFormat={})),function(e){e.is=function(e){var t=e;return t&&f(t.key)&&f(t.comment)}}(s||(s={})),function(){if(a={locale:void 0,language:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:o.bundle},h(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG),t=void 0;if(e.availableLanguages){var n=e.availableLanguages[\"*\"];h(n)&&(t=n)}if(h(e.locale)&&(a.locale=e.locale.toLowerCase()),void 0===t?a.language=a.locale:\"en\"!==t&&(a.language=t),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(a.languagePackSupport=e._languagePackSupport),h(e._cacheRoot)&&(a.cacheRoot=e._cacheRoot),h(e._languagePackId)&&(a.languagePackId=e._languagePackId),h(e._translationsConfigFile)){a.translationsConfigFile=e._translationsConfigFile;try{a.translationsConfig=g(a.translationsConfigFile)}catch(t){e._corruptedFile&&u.writeFile(e._corruptedFile,\"corrupted\",\"utf8\",function(e){console.error(e)})}}}catch(e){}c=\"pseudo\"===a.locale,void 0,i=Object.create(null)}(),t.loadMessageBundle=S,t.config=function(e){return e&&(h(e.locale)&&(a.locale=e.locale.toLowerCase(),a.language=a.locale,void 0,i=Object.create(null)),void 0!==e.messageFormat&&(a.messageFormat=e.messageFormat),e.bundleFormat===r.standalone&&!0===a.languagePackSupport&&(a.languagePackSupport=!1)),c=\"pseudo\"===a.locale,S}}]));","extractedComments":[]}