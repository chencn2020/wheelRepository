{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"external \\\"path\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/constants.js\",\"external \\\"fs\\\"\",\"external \\\"vscode\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel/dist/src/channel.js\",\"/repo/lib/vscode/extensions/git/src/util.ts\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/Logging.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/vscode-nls/lib/main.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/codingstatemachine.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/Domain.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/Util.js\",\"external \\\"os\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/charsetprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/logger.js\",\"/repo/lib/vscode/extensions/git/node_modules/safer-buffer/safer.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcharsetprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/chardistribution.js\",\"/repo/lib/vscode/extensions/git/src/decorators.ts\",\"/repo/lib/vscode/extensions/git/src/uri.ts\",\"external \\\"http\\\"\",\"external \\\"buffer\\\"\",\"external \\\"stream\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/CorrelationContextManager.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/RequestResponseHeaders.js\",\"external \\\"url\\\"\",\"/repo/lib/vscode/extensions/git/src/git.ts\",\"external \\\"events\\\"\",\"/repo/lib/vscode/extensions/git/src/repository.ts\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/initialization.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/HttpDependencies.js\",\"external \\\"https\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/CorrelationIdManager.js\",\"external \\\"child_process\\\"\",\"external \\\"string_decoder\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/byline/lib/byline.js\",\"external \\\"timers\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/charsetgroupprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/jpcntx.js\",\"/repo/lib/vscode/extensions/git/src/log.ts\",\"/repo/lib/vscode/extensions/git/src/timelineProvider.ts\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel/dist/src/patchRequire.js\",\"external \\\"module\\\"\",\"external \\\"crypto\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/Base.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/DataPointType.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/EventData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/Performance.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/RequestParser.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/HttpRequests.js\",\"/repo/lib/vscode/extensions/git/src/main.ts\",\"/repo/lib/vscode/extensions/git/node_modules/which/which.js\",\"/repo/lib/vscode/extensions/git/node_modules/isexe/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/isexe/windows.js\",\"/repo/lib/vscode/extensions/git/node_modules/isexe/mode.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/lib/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/lib/bom-handling.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/internal.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/utf16.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/utf7.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/sbcs-codec.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/sbcs-data.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/sbcs-data-generated.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/dbcs-codec.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/encodings/dbcs-data.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/lib/streams.js\",\"/repo/lib/vscode/extensions/git/node_modules/iconv-lite/lib/extend-node.js\",\"/repo/lib/vscode/extensions/git/node_modules/file-type/index.js\",\"external \\\"util\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/vscode-uri/lib/esm/index.js\",\"/repo/lib/vscode/extensions/git/src/encoding.ts\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/universaldetector.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcsgroupprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/big5prober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcssm/big5.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/jisfreq.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/euctwfreq.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/euckrfreq.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/gb2312freq.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/big5freq.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/utf8prober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcssm/utf8.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/sjisprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcssm/sjis.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/eucjpprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcssm/eucjp.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/gb2312prober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcssm/gb2312.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/euckrprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcssm/euckr.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/euctwprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/mbcssm/euctw.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/sbcsgroupprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/sbcharsetprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/langhebrewmodel.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/hebrewprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/langcyrillicmodel.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/langgreekmodel.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/langthaimodel.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/langhungarianmodel.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/langbulgarianmodel.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/latin1prober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/escprober.js\",\"/repo/lib/vscode/extensions/git/node_modules/jschardet/src/escsm.js\",\"/repo/lib/vscode/extensions/git/src/model.ts\",\"/repo/lib/vscode/extensions/git/src/autofetch.ts\",\"/repo/lib/vscode/extensions/git/src/statusbar.ts\",\"/repo/lib/vscode/extensions/git/src/watch.ts\",\"/repo/lib/vscode/extensions/git/src/commands.ts\",\"/repo/lib/vscode/extensions/git/src/staging.ts\",\"/repo/lib/vscode/extensions/git/node_modules/dayjs/dayjs.min.js\",\"/repo/lib/vscode/extensions/git/node_modules/dayjs/plugin/advancedFormat.js\",\"/repo/lib/vscode/extensions/git/src/contentProvider.ts\",\"/repo/lib/vscode/extensions/git/src/fileSystemProvider.ts\",\"/repo/lib/vscode/extensions/git/src/decorationProvider.ts\",\"/repo/lib/vscode/extensions/git/src/askpass.ts\",\"/repo/lib/vscode/extensions/git/node_modules/vscode-extension-telemetry/lib/telemetryReporter.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/applicationinsights.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/bunyan.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel/node_modules/semver/semver.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/console.pub.js\",\"external \\\"console\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/mongodb-core.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/mongodb.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/mysql.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src sync /^.*\\\\/lib\\\\/Connection$/\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src sync /^.*\\\\/lib\\\\/Pool$/\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/pg-pool.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/pg.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/redis.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/diagnostic-channel-publishers/dist/src/winston.pub.js\",\"/repo/lib/vscode/extensions/git/node_modules/zone.js/dist/zone-node.js\",\"external \\\"_http_client\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/Console.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/console.sub.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Constants.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/AvailabilityData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/ContextTagKeys.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/Data.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/DataPoint.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/Envelope.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/ExceptionData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/ExceptionDetails.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/MessageData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/MetricData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/PageViewData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/RemoteDependencyData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/RequestData.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/SeverityLevel.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/Generated/StackFrame.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/TelemetryTypes/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Declarations/Contracts/TelemetryTypes/TelemetryType.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/bunyan.sub.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/winston.sub.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/Exceptions.js\",\"external \\\"constants\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/HttpDependencyParser.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/mongodb.sub.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/mysql.sub.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/redis.sub.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/diagnostic-channel/postgres.sub.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/AutoCollection/HttpRequestParser.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/NodeClient.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/TelemetryClient.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/Config.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/Context.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/Channel.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/TelemetryProcessors/index.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/TelemetryProcessors/SamplingTelemetryProcessor.js\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/Sender.js\",\"external \\\"zlib\\\"\",\"/repo/lib/vscode/extensions/git/node_modules/applicationinsights/out/Library/EnvelopeFactory.js\",\"/repo/lib/vscode/extensions/git/src/protocolHandler.ts\",\"external \\\"querystring\\\"\",\"/repo/lib/vscode/extensions/git/src/api/extension.ts\",\"/repo/lib/vscode/extensions/git/src/api/api1.ts\",\"/repo/lib/vscode/extensions/git/src/ipc/ipcServer.ts\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"require\",\"detecting\",\"foundIt\",\"notMe\",\"start\",\"error\",\"itsMe\",\"SHORTCUT_THRESHOLD\",\"patchRequire_1\",\"patchRequire_2\",\"makePatchingRequire\",\"trueFilter\",\"publishing\",\"ContextPreservingEventEmitter\",\"this\",\"version\",\"subscribers\",\"contextPreservationFunction\",\"cb\",\"knownPatches\",\"currentlyPublishing\",\"shouldPublish\",\"listeners\",\"some\",\"_a\",\"filter\",\"publish\",\"event\",\"standardEvent_1\",\"timestamp\",\"Date\",\"now\",\"data\",\"forEach\",\"listener\",\"e\",\"subscribe\",\"push\",\"unsubscribe\",\"index\",\"length\",\"splice\",\"reset\",\"_this\",\"getOwnPropertyNames\",\"prop\",\"bindToContext\",\"addContextPreservation\",\"preserver\",\"previousPreservationStack\",\"registerMonkeyPatch\",\"packageName\",\"patcher\",\"getPatchesObject\",\"global\",\"diagnosticsSource\",\"channel\",\"path_1\",\"fs_1\",\"byline\",\"dispose\",\"disposables\",\"toDisposable\",\"combinedDisposable\",\"filterEvent\",\"thisArgs\",\"onceEvent\",\"result\",\"isWindowsPath\",\"path\",\"test\",\"log\",\"args\",\"console\",\"apply\",\"EmptyDisposable\",\"fireEvent\",\"_\",\"mapEvent\",\"map\",\"latchEvent\",\"cache\",\"firstCall\",\"shouldEmit\",\"anyEvent\",\"events\",\"done\",\"promise\",\"then\",\"undefined\",\"debounceEvent\",\"delay\",\"timer\",\"clearTimeout\",\"setTimeout\",\"eventToPromise\",\"Promise\",\"once\",\"fn\",\"assign\",\"destination\",\"sources\",\"source\",\"keys\",\"uniqBy\",\"arr\",\"seen\",\"el\",\"groupBy\",\"reduce\",\"mkdirp\",\"async\",\"mkdir\",\"promises\",\"err\",\"code\",\"stat\",\"isDirectory\",\"Error\",\"dirname\",\"uniqueFilter\",\"keyFn\",\"element\",\"firstIndex\",\"array\",\"find\",\"grep\",\"filename\",\"pattern\",\"fileStream\",\"createReadStream\",\"encoding\",\"stream\",\"on\",\"line\",\"close\",\"readBytes\",\"bytes\",\"complete\",\"buffer\",\"Buffer\",\"allocUnsafe\",\"bytesRead\",\"bytesToRead\",\"Math\",\"min\",\"copy\",\"destroy\",\"slice\",\"detectUnicodeEncoding\",\"b0\",\"readUInt8\",\"b1\",\"b2\",\"isDescendant\",\"parent\",\"descendant\",\"charAt\",\"sep\",\"toLowerCase\",\"startsWith\",\"pathEquals\",\"a\",\"b\",\"splitInChunks\",\"maxChunkLength\",\"current\",\"newLength\",\"Limiter\",\"[object Object]\",\"maxDegreeOfParalellism\",\"outstandingPromises\",\"runningPromises\",\"factory\",\"consume\",\"iLimitedTask\",\"shift\",\"consumed\",\"Logging\",\"info\",\"message\",\"optionalParams\",\"_i\",\"arguments\",\"enableDebug\",\"TAG\",\"warn\",\"disableWarnings\",\"__export\",\"MessageFormat\",\"LocalizeInfo\",\"resolvedBundles\",\"options\",\"isPseudo\",\"fs\",\"toString\",\"isDefined\",\"isString\",\"readJsonFileSync\",\"JSON\",\"parse\",\"readFileSync\",\"format\",\"replace\",\"match\",\"rest\",\"arg\",\"replaced\",\"String\",\"createScopedLocalizeFunction\",\"messages\",\"isNumber\",\"stack\",\"localize\",\"cacheBundle\",\"bundle\",\"loadNlsBundleOrCreateFromI18n\",\"header\",\"bundlePath\",\"join\",\"cacheRoot\",\"id\",\"hash\",\"useMemoryOnly\",\"writeBundle\",\"flag\",\"file\",\"utimes\",\"touch\",\"SyntaxError\",\"unlink\",\"metaDataPath\",\"languagePackLocation\",\"translationsConfig\",\"languagePack\",\"contents\",\"metaData\",\"module_2\",\"entry\",\"translations\",\"outDir\",\"resultMessages\",\"messageKey\",\"translatedMessage\",\"createNLSBundle\",\"writeFileSync\",\"stringify\",\"loadDefaultNlsBundle\",\"folder\",\"module_1\",\"createDefaultNlsBundle\",\"loadNlsBundle\",\"languagePackSupport\",\"languagePackId\",\"translationsConfigFile\",\"candidate\",\"root\",\"locale\",\"existsSync\",\"lastIndexOf\",\"substring\",\"findInTheBoxBundle\",\"loadMessageBundle\",\"ext\",\"extname\",\"substr\",\"messageFormat\",\"both\",\"headerFile\",\"tryFindMetaDataHeaderFile\",\"nlsBundle\",\"module_3\",\"json\",\"resolvedLanguage\",\"cacheLanguageResolution\",\"resolveLanguage\",\"Array\",\"isArray\",\"is\",\"comment\",\"process\",\"env\",\"VSCODE_NLS_CONFIG\",\"vscodeOptions\",\"isBoolean\",\"_languagePackSupport\",\"_cacheRoot\",\"_languagePackId\",\"_translationsConfigFile\",\"_corruptedFile\",\"writeFile\",\"initializeSettings\",\"config\",\"opts\",\"constants\",\"sm\",\"self\",\"_mCurrentState\",\"nextState\",\"byteCls\",\"_mModel\",\"classTable\",\"charCodeAt\",\"_mCurrentBytePos\",\"_mCurrentCharLen\",\"charLenTable\",\"stateTable\",\"classFactor\",\"getCurrentCharLen\",\"getCodingStateMachine\",\"init\",\"Domain\",\"__assign\",\"http\",\"https\",\"url\",\"RequestResponseHeaders\",\"Util\",\"getCookie\",\"cookie\",\"cookieName\",\"cookies\",\"split\",\"trim\",\"indexOf\",\"str\",\"int32ArrayToBase64\",\"toChar\",\"v\",\"fromCharCode\",\"x\",\"from\",\"random32\",\"random\",\"randomu32\",\"w3cTraceId\",\"tmp\",\"hexValues\",\"oct\",\"clockSequenceHi\",\"obj\",\"isError\",\"isPrimitive\",\"input\",\"propType\",\"isDate\",\"msToTimeSpan\",\"totalms\",\"isNaN\",\"sec\",\"toFixed\",\"floor\",\"hour\",\"days\",\"extractError\",\"looseError\",\"extractObject\",\"origProperty\",\"toJSON\",\"validateStringMap\",\"field\",\"stringTarget\",\"constructor\",\"MAX_PROPERTY_LENGTH\",\"canIncludeCorrelationHeader\",\"client\",\"requestUrl\",\"excludedDomains\",\"correlationHeaderExcludedDomains\",\"RegExp\",\"hostname\",\"getCorrelationContextTarget\",\"response\",\"contextHeaders\",\"headers\",\"requestContextHeader\",\"keyValues\",\"keyValue\",\"makeRequest\",\"requestOptions\",\"requestCallback\",\"requestUrlParsed\",\"host\",\"port\",\"pathname\",\"proxyUrl\",\"protocol\",\"proxyHttpsUrl\",\"proxyHttpUrl\",\"proxyUrlParsed\",\"Host\",\"isHttps\",\"httpsAgent\",\"agent\",\"httpAgent\",\"tlsRestrictedAgent\",\"request\",\"Agent\",\"secureOptions\",\"SSL_OP_NO_SSLv2\",\"SSL_OP_NO_SSLv3\",\"SSL_OP_NO_TLSv1\",\"SSL_OP_NO_TLSv1_1\",\"_mState\",\"getCharsetName\",\"feed\",\"aBuf\",\"getState\",\"getConfidence\",\"filterHighBitOnly\",\"filterWithoutEnglishLetters\",\"filterWithEnglishLetters\",\"inTag\",\"prev\",\"curr\",\"isAlpha\",\"setLogger\",\"loggerFunction\",\"enabled\",\"safer\",\"Safer\",\"Uint8Array\",\"encodingOrOffset\",\"TypeError\",\"alloc\",\"size\",\"fill\",\"RangeError\",\"buf\",\"kStringMaxLength\",\"binding\",\"MAX_LENGTH\",\"kMaxLength\",\"MAX_STRING_LENGTH\",\"CharSetProber\",\"logger\",\"MultiByteCharSetProber\",\"_mCodingSM\",\"_mDistributionAnalyzer\",\"_mLastChar\",\"aLen\",\"codingState\",\"charLen\",\"gotEnoughData\",\"jisfreq\",\"euctwfreq\",\"euckrfreq\",\"gb2312freq\",\"big5freq\",\"CharDistributionAnalysis\",\"_mDone\",\"_mTotalChars\",\"_mFreqChars\",\"aStr\",\"aCharLen\",\"order\",\"getOrder\",\"_mTableSize\",\"_mCharToFreqOrder\",\"_mTypicalDistributionRatio\",\"EUCTWDistributionAnalysis\",\"EUCTWCharToFreqOrder\",\"EUCTW_TABLE_SIZE\",\"EUCTW_TYPICAL_DISTRIBUTION_RATIO\",\"EUCKRDistributionAnalysis\",\"EUCKRCharToFreqOrder\",\"EUCKR_TABLE_SIZE\",\"EUCKR_TYPICAL_DISTRIBUTION_RATIO\",\"GB2312DistributionAnalysis\",\"GB2312CharToFreqOrder\",\"GB2312_TABLE_SIZE\",\"GB2312_TYPICAL_DISTRIBUTION_RATIO\",\"Big5DistributionAnalysis\",\"Big5CharToFreqOrder\",\"BIG5_TABLE_SIZE\",\"BIG5_TYPICAL_DISTRIBUTION_RATIO\",\"SJISDistributionAnalysis\",\"JISCharToFreqOrder\",\"JIS_TABLE_SIZE\",\"JIS_TYPICAL_DISTRIBUTION_RATIO\",\"EUCJPDistributionAnalysis\",\"util_1\",\"decorate\",\"decorator\",\"_target\",\"descriptor\",\"fnKey\",\"memoize\",\"memoizeKey\",\"configurable\",\"writable\",\"throttle\",\"currentKey\",\"nextKey\",\"trigger\",\"clear\",\"sequentialize\",\"currentPromise\",\"resolve\",\"run\",\"debounce\",\"timerKey\",\"isGitUri\",\"uri\",\"scheme\",\"fromGitUri\",\"query\",\"toGitUri\",\"ref\",\"params\",\"fsPath\",\"submoduleOf\",\"replaceFileExtension\",\"with\",\"DiagChannel\",\"CorrelationContextManager\",\"getCurrentContext\",\"Zone\",\"generateContextObject\",\"operationId\",\"parentId\",\"operationName\",\"correlationContextHeader\",\"operation\",\"customProperties\",\"CustomPropertiesImpl\",\"runWithContext\",\"context\",\"fork\",\"properties\",\"wrapCallback\",\"wrap\",\"enable\",\"isNodeVersionCompatible\",\"hasEverEnabled\",\"registerContextPreservation\",\"patchError\",\"patchTimers\",\"disable\",\"nodeVer\",\"versions\",\"node\",\"parseInt\",\"methodNames\",\"methodName\",\"orig\",\"ret\",\"handleId\",\"AppInsightsAsyncCorrelatedErrorWrapper\",\"stackRewrite\",\"prepareStackTrace\",\"stackTrace\",\"foundOne\",\"fileName\",\"getFileName\",\"max\",\"stackFrames\",\"startIndex\",\"props\",\"concat\",\"propertyName\",\"hiddenPropertyName\",\"getOwnPropertyDescriptor\",\"addHeaderData\",\"keyvals\",\"keyval\",\"parts\",\"serializeToHeader\",\"getProperty\",\"setProperty\",\"val\",\"bannedCharacters\",\"requestContextSourceKey\",\"requestContextTargetKey\",\"requestIdHeader\",\"parentIdHeader\",\"rootIdHeader\",\"os\",\"cp\",\"which\",\"events_1\",\"iconv\",\"filetype\",\"vscode_uri_1\",\"encoding_1\",\"string_decoder_1\",\"MAX_CLI_LENGTH\",\"parseVersion\",\"raw\",\"findSpecificGit\",\"onLookup\",\"buffers\",\"child\",\"spawn\",\"stdout\",\"cpErrorHandler\",\"findSystemGitWin32\",\"base\",\"reject\",\"findGitWin32\",\"findGitWin32InPath\",\"GitError\",\"gitErrorCode\",\"exec\",\"cancellationToken\",\"stderr\",\"isCancellationRequested\",\"ee\",\"removeListener\",\"all\",\"cancellationPromise\",\"onCancellationRequested\",\"kill\",\"race\",\"exitCode\",\"findGit\",\"hint\",\"platform\",\"gitPathBuffer\",\"getVersion\",\"findGitDarwin\",\"gitCommand\",\"getGitErrorCode\",\"sanitizePath\",\"letter\",\"toUpperCase\",\"COMMIT_FORMAT\",\"Git\",\"_onOutput\",\"EventEmitter\",\"gitPath\",\"onOutput\",\"repository\",\"dotGit\",\"Repository\",\"parentPath\",\"progress\",\"baseFolderName\",\"decodeURI\",\"folderName\",\"folderPath\",\"count\",\"exists\",\"onSpawn\",\"decoder\",\"StringDecoder\",\"lineStream\",\"LineStream\",\"write\",\"totalProgress\",\"previousProgress\",\"report\",\"increment\",\"includes\",\"encodeURI\",\"repositoryPath\",\"normalize\",\"trimLeft\",\"dotGitPath\",\"isAbsolute\",\"cwd\",\"_exec\",\"stdin\",\"end\",\"bufferResult\",\"encodingExists\",\"decode\",\"stdio\",\"VSCODE_GIT_COMMAND\",\"LC_ALL\",\"LANG\",\"output\",\"emit\",\"GitStatusParser\",\"lastRaw\",\"status\",\"nextI\",\"parseEntry\",\"lastIndex\",\"y\",\"rename\",\"parseGitmodules\",\"regex\",\"position\",\"submodule\",\"parseLine\",\"sectionMatch\",\"propertyMatch\",\"commitRegex\",\"parseGitCommits\",\"authorName\",\"authorEmail\",\"authorDate\",\"commitDate\",\"parents\",\"commits\",\"Number\",\"parseLsTree\",\"type\",\"parseLsFiles\",\"stage\",\"ForcePushMode\",\"_git\",\"repositoryRoot\",\"git\",\"scope\",\"equalsIndex\",\"maxEntries\",\"reverse\",\"sortByAuthorDate\",\"autoGuessEncoding\",\"detectEncoding\",\"treeish\",\"elements\",\"lsfiles\",\"catFile\",\"lstree\",\"relativePath\",\"relativePathLowercase\",\"posix\",\"isText\",\"readInt8\",\"mimetype\",\"mime\",\"patch\",\"cached\",\"diffFiles\",\"object1\",\"object2\",\"ref1\",\"ref2\",\"range\",\"gitResult\",\"entries\",\"entriesLoop\",\"change\",\"resourcePath\",\"originalUri\",\"URI\",\"newPath\",\"renameUri\",\"paths\",\"update\",\"getCommit\",\"add\",\"getObjectDetails\",\"track\",\"chunk\",\"amend\",\"signoff\",\"signCommit\",\"empty\",\"commitErr\",\"handleCommitError\",\"checkout\",\"force\",\"upstream\",\"pathsByGroup\",\"groups\",\"k\",\"limiter\",\"queue\",\"hard\",\"spawnOptions\",\"remote\",\"prune\",\"depth\",\"silent\",\"VSCODE_GIT_FETCH_SILENT\",\"rebase\",\"branch\",\"tags\",\"unshallow\",\"setUpstream\",\"forcePushMode\",\"ForceWithLease\",\"Force\",\"includeUntracked\",\"popOrApplyStash\",\"limit\",\"parser\",\"GIT_OPTIONAL_LOCKS\",\"onExit\",\"stderrData\",\"didHitLimit\",\"onStdoutData\",\"setEncoding\",\"commit\",\"upstreamBranch\",\"sort\",\"g\",\"description\",\"lines\",\"remotes\",\"isReadOnly\",\"fetchUrl\",\"pushUrl\",\"getHEAD\",\"fullUpstream\",\"res3\",\"ahead\",\"behind\",\"mergeMsgPath\",\"readFile\",\"stripCommitMessageComments\",\"homedir\",\"templatePath\",\"user\",\"gitmodulesPath\",\"vscode_1\",\"nls\",\"autofetch_1\",\"decorators_1\",\"git_1\",\"statusbar_1\",\"uri_1\",\"watch_1\",\"log_1\",\"timeout\",\"millis\",\"__dirname\",\"iconsRootPath\",\"getIconUri\",\"iconName\",\"theme\",\"Uri\",\"Resource\",\"_resourceGroupType\",\"_resourceUri\",\"_type\",\"_useIcons\",\"_renameResourceUri\",\"resourceUri\",\"renameResourceUri\",\"command\",\"title\",\"resourceGroupType\",\"original\",\"Icons\",\"Modified\",\"Added\",\"Deleted\",\"Renamed\",\"Copied\",\"Untracked\",\"Ignored\",\"Conflict\",\"tooltip\",\"getStatusText\",\"strikeThrough\",\"faded\",\"decorations\",\"light\",\"iconPath\",\"getIconPath\",\"dark\",\"color\",\"ThemeColor\",\"priority\",\"resourceDecoration\",\"bubble\",\"shouldShowProgress\",\"__decorate\",\"OperationsImpl\",\"operations\",\"Map\",\"set\",\"delete\",\"has\",\"ProgressManager\",\"disposable\",\"workspace\",\"onDidChangeConfiguration\",\"affectsConfiguration\",\"onDidChange\",\"updateEnablement\",\"getConfiguration\",\"onDidChangeOperations\",\"setup\",\"window\",\"withProgress\",\"location\",\"ProgressLocation\",\"SourceControl\",\"FileEventLogger\",\"onWorkspaceWorkingTreeFileChange\",\"onDotGitFileChange\",\"outputChannel\",\"eventDisposable\",\"logLevelDisposable\",\"Log\",\"onDidChangeLogLevel\",\"logLevel\",\"level\",\"LogLevel\",\"Debug\",\"appendLine\",\"DotGitWatcher\",\"emitter\",\"transientDisposables\",\"rootWatcher\",\"watch\",\"filteredRootWatcher\",\"onDidRunGitStatus\",\"updateTransientWatchers\",\"HEAD\",\"upstreamPath\",\"upstreamWatcher\",\"fire\",\"globalState\",\"_onDidChangeRepository\",\"onDidChangeRepository\",\"_onDidChangeState\",\"onDidChangeState\",\"_onDidChangeStatus\",\"_onDidChangeOriginalResource\",\"onDidChangeOriginalResource\",\"_onRunOperation\",\"onRunOperation\",\"_onDidRunOperation\",\"onDidRunOperation\",\"_refs\",\"_remotes\",\"_submodules\",\"_rebaseCommit\",\"_operations\",\"_state\",\"isRepositoryHuge\",\"didWarnAboutLimit\",\"workspaceWatcher\",\"createFileSystemWatcher\",\"onWorkspaceFileChange\",\"onDidCreate\",\"onDidDelete\",\"onWorkspaceRepositoryFileChange\",\"dotGitFileWatcher\",\"onFileChange\",\"_sourceControl\",\"scm\",\"createSourceControl\",\"acceptInputCommand\",\"quickDiffProvider\",\"inputBox\",\"validateInput\",\"updateInputBoxPlaceholder\",\"_mergeGroup\",\"createResourceGroup\",\"_indexGroup\",\"_workingTreeGroup\",\"_untrackedGroup\",\"updateIndexGroupVisibility\",\"indexGroup\",\"hideWhenEmpty\",\"onConfigListener\",\"onConfigListenerForBranchSortOrder\",\"updateModelState\",\"onConfigListenerForUntracked\",\"mergeGroup\",\"untrackedGroup\",\"workingTreeGroup\",\"AutoFetcher\",\"onSuccessfulPush\",\"showInformationMessage\",\"statusBar\",\"StatusBarCommands\",\"statusBarCommands\",\"commands\",\"progressManager\",\"onDidChangeCountBadge\",\"setCountBadge\",\"sourceControl\",\"_HEAD\",\"refs\",\"headShortName\",\"tag\",\"iref\",\"tagName\",\"submodules\",\"rebaseCommit\",\"state\",\"resourceStates\",\"text\",\"SourceControlInputBoxValidationType\",\"Warning\",\"setting\",\"lineNumber\",\"threshold\",\"inputValidationSubjectLength\",\"Information\",\"mergeMessage\",\"getMergeMessage\",\"getCommitTemplate\",\"getConfigs\",\"logFile\",\"diff\",\"diffWithHEAD\",\"diffWith\",\"diffIndexWithHEAD\",\"diffIndexWith\",\"diffBlobs\",\"diffBetween\",\"getMergeBase\",\"hashObject\",\"resources\",\"rm\",\"resource\",\"relative\",\"revert\",\"addOpts\",\"rebaseContinue\",\"toClean\",\"toCheckout\",\"submodulesToUpdate\",\"scmResource\",\"sr\",\"clean\",\"updateSubmodules\",\"_checkout\",\"_ref\",\"deleteBranch\",\"renameBranch\",\"getBranch\",\"setBranchUpstream\",\"merge\",\"deleteTag\",\"upstreamRef\",\"findTrackingBranches\",\"deleteRef\",\"addRemote\",\"removeRemote\",\"fetch\",\"head\",\"pullFrom\",\"maybeAutoStash\",\"fetchOnPull\",\"pull\",\"blame\",\"_sync\",\"remoteName\",\"pullBranch\",\"pushBranch\",\"supportCancellation\",\"Notification\",\"cancellable\",\"token\",\"filePath\",\"configFiles\",\"defaultEncoding\",\"bufferString\",\"gitRelativePath\",\"getGitRelativePath\",\"detectObjectType\",\"getStashes\",\"createStash\",\"popStash\",\"dropStash\",\"applyStash\",\"files\",\"ignoreFile\",\"textToAppend\",\"document\",\"openTextDocument\",\"showTextDocument\",\"edit\",\"WorkspaceEdit\",\"lastLine\",\"lineAt\",\"lineCount\",\"isEmptyOrWhitespace\",\"insert\",\"applyEdit\",\"save\",\"filePaths\",\"Set\",\"parseIgnoreCheck\",\"ignored\",\"runOperation\",\"retryRun\",\"attempt\",\"pow\",\"folderPaths\",\"KnownHugeFolderNames\",\"checkIgnore\",\"getStatus\",\"scopedConfig\",\"shouldIgnore\",\"useIcons\",\"knownHugeFolderPaths\",\"findKnownHugeFolderPathsToIgnore\",\"gitWarn\",\"neverAgain\",\"basename\",\"addKnown\",\"yes\",\"showWarningMessage\",\"ignore\",\"getRefs\",\"getRemotes\",\"getSubmodules\",\"getRebaseCommit\",\"untrackedChanges\",\"workingTree\",\"untracked\",\"commitTemplate\",\"getInputTemplate\",\"countBadge\",\"rebaseHeadPath\",\"rebaseApplyPath\",\"rebaseMergePath\",\"rebaseApplyExists\",\"rebaseMergePathExists\",\"rebaseHead\",\"_uri\",\"isIdle\",\"eventuallyUpdateWhenIdleAndWait\",\"updateWhenIdleAndWait\",\"whenIdleAndFocused\",\"focused\",\"onDidFocusWindow\",\"onDidChangeWindowState\",\"headLabel\",\"syncLabel\",\"branchName\",\"placeholder\",\"IsInitialized\",\"publishers\",\"unpatchedModules\",\"bunyan\",\"mongodb\",\"mongodbCore\",\"mysql\",\"redis\",\"pg\",\"pgPool\",\"winston\",\"mod\",\"HttpDependencyParser\",\"CorrelationContextManager_1\",\"AutoCollectHttpDependencies\",\"INSTANCE\",\"_client\",\"isEnabled\",\"_isEnabled\",\"_isInitialized\",\"_initialize\",\"isInitialized\",\"originalRequest\",\"originalHttpsRequest\",\"clientRequestPatch\",\"shouldCollect\",\"disableCollectionRequestOption\",\"alreadyAutoCollectedFlag\",\"trackRequest\",\"requestArgs\",\"telemetry\",\"requestParser\",\"currentContext\",\"uniqueRequestId\",\"requestNumber\",\"getUrl\",\"getHeader\",\"setHeader\",\"correlationId\",\"correlationHeader\",\"components\",\"key_1\",\"onResponse\",\"dependencyTelemetry\",\"getDependencyTelemetry\",\"contextObjects\",\"trackDependency\",\"onError\",\"CorrelationIdManager\",\"queryCorrelationId\",\"callback\",\"appIdUrlString\",\"profileQueryEndpoint\",\"instrumentationKey\",\"completedLookups\",\"pendingLookups\",\"fetchAppId\",\"method\",\"disableAppInsightsAutoCollection\",\"req\",\"res\",\"statusCode\",\"appId_1\",\"correlationIdPrefix\",\"correlationIdRetryIntervalMs\",\"cancelCorrelationIdQuery\",\"generateRequestId\",\"suffix\",\"currentRootId\",\"appendSuffix\",\"generateRootId\",\"getRootId\",\"endIndex\",\"delimiter\",\"requestIdMaxLength\",\"trimPosition\",\"util\",\"timers\",\"createLineStream\",\"readStream\",\"readable\",\"ls\",\"pipe\",\"Transform\",\"_readableState\",\"objectMode\",\"_lineBuffer\",\"_keepEmptyLines\",\"keepEmptyLines\",\"_lastChunkEndedWithCR\",\"src\",\"Readable\",\"createStream\",\"inherits\",\"_transform\",\"isBuffer\",\"_chunkEncoding\",\"_pushBuffer\",\"keep\",\"_reencode\",\"setImmediate\",\"_flush\",\"chunkEncoding\",\"CharSetGroupProber\",\"_mActiveNum\",\"prober\",\"_mProbers\",\"active\",\"_mBestGuessProber\",\"st\",\"bestConf\",\"cf\",\"JapaneseContextAnalysis\",\"_mTotalRel\",\"_mRelSample\",\"_mNeedToSkipCharNum\",\"_mLastCharOrder\",\"rets\",\"jp2CharContext\",\"SJISContextAnalysis\",\"EUCJPContextAnalysis\",\"_logLevel\",\"Info\",\"_onDidChangeLogLevel\",\"dayjs\",\"advancedFormat\",\"repository_1\",\"extend\",\"GitTimelineItem\",\"TimelineItem\",\"previousRef\",\"contextValue\",\"super\",\"item\",\"shortRef\",\"shortenRef\",\"shortPreviousRef\",\"endsWith\",\"GitTimelineProvider\",\"_model\",\"_onDidChange\",\"label\",\"_disposable\",\"Disposable\",\"onDidOpenRepository\",\"onRepositoriesChanged\",\"registerTimelineProvider\",\"_token\",\"repo\",\"getRepository\",\"_repoDisposable\",\"_repoStatusDate\",\"_repo\",\"items\",\"_b\",\"_c\",\"onRepositoryChanged\",\"onRepositoryStatusChanged\",\"_g\",\"cursor\",\"before\",\"more\",\"paging\",\"cursors\",\"_d\",\"after\",\"_e\",\"dateFormatter\",\"date\",\"getTime\",\"ThemeIcon\",\"detail\",\"you\",\"_f\",\"working\",\"fireChanged\",\"semver\",\"moduleModule\",\"nativeModules\",\"originalRequire\",\"patchedModules\",\"originalModule\",\"modulePath\",\"_resolveFilename\",\"moduleVersion\",\"prereleaseTagIndex\",\"modifiedModule\",\"modulePatcher\",\"satisfies\",\"versionSpecifier\",\"AvailabilityData\",\"Base\",\"ContextTagKeys\",\"Data\",\"DataPoint\",\"DataPointType\",\"Envelope\",\"EventData\",\"ExceptionData\",\"ExceptionDetails\",\"MessageData\",\"MetricData\",\"PageViewData\",\"RemoteDependencyData\",\"RequestData\",\"SeverityLevel\",\"StackFrame\",\"__extends\",\"extendStatics\",\"setPrototypeOf\",\"__proto__\",\"__\",\"_super\",\"ver\",\"measurements\",\"AutoCollectPerformance\",\"_handle\",\"_lastCpus\",\"cpus\",\"_lastRequests\",\"totalRequestCount\",\"_totalRequestCount\",\"totalFailedRequestCount\",\"_totalFailedRequestCount\",\"time\",\"cpuUsage\",\"_lastAppCpuUsage\",\"_lastHrtime\",\"hrtime\",\"setInterval\",\"trackPerformance\",\"unref\",\"clearInterval\",\"countRequest\",\"_lastRequestExecutionTime\",\"_trackCpu\",\"_trackMemory\",\"_trackNetwork\",\"totalUser\",\"totalSys\",\"totalNice\",\"totalIdle\",\"totalIrq\",\"cpu\",\"lastCpu\",\"times\",\"model\",\"speed\",\"lastTimes\",\"sys\",\"nice\",\"idle\",\"irq\",\"appCpuPercent\",\"appCpuUsage\",\"totalApp\",\"system\",\"combinedTotal\",\"trackMetric\",\"freeMem\",\"freemem\",\"usedMem\",\"memoryUsage\",\"rss\",\"lastRequests\",\"requests\",\"intervalRequests\",\"elapsedMs\",\"elapsedSeconds\",\"requestsPerSec\",\"RequestParser\",\"startTime\",\"_setStatus\",\"endTime\",\"duration\",\"_isSuccess\",\"HttpRequestParser\",\"AutoCollectHttpRequests\",\"_isAutoCorrelating\",\"useAutoCorrelation\",\"isAutoCorrelating\",\"_generateCorrelationContext\",\"getOperationId\",\"getRequestId\",\"getOperationName\",\"getCorrelationContextHeader\",\"wrapOnRequestHandler\",\"onRequest\",\"requestParser_1\",\"correlationContext\",\"wrapServerEventHandler\",\"server\",\"originalAddListener\",\"addListener\",\"eventType\",\"eventHandler\",\"originalHttpServer\",\"createServer\",\"originalHttpsServer\",\"trackRequestSync\",\"addResponseCorrelationIdHeader\",\"endRequest\",\"_requestParser\",\"getOperationParentId\",\"headersSent\",\"ellapsedMilliseconds\",\"requestTelemetry\",\"getRequestTelemetry\",\"tagOverrides\",\"getRequestTags\",\"model_1\",\"commands_1\",\"contentProvider_1\",\"fileSystemProvider_1\",\"decorationProvider_1\",\"askpass_1\",\"vscode_extension_telemetry_1\",\"protocolHandler_1\",\"extension_1\",\"ipcServer_1\",\"timelineProvider_1\",\"deactivateTasks\",\"createModel\",\"telemetryReporter\",\"pathHint\",\"ipc\",\"createIPCServer\",\"getEnv\",\"askpass\",\"Askpass\",\"getDisabledEnv\",\"Model\",\"onRepository\",\"executeCommand\",\"repositories\",\"onDidCloseRepository\",\"pop\",\"CommandCenter\",\"GitContentProvider\",\"GitFileSystemProvider\",\"GitDecorations\",\"GitProtocolHandler\",\"neverShowAgain\",\"choice\",\"checkGitVersion\",\"isGitRepository\",\"deactivate\",\"task\",\"activate\",\"subscriptions\",\"createOutputChannel\",\"registerCommand\",\"show\",\"aiKey\",\"default\",\"onConfigChange\",\"onEnabled\",\"GitExtensionImpl\",\"workspaceFolders\",\"every\",\"download\",\"warnAboutMissingGit\",\"sync\",\"cmd\",\"opt\",\"getPathInfo\",\"pathEnv\",\"pathExt\",\"pathExtExe\",\"extExe\",\"found\",\"pathPart\",\"j\",\"ll\",\"cur\",\"isexe\",\"ex\",\"nothrow\",\"getNotFoundError\",\"isWindows\",\"OSTYPE\",\"COLON\",\"er\",\"colon\",\"PATH\",\"unshift\",\"PATHEXT\",\"F\",\"E\",\"ii\",\"core\",\"ignoreErrors\",\"TESTING_WINDOWS\",\"checkStat\",\"statSync\",\"isSymbolicLink\",\"isFile\",\"pathext\",\"checkPathExt\",\"uid\",\"gid\",\"myUid\",\"getuid\",\"myGid\",\"getgid\",\"u\",\"checkMode\",\"bomHandling\",\"encodings\",\"defaultCharUnicode\",\"defaultCharSingleByte\",\"encode\",\"encoder\",\"getEncoder\",\"trail\",\"skipDecodeWarning\",\"getDecoder\",\"enc\",\"getCodec\",\"toEncoding\",\"fromEncoding\",\"_codecDataCache\",\"_canonicalizeEncoding\",\"codecOptions\",\"codec\",\"codecDef\",\"encodingName\",\"bomAware\",\"addBOM\",\"PrependBOM\",\"stripBOM\",\"StripBOM\",\"nodeVerArr\",\"PrependBOMWrapper\",\"StripBOMWrapper\",\"pass\",\"InternalCodec\",\"InternalEncoderBase64\",\"InternalEncoderCesu8\",\"InternalDecoderCesu8\",\"utf8\",\"cesu8\",\"unicode11utf8\",\"ucs2\",\"utf16le\",\"binary\",\"base64\",\"hex\",\"_internal\",\"InternalEncoder\",\"InternalDecoder\",\"prevStr\",\"acc\",\"contBytes\",\"accBytes\",\"completeQuads\",\"bufIdx\",\"charCode\",\"curByte\",\"Utf16BECodec\",\"Utf16BEEncoder\",\"Utf16BEDecoder\",\"overflowByte\",\"Utf16Codec\",\"Utf16Encoder\",\"Utf16Decoder\",\"initialBytes\",\"initialBytesLen\",\"asciiCharsLE\",\"asciiCharsBE\",\"_len\",\"utf16be\",\"buf2\",\"utf16\",\"Utf7Codec\",\"utf7\",\"unicode11utf7\",\"Utf7Encoder\",\"Utf7Decoder\",\"nonDirectChars\",\"inBase64\",\"base64Accum\",\"base64Regex\",\"base64Chars\",\"plusChar\",\"minusChar\",\"andChar\",\"Utf7IMAPCodec\",\"Utf7IMAPEncoder\",\"base64AccumIdx\",\"Utf7IMAPDecoder\",\"lastI\",\"b64str\",\"canBeDecoded\",\"utf7imap\",\"uChar\",\"base64IMAPChars\",\"SBCSCodec\",\"chars\",\"asciiString\",\"decodeBuf\",\"encodeBuf\",\"SBCSEncoder\",\"SBCSDecoder\",\"_sbcs\",\"newBuf\",\"idx1\",\"idx2\",\"10029\",\"maccenteuro\",\"808\",\"ibm808\",\"cp808\",\"mik\",\"ascii8bit\",\"usascii\",\"ansix34\",\"ansix341968\",\"ansix341986\",\"csascii\",\"cp367\",\"ibm367\",\"isoir6\",\"iso646us\",\"iso646irv\",\"us\",\"latin1\",\"latin2\",\"latin3\",\"latin4\",\"latin5\",\"latin6\",\"latin7\",\"latin8\",\"latin9\",\"latin10\",\"csisolatin1\",\"csisolatin2\",\"csisolatin3\",\"csisolatin4\",\"csisolatincyrillic\",\"csisolatinarabic\",\"csisolatingreek\",\"csisolatinhebrew\",\"csisolatin5\",\"csisolatin6\",\"l1\",\"l2\",\"l3\",\"l4\",\"l5\",\"l6\",\"l7\",\"l8\",\"l9\",\"l10\",\"isoir14\",\"isoir57\",\"isoir100\",\"isoir101\",\"isoir109\",\"isoir110\",\"isoir144\",\"isoir127\",\"isoir126\",\"isoir138\",\"isoir148\",\"isoir157\",\"isoir166\",\"isoir179\",\"isoir199\",\"isoir203\",\"isoir226\",\"cp819\",\"ibm819\",\"cyrillic\",\"arabic\",\"arabic8\",\"ecma114\",\"asmo708\",\"greek\",\"greek8\",\"ecma118\",\"elot928\",\"hebrew\",\"hebrew8\",\"turkish\",\"turkish8\",\"thai\",\"thai8\",\"celtic\",\"celtic8\",\"isoceltic\",\"tis6200\",\"tis62025291\",\"tis62025330\",\"10000\",\"10006\",\"10007\",\"10079\",\"10081\",\"cspc8codepage437\",\"cspc775baltic\",\"cspc850multilingual\",\"cspcp852\",\"cspc862latinhebrew\",\"cpgr\",\"msee\",\"mscyrl\",\"msansi\",\"msgreek\",\"msturk\",\"mshebr\",\"msarab\",\"winbaltrim\",\"cp20866\",\"20866\",\"ibm878\",\"cskoi8r\",\"cp21866\",\"21866\",\"ibm1168\",\"strk10482002\",\"tcvn5712\",\"tcvn57121\",\"gb198880\",\"cn\",\"csiso14jisc6220ro\",\"jisc62201969ro\",\"jp\",\"cshproman8\",\"r8\",\"roman8\",\"xroman8\",\"ibm1051\",\"mac\",\"csmacintosh\",\"437\",\"737\",\"775\",\"850\",\"852\",\"855\",\"856\",\"857\",\"858\",\"860\",\"861\",\"862\",\"863\",\"864\",\"865\",\"866\",\"869\",\"874\",\"922\",\"1046\",\"1124\",\"1125\",\"1129\",\"1133\",\"1161\",\"1162\",\"1163\",\"1250\",\"1251\",\"1252\",\"1253\",\"1254\",\"1255\",\"1256\",\"1257\",\"1258\",\"28591\",\"28592\",\"28593\",\"28594\",\"28595\",\"28596\",\"28597\",\"28598\",\"28599\",\"28600\",\"28601\",\"28603\",\"28604\",\"28605\",\"28606\",\"windows874\",\"win874\",\"cp874\",\"windows1250\",\"win1250\",\"cp1250\",\"windows1251\",\"win1251\",\"cp1251\",\"windows1252\",\"win1252\",\"cp1252\",\"windows1253\",\"win1253\",\"cp1253\",\"windows1254\",\"win1254\",\"cp1254\",\"windows1255\",\"win1255\",\"cp1255\",\"windows1256\",\"win1256\",\"cp1256\",\"windows1257\",\"win1257\",\"cp1257\",\"windows1258\",\"win1258\",\"cp1258\",\"iso88591\",\"cp28591\",\"iso88592\",\"cp28592\",\"iso88593\",\"cp28593\",\"iso88594\",\"cp28594\",\"iso88595\",\"cp28595\",\"iso88596\",\"cp28596\",\"iso88597\",\"cp28597\",\"iso88598\",\"cp28598\",\"iso88599\",\"cp28599\",\"iso885910\",\"cp28600\",\"iso885911\",\"cp28601\",\"iso885913\",\"cp28603\",\"iso885914\",\"cp28604\",\"iso885915\",\"cp28605\",\"iso885916\",\"cp28606\",\"cp437\",\"ibm437\",\"csibm437\",\"cp737\",\"ibm737\",\"csibm737\",\"cp775\",\"ibm775\",\"csibm775\",\"cp850\",\"ibm850\",\"csibm850\",\"cp852\",\"ibm852\",\"csibm852\",\"cp855\",\"ibm855\",\"csibm855\",\"cp856\",\"ibm856\",\"csibm856\",\"cp857\",\"ibm857\",\"csibm857\",\"cp858\",\"ibm858\",\"csibm858\",\"cp860\",\"ibm860\",\"csibm860\",\"cp861\",\"ibm861\",\"csibm861\",\"cp862\",\"ibm862\",\"csibm862\",\"cp863\",\"ibm863\",\"csibm863\",\"cp864\",\"ibm864\",\"csibm864\",\"cp865\",\"ibm865\",\"csibm865\",\"cp866\",\"ibm866\",\"csibm866\",\"cp869\",\"ibm869\",\"csibm869\",\"cp922\",\"ibm922\",\"csibm922\",\"cp1046\",\"ibm1046\",\"csibm1046\",\"cp1124\",\"ibm1124\",\"csibm1124\",\"cp1125\",\"ibm1125\",\"csibm1125\",\"cp1129\",\"ibm1129\",\"csibm1129\",\"cp1133\",\"ibm1133\",\"csibm1133\",\"cp1161\",\"ibm1161\",\"csibm1161\",\"cp1162\",\"ibm1162\",\"csibm1162\",\"cp1163\",\"ibm1163\",\"csibm1163\",\"maccroatian\",\"maccyrillic\",\"macgreek\",\"maciceland\",\"macroman\",\"macromania\",\"macthai\",\"macturkish\",\"macukraine\",\"koi8r\",\"koi8u\",\"koi8ru\",\"koi8t\",\"armscii8\",\"rk1048\",\"tcvn\",\"georgianacademy\",\"georgianps\",\"pt154\",\"viscii\",\"iso646cn\",\"iso646jp\",\"hproman8\",\"macintosh\",\"ascii\",\"tis620\",\"_dbcs\",\"DBCSCodec\",\"UNASSIGNED\",\"GB18030_CODE\",\"NODE_START\",\"UNASSIGNED_NODE\",\"table\",\"mappingTable\",\"decodeTables\",\"decodeTableSeq\",\"_addDecodeChunk\",\"encodeTable\",\"encodeTableSeq\",\"skipEncodeChars\",\"encodeSkipVals\",\"to\",\"_fillEncodeTable\",\"encodeAdd\",\"_setEncodeChar\",\"defCharSB\",\"gb18030\",\"thirdByteNodeIdx\",\"thirdByteNode\",\"fourthByteNodeIdx\",\"fourthByteNode\",\"secondByteNodeIdx\",\"secondByteNode\",\"DBCSEncoder\",\"leadSurrogate\",\"seqObj\",\"DBCSDecoder\",\"nodeIdx\",\"prevBuf\",\"findIdx\",\"mid\",\"_getDecodeTrieNode\",\"addr\",\"curAddr\",\"writeTable\",\"part\",\"codeTrail\",\"len\",\"seq\",\"_getEncodeBucket\",\"uCode\",\"high\",\"dbcsCode\",\"bucket\",\"low\",\"_setEncodeSequence\",\"oldVal\",\"prefix\",\"mbCode\",\"nextChar\",\"resCode\",\"subtable\",\"idx\",\"uChars\",\"gbChars\",\"prevBufOffset\",\"seqStart\",\"curSeq\",\"ptr\",\"uCodeLead\",\"shiftjis\",\"¥\",\"‾\",\"csshiftjis\",\"mskanji\",\"sjis\",\"windows31j\",\"ms31j\",\"xsjis\",\"windows932\",\"ms932\",\"932\",\"cp932\",\"eucjp\",\"gb2312\",\"gb231280\",\"gb23121980\",\"csgb2312\",\"csiso58gb231280\",\"euccn\",\"windows936\",\"ms936\",\"936\",\"cp936\",\"gbk\",\"xgbk\",\"isoir58\",\"€\",\"chinese\",\"windows949\",\"ms949\",\"949\",\"cp949\",\"cseuckr\",\"csksc56011987\",\"euckr\",\"isoir149\",\"korean\",\"ksc56011987\",\"ksc56011989\",\"ksc5601\",\"windows950\",\"ms950\",\"950\",\"cp950\",\"big5\",\"big5hkscs\",\"cnbig5\",\"csbig5\",\"xxbig5\",\"IconvLiteEncoderStream\",\"conv\",\"decodeStrings\",\"IconvLiteDecoderStream\",\"encodeStream\",\"decodeStream\",\"supportsStreams\",\"_collect\",\"collect\",\"chunks\",\"supportsNodeEncodingsExtension\",\"extendNodeEncodings\",\"nodeNativeEncodings\",\"utf-8\",\"ucs-2\",\"utf-16le\",\"isNativeEncoding\",\"SlowBuffer\",\"SlowBufferToString\",\"SlowBufferWrite\",\"string\",\"offset\",\"isFinite\",\"swap\",\"remaining\",\"BufferIsEncoding\",\"isEncoding\",\"BufferByteLength\",\"byteLength\",\"BufferToString\",\"BufferWrite\",\"_offset\",\"_length\",\"_encoding\",\"ReadableSetEncoding\",\"undoExtendNodeEncodings\",\"toBytes\",\"xpiZipFilename\",\"oxmlContentTypes\",\"oxmlRels\",\"check\",\"mask\",\"nextZipHeaderIndex\",\"findIndex\",\"header2Pos\",\"subarray\",\"header3Pos\",\"sliced\",\"idPos\",\"docTypePos\",\"findDocType\",\"__webpack_exports__\",\"navigator\",\"userAgent\",\"_schemePattern\",\"_singleSlashStart\",\"_doubleSlashStart\",\"_throwOnMissingSchema\",\"setUriThrowOnMissingScheme\",\"old\",\"_empty\",\"_slash\",\"_regexp\",\"schemeOrData\",\"authority\",\"fragment\",\"_strict\",\"_schemeFix\",\"_referenceResolution\",\"_validateUri\",\"isUri\",\"thing\",\"_makeFsPath\",\"_URI\",\"decodeURIComponent\",\"skipEncoding\",\"_asFormatted\",\"revive\",\"_formatted\",\"external\",\"_fsPath\",\"_sep\",\"_pathSepMarker\",\"$mid\",\"encodeURIComponentFast\",\"uriComponent\",\"allowSlash\",\"nativeEncodePos\",\"pos\",\"encodeURIComponent\",\"escaped\",\"encodeURIComponentMinimal\",\"userinfo\",\"jschardet\",\"IGNORE_ENCODINGS\",\"JSCHARDET_TO_ICONV_ENCODINGS\",\"detectEncodingByBOM\",\"detected\",\"detect\",\"normalizedEncodingName\",\"UniversalDetector\",\"MBCSGroupProber\",\"SBCSGroupProber\",\"Latin1Prober\",\"EscCharSetProber\",\"minimumThreshold\",\"confidence\",\"_mStart\",\"_mGotData\",\"_mInputState\",\"_mBOM\",\"_mEscCharsetProber\",\"_mCharsetProbers\",\"_highBitDetector\",\"_escDetector\",\"proberConfidence\",\"maxProberConfidence\",\"maxProber\",\"Big5Prober\",\"UTF8Prober\",\"SJISProber\",\"EUCJPProber\",\"GB2312Prober\",\"EUCKRProber\",\"EUCTWProber\",\"CodingStateMachine\",\"Big5SMModel\",\"consts\",\"BIG5_st\",\"UTF8SMModel\",\"_mNumOfMBChar\",\"unlike\",\"UTF8_st\",\"SJISSMModel\",\"_mContextAnalyzer\",\"contxtCf\",\"distribCf\",\"SJIS_st\",\"EUCJPSMModel\",\"EUCJP_st\",\"GB2312SMModel\",\"GB2312_st\",\"EUCKRSMModel\",\"EUCKR_st\",\"EUCTWSMModel\",\"EUCTW_st\",\"SingleByteCharSetProber\",\"Win1255HebrewModel\",\"HebrewProber\",\"cyrillicModels\",\"greekModels\",\"TIS620ThaiModel\",\"hungarianModels\",\"bulgarianModels\",\"Win1251CyrillicModel\",\"Koi8rModel\",\"Latin5CyrillicModel\",\"MacCyrillicModel\",\"Ibm866Model\",\"Ibm855Model\",\"Latin7GreekModel\",\"Win1253GreekModel\",\"Latin5BulgarianModel\",\"Win1251BulgarianModel\",\"Latin2HungarianModel\",\"Win1250HungarianModel\",\"hebrewProber\",\"logicalHebrewProber\",\"visualHebrewProber\",\"setModelProbers\",\"reversed\",\"nameProber\",\"_mLastOrder\",\"_mSeqCounters\",\"_mTotalSeqs\",\"_mTotalChar\",\"_mFreqChar\",\"_mNameProber\",\"charsetName\",\"keepEnglishLetter\",\"charToOrderMap\",\"_mReversed\",\"precedenceMatrix\",\"NUMBER_OF_SEQ_CAT\",\"mTypicalPositiveRatio\",\"win1255_CharToOrderMap\",\"HebrewLangModel\",\"FINAL_KAF\",\"NORMAL_KAF\",\"FINAL_MEM\",\"NORMAL_MEM\",\"FINAL_NUN\",\"NORMAL_NUN\",\"FINAL_PE\",\"NORMAL_PE\",\"FINAL_TSADI\",\"_mFinalCharLogicalScore\",\"_mFinalCharVisualScore\",\"_mPrev\",\"_mBeforePrev\",\"logicalProber\",\"visualProber\",\"_mLogicalProber\",\"_mVisualProber\",\"isFinal\",\"isNonFinal\",\"finalsub\",\"modelsub\",\"elt\",\"ceil\",\"KOI8R_CharToOrderMap\",\"win1251_CharToOrderMap\",\"latin5_CharToOrderMap\",\"macCyrillic_CharToOrderMap\",\"IBM855_CharToOrderMap\",\"IBM866_CharToOrderMap\",\"RussianLangModel\",\"Latin7_CharToOrderMap\",\"win1253_CharToOrderMap\",\"GreekLangModel\",\"TIS620CharToOrderMap\",\"ThaiLangModel\",\"Latin2_HungarianCharToOrderMap\",\"win1250HungarianCharToOrderMap\",\"HungarianLangModel\",\"Latin5_BulgarianCharToOrderMap\",\"win1251BulgarianCharToOrderMap\",\"BulgarianLangModel\",\"Constants\",\"OTH\",\"Latin1_CharToClass\",\"Latin1ClassModel\",\"_mLastCharClass\",\"_mFreqCounter\",\"charClass\",\"freq\",\"total\",\"escsm\",\"codingSM\",\"_mActiveSM\",\"_mDetectedCharset\",\"HZSMModel\",\"ISO2022CNSMModel\",\"ISO2022JPSMModel\",\"ISO2022KRSMModel\",\"HZ_st\",\"ISO2022CN_st\",\"ISO2022JP_st\",\"ISO2022KR_st\",\"RepositoryPick\",\"_onDidOpenRepository\",\"_onDidCloseRepository\",\"openRepositories\",\"possibleGitRepositoryPaths\",\"onDidChangeWorkspaceFolders\",\"onDidChangeVisibleTextEditors\",\"fsWatcher\",\"onWorkspaceChange\",\"onGitRepositoryChange\",\"onPossibleGitRepositoryChange\",\"doInitialScan\",\"finally\",\"setState\",\"added\",\"removed\",\"visibleTextEditors\",\"scanWorkspaceFolders\",\"autoRepositoryDetection\",\"readdir\",\"openRepository\",\"possibleRepositoryPath\",\"eventuallyScanPossibleGitRepository\",\"eventuallyScanPossibleGitRepositories\",\"possibleRepositoryFolders\",\"getOpenRepository\",\"activeRepositoriesList\",\"editor\",\"activeRepositories\",\"f\",\"openRepositoriesToDispose\",\"editors\",\"rawRoot\",\"getRepositoryRoot\",\"shouldRepositoryBeIgnored\",\"getRepositoryDotGit\",\"open\",\"ignoredRepos\",\"ignoredRepo\",\"disappearListener\",\"onDidDisappearRepository\",\"changeListener\",\"originalResourceChangeListener\",\"shouldDetectSubmodules\",\"submodulesLimit\",\"checkForSubmodules\",\"statusListener\",\"picks\",\"activeTextEditor\",\"pick\",\"placeHolder\",\"showQuickPick\",\"liveRepository\",\"outer\",\"submoduleRoot\",\"submoduleUri\",\"_enabled\",\"onConfiguration\",\"onGoodRemoteOperation\",\"isRemoteOperation\",\"onFirstGoodRemoteOperation\",\"didInformUser\",\"DidInformUser\",\"no\",\"isCloseAffordance\",\"askLater\",\"ConfigurationTarget\",\"Global\",\"fetchDefault\",\"period\",\"whenDisabled\",\"CheckoutStatusBar\",\"rebasing\",\"SyncStatusBar\",\"StartState\",\"onModelChange\",\"onOperationsChange\",\"onEnablementChange\",\"isSyncRunning\",\"isRunning\",\"hasRemotes\",\"icon\",\"syncStatusBar\",\"checkoutStatusBar\",\"dotGitWatcher\",\"onDotGitFileChangeEmitter\",\"staging_1\",\"CheckoutItem\",\"shortCommit\",\"CheckoutTagItem\",\"CheckoutRemoteHeadItem\",\"branches\",\"checkoutTracking\",\"BranchDeleteItem\",\"MergeItem\",\"CreateBranchItem\",\"cc\",\"alwaysShow\",\"CreateBranchFromItem\",\"HEADItem\",\"AddRemoteItem\",\"Commands\",\"commandId\",\"categorizeResourceByResolution\",\"isBothAddedOrModified\",\"isAnyDeleted\",\"possibleUnresolved\",\"unresolvedBothModified\",\"resolved\",\"_s\",\"deletionConflicts\",\"unresolved\",\"createCheckoutItems\",\"checkoutType\",\"includeTags\",\"includeRemotes\",\"heads\",\"remoteHeads\",\"TagItem\",\"PushType\",\"createCommand\",\"registerDiffInformationCommand\",\"createItem\",\"Trace\",\"Critical\",\"Off\",\"_openResource\",\"openFile\",\"preview\",\"preserveFocus\",\"preserveSelection\",\"left\",\"right\",\"lstat\",\"getRepositoryForSubmodule\",\"getLeftResource\",\"getRightResource\",\"getTitle\",\"viewColumn\",\"ViewColumn\",\"Active\",\"selection\",\"uriString\",\"indexStatus\",\"showInputBox\",\"prompt\",\"ignoreFocusOut\",\"defaultCloneDirectory\",\"uris\",\"showOpenDialog\",\"canSelectFiles\",\"canSelectFolders\",\"canSelectMany\",\"defaultUri\",\"openLabel\",\"sendTelemetryEvent\",\"outcome\",\"clone\",\"openNewWindow\",\"choices\",\"addToWorkspace\",\"openFolder\",\"updateWorkspaceFolders\",\"skipFolderPrompt\",\"askToOpen\",\"homeUri\",\"w\",\"getSCMResource\",\"previousVisibleRanges\",\"visibleRanges\",\"revealRange\",\"modal\",\"runByRepository\",\"_stageDeletionConflict\",\"scmResources\",\"deletionConflict\",\"keepIt\",\"deleteIt\",\"changes\",\"textEditor\",\"_stageChanges\",\"modifiedDocument\",\"selectedLines\",\"toLineRanges\",\"selections\",\"selectedChanges\",\"intersectDiffWithRange\",\"modifiedUri\",\"originalDocument\",\"applyLineChanges\",\"_revertChanges\",\"modifiedRange\",\"getModifiedRange\",\"intersection\",\"selectionsBeforeRevert\",\"visibleRangesBeforeRevert\",\"Range\",\"Position\",\"diffs\",\"selectedDiffs\",\"invertedDiffs\",\"invertLineChange\",\"untrackedCount\",\"trackedResources\",\"untrackedResources\",\"_cleanTrackedChanges\",\"_cleanUntrackedChange\",\"_cleanUntrackedChanges\",\"untrackedMessage\",\"yesTracked\",\"yesAll\",\"getCommitMessage\",\"promptToSaveFilesBeforeCommit\",\"enableSmartCommit\",\"enableCommitSigning\",\"noStagedChanges\",\"noUnstagedChanges\",\"documents\",\"textDocuments\",\"isUntitled\",\"isDirty\",\"saveAndCommit\",\"always\",\"never\",\"smartCommitChanges\",\"_push\",\"pushType\",\"Push\",\"didCommit\",\"smartCommit\",\"_message\",\"commitWithAnyInput\",\"unstageAll\",\"createBranch\",\"createBranchFrom\",\"quickpick\",\"createQuickPick\",\"onDidAccept\",\"activeItems\",\"hide\",\"_branch\",\"defaultName\",\"initialValue\",\"branchWhitespaceChar\",\"branchValidationRegex\",\"sanitize\",\"rawBranchName\",\"promptForBranchName\",\"target\",\"currentHead\",\"currentBranchName\",\"showErrorMessage\",\"inputTagName\",\"inputMessage\",\"fetchPrune\",\"fetchAll\",\"remotePicks\",\"remotePick\",\"branchPicks\",\"branchPlaceHolder\",\"branchPick\",\"remoteCharCnt\",\"pullWithRebase\",\"pushOptions\",\"forcePush\",\"PushFollowTags\",\"newRemote\",\"pushTo\",\"pushFollowTags\",\"PushTo\",\"resultName\",\"isReadonly\",\"syncRebase\",\"resourceState\",\"getStashMessage\",\"_stash\",\"stash\",\"pickStash\",\"stashes\",\"details\",\"_source\",\"clipboard\",\"writeText\",\"repositoryPromise\",\"pickRepository\",\"catch\",\"openOutputChannelChoice\",\"allChoices\",\"resultFn\",\"isSingleResource\",\"tuple\",\"textDocument\",\"modifiedEndLineNumber\",\"modifiedStartLineNumber\",\"modified\",\"currentLine\",\"isInsertion\",\"originalEndLineNumber\",\"isDeletion\",\"endLine\",\"originalStartLineNumber\",\"endCharacter\",\"character\",\"getText\",\"fromLine\",\"fromCharacter\",\"lineRanges\",\"startLine\",\"last\",\"h\",\"z\",\"utcOffset\",\"abs\",\"year\",\"month\",\"M\",\"ms\",\"Q\",\"$\",\"weekdays\",\"months\",\"pl\",\"D\",\"$L\",\"utc\",\"$u\",\"$offset\",\"$d\",\"NaN\",\"UTC\",\"$y\",\"getFullYear\",\"$M\",\"getMonth\",\"$D\",\"getDate\",\"$W\",\"getDay\",\"$H\",\"getHours\",\"$m\",\"getMinutes\",\"$s\",\"getSeconds\",\"$ms\",\"getMilliseconds\",\"$utils\",\"isValid\",\"isSame\",\"startOf\",\"endOf\",\"isAfter\",\"isBefore\",\"$g\",\"day\",\"minute\",\"second\",\"millisecond\",\"unix\",\"valueOf\",\"toDate\",\"$locale\",\"weekStart\",\"$set\",\"daysInMonth\",\"round\",\"subtract\",\"meridiem\",\"YY\",\"YYYY\",\"MM\",\"MMM\",\"monthsShort\",\"MMMM\",\"DD\",\"dd\",\"weekdaysMin\",\"ddd\",\"weekdaysShort\",\"dddd\",\"H\",\"HH\",\"hh\",\"A\",\"mm\",\"ss\",\"SSS\",\"Z\",\"getTimezoneOffset\",\"toISOString\",\"toUTCString\",\"isDayjs\",\"en\",\"Ls\",\"ordinal\",\"weekYear\",\"week\",\"THREE_MINUTES\",\"FIVE_MINUTES\",\"changedRepositoryRoots\",\"registerTextDocumentContentProvider\",\"cleanup\",\"eventuallyFireChangeEvents\",\"fireChangeEvents\",\"cacheKey\",\"cacheValue\",\"row\",\"sanitizeRef\",\"_onDidChangeFile\",\"onDidChangeFile\",\"mtime\",\"registerFileSystemProvider\",\"isCaseSensitive\",\"registerResourceLabelFormatter\",\"formatting\",\"separator\",\"gitUri\",\"FileChangeType\",\"Changed\",\"values\",\"FileSystemError\",\"FileNotFound\",\"FileType\",\"File\",\"ctime\",\"TextEncoder\",\"GitIgnoreDecorationProvider\",\"onDidChangeDecorations\",\"onDidSaveTextDocument\",\"registerDecorationProvider\",\"queueItem\",\"checkIgnoreSoon\",\"ignoreSet\",\"GitDecorationProvider\",\"_onDidChangeDecorations\",\"newDecorations\",\"collectSubmoduleDecorationData\",\"collectDecorationData\",\"group\",\"decoration\",\"SubmoduleDecorationData\",\"modelDisposables\",\"providers\",\"provider\",\"registerHandler\",\"GIT_ASKPASS\",\"password\",\"ELECTRON_RUN_AS_NODE\",\"VSCODE_GIT_ASKPASS_NODE\",\"execPath\",\"VSCODE_GIT_ASKPASS_MAIN\",\"vscode\",\"appInsights\",\"TelemetryReporter\",\"extensionId\",\"extensionVersion\",\"userOptIn\",\"logFilePath\",\"logStream\",\"createWriteStream\",\"flags\",\"autoClose\",\"updateUserOptIn\",\"configListener\",\"TELEMETRY_CONFIG_ID\",\"TELEMETRY_CONFIG_ENABLED_ID\",\"createAppInsightsClient\",\"defaultClient\",\"appInsightsClient\",\"TelemetryClient\",\"setUseDiskRetryCaching\",\"setAutoCollectRequests\",\"setAutoCollectPerformance\",\"setAutoCollectExceptions\",\"setAutoCollectDependencies\",\"setAutoDependencyCorrelation\",\"setAutoCollectConsole\",\"commonProperties\",\"getCommonProperties\",\"userId\",\"machineId\",\"sessionId\",\"endpointUrl\",\"release\",\"eventName\",\"trackEvent\",\"flushEventsToLogger\",\"flushEventsToAI\",\"flush\",\"AutoCollectConsole\",\"AutoCollectExceptions\",\"Contracts\",\"_console\",\"_exceptions\",\"_performance\",\"_serverRequests\",\"_clientRequests\",\"_isConsole\",\"_isConsoleLog\",\"_isExceptions\",\"_isPerformance\",\"_isRequests\",\"_isDependencies\",\"_isDiskRetry\",\"_isCorrelating\",\"_diskRetryInterval\",\"_diskRetryMaxBytes\",\"_isStarted\",\"Configuration\",\"getCorrelationContext\",\"wrapWithCorrelationContext\",\"collectConsoleLog\",\"resendInterval\",\"maxBytesOnDisk\",\"setInternalLogging\",\"enableDebugLogging\",\"enableWarningLogging\",\"consolePub\",\"diagnostic_channel_1\",\"originalBunyan\",\"originalEmit\",\"_emit\",\"rec\",\"noemit\",\"debug\",\"SemVer\",\"NODE_DEBUG\",\"SEMVER_SPEC_VERSION\",\"MAX_SAFE_INTEGER\",\"re\",\"R\",\"NUMERICIDENTIFIER\",\"NUMERICIDENTIFIERLOOSE\",\"NONNUMERICIDENTIFIER\",\"MAINVERSION\",\"MAINVERSIONLOOSE\",\"PRERELEASEIDENTIFIER\",\"PRERELEASEIDENTIFIERLOOSE\",\"PRERELEASE\",\"PRERELEASELOOSE\",\"BUILDIDENTIFIER\",\"BUILD\",\"FULL\",\"FULLPLAIN\",\"LOOSEPLAIN\",\"LOOSE\",\"GTLT\",\"XRANGEIDENTIFIERLOOSE\",\"XRANGEIDENTIFIER\",\"XRANGEPLAIN\",\"XRANGEPLAINLOOSE\",\"XRANGE\",\"XRANGELOOSE\",\"COERCE\",\"LONETILDE\",\"TILDETRIM\",\"TILDE\",\"TILDELOOSE\",\"LONECARET\",\"CARETTRIM\",\"CARET\",\"CARETLOOSE\",\"COMPARATORLOOSE\",\"COMPARATOR\",\"COMPARATORTRIM\",\"HYPHENRANGE\",\"HYPHENRANGELOOSE\",\"STAR\",\"loose\",\"major\",\"minor\",\"prerelease\",\"num\",\"build\",\"valid\",\"compare\",\"other\",\"compareMain\",\"comparePre\",\"compareIdentifiers\",\"inc\",\"identifier\",\"version1\",\"version2\",\"eq\",\"v1\",\"v2\",\"numeric\",\"anum\",\"bnum\",\"gt\",\"lt\",\"neq\",\"gte\",\"lte\",\"cmp\",\"op\",\"Comparator\",\"comp\",\"ANY\",\"operator\",\"rcompareIdentifiers\",\"compareLoose\",\"rcompare\",\"list\",\"rsort\",\"parseRange\",\"isX\",\"hyphenReplace\",\"$0\",\"fM\",\"fm\",\"fp\",\"fpr\",\"fb\",\"tM\",\"tm\",\"tp\",\"tpr\",\"tb\",\"testSet\",\"allowed\",\"outside\",\"hilo\",\"gtfn\",\"ltefn\",\"ltfn\",\"ecomp\",\"comparator\",\"intersects\",\"rangeTmp\",\"sameDirectionIncreasing\",\"sameDirectionDecreasing\",\"sameSemVer\",\"differentDirectionsInclusive\",\"oppositeDirectionsLessThan\",\"oppositeDirectionsGreaterThan\",\"comps\",\"hr\",\"compRe\",\"pr\",\"replaceCaret\",\"replaceCarets\",\"replaceTilde\",\"replaceTildes\",\"gtlt\",\"xM\",\"xm\",\"xp\",\"anyX\",\"replaceXRange\",\"replaceXRanges\",\"replaceStars\",\"parseComparator\",\"thisComparators\",\"thisComparator\",\"rangeComparators\",\"rangeComparator\",\"toComparators\",\"maxSatisfying\",\"maxSV\",\"rangeObj\",\"minSatisfying\",\"minSV\",\"validRange\",\"ltr\",\"gtr\",\"parsed\",\"r1\",\"r2\",\"coerce\",\"stream_1\",\"originalConsole\",\"aiLoggingOutStream\",\"Writable\",\"aiLoggingErrStream\",\"aiLoggingConsole\",\"Console\",\"_loop_1\",\"originalMethod\",\"consoleMethods_1\",\"mongoCore2\",\"originalMongoCore\",\"originalConnect\",\"Server\",\"connect\",\"originalWrite\",\"pool\",\"cbidx\",\"originalLogout\",\"logout\",\"mongo2\",\"originalMongo\",\"instrument\",\"operationIdGenerator\",\"next\",\"eventMap\",\"requestId\",\"startedData\",\"succeeded\",\"originalMysql\",\"originalMysqlPath\",\"patchObjectFunction\",\"func\",\"cbWrapper\",\"originalFunc\",\"resultContainer\",\"patchClassMemberFunction\",\"classObject\",\"connectionClass\",\"hrDuration\",\"callbackArgs\",\"poolClass\",\"webpackEmptyContext\",\"postgresPool1\",\"originalPgPool\",\"postgres6\",\"originalPg\",\"originalPgPath\",\"originalClientQuery\",\"Client\",\"diagnosticOriginalFunc\",\"queryResult\",\"database\",\"connectionParameters\",\"patchCallback\",\"trackingCallback\",\"rowCount\",\"preparable\",\"plan\",\"originalRedis\",\"originalSend\",\"RedisClient\",\"internal_send_command\",\"commandObj\",\"cb_1\",\"pubsubBound\",\"address_1\",\"address\",\"startTime_1\",\"originalWinston\",\"curLevels\",\"originalLog\",\"Logger\",\"loggingFilter\",\"meta\",\"levelKind\",\"npm\",\"levels\",\"syslog\",\"filters\",\"zoneSpec\",\"_properties\",\"_parent\",\"_name\",\"_zoneDelegate\",\"ZoneDelegate\",\"assertZonePatched\",\"ZoneAwarePromise\",\"_currentZoneFrame\",\"zone\",\"_currentTask\",\"getZoneWith\",\"_callback\",\"intercept\",\"runGuarded\",\"applyThis\",\"applyArgs\",\"ZoneFrame\",\"invoke\",\"handleError\",\"runTask\",\"runCount\",\"previousTask\",\"isPeriodic\",\"cancelFn\",\"invokeTask\",\"scheduleMicroTask\",\"customSchedule\",\"scheduleTask\",\"ZoneTask\",\"scheduleMacroTask\",\"customCancel\",\"scheduleEventTask\",\"cancelTask\",\"__symbol__\",\"parentDelegate\",\"_taskCounts\",\"microTask\",\"macroTask\",\"eventTask\",\"_parentDelegate\",\"_forkZS\",\"onFork\",\"_forkDlgt\",\"_forkCurrZone\",\"_interceptZS\",\"onIntercept\",\"_interceptDlgt\",\"_interceptCurrZone\",\"_invokeZS\",\"onInvoke\",\"_invokeDlgt\",\"_invokeCurrZone\",\"_handleErrorZS\",\"onHandleError\",\"_handleErrorDlgt\",\"_handleErrorCurrZone\",\"_scheduleTaskZS\",\"onScheduleTask\",\"_scheduleTaskDlgt\",\"_scheduleTaskCurrZone\",\"_invokeTaskZS\",\"onInvokeTask\",\"_invokeTaskDlgt\",\"_invokeTaskCurrZone\",\"_cancelTaskZS\",\"onCancelTask\",\"_cancelTaskDlgt\",\"_cancelTaskCurrZone\",\"_hasTaskZS\",\"onHasTask\",\"_hasTaskDlgt\",\"_hasTaskCurrZone\",\"targetZone\",\"scheduleFn\",\"scheduleQueueDrain\",\"_microTaskQueue\",\"_updateTaskCount\",\"hasTask\",\"isEmpty\",\"counts\",\"_numberOfNestedTaskFrames\",\"drainMicroTaskQueue\",\"symbolSetTimeout\",\"symbolPromise\",\"symbolThen\",\"_isDrainingMicrotaskQueue\",\"_uncaughtPromiseErrors\",\"consoleError\",\"rejection\",\"uncaughtPromiseError\",\"isThenable\",\"forwardResolution\",\"forwardRejection\",\"symbolState\",\"symbolValue\",\"UNRESOLVED\",\"RESOLVED\",\"REJECTED\",\"REJECTED_NO_CATCH\",\"makeResolver\",\"resolvePromise\",\"clearRejectedNoCatch\",\"scheduleResolveOrReject\",\"error_1\",\"currentTask\",\"chainPromise\",\"onFulfilled\",\"onRejected\",\"delegate\",\"executor\",\"rej\",\"onResolve\",\"onReject\",\"values_1\",\"resolvedValues\",\"values_2\",\"FrameType\",\"NativePromise\",\"patchThen\",\"NativePromiseProtototype\",\"NativePromiseThen\",\"nativePromise\",\"fetchPromise\",\"zoneAwareFrame\",\"NativeError\",\"blackListedStackFrames\",\"ZoneAwareError\",\"createProperty\",\"error_2\",\"createMethodProperty\",\"errorMethod\",\"errorProperties\",\"proto\",\"pKeys\",\"createErrorProperties\",\"getErrorPropertiesForPrototype\",\"newProps\",\"cKeys\",\"cKey\",\"originalStack\",\"frames_1\",\"zoneFrame\",\"frame\",\"frameType\",\"blackList\",\"transition\",\"zoneAwareStack\",\"defineProperties\",\"getPrototypeOf\",\"stackTraceLimit\",\"targetObject\",\"constructorOpt\",\"captureStackTrace\",\"structuredStackTrace\",\"getFunctionName\",\"detectZone\",\"parentZoneDelegate\",\"currentZone\",\"parentZD\",\"frames_2\",\"runFrame\",\"runGuardedFrame\",\"runTaskFrame\",\"fnName\",\"zoneSymbol\",\"_global$1\",\"EVENT_TASKS\",\"findExistingRegisteredTask\",\"handler\",\"capture\",\"remove\",\"eventTasks\",\"useCapturing\",\"defaultListenerMetaCreator\",\"invokeAddFunc\",\"addFnSymbol\",\"invokeRemoveFunc\",\"removeFnSymbol\",\"makeZoneAwareAddListener\",\"addFnName\",\"removeFnName\",\"useCapturingParam\",\"allowDuplicates\",\"isPrepend\",\"metaCreator\",\"defaultUseCapturing\",\"scheduleEventListener\",\"attachRegisteredEvent\",\"cancelEventListener\",\"handleEvent\",\"validZoneHandler\",\"makeZoneAwareRemoveListener\",\"symbol\",\"patchMethod\",\"patchFn\",\"delegateName\",\"Function\",\"createNamedFn\",\"callAndReturnFirstParam\",\"EE_ADD_LISTENER\",\"EE_PREPEND_LISTENER\",\"EE_REMOVE_LISTENER\",\"EE_REMOVE_ALL_LISTENER\",\"EE_LISTENERS\",\"EE_ON\",\"zoneAwareAddListener$1\",\"zoneAwarePrependListener\",\"zoneAwareRemoveListener$1\",\"zoneAwareRemoveAllListeners\",\"findAllExistingRegisteredTasks\",\"makeZoneAwareRemoveAllListeners\",\"zoneAwareListeners\",\"makeZoneAwareListeners\",\"patchEventEmitterMethods\",\"patchTimer\",\"setName\",\"cancelName\",\"nameSuffix\",\"setNative\",\"clearNative\",\"tasksByHandleId\",\"clearTask\",\"handle\",\"funcName\",\"callbackIndex\",\"patchMacroTask\",\"crypto\",\"httpClient\",\"_global\",\"patchNextTick\",\"nativeRandomBytes_1\",\"randomBytes\",\"nativePbkdf2_1\",\"pbkdf2\",\"ClientRequest\",\"ClientRequest_1\",\"_methodNames\",\"Contracts_1\",\"clients\",\"subscriber\",\"trackTrace\",\"severity\",\"Generated_1\",\"RemoteDependencyDataConstants\",\"TYPE_HTTP\",\"TYPE_AI\",\"domainSupportsProperties\",\"domain\",\"applicationVersion\",\"deviceId\",\"deviceLocale\",\"deviceModel\",\"deviceOEMName\",\"deviceOSVersion\",\"deviceType\",\"locationIp\",\"operationParentId\",\"operationSyntheticSource\",\"operationCorrelationVector\",\"sessionIsFirst\",\"userAccountId\",\"userAuthUserId\",\"cloudRole\",\"cloudRoleInstance\",\"internalSdkVersion\",\"internalAgentVersion\",\"internalNodeName\",\"kind\",\"Measurement\",\"sampleRate\",\"exceptions\",\"hasFullStack\",\"parsedStack\",\"metrics\",\"success\",\"TelemetryType\",\"telemetryTypeToBaseType\",\"Event\",\"Exception\",\"Metric\",\"Request\",\"Dependency\",\"baseTypeToTelemetryType\",\"baseType\",\"bunyanToAILevelMap\",\"10\",\"Verbose\",\"20\",\"30\",\"40\",\"50\",\"60\",\"AIlevel\",\"winstonToAILevelMap\",\"og\",\"emerg\",\"alert\",\"crit\",\"warning\",\"notice\",\"verbose\",\"silly\",\"unknown\",\"_exceptionListenerHandle\",\"reThrow\",\"trackException\",\"exception\",\"isAppCrashing\",\"_rejectionListenerHandle\",\"UNCAUGHT_EXCEPTION_HANDLER_NAME\",\"UNHANDLED_REJECTION_HANDLER_NAME\",\"_getUrlFromRequestOptions\",\"baseTelemetry\",\"dependencyId\",\"urlObject\",\"search\",\"dependencyName\",\"remoteDependencyType\",\"remoteDependencyTarget\",\"resultCode\",\"dependencyTypeName\",\"originalOptions_1\",\"parsedQuery\",\"dbName\",\"databaseName\",\"commandName\",\"queryObj\",\"sqlString\",\"sql\",\"connectionConfig\",\"_connection\",\"socketPath\",\"q\",\"conn\",\"_getAbsoluteUrl\",\"socketRemoteAddress\",\"socket\",\"remoteAddress\",\"parseHeaders\",\"connection\",\"connectionRemoteAddress\",\"legacySocketRemoteAddress\",\"sourceCorrelationId\",\"newTags\",\"_getIp\",\"_getId\",\"encrypted\",\"pathName\",\"ipMatch\",\"results\",\"ip\",\"rawHeaders\",\"parseId\",\"rootId\",\"cookieValue\",\"ServerRequestTracking\",\"ClientRequestTracking\",\"NodeClient\",\"trackNodeHttpRequestSync\",\"trackNodeHttpRequest\",\"trackNodeHttpDependency\",\"Config\",\"Context\",\"Channel\",\"TelemetryProcessors\",\"Sender\",\"EnvelopeFactory\",\"iKey\",\"_telemetryProcessors\",\"sender\",\"disableAppInsights\",\"maxBatchSize\",\"maxBatchIntervalMs\",\"triggerSend\",\"telemetryType\",\"envelope\",\"createEnvelope\",\"accepted\",\"runTelemetryProcessors\",\"samplingTelemetryProcessor\",\"send\",\"addTelemetryProcessor\",\"telemetryProcessor\",\"clearTelemetryProcessors\",\"telemetryProcessorsCount\",\"processor\",\"endpointBase\",\"_getInstrumentationKey\",\"samplingPercentage\",\"setCorrelationId\",\"ENV_profileQueryEndpoint\",\"ENV_http_proxy\",\"ENV_https_proxy\",\"_profileQueryEndpoint\",\"endpoint\",\"ENV_iKey\",\"ENV_azurePrefix\",\"legacy_ENV_iKey\",\"packageJsonPath\",\"_loadApplicationContext\",\"_loadDeviceContext\",\"_loadInternalContext\",\"appVersion\",\"packageJson\",\"DefaultRoleName\",\"arch\",\"sdkVersion\",\"isDisabled\",\"getBatchSize\",\"getBatchIntervalMs\",\"_buffer\",\"_lastSend\",\"_isDisabled\",\"_getBatchSize\",\"_getBatchIntervalMs\",\"_sender\",\"setDiskRetryMode\",\"payload\",\"_stringify\",\"_timeoutHandle\",\"isNodeCrashing\",\"bufferIsEmpty\",\"batch\",\"saveOnCrash\",\"getSamplingHashCode\",\"zlib\",\"child_process\",\"onSuccess\",\"_config\",\"_onSuccess\",\"_onError\",\"_enableDiskRetryMode\",\"_resendInterval\",\"WAIT_BETWEEN_RESEND\",\"_maxBytesOnDisk\",\"MAX_BYTES_ON_DISK\",\"_numConsecutiveFailures\",\"OS_PROVIDES_FILE_PROTECTION\",\"USE_ICACLS\",\"ICACLS_PATH\",\"withCredentials\",\"Content-Type\",\"gzip\",\"dataToSend\",\"responseString\",\"_sendFirstFileOnDisk\",\"_storeToDisk\",\"MAX_CONNECTION_FAILURES_BEFORE_WARN\",\"_onErrorHelper\",\"errorMessage\",\"_storeToDiskSync\",\"_runICACLS\",\"aclProc\",\"windowsHide\",\"signal\",\"_runICACLSSync\",\"spawnSync\",\"_getACLIdentity\",\"ACL_IDENTITY\",\"psProc\",\"POWERSHELL_PATH\",\"_getACLIdentitySync\",\"_getACLArguments\",\"directory\",\"identity\",\"_applyACLRules\",\"ACLED_DIRECTORIES\",\"_applyACLRulesSync\",\"_confirmDirExists\",\"stats\",\"_getShallowDirectorySize\",\"totalSize\",\"fileStats\",\"_getShallowDirectorySizeSync\",\"readdirSync\",\"tmpdir\",\"TEMPDIR_PREFIX\",\"fileFullPath\",\"mkdirSync\",\"dirSize\",\"tempDir\",\"firstFile\",\"systemdrive\",\"createTraceData\",\"createDependencyData\",\"createEventData\",\"createExceptionData\",\"createRequestData\",\"createMetricData\",\"baseData\",\"getTags\",\"trace\",\"severityLevel\",\"remoteDependency\",\"exceptionDetails\",\"typeName\",\"parseStack\",\"requestData\",\"responseCode\",\"metric\",\"Aggregation\",\"stdDev\",\"frames\",\"totalSizeInBytes\",\"_StackFrame\",\"parsedFrame\",\"sizeInBytes\",\"acceptedLeft\",\"acceptedRight\",\"howMany\",\"assembly\",\"matches\",\"baseSize\",\"querystring\",\"registerUriHandler\",\"api1_1\",\"deprecated\",\"_onDidChangeEnablement\",\"onDidChangeEnablement\",\"ApiRepository\",\"ApiImpl\",\"ApiInputBox\",\"_inputBox\",\"ApiChange\",\"ApiRepositoryState\",\"_repository\",\"mergeChanges\",\"indexChanges\",\"workingTreeChanges\",\"ApiRepositoryUIState\",\"onDidChangeSelection\",\"selected\",\"rootUri\",\"ui\",\"getConfig\",\"setConfig\",\"getGlobalConfig\",\"ApiGit\",\"ipcHandlePath\",\"nonce\",\"getIPCHandlePath\",\"listen\",\"IPCServer\",\"_ipcHandlePath\",\"handlers\",\"writeHead\",\"VSCODE_GIT_IPC_HANDLE\",\"unlinkSync\"],\"mappings\":\"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A,oIAEA+L,OAAA,aACAC,MAAA,aACAC,aACA7lC,KAAA,QACA45B,MAAA,oIAEAkM,QAAA,cACAC,OAAA,cACAC,aACAhmC,KAAA,QACA45B,MAAA,oIAEAqM,QAAA,cACAC,OAAA,cACAC,aACAnmC,KAAA,QACA45B,MAAA,oIAEAwM,QAAA,cACAC,OAAA,cACAC,aACAtmC,KAAA,QACA45B,MAAA,oIAEA2M,QAAA,cACAC,OAAA,cACAC,aACAzmC,KAAA,QACA45B,MAAA,oIAEA8M,QAAA,cACAC,OAAA,cACAC,aACA5mC,KAAA,QACA45B,MAAA,oIAEAiN,QAAA,cACAC,OAAA,cACAC,aACA/mC,KAAA,QACA45B,MAAA,oIAEAoN,QAAA,cACAC,OAAA,cACAC,aACAlnC,KAAA,QACA45B,MAAA,oIAEAuN,QAAA,cACAC,OAAA,cACAC,aACArnC,KAAA,QACA45B,MAAA,oIAEA0N,QAAA,cACAC,OAAA,cACAC,UACAxnC,KAAA,QACA45B,MAAA,oIAEA6N,QAAA,WACAC,UACA1nC,KAAA,QACA45B,MAAA,oIAEA+N,QAAA,WACAC,UACA5nC,KAAA,QACA45B,MAAA,oIAEAiO,QAAA,WACAC,UACA9nC,KAAA,QACA45B,MAAA,oIAEAmO,QAAA,WACAC,UACAhoC,KAAA,QACA45B,MAAA,oIAEAqO,QAAA,WACAC,UACAloC,KAAA,QACA45B,MAAA,oIAEAuO,QAAA,WACAC,UACApoC,KAAA,QACA45B,MAAA,oIAEAyO,QAAA,WACAC,UACAtoC,KAAA,QACA45B,MAAA,oIAEA2O,QAAA,WACAC,UACAxoC,KAAA,QACA45B,MAAA,oIAEA6O,QAAA,WACAC,WACA1oC,KAAA,QACA45B,MAAA,oIAEA+O,QAAA,YACAC,WACA5oC,KAAA,QACA45B,MAAA,oIAEAiP,QAAA,YACAC,WACA9oC,KAAA,QACA45B,MAAA,oIAEAmP,QAAA,YACAC,WACAhpC,KAAA,QACA45B,MAAA,oIAEAqP,QAAA,YACAC,WACAlpC,KAAA,QACA45B,MAAA,oIAEAuP,QAAA,YACAC,WACAppC,KAAA,QACA45B,MAAA,oIAEAyP,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,EAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAA,EAAA,EAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAA,EAAA,EAAA,EAAA,EAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAA,EAAA,EAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAA,GAAA,GAAA,GAAA,GAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MAAA,GAAAoqE,EAAApqE,MAAAoqE,EAAApqE,MACAoqE,EAAApqE,MAAAoqE,EAAApq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EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 54);\\n\",\"module.exports = require(\\\"path\\\");\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nmodule.exports = {\\n    detecting   : 0,\\n    foundIt     : 1,\\n    notMe       : 2,\\n\\n    start       : 0,\\n    error       : 1,\\n    itsMe       : 2,\\n\\n    SHORTCUT_THRESHOLD  : 0.95\\n};\\n\",\"module.exports = require(\\\"fs\\\");\",\"module.exports = require(\\\"vscode\\\");\",\"\\\"use strict\\\";\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar patchRequire_1 = require(\\\"./patchRequire\\\");\\r\\nvar patchRequire_2 = require(\\\"./patchRequire\\\");\\r\\nexports.makePatchingRequire = patchRequire_2.makePatchingRequire;\\r\\nvar trueFilter = function (publishing) { return true; };\\r\\nvar ContextPreservingEventEmitter = (function () {\\r\\n    function ContextPreservingEventEmitter() {\\r\\n        this.version = require(\\\"./../../package.json\\\").version; // Allow for future versions to replace things?\\r\\n        this.subscribers = {};\\r\\n        this.contextPreservationFunction = function (cb) { return cb; };\\r\\n        this.knownPatches = {};\\r\\n        this.currentlyPublishing = false;\\r\\n    }\\r\\n    ContextPreservingEventEmitter.prototype.shouldPublish = function (name) {\\r\\n        var listeners = this.subscribers[name];\\r\\n        if (listeners) {\\r\\n            return listeners.some(function (_a) {\\r\\n                var filter = _a.filter;\\r\\n                return !filter || filter(false);\\r\\n            });\\r\\n        }\\r\\n        return false;\\r\\n    };\\r\\n    ContextPreservingEventEmitter.prototype.publish = function (name, event) {\\r\\n        if (this.currentlyPublishing) {\\r\\n            return; // Avoid reentrancy\\r\\n        }\\r\\n        var listeners = this.subscribers[name];\\r\\n        // Note: Listeners called synchronously to preserve context\\r\\n        if (listeners) {\\r\\n            var standardEvent_1 = {\\r\\n                timestamp: Date.now(),\\r\\n                data: event,\\r\\n            };\\r\\n            this.currentlyPublishing = true;\\r\\n            listeners.forEach(function (_a) {\\r\\n                var listener = _a.listener, filter = _a.filter;\\r\\n                try {\\r\\n                    if (filter && filter(true)) {\\r\\n                        listener(standardEvent_1);\\r\\n                    }\\r\\n                }\\r\\n                catch (e) {\\r\\n                    // Subscriber threw an error\\r\\n                }\\r\\n            });\\r\\n            this.currentlyPublishing = false;\\r\\n        }\\r\\n    };\\r\\n    ContextPreservingEventEmitter.prototype.subscribe = function (name, listener, filter) {\\r\\n        if (filter === void 0) { filter = trueFilter; }\\r\\n        if (!this.subscribers[name]) {\\r\\n            this.subscribers[name] = [];\\r\\n        }\\r\\n        this.subscribers[name].push({ listener: listener, filter: filter });\\r\\n    };\\r\\n    ContextPreservingEventEmitter.prototype.unsubscribe = function (name, listener, filter) {\\r\\n        if (filter === void 0) { filter = trueFilter; }\\r\\n        var listeners = this.subscribers[name];\\r\\n        if (listeners) {\\r\\n            for (var index = 0; index < listeners.length; ++index) {\\r\\n                if (listeners[index].listener === listener && listeners[index].filter === filter) {\\r\\n                    listeners.splice(index, 1);\\r\\n                    return true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    };\\r\\n    // Used for tests\\r\\n    ContextPreservingEventEmitter.prototype.reset = function () {\\r\\n        var _this = this;\\r\\n        this.subscribers = {};\\r\\n        this.contextPreservationFunction = function (cb) { return cb; };\\r\\n        // Modify the knownPatches object rather than replace, since a reference will be used in the require patcher\\r\\n        Object.getOwnPropertyNames(this.knownPatches).forEach(function (prop) { return delete _this.knownPatches[prop]; });\\r\\n    };\\r\\n    ContextPreservingEventEmitter.prototype.bindToContext = function (cb) {\\r\\n        return this.contextPreservationFunction(cb);\\r\\n    };\\r\\n    ContextPreservingEventEmitter.prototype.addContextPreservation = function (preserver) {\\r\\n        var previousPreservationStack = this.contextPreservationFunction;\\r\\n        this.contextPreservationFunction = (function (cb) { return preserver(previousPreservationStack(cb)); });\\r\\n    };\\r\\n    ContextPreservingEventEmitter.prototype.registerMonkeyPatch = function (packageName, patcher) {\\r\\n        if (!this.knownPatches[packageName]) {\\r\\n            this.knownPatches[packageName] = [];\\r\\n        }\\r\\n        this.knownPatches[packageName].push(patcher);\\r\\n    };\\r\\n    ContextPreservingEventEmitter.prototype.getPatchesObject = function () {\\r\\n        return this.knownPatches;\\r\\n    };\\r\\n    return ContextPreservingEventEmitter;\\r\\n}());\\r\\nif (!global.diagnosticsSource) {\\r\\n    global.diagnosticsSource = new ContextPreservingEventEmitter();\\r\\n    // TODO: should this only patch require after at least one monkey patch is registered?\\r\\n    /* tslint:disable-next-line:no-var-requires */\\r\\n    var moduleModule = require(\\\"module\\\");\\r\\n    // Note: We pass in the object now before any patches are registered, but the object is passed by reference\\r\\n    // so any updates made to the object will be visible in the patcher.\\r\\n    moduleModule.prototype.require = patchRequire_1.makePatchingRequire(global.diagnosticsSource.getPatchesObject());\\r\\n}\\r\\nexports.channel = global.diagnosticsSource;\\r\\n//# sourceMappingURL=channel.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { Event, Disposable } from 'vscode';\\nimport { dirname, sep } from 'path';\\nimport { Readable } from 'stream';\\nimport { promises as fs, createReadStream } from 'fs';\\nimport * as byline from 'byline';\\n\\nexport function log(...args: any[]): void {\\n\\tconsole.log.apply(console, ['git:', ...args]);\\n}\\n\\nexport interface IDisposable {\\n\\tdispose(): void;\\n}\\n\\nexport function dispose<T extends IDisposable>(disposables: T[]): T[] {\\n\\tdisposables.forEach(d => d.dispose());\\n\\treturn [];\\n}\\n\\nexport function toDisposable(dispose: () => void): IDisposable {\\n\\treturn { dispose };\\n}\\n\\nexport function combinedDisposable(disposables: IDisposable[]): IDisposable {\\n\\treturn toDisposable(() => dispose(disposables));\\n}\\n\\nexport const EmptyDisposable = toDisposable(() => null);\\n\\nexport function fireEvent<T>(event: Event<T>): Event<T> {\\n\\treturn (listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]) => event(_ => (listener as any).call(thisArgs), null, disposables);\\n}\\n\\nexport function mapEvent<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\\n\\treturn (listener: (e: O) => any, thisArgs?: any, disposables?: Disposable[]) => event(i => listener.call(thisArgs, map(i)), null, disposables);\\n}\\n\\nexport function filterEvent<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\\n\\treturn (listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables);\\n}\\n\\nexport function latchEvent<T>(event: Event<T>): Event<T> {\\n\\tlet firstCall = true;\\n\\tlet cache: T;\\n\\n\\treturn filterEvent(event, value => {\\n\\t\\tlet shouldEmit = firstCall || value !== cache;\\n\\t\\tfirstCall = false;\\n\\t\\tcache = value;\\n\\t\\treturn shouldEmit;\\n\\t});\\n}\\n\\nexport function anyEvent<T>(...events: Event<T>[]): Event<T> {\\n\\treturn (listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]) => {\\n\\t\\tconst result = combinedDisposable(events.map(event => event(i => listener.call(thisArgs, i))));\\n\\n\\t\\tif (disposables) {\\n\\t\\t\\tdisposables.push(result);\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t};\\n}\\n\\nexport function done<T>(promise: Promise<T>): Promise<void> {\\n\\treturn promise.then<void>(() => undefined);\\n}\\n\\nexport function onceEvent<T>(event: Event<T>): Event<T> {\\n\\treturn (listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]) => {\\n\\t\\tconst result = event(e => {\\n\\t\\t\\tresult.dispose();\\n\\t\\t\\treturn listener.call(thisArgs, e);\\n\\t\\t}, null, disposables);\\n\\n\\t\\treturn result;\\n\\t};\\n}\\n\\nexport function debounceEvent<T>(event: Event<T>, delay: number): Event<T> {\\n\\treturn (listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]) => {\\n\\t\\tlet timer: NodeJS.Timer;\\n\\t\\treturn event(e => {\\n\\t\\t\\tclearTimeout(timer);\\n\\t\\t\\ttimer = setTimeout(() => listener.call(thisArgs, e), delay);\\n\\t\\t}, null, disposables);\\n\\t};\\n}\\n\\nexport function eventToPromise<T>(event: Event<T>): Promise<T> {\\n\\treturn new Promise<T>(c => onceEvent(event)(c));\\n}\\n\\nexport function once(fn: (...args: any[]) => any): (...args: any[]) => any {\\n\\tlet didRun = false;\\n\\n\\treturn (...args) => {\\n\\t\\tif (didRun) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\treturn fn(...args);\\n\\t};\\n}\\n\\nexport function assign<T>(destination: T, ...sources: any[]): T {\\n\\tfor (const source of sources) {\\n\\t\\tObject.keys(source).forEach(key => (destination as any)[key] = source[key]);\\n\\t}\\n\\n\\treturn destination;\\n}\\n\\nexport function uniqBy<T>(arr: T[], fn: (el: T) => string): T[] {\\n\\tconst seen = Object.create(null);\\n\\n\\treturn arr.filter(el => {\\n\\t\\tconst key = fn(el);\\n\\n\\t\\tif (seen[key]) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tseen[key] = true;\\n\\t\\treturn true;\\n\\t});\\n}\\n\\nexport function groupBy<T>(arr: T[], fn: (el: T) => string): { [key: string]: T[] } {\\n\\treturn arr.reduce((result, el) => {\\n\\t\\tconst key = fn(el);\\n\\t\\tresult[key] = [...(result[key] || []), el];\\n\\t\\treturn result;\\n\\t}, Object.create(null));\\n}\\n\\n\\nexport async function mkdirp(path: string, mode?: number): Promise<boolean> {\\n\\tconst mkdir = async () => {\\n\\t\\ttry {\\n\\t\\t\\tawait fs.mkdir(path, mode);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (err.code === 'EEXIST') {\\n\\t\\t\\t\\tconst stat = await fs.stat(path);\\n\\n\\t\\t\\t\\tif (stat.isDirectory()) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tthrow new Error(`'${path}' exists and is not a directory.`);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t};\\n\\n\\t// is root?\\n\\tif (path === dirname(path)) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\ttry {\\n\\t\\tawait mkdir();\\n\\t} catch (err) {\\n\\t\\tif (err.code !== 'ENOENT') {\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\n\\t\\tawait mkdirp(dirname(path), mode);\\n\\t\\tawait mkdir();\\n\\t}\\n\\n\\treturn true;\\n}\\n\\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\\n\\tconst seen: { [key: string]: boolean; } = Object.create(null);\\n\\n\\treturn element => {\\n\\t\\tconst key = keyFn(element);\\n\\n\\t\\tif (seen[key]) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tseen[key] = true;\\n\\t\\treturn true;\\n\\t};\\n}\\n\\nexport function firstIndex<T>(array: T[], fn: (t: T) => boolean): number {\\n\\tfor (let i = 0; i < array.length; i++) {\\n\\t\\tif (fn(array[i])) {\\n\\t\\t\\treturn i;\\n\\t\\t}\\n\\t}\\n\\n\\treturn -1;\\n}\\n\\nexport function find<T>(array: T[], fn: (t: T) => boolean): T | undefined {\\n\\tlet result: T | undefined = undefined;\\n\\n\\tarray.some(e => {\\n\\t\\tif (fn(e)) {\\n\\t\\t\\tresult = e;\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t});\\n\\n\\treturn result;\\n}\\n\\nexport async function grep(filename: string, pattern: RegExp): Promise<boolean> {\\n\\treturn new Promise<boolean>((c, e) => {\\n\\t\\tconst fileStream = createReadStream(filename, { encoding: 'utf8' });\\n\\t\\tconst stream = byline(fileStream);\\n\\t\\tstream.on('data', (line: string) => {\\n\\t\\t\\tif (pattern.test(line)) {\\n\\t\\t\\t\\tfileStream.close();\\n\\t\\t\\t\\tc(true);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tstream.on('error', e);\\n\\t\\tstream.on('end', () => c(false));\\n\\t});\\n}\\n\\nexport function readBytes(stream: Readable, bytes: number): Promise<Buffer> {\\n\\treturn new Promise<Buffer>((complete, error) => {\\n\\t\\tlet done = false;\\n\\t\\tlet buffer = Buffer.allocUnsafe(bytes);\\n\\t\\tlet bytesRead = 0;\\n\\n\\t\\tstream.on('data', (data: Buffer) => {\\n\\t\\t\\tlet bytesToRead = Math.min(bytes - bytesRead, data.length);\\n\\t\\t\\tdata.copy(buffer, bytesRead, 0, bytesToRead);\\n\\t\\t\\tbytesRead += bytesToRead;\\n\\n\\t\\t\\tif (bytesRead === bytes) {\\n\\t\\t\\t\\t(stream as any).destroy(); // Will trigger the close event eventually\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tstream.on('error', (e: Error) => {\\n\\t\\t\\tif (!done) {\\n\\t\\t\\t\\tdone = true;\\n\\t\\t\\t\\terror(e);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tstream.on('close', () => {\\n\\t\\t\\tif (!done) {\\n\\t\\t\\t\\tdone = true;\\n\\t\\t\\t\\tcomplete(buffer.slice(0, bytesRead));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t});\\n}\\n\\nexport const enum Encoding {\\n\\tUTF8 = 'utf8',\\n\\tUTF16be = 'utf16be',\\n\\tUTF16le = 'utf16le'\\n}\\n\\nexport function detectUnicodeEncoding(buffer: Buffer): Encoding | null {\\n\\tif (buffer.length < 2) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tconst b0 = buffer.readUInt8(0);\\n\\tconst b1 = buffer.readUInt8(1);\\n\\n\\tif (b0 === 0xFE && b1 === 0xFF) {\\n\\t\\treturn Encoding.UTF16be;\\n\\t}\\n\\n\\tif (b0 === 0xFF && b1 === 0xFE) {\\n\\t\\treturn Encoding.UTF16le;\\n\\t}\\n\\n\\tif (buffer.length < 3) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tconst b2 = buffer.readUInt8(2);\\n\\n\\tif (b0 === 0xEF && b1 === 0xBB && b2 === 0xBF) {\\n\\t\\treturn Encoding.UTF8;\\n\\t}\\n\\n\\treturn null;\\n}\\n\\nfunction isWindowsPath(path: string): boolean {\\n\\treturn /^[a-zA-Z]:\\\\\\\\/.test(path);\\n}\\n\\nexport function isDescendant(parent: string, descendant: string): boolean {\\n\\tif (parent === descendant) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tif (parent.charAt(parent.length - 1) !== sep) {\\n\\t\\tparent += sep;\\n\\t}\\n\\n\\t// Windows is case insensitive\\n\\tif (isWindowsPath(parent)) {\\n\\t\\tparent = parent.toLowerCase();\\n\\t\\tdescendant = descendant.toLowerCase();\\n\\t}\\n\\n\\treturn descendant.startsWith(parent);\\n}\\n\\nexport function pathEquals(a: string, b: string): boolean {\\n\\t// Windows is case insensitive\\n\\tif (isWindowsPath(a)) {\\n\\t\\ta = a.toLowerCase();\\n\\t\\tb = b.toLowerCase();\\n\\t}\\n\\n\\treturn a === b;\\n}\\n\\nexport function* splitInChunks(array: string[], maxChunkLength: number): IterableIterator<string[]> {\\n\\tlet current: string[] = [];\\n\\tlet length = 0;\\n\\n\\tfor (const value of array) {\\n\\t\\tlet newLength = length + value.length;\\n\\n\\t\\tif (newLength > maxChunkLength && current.length > 0) {\\n\\t\\t\\tyield current;\\n\\t\\t\\tcurrent = [];\\n\\t\\t\\tnewLength = value.length;\\n\\t\\t}\\n\\n\\t\\tcurrent.push(value);\\n\\t\\tlength = newLength;\\n\\t}\\n\\n\\tif (current.length > 0) {\\n\\t\\tyield current;\\n\\t}\\n}\\n\\ninterface ILimitedTaskFactory<T> {\\n\\tfactory: () => Promise<T>;\\n\\tc: (value?: T | Promise<T>) => void;\\n\\te: (error?: any) => void;\\n}\\n\\nexport class Limiter<T> {\\n\\n\\tprivate runningPromises: number;\\n\\tprivate maxDegreeOfParalellism: number;\\n\\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\\n\\n\\tconstructor(maxDegreeOfParalellism: number) {\\n\\t\\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\\n\\t\\tthis.outstandingPromises = [];\\n\\t\\tthis.runningPromises = 0;\\n\\t}\\n\\n\\tqueue(factory: () => Promise<T>): Promise<T> {\\n\\t\\treturn new Promise<T>((c, e) => {\\n\\t\\t\\tthis.outstandingPromises.push({ factory, c, e });\\n\\t\\t\\tthis.consume();\\n\\t\\t});\\n\\t}\\n\\n\\tprivate consume(): void {\\n\\t\\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\\n\\t\\t\\tconst iLimitedTask = this.outstandingPromises.shift()!;\\n\\t\\t\\tthis.runningPromises++;\\n\\n\\t\\t\\tconst promise = iLimitedTask.factory();\\n\\t\\t\\tpromise.then(iLimitedTask.c, iLimitedTask.e);\\n\\t\\t\\tpromise.then(() => this.consumed(), () => this.consumed());\\n\\t\\t}\\n\\t}\\n\\n\\tprivate consumed(): void {\\n\\t\\tthis.runningPromises--;\\n\\n\\t\\tif (this.outstandingPromises.length > 0) {\\n\\t\\t\\tthis.consume();\\n\\t\\t}\\n\\t}\\n}\\n\",\"\\\"use strict\\\";\\r\\nvar Logging = (function () {\\r\\n    function Logging() {\\r\\n    }\\r\\n    Logging.info = function (message) {\\r\\n        var optionalParams = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            optionalParams[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        if (Logging.enableDebug) {\\r\\n            console.info(Logging.TAG + message, optionalParams);\\r\\n        }\\r\\n    };\\r\\n    Logging.warn = function (message) {\\r\\n        var optionalParams = [];\\r\\n        for (var _i = 1; _i < arguments.length; _i++) {\\r\\n            optionalParams[_i - 1] = arguments[_i];\\r\\n        }\\r\\n        if (!Logging.disableWarnings) {\\r\\n            console.warn(Logging.TAG + message, optionalParams);\\r\\n        }\\r\\n    };\\r\\n    Logging.enableDebug = false;\\r\\n    Logging.disableWarnings = false;\\r\\n    Logging.TAG = \\\"ApplicationInsights:\\\";\\r\\n    return Logging;\\r\\n}());\\r\\nmodule.exports = Logging;\\r\\n//# sourceMappingURL=Logging.js.map\",\"\\\"use strict\\\";\\r\\nfunction __export(m) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n__export(require(\\\"./Constants\\\"));\\r\\n__export(require(\\\"./Generated\\\"));\\r\\n__export(require(\\\"./TelemetryTypes\\\"));\\r\\n//# sourceMappingURL=index.js.map\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar path = require(\\\"path\\\");\\r\\nvar fs = require(\\\"fs\\\");\\r\\nvar toString = Object.prototype.toString;\\r\\nfunction isDefined(value) {\\r\\n    return typeof value !== 'undefined';\\r\\n}\\r\\nfunction isNumber(value) {\\r\\n    return toString.call(value) === '[object Number]';\\r\\n}\\r\\nfunction isString(value) {\\r\\n    return toString.call(value) === '[object String]';\\r\\n}\\r\\nfunction isBoolean(value) {\\r\\n    return value === true || value === false;\\r\\n}\\r\\nfunction readJsonFileSync(filename) {\\r\\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\\r\\n}\\r\\nvar MessageFormat;\\r\\n(function (MessageFormat) {\\r\\n    MessageFormat[\\\"file\\\"] = \\\"file\\\";\\r\\n    MessageFormat[\\\"bundle\\\"] = \\\"bundle\\\";\\r\\n    MessageFormat[\\\"both\\\"] = \\\"both\\\";\\r\\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\\r\\nvar LocalizeInfo;\\r\\n(function (LocalizeInfo) {\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\\r\\n    }\\r\\n    LocalizeInfo.is = is;\\r\\n})(LocalizeInfo || (LocalizeInfo = {}));\\r\\nvar resolvedLanguage;\\r\\nvar resolvedBundles;\\r\\nvar options;\\r\\nvar isPseudo;\\r\\nfunction initializeSettings() {\\r\\n    options = { locale: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\\r\\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\\r\\n        try {\\r\\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\\r\\n            if (isString(vscodeOptions.locale)) {\\r\\n                options.locale = vscodeOptions.locale.toLowerCase();\\r\\n            }\\r\\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\\r\\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\\r\\n            }\\r\\n            if (isString(vscodeOptions._cacheRoot)) {\\r\\n                options.cacheRoot = vscodeOptions._cacheRoot;\\r\\n            }\\r\\n            if (isString(vscodeOptions._languagePackId)) {\\r\\n                options.languagePackId = vscodeOptions._languagePackId;\\r\\n            }\\r\\n            if (isString(vscodeOptions._translationsConfigFile)) {\\r\\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\\r\\n                try {\\r\\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\\r\\n                }\\r\\n                catch (error) {\\r\\n                    // We can't read the translation config file. Mark the cache as corrupted.\\r\\n                    if (vscodeOptions._corruptedFile) {\\r\\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\\r\\n                            console.error(err);\\r\\n                        });\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (_a) {\\r\\n            // Do nothing.\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    resolvedLanguage = undefined;\\r\\n    resolvedBundles = Object.create(null);\\r\\n}\\r\\ninitializeSettings();\\r\\nfunction supportsLanguagePack() {\\r\\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\\r\\n        && options.translationsConfig !== undefined;\\r\\n}\\r\\nfunction format(message, args) {\\r\\n    var result;\\r\\n    if (isPseudo) {\\r\\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\\r\\n        message = '\\\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\\\uFF3D';\\r\\n    }\\r\\n    if (args.length === 0) {\\r\\n        result = message;\\r\\n    }\\r\\n    else {\\r\\n        result = message.replace(/\\\\{(\\\\d+)\\\\}/g, function (match, rest) {\\r\\n            var index = rest[0];\\r\\n            var arg = args[index];\\r\\n            var replaced = match;\\r\\n            if (typeof arg === 'string') {\\r\\n                replaced = arg;\\r\\n            }\\r\\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\\r\\n                replaced = String(arg);\\r\\n            }\\r\\n            return replaced;\\r\\n        });\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createScopedLocalizeFunction(messages) {\\r\\n    return function (key, message) {\\r\\n        var args = [];\\r\\n        for (var _i = 2; _i < arguments.length; _i++) {\\r\\n            args[_i - 2] = arguments[_i];\\r\\n        }\\r\\n        if (isNumber(key)) {\\r\\n            if (key >= messages.length) {\\r\\n                console.error(\\\"Broken localize call found. Index out of bounds. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n                return;\\r\\n            }\\r\\n            return format(messages[key], args);\\r\\n        }\\r\\n        else {\\r\\n            if (isString(message)) {\\r\\n                console.warn(\\\"Message \\\" + message + \\\" didn't get externalized correctly.\\\");\\r\\n                return format(message, args);\\r\\n            }\\r\\n            else {\\r\\n                console.error(\\\"Broken localize call found. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n}\\r\\nfunction localize(key, message) {\\r\\n    var args = [];\\r\\n    for (var _i = 2; _i < arguments.length; _i++) {\\r\\n        args[_i - 2] = arguments[_i];\\r\\n    }\\r\\n    return format(message, args);\\r\\n}\\r\\nfunction resolveLanguage(file) {\\r\\n    var resolvedLanguage;\\r\\n    if (options.cacheLanguageResolution && resolvedLanguage) {\\r\\n        resolvedLanguage = resolvedLanguage;\\r\\n    }\\r\\n    else {\\r\\n        if (isPseudo || !options.locale) {\\r\\n            resolvedLanguage = '.nls.json';\\r\\n        }\\r\\n        else {\\r\\n            var locale = options.locale;\\r\\n            while (locale) {\\r\\n                var candidate = '.nls.' + locale + '.json';\\r\\n                if (fs.existsSync(file + candidate)) {\\r\\n                    resolvedLanguage = candidate;\\r\\n                    break;\\r\\n                }\\r\\n                else {\\r\\n                    var index = locale.lastIndexOf('-');\\r\\n                    if (index > 0) {\\r\\n                        locale = locale.substring(0, index);\\r\\n                    }\\r\\n                    else {\\r\\n                        resolvedLanguage = '.nls.json';\\r\\n                        locale = null;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (options.cacheLanguageResolution) {\\r\\n            resolvedLanguage = resolvedLanguage;\\r\\n        }\\r\\n    }\\r\\n    return file + resolvedLanguage;\\r\\n}\\r\\nfunction findInTheBoxBundle(root) {\\r\\n    var locale = options.locale;\\r\\n    while (locale) {\\r\\n        var candidate = path.join(root, \\\"nls.bundle.\\\" + locale + \\\".json\\\");\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n        else {\\r\\n            var index = locale.lastIndexOf('-');\\r\\n            if (index > 0) {\\r\\n                locale = locale.substring(0, index);\\r\\n            }\\r\\n            else {\\r\\n                locale = undefined;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    // Test if we can reslove the default bundle.\\r\\n    if (locale === undefined) {\\r\\n        var candidate = path.join(root, 'nls.bundle.json');\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n    }\\r\\n    return undefined;\\r\\n}\\r\\nfunction mkdir(directory) {\\r\\n    try {\\r\\n        fs.mkdirSync(directory);\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'EEXIST') {\\r\\n            return;\\r\\n        }\\r\\n        else if (err.code === 'ENOENT') {\\r\\n            var parent = path.dirname(directory);\\r\\n            if (parent !== directory) {\\r\\n                mkdir(parent);\\r\\n                fs.mkdirSync(directory);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nfunction createDefaultNlsBundle(folder) {\\r\\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_1 in metaData) {\\r\\n        var entry = metaData[module_1];\\r\\n        result[module_1] = entry.messages;\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createNLSBundle(header, metaDataPath) {\\r\\n    var languagePackLocation = options.translationsConfig[header.id];\\r\\n    if (!languagePackLocation) {\\r\\n        return undefined;\\r\\n    }\\r\\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\\r\\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_2 in metaData) {\\r\\n        var entry = metaData[module_2];\\r\\n        var translations = languagePack[header.outDir + \\\"/\\\" + module_2];\\r\\n        if (translations) {\\r\\n            var resultMessages = [];\\r\\n            for (var i = 0; i < entry.keys.length; i++) {\\r\\n                var messageKey = entry.keys[i];\\r\\n                var key = isString(messageKey) ? messageKey : messageKey.key;\\r\\n                var translatedMessage = translations[key];\\r\\n                if (translatedMessage === undefined) {\\r\\n                    translatedMessage = entry.messages[i];\\r\\n                }\\r\\n                resultMessages.push(translatedMessage);\\r\\n            }\\r\\n            result[module_2] = resultMessages;\\r\\n        }\\r\\n        else {\\r\\n            result[module_2] = entry.messages;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction touch(file) {\\r\\n    var d = new Date();\\r\\n    fs.utimes(file, d, d, function () {\\r\\n        // Do nothing. Ignore\\r\\n    });\\r\\n}\\r\\nfunction cacheBundle(key, bundle) {\\r\\n    resolvedBundles[key] = bundle;\\r\\n    return bundle;\\r\\n}\\r\\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\\r\\n    var result;\\r\\n    var bundle = path.join(options.cacheRoot, header.id + \\\"-\\\" + header.hash + \\\".json\\\");\\r\\n    var useMemoryOnly = false;\\r\\n    var writeBundle = false;\\r\\n    try {\\r\\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\\r\\n        touch(bundle);\\r\\n        return result;\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'ENOENT') {\\r\\n            writeBundle = true;\\r\\n        }\\r\\n        else if (err instanceof SyntaxError) {\\r\\n            // We have a syntax error. So no valid JSON. Use\\r\\n            console.log(\\\"Syntax error parsing message bundle: \\\" + err.message + \\\".\\\");\\r\\n            fs.unlink(bundle, function (err) {\\r\\n                if (err) {\\r\\n                    console.error(\\\"Deleting corrupted bundle \\\" + bundle + \\\" failed.\\\");\\r\\n                }\\r\\n            });\\r\\n            useMemoryOnly = true;\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    result = createNLSBundle(header, bundlePath);\\r\\n    if (!result || useMemoryOnly) {\\r\\n        return result;\\r\\n    }\\r\\n    if (writeBundle) {\\r\\n        try {\\r\\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code === 'EEXIST') {\\r\\n                return result;\\r\\n            }\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadDefaultNlsBundle(bundlePath) {\\r\\n    try {\\r\\n        return createDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    catch (err) {\\r\\n        console.log(\\\"Generating default bundle from meta data failed.\\\", err);\\r\\n        return undefined;\\r\\n    }\\r\\n}\\r\\nfunction loadNlsBundle(header, bundlePath) {\\r\\n    var result;\\r\\n    // Core decided to use a language pack. Do the same in the extension\\r\\n    if (supportsLanguagePack()) {\\r\\n        try {\\r\\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\\r\\n        }\\r\\n        catch (err) {\\r\\n            console.log(\\\"Load or create bundle failed \\\", err);\\r\\n        }\\r\\n    }\\r\\n    if (!result) {\\r\\n        // No language pack found, but core is running in language pack mode\\r\\n        // Don't try to use old in the box bundles since the might be stale\\r\\n        // Fall right back to the default bundle.\\r\\n        if (options.languagePackSupport) {\\r\\n            return loadDefaultNlsBundle(bundlePath);\\r\\n        }\\r\\n        var candidate = findInTheBoxBundle(bundlePath);\\r\\n        if (candidate) {\\r\\n            try {\\r\\n                return readJsonFileSync(candidate);\\r\\n            }\\r\\n            catch (err) {\\r\\n                console.log(\\\"Loading in the box message bundle failed.\\\", err);\\r\\n            }\\r\\n        }\\r\\n        result = loadDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction tryFindMetaDataHeaderFile(file) {\\r\\n    var result;\\r\\n    var dirname = path.dirname(file);\\r\\n    while (true) {\\r\\n        result = path.join(dirname, 'nls.metadata.header.json');\\r\\n        if (fs.existsSync(result)) {\\r\\n            break;\\r\\n        }\\r\\n        var parent = path.dirname(dirname);\\r\\n        if (parent === dirname) {\\r\\n            result = undefined;\\r\\n            break;\\r\\n        }\\r\\n        else {\\r\\n            dirname = parent;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadMessageBundle(file) {\\r\\n    if (!file) {\\r\\n        // No file. We are in dev mode. Return the default\\r\\n        // localize function.\\r\\n        return localize;\\r\\n    }\\r\\n    // Remove extension since we load json files.\\r\\n    var ext = path.extname(file);\\r\\n    if (ext) {\\r\\n        file = file.substr(0, file.length - ext.length);\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\\r\\n        var headerFile = tryFindMetaDataHeaderFile(file);\\r\\n        if (headerFile) {\\r\\n            var bundlePath = path.dirname(headerFile);\\r\\n            var bundle = resolvedBundles[bundlePath];\\r\\n            if (bundle === undefined) {\\r\\n                try {\\r\\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\\r\\n                    try {\\r\\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\\r\\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\\r\\n                    }\\r\\n                    catch (err) {\\r\\n                        console.error('Failed to load nls bundle', err);\\r\\n                        bundle = cacheBundle(bundlePath, null);\\r\\n                    }\\r\\n                }\\r\\n                catch (err) {\\r\\n                    console.error('Failed to read header file', err);\\r\\n                    bundle = cacheBundle(bundlePath, null);\\r\\n                }\\r\\n            }\\r\\n            if (bundle) {\\r\\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\\\\\/g, '/');\\r\\n                var messages = bundle.nlsBundle[module_3];\\r\\n                if (messages === undefined) {\\r\\n                    console.error(\\\"Messages for file \\\" + file + \\\" not found. See console for details.\\\");\\r\\n                    return function () {\\r\\n                        return 'Messages not found.';\\r\\n                    };\\r\\n                }\\r\\n                return createScopedLocalizeFunction(messages);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\\r\\n        // Try to load a single file bundle\\r\\n        try {\\r\\n            var json = readJsonFileSync(resolveLanguage(file));\\r\\n            if (Array.isArray(json)) {\\r\\n                return createScopedLocalizeFunction(json);\\r\\n            }\\r\\n            else {\\r\\n                if (isDefined(json.messages) && isDefined(json.keys)) {\\r\\n                    return createScopedLocalizeFunction(json.messages);\\r\\n                }\\r\\n                else {\\r\\n                    console.error(\\\"String bundle '\\\" + file + \\\"' uses an unsupported format.\\\");\\r\\n                    return function () {\\r\\n                        return 'File bundle has unsupported format. See console for details';\\r\\n                    };\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code !== 'ENOENT') {\\r\\n                console.error('Failed to load single file bundle', err);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    console.error(\\\"Failed to load message bundle for file \\\" + file);\\r\\n    return function () {\\r\\n        return 'Failed to load message bundle. See console for details.';\\r\\n    };\\r\\n}\\r\\nexports.loadMessageBundle = loadMessageBundle;\\r\\nfunction config(opts) {\\r\\n    if (opts) {\\r\\n        if (isString(opts.locale)) {\\r\\n            options.locale = opts.locale.toLowerCase();\\r\\n            resolvedLanguage = undefined;\\r\\n            resolvedBundles = Object.create(null);\\r\\n        }\\r\\n        if (opts.messageFormat !== undefined) {\\r\\n            options.messageFormat = opts.messageFormat;\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    return loadMessageBundle;\\r\\n}\\r\\nexports.config = config;\\r\\n//# sourceMappingURL=main.js.map\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar constants = require('./constants')\\n\\nfunction CodingStateMachine(sm) {\\n    var self = this;\\n\\n    function init(sm) {\\n        self._mModel = sm;\\n        self._mCurrentBytePos = 0;\\n        self._mCurrentCharLen = 0;\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        this._mCurrentState = constants.start;\\n    }\\n\\n    this.nextState = function(c) {\\n        // for each byte we get its class\\n        // if it is first byte, we also get byte length\\n        var byteCls = this._mModel.classTable[c.charCodeAt(0)];\\n        if( this._mCurrentState == constants.start ) {\\n            this._mCurrentBytePos = 0;\\n            this._mCurrentCharLen = this._mModel.charLenTable[byteCls];\\n        }\\n        // from byte's class and stateTable, we get its next state\\n        this._mCurrentState = this._mModel.stateTable[this._mCurrentState * this._mModel.classFactor + byteCls];\\n        this._mCurrentBytePos++;\\n        return this._mCurrentState;\\n    }\\n\\n    this.getCurrentCharLen = function() {\\n        return this._mCurrentCharLen;\\n    }\\n\\n    this.getCodingStateMachine = function() {\\n        return this._mModel.name;\\n    }\\n\\n    init(sm);\\n}\\n\\nmodule.exports = CodingStateMachine\\n\",\"// THIS FILE WAS AUTOGENERATED\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * The abstract common base of all domains.\\r\\n */\\r\\nvar Domain = (function () {\\r\\n    function Domain() {\\r\\n    }\\r\\n    return Domain;\\r\\n}());\\r\\nmodule.exports = Domain;\\r\\n//# sourceMappingURL=Domain.js.map\",\"\\\"use strict\\\";\\r\\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\\r\\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\\r\\n        s = arguments[i];\\r\\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\\r\\n            t[p] = s[p];\\r\\n    }\\r\\n    return t;\\r\\n};\\r\\nvar http = require(\\\"http\\\");\\r\\nvar https = require(\\\"https\\\");\\r\\nvar url = require(\\\"url\\\");\\r\\nvar constants = require(\\\"constants\\\");\\r\\nvar Logging = require(\\\"./Logging\\\");\\r\\nvar RequestResponseHeaders = require(\\\"./RequestResponseHeaders\\\");\\r\\nvar Util = (function () {\\r\\n    function Util() {\\r\\n    }\\r\\n    /**\\r\\n     * helper method to access userId and sessionId cookie\\r\\n     */\\r\\n    Util.getCookie = function (name, cookie) {\\r\\n        var value = \\\"\\\";\\r\\n        if (name && name.length && typeof cookie === \\\"string\\\") {\\r\\n            var cookieName = name + \\\"=\\\";\\r\\n            var cookies = cookie.split(\\\";\\\");\\r\\n            for (var i = 0; i < cookies.length; i++) {\\r\\n                var cookie = cookies[i];\\r\\n                cookie = Util.trim(cookie);\\r\\n                if (cookie && cookie.indexOf(cookieName) === 0) {\\r\\n                    value = cookie.substring(cookieName.length, cookies[i].length);\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return value;\\r\\n    };\\r\\n    /**\\r\\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\\r\\n     */\\r\\n    Util.trim = function (str) {\\r\\n        if (typeof str === \\\"string\\\") {\\r\\n            return str.replace(/^\\\\s+|\\\\s+$/g, \\\"\\\");\\r\\n        }\\r\\n        else {\\r\\n            return \\\"\\\";\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Convert an array of int32 to Base64 (no '==' at the end).\\r\\n     * MSB first.\\r\\n     */\\r\\n    Util.int32ArrayToBase64 = function (array) {\\r\\n        var toChar = function (v, i) {\\r\\n            return String.fromCharCode((v >> i) & 0xFF);\\r\\n        };\\r\\n        var int32AsString = function (v) {\\r\\n            return toChar(v, 24) + toChar(v, 16) + toChar(v, 8) + toChar(v, 0);\\r\\n        };\\r\\n        var x = array.map(int32AsString).join(\\\"\\\");\\r\\n        var b = Buffer.from ? Buffer.from(x, \\\"binary\\\") : new Buffer(x, \\\"binary\\\");\\r\\n        var s = b.toString(\\\"base64\\\");\\r\\n        return s.substr(0, s.indexOf(\\\"=\\\"));\\r\\n    };\\r\\n    /**\\r\\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\\r\\n     */\\r\\n    Util.random32 = function () {\\r\\n        return (0x100000000 * Math.random()) | 0;\\r\\n    };\\r\\n    /**\\r\\n     * generate a random 32bit number (0x00000000..0xFFFFFFFF).\\r\\n     */\\r\\n    Util.randomu32 = function () {\\r\\n        return Util.random32() + 0x80000000;\\r\\n    };\\r\\n    /**\\r\\n     * generate W3C-compatible trace id\\r\\n     * https://github.com/w3c/distributed-tracing/blob/master/trace_context/HTTP_HEADER_FORMAT.md#trace-id\\r\\n     */\\r\\n    Util.w3cTraceId = function () {\\r\\n        var hexValues = [\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\", \\\"4\\\", \\\"5\\\", \\\"6\\\", \\\"7\\\", \\\"8\\\", \\\"9\\\", \\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"];\\r\\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\\r\\n        var oct = \\\"\\\", tmp;\\r\\n        for (var a = 0; a < 4; a++) {\\r\\n            tmp = Util.random32();\\r\\n            oct +=\\r\\n                hexValues[tmp & 0xF] +\\r\\n                    hexValues[tmp >> 4 & 0xF] +\\r\\n                    hexValues[tmp >> 8 & 0xF] +\\r\\n                    hexValues[tmp >> 12 & 0xF] +\\r\\n                    hexValues[tmp >> 16 & 0xF] +\\r\\n                    hexValues[tmp >> 20 & 0xF] +\\r\\n                    hexValues[tmp >> 24 & 0xF] +\\r\\n                    hexValues[tmp >> 28 & 0xF];\\r\\n        }\\r\\n        // \\\"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\\\"\\r\\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\\r\\n        return oct.substr(0, 8) + oct.substr(9, 4) + \\\"4\\\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\\r\\n    };\\r\\n    /**\\r\\n     * Check if an object is of type Array\\r\\n     */\\r\\n    Util.isArray = function (obj) {\\r\\n        return Object.prototype.toString.call(obj) === \\\"[object Array]\\\";\\r\\n    };\\r\\n    /**\\r\\n     * Check if an object is of type Error\\r\\n     */\\r\\n    Util.isError = function (obj) {\\r\\n        return obj instanceof Error;\\r\\n    };\\r\\n    Util.isPrimitive = function (input) {\\r\\n        var propType = typeof input;\\r\\n        return propType === \\\"string\\\" || propType === \\\"number\\\" || propType === \\\"boolean\\\";\\r\\n    };\\r\\n    /**\\r\\n     * Check if an object is of type Date\\r\\n     */\\r\\n    Util.isDate = function (obj) {\\r\\n        return Object.prototype.toString.call(obj) === \\\"[object Date]\\\";\\r\\n    };\\r\\n    /**\\r\\n     * Convert ms to c# time span format\\r\\n     */\\r\\n    Util.msToTimeSpan = function (totalms) {\\r\\n        if (isNaN(totalms) || totalms < 0) {\\r\\n            totalms = 0;\\r\\n        }\\r\\n        var sec = ((totalms / 1000) % 60).toFixed(7).replace(/0{0,4}$/, \\\"\\\");\\r\\n        var min = \\\"\\\" + Math.floor(totalms / (1000 * 60)) % 60;\\r\\n        var hour = \\\"\\\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\\r\\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\\r\\n        sec = sec.indexOf(\\\".\\\") < 2 ? \\\"0\\\" + sec : sec;\\r\\n        min = min.length < 2 ? \\\"0\\\" + min : min;\\r\\n        hour = hour.length < 2 ? \\\"0\\\" + hour : hour;\\r\\n        var daysText = days > 0 ? days + \\\".\\\" : \\\"\\\";\\r\\n        return daysText + hour + \\\":\\\" + min + \\\":\\\" + sec;\\r\\n    };\\r\\n    /**\\r\\n     * Using JSON.stringify, by default Errors do not serialize to something useful:\\r\\n     * Simplify a generic Node Error into a simpler map for customDimensions\\r\\n     * Custom errors can still implement toJSON to override this functionality\\r\\n     */\\r\\n    Util.extractError = function (err) {\\r\\n        // Error is often subclassed so may have code OR id properties:\\r\\n        // https://nodejs.org/api/errors.html#errors_error_code\\r\\n        var looseError = err;\\r\\n        return {\\r\\n            message: err.message,\\r\\n            code: looseError.code || looseError.id || \\\"\\\",\\r\\n        };\\r\\n    };\\r\\n    /**\\r\\n     * Manually call toJSON if available to pre-convert the value.\\r\\n     * If a primitive is returned, then the consumer of this function can skip JSON.stringify.\\r\\n     * This avoids double escaping of quotes for Date objects, for example.\\r\\n     */\\r\\n    Util.extractObject = function (origProperty) {\\r\\n        if (origProperty instanceof Error) {\\r\\n            return Util.extractError(origProperty);\\r\\n        }\\r\\n        if (typeof origProperty.toJSON === \\\"function\\\") {\\r\\n            return origProperty.toJSON();\\r\\n        }\\r\\n        return origProperty;\\r\\n    };\\r\\n    /**\\r\\n     * Validate that an object is of type { [key: string]: string }\\r\\n     */\\r\\n    Util.validateStringMap = function (obj) {\\r\\n        if (typeof obj !== \\\"object\\\") {\\r\\n            Logging.info(\\\"Invalid properties dropped from payload\\\");\\r\\n            return;\\r\\n        }\\r\\n        var map = {};\\r\\n        for (var field in obj) {\\r\\n            var property = '';\\r\\n            var origProperty = obj[field];\\r\\n            var propType = typeof origProperty;\\r\\n            if (Util.isPrimitive(origProperty)) {\\r\\n                property = origProperty.toString();\\r\\n            }\\r\\n            else if (origProperty === null || propType === \\\"undefined\\\") {\\r\\n                property = \\\"\\\";\\r\\n            }\\r\\n            else if (propType === \\\"function\\\") {\\r\\n                Logging.info(\\\"key: \\\" + field + \\\" was function; will not serialize\\\");\\r\\n                continue;\\r\\n            }\\r\\n            else {\\r\\n                var stringTarget = Util.isArray(origProperty) ? origProperty : Util.extractObject(origProperty);\\r\\n                try {\\r\\n                    if (Util.isPrimitive(stringTarget)) {\\r\\n                        property = stringTarget;\\r\\n                    }\\r\\n                    else {\\r\\n                        property = JSON.stringify(stringTarget);\\r\\n                    }\\r\\n                }\\r\\n                catch (e) {\\r\\n                    property = origProperty.constructor.name.toString() + \\\" (Error: \\\" + e.message + \\\")\\\";\\r\\n                    Logging.info(\\\"key: \\\" + field + \\\", could not be serialized\\\");\\r\\n                }\\r\\n            }\\r\\n            map[field] = property.substring(0, Util.MAX_PROPERTY_LENGTH);\\r\\n        }\\r\\n        return map;\\r\\n    };\\r\\n    /**\\r\\n     * Checks if a request url is not on a excluded domain list\\r\\n     * and if it is safe to add correlation headers\\r\\n     */\\r\\n    Util.canIncludeCorrelationHeader = function (client, requestUrl) {\\r\\n        var excludedDomains = client && client.config && client.config.correlationHeaderExcludedDomains;\\r\\n        if (!excludedDomains || excludedDomains.length == 0 || !requestUrl) {\\r\\n            return true;\\r\\n        }\\r\\n        for (var i = 0; i < excludedDomains.length; i++) {\\r\\n            var regex = new RegExp(excludedDomains[i].replace(/\\\\./g, \\\"\\\\.\\\").replace(/\\\\*/g, \\\".*\\\"));\\r\\n            if (regex.test(url.parse(requestUrl).hostname)) {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    };\\r\\n    Util.getCorrelationContextTarget = function (response, key) {\\r\\n        var contextHeaders = response.headers && response.headers[RequestResponseHeaders.requestContextHeader];\\r\\n        if (contextHeaders) {\\r\\n            var keyValues = contextHeaders.split(\\\",\\\");\\r\\n            for (var i = 0; i < keyValues.length; ++i) {\\r\\n                var keyValue = keyValues[i].split(\\\"=\\\");\\r\\n                if (keyValue.length == 2 && keyValue[0] == key) {\\r\\n                    return keyValue[1];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Generate request\\r\\n     *\\r\\n     * Proxify the request creation to handle proxy http\\r\\n     *\\r\\n     * @param {string} requestUrl url endpoint\\r\\n     * @param {Object} requestOptions Request option\\r\\n     * @param {Function} requestCallback callback on request\\r\\n     * @returns {http.ClientRequest} request object\\r\\n     */\\r\\n    Util.makeRequest = function (config, requestUrl, requestOptions, requestCallback) {\\r\\n        if (requestUrl && requestUrl.indexOf('//') === 0) {\\r\\n            requestUrl = 'https:' + requestUrl;\\r\\n        }\\r\\n        var requestUrlParsed = url.parse(requestUrl);\\r\\n        var options = __assign({}, requestOptions, { host: requestUrlParsed.hostname, port: requestUrlParsed.port, path: requestUrlParsed.pathname });\\r\\n        var proxyUrl = undefined;\\r\\n        if (requestUrlParsed.protocol === 'https:') {\\r\\n            proxyUrl = config.proxyHttpsUrl || undefined;\\r\\n        }\\r\\n        if (requestUrlParsed.protocol === 'http:') {\\r\\n            proxyUrl = config.proxyHttpUrl || undefined;\\r\\n        }\\r\\n        if (proxyUrl) {\\r\\n            if (proxyUrl.indexOf('//') === 0) {\\r\\n                proxyUrl = 'http:' + proxyUrl;\\r\\n            }\\r\\n            var proxyUrlParsed = url.parse(proxyUrl);\\r\\n            // https is not supported at the moment\\r\\n            if (proxyUrlParsed.protocol === 'https:') {\\r\\n                Logging.info(\\\"Proxies that use HTTPS are not supported\\\");\\r\\n                proxyUrl = undefined;\\r\\n            }\\r\\n            else {\\r\\n                options = __assign({}, options, { host: proxyUrlParsed.hostname, port: proxyUrlParsed.port || \\\"80\\\", path: requestUrl, headers: __assign({}, options.headers, { Host: requestUrlParsed.hostname }) });\\r\\n            }\\r\\n        }\\r\\n        var isHttps = requestUrlParsed.protocol === 'https:' && !proxyUrl;\\r\\n        if (isHttps && config.httpsAgent !== undefined) {\\r\\n            options.agent = config.httpsAgent;\\r\\n        }\\r\\n        else if (!isHttps && config.httpAgent !== undefined) {\\r\\n            options.agent = config.httpAgent;\\r\\n        }\\r\\n        else if (isHttps) {\\r\\n            // HTTPS without a passed in agent. Use one that enforces our TLS rules\\r\\n            options.agent = Util.tlsRestrictedAgent;\\r\\n        }\\r\\n        if (isHttps) {\\r\\n            return https.request(options, requestCallback);\\r\\n        }\\r\\n        else {\\r\\n            return http.request(options, requestCallback);\\r\\n        }\\r\\n    };\\r\\n    ;\\r\\n    Util.MAX_PROPERTY_LENGTH = 8192;\\r\\n    Util.tlsRestrictedAgent = new https.Agent({\\r\\n        secureOptions: constants.SSL_OP_NO_SSLv2 | constants.SSL_OP_NO_SSLv3 |\\r\\n            constants.SSL_OP_NO_TLSv1 | constants.SSL_OP_NO_TLSv1_1\\r\\n    });\\r\\n    return Util;\\r\\n}());\\r\\nmodule.exports = Util;\\r\\n//# sourceMappingURL=Util.js.map\",\"module.exports = require(\\\"os\\\");\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar constants = require('./constants')\\n\\nfunction CharSetProber() {\\n    this.reset = function() {\\n        this._mState = constants.detecting;\\n    }\\n\\n    this.getCharsetName = function() {\\n        return null;\\n    }\\n\\n    this.feed = function(aBuf) {\\n    }\\n\\n    this.getState = function() {\\n        return this._mState;\\n    }\\n\\n    this.getConfidence = function() {\\n        return 0.0;\\n    }\\n\\n    this.filterHighBitOnly = function(aBuf) {\\n        aBuf = aBuf.replace(/[\\\\x00-\\\\x7F]+/g, \\\" \\\");\\n        return aBuf;\\n    }\\n\\n    this.filterWithoutEnglishLetters = function(aBuf) {\\n        aBuf = aBuf.replace(/[A-Za-z]+/g, \\\" \\\");\\n        return aBuf;\\n    }\\n\\n    // Input: aBuf is a string containing all different types of characters\\n    // Output: a string that contains all alphabetic letters, high-byte characters, and word immediately preceding `>`, but nothing else within `<>`\\n    // Ex: input - '¡£º <div blah blah> abcdef</div> apples! * and oranges 9jd93jd>'\\n    //     output - '¡£º blah div apples and oranges jd jd '\\n    this.filterWithEnglishLetters = function(aBuf) {\\n        var result = '';\\n        var inTag = false;\\n        var prev = 0;\\n\\n        for (var curr = 0; curr < aBuf.length; curr++) {\\n          var c = aBuf[curr];\\n\\n          if (c == '>') {\\n            inTag = false;\\n          } else if (c == '<') {\\n            inTag = true;\\n          }\\n\\n          var isAlpha = /[a-zA-Z]/.test(c);\\n          var isASCII = /^[\\\\x00-\\\\x7F]*$/.test(c);\\n\\n          if (isASCII && !isAlpha) {\\n            if (curr > prev && !inTag) {\\n              result = result + aBuf.substring(prev, curr) + ' ';\\n            }\\n\\n            prev = curr + 1;\\n          }\\n        }\\n\\n        if (!inTag) {\\n          result = result + aBuf.substring(prev);\\n        }\\n\\n        return result;\\n    }\\n}\\n\\nmodule.exports = CharSetProber\\n\",\"// By default, do nothing\\nexports.log = function () {};\\n\\nexports.setLogger = function setLogger(loggerFunction) {\\n  exports.enabled = true;\\n  exports.log = loggerFunction;\\n};\\n\",\"/* eslint-disable node/no-deprecated-api */\\n\\n'use strict'\\n\\nvar buffer = require('buffer')\\nvar Buffer = buffer.Buffer\\n\\nvar safer = {}\\n\\nvar key\\n\\nfor (key in buffer) {\\n  if (!buffer.hasOwnProperty(key)) continue\\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\\n  safer[key] = buffer[key]\\n}\\n\\nvar Safer = safer.Buffer = {}\\nfor (key in Buffer) {\\n  if (!Buffer.hasOwnProperty(key)) continue\\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\\n  Safer[key] = Buffer[key]\\n}\\n\\nsafer.Buffer.prototype = Buffer.prototype\\n\\nif (!Safer.from || Safer.from === Uint8Array.from) {\\n  Safer.from = function (value, encodingOrOffset, length) {\\n    if (typeof value === 'number') {\\n      throw new TypeError('The \\\"value\\\" argument must not be of type number. Received type ' + typeof value)\\n    }\\n    if (value && typeof value.length === 'undefined') {\\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\\n    }\\n    return Buffer(value, encodingOrOffset, length)\\n  }\\n}\\n\\nif (!Safer.alloc) {\\n  Safer.alloc = function (size, fill, encoding) {\\n    if (typeof size !== 'number') {\\n      throw new TypeError('The \\\"size\\\" argument must be of type number. Received type ' + typeof size)\\n    }\\n    if (size < 0 || size >= 2 * (1 << 30)) {\\n      throw new RangeError('The value \\\"' + size + '\\\" is invalid for option \\\"size\\\"')\\n    }\\n    var buf = Buffer(size)\\n    if (!fill || fill.length === 0) {\\n      buf.fill(0)\\n    } else if (typeof encoding === 'string') {\\n      buf.fill(fill, encoding)\\n    } else {\\n      buf.fill(fill)\\n    }\\n    return buf\\n  }\\n}\\n\\nif (!safer.kStringMaxLength) {\\n  try {\\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\\n  } catch (e) {\\n    // we can't determine kStringMaxLength in environments where process.binding\\n    // is unsupported, so let's not set it\\n  }\\n}\\n\\nif (!safer.constants) {\\n  safer.constants = {\\n    MAX_LENGTH: safer.kMaxLength\\n  }\\n  if (safer.kStringMaxLength) {\\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\\n  }\\n}\\n\\nmodule.exports = safer\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CharSetProber = require('./charsetprober');\\nvar constants = require('./constants');\\nvar logger = require('./logger');\\n\\n function MultiByteCharSetProber() {\\n    CharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mDistributionAnalyzer = null;\\n        self._mCodingSM = null;\\n        //self._mLastChar = [\\\"\\\\x00\\\", \\\"\\\\x00\\\"];\\n        self._mLastChar = \\\"\\\\x00\\\\x00\\\";\\n    }\\n\\n    this.reset = function() {\\n        MultiByteCharSetProber.prototype.reset.apply(this);\\n        if( this._mCodingSM ) {\\n            this._mCodingSM.reset();\\n        }\\n        if( this._mDistributionAnalyzer ) {\\n            this._mDistributionAnalyzer.reset();\\n        }\\n        //this._mLastChar = [\\\"\\\\x00\\\", \\\"\\\\x00\\\"];\\n        this._mLastChar = \\\"\\\\x00\\\\x00\\\";\\n    }\\n\\n    this.getCharsetName = function() {\\n    }\\n\\n    this.feed = function(aBuf) {\\n        var aLen = aBuf.length;\\n        for( var i = 0; i < aLen; i++ ) {\\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\\n            if( codingState == constants.error ) {\\n                logger.log(this.getCharsetName() + \\\" prober hit error at byte \\\" + i + \\\"\\\\n\\\");\\n                this._mState = constants.notMe;\\n                break;\\n            } else if( codingState == constants.itsMe ) {\\n                this._mState = constants.foundIt;\\n                break;\\n            } else if( codingState == constants.start ) {\\n                var charLen = this._mCodingSM.getCurrentCharLen();\\n                if( i == 0 ) {\\n                    this._mLastChar[1] = aBuf[0];\\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\\n                } else {\\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\\n                }\\n            }\\n        }\\n\\n        this._mLastChar[0] = aBuf[aLen - 1];\\n\\n        if( this.getState() == constants.detecting ) {\\n            if( this._mDistributionAnalyzer.gotEnoughData() &&\\n                this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\\n                this._mState = constants.foundIt;\\n            }\\n        }\\n\\n        return this.getState();\\n    }\\n\\n    this.getConfidence = function() {\\n        return this._mDistributionAnalyzer.getConfidence();\\n    }\\n}\\nMultiByteCharSetProber.prototype = new CharSetProber();\\n\\nmodule.exports = MultiByteCharSetProber\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar jisfreq = require('./jisfreq');\\nvar euctwfreq = require('./euctwfreq');\\nvar euckrfreq = require('./euckrfreq');\\nvar gb2312freq = require('./gb2312freq');\\nvar big5freq = require('./big5freq');\\n\\nfunction CharDistributionAnalysis() {\\n    var ENOUGH_DATA_THRESHOLD = 1024;\\n    var SURE_YES = 0.99;\\n    var SURE_NO = 0.01;\\n    var MINIMUM_DATA_THRESHOLD = 3;\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCharToFreqOrder = null; // Mapping table to get frequency order from char order (get from GetOrder())\\n        self._mTableSize = null; // Size of above table\\n        self._mTypicalDistributionRatio = null; // This is a constant value which varies from language to language, used in calculating confidence.  See http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html for further detail.\\n        self.reset();\\n    }\\n\\n    /**\\n     * reset analyser, clear any state\\n     */\\n    this.reset = function() {\\n        this._mDone = false; // If this flag is set to constants.True, detection is done and conclusion has been made\\n        this._mTotalChars = 0; // Total characters encountered\\n        this._mFreqChars = 0; // The number of characters whose frequency order is less than 512\\n    }\\n\\n    /**\\n     * feed a character with known length\\n     */\\n    this.feed = function(aStr, aCharLen) {\\n        if( aCharLen == 2 ) {\\n            // we only care about 2-bytes character in our distribution analysis\\n            var order = this.getOrder(aStr);\\n        } else {\\n            order = -1;\\n        }\\n        if( order >= 0 ) {\\n            this._mTotalChars++;\\n            // order is valid\\n            if( order < this._mTableSize ) {\\n                if( 512 > this._mCharToFreqOrder[order] ) {\\n                    this._mFreqChars++;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * return confidence based on existing data\\n     */\\n    this.getConfidence = function() {\\n        // if we didn't receive any character in our consideration range, return negative answer\\n        if( this._mTotalChars <= 0 || this._mFreqChars <= MINIMUM_DATA_THRESHOLD) {\\n            return SURE_NO;\\n        }\\n        if( this._mTotalChars != this._mFreqChars ) {\\n            var r = this._mFreqChars / ((this._mTotalChars - this._mFreqChars) * this._mTypicalDistributionRatio);\\n            if( r < SURE_YES ) {\\n                return r;\\n            }\\n        }\\n\\n        // normalize confidence (we don't want to be 100% sure)\\n        return SURE_YES;\\n    }\\n\\n    this.gotEnoughData = function() {\\n        // It is not necessary to receive all data to draw conclusion. For charset detection,\\n        // certain amount of data is enough\\n        return this._mTotalChars > ENOUGH_DATA_THRESHOLD;\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        // We do not handle characters based on the original encoding string, but\\n        // convert this encoding string to a number, here called order.\\n        // This allows multiple encodings of a language to share one frequency table.\\n        return -1;\\n    }\\n\\n    init();\\n}\\n\\nexports.CharDistributionAnalysis = CharDistributionAnalysis\\n\\nfunction EUCTWDistributionAnalysis() {\\n    CharDistributionAnalysis.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCharToFreqOrder = euctwfreq.EUCTWCharToFreqOrder;\\n        self._mTableSize = euctwfreq.EUCTW_TABLE_SIZE;\\n        self._mTypicalDistributionRatio = euctwfreq.EUCTW_TYPICAL_DISTRIBUTION_RATIO;\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        // for euc-TW encoding, we are interested\\n        //   first  byte range: 0xc4 -- 0xfe\\n        //   second byte range: 0xa1 -- 0xfe\\n        // no validation needed here. State machine has done that\\n        if( aStr.charCodeAt(0) >= 0xC4 ) {\\n            return 94 * (aStr.charCodeAt(0) - 0xC4) + aStr.charCodeAt(1) - 0xA1;\\n        } else {\\n            return -1;\\n        }\\n    }\\n\\n    init();\\n}\\nEUCTWDistributionAnalysis.prototype = new CharDistributionAnalysis();\\n\\nexports.EUCTWDistributionAnalysis = EUCTWDistributionAnalysis\\n\\nfunction EUCKRDistributionAnalysis() {\\n    CharDistributionAnalysis.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCharToFreqOrder = euckrfreq.EUCKRCharToFreqOrder;\\n        self._mTableSize = euckrfreq.EUCKR_TABLE_SIZE;\\n        self._mTypicalDistributionRatio = euckrfreq.EUCKR_TYPICAL_DISTRIBUTION_RATIO;\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        // for euc-KR encoding, we are interested\\n        //   first  byte range: 0xb0 -- 0xfe\\n        //   second byte range: 0xa1 -- 0xfe\\n        // no validation needed here. State machine has done that\\n        if( aStr.charCodeAt(0) >= 0xB0 ) {\\n            return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\\n        } else {\\n            return -1;\\n        }\\n    }\\n\\n    init();\\n}\\nEUCKRDistributionAnalysis.prototype = new CharDistributionAnalysis();\\n\\nexports.EUCKRDistributionAnalysis = EUCKRDistributionAnalysis\\n\\nfunction GB2312DistributionAnalysis() {\\n    CharDistributionAnalysis.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCharToFreqOrder = gb2312freq.GB2312CharToFreqOrder;\\n        self._mTableSize = gb2312freq.GB2312_TABLE_SIZE;\\n        self._mTypicalDistributionRatio = gb2312freq.GB2312_TYPICAL_DISTRIBUTION_RATIO;\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        // for GB2312 encoding, we are interested\\n        //  first  byte range: 0xb0 -- 0xfe\\n        //  second byte range: 0xa1 -- 0xfe\\n        // no validation needed here. State machine has done that\\n        if( aStr.charCodeAt(0) >= 0xB0 && aStr.charCodeAt(1) >= 0xA1 ) {\\n            return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\\n        } else {\\n            return -1;\\n        }\\n    }\\n\\n    init();\\n}\\nGB2312DistributionAnalysis.prototype = new CharDistributionAnalysis();\\n\\nexports.GB2312DistributionAnalysis = GB2312DistributionAnalysis\\n\\nfunction Big5DistributionAnalysis() {\\n    CharDistributionAnalysis.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCharToFreqOrder = big5freq.Big5CharToFreqOrder;\\n        self._mTableSize = big5freq.BIG5_TABLE_SIZE;\\n        self._mTypicalDistributionRatio = big5freq.BIG5_TYPICAL_DISTRIBUTION_RATIO;\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        // for big5 encoding, we are interested\\n        //   first  byte range: 0xa4 -- 0xfe\\n        //   second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe\\n        // no validation needed here. State machine has done that\\n        if( aStr.charCodeAt(0) >= 0xA4 ) {\\n            if( aStr.charCodeAt(1) >= 0xA1 ) {\\n                return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0xA1 + 63;\\n            } else {\\n                return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0x40;\\n            }\\n        } else {\\n            return -1;\\n        }\\n    }\\n\\n    init();\\n}\\nBig5DistributionAnalysis.prototype = new CharDistributionAnalysis();\\n\\nexports.Big5DistributionAnalysis = Big5DistributionAnalysis\\n\\nfunction SJISDistributionAnalysis() {\\n    CharDistributionAnalysis.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCharToFreqOrder = jisfreq.JISCharToFreqOrder;\\n        self._mTableSize = jisfreq.JIS_TABLE_SIZE;\\n        self._mTypicalDistributionRatio = jisfreq.JIS_TYPICAL_DISTRIBUTION_RATIO;\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        // for sjis encoding, we are interested\\n        //   first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xef\\n        //   second byte range: 0x40 -- 0x7e,  0x80 -- 0xfc\\n        // no validation needed here. State machine has done that\\n        if( aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F ) {\\n            var order = 188 * (aStr.charCodeAt(0) - 0x81);\\n        } else if( aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xEF ) {\\n            order = 188 * (aStr.charCodeAt(0) - 0xE0 + 31);\\n        } else {\\n            return -1;\\n        }\\n        order += aStr.charCodeAt(1) - 0x40;\\n        if( aStr.charCodeAt(1) < 0x40 || aStr.charCodeAt(1) === 0x7F || aStr.charCodeAt(1) > 0xFC) {\\n            order = -1;\\n        }\\n        return order;\\n    }\\n\\n    init();\\n}\\nSJISDistributionAnalysis.prototype = new CharDistributionAnalysis();\\n\\nexports.SJISDistributionAnalysis = SJISDistributionAnalysis\\n\\nfunction EUCJPDistributionAnalysis() {\\n    CharDistributionAnalysis.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCharToFreqOrder = jisfreq.JISCharToFreqOrder;\\n        self._mTableSize = jisfreq.JIS_TABLE_SIZE;\\n        self._mTypicalDistributionRatio = jisfreq.JIS_TYPICAL_DISTRIBUTION_RATIO;\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        // for euc-JP encoding, we are interested\\n        //   first  byte range: 0xa0 -- 0xfe\\n        //   second byte range: 0xa1 -- 0xfe\\n        // no validation needed here. State machine has done that\\n        if( aStr[0] >= \\\"\\\\xA0\\\" ) {\\n            return 94 * (aStr.charCodeAt(0) - 0xA1) + aStr.charCodeAt(1) - 0xA1;\\n        } else {\\n            return -1;\\n        }\\n    }\\n\\n    init();\\n}\\nEUCJPDistributionAnalysis.prototype = new CharDistributionAnalysis();\\n\\nexports.EUCJPDistributionAnalysis = EUCJPDistributionAnalysis\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { done } from './util';\\n\\nfunction decorate(decorator: (fn: Function, key: string) => Function): Function {\\n\\treturn (_target: any, key: string, descriptor: any) => {\\n\\t\\tlet fnKey: string | null = null;\\n\\t\\tlet fn: Function | null = null;\\n\\n\\t\\tif (typeof descriptor.value === 'function') {\\n\\t\\t\\tfnKey = 'value';\\n\\t\\t\\tfn = descriptor.value;\\n\\t\\t} else if (typeof descriptor.get === 'function') {\\n\\t\\t\\tfnKey = 'get';\\n\\t\\t\\tfn = descriptor.get;\\n\\t\\t}\\n\\n\\t\\tif (!fn || !fnKey) {\\n\\t\\t\\tthrow new Error('not supported');\\n\\t\\t}\\n\\n\\t\\tdescriptor[fnKey] = decorator(fn, key);\\n\\t};\\n}\\n\\nfunction _memoize(fn: Function, key: string): Function {\\n\\tconst memoizeKey = `$memoize$${key}`;\\n\\n\\treturn function (this: any, ...args: any[]) {\\n\\t\\tif (!this.hasOwnProperty(memoizeKey)) {\\n\\t\\t\\tObject.defineProperty(this, memoizeKey, {\\n\\t\\t\\t\\tconfigurable: false,\\n\\t\\t\\t\\tenumerable: false,\\n\\t\\t\\t\\twritable: false,\\n\\t\\t\\t\\tvalue: fn.apply(this, args)\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn this[memoizeKey];\\n\\t};\\n}\\n\\nexport const memoize = decorate(_memoize);\\n\\nfunction _throttle<T>(fn: Function, key: string): Function {\\n\\tconst currentKey = `$throttle$current$${key}`;\\n\\tconst nextKey = `$throttle$next$${key}`;\\n\\n\\tconst trigger = function (this: any, ...args: any[]) {\\n\\t\\tif (this[nextKey]) {\\n\\t\\t\\treturn this[nextKey];\\n\\t\\t}\\n\\n\\t\\tif (this[currentKey]) {\\n\\t\\t\\tthis[nextKey] = done(this[currentKey]).then(() => {\\n\\t\\t\\t\\tthis[nextKey] = undefined;\\n\\t\\t\\t\\treturn trigger.apply(this, args);\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn this[nextKey];\\n\\t\\t}\\n\\n\\t\\tthis[currentKey] = fn.apply(this, args) as Promise<T>;\\n\\n\\t\\tconst clear = () => this[currentKey] = undefined;\\n\\t\\tdone(this[currentKey]).then(clear, clear);\\n\\n\\t\\treturn this[currentKey];\\n\\t};\\n\\n\\treturn trigger;\\n}\\n\\nexport const throttle = decorate(_throttle);\\n\\nfunction _sequentialize(fn: Function, key: string): Function {\\n\\tconst currentKey = `__$sequence$${key}`;\\n\\n\\treturn function (this: any, ...args: any[]) {\\n\\t\\tconst currentPromise = this[currentKey] as Promise<any> || Promise.resolve(null);\\n\\t\\tconst run = async () => await fn.apply(this, args);\\n\\t\\tthis[currentKey] = currentPromise.then(run, run);\\n\\t\\treturn this[currentKey];\\n\\t};\\n}\\n\\nexport const sequentialize = decorate(_sequentialize);\\n\\nexport function debounce(delay: number): Function {\\n\\treturn decorate((fn, key) => {\\n\\t\\tconst timerKey = `$debounce$${key}`;\\n\\n\\t\\treturn function (this: any, ...args: any[]) {\\n\\t\\t\\tclearTimeout(this[timerKey]);\\n\\t\\t\\tthis[timerKey] = setTimeout(() => fn.apply(this, args), delay);\\n\\t\\t};\\n\\t});\\n}\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { Uri } from 'vscode';\\n\\nexport interface GitUriParams {\\n\\tpath: string;\\n\\tref: string;\\n\\tsubmoduleOf?: string;\\n}\\n\\nexport function isGitUri(uri: Uri): boolean {\\n\\treturn /^git$/.test(uri.scheme);\\n}\\n\\nexport function fromGitUri(uri: Uri): GitUriParams {\\n\\treturn JSON.parse(uri.query);\\n}\\n\\nexport interface GitUriOptions {\\n\\treplaceFileExtension?: boolean;\\n\\tsubmoduleOf?: string;\\n}\\n\\n// As a mitigation for extensions like ESLint showing warnings and errors\\n// for git URIs, let's change the file extension of these uris to .git,\\n// when `replaceFileExtension` is true.\\nexport function toGitUri(uri: Uri, ref: string, options: GitUriOptions = {}): Uri {\\n\\tconst params: GitUriParams = {\\n\\t\\tpath: uri.fsPath,\\n\\t\\tref\\n\\t};\\n\\n\\tif (options.submoduleOf) {\\n\\t\\tparams.submoduleOf = options.submoduleOf;\\n\\t}\\n\\n\\tlet path = uri.path;\\n\\n\\tif (options.replaceFileExtension) {\\n\\t\\tpath = `${path}.git`;\\n\\t} else if (options.submoduleOf) {\\n\\t\\tpath = `${path}.diff`;\\n\\t}\\n\\n\\treturn uri.with({\\n\\t\\tscheme: 'git',\\n\\t\\tpath,\\n\\t\\tquery: JSON.stringify(params)\\n\\t});\\n}\\n\",\"module.exports = require(\\\"http\\\");\",\"module.exports = require(\\\"buffer\\\");\",\"module.exports = require(\\\"stream\\\");\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Logging = require(\\\"../Library/Logging\\\");\\r\\nvar DiagChannel = require(\\\"./diagnostic-channel/initialization\\\");\\r\\nvar CorrelationContextManager = (function () {\\r\\n    function CorrelationContextManager() {\\r\\n    }\\r\\n    /**\\r\\n     *  Provides the current Context.\\r\\n     *  The context is the most recent one entered into for the current\\r\\n     *  logical chain of execution, including across asynchronous calls.\\r\\n     */\\r\\n    CorrelationContextManager.getCurrentContext = function () {\\r\\n        if (!CorrelationContextManager.enabled) {\\r\\n            return null;\\r\\n        }\\r\\n        return Zone.current.get(\\\"context\\\");\\r\\n    };\\r\\n    /**\\r\\n     *  A helper to generate objects conforming to the CorrelationContext interface\\r\\n     */\\r\\n    CorrelationContextManager.generateContextObject = function (operationId, parentId, operationName, correlationContextHeader) {\\r\\n        parentId = parentId || operationId;\\r\\n        if (this.enabled) {\\r\\n            return {\\r\\n                operation: {\\r\\n                    name: operationName,\\r\\n                    id: operationId,\\r\\n                    parentId: parentId\\r\\n                },\\r\\n                customProperties: new CustomPropertiesImpl(correlationContextHeader)\\r\\n            };\\r\\n        }\\r\\n        return null;\\r\\n    };\\r\\n    /**\\r\\n     *  Runs a function inside a given Context.\\r\\n     *  All logical children of the execution path that entered this Context\\r\\n     *  will receive this Context object on calls to GetCurrentContext.\\r\\n     */\\r\\n    CorrelationContextManager.runWithContext = function (context, fn) {\\r\\n        if (CorrelationContextManager.enabled) {\\r\\n            var newZone = Zone.current.fork({\\r\\n                name: \\\"AI-\\\" + ((context && context.operation.parentId) || \\\"Unknown\\\"),\\r\\n                properties: { context: context }\\r\\n            });\\r\\n            newZone.run(fn);\\r\\n        }\\r\\n        else {\\r\\n            fn();\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     *  Patches a callback to restore the correct Context when getCurrentContext\\r\\n     *  is run within it. This is necessary if automatic correlation fails to work\\r\\n     *  with user-included libraries.\\r\\n     *\\r\\n     *  The supplied callback will be given the same context that was present for\\r\\n     *  the call to wrapCallback.  */\\r\\n    CorrelationContextManager.wrapCallback = function (fn) {\\r\\n        if (CorrelationContextManager.enabled) {\\r\\n            return Zone.current.wrap(fn, \\\"User-wrapped method\\\");\\r\\n        }\\r\\n        return fn;\\r\\n    };\\r\\n    /**\\r\\n     *  Enables the CorrelationContextManager.\\r\\n     */\\r\\n    CorrelationContextManager.enable = function () {\\r\\n        if (this.enabled) {\\r\\n            return;\\r\\n        }\\r\\n        if (!this.isNodeVersionCompatible()) {\\r\\n            this.enabled = false;\\r\\n            return;\\r\\n        }\\r\\n        // Run patches for Zone.js\\r\\n        if (!CorrelationContextManager.hasEverEnabled) {\\r\\n            this.hasEverEnabled = true;\\r\\n            // Load in Zone.js\\r\\n            try {\\r\\n                // Require zone if we can't detect its presence - guarded because of issue #346\\r\\n                // Note that usually multiple requires of zone.js does not error - but we see reports of it happening\\r\\n                // in the Azure Functions environment.\\r\\n                // This indicates that the file is being included multiple times in the same global scope,\\r\\n                // averting require's cache somehow.\\r\\n                if (typeof Zone === \\\"undefined\\\") {\\r\\n                    require(\\\"zone.js\\\");\\r\\n                }\\r\\n            }\\r\\n            catch (e) {\\r\\n                // Zone was already loaded even though we couldn't find its global variable\\r\\n                Logging.warn(\\\"Failed to require zone.js\\\");\\r\\n            }\\r\\n            DiagChannel.registerContextPreservation(function (cb) {\\r\\n                return Zone.current.wrap(cb, \\\"AI-ContextPreservation\\\");\\r\\n            });\\r\\n            this.patchError();\\r\\n            this.patchTimers([\\\"setTimeout\\\", \\\"setInterval\\\"]);\\r\\n        }\\r\\n        this.enabled = true;\\r\\n    };\\r\\n    /**\\r\\n     *  Disables the CorrelationContextManager.\\r\\n     */\\r\\n    CorrelationContextManager.disable = function () {\\r\\n        this.enabled = false;\\r\\n    };\\r\\n    /**\\r\\n     *  Reports if the CorrelationContextManager is able to run in this environment\\r\\n     */\\r\\n    CorrelationContextManager.isNodeVersionCompatible = function () {\\r\\n        // Unit tests warn of errors < 3.3 from timer patching. All versions before 4 were 0.x\\r\\n        var nodeVer = process.versions.node.split(\\\".\\\");\\r\\n        return parseInt(nodeVer[0]) > 3 || (parseInt(nodeVer[0]) > 2 && parseInt(nodeVer[1]) > 2);\\r\\n    };\\r\\n    // Zone.js breaks concatenation of timer return values.\\r\\n    // This fixes that.\\r\\n    CorrelationContextManager.patchTimers = function (methodNames) {\\r\\n        methodNames.forEach(function (methodName) {\\r\\n            var orig = global[methodName];\\r\\n            global[methodName] = function () {\\r\\n                var ret = orig.apply(this, arguments);\\r\\n                ret.toString = function () {\\r\\n                    if (this.data && typeof this.data.handleId !== 'undefined') {\\r\\n                        return this.data.handleId.toString();\\r\\n                    }\\r\\n                    else {\\r\\n                        return Object.prototype.toString.call(this);\\r\\n                    }\\r\\n                };\\r\\n                return ret;\\r\\n            };\\r\\n        });\\r\\n    };\\r\\n    // Zone.js breaks deepEqual on error objects (by making internal properties enumerable).\\r\\n    // This fixes that by subclassing the error object and making all properties not enumerable\\r\\n    CorrelationContextManager.patchError = function () {\\r\\n        var orig = global.Error;\\r\\n        // New error handler\\r\\n        function AppInsightsAsyncCorrelatedErrorWrapper() {\\r\\n            if (!(this instanceof AppInsightsAsyncCorrelatedErrorWrapper)) {\\r\\n                return AppInsightsAsyncCorrelatedErrorWrapper.apply(Object.create(AppInsightsAsyncCorrelatedErrorWrapper.prototype), arguments);\\r\\n            }\\r\\n            // Is this object set to rewrite the stack?\\r\\n            // If so, we should turn off some Zone stuff that is prone to break\\r\\n            var stackRewrite = orig.stackRewrite;\\r\\n            if (orig.prepareStackTrace) {\\r\\n                orig.stackRewrite = false;\\r\\n                var stackTrace = orig.prepareStackTrace;\\r\\n                orig.prepareStackTrace = function (e, s) {\\r\\n                    // Remove some AI and Zone methods from the stack trace\\r\\n                    // Otherwise we leave side-effects\\r\\n                    // Algorithm is to find the first frame on the stack after the first instance(s)\\r\\n                    // of AutoCollection/CorrelationContextManager\\r\\n                    // Eg. this should return the User frame on an array like below:\\r\\n                    //  Zone | Zone | CorrelationContextManager | CorrelationContextManager | User\\r\\n                    var foundOne = false;\\r\\n                    for (var i = 0; i < s.length; i++) {\\r\\n                        var fileName = s[i].getFileName();\\r\\n                        if (fileName) {\\r\\n                            if (fileName.indexOf(\\\"AutoCollection/CorrelationContextManager\\\") === -1 &&\\r\\n                                fileName.indexOf(\\\"AutoCollection\\\\\\\\CorrelationContextManager\\\") === -1) {\\r\\n                                if (foundOne) {\\r\\n                                    break;\\r\\n                                }\\r\\n                            }\\r\\n                            else {\\r\\n                                foundOne = true;\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                    // Loop above goes one extra step\\r\\n                    i = Math.max(0, i - 1);\\r\\n                    if (foundOne) {\\r\\n                        s.splice(0, i);\\r\\n                    }\\r\\n                    return stackTrace(e, s);\\r\\n                };\\r\\n            }\\r\\n            // Apply the error constructor\\r\\n            orig.apply(this, arguments);\\r\\n            // Restore Zone stack rewriting settings\\r\\n            orig.stackRewrite = stackRewrite;\\r\\n            // Remove unexpected bits from stack trace\\r\\n            if (this.stack && typeof this.stack === \\\"string\\\") {\\r\\n                var stackFrames = this.stack.split(\\\"\\\\n\\\");\\r\\n                // Remove this class\\r\\n                if (stackFrames.length > 3) {\\r\\n                    if (stackFrames[2].trim().indexOf(\\\"at Error.AppInsightsAsyncCorrelatedErrorWrapper\\\") === 0) {\\r\\n                        stackFrames.splice(2, 1);\\r\\n                    }\\r\\n                    else if (stackFrames[1].trim().indexOf(\\\"at AppInsightsAsyncCorrelatedErrorWrapper.ZoneAwareError\\\") === 0\\r\\n                        && stackFrames[2].trim().indexOf(\\\"at new AppInsightsAsyncCorrelatedErrorWrapper\\\") === 0) {\\r\\n                        stackFrames.splice(1, 2);\\r\\n                    }\\r\\n                }\\r\\n                // Remove AI correlation ids\\r\\n                this.stack = stackFrames.map(function (v) {\\r\\n                    var startIndex = v.indexOf(\\\") [\\\");\\r\\n                    if (startIndex > -1) {\\r\\n                        v = v.substr(0, startIndex + 1);\\r\\n                    }\\r\\n                    return v;\\r\\n                }).join(\\\"\\\\n\\\");\\r\\n            }\\r\\n            // getOwnPropertyNames should be a superset of Object.keys...\\r\\n            // This appears to not always be the case\\r\\n            var props = Object.getOwnPropertyNames(this).concat(Object.keys(this));\\r\\n            // Zone.js will automatically create some hidden properties at read time.\\r\\n            // We need to proactively make those not enumerable as well as the currently visible properties\\r\\n            for (var i = 0; i < props.length; i++) {\\r\\n                var propertyName = props[i];\\r\\n                var hiddenPropertyName = Zone['__symbol__'](propertyName);\\r\\n                Object.defineProperty(this, propertyName, { enumerable: false });\\r\\n                Object.defineProperty(this, hiddenPropertyName, { enumerable: false, writable: true });\\r\\n            }\\r\\n            return this;\\r\\n        }\\r\\n        // Inherit from the Zone.js error handler\\r\\n        AppInsightsAsyncCorrelatedErrorWrapper.prototype = orig.prototype;\\r\\n        // We need this loop to copy outer methods like Error.captureStackTrace\\r\\n        var props = Object.getOwnPropertyNames(orig);\\r\\n        for (var i = 0; i < props.length; i++) {\\r\\n            var propertyName = props[i];\\r\\n            if (!AppInsightsAsyncCorrelatedErrorWrapper[propertyName]) {\\r\\n                Object.defineProperty(AppInsightsAsyncCorrelatedErrorWrapper, propertyName, Object.getOwnPropertyDescriptor(orig, propertyName));\\r\\n            }\\r\\n        }\\r\\n        // explicit cast to <any> required to avoid type error for captureStackTrace\\r\\n        // with latest node.d.ts (despite workaround above)\\r\\n        global.Error = AppInsightsAsyncCorrelatedErrorWrapper;\\r\\n    };\\r\\n    CorrelationContextManager.enabled = false;\\r\\n    CorrelationContextManager.hasEverEnabled = false;\\r\\n    return CorrelationContextManager;\\r\\n}());\\r\\nexports.CorrelationContextManager = CorrelationContextManager;\\r\\nvar CustomPropertiesImpl = (function () {\\r\\n    function CustomPropertiesImpl(header) {\\r\\n        this.props = [];\\r\\n        this.addHeaderData(header);\\r\\n    }\\r\\n    CustomPropertiesImpl.prototype.addHeaderData = function (header) {\\r\\n        var keyvals = header ? header.split(\\\", \\\") : [];\\r\\n        this.props = keyvals.map(function (keyval) {\\r\\n            var parts = keyval.split(\\\"=\\\");\\r\\n            return { key: parts[0], value: parts[1] };\\r\\n        }).concat(this.props);\\r\\n    };\\r\\n    CustomPropertiesImpl.prototype.serializeToHeader = function () {\\r\\n        return this.props.map(function (keyval) {\\r\\n            return keyval.key + \\\"=\\\" + keyval.value;\\r\\n        }).join(\\\", \\\");\\r\\n    };\\r\\n    CustomPropertiesImpl.prototype.getProperty = function (prop) {\\r\\n        for (var i = 0; i < this.props.length; ++i) {\\r\\n            var keyval = this.props[i];\\r\\n            if (keyval.key === prop) {\\r\\n                return keyval.value;\\r\\n            }\\r\\n        }\\r\\n        return;\\r\\n    };\\r\\n    // TODO: Strictly according to the spec, properties which are recieved from\\r\\n    // an incoming request should be left untouched, while we may add our own new\\r\\n    // properties. The logic here will need to change to track that.\\r\\n    CustomPropertiesImpl.prototype.setProperty = function (prop, val) {\\r\\n        if (CustomPropertiesImpl.bannedCharacters.test(prop) || CustomPropertiesImpl.bannedCharacters.test(val)) {\\r\\n            Logging.warn(\\\"Correlation context property keys and values must not contain ',' or '='. setProperty was called with key: \\\" + prop + \\\" and value: \\\" + val);\\r\\n            return;\\r\\n        }\\r\\n        for (var i = 0; i < this.props.length; ++i) {\\r\\n            var keyval = this.props[i];\\r\\n            if (keyval.key === prop) {\\r\\n                keyval.value = val;\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        this.props.push({ key: prop, value: val });\\r\\n    };\\r\\n    CustomPropertiesImpl.bannedCharacters = /[,=]/;\\r\\n    return CustomPropertiesImpl;\\r\\n}());\\r\\n//# sourceMappingURL=CorrelationContextManager.js.map\",\"\\\"use strict\\\";\\r\\nmodule.exports = {\\r\\n    /**\\r\\n     * Request-Context header\\r\\n     */\\r\\n    requestContextHeader: \\\"request-context\\\",\\r\\n    /**\\r\\n     * Source instrumentation header that is added by an application while making http\\r\\n     * requests and retrieved by the other application when processing incoming requests.\\r\\n     */\\r\\n    requestContextSourceKey: \\\"appId\\\",\\r\\n    /**\\r\\n     * Target instrumentation header that is added to the response and retrieved by the\\r\\n     * calling application when processing incoming responses.\\r\\n     */\\r\\n    requestContextTargetKey: \\\"appId\\\",\\r\\n    /**\\r\\n     * Request-Id header\\r\\n     */\\r\\n    requestIdHeader: \\\"request-id\\\",\\r\\n    /**\\r\\n     * Legacy Header containing the id of the immidiate caller\\r\\n     */\\r\\n    parentIdHeader: \\\"x-ms-request-id\\\",\\r\\n    /**\\r\\n     * Legacy Header containing the correlation id that kept the same for every telemetry item\\r\\n     * accross transactions\\r\\n     */\\r\\n    rootIdHeader: \\\"x-ms-request-root-id\\\",\\r\\n    /**\\r\\n     * Correlation-Context header\\r\\n     *\\r\\n     * Not currently actively used, but the contents should be passed from incoming to outgoing requests\\r\\n     */\\r\\n    correlationContextHeader: \\\"correlation-context\\\"\\r\\n};\\r\\n//# sourceMappingURL=RequestResponseHeaders.js.map\",\"module.exports = require(\\\"url\\\");\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { promises as fs, exists } from 'fs';\\nimport * as path from 'path';\\nimport * as os from 'os';\\nimport * as cp from 'child_process';\\nimport * as which from 'which';\\nimport { EventEmitter } from 'events';\\nimport iconv = require('iconv-lite');\\nimport * as filetype from 'file-type';\\nimport { assign, groupBy, IDisposable, toDisposable, dispose, mkdirp, readBytes, detectUnicodeEncoding, Encoding, onceEvent, splitInChunks, Limiter } from './util';\\nimport { CancellationToken, Progress, Uri } from 'vscode';\\nimport { URI } from 'vscode-uri';\\nimport { detectEncoding } from './encoding';\\nimport { Ref, RefType, Branch, Remote, GitErrorCodes, LogOptions, Change, Status, CommitOptions } from './api/git';\\nimport * as byline from 'byline';\\nimport { StringDecoder } from 'string_decoder';\\n\\n// https://github.com/microsoft/vscode/issues/65693\\nconst MAX_CLI_LENGTH = 30000;\\n\\nexport interface IGit {\\n\\tpath: string;\\n\\tversion: string;\\n}\\n\\nexport interface IFileStatus {\\n\\tx: string;\\n\\ty: string;\\n\\tpath: string;\\n\\trename?: string;\\n}\\n\\nexport interface Stash {\\n\\tindex: number;\\n\\tdescription: string;\\n}\\n\\ninterface MutableRemote extends Remote {\\n\\tfetchUrl?: string;\\n\\tpushUrl?: string;\\n\\tisReadOnly: boolean;\\n}\\n\\n// TODO[ECA]: Move to git.d.ts once we are good with the api\\n/**\\n * Log file options.\\n */\\nexport interface LogFileOptions {\\n\\t/** Optional. The maximum number of log entries to retrieve. */\\n\\treadonly maxEntries?: number | string;\\n\\t/** Optional. The Git sha (hash) to start retrieving log entries from. */\\n\\treadonly hash?: string;\\n\\t/** Optional. Specifies whether to start retrieving log entries in reverse order. */\\n\\treadonly reverse?: boolean;\\n\\treadonly sortByAuthorDate?: boolean;\\n}\\n\\nfunction parseVersion(raw: string): string {\\n\\treturn raw.replace(/^git version /, '');\\n}\\n\\nfunction findSpecificGit(path: string, onLookup: (path: string) => void): Promise<IGit> {\\n\\treturn new Promise<IGit>((c, e) => {\\n\\t\\tonLookup(path);\\n\\n\\t\\tconst buffers: Buffer[] = [];\\n\\t\\tconst child = cp.spawn(path, ['--version']);\\n\\t\\tchild.stdout.on('data', (b: Buffer) => buffers.push(b));\\n\\t\\tchild.on('error', cpErrorHandler(e));\\n\\t\\tchild.on('exit', code => code ? e(new Error('Not found')) : c({ path, version: parseVersion(Buffer.concat(buffers).toString('utf8').trim()) }));\\n\\t});\\n}\\n\\nfunction findGitDarwin(onLookup: (path: string) => void): Promise<IGit> {\\n\\treturn new Promise<IGit>((c, e) => {\\n\\t\\tcp.exec('which git', (err, gitPathBuffer) => {\\n\\t\\t\\tif (err) {\\n\\t\\t\\t\\treturn e('git not found');\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst path = gitPathBuffer.toString().replace(/^\\\\s+|\\\\s+$/g, '');\\n\\n\\t\\t\\tfunction getVersion(path: string) {\\n\\t\\t\\t\\tonLookup(path);\\n\\n\\t\\t\\t\\t// make sure git executes\\n\\t\\t\\t\\tcp.exec('git --version', (err, stdout) => {\\n\\n\\t\\t\\t\\t\\tif (err) {\\n\\t\\t\\t\\t\\t\\treturn e('git not found');\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn c({ path, version: parseVersion(stdout.trim()) });\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (path !== '/usr/bin/git') {\\n\\t\\t\\t\\treturn getVersion(path);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// must check if XCode is installed\\n\\t\\t\\tcp.exec('xcode-select -p', (err: any) => {\\n\\t\\t\\t\\tif (err && err.code === 2) {\\n\\t\\t\\t\\t\\t// git is not installed, and launching /usr/bin/git\\n\\t\\t\\t\\t\\t// will prompt the user to install it\\n\\n\\t\\t\\t\\t\\treturn e('git not found');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgetVersion(path);\\n\\t\\t\\t});\\n\\t\\t});\\n\\t});\\n}\\n\\nfunction findSystemGitWin32(base: string, onLookup: (path: string) => void): Promise<IGit> {\\n\\tif (!base) {\\n\\t\\treturn Promise.reject<IGit>('Not found');\\n\\t}\\n\\n\\treturn findSpecificGit(path.join(base, 'Git', 'cmd', 'git.exe'), onLookup);\\n}\\n\\nfunction findGitWin32InPath(onLookup: (path: string) => void): Promise<IGit> {\\n\\tconst whichPromise = new Promise<string>((c, e) => which('git.exe', (err, path) => err ? e(err) : c(path)));\\n\\treturn whichPromise.then(path => findSpecificGit(path, onLookup));\\n}\\n\\nfunction findGitWin32(onLookup: (path: string) => void): Promise<IGit> {\\n\\treturn findSystemGitWin32(process.env['ProgramW6432'] as string, onLookup)\\n\\t\\t.then(undefined, () => findSystemGitWin32(process.env['ProgramFiles(x86)'] as string, onLookup))\\n\\t\\t.then(undefined, () => findSystemGitWin32(process.env['ProgramFiles'] as string, onLookup))\\n\\t\\t.then(undefined, () => findSystemGitWin32(path.join(process.env['LocalAppData'] as string, 'Programs'), onLookup))\\n\\t\\t.then(undefined, () => findGitWin32InPath(onLookup));\\n}\\n\\nexport function findGit(hint: string | undefined, onLookup: (path: string) => void): Promise<IGit> {\\n\\tconst first = hint ? findSpecificGit(hint, onLookup) : Promise.reject<IGit>(null);\\n\\n\\treturn first\\n\\t\\t.then(undefined, () => {\\n\\t\\t\\tswitch (process.platform) {\\n\\t\\t\\t\\tcase 'darwin': return findGitDarwin(onLookup);\\n\\t\\t\\t\\tcase 'win32': return findGitWin32(onLookup);\\n\\t\\t\\t\\tdefault: return findSpecificGit('git', onLookup);\\n\\t\\t\\t}\\n\\t\\t})\\n\\t\\t.then(null, () => Promise.reject(new Error('Git installation not found.')));\\n}\\n\\nexport interface IExecutionResult<T extends string | Buffer> {\\n\\texitCode: number;\\n\\tstdout: T;\\n\\tstderr: string;\\n}\\n\\nfunction cpErrorHandler(cb: (reason?: any) => void): (reason?: any) => void {\\n\\treturn err => {\\n\\t\\tif (/ENOENT/.test(err.message)) {\\n\\t\\t\\terr = new GitError({\\n\\t\\t\\t\\terror: err,\\n\\t\\t\\t\\tmessage: 'Failed to execute git (ENOENT)',\\n\\t\\t\\t\\tgitErrorCode: GitErrorCodes.NotAGitRepository\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tcb(err);\\n\\t};\\n}\\n\\nexport interface SpawnOptions extends cp.SpawnOptions {\\n\\tinput?: string;\\n\\tencoding?: string;\\n\\tlog?: boolean;\\n\\tcancellationToken?: CancellationToken;\\n\\tonSpawn?: (childProcess: cp.ChildProcess) => void;\\n}\\n\\nasync function exec(child: cp.ChildProcess, cancellationToken?: CancellationToken): Promise<IExecutionResult<Buffer>> {\\n\\tif (!child.stdout || !child.stderr) {\\n\\t\\tthrow new GitError({ message: 'Failed to get stdout or stderr from git process.' });\\n\\t}\\n\\n\\tif (cancellationToken && cancellationToken.isCancellationRequested) {\\n\\t\\tthrow new GitError({ message: 'Cancelled' });\\n\\t}\\n\\n\\tconst disposables: IDisposable[] = [];\\n\\n\\tconst once = (ee: NodeJS.EventEmitter, name: string, fn: (...args: any[]) => void) => {\\n\\t\\tee.once(name, fn);\\n\\t\\tdisposables.push(toDisposable(() => ee.removeListener(name, fn)));\\n\\t};\\n\\n\\tconst on = (ee: NodeJS.EventEmitter, name: string, fn: (...args: any[]) => void) => {\\n\\t\\tee.on(name, fn);\\n\\t\\tdisposables.push(toDisposable(() => ee.removeListener(name, fn)));\\n\\t};\\n\\n\\tlet result = Promise.all<any>([\\n\\t\\tnew Promise<number>((c, e) => {\\n\\t\\t\\tonce(child, 'error', cpErrorHandler(e));\\n\\t\\t\\tonce(child, 'exit', c);\\n\\t\\t}),\\n\\t\\tnew Promise<Buffer>(c => {\\n\\t\\t\\tconst buffers: Buffer[] = [];\\n\\t\\t\\ton(child.stdout!, 'data', (b: Buffer) => buffers.push(b));\\n\\t\\t\\tonce(child.stdout!, 'close', () => c(Buffer.concat(buffers)));\\n\\t\\t}),\\n\\t\\tnew Promise<string>(c => {\\n\\t\\t\\tconst buffers: Buffer[] = [];\\n\\t\\t\\ton(child.stderr!, 'data', (b: Buffer) => buffers.push(b));\\n\\t\\t\\tonce(child.stderr!, 'close', () => c(Buffer.concat(buffers).toString('utf8')));\\n\\t\\t})\\n\\t]) as Promise<[number, Buffer, string]>;\\n\\n\\tif (cancellationToken) {\\n\\t\\tconst cancellationPromise = new Promise<[number, Buffer, string]>((_, e) => {\\n\\t\\t\\tonceEvent(cancellationToken.onCancellationRequested)(() => {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tchild.kill();\\n\\t\\t\\t\\t} catch (err) {\\n\\t\\t\\t\\t\\t// noop\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\te(new GitError({ message: 'Cancelled' }));\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tresult = Promise.race([result, cancellationPromise]);\\n\\t}\\n\\n\\ttry {\\n\\t\\tconst [exitCode, stdout, stderr] = await result;\\n\\t\\treturn { exitCode, stdout, stderr };\\n\\t} finally {\\n\\t\\tdispose(disposables);\\n\\t}\\n}\\n\\nexport interface IGitErrorData {\\n\\terror?: Error;\\n\\tmessage?: string;\\n\\tstdout?: string;\\n\\tstderr?: string;\\n\\texitCode?: number;\\n\\tgitErrorCode?: string;\\n\\tgitCommand?: string;\\n}\\n\\nexport class GitError {\\n\\n\\terror?: Error;\\n\\tmessage: string;\\n\\tstdout?: string;\\n\\tstderr?: string;\\n\\texitCode?: number;\\n\\tgitErrorCode?: string;\\n\\tgitCommand?: string;\\n\\n\\tconstructor(data: IGitErrorData) {\\n\\t\\tif (data.error) {\\n\\t\\t\\tthis.error = data.error;\\n\\t\\t\\tthis.message = data.error.message;\\n\\t\\t} else {\\n\\t\\t\\tthis.error = undefined;\\n\\t\\t\\tthis.message = '';\\n\\t\\t}\\n\\n\\t\\tthis.message = this.message || data.message || 'Git error';\\n\\t\\tthis.stdout = data.stdout;\\n\\t\\tthis.stderr = data.stderr;\\n\\t\\tthis.exitCode = data.exitCode;\\n\\t\\tthis.gitErrorCode = data.gitErrorCode;\\n\\t\\tthis.gitCommand = data.gitCommand;\\n\\t}\\n\\n\\ttoString(): string {\\n\\t\\tlet result = this.message + ' ' + JSON.stringify({\\n\\t\\t\\texitCode: this.exitCode,\\n\\t\\t\\tgitErrorCode: this.gitErrorCode,\\n\\t\\t\\tgitCommand: this.gitCommand,\\n\\t\\t\\tstdout: this.stdout,\\n\\t\\t\\tstderr: this.stderr\\n\\t\\t}, null, 2);\\n\\n\\t\\tif (this.error) {\\n\\t\\t\\tresult += (<any>this.error).stack;\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n}\\n\\nexport interface IGitOptions {\\n\\tgitPath: string;\\n\\tversion: string;\\n\\tenv?: any;\\n}\\n\\nfunction getGitErrorCode(stderr: string): string | undefined {\\n\\tif (/Another git process seems to be running in this repository|If no other git process is currently running/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.RepositoryIsLocked;\\n\\t} else if (/Authentication failed/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.AuthenticationFailed;\\n\\t} else if (/Not a git repository/i.test(stderr)) {\\n\\t\\treturn GitErrorCodes.NotAGitRepository;\\n\\t} else if (/bad config file/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.BadConfigFile;\\n\\t} else if (/cannot make pipe for command substitution|cannot create standard input pipe/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.CantCreatePipe;\\n\\t} else if (/Repository not found/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.RepositoryNotFound;\\n\\t} else if (/unable to access/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.CantAccessRemote;\\n\\t} else if (/branch '.+' is not fully merged/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.BranchNotFullyMerged;\\n\\t} else if (/Couldn\\\\'t find remote ref/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.NoRemoteReference;\\n\\t} else if (/A branch named '.+' already exists/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.BranchAlreadyExists;\\n\\t} else if (/'.+' is not a valid branch name/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.InvalidBranchName;\\n\\t} else if (/Please,? commit your changes or stash them/.test(stderr)) {\\n\\t\\treturn GitErrorCodes.DirtyWorkTree;\\n\\t}\\n\\n\\treturn undefined;\\n}\\n\\n// https://github.com/microsoft/vscode/issues/89373\\n// https://github.com/git-for-windows/git/issues/2478\\nfunction sanitizePath(path: string): string {\\n\\treturn path.replace(/^([a-z]):\\\\\\\\/i, (_, letter) => `${letter.toUpperCase()}:\\\\\\\\`);\\n}\\n\\nconst COMMIT_FORMAT = '%H%n%aN%n%aE%n%at%n%ct%n%P%n%B';\\n\\nexport class Git {\\n\\n\\treadonly path: string;\\n\\tprivate env: any;\\n\\n\\tprivate _onOutput = new EventEmitter();\\n\\tget onOutput(): EventEmitter { return this._onOutput; }\\n\\n\\tconstructor(options: IGitOptions) {\\n\\t\\tthis.path = options.gitPath;\\n\\t\\tthis.env = options.env || {};\\n\\t}\\n\\n\\topen(repository: string, dotGit: string): Repository {\\n\\t\\treturn new Repository(this, repository, dotGit);\\n\\t}\\n\\n\\tasync init(repository: string): Promise<void> {\\n\\t\\tawait this.exec(repository, ['init']);\\n\\t\\treturn;\\n\\t}\\n\\n\\tasync clone(url: string, parentPath: string, progress: Progress<{ increment: number }>, cancellationToken?: CancellationToken): Promise<string> {\\n\\t\\tlet baseFolderName = decodeURI(url).replace(/[\\\\/]+$/, '').replace(/^.*[\\\\/\\\\\\\\]/, '').replace(/\\\\.git$/, '') || 'repository';\\n\\t\\tlet folderName = baseFolderName;\\n\\t\\tlet folderPath = path.join(parentPath, folderName);\\n\\t\\tlet count = 1;\\n\\n\\t\\twhile (count < 20 && await new Promise(c => exists(folderPath, c))) {\\n\\t\\t\\tfolderName = `${baseFolderName}-${count++}`;\\n\\t\\t\\tfolderPath = path.join(parentPath, folderName);\\n\\t\\t}\\n\\n\\t\\tawait mkdirp(parentPath);\\n\\n\\t\\tconst onSpawn = (child: cp.ChildProcess) => {\\n\\t\\t\\tconst decoder = new StringDecoder('utf8');\\n\\t\\t\\tconst lineStream = new byline.LineStream({ encoding: 'utf8' });\\n\\t\\t\\tchild.stderr!.on('data', (buffer: Buffer) => lineStream.write(decoder.write(buffer)));\\n\\n\\t\\t\\tlet totalProgress = 0;\\n\\t\\t\\tlet previousProgress = 0;\\n\\n\\t\\t\\tlineStream.on('data', (line: string) => {\\n\\t\\t\\t\\tlet match: RegExpMatchArray | null = null;\\n\\n\\t\\t\\t\\tif (match = /Counting objects:\\\\s*(\\\\d+)%/i.exec(line)) {\\n\\t\\t\\t\\t\\ttotalProgress = Math.floor(parseInt(match[1]) * 0.1);\\n\\t\\t\\t\\t} else if (match = /Compressing objects:\\\\s*(\\\\d+)%/i.exec(line)) {\\n\\t\\t\\t\\t\\ttotalProgress = 10 + Math.floor(parseInt(match[1]) * 0.1);\\n\\t\\t\\t\\t} else if (match = /Receiving objects:\\\\s*(\\\\d+)%/i.exec(line)) {\\n\\t\\t\\t\\t\\ttotalProgress = 20 + Math.floor(parseInt(match[1]) * 0.4);\\n\\t\\t\\t\\t} else if (match = /Resolving deltas:\\\\s*(\\\\d+)%/i.exec(line)) {\\n\\t\\t\\t\\t\\ttotalProgress = 60 + Math.floor(parseInt(match[1]) * 0.4);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (totalProgress !== previousProgress) {\\n\\t\\t\\t\\t\\tprogress.report({ increment: totalProgress - previousProgress });\\n\\t\\t\\t\\t\\tpreviousProgress = totalProgress;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t};\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.exec(parentPath, ['clone', url.includes(' ') ? encodeURI(url) : url, folderPath, '--progress'], { cancellationToken, onSpawn });\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (err.stderr) {\\n\\t\\t\\t\\terr.stderr = err.stderr.replace(/^Cloning.+$/m, '').trim();\\n\\t\\t\\t\\terr.stderr = err.stderr.replace(/^ERROR:\\\\s+/, '').trim();\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\n\\t\\treturn folderPath;\\n\\t}\\n\\n\\tasync getRepositoryRoot(repositoryPath: string): Promise<string> {\\n\\t\\tconst result = await this.exec(repositoryPath, ['rev-parse', '--show-toplevel']);\\n\\t\\t// Keep trailing spaces which are part of the directory name\\n\\t\\treturn path.normalize(result.stdout.trimLeft().replace(/(\\\\r\\\\n|\\\\r|\\\\n)+$/, ''));\\n\\t}\\n\\n\\tasync getRepositoryDotGit(repositoryPath: string): Promise<string> {\\n\\t\\tconst result = await this.exec(repositoryPath, ['rev-parse', '--git-dir']);\\n\\t\\tlet dotGitPath = result.stdout.trim();\\n\\n\\t\\tif (!path.isAbsolute(dotGitPath)) {\\n\\t\\t\\tdotGitPath = path.join(repositoryPath, dotGitPath);\\n\\t\\t}\\n\\n\\t\\treturn path.normalize(dotGitPath);\\n\\t}\\n\\n\\tasync exec(cwd: string, args: string[], options: SpawnOptions = {}): Promise<IExecutionResult<string>> {\\n\\t\\toptions = assign({ cwd }, options || {});\\n\\t\\treturn await this._exec(args, options);\\n\\t}\\n\\n\\tasync exec2(args: string[], options: SpawnOptions = {}): Promise<IExecutionResult<string>> {\\n\\t\\treturn await this._exec(args, options);\\n\\t}\\n\\n\\tstream(cwd: string, args: string[], options: SpawnOptions = {}): cp.ChildProcess {\\n\\t\\toptions = assign({ cwd }, options || {});\\n\\t\\treturn this.spawn(args, options);\\n\\t}\\n\\n\\tprivate async _exec(args: string[], options: SpawnOptions = {}): Promise<IExecutionResult<string>> {\\n\\t\\tconst child = this.spawn(args, options);\\n\\n\\t\\tif (options.onSpawn) {\\n\\t\\t\\toptions.onSpawn(child);\\n\\t\\t}\\n\\n\\t\\tif (options.input) {\\n\\t\\t\\tchild.stdin!.end(options.input, 'utf8');\\n\\t\\t}\\n\\n\\t\\tconst bufferResult = await exec(child, options.cancellationToken);\\n\\n\\t\\tif (options.log !== false && bufferResult.stderr.length > 0) {\\n\\t\\t\\tthis.log(`${bufferResult.stderr}\\\\n`);\\n\\t\\t}\\n\\n\\t\\tlet encoding = options.encoding || 'utf8';\\n\\t\\tencoding = iconv.encodingExists(encoding) ? encoding : 'utf8';\\n\\n\\t\\tconst result: IExecutionResult<string> = {\\n\\t\\t\\texitCode: bufferResult.exitCode,\\n\\t\\t\\tstdout: iconv.decode(bufferResult.stdout, encoding),\\n\\t\\t\\tstderr: bufferResult.stderr\\n\\t\\t};\\n\\n\\t\\tif (bufferResult.exitCode) {\\n\\t\\t\\treturn Promise.reject<IExecutionResult<string>>(new GitError({\\n\\t\\t\\t\\tmessage: 'Failed to execute git',\\n\\t\\t\\t\\tstdout: result.stdout,\\n\\t\\t\\t\\tstderr: result.stderr,\\n\\t\\t\\t\\texitCode: result.exitCode,\\n\\t\\t\\t\\tgitErrorCode: getGitErrorCode(result.stderr),\\n\\t\\t\\t\\tgitCommand: args[0]\\n\\t\\t\\t}));\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tspawn(args: string[], options: SpawnOptions = {}): cp.ChildProcess {\\n\\t\\tif (!this.path) {\\n\\t\\t\\tthrow new Error('git could not be found in the system.');\\n\\t\\t}\\n\\n\\t\\tif (!options) {\\n\\t\\t\\toptions = {};\\n\\t\\t}\\n\\n\\t\\tif (!options.stdio && !options.input) {\\n\\t\\t\\toptions.stdio = ['ignore', null, null]; // Unless provided, ignore stdin and leave default streams for stdout and stderr\\n\\t\\t}\\n\\n\\t\\toptions.env = assign({}, process.env, this.env, options.env || {}, {\\n\\t\\t\\tVSCODE_GIT_COMMAND: args[0],\\n\\t\\t\\tLC_ALL: 'en_US.UTF-8',\\n\\t\\t\\tLANG: 'en_US.UTF-8'\\n\\t\\t});\\n\\n\\t\\tif (options.cwd) {\\n\\t\\t\\toptions.cwd = sanitizePath(options.cwd);\\n\\t\\t}\\n\\n\\t\\tif (options.log !== false) {\\n\\t\\t\\tthis.log(`> git ${args.join(' ')}\\\\n`);\\n\\t\\t}\\n\\n\\t\\treturn cp.spawn(this.path, args, options);\\n\\t}\\n\\n\\tprivate log(output: string): void {\\n\\t\\tthis._onOutput.emit('log', output);\\n\\t}\\n}\\n\\nexport interface Commit {\\n\\thash: string;\\n\\tmessage: string;\\n\\tparents: string[];\\n\\tauthorDate?: Date;\\n\\tauthorName?: string;\\n\\tauthorEmail?: string;\\n\\tcommitDate?: Date;\\n}\\n\\nexport class GitStatusParser {\\n\\n\\tprivate lastRaw = '';\\n\\tprivate result: IFileStatus[] = [];\\n\\n\\tget status(): IFileStatus[] {\\n\\t\\treturn this.result;\\n\\t}\\n\\n\\tupdate(raw: string): void {\\n\\t\\tlet i = 0;\\n\\t\\tlet nextI: number | undefined;\\n\\n\\t\\traw = this.lastRaw + raw;\\n\\n\\t\\twhile ((nextI = this.parseEntry(raw, i)) !== undefined) {\\n\\t\\t\\ti = nextI;\\n\\t\\t}\\n\\n\\t\\tthis.lastRaw = raw.substr(i);\\n\\t}\\n\\n\\tprivate parseEntry(raw: string, i: number): number | undefined {\\n\\t\\tif (i + 4 >= raw.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tlet lastIndex: number;\\n\\t\\tconst entry: IFileStatus = {\\n\\t\\t\\tx: raw.charAt(i++),\\n\\t\\t\\ty: raw.charAt(i++),\\n\\t\\t\\trename: undefined,\\n\\t\\t\\tpath: ''\\n\\t\\t};\\n\\n\\t\\t// space\\n\\t\\ti++;\\n\\n\\t\\tif (entry.x === 'R' || entry.x === 'C') {\\n\\t\\t\\tlastIndex = raw.indexOf('\\\\0', i);\\n\\n\\t\\t\\tif (lastIndex === -1) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tentry.rename = raw.substring(i, lastIndex);\\n\\t\\t\\ti = lastIndex + 1;\\n\\t\\t}\\n\\n\\t\\tlastIndex = raw.indexOf('\\\\0', i);\\n\\n\\t\\tif (lastIndex === -1) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tentry.path = raw.substring(i, lastIndex);\\n\\n\\t\\t// If path ends with slash, it must be a nested git repo\\n\\t\\tif (entry.path[entry.path.length - 1] !== '/') {\\n\\t\\t\\tthis.result.push(entry);\\n\\t\\t}\\n\\n\\t\\treturn lastIndex + 1;\\n\\t}\\n}\\n\\nexport interface Submodule {\\n\\tname: string;\\n\\tpath: string;\\n\\turl: string;\\n}\\n\\nexport function parseGitmodules(raw: string): Submodule[] {\\n\\tconst regex = /\\\\r?\\\\n/g;\\n\\tlet position = 0;\\n\\tlet match: RegExpExecArray | null = null;\\n\\n\\tconst result: Submodule[] = [];\\n\\tlet submodule: Partial<Submodule> = {};\\n\\n\\tfunction parseLine(line: string): void {\\n\\t\\tconst sectionMatch = /^\\\\s*\\\\[submodule \\\"([^\\\"]+)\\\"\\\\]\\\\s*$/.exec(line);\\n\\n\\t\\tif (sectionMatch) {\\n\\t\\t\\tif (submodule.name && submodule.path && submodule.url) {\\n\\t\\t\\t\\tresult.push(submodule as Submodule);\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst name = sectionMatch[1];\\n\\n\\t\\t\\tif (name) {\\n\\t\\t\\t\\tsubmodule = { name };\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!submodule) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst propertyMatch = /^\\\\s*(\\\\w+)\\\\s+=\\\\s+(.*)$/.exec(line);\\n\\n\\t\\tif (!propertyMatch) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst [, key, value] = propertyMatch;\\n\\n\\t\\tswitch (key) {\\n\\t\\t\\tcase 'path': submodule.path = value; break;\\n\\t\\t\\tcase 'url': submodule.url = value; break;\\n\\t\\t}\\n\\t}\\n\\n\\twhile (match = regex.exec(raw)) {\\n\\t\\tparseLine(raw.substring(position, match.index));\\n\\t\\tposition = match.index + match[0].length;\\n\\t}\\n\\n\\tparseLine(raw.substring(position));\\n\\n\\tif (submodule.name && submodule.path && submodule.url) {\\n\\t\\tresult.push(submodule as Submodule);\\n\\t}\\n\\n\\treturn result;\\n}\\n\\nconst commitRegex = /([0-9a-f]{40})\\\\n(.*)\\\\n(.*)\\\\n(.*)\\\\n(.*)\\\\n(.*)(?:\\\\n([^]*?))?(?:\\\\x00)/gm;\\n\\nexport function parseGitCommits(data: string): Commit[] {\\n\\tlet commits: Commit[] = [];\\n\\n\\tlet ref;\\n\\tlet authorName;\\n\\tlet authorEmail;\\n\\tlet authorDate;\\n\\tlet commitDate;\\n\\tlet parents;\\n\\tlet message;\\n\\tlet match;\\n\\n\\tdo {\\n\\t\\tmatch = commitRegex.exec(data);\\n\\t\\tif (match === null) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\n\\t\\t[, ref, authorName, authorEmail, authorDate, commitDate, parents, message] = match;\\n\\n\\t\\tif (message[message.length - 1] === '\\\\n') {\\n\\t\\t\\tmessage = message.substr(0, message.length - 1);\\n\\t\\t}\\n\\n\\t\\t// Stop excessive memory usage by using substr -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\\n\\t\\tcommits.push({\\n\\t\\t\\thash: ` ${ref}`.substr(1),\\n\\t\\t\\tmessage: ` ${message}`.substr(1),\\n\\t\\t\\tparents: parents ? parents.split(' ') : [],\\n\\t\\t\\tauthorDate: new Date(Number(authorDate) * 1000),\\n\\t\\t\\tauthorName: ` ${authorName}`.substr(1),\\n\\t\\t\\tauthorEmail: ` ${authorEmail}`.substr(1),\\n\\t\\t\\tcommitDate: new Date(Number(commitDate) * 1000),\\n\\t\\t});\\n\\t} while (true);\\n\\n\\treturn commits;\\n}\\n\\ninterface LsTreeElement {\\n\\tmode: string;\\n\\ttype: string;\\n\\tobject: string;\\n\\tsize: string;\\n\\tfile: string;\\n}\\n\\nexport function parseLsTree(raw: string): LsTreeElement[] {\\n\\treturn raw.split('\\\\n')\\n\\t\\t.filter(l => !!l)\\n\\t\\t.map(line => /^(\\\\S+)\\\\s+(\\\\S+)\\\\s+(\\\\S+)\\\\s+(\\\\S+)\\\\s+(.*)$/.exec(line)!)\\n\\t\\t.filter(m => !!m)\\n\\t\\t.map(([, mode, type, object, size, file]) => ({ mode, type, object, size, file }));\\n}\\n\\ninterface LsFilesElement {\\n\\tmode: string;\\n\\tobject: string;\\n\\tstage: string;\\n\\tfile: string;\\n}\\n\\nexport function parseLsFiles(raw: string): LsFilesElement[] {\\n\\treturn raw.split('\\\\n')\\n\\t\\t.filter(l => !!l)\\n\\t\\t.map(line => /^(\\\\S+)\\\\s+(\\\\S+)\\\\s+(\\\\S+)\\\\s+(.*)$/.exec(line)!)\\n\\t\\t.filter(m => !!m)\\n\\t\\t.map(([, mode, object, stage, file]) => ({ mode, object, stage, file }));\\n}\\n\\nexport interface PullOptions {\\n\\tunshallow?: boolean;\\n\\ttags?: boolean;\\n\\treadonly cancellationToken?: CancellationToken;\\n}\\n\\nexport enum ForcePushMode {\\n\\tForce,\\n\\tForceWithLease\\n}\\n\\nexport class Repository {\\n\\n\\tconstructor(\\n\\t\\tprivate _git: Git,\\n\\t\\tprivate repositoryRoot: string,\\n\\t\\treadonly dotGit: string\\n\\t) { }\\n\\n\\tget git(): Git {\\n\\t\\treturn this._git;\\n\\t}\\n\\n\\tget root(): string {\\n\\t\\treturn this.repositoryRoot;\\n\\t}\\n\\n\\t// TODO@Joao: rename to exec\\n\\tasync run(args: string[], options: SpawnOptions = {}): Promise<IExecutionResult<string>> {\\n\\t\\treturn await this.git.exec(this.repositoryRoot, args, options);\\n\\t}\\n\\n\\tstream(args: string[], options: SpawnOptions = {}): cp.ChildProcess {\\n\\t\\treturn this.git.stream(this.repositoryRoot, args, options);\\n\\t}\\n\\n\\tspawn(args: string[], options: SpawnOptions = {}): cp.ChildProcess {\\n\\t\\treturn this.git.spawn(args, options);\\n\\t}\\n\\n\\tasync config(scope: string, key: string, value: any = null, options: SpawnOptions = {}): Promise<string> {\\n\\t\\tconst args = ['config'];\\n\\n\\t\\tif (scope) {\\n\\t\\t\\targs.push('--' + scope);\\n\\t\\t}\\n\\n\\t\\targs.push(key);\\n\\n\\t\\tif (value) {\\n\\t\\t\\targs.push(value);\\n\\t\\t}\\n\\n\\t\\tconst result = await this.run(args, options);\\n\\t\\treturn result.stdout.trim();\\n\\t}\\n\\n\\tasync getConfigs(scope: string): Promise<{ key: string; value: string; }[]> {\\n\\t\\tconst args = ['config'];\\n\\n\\t\\tif (scope) {\\n\\t\\t\\targs.push('--' + scope);\\n\\t\\t}\\n\\n\\t\\targs.push('-l');\\n\\n\\t\\tconst result = await this.run(args);\\n\\t\\tconst lines = result.stdout.trim().split(/\\\\r|\\\\r\\\\n|\\\\n/);\\n\\n\\t\\treturn lines.map(entry => {\\n\\t\\t\\tconst equalsIndex = entry.indexOf('=');\\n\\t\\t\\treturn { key: entry.substr(0, equalsIndex), value: entry.substr(equalsIndex + 1) };\\n\\t\\t});\\n\\t}\\n\\n\\tasync log(options?: LogOptions): Promise<Commit[]> {\\n\\t\\tconst maxEntries = options?.maxEntries ?? 32;\\n\\t\\tconst args = ['log', `-n${maxEntries}`, `--format=${COMMIT_FORMAT}`, '-z', '--'];\\n\\n\\t\\tconst result = await this.run(args);\\n\\t\\tif (result.exitCode) {\\n\\t\\t\\t// An empty repo\\n\\t\\t\\treturn [];\\n\\t\\t}\\n\\n\\t\\treturn parseGitCommits(result.stdout);\\n\\t}\\n\\n\\tasync logFile(uri: Uri, options?: LogFileOptions): Promise<Commit[]> {\\n\\t\\tconst args = ['log', `--format=${COMMIT_FORMAT}`, '-z'];\\n\\n\\t\\tif (options?.maxEntries && !options?.reverse) {\\n\\t\\t\\targs.push(`-n${options.maxEntries}`);\\n\\t\\t}\\n\\n\\t\\tif (options?.hash) {\\n\\t\\t\\t// If we are reversing, we must add a range (with HEAD) because we are using --ancestry-path for better reverse walking\\n\\t\\t\\tif (options?.reverse) {\\n\\t\\t\\t\\targs.push('--reverse', '--ancestry-path', `${options.hash}..HEAD`);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\targs.push(options.hash);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (options?.sortByAuthorDate) {\\n\\t\\t\\targs.push('--author-date-order');\\n\\t\\t}\\n\\n\\t\\targs.push('--', uri.fsPath);\\n\\n\\t\\tconst result = await this.run(args);\\n\\t\\tif (result.exitCode) {\\n\\t\\t\\t// No file history, e.g. a new file or untracked\\n\\t\\t\\treturn [];\\n\\t\\t}\\n\\n\\t\\treturn parseGitCommits(result.stdout);\\n\\t}\\n\\n\\tasync bufferString(object: string, encoding: string = 'utf8', autoGuessEncoding = false): Promise<string> {\\n\\t\\tconst stdout = await this.buffer(object);\\n\\n\\t\\tif (autoGuessEncoding) {\\n\\t\\t\\tencoding = detectEncoding(stdout) || encoding;\\n\\t\\t}\\n\\n\\t\\tencoding = iconv.encodingExists(encoding) ? encoding : 'utf8';\\n\\n\\t\\treturn iconv.decode(stdout, encoding);\\n\\t}\\n\\n\\tasync buffer(object: string): Promise<Buffer> {\\n\\t\\tconst child = this.stream(['show', object]);\\n\\n\\t\\tif (!child.stdout) {\\n\\t\\t\\treturn Promise.reject<Buffer>('Can\\\\'t open file from git');\\n\\t\\t}\\n\\n\\t\\tconst { exitCode, stdout, stderr } = await exec(child);\\n\\n\\t\\tif (exitCode) {\\n\\t\\t\\tconst err = new GitError({\\n\\t\\t\\t\\tmessage: 'Could not show object.',\\n\\t\\t\\t\\texitCode\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (/exists on disk, but not in/.test(stderr)) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.WrongCase;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn Promise.reject<Buffer>(err);\\n\\t\\t}\\n\\n\\t\\treturn stdout;\\n\\t}\\n\\n\\tasync getObjectDetails(treeish: string, path: string): Promise<{ mode: string, object: string, size: number }> {\\n\\t\\tif (!treeish) { // index\\n\\t\\t\\tconst elements = await this.lsfiles(path);\\n\\n\\t\\t\\tif (elements.length === 0) {\\n\\t\\t\\t\\tthrow new GitError({ message: 'Path not known by git', gitErrorCode: GitErrorCodes.UnknownPath });\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst { mode, object } = elements[0];\\n\\t\\t\\tconst catFile = await this.run(['cat-file', '-s', object]);\\n\\t\\t\\tconst size = parseInt(catFile.stdout);\\n\\n\\t\\t\\treturn { mode, object, size };\\n\\t\\t}\\n\\n\\t\\tconst elements = await this.lstree(treeish, path);\\n\\n\\t\\tif (elements.length === 0) {\\n\\t\\t\\tthrow new GitError({ message: 'Path not known by git', gitErrorCode: GitErrorCodes.UnknownPath });\\n\\t\\t}\\n\\n\\t\\tconst { mode, object, size } = elements[0];\\n\\t\\treturn { mode, object, size: parseInt(size) };\\n\\t}\\n\\n\\tasync lstree(treeish: string, path: string): Promise<LsTreeElement[]> {\\n\\t\\tconst { stdout } = await this.run(['ls-tree', '-l', treeish, '--', sanitizePath(path)]);\\n\\t\\treturn parseLsTree(stdout);\\n\\t}\\n\\n\\tasync lsfiles(path: string): Promise<LsFilesElement[]> {\\n\\t\\tconst { stdout } = await this.run(['ls-files', '--stage', '--', sanitizePath(path)]);\\n\\t\\treturn parseLsFiles(stdout);\\n\\t}\\n\\n\\tasync getGitRelativePath(ref: string, relativePath: string): Promise<string> {\\n\\t\\tconst relativePathLowercase = relativePath.toLowerCase();\\n\\t\\tconst dirname = path.posix.dirname(relativePath) + '/';\\n\\t\\tconst elements: { file: string; }[] = ref ? await this.lstree(ref, dirname) : await this.lsfiles(dirname);\\n\\t\\tconst element = elements.filter(file => file.file.toLowerCase() === relativePathLowercase)[0];\\n\\n\\t\\tif (!element) {\\n\\t\\t\\tthrow new GitError({ message: 'Git relative path not found.' });\\n\\t\\t}\\n\\n\\t\\treturn element.file;\\n\\t}\\n\\n\\tasync detectObjectType(object: string): Promise<{ mimetype: string, encoding?: string }> {\\n\\t\\tconst child = await this.stream(['show', object]);\\n\\t\\tconst buffer = await readBytes(child.stdout!, 4100);\\n\\n\\t\\ttry {\\n\\t\\t\\tchild.kill();\\n\\t\\t} catch (err) {\\n\\t\\t\\t// noop\\n\\t\\t}\\n\\n\\t\\tconst encoding = detectUnicodeEncoding(buffer);\\n\\t\\tlet isText = true;\\n\\n\\t\\tif (encoding !== Encoding.UTF16be && encoding !== Encoding.UTF16le) {\\n\\t\\t\\tfor (let i = 0; i < buffer.length; i++) {\\n\\t\\t\\t\\tif (buffer.readInt8(i) === 0) {\\n\\t\\t\\t\\t\\tisText = false;\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!isText) {\\n\\t\\t\\tconst result = filetype(buffer);\\n\\n\\t\\t\\tif (!result) {\\n\\t\\t\\t\\treturn { mimetype: 'application/octet-stream' };\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn { mimetype: result.mime };\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (encoding) {\\n\\t\\t\\treturn { mimetype: 'text/plain', encoding };\\n\\t\\t} else {\\n\\t\\t\\t// TODO@JOAO: read the setting OUTSIDE!\\n\\t\\t\\treturn { mimetype: 'text/plain' };\\n\\t\\t}\\n\\t}\\n\\n\\tasync apply(patch: string, reverse?: boolean): Promise<void> {\\n\\t\\tconst args = ['apply', patch];\\n\\n\\t\\tif (reverse) {\\n\\t\\t\\targs.push('-R');\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/patch does not apply/.test(err.stderr)) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.PatchDoesNotApply;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync diff(cached = false): Promise<string> {\\n\\t\\tconst args = ['diff'];\\n\\n\\t\\tif (cached) {\\n\\t\\t\\targs.push('--cached');\\n\\t\\t}\\n\\n\\t\\tconst result = await this.run(args);\\n\\t\\treturn result.stdout;\\n\\t}\\n\\n\\tdiffWithHEAD(): Promise<Change[]>;\\n\\tdiffWithHEAD(path: string): Promise<string>;\\n\\tdiffWithHEAD(path?: string | undefined): Promise<string | Change[]>;\\n\\tasync diffWithHEAD(path?: string | undefined): Promise<string | Change[]> {\\n\\t\\tif (!path) {\\n\\t\\t\\treturn await this.diffFiles(false);\\n\\t\\t}\\n\\n\\t\\tconst args = ['diff', '--', sanitizePath(path)];\\n\\t\\tconst result = await this.run(args);\\n\\t\\treturn result.stdout;\\n\\t}\\n\\n\\tdiffWith(ref: string): Promise<Change[]>;\\n\\tdiffWith(ref: string, path: string): Promise<string>;\\n\\tdiffWith(ref: string, path?: string | undefined): Promise<string | Change[]>;\\n\\tasync diffWith(ref: string, path?: string): Promise<string | Change[]> {\\n\\t\\tif (!path) {\\n\\t\\t\\treturn await this.diffFiles(false, ref);\\n\\t\\t}\\n\\n\\t\\tconst args = ['diff', ref, '--', sanitizePath(path)];\\n\\t\\tconst result = await this.run(args);\\n\\t\\treturn result.stdout;\\n\\t}\\n\\n\\tdiffIndexWithHEAD(): Promise<Change[]>;\\n\\tdiffIndexWithHEAD(path: string): Promise<string>;\\n\\tdiffIndexWithHEAD(path?: string | undefined): Promise<string | Change[]>;\\n\\tasync diffIndexWithHEAD(path?: string): Promise<string | Change[]> {\\n\\t\\tif (!path) {\\n\\t\\t\\treturn await this.diffFiles(true);\\n\\t\\t}\\n\\n\\t\\tconst args = ['diff', '--cached', '--', sanitizePath(path)];\\n\\t\\tconst result = await this.run(args);\\n\\t\\treturn result.stdout;\\n\\t}\\n\\n\\tdiffIndexWith(ref: string): Promise<Change[]>;\\n\\tdiffIndexWith(ref: string, path: string): Promise<string>;\\n\\tdiffIndexWith(ref: string, path?: string | undefined): Promise<string | Change[]>;\\n\\tasync diffIndexWith(ref: string, path?: string): Promise<string | Change[]> {\\n\\t\\tif (!path) {\\n\\t\\t\\treturn await this.diffFiles(true, ref);\\n\\t\\t}\\n\\n\\t\\tconst args = ['diff', '--cached', ref, '--', sanitizePath(path)];\\n\\t\\tconst result = await this.run(args);\\n\\t\\treturn result.stdout;\\n\\t}\\n\\n\\tasync diffBlobs(object1: string, object2: string): Promise<string> {\\n\\t\\tconst args = ['diff', object1, object2];\\n\\t\\tconst result = await this.run(args);\\n\\t\\treturn result.stdout;\\n\\t}\\n\\n\\tdiffBetween(ref1: string, ref2: string): Promise<Change[]>;\\n\\tdiffBetween(ref1: string, ref2: string, path: string): Promise<string>;\\n\\tdiffBetween(ref1: string, ref2: string, path?: string | undefined): Promise<string | Change[]>;\\n\\tasync diffBetween(ref1: string, ref2: string, path?: string): Promise<string | Change[]> {\\n\\t\\tconst range = `${ref1}...${ref2}`;\\n\\t\\tif (!path) {\\n\\t\\t\\treturn await this.diffFiles(false, range);\\n\\t\\t}\\n\\n\\t\\tconst args = ['diff', range, '--', sanitizePath(path)];\\n\\t\\tconst result = await this.run(args);\\n\\n\\t\\treturn result.stdout.trim();\\n\\t}\\n\\n\\tprivate async diffFiles(cached: boolean, ref?: string): Promise<Change[]> {\\n\\t\\tconst args = ['diff', '--name-status', '-z', '--diff-filter=ADMR'];\\n\\t\\tif (cached) {\\n\\t\\t\\targs.push('--cached');\\n\\t\\t}\\n\\n\\t\\tif (ref) {\\n\\t\\t\\targs.push(ref);\\n\\t\\t}\\n\\n\\t\\tconst gitResult = await this.run(args);\\n\\t\\tif (gitResult.exitCode) {\\n\\t\\t\\treturn [];\\n\\t\\t}\\n\\n\\t\\tconst entries = gitResult.stdout.split('\\\\x00');\\n\\t\\tlet index = 0;\\n\\t\\tconst result: Change[] = [];\\n\\n\\t\\tentriesLoop:\\n\\t\\twhile (index < entries.length - 1) {\\n\\t\\t\\tconst change = entries[index++];\\n\\t\\t\\tconst resourcePath = entries[index++];\\n\\t\\t\\tif (!change || !resourcePath) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst originalUri = URI.file(path.isAbsolute(resourcePath) ? resourcePath : path.join(this.repositoryRoot, resourcePath));\\n\\t\\t\\tlet status: Status = Status.UNTRACKED;\\n\\n\\t\\t\\t// Copy or Rename status comes with a number, e.g. 'R100'. We don't need the number, so we use only first character of the status.\\n\\t\\t\\tswitch (change[0]) {\\n\\t\\t\\t\\tcase 'M':\\n\\t\\t\\t\\t\\tstatus = Status.MODIFIED;\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'A':\\n\\t\\t\\t\\t\\tstatus = Status.INDEX_ADDED;\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\tcase 'D':\\n\\t\\t\\t\\t\\tstatus = Status.DELETED;\\n\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t// Rename contains two paths, the second one is what the file is renamed/copied to.\\n\\t\\t\\t\\tcase 'R':\\n\\t\\t\\t\\t\\tif (index >= entries.length) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tconst newPath = entries[index++];\\n\\t\\t\\t\\t\\tif (!newPath) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tconst uri = URI.file(path.isAbsolute(newPath) ? newPath : path.join(this.repositoryRoot, newPath));\\n\\t\\t\\t\\t\\tresult.push({\\n\\t\\t\\t\\t\\t\\turi,\\n\\t\\t\\t\\t\\t\\trenameUri: uri,\\n\\t\\t\\t\\t\\t\\toriginalUri,\\n\\t\\t\\t\\t\\t\\tstatus: Status.INDEX_RENAMED\\n\\t\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\t\\tdefault:\\n\\t\\t\\t\\t\\t// Unknown status\\n\\t\\t\\t\\t\\tbreak entriesLoop;\\n\\t\\t\\t}\\n\\n\\t\\t\\tresult.push({\\n\\t\\t\\t\\tstatus,\\n\\t\\t\\t\\toriginalUri,\\n\\t\\t\\t\\turi: originalUri,\\n\\t\\t\\t\\trenameUri: originalUri,\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}\\n\\n\\tasync getMergeBase(ref1: string, ref2: string): Promise<string> {\\n\\t\\tconst args = ['merge-base', ref1, ref2];\\n\\t\\tconst result = await this.run(args);\\n\\n\\t\\treturn result.stdout.trim();\\n\\t}\\n\\n\\tasync hashObject(data: string): Promise<string> {\\n\\t\\tconst args = ['hash-object', '-w', '--stdin'];\\n\\t\\tconst result = await this.run(args, { input: data });\\n\\n\\t\\treturn result.stdout.trim();\\n\\t}\\n\\n\\tasync add(paths: string[], opts?: { update?: boolean }): Promise<void> {\\n\\t\\tconst args = ['add'];\\n\\n\\t\\tif (opts && opts.update) {\\n\\t\\t\\targs.push('-u');\\n\\t\\t} else {\\n\\t\\t\\targs.push('-A');\\n\\t\\t}\\n\\n\\t\\targs.push('--');\\n\\n\\t\\tif (paths && paths.length) {\\n\\t\\t\\targs.push.apply(args, paths.map(sanitizePath));\\n\\t\\t} else {\\n\\t\\t\\targs.push('.');\\n\\t\\t}\\n\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync rm(paths: string[]): Promise<void> {\\n\\t\\tconst args = ['rm', '--'];\\n\\n\\t\\tif (!paths || !paths.length) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\targs.push(...paths.map(sanitizePath));\\n\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync stage(path: string, data: string): Promise<void> {\\n\\t\\tconst child = this.stream(['hash-object', '--stdin', '-w', '--path', sanitizePath(path)], { stdio: [null, null, null] });\\n\\t\\tchild.stdin!.end(data, 'utf8');\\n\\n\\t\\tconst { exitCode, stdout } = await exec(child);\\n\\t\\tconst hash = stdout.toString('utf8');\\n\\n\\t\\tif (exitCode) {\\n\\t\\t\\tthrow new GitError({\\n\\t\\t\\t\\tmessage: 'Could not hash object.',\\n\\t\\t\\t\\texitCode: exitCode\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tconst treeish = await this.getCommit('HEAD').then(() => 'HEAD', () => '');\\n\\t\\tlet mode: string;\\n\\t\\tlet add: string = '';\\n\\n\\t\\ttry {\\n\\t\\t\\tconst details = await this.getObjectDetails(treeish, path);\\n\\t\\t\\tmode = details.mode;\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (err.gitErrorCode !== GitErrorCodes.UnknownPath) {\\n\\t\\t\\t\\tthrow err;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmode = '100644';\\n\\t\\t\\tadd = '--add';\\n\\t\\t}\\n\\n\\t\\tawait this.run(['update-index', add, '--cacheinfo', mode, hash, path]);\\n\\t}\\n\\n\\tasync checkout(treeish: string, paths: string[], opts: { track?: boolean } = Object.create(null)): Promise<void> {\\n\\t\\tconst args = ['checkout', '-q'];\\n\\n\\t\\tif (opts.track) {\\n\\t\\t\\targs.push('--track');\\n\\t\\t}\\n\\n\\t\\tif (treeish) {\\n\\t\\t\\targs.push(treeish);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tif (paths && paths.length > 0) {\\n\\t\\t\\t\\tfor (const chunk of splitInChunks(paths.map(sanitizePath), MAX_CLI_LENGTH)) {\\n\\t\\t\\t\\t\\tawait this.run([...args, '--', ...chunk]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tawait this.run(args);\\n\\t\\t\\t}\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/Please,? commit your changes or stash them/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.DirtyWorkTree;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync commit(message: string, opts: CommitOptions = Object.create(null)): Promise<void> {\\n\\t\\tconst args = ['commit', '--quiet', '--allow-empty-message', '--file', '-'];\\n\\n\\t\\tif (opts.all) {\\n\\t\\t\\targs.push('--all');\\n\\t\\t}\\n\\n\\t\\tif (opts.amend) {\\n\\t\\t\\targs.push('--amend');\\n\\t\\t}\\n\\n\\t\\tif (opts.signoff) {\\n\\t\\t\\targs.push('--signoff');\\n\\t\\t}\\n\\n\\t\\tif (opts.signCommit) {\\n\\t\\t\\targs.push('-S');\\n\\t\\t}\\n\\t\\tif (opts.empty) {\\n\\t\\t\\targs.push('--allow-empty');\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args, { input: message || '' });\\n\\t\\t} catch (commitErr) {\\n\\t\\t\\tawait this.handleCommitError(commitErr);\\n\\t\\t}\\n\\t}\\n\\n\\tasync rebaseContinue(): Promise<void> {\\n\\t\\tconst args = ['rebase', '--continue'];\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (commitErr) {\\n\\t\\t\\tawait this.handleCommitError(commitErr);\\n\\t\\t}\\n\\t}\\n\\n\\tprivate async handleCommitError(commitErr: any): Promise<void> {\\n\\t\\tif (/not possible because you have unmerged files/.test(commitErr.stderr || '')) {\\n\\t\\t\\tcommitErr.gitErrorCode = GitErrorCodes.UnmergedChanges;\\n\\t\\t\\tthrow commitErr;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(['config', '--get-all', 'user.name']);\\n\\t\\t} catch (err) {\\n\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoUserNameConfigured;\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(['config', '--get-all', 'user.email']);\\n\\t\\t} catch (err) {\\n\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoUserEmailConfigured;\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\n\\t\\tthrow commitErr;\\n\\t}\\n\\n\\tasync branch(name: string, checkout: boolean, ref?: string): Promise<void> {\\n\\t\\tconst args = checkout ? ['checkout', '-q', '-b', name, '--no-track'] : ['branch', '-q', name];\\n\\n\\t\\tif (ref) {\\n\\t\\t\\targs.push(ref);\\n\\t\\t}\\n\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync deleteBranch(name: string, force?: boolean): Promise<void> {\\n\\t\\tconst args = ['branch', force ? '-D' : '-d', name];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync renameBranch(name: string): Promise<void> {\\n\\t\\tconst args = ['branch', '-m', name];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync setBranchUpstream(name: string, upstream: string): Promise<void> {\\n\\t\\tconst args = ['branch', '--set-upstream-to', upstream, name];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync deleteRef(ref: string): Promise<void> {\\n\\t\\tconst args = ['update-ref', '-d', ref];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync merge(ref: string): Promise<void> {\\n\\t\\tconst args = ['merge', ref];\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/^CONFLICT /m.test(err.stdout || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.Conflict;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync tag(name: string, message?: string): Promise<void> {\\n\\t\\tlet args = ['tag'];\\n\\n\\t\\tif (message) {\\n\\t\\t\\targs = [...args, '-a', name, '-m', message];\\n\\t\\t} else {\\n\\t\\t\\targs = [...args, name];\\n\\t\\t}\\n\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync deleteTag(name: string): Promise<void> {\\n\\t\\tlet args = ['tag', '-d', name];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync clean(paths: string[]): Promise<void> {\\n\\t\\tconst pathsByGroup = groupBy(paths.map(sanitizePath), p => path.dirname(p));\\n\\t\\tconst groups = Object.keys(pathsByGroup).map(k => pathsByGroup[k]);\\n\\n\\t\\tconst limiter = new Limiter(5);\\n\\t\\tconst promises: Promise<any>[] = [];\\n\\n\\t\\tfor (const paths of groups) {\\n\\t\\t\\tfor (const chunk of splitInChunks(paths, MAX_CLI_LENGTH)) {\\n\\t\\t\\t\\tpromises.push(limiter.queue(() => this.run(['clean', '-f', '-q', '--', ...chunk])));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tawait Promise.all(promises);\\n\\t}\\n\\n\\tasync undo(): Promise<void> {\\n\\t\\tawait this.run(['clean', '-fd']);\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(['checkout', '--', '.']);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/did not match any file\\\\(s\\\\) known to git\\\\./.test(err.stderr || '')) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync reset(treeish: string, hard: boolean = false): Promise<void> {\\n\\t\\tconst args = ['reset', hard ? '--hard' : '--soft', treeish];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync revert(treeish: string, paths: string[]): Promise<void> {\\n\\t\\tconst result = await this.run(['branch']);\\n\\t\\tlet args: string[];\\n\\n\\t\\t// In case there are no branches, we must use rm --cached\\n\\t\\tif (!result.stdout) {\\n\\t\\t\\targs = ['rm', '--cached', '-r', '--'];\\n\\t\\t} else {\\n\\t\\t\\targs = ['reset', '-q', treeish, '--'];\\n\\t\\t}\\n\\n\\t\\tif (paths && paths.length) {\\n\\t\\t\\targs.push.apply(args, paths.map(sanitizePath));\\n\\t\\t} else {\\n\\t\\t\\targs.push('.');\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (err) {\\n\\t\\t\\t// In case there are merge conflicts to be resolved, git reset will output\\n\\t\\t\\t// some \\\"needs merge\\\" data. We try to get around that.\\n\\t\\t\\tif (/([^:]+: needs merge\\\\n)+/m.test(err.stdout || '')) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync addRemote(name: string, url: string): Promise<void> {\\n\\t\\tconst args = ['remote', 'add', name, url];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync removeRemote(name: string): Promise<void> {\\n\\t\\tconst args = ['remote', 'rm', name];\\n\\t\\tawait this.run(args);\\n\\t}\\n\\n\\tasync fetch(options: { remote?: string, ref?: string, all?: boolean, prune?: boolean, depth?: number, silent?: boolean } = {}): Promise<void> {\\n\\t\\tconst args = ['fetch'];\\n\\t\\tconst spawnOptions: SpawnOptions = {};\\n\\n\\t\\tif (options.remote) {\\n\\t\\t\\targs.push(options.remote);\\n\\n\\t\\t\\tif (options.ref) {\\n\\t\\t\\t\\targs.push(options.ref);\\n\\t\\t\\t}\\n\\t\\t} else if (options.all) {\\n\\t\\t\\targs.push('--all');\\n\\t\\t}\\n\\n\\t\\tif (options.prune) {\\n\\t\\t\\targs.push('--prune');\\n\\t\\t}\\n\\n\\t\\tif (typeof options.depth === 'number') {\\n\\t\\t\\targs.push(`--depth=${options.depth}`);\\n\\t\\t}\\n\\n\\t\\tif (options.silent) {\\n\\t\\t\\tspawnOptions.env = { 'VSCODE_GIT_FETCH_SILENT': 'true' };\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args, spawnOptions);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/No remote repository specified\\\\./.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoRemoteRepositorySpecified;\\n\\t\\t\\t} else if (/Could not read from remote repository/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.RemoteConnectionError;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync pull(rebase?: boolean, remote?: string, branch?: string, options: PullOptions = {}): Promise<void> {\\n\\t\\tconst args = ['pull'];\\n\\n\\t\\tif (options.tags) {\\n\\t\\t\\targs.push('--tags');\\n\\t\\t}\\n\\n\\t\\tif (options.unshallow) {\\n\\t\\t\\targs.push('--unshallow');\\n\\t\\t}\\n\\n\\t\\tif (rebase) {\\n\\t\\t\\targs.push('-r');\\n\\t\\t}\\n\\n\\t\\tif (remote && branch) {\\n\\t\\t\\targs.push(remote);\\n\\t\\t\\targs.push(branch);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args, options);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/^CONFLICT \\\\([^)]+\\\\): \\\\b/m.test(err.stdout || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.Conflict;\\n\\t\\t\\t} else if (/Please tell me who you are\\\\./.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoUserNameConfigured;\\n\\t\\t\\t} else if (/Could not read from remote repository/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.RemoteConnectionError;\\n\\t\\t\\t} else if (/Pull is not possible because you have unmerged files|Cannot pull with rebase: You have unstaged changes|Your local changes to the following files would be overwritten|Please, commit your changes before you can merge/i.test(err.stderr)) {\\n\\t\\t\\t\\terr.stderr = err.stderr.replace(/Cannot pull with rebase: You have unstaged changes/i, 'Cannot pull with rebase, you have unstaged changes');\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.DirtyWorkTree;\\n\\t\\t\\t} else if (/cannot lock ref|unable to update local ref/i.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.CantLockRef;\\n\\t\\t\\t} else if (/cannot rebase onto multiple branches/i.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.CantRebaseMultipleBranches;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync push(remote?: string, name?: string, setUpstream: boolean = false, tags = false, forcePushMode?: ForcePushMode): Promise<void> {\\n\\t\\tconst args = ['push'];\\n\\n\\t\\tif (forcePushMode === ForcePushMode.ForceWithLease) {\\n\\t\\t\\targs.push('--force-with-lease');\\n\\t\\t} else if (forcePushMode === ForcePushMode.Force) {\\n\\t\\t\\targs.push('--force');\\n\\t\\t}\\n\\n\\t\\tif (setUpstream) {\\n\\t\\t\\targs.push('-u');\\n\\t\\t}\\n\\n\\t\\tif (tags) {\\n\\t\\t\\targs.push('--follow-tags');\\n\\t\\t}\\n\\n\\t\\tif (remote) {\\n\\t\\t\\targs.push(remote);\\n\\t\\t}\\n\\n\\t\\tif (name) {\\n\\t\\t\\targs.push(name);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/^error: failed to push some refs to\\\\b/m.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.PushRejected;\\n\\t\\t\\t} else if (/Could not read from remote repository/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.RemoteConnectionError;\\n\\t\\t\\t} else if (/^fatal: The current branch .* has no upstream branch/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoUpstreamBranch;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync blame(path: string): Promise<string> {\\n\\t\\ttry {\\n\\t\\t\\tconst args = ['blame', sanitizePath(path)];\\n\\t\\t\\tconst result = await this.run(args);\\n\\t\\t\\treturn result.stdout.trim();\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/^fatal: no such path/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoPathFound;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync createStash(message?: string, includeUntracked?: boolean): Promise<void> {\\n\\t\\ttry {\\n\\t\\t\\tconst args = ['stash', 'push'];\\n\\n\\t\\t\\tif (includeUntracked) {\\n\\t\\t\\t\\targs.push('-u');\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (message) {\\n\\t\\t\\t\\targs.push('-m', message);\\n\\t\\t\\t}\\n\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/No local changes to save/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoLocalChanges;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync popStash(index?: number): Promise<void> {\\n\\t\\tconst args = ['stash', 'pop'];\\n\\t\\tawait this.popOrApplyStash(args, index);\\n\\t}\\n\\n\\tasync applyStash(index?: number): Promise<void> {\\n\\t\\tconst args = ['stash', 'apply'];\\n\\t\\tawait this.popOrApplyStash(args, index);\\n\\t}\\n\\n\\tprivate async popOrApplyStash(args: string[], index?: number): Promise<void> {\\n\\t\\ttry {\\n\\t\\t\\tif (typeof index === 'number') {\\n\\t\\t\\t\\targs.push(`stash@{${index}}`);\\n\\t\\t\\t}\\n\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/No stash found/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoStashFound;\\n\\t\\t\\t} else if (/error: Your local changes to the following files would be overwritten/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.LocalChangesOverwritten;\\n\\t\\t\\t} else if (/^CONFLICT/m.test(err.stdout || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.StashConflict;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tasync dropStash(index?: number): Promise<void> {\\n\\t\\tconst args = ['stash', 'drop'];\\n\\n\\t\\tif (typeof index === 'number') {\\n\\t\\t\\targs.push(`stash@{${index}}`);\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\tawait this.run(args);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/No stash found/.test(err.stderr || '')) {\\n\\t\\t\\t\\terr.gitErrorCode = GitErrorCodes.NoStashFound;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n\\n\\tgetStatus(limit = 5000): Promise<{ status: IFileStatus[]; didHitLimit: boolean; }> {\\n\\t\\treturn new Promise<{ status: IFileStatus[]; didHitLimit: boolean; }>((c, e) => {\\n\\t\\t\\tconst parser = new GitStatusParser();\\n\\t\\t\\tconst env = { GIT_OPTIONAL_LOCKS: '0' };\\n\\t\\t\\tconst child = this.stream(['status', '-z', '-u'], { env });\\n\\n\\t\\t\\tconst onExit = (exitCode: number) => {\\n\\t\\t\\t\\tif (exitCode !== 0) {\\n\\t\\t\\t\\t\\tconst stderr = stderrData.join('');\\n\\t\\t\\t\\t\\treturn e(new GitError({\\n\\t\\t\\t\\t\\t\\tmessage: 'Failed to execute git',\\n\\t\\t\\t\\t\\t\\tstderr,\\n\\t\\t\\t\\t\\t\\texitCode,\\n\\t\\t\\t\\t\\t\\tgitErrorCode: getGitErrorCode(stderr),\\n\\t\\t\\t\\t\\t\\tgitCommand: 'status'\\n\\t\\t\\t\\t\\t}));\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tc({ status: parser.status, didHitLimit: false });\\n\\t\\t\\t};\\n\\n\\t\\t\\tconst onStdoutData = (raw: string) => {\\n\\t\\t\\t\\tparser.update(raw);\\n\\n\\t\\t\\t\\tif (parser.status.length > limit) {\\n\\t\\t\\t\\t\\tchild.removeListener('exit', onExit);\\n\\t\\t\\t\\t\\tchild.stdout!.removeListener('data', onStdoutData);\\n\\t\\t\\t\\t\\tchild.kill();\\n\\n\\t\\t\\t\\t\\tc({ status: parser.status.slice(0, limit), didHitLimit: true });\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t\\tchild.stdout!.setEncoding('utf8');\\n\\t\\t\\tchild.stdout!.on('data', onStdoutData);\\n\\n\\t\\t\\tconst stderrData: string[] = [];\\n\\t\\t\\tchild.stderr!.setEncoding('utf8');\\n\\t\\t\\tchild.stderr!.on('data', raw => stderrData.push(raw as string));\\n\\n\\t\\t\\tchild.on('error', cpErrorHandler(e));\\n\\t\\t\\tchild.on('exit', onExit);\\n\\t\\t});\\n\\t}\\n\\n\\tasync getHEAD(): Promise<Ref> {\\n\\t\\ttry {\\n\\t\\t\\tconst result = await this.run(['symbolic-ref', '--short', 'HEAD']);\\n\\n\\t\\t\\tif (!result.stdout) {\\n\\t\\t\\t\\tthrow new Error('Not in a branch');\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn { name: result.stdout.trim(), commit: undefined, type: RefType.Head };\\n\\t\\t} catch (err) {\\n\\t\\t\\tconst result = await this.run(['rev-parse', 'HEAD']);\\n\\n\\t\\t\\tif (!result.stdout) {\\n\\t\\t\\t\\tthrow new Error('Error parsing HEAD');\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn { name: undefined, commit: result.stdout.trim(), type: RefType.Head };\\n\\t\\t}\\n\\t}\\n\\n\\tasync findTrackingBranches(upstreamBranch: string): Promise<Branch[]> {\\n\\t\\tconst result = await this.run(['for-each-ref', '--format', '%(refname:short)%00%(upstream:short)', 'refs/heads']);\\n\\t\\treturn result.stdout.trim().split('\\\\n')\\n\\t\\t\\t.map(line => line.trim().split('\\\\0'))\\n\\t\\t\\t.filter(([_, upstream]) => upstream === upstreamBranch)\\n\\t\\t\\t.map(([ref]) => ({ name: ref, type: RefType.Head } as Branch));\\n\\t}\\n\\n\\tasync getRefs(opts?: { sort?: 'alphabetically' | 'committerdate' }): Promise<Ref[]> {\\n\\t\\tconst args = ['for-each-ref', '--format', '%(refname) %(objectname)'];\\n\\n\\t\\tif (opts && opts.sort && opts.sort !== 'alphabetically') {\\n\\t\\t\\targs.push('--sort', `-${opts.sort}`);\\n\\t\\t}\\n\\n\\t\\tconst result = await this.run(args);\\n\\n\\t\\tconst fn = (line: string): Ref | null => {\\n\\t\\t\\tlet match: RegExpExecArray | null;\\n\\n\\t\\t\\tif (match = /^refs\\\\/heads\\\\/([^ ]+) ([0-9a-f]{40})$/.exec(line)) {\\n\\t\\t\\t\\treturn { name: match[1], commit: match[2], type: RefType.Head };\\n\\t\\t\\t} else if (match = /^refs\\\\/remotes\\\\/([^/]+)\\\\/([^ ]+) ([0-9a-f]{40})$/.exec(line)) {\\n\\t\\t\\t\\treturn { name: `${match[1]}/${match[2]}`, commit: match[3], type: RefType.RemoteHead, remote: match[1] };\\n\\t\\t\\t} else if (match = /^refs\\\\/tags\\\\/([^ ]+) ([0-9a-f]{40})$/.exec(line)) {\\n\\t\\t\\t\\treturn { name: match[1], commit: match[2], type: RefType.Tag };\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn null;\\n\\t\\t};\\n\\n\\t\\treturn result.stdout.trim().split('\\\\n')\\n\\t\\t\\t.filter(line => !!line)\\n\\t\\t\\t.map(fn)\\n\\t\\t\\t.filter(ref => !!ref) as Ref[];\\n\\t}\\n\\n\\tasync getStashes(): Promise<Stash[]> {\\n\\t\\tconst result = await this.run(['stash', 'list']);\\n\\t\\tconst regex = /^stash@{(\\\\d+)}:(.+)$/;\\n\\t\\tconst rawStashes = result.stdout.trim().split('\\\\n')\\n\\t\\t\\t.filter(b => !!b)\\n\\t\\t\\t.map(line => regex.exec(line) as RegExpExecArray)\\n\\t\\t\\t.filter(g => !!g)\\n\\t\\t\\t.map(([, index, description]: RegExpExecArray) => ({ index: parseInt(index), description }));\\n\\n\\t\\treturn rawStashes;\\n\\t}\\n\\n\\tasync getRemotes(): Promise<Remote[]> {\\n\\t\\tconst result = await this.run(['remote', '--verbose']);\\n\\t\\tconst lines = result.stdout.trim().split('\\\\n').filter(l => !!l);\\n\\t\\tconst remotes: MutableRemote[] = [];\\n\\n\\t\\tfor (const line of lines) {\\n\\t\\t\\tconst parts = line.split(/\\\\s/);\\n\\t\\t\\tconst [name, url, type] = parts;\\n\\n\\t\\t\\tlet remote = remotes.find(r => r.name === name);\\n\\n\\t\\t\\tif (!remote) {\\n\\t\\t\\t\\tremote = { name, isReadOnly: false };\\n\\t\\t\\t\\tremotes.push(remote);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (/fetch/i.test(type)) {\\n\\t\\t\\t\\tremote.fetchUrl = url;\\n\\t\\t\\t} else if (/push/i.test(type)) {\\n\\t\\t\\t\\tremote.pushUrl = url;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tremote.fetchUrl = url;\\n\\t\\t\\t\\tremote.pushUrl = url;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// https://github.com/Microsoft/vscode/issues/45271\\n\\t\\t\\tremote.isReadOnly = remote.pushUrl === undefined || remote.pushUrl === 'no_push';\\n\\t\\t}\\n\\n\\t\\treturn remotes;\\n\\t}\\n\\n\\tasync getBranch(name: string): Promise<Branch> {\\n\\t\\tif (name === 'HEAD') {\\n\\t\\t\\treturn this.getHEAD();\\n\\t\\t}\\n\\n\\t\\tlet result = await this.run(['rev-parse', name]);\\n\\n\\t\\tif (!result.stdout && /^@/.test(name)) {\\n\\t\\t\\tconst symbolicFullNameResult = await this.run(['rev-parse', '--symbolic-full-name', name]);\\n\\t\\t\\tname = symbolicFullNameResult.stdout.trim();\\n\\n\\t\\t\\tresult = await this.run(['rev-parse', name]);\\n\\t\\t}\\n\\n\\t\\tif (!result.stdout) {\\n\\t\\t\\treturn Promise.reject<Branch>(new Error('No such branch'));\\n\\t\\t}\\n\\n\\t\\tconst commit = result.stdout.trim();\\n\\n\\t\\ttry {\\n\\t\\t\\tconst res2 = await this.run(['rev-parse', '--symbolic-full-name', name + '@{u}']);\\n\\t\\t\\tconst fullUpstream = res2.stdout.trim();\\n\\t\\t\\tconst match = /^refs\\\\/remotes\\\\/([^/]+)\\\\/(.+)$/.exec(fullUpstream);\\n\\n\\t\\t\\tif (!match) {\\n\\t\\t\\t\\tthrow new Error(`Could not parse upstream branch: ${fullUpstream}`);\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst upstream = { remote: match[1], name: match[2] };\\n\\t\\t\\tconst res3 = await this.run(['rev-list', '--left-right', name + '...' + fullUpstream]);\\n\\n\\t\\t\\tlet ahead = 0, behind = 0;\\n\\t\\t\\tlet i = 0;\\n\\n\\t\\t\\twhile (i < res3.stdout.length) {\\n\\t\\t\\t\\tswitch (res3.stdout.charAt(i)) {\\n\\t\\t\\t\\t\\tcase '<': ahead++; break;\\n\\t\\t\\t\\t\\tcase '>': behind++; break;\\n\\t\\t\\t\\t\\tdefault: i++; break;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\twhile (res3.stdout.charAt(i++) !== '\\\\n') { /* no-op */ }\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn { name, type: RefType.Head, commit, upstream, ahead, behind };\\n\\t\\t} catch (err) {\\n\\t\\t\\treturn { name, type: RefType.Head, commit };\\n\\t\\t}\\n\\t}\\n\\n\\t// TODO: Support core.commentChar\\n\\tstripCommitMessageComments(message: string): string {\\n\\t\\treturn message.replace(/^\\\\s*#.*$\\\\n?/gm, '').trim();\\n\\t}\\n\\n\\tasync getMergeMessage(): Promise<string | undefined> {\\n\\t\\tconst mergeMsgPath = path.join(this.repositoryRoot, '.git', 'MERGE_MSG');\\n\\n\\t\\ttry {\\n\\t\\t\\tconst raw = await fs.readFile(mergeMsgPath, 'utf8');\\n\\t\\t\\treturn this.stripCommitMessageComments(raw);\\n\\t\\t} catch {\\n\\t\\t\\treturn undefined;\\n\\t\\t}\\n\\t}\\n\\n\\tasync getCommitTemplate(): Promise<string> {\\n\\t\\ttry {\\n\\t\\t\\tconst result = await this.run(['config', '--get', 'commit.template']);\\n\\n\\t\\t\\tif (!result.stdout) {\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t}\\n\\n\\t\\t\\t// https://github.com/git/git/blob/3a0f269e7c82aa3a87323cb7ae04ac5f129f036b/path.c#L612\\n\\t\\t\\tconst homedir = os.homedir();\\n\\t\\t\\tlet templatePath = result.stdout.trim()\\n\\t\\t\\t\\t.replace(/^~([^\\\\/]*)\\\\//, (_, user) => `${user ? path.join(path.dirname(homedir), user) : homedir}/`);\\n\\n\\t\\t\\tif (!path.isAbsolute(templatePath)) {\\n\\t\\t\\t\\ttemplatePath = path.join(this.repositoryRoot, templatePath);\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst raw = await fs.readFile(templatePath, 'utf8');\\n\\t\\t\\treturn this.stripCommitMessageComments(raw);\\n\\t\\t} catch (err) {\\n\\t\\t\\treturn '';\\n\\t\\t}\\n\\t}\\n\\n\\tasync getCommit(ref: string): Promise<Commit> {\\n\\t\\tconst result = await this.run(['show', '-s', `--format=${COMMIT_FORMAT}`, '-z', ref]);\\n\\t\\tconst commits = parseGitCommits(result.stdout);\\n\\t\\tif (commits.length === 0) {\\n\\t\\t\\treturn Promise.reject<Commit>('bad commit format');\\n\\t\\t}\\n\\t\\treturn commits[0];\\n\\t}\\n\\n\\tasync updateSubmodules(paths: string[]): Promise<void> {\\n\\t\\tconst args = ['submodule', 'update', '--'];\\n\\n\\t\\tfor (const chunk of splitInChunks(paths.map(sanitizePath), MAX_CLI_LENGTH)) {\\n\\t\\t\\tawait this.run([...args, ...chunk]);\\n\\t\\t}\\n\\t}\\n\\n\\tasync getSubmodules(): Promise<Submodule[]> {\\n\\t\\tconst gitmodulesPath = path.join(this.root, '.gitmodules');\\n\\n\\t\\ttry {\\n\\t\\t\\tconst gitmodulesRaw = await fs.readFile(gitmodulesPath, 'utf8');\\n\\t\\t\\treturn parseGitmodules(gitmodulesRaw);\\n\\t\\t} catch (err) {\\n\\t\\t\\tif (/ENOENT/.test(err.message)) {\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\t}\\n\\n\\t\\t\\tthrow err;\\n\\t\\t}\\n\\t}\\n}\\n\",\"module.exports = require(\\\"events\\\");\",null,\"\\\"use strict\\\";\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nexports.IsInitialized = !process.env[\\\"APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL\\\"];\\r\\nif (exports.IsInitialized) {\\r\\n    var publishers = require(\\\"diagnostic-channel-publishers\\\");\\r\\n    var individualOptOuts = process.env[\\\"APPLICATION_INSIGHTS_NO_PATCH_MODULES\\\"] || \\\"\\\";\\r\\n    var unpatchedModules = individualOptOuts.split(\\\",\\\");\\r\\n    var modules = {\\r\\n        bunyan: publishers.bunyan,\\r\\n        console: publishers.console,\\r\\n        mongodb: publishers.mongodb,\\r\\n        mongodbCore: publishers.mongodbCore,\\r\\n        mysql: publishers.mysql,\\r\\n        redis: publishers.redis,\\r\\n        pg: publishers.pg,\\r\\n        pgPool: publishers.pgPool,\\r\\n        winston: publishers.winston\\r\\n    };\\r\\n    for (var mod in modules) {\\r\\n        if (unpatchedModules.indexOf(mod) === -1) {\\r\\n            modules[mod].enable();\\r\\n        }\\r\\n    }\\r\\n}\\r\\nfunction registerContextPreservation(cb) {\\r\\n    if (!exports.IsInitialized) {\\r\\n        return;\\r\\n    }\\r\\n    require(\\\"diagnostic-channel\\\").channel.addContextPreservation(cb);\\r\\n}\\r\\nexports.registerContextPreservation = registerContextPreservation;\\r\\n//# sourceMappingURL=initialization.js.map\",\"\\\"use strict\\\";\\r\\nvar http = require(\\\"http\\\");\\r\\nvar https = require(\\\"https\\\");\\r\\nvar Logging = require(\\\"../Library/Logging\\\");\\r\\nvar Util = require(\\\"../Library/Util\\\");\\r\\nvar RequestResponseHeaders = require(\\\"../Library/RequestResponseHeaders\\\");\\r\\nvar HttpDependencyParser = require(\\\"./HttpDependencyParser\\\");\\r\\nvar CorrelationContextManager_1 = require(\\\"./CorrelationContextManager\\\");\\r\\nvar DiagChannel = require(\\\"./diagnostic-channel/initialization\\\");\\r\\nvar AutoCollectHttpDependencies = (function () {\\r\\n    function AutoCollectHttpDependencies(client) {\\r\\n        if (!!AutoCollectHttpDependencies.INSTANCE) {\\r\\n            throw new Error(\\\"Client request tracking should be configured from the applicationInsights object\\\");\\r\\n        }\\r\\n        AutoCollectHttpDependencies.INSTANCE = this;\\r\\n        this._client = client;\\r\\n    }\\r\\n    AutoCollectHttpDependencies.prototype.enable = function (isEnabled) {\\r\\n        this._isEnabled = isEnabled;\\r\\n        if (this._isEnabled && !this._isInitialized) {\\r\\n            this._initialize();\\r\\n        }\\r\\n        if (DiagChannel.IsInitialized) {\\r\\n            require(\\\"./diagnostic-channel/mongodb.sub\\\").enable(isEnabled, this._client);\\r\\n            require(\\\"./diagnostic-channel/mysql.sub\\\").enable(isEnabled, this._client);\\r\\n            require(\\\"./diagnostic-channel/redis.sub\\\").enable(isEnabled, this._client);\\r\\n            require(\\\"./diagnostic-channel/postgres.sub\\\").enable(isEnabled, this._client);\\r\\n        }\\r\\n    };\\r\\n    AutoCollectHttpDependencies.prototype.isInitialized = function () {\\r\\n        return this._isInitialized;\\r\\n    };\\r\\n    AutoCollectHttpDependencies.prototype._initialize = function () {\\r\\n        var _this = this;\\r\\n        this._isInitialized = true;\\r\\n        var originalGet = http.get;\\r\\n        var originalRequest = http.request;\\r\\n        var originalHttpsRequest = https.request;\\r\\n        var clientRequestPatch = function (request, options) {\\r\\n            var shouldCollect = !options[AutoCollectHttpDependencies.disableCollectionRequestOption] &&\\r\\n                !request[AutoCollectHttpDependencies.alreadyAutoCollectedFlag];\\r\\n            request[AutoCollectHttpDependencies.alreadyAutoCollectedFlag] = true;\\r\\n            if (request && options && shouldCollect) {\\r\\n                AutoCollectHttpDependencies.trackRequest(_this._client, { options: options, request: request });\\r\\n            }\\r\\n        };\\r\\n        // On node >= v0.11.12 and < 9.0 (excluding 8.9.0) https.request just calls http.request (with additional options).\\r\\n        // On node < 0.11.12, 8.9.0, and 9.0 > https.request is handled separately\\r\\n        // Patch both and leave a flag to not double-count on versions that just call through\\r\\n        // We add the flag to both http and https to protect against strange double collection in other scenarios\\r\\n        http.request = function (options) {\\r\\n            var requestArgs = [];\\r\\n            for (var _i = 1; _i < arguments.length; _i++) {\\r\\n                requestArgs[_i - 1] = arguments[_i];\\r\\n            }\\r\\n            var request = originalRequest.call.apply(originalRequest, [http, options].concat(requestArgs));\\r\\n            clientRequestPatch(request, options);\\r\\n            return request;\\r\\n        };\\r\\n        https.request = function (options) {\\r\\n            var requestArgs = [];\\r\\n            for (var _i = 1; _i < arguments.length; _i++) {\\r\\n                requestArgs[_i - 1] = arguments[_i];\\r\\n            }\\r\\n            var request = originalHttpsRequest.call.apply(originalHttpsRequest, [https, options].concat(requestArgs));\\r\\n            clientRequestPatch(request, options);\\r\\n            return request;\\r\\n        };\\r\\n        // Node 8 calls http.request from http.get using a local reference!\\r\\n        // We have to patch .get manually in this case and can't just assume request is enough\\r\\n        // We have to replace the entire method in this case. We can't call the original.\\r\\n        // This is because calling the original will give us no chance to set headers as it internally does .end().\\r\\n        http.get = function (options) {\\r\\n            var requestArgs = [];\\r\\n            for (var _i = 1; _i < arguments.length; _i++) {\\r\\n                requestArgs[_i - 1] = arguments[_i];\\r\\n            }\\r\\n            var request = (_a = http.request).call.apply(_a, [http, options].concat(requestArgs));\\r\\n            request.end();\\r\\n            return request;\\r\\n            var _a;\\r\\n        };\\r\\n        https.get = function (options) {\\r\\n            var requestArgs = [];\\r\\n            for (var _i = 1; _i < arguments.length; _i++) {\\r\\n                requestArgs[_i - 1] = arguments[_i];\\r\\n            }\\r\\n            var request = (_a = https.request).call.apply(_a, [https, options].concat(requestArgs));\\r\\n            request.end();\\r\\n            return request;\\r\\n            var _a;\\r\\n        };\\r\\n    };\\r\\n    /**\\r\\n     * Tracks an outgoing request. Because it may set headers this method must be called before\\r\\n     * writing content to or ending the request.\\r\\n     */\\r\\n    AutoCollectHttpDependencies.trackRequest = function (client, telemetry) {\\r\\n        if (!telemetry.options || !telemetry.request || !client) {\\r\\n            Logging.info(\\\"AutoCollectHttpDependencies.trackRequest was called with invalid parameters: \\\", !telemetry.options, !telemetry.request, !client);\\r\\n            return;\\r\\n        }\\r\\n        var requestParser = new HttpDependencyParser(telemetry.options, telemetry.request);\\r\\n        var currentContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\\r\\n        var uniqueRequestId = currentContext && currentContext.operation && (currentContext.operation.parentId + AutoCollectHttpDependencies.requestNumber++ + '.');\\r\\n        // Add the source correlationId to the request headers, if a value was not already provided.\\r\\n        // The getHeader/setHeader methods aren't available on very old Node versions, and\\r\\n        // are not included in the v0.10 type declarations currently used. So check if the\\r\\n        // methods exist before invoking them.\\r\\n        if (Util.canIncludeCorrelationHeader(client, requestParser.getUrl()) && telemetry.request.getHeader && telemetry.request.setHeader) {\\r\\n            if (client.config && client.config.correlationId) {\\r\\n                var correlationHeader = telemetry.request.getHeader(RequestResponseHeaders.requestContextHeader);\\r\\n                if (correlationHeader) {\\r\\n                    var components = correlationHeader.split(\\\",\\\");\\r\\n                    var key_1 = RequestResponseHeaders.requestContextSourceKey + \\\"=\\\";\\r\\n                    if (!components.some(function (value) { return value.substring(0, key_1.length) === key_1; })) {\\r\\n                        telemetry.request.setHeader(RequestResponseHeaders.requestContextHeader, correlationHeader + \\\",\\\" + RequestResponseHeaders.requestContextSourceKey + \\\"=\\\" + client.config.correlationId);\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    telemetry.request.setHeader(RequestResponseHeaders.requestContextHeader, RequestResponseHeaders.requestContextSourceKey + \\\"=\\\" + client.config.correlationId);\\r\\n                }\\r\\n            }\\r\\n            if (currentContext && currentContext.operation) {\\r\\n                telemetry.request.setHeader(RequestResponseHeaders.requestIdHeader, uniqueRequestId);\\r\\n                // Also set legacy headers\\r\\n                telemetry.request.setHeader(RequestResponseHeaders.parentIdHeader, currentContext.operation.id);\\r\\n                telemetry.request.setHeader(RequestResponseHeaders.rootIdHeader, uniqueRequestId);\\r\\n                var correlationContextHeader = currentContext.customProperties.serializeToHeader();\\r\\n                if (correlationContextHeader) {\\r\\n                    telemetry.request.setHeader(RequestResponseHeaders.correlationContextHeader, correlationContextHeader);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        // Collect dependency telemetry about the request when it finishes.\\r\\n        if (telemetry.request.on) {\\r\\n            telemetry.request.on('response', function (response) {\\r\\n                requestParser.onResponse(response);\\r\\n                var dependencyTelemetry = requestParser.getDependencyTelemetry(telemetry, uniqueRequestId);\\r\\n                dependencyTelemetry.contextObjects = dependencyTelemetry.contextObjects || {};\\r\\n                dependencyTelemetry.contextObjects[\\\"http.RequestOptions\\\"] = telemetry.options;\\r\\n                dependencyTelemetry.contextObjects[\\\"http.ClientRequest\\\"] = telemetry.request;\\r\\n                dependencyTelemetry.contextObjects[\\\"http.ClientResponse\\\"] = response;\\r\\n                client.trackDependency(dependencyTelemetry);\\r\\n            });\\r\\n            telemetry.request.on('error', function (e) {\\r\\n                requestParser.onError(e);\\r\\n                var dependencyTelemetry = requestParser.getDependencyTelemetry(telemetry, uniqueRequestId);\\r\\n                dependencyTelemetry.contextObjects = dependencyTelemetry.contextObjects || {};\\r\\n                dependencyTelemetry.contextObjects[\\\"http.RequestOptions\\\"] = telemetry.options;\\r\\n                dependencyTelemetry.contextObjects[\\\"http.ClientRequest\\\"] = telemetry.request;\\r\\n                dependencyTelemetry.contextObjects[\\\"Error\\\"] = e;\\r\\n                client.trackDependency(dependencyTelemetry);\\r\\n            });\\r\\n        }\\r\\n    };\\r\\n    AutoCollectHttpDependencies.prototype.dispose = function () {\\r\\n        AutoCollectHttpDependencies.INSTANCE = null;\\r\\n        this.enable(false);\\r\\n        this._isInitialized = false;\\r\\n    };\\r\\n    AutoCollectHttpDependencies.disableCollectionRequestOption = 'disableAppInsightsAutoCollection';\\r\\n    AutoCollectHttpDependencies.requestNumber = 1;\\r\\n    AutoCollectHttpDependencies.alreadyAutoCollectedFlag = '_appInsightsAutoCollected';\\r\\n    return AutoCollectHttpDependencies;\\r\\n}());\\r\\nmodule.exports = AutoCollectHttpDependencies;\\r\\n//# sourceMappingURL=HttpDependencies.js.map\",\"module.exports = require(\\\"https\\\");\",\"\\\"use strict\\\";\\r\\nvar Util = require(\\\"./Util\\\");\\r\\nvar Logging = require(\\\"./Logging\\\");\\r\\nvar CorrelationIdManager = (function () {\\r\\n    function CorrelationIdManager() {\\r\\n    }\\r\\n    CorrelationIdManager.queryCorrelationId = function (config, callback) {\\r\\n        // GET request to `${this.endpointBase}/api/profiles/${this.instrumentationKey}/appId`\\r\\n        // If it 404s, the iKey is bad and we should give up\\r\\n        // If it fails otherwise, try again later\\r\\n        var appIdUrlString = config.profileQueryEndpoint + \\\"/api/profiles/\\\" + config.instrumentationKey + \\\"/appId\\\";\\r\\n        if (CorrelationIdManager.completedLookups.hasOwnProperty(appIdUrlString)) {\\r\\n            callback(CorrelationIdManager.completedLookups[appIdUrlString]);\\r\\n            return;\\r\\n        }\\r\\n        else if (CorrelationIdManager.pendingLookups[appIdUrlString]) {\\r\\n            CorrelationIdManager.pendingLookups[appIdUrlString].push(callback);\\r\\n            return;\\r\\n        }\\r\\n        CorrelationIdManager.pendingLookups[appIdUrlString] = [callback];\\r\\n        var fetchAppId = function () {\\r\\n            if (!CorrelationIdManager.pendingLookups[appIdUrlString]) {\\r\\n                // This query has been cancelled.\\r\\n                return;\\r\\n            }\\r\\n            var requestOptions = {\\r\\n                method: 'GET',\\r\\n                // Ensure this request is not captured by auto-collection.\\r\\n                // Note: we don't refer to the property in HttpDependencyParser because that would cause a cyclical dependency\\r\\n                disableAppInsightsAutoCollection: true\\r\\n            };\\r\\n            Logging.info(CorrelationIdManager.TAG, requestOptions);\\r\\n            var req = Util.makeRequest(config, appIdUrlString, requestOptions, function (res) {\\r\\n                if (res.statusCode === 200) {\\r\\n                    // Success; extract the appId from the body\\r\\n                    var appId_1 = \\\"\\\";\\r\\n                    res.setEncoding(\\\"utf-8\\\");\\r\\n                    res.on('data', function (data) {\\r\\n                        appId_1 += data;\\r\\n                    });\\r\\n                    res.on('end', function () {\\r\\n                        Logging.info(CorrelationIdManager.TAG, appId_1);\\r\\n                        var result = CorrelationIdManager.correlationIdPrefix + appId_1;\\r\\n                        CorrelationIdManager.completedLookups[appIdUrlString] = result;\\r\\n                        if (CorrelationIdManager.pendingLookups[appIdUrlString]) {\\r\\n                            CorrelationIdManager.pendingLookups[appIdUrlString].forEach(function (cb) { return cb(result); });\\r\\n                        }\\r\\n                        delete CorrelationIdManager.pendingLookups[appIdUrlString];\\r\\n                    });\\r\\n                }\\r\\n                else if (res.statusCode >= 400 && res.statusCode < 500) {\\r\\n                    // Not found, probably a bad key. Do not try again.\\r\\n                    CorrelationIdManager.completedLookups[appIdUrlString] = undefined;\\r\\n                    delete CorrelationIdManager.pendingLookups[appIdUrlString];\\r\\n                }\\r\\n                else {\\r\\n                    // Retry after timeout.\\r\\n                    setTimeout(fetchAppId, config.correlationIdRetryIntervalMs);\\r\\n                }\\r\\n            });\\r\\n            if (req) {\\r\\n                req.on('error', function (error) {\\r\\n                    // Unable to contact endpoint.\\r\\n                    // Do nothing for now.\\r\\n                    Logging.warn(CorrelationIdManager.TAG, error);\\r\\n                });\\r\\n                req.end();\\r\\n            }\\r\\n        };\\r\\n        setTimeout(fetchAppId, 0);\\r\\n    };\\r\\n    CorrelationIdManager.cancelCorrelationIdQuery = function (config, callback) {\\r\\n        var appIdUrlString = config.profileQueryEndpoint + \\\"/api/profiles/\\\" + config.instrumentationKey + \\\"/appId\\\";\\r\\n        var pendingLookups = CorrelationIdManager.pendingLookups[appIdUrlString];\\r\\n        if (pendingLookups) {\\r\\n            CorrelationIdManager.pendingLookups[appIdUrlString] = pendingLookups.filter(function (cb) { return cb != callback; });\\r\\n            if (CorrelationIdManager.pendingLookups[appIdUrlString].length == 0) {\\r\\n                delete CorrelationIdManager.pendingLookups[appIdUrlString];\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Generate a request Id according to https://github.com/lmolkova/correlation/blob/master/hierarchical_request_id.md\\r\\n     * @param parentId\\r\\n     */\\r\\n    CorrelationIdManager.generateRequestId = function (parentId) {\\r\\n        if (parentId) {\\r\\n            parentId = parentId[0] == '|' ? parentId : '|' + parentId;\\r\\n            if (parentId[parentId.length - 1] !== '.') {\\r\\n                parentId += '.';\\r\\n            }\\r\\n            var suffix = (CorrelationIdManager.currentRootId++).toString(16);\\r\\n            return CorrelationIdManager.appendSuffix(parentId, suffix, '_');\\r\\n        }\\r\\n        else {\\r\\n            return CorrelationIdManager.generateRootId();\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Given a hierarchical identifier of the form |X.*\\r\\n     * return the root identifier X\\r\\n     * @param id\\r\\n     */\\r\\n    CorrelationIdManager.getRootId = function (id) {\\r\\n        var endIndex = id.indexOf('.');\\r\\n        if (endIndex < 0) {\\r\\n            endIndex = id.length;\\r\\n        }\\r\\n        var startIndex = id[0] === '|' ? 1 : 0;\\r\\n        return id.substring(startIndex, endIndex);\\r\\n    };\\r\\n    CorrelationIdManager.generateRootId = function () {\\r\\n        return '|' + Util.w3cTraceId() + '.';\\r\\n    };\\r\\n    CorrelationIdManager.appendSuffix = function (parentId, suffix, delimiter) {\\r\\n        if (parentId.length + suffix.length < CorrelationIdManager.requestIdMaxLength) {\\r\\n            return parentId + suffix + delimiter;\\r\\n        }\\r\\n        // Combined identifier would be too long, so we must truncate it.\\r\\n        // We need 9 characters of space: 8 for the overflow ID, 1 for the\\r\\n        // overflow delimiter '#'\\r\\n        var trimPosition = CorrelationIdManager.requestIdMaxLength - 9;\\r\\n        if (parentId.length > trimPosition) {\\r\\n            for (; trimPosition > 1; --trimPosition) {\\r\\n                var c = parentId[trimPosition - 1];\\r\\n                if (c === '.' || c === '_') {\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (trimPosition <= 1) {\\r\\n            // parentId is not a valid ID\\r\\n            return CorrelationIdManager.generateRootId();\\r\\n        }\\r\\n        suffix = Util.randomu32().toString(16);\\r\\n        while (suffix.length < 8) {\\r\\n            suffix = '0' + suffix;\\r\\n        }\\r\\n        return parentId.substring(0, trimPosition) + suffix + '#';\\r\\n    };\\r\\n    CorrelationIdManager.TAG = \\\"CorrelationIdManager\\\";\\r\\n    CorrelationIdManager.correlationIdPrefix = \\\"cid-v1:\\\";\\r\\n    // To avoid extraneous HTTP requests, we maintain a queue of callbacks waiting on a particular appId lookup,\\r\\n    // as well as a cache of completed lookups so future requests can be resolved immediately.\\r\\n    CorrelationIdManager.pendingLookups = {};\\r\\n    CorrelationIdManager.completedLookups = {};\\r\\n    CorrelationIdManager.requestIdMaxLength = 1024;\\r\\n    CorrelationIdManager.currentRootId = Util.randomu32();\\r\\n    return CorrelationIdManager;\\r\\n}());\\r\\nmodule.exports = CorrelationIdManager;\\r\\n//# sourceMappingURL=CorrelationIdManager.js.map\",\"module.exports = require(\\\"child_process\\\");\",\"module.exports = require(\\\"string_decoder\\\");\",\"// Copyright (C) 2011-2015 John Hewson\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to\\n// deal in the Software without restriction, including without limitation the\\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\\n// sell copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n// \\n// The above copyright notice and this permission notice shall be included in\\n// all copies or substantial portions of the Software.\\n// \\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\\n// IN THE SOFTWARE.\\n\\nvar stream = require('stream'),\\n    util = require('util'),\\n    timers = require('timers');\\n\\n// convinience API\\nmodule.exports = function(readStream, options) {\\n  return module.exports.createStream(readStream, options);\\n};\\n\\n// basic API\\nmodule.exports.createStream = function(readStream, options) {\\n  if (readStream) {\\n    return createLineStream(readStream, options);\\n  } else {\\n    return new LineStream(options);\\n  }\\n};\\n\\n// deprecated API\\nmodule.exports.createLineStream = function(readStream) {\\n  console.log('WARNING: byline#createLineStream is deprecated and will be removed soon');\\n  return createLineStream(readStream);\\n};\\n\\nfunction createLineStream(readStream, options) {\\n  if (!readStream) {\\n    throw new Error('expected readStream');\\n  }\\n  if (!readStream.readable) {\\n    throw new Error('readStream must be readable');\\n  }\\n  var ls = new LineStream(options);\\n  readStream.pipe(ls);\\n  return ls;\\n}\\n\\n//\\n// using the new node v0.10 \\\"streams2\\\" API\\n//\\n\\nmodule.exports.LineStream = LineStream;\\n\\nfunction LineStream(options) {\\n  stream.Transform.call(this, options);\\n  options = options || {};\\n\\n  // use objectMode to stop the output from being buffered\\n  // which re-concatanates the lines, just without newlines.\\n  this._readableState.objectMode = true;\\n  this._lineBuffer = [];\\n  this._keepEmptyLines = options.keepEmptyLines || false;\\n  this._lastChunkEndedWithCR = false;\\n\\n  // take the source's encoding if we don't have one\\n  var self = this;\\n  this.on('pipe', function(src) {\\n    if (!self.encoding) {\\n      // but we can't do this for old-style streams\\n      if (src instanceof stream.Readable) {\\n        self.encoding = src._readableState.encoding;\\n      }\\n    }\\n  });\\n}\\nutil.inherits(LineStream, stream.Transform);\\n\\nLineStream.prototype._transform = function(chunk, encoding, done) {\\n  // decode binary chunks as UTF-8\\n  encoding = encoding || 'utf8';\\n  \\n  if (Buffer.isBuffer(chunk)) {\\n    if (encoding == 'buffer') {\\n      chunk = chunk.toString(); // utf8\\n      encoding = 'utf8';\\n    }\\n    else {\\n     chunk = chunk.toString(encoding);\\n    }\\n  }\\n  this._chunkEncoding = encoding;\\n  \\n  // see: http://www.unicode.org/reports/tr18/#Line_Boundaries\\n  var lines = chunk.split(/\\\\r\\\\n|[\\\\n\\\\v\\\\f\\\\r\\\\x85\\\\u2028\\\\u2029]/g);\\n  \\n  // don't split CRLF which spans chunks\\n  if (this._lastChunkEndedWithCR && chunk[0] == '\\\\n') {\\n    lines.shift();\\n  }\\n  \\n  if (this._lineBuffer.length > 0) {\\n    this._lineBuffer[this._lineBuffer.length - 1] += lines[0];\\n    lines.shift();\\n  }\\n\\n  this._lastChunkEndedWithCR = chunk[chunk.length - 1] == '\\\\r';\\n  this._lineBuffer = this._lineBuffer.concat(lines);\\n  this._pushBuffer(encoding, 1, done);\\n};\\n\\nLineStream.prototype._pushBuffer = function(encoding, keep, done) {\\n  // always buffer the last (possibly partial) line\\n  while (this._lineBuffer.length > keep) {\\n    var line = this._lineBuffer.shift();\\n    // skip empty lines\\n    if (this._keepEmptyLines || line.length > 0 ) {\\n      if (!this.push(this._reencode(line, encoding))) {\\n        // when the high-water mark is reached, defer pushes until the next tick\\n        var self = this;\\n        timers.setImmediate(function() {\\n          self._pushBuffer(encoding, keep, done);\\n        });\\n        return;\\n      }\\n    }\\n  }\\n  done();\\n};\\n\\nLineStream.prototype._flush = function(done) {\\n  this._pushBuffer(this._chunkEncoding, 0, done);\\n};\\n\\n// see Readable::push\\nLineStream.prototype._reencode = function(line, chunkEncoding) {\\n  if (this.encoding && this.encoding != chunkEncoding) {\\n    return new Buffer(line, chunkEncoding).toString(this.encoding);\\n  }\\n  else if (this.encoding) {\\n    // this should be the most common case, i.e. we're using an encoded source stream\\n    return line;\\n  }\\n  else {\\n    return new Buffer(line, chunkEncoding);\\n  }\\n};\\n\",\"module.exports = require(\\\"timers\\\");\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar constants = require('./constants');\\nvar CharSetProber = require('./charsetprober');\\nvar logger = require('./logger');\\n\\nfunction CharSetGroupProber() {\\n    CharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mActiveNum = 0;\\n        self._mProbers = [];\\n        self._mBestGuessProber = null;\\n    }\\n\\n    this.reset = function() {\\n        CharSetGroupProber.prototype.reset.apply(this);\\n        this._mActiveNum = 0;\\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\\n            if( prober ) {\\n                prober.reset();\\n                prober.active = true;\\n                this._mActiveNum++;\\n            }\\n        }\\n        this._mBestGuessProber = null;\\n    }\\n\\n    this.getCharsetName = function() {\\n        if( !this._mBestGuessProber ) {\\n            this.getConfidence();\\n            if( !this._mBestGuessProber ) return null;\\n        }\\n        return this._mBestGuessProber.getCharsetName();\\n    }\\n\\n    this.feed = function(aBuf) {\\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\\n            if( !prober || !prober.active ) continue;\\n            var st = prober.feed(aBuf);\\n            if( !st ) continue;\\n            if( st == constants.foundIt ) {\\n                this._mBestGuessProber = prober;\\n                return this.getState();\\n            } else if( st == constants.notMe ) {\\n                prober.active = false;\\n                this._mActiveNum--;\\n                if( this._mActiveNum <= 0 ) {\\n                    this._mState = constants.notMe;\\n                    return this.getState();\\n                }\\n            }\\n        }\\n        return this.getState();\\n    }\\n\\n    this.getConfidence = function() {\\n        var st = this.getState();\\n        if( st == constants.foundIt ) {\\n            return 0.99;\\n        } else if( st == constants.notMe ) {\\n            return 0.01;\\n        }\\n        var bestConf = 0.0;\\n        this._mBestGuessProber = null;\\n        for( var i = 0, prober; prober = this._mProbers[i]; i++ ) {\\n            if( !prober ) continue;\\n            if( !prober.active ) {\\n                logger.log(prober.getCharsetName() + \\\" not active\\\\n\\\");\\n                continue;\\n            }\\n            var cf = prober.getConfidence();\\n            logger.log(prober.getCharsetName() + \\\" confidence = \\\" + cf + \\\"\\\\n\\\");\\n            if( bestConf < cf ) {\\n                bestConf = cf;\\n                this._mBestGuessProber = prober;\\n            }\\n        }\\n        if( !this._mBestGuessProber ) return 0.0;\\n        return bestConf;\\n    }\\n\\n    init();\\n}\\nCharSetGroupProber.prototype = new CharSetProber();\\n\\nmodule.exports = CharSetGroupProber\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// This is hiragana 2-char sequence table, the number in each cell represents its frequency category\\nexports.jp2CharContext = [\\n[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],\\n[2,4,0,4,0,3,0,4,0,3,4,4,4,2,4,3,3,4,3,2,3,3,4,2,3,3,3,2,4,1,4,3,3,1,5,4,3,4,3,4,3,5,3,0,3,5,4,2,0,3,1,0,3,3,0,3,3,0,1,1,0,4,3,0,3,3,0,4,0,2,0,3,5,5,5,5,4,0,4,1,0,3,4],\\n[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],\\n[0,4,0,5,0,5,0,4,0,4,5,4,4,3,5,3,5,1,5,3,4,3,4,4,3,4,3,3,4,3,5,4,4,3,5,5,3,5,5,5,3,5,5,3,4,5,5,3,1,3,2,0,3,4,0,4,2,0,4,2,1,5,3,2,3,5,0,4,0,2,0,5,4,4,5,4,5,0,4,0,0,4,4],\\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\n[0,3,0,4,0,3,0,3,0,4,5,4,3,3,3,3,4,3,5,4,4,3,5,4,4,3,4,3,4,4,4,4,5,3,4,4,3,4,5,5,4,5,5,1,4,5,4,3,0,3,3,1,3,3,0,4,4,0,3,3,1,5,3,3,3,5,0,4,0,3,0,4,4,3,4,3,3,0,4,1,1,3,4],\\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\n[0,4,0,3,0,3,0,4,0,3,4,4,3,2,2,1,2,1,3,1,3,3,3,3,3,4,3,1,3,3,5,3,3,0,4,3,0,5,4,3,3,5,4,4,3,4,4,5,0,1,2,0,1,2,0,2,2,0,1,0,0,5,2,2,1,4,0,3,0,1,0,4,4,3,5,4,3,0,2,1,0,4,3],\\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\n[0,3,0,5,0,4,0,2,1,4,4,2,4,1,4,2,4,2,4,3,3,3,4,3,3,3,3,1,4,2,3,3,3,1,4,4,1,1,1,4,3,3,2,0,2,4,3,2,0,3,3,0,3,1,1,0,0,0,3,3,0,4,2,2,3,4,0,4,0,3,0,4,4,5,3,4,4,0,3,0,0,1,4],\\n[1,4,0,4,0,4,0,4,0,3,5,4,4,3,4,3,5,4,3,3,4,3,5,4,4,4,4,3,4,2,4,3,3,1,5,4,3,2,4,5,4,5,5,4,4,5,4,4,0,3,2,2,3,3,0,4,3,1,3,2,1,4,3,3,4,5,0,3,0,2,0,4,5,5,4,5,4,0,4,0,0,5,4],\\n[0,5,0,5,0,4,0,3,0,4,4,3,4,3,3,3,4,0,4,4,4,3,4,3,4,3,3,1,4,2,4,3,4,0,5,4,1,4,5,4,4,5,3,2,4,3,4,3,2,4,1,3,3,3,2,3,2,0,4,3,3,4,3,3,3,4,0,4,0,3,0,4,5,4,4,4,3,0,4,1,0,1,3],\\n[0,3,1,4,0,3,0,2,0,3,4,4,3,1,4,2,3,3,4,3,4,3,4,3,4,4,3,2,3,1,5,4,4,1,4,4,3,5,4,4,3,5,5,4,3,4,4,3,1,2,3,1,2,2,0,3,2,0,3,1,0,5,3,3,3,4,3,3,3,3,4,4,4,4,5,4,2,0,3,3,2,4,3],\\n[0,2,0,3,0,1,0,1,0,0,3,2,0,0,2,0,1,0,2,1,3,3,3,1,2,3,1,0,1,0,4,2,1,1,3,3,0,4,3,3,1,4,3,3,0,3,3,2,0,0,0,0,1,0,0,2,0,0,0,0,0,4,1,0,2,3,2,2,2,1,3,3,3,4,4,3,2,0,3,1,0,3,3],\\n[0,4,0,4,0,3,0,3,0,4,4,4,3,3,3,3,3,3,4,3,4,2,4,3,4,3,3,2,4,3,4,5,4,1,4,5,3,5,4,5,3,5,4,0,3,5,5,3,1,3,3,2,2,3,0,3,4,1,3,3,2,4,3,3,3,4,0,4,0,3,0,4,5,4,4,5,3,0,4,1,0,3,4],\\n[0,2,0,3,0,3,0,0,0,2,2,2,1,0,1,0,0,0,3,0,3,0,3,0,1,3,1,0,3,1,3,3,3,1,3,3,3,0,1,3,1,3,4,0,0,3,1,1,0,3,2,0,0,0,0,1,3,0,1,0,0,3,3,2,0,3,0,0,0,0,0,3,4,3,4,3,3,0,3,0,0,2,3],\\n[2,3,0,3,0,2,0,1,0,3,3,4,3,1,3,1,1,1,3,1,4,3,4,3,3,3,0,0,3,1,5,4,3,1,4,3,2,5,5,4,4,4,4,3,3,4,4,4,0,2,1,1,3,2,0,1,2,0,0,1,0,4,1,3,3,3,0,3,0,1,0,4,4,4,5,5,3,0,2,0,0,4,4],\\n[0,2,0,1,0,3,1,3,0,2,3,3,3,0,3,1,0,0,3,0,3,2,3,1,3,2,1,1,0,0,4,2,1,0,2,3,1,4,3,2,0,4,4,3,1,3,1,3,0,1,0,0,1,0,0,0,1,0,0,0,0,4,1,1,1,2,0,3,0,0,0,3,4,2,4,3,2,0,1,0,0,3,3],\\n[0,1,0,4,0,5,0,4,0,2,4,4,2,3,3,2,3,3,5,3,3,3,4,3,4,2,3,0,4,3,3,3,4,1,4,3,2,1,5,5,3,4,5,1,3,5,4,2,0,3,3,0,1,3,0,4,2,0,1,3,1,4,3,3,3,3,0,3,0,1,0,3,4,4,4,5,5,0,3,0,1,4,5],\\n[0,2,0,3,0,3,0,0,0,2,3,1,3,0,4,0,1,1,3,0,3,4,3,2,3,1,0,3,3,2,3,1,3,0,2,3,0,2,1,4,1,2,2,0,0,3,3,0,0,2,0,0,0,1,0,0,0,0,2,2,0,3,2,1,3,3,0,2,0,2,0,0,3,3,1,2,4,0,3,0,2,2,3],\\n[2,4,0,5,0,4,0,4,0,2,4,4,4,3,4,3,3,3,1,2,4,3,4,3,4,4,5,0,3,3,3,3,2,0,4,3,1,4,3,4,1,4,4,3,3,4,4,3,1,2,3,0,4,2,0,4,1,0,3,3,0,4,3,3,3,4,0,4,0,2,0,3,5,3,4,5,2,0,3,0,0,4,5],\\n[0,3,0,4,0,1,0,1,0,1,3,2,2,1,3,0,3,0,2,0,2,0,3,0,2,0,0,0,1,0,1,1,0,0,3,1,0,0,0,4,0,3,1,0,2,1,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,2,2,3,1,0,3,0,0,0,1,4,4,4,3,0,0,4,0,0,1,4],\\n[1,4,1,5,0,3,0,3,0,4,5,4,4,3,5,3,3,4,4,3,4,1,3,3,3,3,2,1,4,1,5,4,3,1,4,4,3,5,4,4,3,5,4,3,3,4,4,4,0,3,3,1,2,3,0,3,1,0,3,3,0,5,4,4,4,4,4,4,3,3,5,4,4,3,3,5,4,0,3,2,0,4,4],\\n[0,2,0,3,0,1,0,0,0,1,3,3,3,2,4,1,3,0,3,1,3,0,2,2,1,1,0,0,2,0,4,3,1,0,4,3,0,4,4,4,1,4,3,1,1,3,3,1,0,2,0,0,1,3,0,0,0,0,2,0,0,4,3,2,4,3,5,4,3,3,3,4,3,3,4,3,3,0,2,1,0,3,3],\\n[0,2,0,4,0,3,0,2,0,2,5,5,3,4,4,4,4,1,4,3,3,0,4,3,4,3,1,3,3,2,4,3,0,3,4,3,0,3,4,4,2,4,4,0,4,5,3,3,2,2,1,1,1,2,0,1,5,0,3,3,2,4,3,3,3,4,0,3,0,2,0,4,4,3,5,5,0,0,3,0,2,3,3],\\n[0,3,0,4,0,3,0,1,0,3,4,3,3,1,3,3,3,0,3,1,3,0,4,3,3,1,1,0,3,0,3,3,0,0,4,4,0,1,5,4,3,3,5,0,3,3,4,3,0,2,0,1,1,1,0,1,3,0,1,2,1,3,3,2,3,3,0,3,0,1,0,1,3,3,4,4,1,0,1,2,2,1,3],\\n[0,1,0,4,0,4,0,3,0,1,3,3,3,2,3,1,1,0,3,0,3,3,4,3,2,4,2,0,1,0,4,3,2,0,4,3,0,5,3,3,2,4,4,4,3,3,3,4,0,1,3,0,0,1,0,0,1,0,0,0,0,4,2,3,3,3,0,3,0,0,0,4,4,4,5,3,2,0,3,3,0,3,5],\\n[0,2,0,3,0,0,0,3,0,1,3,0,2,0,0,0,1,0,3,1,1,3,3,0,0,3,0,0,3,0,2,3,1,0,3,1,0,3,3,2,0,4,2,2,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,1,0,1,0,0,0,1,3,1,2,0,0,0,1,0,0,1,4],\\n[0,3,0,3,0,5,0,1,0,2,4,3,1,3,3,2,1,1,5,2,1,0,5,1,2,0,0,0,3,3,2,2,3,2,4,3,0,0,3,3,1,3,3,0,2,5,3,4,0,3,3,0,1,2,0,2,2,0,3,2,0,2,2,3,3,3,0,2,0,1,0,3,4,4,2,5,4,0,3,0,0,3,5],\\n[0,3,0,3,0,3,0,1,0,3,3,3,3,0,3,0,2,0,2,1,1,0,2,0,1,0,0,0,2,1,0,0,1,0,3,2,0,0,3,3,1,2,3,1,0,3,3,0,0,1,0,0,0,0,0,2,0,0,0,0,0,2,3,1,2,3,0,3,0,1,0,3,2,1,0,4,3,0,1,1,0,3,3],\\n[0,4,0,5,0,3,0,3,0,4,5,5,4,3,5,3,4,3,5,3,3,2,5,3,4,4,4,3,4,3,4,5,5,3,4,4,3,4,4,5,4,4,4,3,4,5,5,4,2,3,4,2,3,4,0,3,3,1,4,3,2,4,3,3,5,5,0,3,0,3,0,5,5,5,5,4,4,0,4,0,1,4,4],\\n[0,4,0,4,0,3,0,3,0,3,5,4,4,2,3,2,5,1,3,2,5,1,4,2,3,2,3,3,4,3,3,3,3,2,5,4,1,3,3,5,3,4,4,0,4,4,3,1,1,3,1,0,2,3,0,2,3,0,3,0,0,4,3,1,3,4,0,3,0,2,0,4,4,4,3,4,5,0,4,0,0,3,4],\\n[0,3,0,3,0,3,1,2,0,3,4,4,3,3,3,0,2,2,4,3,3,1,3,3,3,1,1,0,3,1,4,3,2,3,4,4,2,4,4,4,3,4,4,3,2,4,4,3,1,3,3,1,3,3,0,4,1,0,2,2,1,4,3,2,3,3,5,4,3,3,5,4,4,3,3,0,4,0,3,2,2,4,4],\\n[0,2,0,1,0,0,0,0,0,1,2,1,3,0,0,0,0,0,2,0,1,2,1,0,0,1,0,0,0,0,3,0,0,1,0,1,1,3,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,2,2,0,3,4,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1],\\n[0,1,0,0,0,1,0,0,0,0,4,0,4,1,4,0,3,0,4,0,3,0,4,0,3,0,3,0,4,1,5,1,4,0,0,3,0,5,0,5,2,0,1,0,0,0,2,1,4,0,1,3,0,0,3,0,0,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],\\n[1,4,0,5,0,3,0,2,0,3,5,4,4,3,4,3,5,3,4,3,3,0,4,3,3,3,3,3,3,2,4,4,3,1,3,4,4,5,4,4,3,4,4,1,3,5,4,3,3,3,1,2,2,3,3,1,3,1,3,3,3,5,3,3,4,5,0,3,0,3,0,3,4,3,4,4,3,0,3,0,2,4,3],\\n[0,1,0,4,0,0,0,0,0,1,4,0,4,1,4,2,4,0,3,0,1,0,1,0,0,0,0,0,2,0,3,1,1,1,0,3,0,0,0,1,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,3,0,0,0,0,3,2,0,2,2,0,1,0,0,0,2,3,2,3,3,0,0,0,0,2,1,0],\\n[0,5,1,5,0,3,0,3,0,5,4,4,5,1,5,3,3,0,4,3,4,3,5,3,4,3,3,2,4,3,4,3,3,0,3,3,1,4,4,3,4,4,4,3,4,5,5,3,2,3,1,1,3,3,1,3,1,1,3,3,2,4,5,3,3,5,0,4,0,3,0,4,4,3,5,3,3,0,3,4,0,4,3],\\n[0,5,0,5,0,3,0,2,0,4,4,3,5,2,4,3,3,3,4,4,4,3,5,3,5,3,3,1,4,0,4,3,3,0,3,3,0,4,4,4,4,5,4,3,3,5,5,3,2,3,1,2,3,2,0,1,0,0,3,2,2,4,4,3,1,5,0,4,0,3,0,4,3,1,3,2,1,0,3,3,0,3,3],\\n[0,4,0,5,0,5,0,4,0,4,5,5,5,3,4,3,3,2,5,4,4,3,5,3,5,3,4,0,4,3,4,4,3,2,4,4,3,4,5,4,4,5,5,0,3,5,5,4,1,3,3,2,3,3,1,3,1,0,4,3,1,4,4,3,4,5,0,4,0,2,0,4,3,4,4,3,3,0,4,0,0,5,5],\\n[0,4,0,4,0,5,0,1,1,3,3,4,4,3,4,1,3,0,5,1,3,0,3,1,3,1,1,0,3,0,3,3,4,0,4,3,0,4,4,4,3,4,4,0,3,5,4,1,0,3,0,0,2,3,0,3,1,0,3,1,0,3,2,1,3,5,0,3,0,1,0,3,2,3,3,4,4,0,2,2,0,4,4],\\n[2,4,0,5,0,4,0,3,0,4,5,5,4,3,5,3,5,3,5,3,5,2,5,3,4,3,3,4,3,4,5,3,2,1,5,4,3,2,3,4,5,3,4,1,2,5,4,3,0,3,3,0,3,2,0,2,3,0,4,1,0,3,4,3,3,5,0,3,0,1,0,4,5,5,5,4,3,0,4,2,0,3,5],\\n[0,5,0,4,0,4,0,2,0,5,4,3,4,3,4,3,3,3,4,3,4,2,5,3,5,3,4,1,4,3,4,4,4,0,3,5,0,4,4,4,4,5,3,1,3,4,5,3,3,3,3,3,3,3,0,2,2,0,3,3,2,4,3,3,3,5,3,4,1,3,3,5,3,2,0,0,0,0,4,3,1,3,3],\\n[0,1,0,3,0,3,0,1,0,1,3,3,3,2,3,3,3,0,3,0,0,0,3,1,3,0,0,0,2,2,2,3,0,0,3,2,0,1,2,4,1,3,3,0,0,3,3,3,0,1,0,0,2,1,0,0,3,0,3,1,0,3,0,0,1,3,0,2,0,1,0,3,3,1,3,3,0,0,1,1,0,3,3],\\n[0,2,0,3,0,2,1,4,0,2,2,3,1,1,3,1,1,0,2,0,3,1,2,3,1,3,0,0,1,0,4,3,2,3,3,3,1,4,2,3,3,3,3,1,0,3,1,4,0,1,1,0,1,2,0,1,1,0,1,1,0,3,1,3,2,2,0,1,0,0,0,2,3,3,3,1,0,0,0,0,0,2,3],\\n[0,5,0,4,0,5,0,2,0,4,5,5,3,3,4,3,3,1,5,4,4,2,4,4,4,3,4,2,4,3,5,5,4,3,3,4,3,3,5,5,4,5,5,1,3,4,5,3,1,4,3,1,3,3,0,3,3,1,4,3,1,4,5,3,3,5,0,4,0,3,0,5,3,3,1,4,3,0,4,0,1,5,3],\\n[0,5,0,5,0,4,0,2,0,4,4,3,4,3,3,3,3,3,5,4,4,4,4,4,4,5,3,3,5,2,4,4,4,3,4,4,3,3,4,4,5,5,3,3,4,3,4,3,3,4,3,3,3,3,1,2,2,1,4,3,3,5,4,4,3,4,0,4,0,3,0,4,4,4,4,4,1,0,4,2,0,2,4],\\n[0,4,0,4,0,3,0,1,0,3,5,2,3,0,3,0,2,1,4,2,3,3,4,1,4,3,3,2,4,1,3,3,3,0,3,3,0,0,3,3,3,5,3,3,3,3,3,2,0,2,0,0,2,0,0,2,0,0,1,0,0,3,1,2,2,3,0,3,0,2,0,4,4,3,3,4,1,0,3,0,0,2,4],\\n[0,0,0,4,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,1,0,2,0,1,0,0,0,0,0,3,1,3,0,3,2,0,0,0,1,0,3,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,2,0,0,0,0,0,0,2],\\n[0,2,1,3,0,2,0,2,0,3,3,3,3,1,3,1,3,3,3,3,3,3,4,2,2,1,2,1,4,0,4,3,1,3,3,3,2,4,3,5,4,3,3,3,3,3,3,3,0,1,3,0,2,0,0,1,0,0,1,0,0,4,2,0,2,3,0,3,3,0,3,3,4,2,3,1,4,0,1,2,0,2,3],\\n[0,3,0,3,0,1,0,3,0,2,3,3,3,0,3,1,2,0,3,3,2,3,3,2,3,2,3,1,3,0,4,3,2,0,3,3,1,4,3,3,2,3,4,3,1,3,3,1,1,0,1,1,0,1,0,1,0,1,0,0,0,4,1,1,0,3,0,3,1,0,2,3,3,3,3,3,1,0,0,2,0,3,3],\\n[0,0,0,0,0,0,0,0,0,0,3,0,2,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,0,3,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,2,3,0,0,0,0,0,0,0,0,3],\\n[0,2,0,3,1,3,0,3,0,2,3,3,3,1,3,1,3,1,3,1,3,3,3,1,3,0,2,3,1,1,4,3,3,2,3,3,1,2,2,4,1,3,3,0,1,4,2,3,0,1,3,0,3,0,0,1,3,0,2,0,0,3,3,2,1,3,0,3,0,2,0,3,4,4,4,3,1,0,3,0,0,3,3],\\n[0,2,0,1,0,2,0,0,0,1,3,2,2,1,3,0,1,1,3,0,3,2,3,1,2,0,2,0,1,1,3,3,3,0,3,3,1,1,2,3,2,3,3,1,2,3,2,0,0,1,0,0,0,0,0,0,3,0,1,0,0,2,1,2,1,3,0,3,0,0,0,3,4,4,4,3,2,0,2,0,0,2,4],\\n[0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3],\\n[0,3,0,3,0,2,0,3,0,3,3,3,2,3,2,2,2,0,3,1,3,3,3,2,3,3,0,0,3,0,3,2,2,0,2,3,1,4,3,4,3,3,2,3,1,5,4,4,0,3,1,2,1,3,0,3,1,1,2,0,2,3,1,3,1,3,0,3,0,1,0,3,3,4,4,2,1,0,2,1,0,2,4],\\n[0,1,0,3,0,1,0,2,0,1,4,2,5,1,4,0,2,0,2,1,3,1,4,0,2,1,0,0,2,1,4,1,1,0,3,3,0,5,1,3,2,3,3,1,0,3,2,3,0,1,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,3,0,2,0,1,0,3,3,3,4,3,3,0,0,0,0,2,3],\\n[0,0,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,3],\\n[0,1,0,3,0,4,0,3,0,2,4,3,1,0,3,2,2,1,3,1,2,2,3,1,1,1,2,1,3,0,1,2,0,1,3,2,1,3,0,5,5,1,0,0,1,3,2,1,0,3,0,0,1,0,0,0,0,0,3,4,0,1,1,1,3,2,0,2,0,1,0,2,3,3,1,2,3,0,1,0,1,0,4],\\n[0,0,0,1,0,3,0,3,0,2,2,1,0,0,4,0,3,0,3,1,3,0,3,0,3,0,1,0,3,0,3,1,3,0,3,3,0,0,1,2,1,1,1,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,2,2,1,2,0,0,2,0,0,0,0,2,3,3,3,3,0,0,0,0,1,4],\\n[0,0,0,3,0,3,0,0,0,0,3,1,1,0,3,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,3,0,2,0,2,3,0,0,2,2,3,1,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,3],\\n[2,4,0,5,0,5,0,4,0,3,4,3,3,3,4,3,3,3,4,3,4,4,5,4,5,5,5,2,3,0,5,5,4,1,5,4,3,1,5,4,3,4,4,3,3,4,3,3,0,3,2,0,2,3,0,3,0,0,3,3,0,5,3,2,3,3,0,3,0,3,0,3,4,5,4,5,3,0,4,3,0,3,4],\\n[0,3,0,3,0,3,0,3,0,3,3,4,3,2,3,2,3,0,4,3,3,3,3,3,3,3,3,0,3,2,4,3,3,1,3,4,3,4,4,4,3,4,4,3,2,4,4,1,0,2,0,0,1,1,0,2,0,0,3,1,0,5,3,2,1,3,0,3,0,1,2,4,3,2,4,3,3,0,3,2,0,4,4],\\n[0,3,0,3,0,1,0,0,0,1,4,3,3,2,3,1,3,1,4,2,3,2,4,2,3,4,3,0,2,2,3,3,3,0,3,3,3,0,3,4,1,3,3,0,3,4,3,3,0,1,1,0,1,0,0,0,4,0,3,0,0,3,1,2,1,3,0,4,0,1,0,4,3,3,4,3,3,0,2,0,0,3,3],\\n[0,3,0,4,0,1,0,3,0,3,4,3,3,0,3,3,3,1,3,1,3,3,4,3,3,3,0,0,3,1,5,3,3,1,3,3,2,5,4,3,3,4,5,3,2,5,3,4,0,1,0,0,0,0,0,2,0,0,1,1,0,4,2,2,1,3,0,3,0,2,0,4,4,3,5,3,2,0,1,1,0,3,4],\\n[0,5,0,4,0,5,0,2,0,4,4,3,3,2,3,3,3,1,4,3,4,1,5,3,4,3,4,0,4,2,4,3,4,1,5,4,0,4,4,4,4,5,4,1,3,5,4,2,1,4,1,1,3,2,0,3,1,0,3,2,1,4,3,3,3,4,0,4,0,3,0,4,4,4,3,3,3,0,4,2,0,3,4],\\n[1,4,0,4,0,3,0,1,0,3,3,3,1,1,3,3,2,2,3,3,1,0,3,2,2,1,2,0,3,1,2,1,2,0,3,2,0,2,2,3,3,4,3,0,3,3,1,2,0,1,1,3,1,2,0,0,3,0,1,1,0,3,2,2,3,3,0,3,0,0,0,2,3,3,4,3,3,0,1,0,0,1,4],\\n[0,4,0,4,0,4,0,0,0,3,4,4,3,1,4,2,3,2,3,3,3,1,4,3,4,0,3,0,4,2,3,3,2,2,5,4,2,1,3,4,3,4,3,1,3,3,4,2,0,2,1,0,3,3,0,0,2,0,3,1,0,4,4,3,4,3,0,4,0,1,0,2,4,4,4,4,4,0,3,2,0,3,3],\\n[0,0,0,1,0,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,3,2,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2],\\n[0,2,0,3,0,4,0,4,0,1,3,3,3,0,4,0,2,1,2,1,1,1,2,0,3,1,1,0,1,0,3,1,0,0,3,3,2,0,1,1,0,0,0,0,0,1,0,2,0,2,2,0,3,1,0,0,1,0,1,1,0,1,2,0,3,0,0,0,0,1,0,0,3,3,4,3,1,0,1,0,3,0,2],\\n[0,0,0,3,0,5,0,0,0,0,1,0,2,0,3,1,0,1,3,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,4,0,0,0,2,3,0,1,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,3],\\n[0,2,0,5,0,5,0,1,0,2,4,3,3,2,5,1,3,2,3,3,3,0,4,1,2,0,3,0,4,0,2,2,1,1,5,3,0,0,1,4,2,3,2,0,3,3,3,2,0,2,4,1,1,2,0,1,1,0,3,1,0,1,3,1,2,3,0,2,0,0,0,1,3,5,4,4,4,0,3,0,0,1,3],\\n[0,4,0,5,0,4,0,4,0,4,5,4,3,3,4,3,3,3,4,3,4,4,5,3,4,5,4,2,4,2,3,4,3,1,4,4,1,3,5,4,4,5,5,4,4,5,5,5,2,3,3,1,4,3,1,3,3,0,3,3,1,4,3,4,4,4,0,3,0,4,0,3,3,4,4,5,0,0,4,3,0,4,5],\\n[0,4,0,4,0,3,0,3,0,3,4,4,4,3,3,2,4,3,4,3,4,3,5,3,4,3,2,1,4,2,4,4,3,1,3,4,2,4,5,5,3,4,5,4,1,5,4,3,0,3,2,2,3,2,1,3,1,0,3,3,3,5,3,3,3,5,4,4,2,3,3,4,3,3,3,2,1,0,3,2,1,4,3],\\n[0,4,0,5,0,4,0,3,0,3,5,5,3,2,4,3,4,0,5,4,4,1,4,4,4,3,3,3,4,3,5,5,2,3,3,4,1,2,5,5,3,5,5,2,3,5,5,4,0,3,2,0,3,3,1,1,5,1,4,1,0,4,3,2,3,5,0,4,0,3,0,5,4,3,4,3,0,0,4,1,0,4,4],\\n[1,3,0,4,0,2,0,2,0,2,5,5,3,3,3,3,3,0,4,2,3,4,4,4,3,4,0,0,3,4,5,4,3,3,3,3,2,5,5,4,5,5,5,4,3,5,5,5,1,3,1,0,1,0,0,3,2,0,4,2,0,5,2,3,2,4,1,3,0,3,0,4,5,4,5,4,3,0,4,2,0,5,4],\\n[0,3,0,4,0,5,0,3,0,3,4,4,3,2,3,2,3,3,3,3,3,2,4,3,3,2,2,0,3,3,3,3,3,1,3,3,3,0,4,4,3,4,4,1,1,4,4,2,0,3,1,0,1,1,0,4,1,0,2,3,1,3,3,1,3,4,0,3,0,1,0,3,1,3,0,0,1,0,2,0,0,4,4],\\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\n[0,3,0,3,0,2,0,3,0,1,5,4,3,3,3,1,4,2,1,2,3,4,4,2,4,4,5,0,3,1,4,3,4,0,4,3,3,3,2,3,2,5,3,4,3,2,2,3,0,0,3,0,2,1,0,1,2,0,0,0,0,2,1,1,3,1,0,2,0,4,0,3,4,4,4,5,2,0,2,0,0,1,3],\\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,4,2,1,1,0,1,0,3,2,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,2,0,0,0,1,4,0,4,2,1,0,0,0,0,0,1],\\n[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,0,0,2,0,2,1,0,0,1,2,1,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,2],\\n[0,4,0,4,0,4,0,3,0,4,4,3,4,2,4,3,2,0,4,4,4,3,5,3,5,3,3,2,4,2,4,3,4,3,1,4,0,2,3,4,4,4,3,3,3,4,4,4,3,4,1,3,4,3,2,1,2,1,3,3,3,4,4,3,3,5,0,4,0,3,0,4,3,3,3,2,1,0,3,0,0,3,3],\\n[0,4,0,3,0,3,0,3,0,3,5,5,3,3,3,3,4,3,4,3,3,3,4,4,4,3,3,3,3,4,3,5,3,3,1,3,2,4,5,5,5,5,4,3,4,5,5,3,2,2,3,3,3,3,2,3,3,1,2,3,2,4,3,3,3,4,0,4,0,2,0,4,3,2,2,1,2,0,3,0,0,4,1]\\n];\\n\\nfunction JapaneseContextAnalysis() {\\n    var NUM_OF_CATEGORY = 6;\\n    var DONT_KNOW = -1;\\n    var ENOUGH_REL_THRESHOLD = 100;\\n    var MAX_REL_THRESHOLD = 1000;\\n    var MINIMUM_DATA_THRESHOLD = 4;\\n    var self = this;\\n\\n    function init() {\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        this._mTotalRel = 0; // total sequence received\\n        this._mRelSample = []; // category counters, each interger counts sequence in its category\\n        for( var i = 0; i < NUM_OF_CATEGORY; this._mRelSample[i++] = 0 );\\n        this._mNeedToSkipCharNum = 0; // if last byte in current buffer is not the last byte of a character, we need to know how many bytes to skip in next buffer\\n        this._mLastCharOrder = -1; // The order of previous char\\n        this._mDone = false; // If this flag is set to true, detection is done and conclusion has been made\\n    }\\n\\n    this.feed = function(aBuf, aLen) {\\n        if( this._mDone ) return;\\n\\n        // The buffer we got is byte oriented, and a character may span in more than one\\n        // buffers. In case the last one or two byte in last buffer is not complete, we\\n        // record how many byte needed to complete that character and skip these bytes here.\\n        // We can choose to record those bytes as well and analyse the character once it\\n        // is complete, but since a character will not make much difference, by simply skipping\\n        // this character will simply our logic and improve performance.\\n        var i = this._mNeedToSkipCharNum;\\n        while( i < aLen ) {\\n            var rets = this.getOrder(aBuf.slice(i,i+2));\\n            var order = rets[0];\\n            var charLen = rets[1];\\n            i += charLen;\\n            if( i > aLen ) {\\n                this._mNeedToSkipCharNum = i - aLen;\\n                this._mLastCharOrder = -1;\\n            } else {\\n                if( order != -1 && this._mLastCharOrder != -1 ) {\\n                    this._mTotalRel += 1;\\n                    if( this._mTotalRel > MAX_REL_THRESHOLD ) {\\n                        this._mDone = true;\\n                        break;\\n                    }\\n                    this._mRelSample[exports.jp2CharContext[this._mLastCharOrder][order]] += 1;\\n                }\\n                this._mLastCharOrder = order;\\n            }\\n        }\\n    }\\n\\n    this.gotEnoughData = function() {\\n        return this._mTotalRel > ENOUGH_REL_THRESHOLD;\\n    }\\n\\n    this.getConfidence = function() {\\n        // This is just one way to calculate confidence. It works well for me.\\n        if( this._mTotalRel > MINIMUM_DATA_THRESHOLD ) {\\n            return (this._mTotalRel - this._mRelSample[0]) / this._mTotalRel;\\n        } else {\\n            return DONT_KNOW;\\n        }\\n    }\\n\\n    this.getOrder = function(aStr) {\\n        return [-1, 1];\\n    }\\n\\n    init();\\n}\\n\\nfunction SJISContextAnalysis() {\\n    this.getOrder = function(aStr) {\\n        if( !aStr ) return [-1, 1];\\n        // find out current char's byte length\\n        if( (aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F) ||\\n            (aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xFC) ) {\\n            var charLen = 2;\\n        } else {\\n            charLen = 1;\\n        }\\n\\n        // return its order if it is hiragana\\n        if( aStr.length > 1 ) {\\n            if( aStr.charCodeAt(0) == 0x82 && aStr.charCodeAt(1) >= 0x9F &&\\n                aStr.charCodeAt(0) <= 0xF1 ) {\\n                return [aStr.charCodeAt(1) - 0x9F, charLen];\\n            }\\n        }\\n\\n        return [-1, charLen];\\n    }\\n}\\nSJISContextAnalysis.prototype = new JapaneseContextAnalysis();\\n\\nexports.SJISContextAnalysis = SJISContextAnalysis\\n\\nfunction EUCJPContextAnalysis() {\\n    this.getOrder = function(aStr) {\\n        if( !aStr ) return [-1, 1];\\n        // find out current char's byte length\\n        if( aStr.charCodeAt(0) >= 0x8E ||\\n            (aStr.charCodeAt(0) >= 0xA1 && aStr.charCodeAt(0) <= 0xFE) ) {\\n            var charLen = 2;\\n        } else if( aStr.charCodeAt(0) == 0x8F ) {\\n            charLen = 3;\\n        } else {\\n            charLen = 1;\\n        }\\n\\n        // return its order if it is hiragana\\n        if( aStr.length > 1 ) {\\n            if( aStr.charCodeAt(0) == 0xA4 && aStr.charCodeAt(1) >= 0xA1 &&\\n                aStr.charCodeAt(1) <= 0xF3 ) {\\n                return [aStr.charCodeAt(1) - 0xA1, charLen];\\n            }\\n        }\\n\\n        return [-1, charLen];\\n    }\\n}\\nEUCJPContextAnalysis.prototype = new JapaneseContextAnalysis();\\n\\nexports.EUCJPContextAnalysis = EUCJPContextAnalysis\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { Event, EventEmitter } from 'vscode';\\n\\n/**\\n * The severity level of a log message\\n */\\nexport enum LogLevel {\\n\\tTrace = 1,\\n\\tDebug = 2,\\n\\tInfo = 3,\\n\\tWarning = 4,\\n\\tError = 5,\\n\\tCritical = 6,\\n\\tOff = 7\\n}\\n\\nlet _logLevel: LogLevel = LogLevel.Info;\\nconst _onDidChangeLogLevel = new EventEmitter<LogLevel>();\\n\\nexport const Log = {\\n\\t/**\\n\\t * Current logging level.\\n\\t */\\n\\tget logLevel(): LogLevel {\\n\\t\\treturn _logLevel;\\n\\t},\\n\\n\\t/**\\n\\t * Current logging level.\\n\\t */\\n\\tset logLevel(logLevel: LogLevel) {\\n\\t\\tif (_logLevel === logLevel) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t_logLevel = logLevel;\\n\\t\\t_onDidChangeLogLevel.fire(logLevel);\\n\\t},\\n\\n\\t/**\\n\\t * An [event](#Event) that fires when the log level has changed.\\n\\t */\\n\\tget onDidChangeLogLevel(): Event<LogLevel> {\\n\\t\\treturn _onDidChangeLogLevel.event;\\n\\t}\\n};\\n\",null,\"\\\"use strict\\\";\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar path = require(\\\"path\\\");\\r\\nvar semver = require(\\\"semver\\\");\\r\\n/* tslint:disable-next-line:no-var-requires */\\r\\nvar moduleModule = require(\\\"module\\\");\\r\\nvar nativeModules = Object.keys(process.binding(\\\"natives\\\"));\\r\\nvar originalRequire = moduleModule.prototype.require;\\r\\nfunction makePatchingRequire(knownPatches) {\\r\\n    var patchedModules = {};\\r\\n    return function patchedRequire(moduleId) {\\r\\n        var originalModule = originalRequire.apply(this, arguments);\\r\\n        if (knownPatches[moduleId]) {\\r\\n            // Fetch the specific path of the module\\r\\n            var modulePath = moduleModule._resolveFilename(moduleId, this);\\r\\n            if (patchedModules.hasOwnProperty(modulePath)) {\\r\\n                // This module has already been patched, no need to reapply\\r\\n                return patchedModules[modulePath];\\r\\n            }\\r\\n            var moduleVersion = void 0;\\r\\n            if (nativeModules.indexOf(moduleId) < 0) {\\r\\n                try {\\r\\n                    moduleVersion = originalRequire.call(this, path.join(moduleId, \\\"package.json\\\")).version;\\r\\n                }\\r\\n                catch (e) {\\r\\n                    // This should only happen if moduleId is actually a path rather than a module\\r\\n                    // This is not a supported scenario\\r\\n                    return originalModule;\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                // This module is implemented natively so we cannot find a package.json\\r\\n                // Instead, take the version of node itself\\r\\n                moduleVersion = process.version.substring(1);\\r\\n            }\\r\\n            var prereleaseTagIndex = moduleVersion.indexOf(\\\"-\\\");\\r\\n            if (prereleaseTagIndex >= 0) {\\r\\n                // We ignore prerelease tags to avoid impossible to fix gaps in support\\r\\n                // e.g. supporting console in >= 4.0.0 would otherwise not include\\r\\n                // 8.0.0-pre\\r\\n                moduleVersion = moduleVersion.substring(0, prereleaseTagIndex);\\r\\n            }\\r\\n            var modifiedModule = originalModule;\\r\\n            for (var _i = 0, _a = knownPatches[moduleId]; _i < _a.length; _i++) {\\r\\n                var modulePatcher = _a[_i];\\r\\n                if (semver.satisfies(moduleVersion, modulePatcher.versionSpecifier)) {\\r\\n                    modifiedModule = modulePatcher.patch(modifiedModule, modulePath);\\r\\n                }\\r\\n            }\\r\\n            return patchedModules[modulePath] = modifiedModule;\\r\\n        }\\r\\n        return originalModule;\\r\\n    };\\r\\n}\\r\\nexports.makePatchingRequire = makePatchingRequire;\\r\\n//# sourceMappingURL=patchRequire.js.map\",\"module.exports = require(\\\"module\\\");\",\"module.exports = require(\\\"crypto\\\");\",\"// THIS FILE WAS AUTOGENERATED\\r\\n\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nexports.AvailabilityData = require(\\\"./AvailabilityData\\\");\\r\\nexports.Base = require(\\\"./Base\\\");\\r\\nexports.ContextTagKeys = require(\\\"./ContextTagKeys\\\");\\r\\nexports.Data = require(\\\"./Data\\\");\\r\\nexports.DataPoint = require(\\\"./DataPoint\\\");\\r\\nexports.DataPointType = require(\\\"./DataPointType\\\");\\r\\nexports.Domain = require(\\\"./Domain\\\");\\r\\nexports.Envelope = require(\\\"./Envelope\\\");\\r\\nexports.EventData = require(\\\"./EventData\\\");\\r\\nexports.ExceptionData = require(\\\"./ExceptionData\\\");\\r\\nexports.ExceptionDetails = require(\\\"./ExceptionDetails\\\");\\r\\nexports.MessageData = require(\\\"./MessageData\\\");\\r\\nexports.MetricData = require(\\\"./MetricData\\\");\\r\\nexports.PageViewData = require(\\\"./PageViewData\\\");\\r\\nexports.RemoteDependencyData = require(\\\"./RemoteDependencyData\\\");\\r\\nexports.RequestData = require(\\\"./RequestData\\\");\\r\\nexports.SeverityLevel = require(\\\"./SeverityLevel\\\");\\r\\nexports.StackFrame = require(\\\"./StackFrame\\\");\\r\\n//# sourceMappingURL=index.js.map\",\"// THIS FILE WAS AUTOGENERATED\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Data struct to contain only C section with custom fields.\\r\\n */\\r\\nvar Base = (function () {\\r\\n    function Base() {\\r\\n    }\\r\\n    return Base;\\r\\n}());\\r\\nmodule.exports = Base;\\r\\n//# sourceMappingURL=Base.js.map\",\"// THIS FILE WAS AUTOGENERATED\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Type of the metric data measurement.\\r\\n */\\r\\nvar DataPointType;\\r\\n(function (DataPointType) {\\r\\n    DataPointType[DataPointType[\\\"Measurement\\\"] = 0] = \\\"Measurement\\\";\\r\\n    DataPointType[DataPointType[\\\"Aggregation\\\"] = 1] = \\\"Aggregation\\\";\\r\\n})(DataPointType || (DataPointType = {}));\\r\\nmodule.exports = DataPointType;\\r\\n//# sourceMappingURL=DataPointType.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Domain = require(\\\"./Domain\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\\r\\n */\\r\\nvar EventData = (function (_super) {\\r\\n    __extends(EventData, _super);\\r\\n    function EventData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.properties = {};\\r\\n        _this.measurements = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return EventData;\\r\\n}(Domain));\\r\\nmodule.exports = EventData;\\r\\n//# sourceMappingURL=EventData.js.map\",\"\\\"use strict\\\";\\r\\nvar os = require(\\\"os\\\");\\r\\nvar Logging = require(\\\"../Library/Logging\\\");\\r\\nvar AutoCollectPerformance = (function () {\\r\\n    function AutoCollectPerformance(client) {\\r\\n        if (!!AutoCollectPerformance.INSTANCE) {\\r\\n            throw new Error(\\\"Performance tracking should be configured from the applicationInsights object\\\");\\r\\n        }\\r\\n        AutoCollectPerformance.INSTANCE = this;\\r\\n        this._isInitialized = false;\\r\\n        this._client = client;\\r\\n    }\\r\\n    AutoCollectPerformance.prototype.enable = function (isEnabled) {\\r\\n        var _this = this;\\r\\n        this._isEnabled = isEnabled;\\r\\n        if (this._isEnabled && !this._isInitialized) {\\r\\n            this._isInitialized = true;\\r\\n        }\\r\\n        if (isEnabled) {\\r\\n            if (!this._handle) {\\r\\n                this._lastCpus = os.cpus();\\r\\n                this._lastRequests = {\\r\\n                    totalRequestCount: AutoCollectPerformance._totalRequestCount,\\r\\n                    totalFailedRequestCount: AutoCollectPerformance._totalFailedRequestCount,\\r\\n                    time: +new Date\\r\\n                };\\r\\n                if (typeof process.cpuUsage === 'function') {\\r\\n                    this._lastAppCpuUsage = process.cpuUsage();\\r\\n                }\\r\\n                this._lastHrtime = process.hrtime();\\r\\n                this._handle = setInterval(function () { return _this.trackPerformance(); }, 60000);\\r\\n                this._handle.unref(); // Allow the app to terminate even while this loop is going on\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            if (this._handle) {\\r\\n                clearInterval(this._handle);\\r\\n                this._handle = undefined;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    AutoCollectPerformance.countRequest = function (request, response) {\\r\\n        var _this = this;\\r\\n        if (!AutoCollectPerformance.isEnabled()) {\\r\\n            return;\\r\\n        }\\r\\n        var start = +new Date;\\r\\n        if (!request || !response) {\\r\\n            Logging.warn(\\\"AutoCollectPerformance.countRequest was called with invalid parameters: \\\", !!request, !!response);\\r\\n            return;\\r\\n        }\\r\\n        // response listeners\\r\\n        if (typeof response.once === \\\"function\\\") {\\r\\n            response.once(\\\"finish\\\", function () {\\r\\n                var end = +new Date;\\r\\n                _this._lastRequestExecutionTime = end - start;\\r\\n                AutoCollectPerformance._totalRequestCount++;\\r\\n                if (response.statusCode >= 400) {\\r\\n                    AutoCollectPerformance._totalFailedRequestCount++;\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    };\\r\\n    AutoCollectPerformance.prototype.isInitialized = function () {\\r\\n        return this._isInitialized;\\r\\n    };\\r\\n    AutoCollectPerformance.isEnabled = function () {\\r\\n        return AutoCollectPerformance.INSTANCE && AutoCollectPerformance.INSTANCE._isEnabled;\\r\\n    };\\r\\n    AutoCollectPerformance.prototype.trackPerformance = function () {\\r\\n        this._trackCpu();\\r\\n        this._trackMemory();\\r\\n        this._trackNetwork();\\r\\n    };\\r\\n    AutoCollectPerformance.prototype._trackCpu = function () {\\r\\n        // this reports total ms spent in each category since the OS was booted, to calculate percent it is necessary\\r\\n        // to find the delta since the last measurement\\r\\n        var cpus = os.cpus();\\r\\n        if (cpus && cpus.length && this._lastCpus && cpus.length === this._lastCpus.length) {\\r\\n            var totalUser = 0;\\r\\n            var totalSys = 0;\\r\\n            var totalNice = 0;\\r\\n            var totalIdle = 0;\\r\\n            var totalIrq = 0;\\r\\n            for (var i = 0; !!cpus && i < cpus.length; i++) {\\r\\n                var cpu = cpus[i];\\r\\n                var lastCpu = this._lastCpus[i];\\r\\n                var name = \\\"% cpu(\\\" + i + \\\") \\\";\\r\\n                var model = cpu.model;\\r\\n                var speed = cpu.speed;\\r\\n                var times = cpu.times;\\r\\n                var lastTimes = lastCpu.times;\\r\\n                // user cpu time (or) % CPU time spent in user space\\r\\n                var user = (times.user - lastTimes.user) || 0;\\r\\n                totalUser += user;\\r\\n                // system cpu time (or) % CPU time spent in kernel space\\r\\n                var sys = (times.sys - lastTimes.sys) || 0;\\r\\n                totalSys += sys;\\r\\n                // user nice cpu time (or) % CPU time spent on low priority processes\\r\\n                var nice = (times.nice - lastTimes.nice) || 0;\\r\\n                totalNice += nice;\\r\\n                // idle cpu time (or) % CPU time spent idle\\r\\n                var idle = (times.idle - lastTimes.idle) || 0;\\r\\n                totalIdle += idle;\\r\\n                // irq (or) % CPU time spent servicing/handling hardware interrupts\\r\\n                var irq = (times.irq - lastTimes.irq) || 0;\\r\\n                totalIrq += irq;\\r\\n            }\\r\\n            // Calculate % of total cpu time (user + system) this App Process used (Only supported by node v6.1.0+)\\r\\n            var appCpuPercent = undefined;\\r\\n            if (typeof process.cpuUsage === 'function') {\\r\\n                var appCpuUsage = process.cpuUsage();\\r\\n                var hrtime = process.hrtime();\\r\\n                var totalApp = ((appCpuUsage.user - this._lastAppCpuUsage.user) + (appCpuUsage.system - this._lastAppCpuUsage.system)) || 0;\\r\\n                if (typeof this._lastHrtime !== 'undefined' && this._lastHrtime.length === 2) {\\r\\n                    var elapsedTime = ((hrtime[0] - this._lastHrtime[0]) * 1e6 + (hrtime[1] - this._lastHrtime[1]) / 1e3) || 0; // convert to microseconds\\r\\n                    appCpuPercent = 100 * totalApp / (elapsedTime * cpus.length);\\r\\n                }\\r\\n                // Set previous\\r\\n                this._lastAppCpuUsage = appCpuUsage;\\r\\n                this._lastHrtime = hrtime;\\r\\n            }\\r\\n            var combinedTotal = (totalUser + totalSys + totalNice + totalIdle + totalIrq) || 1;\\r\\n            this._client.trackMetric({ name: \\\"\\\\\\\\Processor(_Total)\\\\\\\\% Processor Time\\\", value: ((combinedTotal - totalIdle) / combinedTotal) * 100 });\\r\\n            this._client.trackMetric({ name: \\\"\\\\\\\\Process(??APP_WIN32_PROC??)\\\\\\\\% Processor Time\\\", value: appCpuPercent || ((totalUser / combinedTotal) * 100) });\\r\\n        }\\r\\n        this._lastCpus = cpus;\\r\\n    };\\r\\n    AutoCollectPerformance.prototype._trackMemory = function () {\\r\\n        var freeMem = os.freemem();\\r\\n        var usedMem = process.memoryUsage().rss;\\r\\n        this._client.trackMetric({ name: \\\"\\\\\\\\Process(??APP_WIN32_PROC??)\\\\\\\\Private Bytes\\\", value: usedMem });\\r\\n        this._client.trackMetric({ name: \\\"\\\\\\\\Memory\\\\\\\\Available Bytes\\\", value: freeMem });\\r\\n    };\\r\\n    AutoCollectPerformance.prototype._trackNetwork = function () {\\r\\n        // track total request counters\\r\\n        var lastRequests = this._lastRequests;\\r\\n        var requests = {\\r\\n            totalRequestCount: AutoCollectPerformance._totalRequestCount,\\r\\n            totalFailedRequestCount: AutoCollectPerformance._totalFailedRequestCount,\\r\\n            time: +new Date\\r\\n        };\\r\\n        var intervalRequests = (requests.totalRequestCount - lastRequests.totalRequestCount) || 0;\\r\\n        var intervalFailedRequests = (requests.totalFailedRequestCount - lastRequests.totalFailedRequestCount) || 0;\\r\\n        var elapsedMs = requests.time - lastRequests.time;\\r\\n        var elapsedSeconds = elapsedMs / 1000;\\r\\n        if (elapsedMs > 0) {\\r\\n            var requestsPerSec = intervalRequests / elapsedSeconds;\\r\\n            var failedRequestsPerSec = intervalFailedRequests / elapsedSeconds;\\r\\n            this._client.trackMetric({ name: \\\"\\\\\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\\\\\Requests/Sec\\\", value: requestsPerSec });\\r\\n            this._client.trackMetric({ name: \\\"\\\\\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\\\\\Request Execution Time\\\", value: AutoCollectPerformance._lastRequestExecutionTime });\\r\\n        }\\r\\n        this._lastRequests = requests;\\r\\n    };\\r\\n    AutoCollectPerformance.prototype.dispose = function () {\\r\\n        AutoCollectPerformance.INSTANCE = null;\\r\\n        this.enable(false);\\r\\n        this._isInitialized = false;\\r\\n    };\\r\\n    AutoCollectPerformance._totalRequestCount = 0;\\r\\n    AutoCollectPerformance._totalFailedRequestCount = 0;\\r\\n    AutoCollectPerformance._lastRequestExecutionTime = 0;\\r\\n    return AutoCollectPerformance;\\r\\n}());\\r\\nmodule.exports = AutoCollectPerformance;\\r\\n//# sourceMappingURL=Performance.js.map\",\"\\\"use strict\\\";\\r\\n/**\\r\\n * Base class for helpers that read data from HTTP requst/response objects and convert them\\r\\n * into the telemetry contract objects.\\r\\n */\\r\\nvar RequestParser = (function () {\\r\\n    function RequestParser() {\\r\\n    }\\r\\n    /**\\r\\n     * Gets a url parsed out from request options\\r\\n     */\\r\\n    RequestParser.prototype.getUrl = function () {\\r\\n        return this.url;\\r\\n    };\\r\\n    RequestParser.prototype.RequestParser = function () {\\r\\n        this.startTime = +new Date();\\r\\n    };\\r\\n    RequestParser.prototype._setStatus = function (status, error) {\\r\\n        var endTime = +new Date();\\r\\n        this.duration = endTime - this.startTime;\\r\\n        this.statusCode = status;\\r\\n        var properties = this.properties || {};\\r\\n        if (error) {\\r\\n            if (typeof error === \\\"string\\\") {\\r\\n                properties[\\\"error\\\"] = error;\\r\\n            }\\r\\n            else if (error instanceof Error) {\\r\\n                properties[\\\"error\\\"] = error.message;\\r\\n            }\\r\\n            else if (typeof error === \\\"object\\\") {\\r\\n                for (var key in error) {\\r\\n                    properties[key] = error[key] && error[key].toString && error[key].toString();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        this.properties = properties;\\r\\n    };\\r\\n    RequestParser.prototype._isSuccess = function () {\\r\\n        return (0 < this.statusCode) && (this.statusCode < 400);\\r\\n    };\\r\\n    return RequestParser;\\r\\n}());\\r\\nmodule.exports = RequestParser;\\r\\n//# sourceMappingURL=RequestParser.js.map\",\"\\\"use strict\\\";\\r\\nvar http = require(\\\"http\\\");\\r\\nvar https = require(\\\"https\\\");\\r\\nvar Logging = require(\\\"../Library/Logging\\\");\\r\\nvar Util = require(\\\"../Library/Util\\\");\\r\\nvar RequestResponseHeaders = require(\\\"../Library/RequestResponseHeaders\\\");\\r\\nvar HttpRequestParser = require(\\\"./HttpRequestParser\\\");\\r\\nvar CorrelationContextManager_1 = require(\\\"./CorrelationContextManager\\\");\\r\\nvar AutoCollectPerformance = require(\\\"./Performance\\\");\\r\\nvar AutoCollectHttpRequests = (function () {\\r\\n    function AutoCollectHttpRequests(client) {\\r\\n        if (!!AutoCollectHttpRequests.INSTANCE) {\\r\\n            throw new Error(\\\"Server request tracking should be configured from the applicationInsights object\\\");\\r\\n        }\\r\\n        AutoCollectHttpRequests.INSTANCE = this;\\r\\n        this._client = client;\\r\\n    }\\r\\n    AutoCollectHttpRequests.prototype.enable = function (isEnabled) {\\r\\n        this._isEnabled = isEnabled;\\r\\n        // Autocorrelation requires automatic monitoring of incoming server requests\\r\\n        // Disabling autocollection but enabling autocorrelation will still enable\\r\\n        // request monitoring but will not produce request events\\r\\n        if ((this._isAutoCorrelating || this._isEnabled || AutoCollectPerformance.isEnabled()) && !this._isInitialized) {\\r\\n            this.useAutoCorrelation(this._isAutoCorrelating);\\r\\n            this._initialize();\\r\\n        }\\r\\n    };\\r\\n    AutoCollectHttpRequests.prototype.useAutoCorrelation = function (isEnabled) {\\r\\n        if (isEnabled && !this._isAutoCorrelating) {\\r\\n            CorrelationContextManager_1.CorrelationContextManager.enable();\\r\\n        }\\r\\n        else if (!isEnabled && this._isAutoCorrelating) {\\r\\n            CorrelationContextManager_1.CorrelationContextManager.disable();\\r\\n        }\\r\\n        this._isAutoCorrelating = isEnabled;\\r\\n    };\\r\\n    AutoCollectHttpRequests.prototype.isInitialized = function () {\\r\\n        return this._isInitialized;\\r\\n    };\\r\\n    AutoCollectHttpRequests.prototype.isAutoCorrelating = function () {\\r\\n        return this._isAutoCorrelating;\\r\\n    };\\r\\n    AutoCollectHttpRequests.prototype._generateCorrelationContext = function (requestParser) {\\r\\n        if (!this._isAutoCorrelating) {\\r\\n            return;\\r\\n        }\\r\\n        return CorrelationContextManager_1.CorrelationContextManager.generateContextObject(requestParser.getOperationId(this._client.context.tags), requestParser.getRequestId(), requestParser.getOperationName(this._client.context.tags), requestParser.getCorrelationContextHeader());\\r\\n    };\\r\\n    AutoCollectHttpRequests.prototype._initialize = function () {\\r\\n        var _this = this;\\r\\n        this._isInitialized = true;\\r\\n        var wrapOnRequestHandler = function (onRequest) {\\r\\n            if (!onRequest) {\\r\\n                return undefined;\\r\\n            }\\r\\n            if (typeof onRequest !== 'function') {\\r\\n                throw new Error('onRequest handler must be a function');\\r\\n            }\\r\\n            return function (request, response) {\\r\\n                var shouldCollect = request && !request[AutoCollectHttpRequests.alreadyAutoCollectedFlag];\\r\\n                if (request && shouldCollect) {\\r\\n                    // Set up correlation context\\r\\n                    var requestParser_1 = new HttpRequestParser(request);\\r\\n                    var correlationContext = _this._generateCorrelationContext(requestParser_1);\\r\\n                    // Note: Check for if correlation is enabled happens within this method.\\r\\n                    // If not enabled, function will directly call the callback.\\r\\n                    CorrelationContextManager_1.CorrelationContextManager.runWithContext(correlationContext, function () {\\r\\n                        if (_this._isEnabled) {\\r\\n                            // Mark as auto collected\\r\\n                            request[AutoCollectHttpRequests.alreadyAutoCollectedFlag] = true;\\r\\n                            // Auto collect request\\r\\n                            AutoCollectHttpRequests.trackRequest(_this._client, { request: request, response: response }, requestParser_1);\\r\\n                        }\\r\\n                        // Add this request to the performance counter\\r\\n                        // Note: Check for if perf counters are enabled happens within this method.\\r\\n                        // TODO: Refactor common bits between trackRequest and countRequest so they can\\r\\n                        // be used together, even when perf counters are on, and request tracking is off\\r\\n                        AutoCollectPerformance.countRequest(request, response);\\r\\n                        if (typeof onRequest === \\\"function\\\") {\\r\\n                            onRequest(request, response);\\r\\n                        }\\r\\n                    });\\r\\n                }\\r\\n                else {\\r\\n                    if (typeof onRequest === \\\"function\\\") {\\r\\n                        onRequest(request, response);\\r\\n                    }\\r\\n                }\\r\\n            };\\r\\n        };\\r\\n        // The `http.createServer` function will instantiate a new http.Server object.\\r\\n        // Inside the Server's constructor, it is using addListener to register the\\r\\n        // onRequest handler. So there are two ways to inject the wrapped onRequest handler:\\r\\n        // 1) Overwrite Server.prototype.addListener (and .on()) globally and not patching\\r\\n        //    the http.createServer call. Or\\r\\n        // 2) Overwrite the http.createServer method and add a patched addListener to the\\r\\n        //    fresh server instance. This seems more stable for possible future changes as\\r\\n        //    it also covers the case where the Server might not use addListener to manage\\r\\n        //    the callback internally.\\r\\n        //    And also as long as the constructor uses addListener to add the handle, it is\\r\\n        //    ok to patch the addListener after construction only. Because if we would patch\\r\\n        //    the prototype one and the createServer method, we would wrap the handler twice\\r\\n        //    in case of the constructor call.\\r\\n        var wrapServerEventHandler = function (server) {\\r\\n            var originalAddListener = server.addListener.bind(server);\\r\\n            server.addListener = function (eventType, eventHandler) {\\r\\n                switch (eventType) {\\r\\n                    case 'request':\\r\\n                    case 'checkContinue':\\r\\n                        return originalAddListener(eventType, wrapOnRequestHandler(eventHandler));\\r\\n                    default:\\r\\n                        return originalAddListener(eventType, eventHandler);\\r\\n                }\\r\\n            };\\r\\n            // on is an alias to addListener only\\r\\n            server.on = server.addListener;\\r\\n        };\\r\\n        var originalHttpServer = http.createServer;\\r\\n        http.createServer = function (onRequest) {\\r\\n            // todo: get a pointer to the server so the IP address can be read from server.address\\r\\n            var server = originalHttpServer(wrapOnRequestHandler(onRequest));\\r\\n            wrapServerEventHandler(server);\\r\\n            return server;\\r\\n        };\\r\\n        var originalHttpsServer = https.createServer;\\r\\n        https.createServer = function (options, onRequest) {\\r\\n            var server = originalHttpsServer(options, wrapOnRequestHandler(onRequest));\\r\\n            wrapServerEventHandler(server);\\r\\n            return server;\\r\\n        };\\r\\n    };\\r\\n    /**\\r\\n     * Tracks a request synchronously (doesn't wait for response 'finish' event)\\r\\n     */\\r\\n    AutoCollectHttpRequests.trackRequestSync = function (client, telemetry) {\\r\\n        if (!telemetry.request || !telemetry.response || !client) {\\r\\n            Logging.info(\\\"AutoCollectHttpRequests.trackRequestSync was called with invalid parameters: \\\", !telemetry.request, !telemetry.response, !client);\\r\\n            return;\\r\\n        }\\r\\n        AutoCollectHttpRequests.addResponseCorrelationIdHeader(client, telemetry.response);\\r\\n        // store data about the request\\r\\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\\r\\n        var requestParser = new HttpRequestParser(telemetry.request, (correlationContext && correlationContext.operation.parentId));\\r\\n        // Overwrite correlation context with request parser results\\r\\n        if (correlationContext) {\\r\\n            correlationContext.operation.id = requestParser.getOperationId(client.context.tags) || correlationContext.operation.id;\\r\\n            correlationContext.operation.name = requestParser.getOperationName(client.context.tags) || correlationContext.operation.name;\\r\\n            correlationContext.operation.parentId = requestParser.getRequestId() || correlationContext.operation.parentId;\\r\\n            correlationContext.customProperties.addHeaderData(requestParser.getCorrelationContextHeader());\\r\\n        }\\r\\n        AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, telemetry.duration, telemetry.error);\\r\\n    };\\r\\n    /**\\r\\n     * Tracks a request by listening to the response 'finish' event\\r\\n     */\\r\\n    AutoCollectHttpRequests.trackRequest = function (client, telemetry, _requestParser) {\\r\\n        if (!telemetry.request || !telemetry.response || !client) {\\r\\n            Logging.info(\\\"AutoCollectHttpRequests.trackRequest was called with invalid parameters: \\\", !telemetry.request, !telemetry.response, !client);\\r\\n            return;\\r\\n        }\\r\\n        // store data about the request\\r\\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\\r\\n        var requestParser = _requestParser || new HttpRequestParser(telemetry.request, correlationContext && correlationContext.operation.parentId);\\r\\n        if (Util.canIncludeCorrelationHeader(client, requestParser.getUrl())) {\\r\\n            AutoCollectHttpRequests.addResponseCorrelationIdHeader(client, telemetry.response);\\r\\n        }\\r\\n        // Overwrite correlation context with request parser results (if not an automatic track. we've already precalculated the correlation context in that case)\\r\\n        if (correlationContext && !_requestParser) {\\r\\n            correlationContext.operation.id = requestParser.getOperationId(client.context.tags) || correlationContext.operation.id;\\r\\n            correlationContext.operation.name = requestParser.getOperationName(client.context.tags) || correlationContext.operation.name;\\r\\n            correlationContext.operation.parentId = requestParser.getOperationParentId(client.context.tags) || correlationContext.operation.parentId;\\r\\n            correlationContext.customProperties.addHeaderData(requestParser.getCorrelationContextHeader());\\r\\n        }\\r\\n        // response listeners\\r\\n        if (telemetry.response.once) {\\r\\n            telemetry.response.once(\\\"finish\\\", function () {\\r\\n                AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, null, null);\\r\\n            });\\r\\n        }\\r\\n        // track a failed request if an error is emitted\\r\\n        if (telemetry.request.on) {\\r\\n            telemetry.request.on(\\\"error\\\", function (error) {\\r\\n                AutoCollectHttpRequests.endRequest(client, requestParser, telemetry, null, error);\\r\\n            });\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Add the target correlationId to the response headers, if not already provided.\\r\\n     */\\r\\n    AutoCollectHttpRequests.addResponseCorrelationIdHeader = function (client, response) {\\r\\n        if (client.config && client.config.correlationId &&\\r\\n            response.getHeader && response.setHeader && !response.headersSent) {\\r\\n            var correlationHeader = response.getHeader(RequestResponseHeaders.requestContextHeader);\\r\\n            if (correlationHeader) {\\r\\n                var components = correlationHeader.split(\\\",\\\");\\r\\n                var key_1 = RequestResponseHeaders.requestContextSourceKey + \\\"=\\\";\\r\\n                if (!components.some(function (value) { return value.substring(0, key_1.length) === key_1; })) {\\r\\n                    response.setHeader(RequestResponseHeaders.requestContextHeader, correlationHeader + \\\",\\\" + RequestResponseHeaders.requestContextSourceKey + \\\"=\\\" + client.config.correlationId);\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                response.setHeader(RequestResponseHeaders.requestContextHeader, RequestResponseHeaders.requestContextSourceKey + \\\"=\\\" + client.config.correlationId);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    AutoCollectHttpRequests.endRequest = function (client, requestParser, telemetry, ellapsedMilliseconds, error) {\\r\\n        if (error) {\\r\\n            requestParser.onError(error, ellapsedMilliseconds);\\r\\n        }\\r\\n        else {\\r\\n            requestParser.onResponse(telemetry.response, ellapsedMilliseconds);\\r\\n        }\\r\\n        var requestTelemetry = requestParser.getRequestTelemetry(telemetry);\\r\\n        requestTelemetry.tagOverrides = requestParser.getRequestTags(client.context.tags);\\r\\n        if (telemetry.tagOverrides) {\\r\\n            for (var key in telemetry.tagOverrides) {\\r\\n                requestTelemetry.tagOverrides[key] = telemetry.tagOverrides[key];\\r\\n            }\\r\\n        }\\r\\n        requestTelemetry.contextObjects = requestTelemetry.contextObjects || {};\\r\\n        requestTelemetry.contextObjects[\\\"http.ServerRequest\\\"] = telemetry.request;\\r\\n        requestTelemetry.contextObjects[\\\"http.ServerResponse\\\"] = telemetry.response;\\r\\n        client.trackRequest(requestTelemetry);\\r\\n    };\\r\\n    AutoCollectHttpRequests.prototype.dispose = function () {\\r\\n        AutoCollectHttpRequests.INSTANCE = null;\\r\\n        this.enable(false);\\r\\n        this._isInitialized = false;\\r\\n    };\\r\\n    AutoCollectHttpRequests.alreadyAutoCollectedFlag = '_appInsightsAutoCollected';\\r\\n    return AutoCollectHttpRequests;\\r\\n}());\\r\\nmodule.exports = AutoCollectHttpRequests;\\r\\n//# sourceMappingURL=HttpRequests.js.map\",null,\"module.exports = which\\nwhich.sync = whichSync\\n\\nvar isWindows = process.platform === 'win32' ||\\n    process.env.OSTYPE === 'cygwin' ||\\n    process.env.OSTYPE === 'msys'\\n\\nvar path = require('path')\\nvar COLON = isWindows ? ';' : ':'\\nvar isexe = require('isexe')\\n\\nfunction getNotFoundError (cmd) {\\n  var er = new Error('not found: ' + cmd)\\n  er.code = 'ENOENT'\\n\\n  return er\\n}\\n\\nfunction getPathInfo (cmd, opt) {\\n  var colon = opt.colon || COLON\\n  var pathEnv = opt.path || process.env.PATH || ''\\n  var pathExt = ['']\\n\\n  pathEnv = pathEnv.split(colon)\\n\\n  var pathExtExe = ''\\n  if (isWindows) {\\n    pathEnv.unshift(process.cwd())\\n    pathExtExe = (opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM')\\n    pathExt = pathExtExe.split(colon)\\n\\n\\n    // Always test the cmd itself first.  isexe will check to make sure\\n    // it's found in the pathExt set.\\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\\n      pathExt.unshift('')\\n  }\\n\\n  // If it has a slash, then we don't bother searching the pathenv.\\n  // just check the file itself, and that's it.\\n  if (cmd.match(/\\\\//) || isWindows && cmd.match(/\\\\\\\\/))\\n    pathEnv = ['']\\n\\n  return {\\n    env: pathEnv,\\n    ext: pathExt,\\n    extExe: pathExtExe\\n  }\\n}\\n\\nfunction which (cmd, opt, cb) {\\n  if (typeof opt === 'function') {\\n    cb = opt\\n    opt = {}\\n  }\\n\\n  var info = getPathInfo(cmd, opt)\\n  var pathEnv = info.env\\n  var pathExt = info.ext\\n  var pathExtExe = info.extExe\\n  var found = []\\n\\n  ;(function F (i, l) {\\n    if (i === l) {\\n      if (opt.all && found.length)\\n        return cb(null, found)\\n      else\\n        return cb(getNotFoundError(cmd))\\n    }\\n\\n    var pathPart = pathEnv[i]\\n    if (pathPart.charAt(0) === '\\\"' && pathPart.slice(-1) === '\\\"')\\n      pathPart = pathPart.slice(1, -1)\\n\\n    var p = path.join(pathPart, cmd)\\n    if (!pathPart && (/^\\\\.[\\\\\\\\\\\\/]/).test(cmd)) {\\n      p = cmd.slice(0, 2) + p\\n    }\\n    ;(function E (ii, ll) {\\n      if (ii === ll) return F(i + 1, l)\\n      var ext = pathExt[ii]\\n      isexe(p + ext, { pathExt: pathExtExe }, function (er, is) {\\n        if (!er && is) {\\n          if (opt.all)\\n            found.push(p + ext)\\n          else\\n            return cb(null, p + ext)\\n        }\\n        return E(ii + 1, ll)\\n      })\\n    })(0, pathExt.length)\\n  })(0, pathEnv.length)\\n}\\n\\nfunction whichSync (cmd, opt) {\\n  opt = opt || {}\\n\\n  var info = getPathInfo(cmd, opt)\\n  var pathEnv = info.env\\n  var pathExt = info.ext\\n  var pathExtExe = info.extExe\\n  var found = []\\n\\n  for (var i = 0, l = pathEnv.length; i < l; i ++) {\\n    var pathPart = pathEnv[i]\\n    if (pathPart.charAt(0) === '\\\"' && pathPart.slice(-1) === '\\\"')\\n      pathPart = pathPart.slice(1, -1)\\n\\n    var p = path.join(pathPart, cmd)\\n    if (!pathPart && /^\\\\.[\\\\\\\\\\\\/]/.test(cmd)) {\\n      p = cmd.slice(0, 2) + p\\n    }\\n    for (var j = 0, ll = pathExt.length; j < ll; j ++) {\\n      var cur = p + pathExt[j]\\n      var is\\n      try {\\n        is = isexe.sync(cur, { pathExt: pathExtExe })\\n        if (is) {\\n          if (opt.all)\\n            found.push(cur)\\n          else\\n            return cur\\n        }\\n      } catch (ex) {}\\n    }\\n  }\\n\\n  if (opt.all && found.length)\\n    return found\\n\\n  if (opt.nothrow)\\n    return null\\n\\n  throw getNotFoundError(cmd)\\n}\\n\",\"var fs = require('fs')\\nvar core\\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\\n  core = require('./windows.js')\\n} else {\\n  core = require('./mode.js')\\n}\\n\\nmodule.exports = isexe\\nisexe.sync = sync\\n\\nfunction isexe (path, options, cb) {\\n  if (typeof options === 'function') {\\n    cb = options\\n    options = {}\\n  }\\n\\n  if (!cb) {\\n    if (typeof Promise !== 'function') {\\n      throw new TypeError('callback not provided')\\n    }\\n\\n    return new Promise(function (resolve, reject) {\\n      isexe(path, options || {}, function (er, is) {\\n        if (er) {\\n          reject(er)\\n        } else {\\n          resolve(is)\\n        }\\n      })\\n    })\\n  }\\n\\n  core(path, options || {}, function (er, is) {\\n    // ignore EACCES because that just means we aren't allowed to run it\\n    if (er) {\\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\\n        er = null\\n        is = false\\n      }\\n    }\\n    cb(er, is)\\n  })\\n}\\n\\nfunction sync (path, options) {\\n  // my kingdom for a filtered catch\\n  try {\\n    return core.sync(path, options || {})\\n  } catch (er) {\\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\\n      return false\\n    } else {\\n      throw er\\n    }\\n  }\\n}\\n\",\"module.exports = isexe\\nisexe.sync = sync\\n\\nvar fs = require('fs')\\n\\nfunction checkPathExt (path, options) {\\n  var pathext = options.pathExt !== undefined ?\\n    options.pathExt : process.env.PATHEXT\\n\\n  if (!pathext) {\\n    return true\\n  }\\n\\n  pathext = pathext.split(';')\\n  if (pathext.indexOf('') !== -1) {\\n    return true\\n  }\\n  for (var i = 0; i < pathext.length; i++) {\\n    var p = pathext[i].toLowerCase()\\n    if (p && path.substr(-p.length).toLowerCase() === p) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\nfunction checkStat (stat, path, options) {\\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\\n    return false\\n  }\\n  return checkPathExt(path, options)\\n}\\n\\nfunction isexe (path, options, cb) {\\n  fs.stat(path, function (er, stat) {\\n    cb(er, er ? false : checkStat(stat, path, options))\\n  })\\n}\\n\\nfunction sync (path, options) {\\n  return checkStat(fs.statSync(path), path, options)\\n}\\n\",\"module.exports = isexe\\nisexe.sync = sync\\n\\nvar fs = require('fs')\\n\\nfunction isexe (path, options, cb) {\\n  fs.stat(path, function (er, stat) {\\n    cb(er, er ? false : checkStat(stat, options))\\n  })\\n}\\n\\nfunction sync (path, options) {\\n  return checkStat(fs.statSync(path), options)\\n}\\n\\nfunction checkStat (stat, options) {\\n  return stat.isFile() && checkMode(stat, options)\\n}\\n\\nfunction checkMode (stat, options) {\\n  var mod = stat.mode\\n  var uid = stat.uid\\n  var gid = stat.gid\\n\\n  var myUid = options.uid !== undefined ?\\n    options.uid : process.getuid && process.getuid()\\n  var myGid = options.gid !== undefined ?\\n    options.gid : process.getgid && process.getgid()\\n\\n  var u = parseInt('100', 8)\\n  var g = parseInt('010', 8)\\n  var o = parseInt('001', 8)\\n  var ug = u | g\\n\\n  var ret = (mod & o) ||\\n    (mod & g) && gid === myGid ||\\n    (mod & u) && uid === myUid ||\\n    (mod & ug) && myUid === 0\\n\\n  return ret\\n}\\n\",\"\\\"use strict\\\";\\n\\n// Some environments don't have global Buffer (e.g. React Native).\\n// Solution would be installing npm modules \\\"buffer\\\" and \\\"stream\\\" explicitly.\\nvar Buffer = require(\\\"safer-buffer\\\").Buffer;\\n\\nvar bomHandling = require(\\\"./bom-handling\\\"),\\n    iconv = module.exports;\\n\\n// All codecs and aliases are kept here, keyed by encoding name/alias.\\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\\niconv.encodings = null;\\n\\n// Characters emitted in case of error.\\niconv.defaultCharUnicode = '�';\\niconv.defaultCharSingleByte = '?';\\n\\n// Public API.\\niconv.encode = function encode(str, encoding, options) {\\n    str = \\\"\\\" + (str || \\\"\\\"); // Ensure string.\\n\\n    var encoder = iconv.getEncoder(encoding, options);\\n\\n    var res = encoder.write(str);\\n    var trail = encoder.end();\\n    \\n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\\n}\\n\\niconv.decode = function decode(buf, encoding, options) {\\n    if (typeof buf === 'string') {\\n        if (!iconv.skipDecodeWarning) {\\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\\n            iconv.skipDecodeWarning = true;\\n        }\\n\\n        buf = Buffer.from(\\\"\\\" + (buf || \\\"\\\"), \\\"binary\\\"); // Ensure buffer.\\n    }\\n\\n    var decoder = iconv.getDecoder(encoding, options);\\n\\n    var res = decoder.write(buf);\\n    var trail = decoder.end();\\n\\n    return trail ? (res + trail) : res;\\n}\\n\\niconv.encodingExists = function encodingExists(enc) {\\n    try {\\n        iconv.getCodec(enc);\\n        return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\n\\n// Legacy aliases to convert functions\\niconv.toEncoding = iconv.encode;\\niconv.fromEncoding = iconv.decode;\\n\\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\\niconv._codecDataCache = {};\\niconv.getCodec = function getCodec(encoding) {\\n    if (!iconv.encodings)\\n        iconv.encodings = require(\\\"../encodings\\\"); // Lazy load all encoding definitions.\\n    \\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\\n    var enc = iconv._canonicalizeEncoding(encoding);\\n\\n    // Traverse iconv.encodings to find actual codec.\\n    var codecOptions = {};\\n    while (true) {\\n        var codec = iconv._codecDataCache[enc];\\n        if (codec)\\n            return codec;\\n\\n        var codecDef = iconv.encodings[enc];\\n\\n        switch (typeof codecDef) {\\n            case \\\"string\\\": // Direct alias to other encoding.\\n                enc = codecDef;\\n                break;\\n\\n            case \\\"object\\\": // Alias with options. Can be layered.\\n                for (var key in codecDef)\\n                    codecOptions[key] = codecDef[key];\\n\\n                if (!codecOptions.encodingName)\\n                    codecOptions.encodingName = enc;\\n                \\n                enc = codecDef.type;\\n                break;\\n\\n            case \\\"function\\\": // Codec itself.\\n                if (!codecOptions.encodingName)\\n                    codecOptions.encodingName = enc;\\n\\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\\n                // It'll be called only once (for each different options object).\\n                codec = new codecDef(codecOptions, iconv);\\n\\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\\n                return codec;\\n\\n            default:\\n                throw new Error(\\\"Encoding not recognized: '\\\" + encoding + \\\"' (searched as: '\\\"+enc+\\\"')\\\");\\n        }\\n    }\\n}\\n\\niconv._canonicalizeEncoding = function(encoding) {\\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\\n    return (''+encoding).toLowerCase().replace(/:\\\\d{4}$|[^0-9a-z]/g, \\\"\\\");\\n}\\n\\niconv.getEncoder = function getEncoder(encoding, options) {\\n    var codec = iconv.getCodec(encoding),\\n        encoder = new codec.encoder(options, codec);\\n\\n    if (codec.bomAware && options && options.addBOM)\\n        encoder = new bomHandling.PrependBOM(encoder, options);\\n\\n    return encoder;\\n}\\n\\niconv.getDecoder = function getDecoder(encoding, options) {\\n    var codec = iconv.getCodec(encoding),\\n        decoder = new codec.decoder(options, codec);\\n\\n    if (codec.bomAware && !(options && options.stripBOM === false))\\n        decoder = new bomHandling.StripBOM(decoder, options);\\n\\n    return decoder;\\n}\\n\\n\\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\\nif (nodeVer) {\\n\\n    // Load streaming support in Node v0.10+\\n    var nodeVerArr = nodeVer.split(\\\".\\\").map(Number);\\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\\n        require(\\\"./streams\\\")(iconv);\\n    }\\n\\n    // Load Node primitive extensions.\\n    require(\\\"./extend-node\\\")(iconv);\\n}\\n\\nif (\\\"Ā\\\" != \\\"\\\\u0100\\\") {\\n    console.error(\\\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\\\");\\n}\\n\",\"\\\"use strict\\\";\\n\\nvar BOMChar = '\\\\uFEFF';\\n\\nexports.PrependBOM = PrependBOMWrapper\\nfunction PrependBOMWrapper(encoder, options) {\\n    this.encoder = encoder;\\n    this.addBOM = true;\\n}\\n\\nPrependBOMWrapper.prototype.write = function(str) {\\n    if (this.addBOM) {\\n        str = BOMChar + str;\\n        this.addBOM = false;\\n    }\\n\\n    return this.encoder.write(str);\\n}\\n\\nPrependBOMWrapper.prototype.end = function() {\\n    return this.encoder.end();\\n}\\n\\n\\n//------------------------------------------------------------------------------\\n\\nexports.StripBOM = StripBOMWrapper;\\nfunction StripBOMWrapper(decoder, options) {\\n    this.decoder = decoder;\\n    this.pass = false;\\n    this.options = options || {};\\n}\\n\\nStripBOMWrapper.prototype.write = function(buf) {\\n    var res = this.decoder.write(buf);\\n    if (this.pass || !res)\\n        return res;\\n\\n    if (res[0] === BOMChar) {\\n        res = res.slice(1);\\n        if (typeof this.options.stripBOM === 'function')\\n            this.options.stripBOM();\\n    }\\n\\n    this.pass = true;\\n    return res;\\n}\\n\\nStripBOMWrapper.prototype.end = function() {\\n    return this.decoder.end();\\n}\\n\\n\",\"\\\"use strict\\\";\\n\\n// Update this array if you add/rename/remove files in this directory.\\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\\nvar modules = [\\n    require(\\\"./internal\\\"),\\n    require(\\\"./utf16\\\"),\\n    require(\\\"./utf7\\\"),\\n    require(\\\"./sbcs-codec\\\"),\\n    require(\\\"./sbcs-data\\\"),\\n    require(\\\"./sbcs-data-generated\\\"),\\n    require(\\\"./dbcs-codec\\\"),\\n    require(\\\"./dbcs-data\\\"),\\n];\\n\\n// Put all encoding/alias/codec definitions to single object and export it. \\nfor (var i = 0; i < modules.length; i++) {\\n    var module = modules[i];\\n    for (var enc in module)\\n        if (Object.prototype.hasOwnProperty.call(module, enc))\\n            exports[enc] = module[enc];\\n}\\n\",\"\\\"use strict\\\";\\nvar Buffer = require(\\\"safer-buffer\\\").Buffer;\\n\\n// Export Node.js internal encodings.\\n\\nmodule.exports = {\\n    // Encodings\\n    utf8:   { type: \\\"_internal\\\", bomAware: true},\\n    cesu8:  { type: \\\"_internal\\\", bomAware: true},\\n    unicode11utf8: \\\"utf8\\\",\\n\\n    ucs2:   { type: \\\"_internal\\\", bomAware: true},\\n    utf16le: \\\"ucs2\\\",\\n\\n    binary: { type: \\\"_internal\\\" },\\n    base64: { type: \\\"_internal\\\" },\\n    hex:    { type: \\\"_internal\\\" },\\n\\n    // Codec.\\n    _internal: InternalCodec,\\n};\\n\\n//------------------------------------------------------------------------------\\n\\nfunction InternalCodec(codecOptions, iconv) {\\n    this.enc = codecOptions.encodingName;\\n    this.bomAware = codecOptions.bomAware;\\n\\n    if (this.enc === \\\"base64\\\")\\n        this.encoder = InternalEncoderBase64;\\n    else if (this.enc === \\\"cesu8\\\") {\\n        this.enc = \\\"utf8\\\"; // Use utf8 for decoding.\\n        this.encoder = InternalEncoderCesu8;\\n\\n        // Add decoder for versions of Node not supporting CESU-8\\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\\n            this.decoder = InternalDecoderCesu8;\\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\\n        }\\n    }\\n}\\n\\nInternalCodec.prototype.encoder = InternalEncoder;\\nInternalCodec.prototype.decoder = InternalDecoder;\\n\\n//------------------------------------------------------------------------------\\n\\n// We use node.js internal decoder. Its signature is the same as ours.\\nvar StringDecoder = require('string_decoder').StringDecoder;\\n\\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\\n    StringDecoder.prototype.end = function() {};\\n\\n\\nfunction InternalDecoder(options, codec) {\\n    StringDecoder.call(this, codec.enc);\\n}\\n\\nInternalDecoder.prototype = StringDecoder.prototype;\\n\\n\\n//------------------------------------------------------------------------------\\n// Encoder is mostly trivial\\n\\nfunction InternalEncoder(options, codec) {\\n    this.enc = codec.enc;\\n}\\n\\nInternalEncoder.prototype.write = function(str) {\\n    return Buffer.from(str, this.enc);\\n}\\n\\nInternalEncoder.prototype.end = function() {\\n}\\n\\n\\n//------------------------------------------------------------------------------\\n// Except base64 encoder, which must keep its state.\\n\\nfunction InternalEncoderBase64(options, codec) {\\n    this.prevStr = '';\\n}\\n\\nInternalEncoderBase64.prototype.write = function(str) {\\n    str = this.prevStr + str;\\n    var completeQuads = str.length - (str.length % 4);\\n    this.prevStr = str.slice(completeQuads);\\n    str = str.slice(0, completeQuads);\\n\\n    return Buffer.from(str, \\\"base64\\\");\\n}\\n\\nInternalEncoderBase64.prototype.end = function() {\\n    return Buffer.from(this.prevStr, \\\"base64\\\");\\n}\\n\\n\\n//------------------------------------------------------------------------------\\n// CESU-8 encoder is also special.\\n\\nfunction InternalEncoderCesu8(options, codec) {\\n}\\n\\nInternalEncoderCesu8.prototype.write = function(str) {\\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\\n    for (var i = 0; i < str.length; i++) {\\n        var charCode = str.charCodeAt(i);\\n        // Naive implementation, but it works because CESU-8 is especially easy\\n        // to convert from UTF-16 (which all JS strings are encoded in).\\n        if (charCode < 0x80)\\n            buf[bufIdx++] = charCode;\\n        else if (charCode < 0x800) {\\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\\n        }\\n        else { // charCode will always be < 0x10000 in javascript.\\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\\n        }\\n    }\\n    return buf.slice(0, bufIdx);\\n}\\n\\nInternalEncoderCesu8.prototype.end = function() {\\n}\\n\\n//------------------------------------------------------------------------------\\n// CESU-8 decoder is not implemented in Node v4.0+\\n\\nfunction InternalDecoderCesu8(options, codec) {\\n    this.acc = 0;\\n    this.contBytes = 0;\\n    this.accBytes = 0;\\n    this.defaultCharUnicode = codec.defaultCharUnicode;\\n}\\n\\nInternalDecoderCesu8.prototype.write = function(buf) {\\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \\n        res = '';\\n    for (var i = 0; i < buf.length; i++) {\\n        var curByte = buf[i];\\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\\n            if (contBytes > 0) { // Previous code is invalid\\n                res += this.defaultCharUnicode;\\n                contBytes = 0;\\n            }\\n\\n            if (curByte < 0x80) { // Single-byte code\\n                res += String.fromCharCode(curByte);\\n            } else if (curByte < 0xE0) { // Two-byte code\\n                acc = curByte & 0x1F;\\n                contBytes = 1; accBytes = 1;\\n            } else if (curByte < 0xF0) { // Three-byte code\\n                acc = curByte & 0x0F;\\n                contBytes = 2; accBytes = 1;\\n            } else { // Four or more are not supported for CESU-8.\\n                res += this.defaultCharUnicode;\\n            }\\n        } else { // Continuation byte\\n            if (contBytes > 0) { // We're waiting for it.\\n                acc = (acc << 6) | (curByte & 0x3f);\\n                contBytes--; accBytes++;\\n                if (contBytes === 0) {\\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\\n                        res += this.defaultCharUnicode;\\n                    else if (accBytes === 3 && acc < 0x800)\\n                        res += this.defaultCharUnicode;\\n                    else\\n                        // Actually add character.\\n                        res += String.fromCharCode(acc);\\n                }\\n            } else { // Unexpected continuation byte\\n                res += this.defaultCharUnicode;\\n            }\\n        }\\n    }\\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\\n    return res;\\n}\\n\\nInternalDecoderCesu8.prototype.end = function() {\\n    var res = 0;\\n    if (this.contBytes > 0)\\n        res += this.defaultCharUnicode;\\n    return res;\\n}\\n\",\"\\\"use strict\\\";\\nvar Buffer = require(\\\"safer-buffer\\\").Buffer;\\n\\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\\n\\n// == UTF16-BE codec. ==========================================================\\n\\nexports.utf16be = Utf16BECodec;\\nfunction Utf16BECodec() {\\n}\\n\\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\\nUtf16BECodec.prototype.bomAware = true;\\n\\n\\n// -- Encoding\\n\\nfunction Utf16BEEncoder() {\\n}\\n\\nUtf16BEEncoder.prototype.write = function(str) {\\n    var buf = Buffer.from(str, 'ucs2');\\n    for (var i = 0; i < buf.length; i += 2) {\\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\\n    }\\n    return buf;\\n}\\n\\nUtf16BEEncoder.prototype.end = function() {\\n}\\n\\n\\n// -- Decoding\\n\\nfunction Utf16BEDecoder() {\\n    this.overflowByte = -1;\\n}\\n\\nUtf16BEDecoder.prototype.write = function(buf) {\\n    if (buf.length == 0)\\n        return '';\\n\\n    var buf2 = Buffer.alloc(buf.length + 1),\\n        i = 0, j = 0;\\n\\n    if (this.overflowByte !== -1) {\\n        buf2[0] = buf[0];\\n        buf2[1] = this.overflowByte;\\n        i = 1; j = 2;\\n    }\\n\\n    for (; i < buf.length-1; i += 2, j+= 2) {\\n        buf2[j] = buf[i+1];\\n        buf2[j+1] = buf[i];\\n    }\\n\\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\\n\\n    return buf2.slice(0, j).toString('ucs2');\\n}\\n\\nUtf16BEDecoder.prototype.end = function() {\\n}\\n\\n\\n// == UTF-16 codec =============================================================\\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\\n\\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\\n\\nexports.utf16 = Utf16Codec;\\nfunction Utf16Codec(codecOptions, iconv) {\\n    this.iconv = iconv;\\n}\\n\\nUtf16Codec.prototype.encoder = Utf16Encoder;\\nUtf16Codec.prototype.decoder = Utf16Decoder;\\n\\n\\n// -- Encoding (pass-through)\\n\\nfunction Utf16Encoder(options, codec) {\\n    options = options || {};\\n    if (options.addBOM === undefined)\\n        options.addBOM = true;\\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\\n}\\n\\nUtf16Encoder.prototype.write = function(str) {\\n    return this.encoder.write(str);\\n}\\n\\nUtf16Encoder.prototype.end = function() {\\n    return this.encoder.end();\\n}\\n\\n\\n// -- Decoding\\n\\nfunction Utf16Decoder(options, codec) {\\n    this.decoder = null;\\n    this.initialBytes = [];\\n    this.initialBytesLen = 0;\\n\\n    this.options = options || {};\\n    this.iconv = codec.iconv;\\n}\\n\\nUtf16Decoder.prototype.write = function(buf) {\\n    if (!this.decoder) {\\n        // Codec is not chosen yet. Accumulate initial bytes.\\n        this.initialBytes.push(buf);\\n        this.initialBytesLen += buf.length;\\n        \\n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\\n            return '';\\n\\n        // We have enough bytes -> detect endianness.\\n        var buf = Buffer.concat(this.initialBytes),\\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\\n        this.initialBytes.length = this.initialBytesLen = 0;\\n    }\\n\\n    return this.decoder.write(buf);\\n}\\n\\nUtf16Decoder.prototype.end = function() {\\n    if (!this.decoder) {\\n        var buf = Buffer.concat(this.initialBytes),\\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\\n\\n        var res = this.decoder.write(buf),\\n            trail = this.decoder.end();\\n\\n        return trail ? (res + trail) : res;\\n    }\\n    return this.decoder.end();\\n}\\n\\nfunction detectEncoding(buf, defaultEncoding) {\\n    var enc = defaultEncoding || 'utf-16le';\\n\\n    if (buf.length >= 2) {\\n        // Check BOM.\\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\\n            enc = 'utf-16be';\\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\\n            enc = 'utf-16le';\\n        else {\\n            // No BOM found. Try to deduce encoding from initial content.\\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\\n            // So, we count ASCII as if it was LE or BE, and decide from that.\\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\\n\\n            for (var i = 0; i < _len; i += 2) {\\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\\n            }\\n\\n            if (asciiCharsBE > asciiCharsLE)\\n                enc = 'utf-16be';\\n            else if (asciiCharsBE < asciiCharsLE)\\n                enc = 'utf-16le';\\n        }\\n    }\\n\\n    return enc;\\n}\\n\\n\\n\",\"\\\"use strict\\\";\\nvar Buffer = require(\\\"safer-buffer\\\").Buffer;\\n\\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\\n\\nexports.utf7 = Utf7Codec;\\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\\nfunction Utf7Codec(codecOptions, iconv) {\\n    this.iconv = iconv;\\n};\\n\\nUtf7Codec.prototype.encoder = Utf7Encoder;\\nUtf7Codec.prototype.decoder = Utf7Decoder;\\nUtf7Codec.prototype.bomAware = true;\\n\\n\\n// -- Encoding\\n\\nvar nonDirectChars = /[^A-Za-z0-9'\\\\(\\\\),-\\\\.\\\\/:\\\\? \\\\n\\\\r\\\\t]+/g;\\n\\nfunction Utf7Encoder(options, codec) {\\n    this.iconv = codec.iconv;\\n}\\n\\nUtf7Encoder.prototype.write = function(str) {\\n    // Naive implementation.\\n    // Non-direct chars are encoded as \\\"+<base64>-\\\"; single \\\"+\\\" char is encoded as \\\"+-\\\".\\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\\n        return \\\"+\\\" + (chunk === '+' ? '' : \\n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \\n            + \\\"-\\\";\\n    }.bind(this)));\\n}\\n\\nUtf7Encoder.prototype.end = function() {\\n}\\n\\n\\n// -- Decoding\\n\\nfunction Utf7Decoder(options, codec) {\\n    this.iconv = codec.iconv;\\n    this.inBase64 = false;\\n    this.base64Accum = '';\\n}\\n\\nvar base64Regex = /[A-Za-z0-9\\\\/+]/;\\nvar base64Chars = [];\\nfor (var i = 0; i < 256; i++)\\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\\n\\nvar plusChar = '+'.charCodeAt(0), \\n    minusChar = '-'.charCodeAt(0),\\n    andChar = '&'.charCodeAt(0);\\n\\nUtf7Decoder.prototype.write = function(buf) {\\n    var res = \\\"\\\", lastI = 0,\\n        inBase64 = this.inBase64,\\n        base64Accum = this.base64Accum;\\n\\n    // The decoder is more involved as we must handle chunks in stream.\\n\\n    for (var i = 0; i < buf.length; i++) {\\n        if (!inBase64) { // We're in direct mode.\\n            // Write direct chars until '+'\\n            if (buf[i] == plusChar) {\\n                res += this.iconv.decode(buf.slice(lastI, i), \\\"ascii\\\"); // Write direct chars.\\n                lastI = i+1;\\n                inBase64 = true;\\n            }\\n        } else { // We decode base64.\\n            if (!base64Chars[buf[i]]) { // Base64 ended.\\n                if (i == lastI && buf[i] == minusChar) {// \\\"+-\\\" -> \\\"+\\\"\\n                    res += \\\"+\\\";\\n                } else {\\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \\\"utf16-be\\\");\\n                }\\n\\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\\n                    i--;\\n\\n                lastI = i+1;\\n                inBase64 = false;\\n                base64Accum = '';\\n            }\\n        }\\n    }\\n\\n    if (!inBase64) {\\n        res += this.iconv.decode(buf.slice(lastI), \\\"ascii\\\"); // Write direct chars.\\n    } else {\\n        var b64str = base64Accum + buf.slice(lastI).toString();\\n\\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\\n        b64str = b64str.slice(0, canBeDecoded);\\n\\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \\\"utf16-be\\\");\\n    }\\n\\n    this.inBase64 = inBase64;\\n    this.base64Accum = base64Accum;\\n\\n    return res;\\n}\\n\\nUtf7Decoder.prototype.end = function() {\\n    var res = \\\"\\\";\\n    if (this.inBase64 && this.base64Accum.length > 0)\\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \\\"utf16-be\\\");\\n\\n    this.inBase64 = false;\\n    this.base64Accum = '';\\n    return res;\\n}\\n\\n\\n// UTF-7-IMAP codec.\\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\\n// Differences:\\n//  * Base64 part is started by \\\"&\\\" instead of \\\"+\\\"\\n//  * Direct characters are 0x20-0x7E, except \\\"&\\\" (0x26)\\n//  * In Base64, \\\",\\\" is used instead of \\\"/\\\"\\n//  * Base64 must not be used to represent direct characters.\\n//  * No implicit shift back from Base64 (should always end with '-')\\n//  * String must end in non-shifted position.\\n//  * \\\"-&\\\" while in base64 is not allowed.\\n\\n\\nexports.utf7imap = Utf7IMAPCodec;\\nfunction Utf7IMAPCodec(codecOptions, iconv) {\\n    this.iconv = iconv;\\n};\\n\\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\\nUtf7IMAPCodec.prototype.bomAware = true;\\n\\n\\n// -- Encoding\\n\\nfunction Utf7IMAPEncoder(options, codec) {\\n    this.iconv = codec.iconv;\\n    this.inBase64 = false;\\n    this.base64Accum = Buffer.alloc(6);\\n    this.base64AccumIdx = 0;\\n}\\n\\nUtf7IMAPEncoder.prototype.write = function(str) {\\n    var inBase64 = this.inBase64,\\n        base64Accum = this.base64Accum,\\n        base64AccumIdx = this.base64AccumIdx,\\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\\n\\n    for (var i = 0; i < str.length; i++) {\\n        var uChar = str.charCodeAt(i);\\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\\n            if (inBase64) {\\n                if (base64AccumIdx > 0) {\\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\\\//g, ',').replace(/=+$/, ''), bufIdx);\\n                    base64AccumIdx = 0;\\n                }\\n\\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\\n                inBase64 = false;\\n            }\\n\\n            if (!inBase64) {\\n                buf[bufIdx++] = uChar; // Write direct character\\n\\n                if (uChar === andChar)  // Ampersand -> '&-'\\n                    buf[bufIdx++] = minusChar;\\n            }\\n\\n        } else { // Non-direct character\\n            if (!inBase64) {\\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\\n                inBase64 = true;\\n            }\\n            if (inBase64) {\\n                base64Accum[base64AccumIdx++] = uChar >> 8;\\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\\n\\n                if (base64AccumIdx == base64Accum.length) {\\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\\\//g, ','), bufIdx);\\n                    base64AccumIdx = 0;\\n                }\\n            }\\n        }\\n    }\\n\\n    this.inBase64 = inBase64;\\n    this.base64AccumIdx = base64AccumIdx;\\n\\n    return buf.slice(0, bufIdx);\\n}\\n\\nUtf7IMAPEncoder.prototype.end = function() {\\n    var buf = Buffer.alloc(10), bufIdx = 0;\\n    if (this.inBase64) {\\n        if (this.base64AccumIdx > 0) {\\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\\\//g, ',').replace(/=+$/, ''), bufIdx);\\n            this.base64AccumIdx = 0;\\n        }\\n\\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\\n        this.inBase64 = false;\\n    }\\n\\n    return buf.slice(0, bufIdx);\\n}\\n\\n\\n// -- Decoding\\n\\nfunction Utf7IMAPDecoder(options, codec) {\\n    this.iconv = codec.iconv;\\n    this.inBase64 = false;\\n    this.base64Accum = '';\\n}\\n\\nvar base64IMAPChars = base64Chars.slice();\\nbase64IMAPChars[','.charCodeAt(0)] = true;\\n\\nUtf7IMAPDecoder.prototype.write = function(buf) {\\n    var res = \\\"\\\", lastI = 0,\\n        inBase64 = this.inBase64,\\n        base64Accum = this.base64Accum;\\n\\n    // The decoder is more involved as we must handle chunks in stream.\\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\\n\\n    for (var i = 0; i < buf.length; i++) {\\n        if (!inBase64) { // We're in direct mode.\\n            // Write direct chars until '&'\\n            if (buf[i] == andChar) {\\n                res += this.iconv.decode(buf.slice(lastI, i), \\\"ascii\\\"); // Write direct chars.\\n                lastI = i+1;\\n                inBase64 = true;\\n            }\\n        } else { // We decode base64.\\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\\n                if (i == lastI && buf[i] == minusChar) { // \\\"&-\\\" -> \\\"&\\\"\\n                    res += \\\"&\\\";\\n                } else {\\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \\\"utf16-be\\\");\\n                }\\n\\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\\n                    i--;\\n\\n                lastI = i+1;\\n                inBase64 = false;\\n                base64Accum = '';\\n            }\\n        }\\n    }\\n\\n    if (!inBase64) {\\n        res += this.iconv.decode(buf.slice(lastI), \\\"ascii\\\"); // Write direct chars.\\n    } else {\\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\\n\\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\\n        b64str = b64str.slice(0, canBeDecoded);\\n\\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \\\"utf16-be\\\");\\n    }\\n\\n    this.inBase64 = inBase64;\\n    this.base64Accum = base64Accum;\\n\\n    return res;\\n}\\n\\nUtf7IMAPDecoder.prototype.end = function() {\\n    var res = \\\"\\\";\\n    if (this.inBase64 && this.base64Accum.length > 0)\\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \\\"utf16-be\\\");\\n\\n    this.inBase64 = false;\\n    this.base64Accum = '';\\n    return res;\\n}\\n\\n\\n\",\"\\\"use strict\\\";\\nvar Buffer = require(\\\"safer-buffer\\\").Buffer;\\n\\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \\n\\nexports._sbcs = SBCSCodec;\\nfunction SBCSCodec(codecOptions, iconv) {\\n    if (!codecOptions)\\n        throw new Error(\\\"SBCS codec is called without the data.\\\")\\n    \\n    // Prepare char buffer for decoding.\\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\\n        throw new Error(\\\"Encoding '\\\"+codecOptions.type+\\\"' has incorrect 'chars' (must be of len 128 or 256)\\\");\\n    \\n    if (codecOptions.chars.length === 128) {\\n        var asciiString = \\\"\\\";\\n        for (var i = 0; i < 128; i++)\\n            asciiString += String.fromCharCode(i);\\n        codecOptions.chars = asciiString + codecOptions.chars;\\n    }\\n\\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\\n    \\n    // Encoding buffer.\\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\\n\\n    for (var i = 0; i < codecOptions.chars.length; i++)\\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\\n\\n    this.encodeBuf = encodeBuf;\\n}\\n\\nSBCSCodec.prototype.encoder = SBCSEncoder;\\nSBCSCodec.prototype.decoder = SBCSDecoder;\\n\\n\\nfunction SBCSEncoder(options, codec) {\\n    this.encodeBuf = codec.encodeBuf;\\n}\\n\\nSBCSEncoder.prototype.write = function(str) {\\n    var buf = Buffer.alloc(str.length);\\n    for (var i = 0; i < str.length; i++)\\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\\n    \\n    return buf;\\n}\\n\\nSBCSEncoder.prototype.end = function() {\\n}\\n\\n\\nfunction SBCSDecoder(options, codec) {\\n    this.decodeBuf = codec.decodeBuf;\\n}\\n\\nSBCSDecoder.prototype.write = function(buf) {\\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\\n    var decodeBuf = this.decodeBuf;\\n    var newBuf = Buffer.alloc(buf.length*2);\\n    var idx1 = 0, idx2 = 0;\\n    for (var i = 0; i < buf.length; i++) {\\n        idx1 = buf[i]*2; idx2 = i*2;\\n        newBuf[idx2] = decodeBuf[idx1];\\n        newBuf[idx2+1] = decodeBuf[idx1+1];\\n    }\\n    return newBuf.toString('ucs2');\\n}\\n\\nSBCSDecoder.prototype.end = function() {\\n}\\n\",\"\\\"use strict\\\";\\n\\n// Manually added data to be used by sbcs codec in addition to generated one.\\n\\nmodule.exports = {\\n    // Not supported by iconv, not sure why.\\n    \\\"10029\\\": \\\"maccenteuro\\\",\\n    \\\"maccenteuro\\\": {\\n        \\\"type\\\": \\\"_sbcs\\\",\\n        \\\"chars\\\": \\\"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\\\"\\n    },\\n\\n    \\\"808\\\": \\\"cp808\\\",\\n    \\\"ibm808\\\": \\\"cp808\\\",\\n    \\\"cp808\\\": {\\n        \\\"type\\\": \\\"_sbcs\\\",\\n        \\\"chars\\\": \\\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \\\"\\n    },\\n\\n    \\\"mik\\\": {\\n        \\\"type\\\": \\\"_sbcs\\\",\\n        \\\"chars\\\": \\\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \\\"\\n    },\\n\\n    // Aliases of generated encodings.\\n    \\\"ascii8bit\\\": \\\"ascii\\\",\\n    \\\"usascii\\\": \\\"ascii\\\",\\n    \\\"ansix34\\\": \\\"ascii\\\",\\n    \\\"ansix341968\\\": \\\"ascii\\\",\\n    \\\"ansix341986\\\": \\\"ascii\\\",\\n    \\\"csascii\\\": \\\"ascii\\\",\\n    \\\"cp367\\\": \\\"ascii\\\",\\n    \\\"ibm367\\\": \\\"ascii\\\",\\n    \\\"isoir6\\\": \\\"ascii\\\",\\n    \\\"iso646us\\\": \\\"ascii\\\",\\n    \\\"iso646irv\\\": \\\"ascii\\\",\\n    \\\"us\\\": \\\"ascii\\\",\\n\\n    \\\"latin1\\\": \\\"iso88591\\\",\\n    \\\"latin2\\\": \\\"iso88592\\\",\\n    \\\"latin3\\\": \\\"iso88593\\\",\\n    \\\"latin4\\\": \\\"iso88594\\\",\\n    \\\"latin5\\\": \\\"iso88599\\\",\\n    \\\"latin6\\\": \\\"iso885910\\\",\\n    \\\"latin7\\\": \\\"iso885913\\\",\\n    \\\"latin8\\\": \\\"iso885914\\\",\\n    \\\"latin9\\\": \\\"iso885915\\\",\\n    \\\"latin10\\\": \\\"iso885916\\\",\\n\\n    \\\"csisolatin1\\\": \\\"iso88591\\\",\\n    \\\"csisolatin2\\\": \\\"iso88592\\\",\\n    \\\"csisolatin3\\\": \\\"iso88593\\\",\\n    \\\"csisolatin4\\\": \\\"iso88594\\\",\\n    \\\"csisolatincyrillic\\\": \\\"iso88595\\\",\\n    \\\"csisolatinarabic\\\": \\\"iso88596\\\",\\n    \\\"csisolatingreek\\\" : \\\"iso88597\\\",\\n    \\\"csisolatinhebrew\\\": \\\"iso88598\\\",\\n    \\\"csisolatin5\\\": \\\"iso88599\\\",\\n    \\\"csisolatin6\\\": \\\"iso885910\\\",\\n\\n    \\\"l1\\\": \\\"iso88591\\\",\\n    \\\"l2\\\": \\\"iso88592\\\",\\n    \\\"l3\\\": \\\"iso88593\\\",\\n    \\\"l4\\\": \\\"iso88594\\\",\\n    \\\"l5\\\": \\\"iso88599\\\",\\n    \\\"l6\\\": \\\"iso885910\\\",\\n    \\\"l7\\\": \\\"iso885913\\\",\\n    \\\"l8\\\": \\\"iso885914\\\",\\n    \\\"l9\\\": \\\"iso885915\\\",\\n    \\\"l10\\\": \\\"iso885916\\\",\\n\\n    \\\"isoir14\\\": \\\"iso646jp\\\",\\n    \\\"isoir57\\\": \\\"iso646cn\\\",\\n    \\\"isoir100\\\": \\\"iso88591\\\",\\n    \\\"isoir101\\\": \\\"iso88592\\\",\\n    \\\"isoir109\\\": \\\"iso88593\\\",\\n    \\\"isoir110\\\": \\\"iso88594\\\",\\n    \\\"isoir144\\\": \\\"iso88595\\\",\\n    \\\"isoir127\\\": \\\"iso88596\\\",\\n    \\\"isoir126\\\": \\\"iso88597\\\",\\n    \\\"isoir138\\\": \\\"iso88598\\\",\\n    \\\"isoir148\\\": \\\"iso88599\\\",\\n    \\\"isoir157\\\": \\\"iso885910\\\",\\n    \\\"isoir166\\\": \\\"tis620\\\",\\n    \\\"isoir179\\\": \\\"iso885913\\\",\\n    \\\"isoir199\\\": \\\"iso885914\\\",\\n    \\\"isoir203\\\": \\\"iso885915\\\",\\n    \\\"isoir226\\\": \\\"iso885916\\\",\\n\\n    \\\"cp819\\\": \\\"iso88591\\\",\\n    \\\"ibm819\\\": \\\"iso88591\\\",\\n\\n    \\\"cyrillic\\\": \\\"iso88595\\\",\\n\\n    \\\"arabic\\\": \\\"iso88596\\\",\\n    \\\"arabic8\\\": \\\"iso88596\\\",\\n    \\\"ecma114\\\": \\\"iso88596\\\",\\n    \\\"asmo708\\\": \\\"iso88596\\\",\\n\\n    \\\"greek\\\" : \\\"iso88597\\\",\\n    \\\"greek8\\\" : \\\"iso88597\\\",\\n    \\\"ecma118\\\" : \\\"iso88597\\\",\\n    \\\"elot928\\\" : \\\"iso88597\\\",\\n\\n    \\\"hebrew\\\": \\\"iso88598\\\",\\n    \\\"hebrew8\\\": \\\"iso88598\\\",\\n\\n    \\\"turkish\\\": \\\"iso88599\\\",\\n    \\\"turkish8\\\": \\\"iso88599\\\",\\n\\n    \\\"thai\\\": \\\"iso885911\\\",\\n    \\\"thai8\\\": \\\"iso885911\\\",\\n\\n    \\\"celtic\\\": \\\"iso885914\\\",\\n    \\\"celtic8\\\": \\\"iso885914\\\",\\n    \\\"isoceltic\\\": \\\"iso885914\\\",\\n\\n    \\\"tis6200\\\": \\\"tis620\\\",\\n    \\\"tis62025291\\\": \\\"tis620\\\",\\n    \\\"tis62025330\\\": \\\"tis620\\\",\\n\\n    \\\"10000\\\": \\\"macroman\\\",\\n    \\\"10006\\\": \\\"macgreek\\\",\\n    \\\"10007\\\": \\\"maccyrillic\\\",\\n    \\\"10079\\\": \\\"maciceland\\\",\\n    \\\"10081\\\": \\\"macturkish\\\",\\n\\n    \\\"cspc8codepage437\\\": \\\"cp437\\\",\\n    \\\"cspc775baltic\\\": \\\"cp775\\\",\\n    \\\"cspc850multilingual\\\": \\\"cp850\\\",\\n    \\\"cspcp852\\\": \\\"cp852\\\",\\n    \\\"cspc862latinhebrew\\\": \\\"cp862\\\",\\n    \\\"cpgr\\\": \\\"cp869\\\",\\n\\n    \\\"msee\\\": \\\"cp1250\\\",\\n    \\\"mscyrl\\\": \\\"cp1251\\\",\\n    \\\"msansi\\\": \\\"cp1252\\\",\\n    \\\"msgreek\\\": \\\"cp1253\\\",\\n    \\\"msturk\\\": \\\"cp1254\\\",\\n    \\\"mshebr\\\": \\\"cp1255\\\",\\n    \\\"msarab\\\": \\\"cp1256\\\",\\n    \\\"winbaltrim\\\": \\\"cp1257\\\",\\n\\n    \\\"cp20866\\\": \\\"koi8r\\\",\\n    \\\"20866\\\": \\\"koi8r\\\",\\n    \\\"ibm878\\\": \\\"koi8r\\\",\\n    \\\"cskoi8r\\\": \\\"koi8r\\\",\\n\\n    \\\"cp21866\\\": \\\"koi8u\\\",\\n    \\\"21866\\\": \\\"koi8u\\\",\\n    \\\"ibm1168\\\": \\\"koi8u\\\",\\n\\n    \\\"strk10482002\\\": \\\"rk1048\\\",\\n\\n    \\\"tcvn5712\\\": \\\"tcvn\\\",\\n    \\\"tcvn57121\\\": \\\"tcvn\\\",\\n\\n    \\\"gb198880\\\": \\\"iso646cn\\\",\\n    \\\"cn\\\": \\\"iso646cn\\\",\\n\\n    \\\"csiso14jisc6220ro\\\": \\\"iso646jp\\\",\\n    \\\"jisc62201969ro\\\": \\\"iso646jp\\\",\\n    \\\"jp\\\": \\\"iso646jp\\\",\\n\\n    \\\"cshproman8\\\": \\\"hproman8\\\",\\n    \\\"r8\\\": \\\"hproman8\\\",\\n    \\\"roman8\\\": \\\"hproman8\\\",\\n    \\\"xroman8\\\": \\\"hproman8\\\",\\n    \\\"ibm1051\\\": \\\"hproman8\\\",\\n\\n    \\\"mac\\\": \\\"macintosh\\\",\\n    \\\"csmacintosh\\\": \\\"macintosh\\\",\\n};\\n\\n\",\"\\\"use strict\\\";\\n\\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\\nmodule.exports = {\\n  \\\"437\\\": \\\"cp437\\\",\\n  \\\"737\\\": \\\"cp737\\\",\\n  \\\"775\\\": \\\"cp775\\\",\\n  \\\"850\\\": \\\"cp850\\\",\\n  \\\"852\\\": \\\"cp852\\\",\\n  \\\"855\\\": \\\"cp855\\\",\\n  \\\"856\\\": \\\"cp856\\\",\\n  \\\"857\\\": \\\"cp857\\\",\\n  \\\"858\\\": \\\"cp858\\\",\\n  \\\"860\\\": \\\"cp860\\\",\\n  \\\"861\\\": \\\"cp861\\\",\\n  \\\"862\\\": \\\"cp862\\\",\\n  \\\"863\\\": \\\"cp863\\\",\\n  \\\"864\\\": \\\"cp864\\\",\\n  \\\"865\\\": \\\"cp865\\\",\\n  \\\"866\\\": \\\"cp866\\\",\\n  \\\"869\\\": \\\"cp869\\\",\\n  \\\"874\\\": \\\"windows874\\\",\\n  \\\"922\\\": \\\"cp922\\\",\\n  \\\"1046\\\": \\\"cp1046\\\",\\n  \\\"1124\\\": \\\"cp1124\\\",\\n  \\\"1125\\\": \\\"cp1125\\\",\\n  \\\"1129\\\": \\\"cp1129\\\",\\n  \\\"1133\\\": \\\"cp1133\\\",\\n  \\\"1161\\\": \\\"cp1161\\\",\\n  \\\"1162\\\": \\\"cp1162\\\",\\n  \\\"1163\\\": \\\"cp1163\\\",\\n  \\\"1250\\\": \\\"windows1250\\\",\\n  \\\"1251\\\": \\\"windows1251\\\",\\n  \\\"1252\\\": \\\"windows1252\\\",\\n  \\\"1253\\\": \\\"windows1253\\\",\\n  \\\"1254\\\": \\\"windows1254\\\",\\n  \\\"1255\\\": \\\"windows1255\\\",\\n  \\\"1256\\\": \\\"windows1256\\\",\\n  \\\"1257\\\": \\\"windows1257\\\",\\n  \\\"1258\\\": \\\"windows1258\\\",\\n  \\\"28591\\\": \\\"iso88591\\\",\\n  \\\"28592\\\": \\\"iso88592\\\",\\n  \\\"28593\\\": \\\"iso88593\\\",\\n  \\\"28594\\\": \\\"iso88594\\\",\\n  \\\"28595\\\": \\\"iso88595\\\",\\n  \\\"28596\\\": \\\"iso88596\\\",\\n  \\\"28597\\\": \\\"iso88597\\\",\\n  \\\"28598\\\": \\\"iso88598\\\",\\n  \\\"28599\\\": \\\"iso88599\\\",\\n  \\\"28600\\\": \\\"iso885910\\\",\\n  \\\"28601\\\": \\\"iso885911\\\",\\n  \\\"28603\\\": \\\"iso885913\\\",\\n  \\\"28604\\\": \\\"iso885914\\\",\\n  \\\"28605\\\": \\\"iso885915\\\",\\n  \\\"28606\\\": \\\"iso885916\\\",\\n  \\\"windows874\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\\\"\\n  },\\n  \\\"win874\\\": \\\"windows874\\\",\\n  \\\"cp874\\\": \\\"windows874\\\",\\n  \\\"windows1250\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\\\"\\n  },\\n  \\\"win1250\\\": \\\"windows1250\\\",\\n  \\\"cp1250\\\": \\\"windows1250\\\",\\n  \\\"windows1251\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\\\"\\n  },\\n  \\\"win1251\\\": \\\"windows1251\\\",\\n  \\\"cp1251\\\": \\\"windows1251\\\",\\n  \\\"windows1252\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\\\"\\n  },\\n  \\\"win1252\\\": \\\"windows1252\\\",\\n  \\\"cp1252\\\": \\\"windows1252\\\",\\n  \\\"windows1253\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\\\"\\n  },\\n  \\\"win1253\\\": \\\"windows1253\\\",\\n  \\\"cp1253\\\": \\\"windows1253\\\",\\n  \\\"windows1254\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\\\"\\n  },\\n  \\\"win1254\\\": \\\"windows1254\\\",\\n  \\\"cp1254\\\": \\\"windows1254\\\",\\n  \\\"windows1255\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\\\"\\n  },\\n  \\\"win1255\\\": \\\"windows1255\\\",\\n  \\\"cp1255\\\": \\\"windows1255\\\",\\n  \\\"windows1256\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\\\"\\n  },\\n  \\\"win1256\\\": \\\"windows1256\\\",\\n  \\\"cp1256\\\": \\\"windows1256\\\",\\n  \\\"windows1257\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\\\"\\n  },\\n  \\\"win1257\\\": \\\"windows1257\\\",\\n  \\\"cp1257\\\": \\\"windows1257\\\",\\n  \\\"windows1258\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\\\"\\n  },\\n  \\\"win1258\\\": \\\"windows1258\\\",\\n  \\\"cp1258\\\": \\\"windows1258\\\",\\n  \\\"iso88591\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\\\"\\n  },\\n  \\\"cp28591\\\": \\\"iso88591\\\",\\n  \\\"iso88592\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\\\"\\n  },\\n  \\\"cp28592\\\": \\\"iso88592\\\",\\n  \\\"iso88593\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\\\"\\n  },\\n  \\\"cp28593\\\": \\\"iso88593\\\",\\n  \\\"iso88594\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\\\"\\n  },\\n  \\\"cp28594\\\": \\\"iso88594\\\",\\n  \\\"iso88595\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\\\"\\n  },\\n  \\\"cp28595\\\": \\\"iso88595\\\",\\n  \\\"iso88596\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\\\"\\n  },\\n  \\\"cp28596\\\": \\\"iso88596\\\",\\n  \\\"iso88597\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\\\"\\n  },\\n  \\\"cp28597\\\": \\\"iso88597\\\",\\n  \\\"iso88598\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\\\"\\n  },\\n  \\\"cp28598\\\": \\\"iso88598\\\",\\n  \\\"iso88599\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\\\"\\n  },\\n  \\\"cp28599\\\": \\\"iso88599\\\",\\n  \\\"iso885910\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\\\"\\n  },\\n  \\\"cp28600\\\": \\\"iso885910\\\",\\n  \\\"iso885911\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\\\"\\n  },\\n  \\\"cp28601\\\": \\\"iso885911\\\",\\n  \\\"iso885913\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\\\"\\n  },\\n  \\\"cp28603\\\": \\\"iso885913\\\",\\n  \\\"iso885914\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\\\"\\n  },\\n  \\\"cp28604\\\": \\\"iso885914\\\",\\n  \\\"iso885915\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\\\"\\n  },\\n  \\\"cp28605\\\": \\\"iso885915\\\",\\n  \\\"iso885916\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\\\"\\n  },\\n  \\\"cp28606\\\": \\\"iso885916\\\",\\n  \\\"cp437\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \\\"\\n  },\\n  \\\"ibm437\\\": \\\"cp437\\\",\\n  \\\"csibm437\\\": \\\"cp437\\\",\\n  \\\"cp737\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \\\"\\n  },\\n  \\\"ibm737\\\": \\\"cp737\\\",\\n  \\\"csibm737\\\": \\\"cp737\\\",\\n  \\\"cp775\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \\\"\\n  },\\n  \\\"ibm775\\\": \\\"cp775\\\",\\n  \\\"csibm775\\\": \\\"cp775\\\",\\n  \\\"cp850\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \\\"\\n  },\\n  \\\"ibm850\\\": \\\"cp850\\\",\\n  \\\"csibm850\\\": \\\"cp850\\\",\\n  \\\"cp852\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \\\"\\n  },\\n  \\\"ibm852\\\": \\\"cp852\\\",\\n  \\\"csibm852\\\": \\\"cp852\\\",\\n  \\\"cp855\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \\\"\\n  },\\n  \\\"ibm855\\\": \\\"cp855\\\",\\n  \\\"csibm855\\\": \\\"cp855\\\",\\n  \\\"cp856\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \\\"\\n  },\\n  \\\"ibm856\\\": \\\"cp856\\\",\\n  \\\"csibm856\\\": \\\"cp856\\\",\\n  \\\"cp857\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \\\"\\n  },\\n  \\\"ibm857\\\": \\\"cp857\\\",\\n  \\\"csibm857\\\": \\\"cp857\\\",\\n  \\\"cp858\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \\\"\\n  },\\n  \\\"ibm858\\\": \\\"cp858\\\",\\n  \\\"csibm858\\\": \\\"cp858\\\",\\n  \\\"cp860\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \\\"\\n  },\\n  \\\"ibm860\\\": \\\"cp860\\\",\\n  \\\"csibm860\\\": \\\"cp860\\\",\\n  \\\"cp861\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \\\"\\n  },\\n  \\\"ibm861\\\": \\\"cp861\\\",\\n  \\\"csibm861\\\": \\\"cp861\\\",\\n  \\\"cp862\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \\\"\\n  },\\n  \\\"ibm862\\\": \\\"cp862\\\",\\n  \\\"csibm862\\\": \\\"cp862\\\",\\n  \\\"cp863\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \\\"\\n  },\\n  \\\"ibm863\\\": \\\"cp863\\\",\\n  \\\"csibm863\\\": \\\"cp863\\\",\\n  \\\"cp864\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"\\\\u0000\\\\u0001\\\\u0002\\\\u0003\\\\u0004\\\\u0005\\\\u0006\\\\u0007\\\\b\\\\t\\\\n\\\\u000b\\\\f\\\\r\\\\u000e\\\\u000f\\\\u0010\\\\u0011\\\\u0012\\\\u0013\\\\u0014\\\\u0015\\\\u0016\\\\u0017\\\\u0018\\\\u0019\\\\u001a\\\\u001b\\\\u001c\\\\u001d\\\\u001e\\\\u001f !\\\\\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\\\"\\n  },\\n  \\\"ibm864\\\": \\\"cp864\\\",\\n  \\\"csibm864\\\": \\\"cp864\\\",\\n  \\\"cp865\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \\\"\\n  },\\n  \\\"ibm865\\\": \\\"cp865\\\",\\n  \\\"csibm865\\\": \\\"cp865\\\",\\n  \\\"cp866\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \\\"\\n  },\\n  \\\"ibm866\\\": \\\"cp866\\\",\\n  \\\"csibm866\\\": \\\"cp866\\\",\\n  \\\"cp869\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \\\"\\n  },\\n  \\\"ibm869\\\": \\\"cp869\\\",\\n  \\\"csibm869\\\": \\\"cp869\\\",\\n  \\\"cp922\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\\\"\\n  },\\n  \\\"ibm922\\\": \\\"cp922\\\",\\n  \\\"csibm922\\\": \\\"cp922\\\",\\n  \\\"cp1046\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\\\"\\n  },\\n  \\\"ibm1046\\\": \\\"cp1046\\\",\\n  \\\"csibm1046\\\": \\\"cp1046\\\",\\n  \\\"cp1124\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\\\"\\n  },\\n  \\\"ibm1124\\\": \\\"cp1124\\\",\\n  \\\"csibm1124\\\": \\\"cp1124\\\",\\n  \\\"cp1125\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \\\"\\n  },\\n  \\\"ibm1125\\\": \\\"cp1125\\\",\\n  \\\"csibm1125\\\": \\\"cp1125\\\",\\n  \\\"cp1129\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\\\"\\n  },\\n  \\\"ibm1129\\\": \\\"cp1129\\\",\\n  \\\"csibm1129\\\": \\\"cp1129\\\",\\n  \\\"cp1133\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\\\"\\n  },\\n  \\\"ibm1133\\\": \\\"cp1133\\\",\\n  \\\"csibm1133\\\": \\\"cp1133\\\",\\n  \\\"cp1161\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \\\"\\n  },\\n  \\\"ibm1161\\\": \\\"cp1161\\\",\\n  \\\"csibm1161\\\": \\\"cp1161\\\",\\n  \\\"cp1162\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\\\"\\n  },\\n  \\\"ibm1162\\\": \\\"cp1162\\\",\\n  \\\"csibm1162\\\": \\\"cp1162\\\",\\n  \\\"cp1163\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\\\"\\n  },\\n  \\\"ibm1163\\\": \\\"cp1163\\\",\\n  \\\"csibm1163\\\": \\\"cp1163\\\",\\n  \\\"maccroatian\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\\\"\\n  },\\n  \\\"maccyrillic\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\\\"\\n  },\\n  \\\"macgreek\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\\\"\\n  },\\n  \\\"maciceland\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\\\"\\n  },\\n  \\\"macroman\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\\\"\\n  },\\n  \\\"macromania\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\\\"\\n  },\\n  \\\"macthai\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\\\"\\n  },\\n  \\\"macturkish\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\\\"\\n  },\\n  \\\"macukraine\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\\\"\\n  },\\n  \\\"koi8r\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\\\"\\n  },\\n  \\\"koi8u\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\\\"\\n  },\\n  \\\"koi8ru\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\\\"\\n  },\\n  \\\"koi8t\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\\\"\\n  },\\n  \\\"armscii8\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\\\"\\n  },\\n  \\\"rk1048\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\\\"\\n  },\\n  \\\"tcvn\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"\\\\u0000ÚỤ\\\\u0003ỪỬỮ\\\\u0007\\\\b\\\\t\\\\n\\\\u000b\\\\f\\\\r\\\\u000e\\\\u000f\\\\u0010ỨỰỲỶỸÝỴ\\\\u0018\\\\u0019\\\\u001a\\\\u001b\\\\u001c\\\\u001d\\\\u001e\\\\u001f !\\\\\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\\\"\\n  },\\n  \\\"georgianacademy\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\\\"\\n  },\\n  \\\"georgianps\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\\\"\\n  },\\n  \\\"pt154\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\\\"\\n  },\\n  \\\"viscii\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"\\\\u0000\\\\u0001Ẳ\\\\u0003\\\\u0004ẴẪ\\\\u0007\\\\b\\\\t\\\\n\\\\u000b\\\\f\\\\r\\\\u000e\\\\u000f\\\\u0010\\\\u0011\\\\u0012\\\\u0013Ỷ\\\\u0015\\\\u0016\\\\u0017\\\\u0018Ỹ\\\\u001a\\\\u001b\\\\u001c\\\\u001dỴ\\\\u001f !\\\\\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\\\"\\n  },\\n  \\\"iso646cn\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"\\\\u0000\\\\u0001\\\\u0002\\\\u0003\\\\u0004\\\\u0005\\\\u0006\\\\u0007\\\\b\\\\t\\\\n\\\\u000b\\\\f\\\\r\\\\u000e\\\\u000f\\\\u0010\\\\u0011\\\\u0012\\\\u0013\\\\u0014\\\\u0015\\\\u0016\\\\u0017\\\\u0018\\\\u0019\\\\u001a\\\\u001b\\\\u001c\\\\u001d\\\\u001e\\\\u001f !\\\\\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\\\"\\n  },\\n  \\\"iso646jp\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"\\\\u0000\\\\u0001\\\\u0002\\\\u0003\\\\u0004\\\\u0005\\\\u0006\\\\u0007\\\\b\\\\t\\\\n\\\\u000b\\\\f\\\\r\\\\u000e\\\\u000f\\\\u0010\\\\u0011\\\\u0012\\\\u0013\\\\u0014\\\\u0015\\\\u0016\\\\u0017\\\\u0018\\\\u0019\\\\u001a\\\\u001b\\\\u001c\\\\u001d\\\\u001e\\\\u001f !\\\\\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\\\"\\n  },\\n  \\\"hproman8\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\\\"\\n  },\\n  \\\"macintosh\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\\\"\\n  },\\n  \\\"ascii\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"��������������������������������������������������������������������������������������������������������������������������������\\\"\\n  },\\n  \\\"tis620\\\": {\\n    \\\"type\\\": \\\"_sbcs\\\",\\n    \\\"chars\\\": \\\"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\\\"\\n  }\\n}\",\"\\\"use strict\\\";\\nvar Buffer = require(\\\"safer-buffer\\\").Buffer;\\n\\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\\n// To save memory and loading time, we read table files only when requested.\\n\\nexports._dbcs = DBCSCodec;\\n\\nvar UNASSIGNED = -1,\\n    GB18030_CODE = -2,\\n    SEQ_START  = -10,\\n    NODE_START = -1000,\\n    UNASSIGNED_NODE = new Array(0x100),\\n    DEF_CHAR = -1;\\n\\nfor (var i = 0; i < 0x100; i++)\\n    UNASSIGNED_NODE[i] = UNASSIGNED;\\n\\n\\n// Class DBCSCodec reads and initializes mapping tables.\\nfunction DBCSCodec(codecOptions, iconv) {\\n    this.encodingName = codecOptions.encodingName;\\n    if (!codecOptions)\\n        throw new Error(\\\"DBCS codec is called without the data.\\\")\\n    if (!codecOptions.table)\\n        throw new Error(\\\"Encoding '\\\" + this.encodingName + \\\"' has no data.\\\");\\n\\n    // Load tables.\\n    var mappingTable = codecOptions.table();\\n\\n\\n    // Decode tables: MBCS -> Unicode.\\n\\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\\n    // Trie root is decodeTables[0].\\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\\n    //         == UNASSIGNED -> unknown/unassigned sequence.\\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\\n    this.decodeTables = [];\\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\\n\\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \\n    this.decodeTableSeq = [];\\n\\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\\n    for (var i = 0; i < mappingTable.length; i++)\\n        this._addDecodeChunk(mappingTable[i]);\\n\\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\\n\\n    \\n    // Encode tables: Unicode -> DBCS.\\n\\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\\n    //         == UNASSIGNED -> no conversion found. Output a default char.\\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\\n    this.encodeTable = [];\\n    \\n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\\n    // Objects are kept separately from encodeTable to increase performance.\\n    this.encodeTableSeq = [];\\n\\n    // Some chars can be decoded, but need not be encoded.\\n    var skipEncodeChars = {};\\n    if (codecOptions.encodeSkipVals)\\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\\n            var val = codecOptions.encodeSkipVals[i];\\n            if (typeof val === 'number')\\n                skipEncodeChars[val] = true;\\n            else\\n                for (var j = val.from; j <= val.to; j++)\\n                    skipEncodeChars[j] = true;\\n        }\\n        \\n    // Use decode trie to recursively fill out encode tables.\\n    this._fillEncodeTable(0, 0, skipEncodeChars);\\n\\n    // Add more encoding pairs when needed.\\n    if (codecOptions.encodeAdd) {\\n        for (var uChar in codecOptions.encodeAdd)\\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\\n    }\\n\\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \\\"?\\\".charCodeAt(0);\\n\\n\\n    // Load & create GB18030 tables when needed.\\n    if (typeof codecOptions.gb18030 === 'function') {\\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\\n\\n        // Add GB18030 decode tables.\\n        var thirdByteNodeIdx = this.decodeTables.length;\\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\\n\\n        var fourthByteNodeIdx = this.decodeTables.length;\\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\\n\\n        for (var i = 0x81; i <= 0xFE; i++) {\\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\\n            for (var j = 0x30; j <= 0x39; j++)\\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\\n        }\\n        for (var i = 0x81; i <= 0xFE; i++)\\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\\n        for (var i = 0x30; i <= 0x39; i++)\\n            fourthByteNode[i] = GB18030_CODE\\n    }        \\n}\\n\\nDBCSCodec.prototype.encoder = DBCSEncoder;\\nDBCSCodec.prototype.decoder = DBCSDecoder;\\n\\n// Decoder helpers\\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\\n    var bytes = [];\\n    for (; addr > 0; addr >>= 8)\\n        bytes.push(addr & 0xFF);\\n    if (bytes.length == 0)\\n        bytes.push(0);\\n\\n    var node = this.decodeTables[0];\\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\\n        var val = node[bytes[i]];\\n\\n        if (val == UNASSIGNED) { // Create new node.\\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\\n        }\\n        else if (val <= NODE_START) { // Existing node.\\n            node = this.decodeTables[NODE_START - val];\\n        }\\n        else\\n            throw new Error(\\\"Overwrite byte in \\\" + this.encodingName + \\\", addr: \\\" + addr.toString(16));\\n    }\\n    return node;\\n}\\n\\n\\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\\n    // First element of chunk is the hex mbcs code where we start.\\n    var curAddr = parseInt(chunk[0], 16);\\n\\n    // Choose the decoding node where we'll write our chars.\\n    var writeTable = this._getDecodeTrieNode(curAddr);\\n    curAddr = curAddr & 0xFF;\\n\\n    // Write all other elements of the chunk to the table.\\n    for (var k = 1; k < chunk.length; k++) {\\n        var part = chunk[k];\\n        if (typeof part === \\\"string\\\") { // String, write as-is.\\n            for (var l = 0; l < part.length;) {\\n                var code = part.charCodeAt(l++);\\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\\n                    var codeTrail = part.charCodeAt(l++);\\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\\n                    else\\n                        throw new Error(\\\"Incorrect surrogate pair in \\\"  + this.encodingName + \\\" at chunk \\\" + chunk[0]);\\n                }\\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\\n                    var len = 0xFFF - code + 2;\\n                    var seq = [];\\n                    for (var m = 0; m < len; m++)\\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\\n\\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\\n                    this.decodeTableSeq.push(seq);\\n                }\\n                else\\n                    writeTable[curAddr++] = code; // Basic char\\n            }\\n        } \\n        else if (typeof part === \\\"number\\\") { // Integer, meaning increasing sequence starting with prev character.\\n            var charCode = writeTable[curAddr - 1] + 1;\\n            for (var l = 0; l < part; l++)\\n                writeTable[curAddr++] = charCode++;\\n        }\\n        else\\n            throw new Error(\\\"Incorrect type '\\\" + typeof part + \\\"' given in \\\"  + this.encodingName + \\\" at chunk \\\" + chunk[0]);\\n    }\\n    if (curAddr > 0xFF)\\n        throw new Error(\\\"Incorrect chunk in \\\"  + this.encodingName + \\\" at addr \\\" + chunk[0] + \\\": too long\\\" + curAddr);\\n}\\n\\n// Encoder helpers\\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\\n    if (this.encodeTable[high] === undefined)\\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\\n    return this.encodeTable[high];\\n}\\n\\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\\n    var bucket = this._getEncodeBucket(uCode);\\n    var low = uCode & 0xFF;\\n    if (bucket[low] <= SEQ_START)\\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\\n    else if (bucket[low] == UNASSIGNED)\\n        bucket[low] = dbcsCode;\\n}\\n\\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\\n    \\n    // Get the root of character tree according to first character of the sequence.\\n    var uCode = seq[0];\\n    var bucket = this._getEncodeBucket(uCode);\\n    var low = uCode & 0xFF;\\n\\n    var node;\\n    if (bucket[low] <= SEQ_START) {\\n        // There's already a sequence with  - use it.\\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\\n    }\\n    else {\\n        // There was no sequence object - allocate a new one.\\n        node = {};\\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\\n        this.encodeTableSeq.push(node);\\n    }\\n\\n    // Traverse the character tree, allocating new nodes as needed.\\n    for (var j = 1; j < seq.length-1; j++) {\\n        var oldVal = node[uCode];\\n        if (typeof oldVal === 'object')\\n            node = oldVal;\\n        else {\\n            node = node[uCode] = {}\\n            if (oldVal !== undefined)\\n                node[DEF_CHAR] = oldVal\\n        }\\n    }\\n\\n    // Set the leaf to given dbcsCode.\\n    uCode = seq[seq.length-1];\\n    node[uCode] = dbcsCode;\\n}\\n\\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\\n    var node = this.decodeTables[nodeIdx];\\n    for (var i = 0; i < 0x100; i++) {\\n        var uCode = node[i];\\n        var mbCode = prefix + i;\\n        if (skipEncodeChars[mbCode])\\n            continue;\\n\\n        if (uCode >= 0)\\n            this._setEncodeChar(uCode, mbCode);\\n        else if (uCode <= NODE_START)\\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\\n        else if (uCode <= SEQ_START)\\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\\n    }\\n}\\n\\n\\n\\n// == Encoder ==================================================================\\n\\nfunction DBCSEncoder(options, codec) {\\n    // Encoder state\\n    this.leadSurrogate = -1;\\n    this.seqObj = undefined;\\n    \\n    // Static data\\n    this.encodeTable = codec.encodeTable;\\n    this.encodeTableSeq = codec.encodeTableSeq;\\n    this.defaultCharSingleByte = codec.defCharSB;\\n    this.gb18030 = codec.gb18030;\\n}\\n\\nDBCSEncoder.prototype.write = function(str) {\\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\\n        leadSurrogate = this.leadSurrogate,\\n        seqObj = this.seqObj, nextChar = -1,\\n        i = 0, j = 0;\\n\\n    while (true) {\\n        // 0. Get next character.\\n        if (nextChar === -1) {\\n            if (i == str.length) break;\\n            var uCode = str.charCodeAt(i++);\\n        }\\n        else {\\n            var uCode = nextChar;\\n            nextChar = -1;    \\n        }\\n\\n        // 1. Handle surrogates.\\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\\n            if (uCode < 0xDC00) { // We've got lead surrogate.\\n                if (leadSurrogate === -1) {\\n                    leadSurrogate = uCode;\\n                    continue;\\n                } else {\\n                    leadSurrogate = uCode;\\n                    // Double lead surrogate found.\\n                    uCode = UNASSIGNED;\\n                }\\n            } else { // We've got trail surrogate.\\n                if (leadSurrogate !== -1) {\\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\\n                    leadSurrogate = -1;\\n                } else {\\n                    // Incomplete surrogate pair - only trail surrogate found.\\n                    uCode = UNASSIGNED;\\n                }\\n                \\n            }\\n        }\\n        else if (leadSurrogate !== -1) {\\n            // Incomplete surrogate pair - only lead surrogate found.\\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\\n            leadSurrogate = -1;\\n        }\\n\\n        // 2. Convert uCode character.\\n        var dbcsCode = UNASSIGNED;\\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\\n            var resCode = seqObj[uCode];\\n            if (typeof resCode === 'object') { // Sequence continues.\\n                seqObj = resCode;\\n                continue;\\n\\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\\n                dbcsCode = resCode;\\n\\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\\n\\n                // Try default character for this sequence\\n                resCode = seqObj[DEF_CHAR];\\n                if (resCode !== undefined) {\\n                    dbcsCode = resCode; // Found. Write it.\\n                    nextChar = uCode; // Current character will be written too in the next iteration.\\n\\n                } else {\\n                    // TODO: What if we have no default? (resCode == undefined)\\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\\n                    // Didn't do it for now because no encoding has this situation yet.\\n                    // Currently, just skip the sequence and write current char.\\n                }\\n            }\\n            seqObj = undefined;\\n        }\\n        else if (uCode >= 0) {  // Regular character\\n            var subtable = this.encodeTable[uCode >> 8];\\n            if (subtable !== undefined)\\n                dbcsCode = subtable[uCode & 0xFF];\\n            \\n            if (dbcsCode <= SEQ_START) { // Sequence start\\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\\n                continue;\\n            }\\n\\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\\n                // Use GB18030 algorithm to find character(s) to write.\\n                var idx = findIdx(this.gb18030.uChars, uCode);\\n                if (idx != -1) {\\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\\n                    newBuf[j++] = 0x30 + dbcsCode;\\n                    continue;\\n                }\\n            }\\n        }\\n\\n        // 3. Write dbcsCode character.\\n        if (dbcsCode === UNASSIGNED)\\n            dbcsCode = this.defaultCharSingleByte;\\n        \\n        if (dbcsCode < 0x100) {\\n            newBuf[j++] = dbcsCode;\\n        }\\n        else if (dbcsCode < 0x10000) {\\n            newBuf[j++] = dbcsCode >> 8;   // high byte\\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\\n        }\\n        else {\\n            newBuf[j++] = dbcsCode >> 16;\\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\\n            newBuf[j++] = dbcsCode & 0xFF;\\n        }\\n    }\\n\\n    this.seqObj = seqObj;\\n    this.leadSurrogate = leadSurrogate;\\n    return newBuf.slice(0, j);\\n}\\n\\nDBCSEncoder.prototype.end = function() {\\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\\n        return; // All clean. Most often case.\\n\\n    var newBuf = Buffer.alloc(10), j = 0;\\n\\n    if (this.seqObj) { // We're in the sequence.\\n        var dbcsCode = this.seqObj[DEF_CHAR];\\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\\n            if (dbcsCode < 0x100) {\\n                newBuf[j++] = dbcsCode;\\n            }\\n            else {\\n                newBuf[j++] = dbcsCode >> 8;   // high byte\\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\\n            }\\n        } else {\\n            // See todo above.\\n        }\\n        this.seqObj = undefined;\\n    }\\n\\n    if (this.leadSurrogate !== -1) {\\n        // Incomplete surrogate pair - only lead surrogate found.\\n        newBuf[j++] = this.defaultCharSingleByte;\\n        this.leadSurrogate = -1;\\n    }\\n    \\n    return newBuf.slice(0, j);\\n}\\n\\n// Export for testing\\nDBCSEncoder.prototype.findIdx = findIdx;\\n\\n\\n// == Decoder ==================================================================\\n\\nfunction DBCSDecoder(options, codec) {\\n    // Decoder state\\n    this.nodeIdx = 0;\\n    this.prevBuf = Buffer.alloc(0);\\n\\n    // Static data\\n    this.decodeTables = codec.decodeTables;\\n    this.decodeTableSeq = codec.decodeTableSeq;\\n    this.defaultCharUnicode = codec.defaultCharUnicode;\\n    this.gb18030 = codec.gb18030;\\n}\\n\\nDBCSDecoder.prototype.write = function(buf) {\\n    var newBuf = Buffer.alloc(buf.length*2),\\n        nodeIdx = this.nodeIdx, \\n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\\n        uCode;\\n\\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\\n    \\n    for (var i = 0, j = 0; i < buf.length; i++) {\\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\\n\\n        // Lookup in current trie node.\\n        var uCode = this.decodeTables[nodeIdx][curByte];\\n\\n        if (uCode >= 0) { \\n            // Normal character, just use it.\\n        }\\n        else if (uCode === UNASSIGNED) { // Unknown char.\\n            // TODO: Callback with seq.\\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\\n            uCode = this.defaultCharUnicode.charCodeAt(0);\\n        }\\n        else if (uCode === GB18030_CODE) {\\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\\n            var idx = findIdx(this.gb18030.gbChars, ptr);\\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\\n        }\\n        else if (uCode <= NODE_START) { // Go to next trie node.\\n            nodeIdx = NODE_START - uCode;\\n            continue;\\n        }\\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\\n            for (var k = 0; k < seq.length - 1; k++) {\\n                uCode = seq[k];\\n                newBuf[j++] = uCode & 0xFF;\\n                newBuf[j++] = uCode >> 8;\\n            }\\n            uCode = seq[seq.length-1];\\n        }\\n        else\\n            throw new Error(\\\"iconv-lite internal error: invalid decoding table value \\\" + uCode + \\\" at \\\" + nodeIdx + \\\"/\\\" + curByte);\\n\\n        // Write the character to buffer, handling higher planes using surrogate pair.\\n        if (uCode > 0xFFFF) { \\n            uCode -= 0x10000;\\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\\n            newBuf[j++] = uCodeLead & 0xFF;\\n            newBuf[j++] = uCodeLead >> 8;\\n\\n            uCode = 0xDC00 + uCode % 0x400;\\n        }\\n        newBuf[j++] = uCode & 0xFF;\\n        newBuf[j++] = uCode >> 8;\\n\\n        // Reset trie node.\\n        nodeIdx = 0; seqStart = i+1;\\n    }\\n\\n    this.nodeIdx = nodeIdx;\\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\\n    return newBuf.slice(0, j).toString('ucs2');\\n}\\n\\nDBCSDecoder.prototype.end = function() {\\n    var ret = '';\\n\\n    // Try to parse all remaining chars.\\n    while (this.prevBuf.length > 0) {\\n        // Skip 1 character in the buffer.\\n        ret += this.defaultCharUnicode;\\n        var buf = this.prevBuf.slice(1);\\n\\n        // Parse remaining as usual.\\n        this.prevBuf = Buffer.alloc(0);\\n        this.nodeIdx = 0;\\n        if (buf.length > 0)\\n            ret += this.write(buf);\\n    }\\n\\n    this.nodeIdx = 0;\\n    return ret;\\n}\\n\\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\\nfunction findIdx(table, val) {\\n    if (table[0] > val)\\n        return -1;\\n\\n    var l = 0, r = table.length;\\n    while (l < r-1) { // always table[l] <= val < table[r]\\n        var mid = l + Math.floor((r-l+1)/2);\\n        if (table[mid] <= val)\\n            l = mid;\\n        else\\n            r = mid;\\n    }\\n    return l;\\n}\\n\\n\",\"\\\"use strict\\\";\\n\\n// Description of supported double byte encodings and aliases.\\n// Tables are not require()-d until they are needed to speed up library load.\\n// require()-s are direct to support Browserify.\\n\\nmodule.exports = {\\n    \\n    // == Japanese/ShiftJIS ====================================================\\n    // All japanese encodings are based on JIS X set of standards:\\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \\n    //              Has several variations in 1978, 1983, 1990 and 1997.\\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\\n    //              2 planes, first is superset of 0208, second - revised 0212.\\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\\n\\n    // Byte encodings are:\\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\\n    //               0x00-0x7F       - lower part of 0201\\n    //               0x8E, 0xA1-0xDF - upper part of 0201\\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\\n    //               Used as-is in ISO2022 family.\\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \\n    //                0201-1976 Roman, 0208-1978, 0208-1983.\\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\\n    //\\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\\n    //\\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\\n\\n    'shiftjis': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/shiftjis.json') },\\n        encodeAdd: {'\\\\u00a5': 0x5C, '\\\\u203E': 0x7E},\\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\\n    },\\n    'csshiftjis': 'shiftjis',\\n    'mskanji': 'shiftjis',\\n    'sjis': 'shiftjis',\\n    'windows31j': 'shiftjis',\\n    'ms31j': 'shiftjis',\\n    'xsjis': 'shiftjis',\\n    'windows932': 'shiftjis',\\n    'ms932': 'shiftjis',\\n    '932': 'shiftjis',\\n    'cp932': 'shiftjis',\\n\\n    'eucjp': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/eucjp.json') },\\n        encodeAdd: {'\\\\u00a5': 0x5C, '\\\\u203E': 0x7E},\\n    },\\n\\n    // TODO: KDDI extension to Shift_JIS\\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\\n\\n\\n    // == Chinese/GBK ==========================================================\\n    // http://en.wikipedia.org/wiki/GBK\\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\\n\\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\\n    'gb2312': 'cp936',\\n    'gb231280': 'cp936',\\n    'gb23121980': 'cp936',\\n    'csgb2312': 'cp936',\\n    'csiso58gb231280': 'cp936',\\n    'euccn': 'cp936',\\n\\n    // Microsoft's CP936 is a subset and approximation of GBK.\\n    'windows936': 'cp936',\\n    'ms936': 'cp936',\\n    '936': 'cp936',\\n    'cp936': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/cp936.json') },\\n    },\\n\\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\\n    'gbk': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\\n    },\\n    'xgbk': 'gbk',\\n    'isoir58': 'gbk',\\n\\n    // GB18030 is an algorithmic extension of GBK.\\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\\n    // http://icu-project.org/docs/papers/gb18030.html\\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\\n    'gb18030': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\\n        encodeSkipVals: [0x80],\\n        encodeAdd: {'€': 0xA2E3},\\n    },\\n\\n    'chinese': 'gb18030',\\n\\n\\n    // == Korean ===============================================================\\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\\n    'windows949': 'cp949',\\n    'ms949': 'cp949',\\n    '949': 'cp949',\\n    'cp949': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/cp949.json') },\\n    },\\n\\n    'cseuckr': 'cp949',\\n    'csksc56011987': 'cp949',\\n    'euckr': 'cp949',\\n    'isoir149': 'cp949',\\n    'korean': 'cp949',\\n    'ksc56011987': 'cp949',\\n    'ksc56011989': 'cp949',\\n    'ksc5601': 'cp949',\\n\\n\\n    // == Big5/Taiwan/Hong Kong ================================================\\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\\n    // Variations, in roughly number of defined chars:\\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \\n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\\n    //    Plus, it has 4 combining sequences.\\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\\n    // \\n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\\n\\n    'windows950': 'cp950',\\n    'ms950': 'cp950',\\n    '950': 'cp950',\\n    'cp950': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/cp950.json') },\\n    },\\n\\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\\n    'big5': 'big5hkscs',\\n    'big5hkscs': {\\n        type: '_dbcs',\\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\\n        encodeSkipVals: [0xa2cc],\\n    },\\n\\n    'cnbig5': 'big5hkscs',\\n    'csbig5': 'big5hkscs',\\n    'xxbig5': 'big5hkscs',\\n};\\n\",\"\\\"use strict\\\";\\n\\nvar Buffer = require(\\\"buffer\\\").Buffer,\\n    Transform = require(\\\"stream\\\").Transform;\\n\\n\\n// == Exports ==================================================================\\nmodule.exports = function(iconv) {\\n    \\n    // Additional Public API.\\n    iconv.encodeStream = function encodeStream(encoding, options) {\\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\\n    }\\n\\n    iconv.decodeStream = function decodeStream(encoding, options) {\\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\\n    }\\n\\n    iconv.supportsStreams = true;\\n\\n\\n    // Not published yet.\\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\\n};\\n\\n\\n// == Encoder stream =======================================================\\nfunction IconvLiteEncoderStream(conv, options) {\\n    this.conv = conv;\\n    options = options || {};\\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\\n    Transform.call(this, options);\\n}\\n\\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\\n    constructor: { value: IconvLiteEncoderStream }\\n});\\n\\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\\n    if (typeof chunk != 'string')\\n        return done(new Error(\\\"Iconv encoding stream needs strings as its input.\\\"));\\n    try {\\n        var res = this.conv.write(chunk);\\n        if (res && res.length) this.push(res);\\n        done();\\n    }\\n    catch (e) {\\n        done(e);\\n    }\\n}\\n\\nIconvLiteEncoderStream.prototype._flush = function(done) {\\n    try {\\n        var res = this.conv.end();\\n        if (res && res.length) this.push(res);\\n        done();\\n    }\\n    catch (e) {\\n        done(e);\\n    }\\n}\\n\\nIconvLiteEncoderStream.prototype.collect = function(cb) {\\n    var chunks = [];\\n    this.on('error', cb);\\n    this.on('data', function(chunk) { chunks.push(chunk); });\\n    this.on('end', function() {\\n        cb(null, Buffer.concat(chunks));\\n    });\\n    return this;\\n}\\n\\n\\n// == Decoder stream =======================================================\\nfunction IconvLiteDecoderStream(conv, options) {\\n    this.conv = conv;\\n    options = options || {};\\n    options.encoding = this.encoding = 'utf8'; // We output strings.\\n    Transform.call(this, options);\\n}\\n\\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\\n    constructor: { value: IconvLiteDecoderStream }\\n});\\n\\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\\n    if (!Buffer.isBuffer(chunk))\\n        return done(new Error(\\\"Iconv decoding stream needs buffers as its input.\\\"));\\n    try {\\n        var res = this.conv.write(chunk);\\n        if (res && res.length) this.push(res, this.encoding);\\n        done();\\n    }\\n    catch (e) {\\n        done(e);\\n    }\\n}\\n\\nIconvLiteDecoderStream.prototype._flush = function(done) {\\n    try {\\n        var res = this.conv.end();\\n        if (res && res.length) this.push(res, this.encoding);                \\n        done();\\n    }\\n    catch (e) {\\n        done(e);\\n    }\\n}\\n\\nIconvLiteDecoderStream.prototype.collect = function(cb) {\\n    var res = '';\\n    this.on('error', cb);\\n    this.on('data', function(chunk) { res += chunk; });\\n    this.on('end', function() {\\n        cb(null, res);\\n    });\\n    return this;\\n}\\n\\n\",\"\\\"use strict\\\";\\nvar Buffer = require(\\\"buffer\\\").Buffer;\\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\\n\\n// == Extend Node primitives to use iconv-lite =================================\\n\\nmodule.exports = function (iconv) {\\n    var original = undefined; // Place to keep original methods.\\n\\n    // Node authors rewrote Buffer internals to make it compatible with\\n    // Uint8Array and we cannot patch key functions since then.\\n    // Note: this does use older Buffer API on a purpose\\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\\n\\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\\n        if (original) return;\\n        original = {};\\n\\n        if (!iconv.supportsNodeEncodingsExtension) {\\n            console.error(\\\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\\\");\\n            console.error(\\\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\\\");\\n            return;\\n        }\\n\\n        var nodeNativeEncodings = {\\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \\n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\\n        };\\n\\n        Buffer.isNativeEncoding = function(enc) {\\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\\n        }\\n\\n        // -- SlowBuffer -----------------------------------------------------------\\n        var SlowBuffer = require('buffer').SlowBuffer;\\n\\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\\n            encoding = String(encoding || 'utf8').toLowerCase();\\n\\n            // Use native conversion when possible\\n            if (Buffer.isNativeEncoding(encoding))\\n                return original.SlowBufferToString.call(this, encoding, start, end);\\n\\n            // Otherwise, use our decoding method.\\n            if (typeof start == 'undefined') start = 0;\\n            if (typeof end == 'undefined') end = this.length;\\n            return iconv.decode(this.slice(start, end), encoding);\\n        }\\n\\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\\n            // Support both (string, offset, length, encoding)\\n            // and the legacy (string, encoding, offset, length)\\n            if (isFinite(offset)) {\\n                if (!isFinite(length)) {\\n                    encoding = length;\\n                    length = undefined;\\n                }\\n            } else {  // legacy\\n                var swap = encoding;\\n                encoding = offset;\\n                offset = length;\\n                length = swap;\\n            }\\n\\n            offset = +offset || 0;\\n            var remaining = this.length - offset;\\n            if (!length) {\\n                length = remaining;\\n            } else {\\n                length = +length;\\n                if (length > remaining) {\\n                    length = remaining;\\n                }\\n            }\\n            encoding = String(encoding || 'utf8').toLowerCase();\\n\\n            // Use native conversion when possible\\n            if (Buffer.isNativeEncoding(encoding))\\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\\n\\n            if (string.length > 0 && (length < 0 || offset < 0))\\n                throw new RangeError('attempt to write beyond buffer bounds');\\n\\n            // Otherwise, use our encoding method.\\n            var buf = iconv.encode(string, encoding);\\n            if (buf.length < length) length = buf.length;\\n            buf.copy(this, offset, 0, length);\\n            return length;\\n        }\\n\\n        // -- Buffer ---------------------------------------------------------------\\n\\n        original.BufferIsEncoding = Buffer.isEncoding;\\n        Buffer.isEncoding = function(encoding) {\\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\\n        }\\n\\n        original.BufferByteLength = Buffer.byteLength;\\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\\n            encoding = String(encoding || 'utf8').toLowerCase();\\n\\n            // Use native conversion when possible\\n            if (Buffer.isNativeEncoding(encoding))\\n                return original.BufferByteLength.call(this, str, encoding);\\n\\n            // Slow, I know, but we don't have a better way yet.\\n            return iconv.encode(str, encoding).length;\\n        }\\n\\n        original.BufferToString = Buffer.prototype.toString;\\n        Buffer.prototype.toString = function(encoding, start, end) {\\n            encoding = String(encoding || 'utf8').toLowerCase();\\n\\n            // Use native conversion when possible\\n            if (Buffer.isNativeEncoding(encoding))\\n                return original.BufferToString.call(this, encoding, start, end);\\n\\n            // Otherwise, use our decoding method.\\n            if (typeof start == 'undefined') start = 0;\\n            if (typeof end == 'undefined') end = this.length;\\n            return iconv.decode(this.slice(start, end), encoding);\\n        }\\n\\n        original.BufferWrite = Buffer.prototype.write;\\n        Buffer.prototype.write = function(string, offset, length, encoding) {\\n            var _offset = offset, _length = length, _encoding = encoding;\\n            // Support both (string, offset, length, encoding)\\n            // and the legacy (string, encoding, offset, length)\\n            if (isFinite(offset)) {\\n                if (!isFinite(length)) {\\n                    encoding = length;\\n                    length = undefined;\\n                }\\n            } else {  // legacy\\n                var swap = encoding;\\n                encoding = offset;\\n                offset = length;\\n                length = swap;\\n            }\\n\\n            encoding = String(encoding || 'utf8').toLowerCase();\\n\\n            // Use native conversion when possible\\n            if (Buffer.isNativeEncoding(encoding))\\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\\n\\n            offset = +offset || 0;\\n            var remaining = this.length - offset;\\n            if (!length) {\\n                length = remaining;\\n            } else {\\n                length = +length;\\n                if (length > remaining) {\\n                    length = remaining;\\n                }\\n            }\\n\\n            if (string.length > 0 && (length < 0 || offset < 0))\\n                throw new RangeError('attempt to write beyond buffer bounds');\\n\\n            // Otherwise, use our encoding method.\\n            var buf = iconv.encode(string, encoding);\\n            if (buf.length < length) length = buf.length;\\n            buf.copy(this, offset, 0, length);\\n            return length;\\n\\n            // TODO: Set _charsWritten.\\n        }\\n\\n\\n        // -- Readable -------------------------------------------------------------\\n        if (iconv.supportsStreams) {\\n            var Readable = require('stream').Readable;\\n\\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\\n                // Use our own decoder, it has the same interface.\\n                // We cannot use original function as it doesn't handle BOM-s.\\n                this._readableState.decoder = iconv.getDecoder(enc, options);\\n                this._readableState.encoding = enc;\\n            }\\n\\n            Readable.prototype.collect = iconv._collect;\\n        }\\n    }\\n\\n    // Remove iconv-lite Node primitive extensions.\\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\\n        if (!iconv.supportsNodeEncodingsExtension)\\n            return;\\n        if (!original)\\n            throw new Error(\\\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\\\")\\n\\n        delete Buffer.isNativeEncoding;\\n\\n        var SlowBuffer = require('buffer').SlowBuffer;\\n\\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\\n\\n        Buffer.isEncoding = original.BufferIsEncoding;\\n        Buffer.byteLength = original.BufferByteLength;\\n        Buffer.prototype.toString = original.BufferToString;\\n        Buffer.prototype.write = original.BufferWrite;\\n\\n        if (iconv.supportsStreams) {\\n            var Readable = require('stream').Readable;\\n\\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\\n            delete Readable.prototype.collect;\\n        }\\n\\n        original = undefined;\\n    }\\n}\\n\",\"'use strict';\\nconst toBytes = s => Array.from(s).map(c => c.charCodeAt(0));\\nconst xpiZipFilename = toBytes('META-INF/mozilla.rsa');\\nconst oxmlContentTypes = toBytes('[Content_Types].xml');\\nconst oxmlRels = toBytes('_rels/.rels');\\n\\nmodule.exports = input => {\\n\\tconst buf = (input instanceof Uint8Array) ? input : new Uint8Array(input);\\n\\n\\tif (!(buf && buf.length > 1)) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tconst check = (header, opts) => {\\n\\t\\topts = Object.assign({\\n\\t\\t\\toffset: 0\\n\\t\\t}, opts);\\n\\n\\t\\tfor (let i = 0; i < header.length; i++) {\\n\\t\\t\\t// If a bitmask is set\\n\\t\\t\\tif (opts.mask) {\\n\\t\\t\\t\\t// If header doesn't equal `buf` with bits masked off\\n\\t\\t\\t\\tif (header[i] !== (opts.mask[i] & buf[i + opts.offset])) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (header[i] !== buf[i + opts.offset]) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t};\\n\\n\\tif (check([0xFF, 0xD8, 0xFF])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'jpg',\\n\\t\\t\\tmime: 'image/jpeg'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'png',\\n\\t\\t\\tmime: 'image/png'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x47, 0x49, 0x46])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'gif',\\n\\t\\t\\tmime: 'image/gif'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x57, 0x45, 0x42, 0x50], {offset: 8})) {\\n\\t\\treturn {\\n\\t\\t\\text: 'webp',\\n\\t\\t\\tmime: 'image/webp'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x46, 0x4C, 0x49, 0x46])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'flif',\\n\\t\\t\\tmime: 'image/flif'\\n\\t\\t};\\n\\t}\\n\\n\\t// Needs to be before `tif` check\\n\\tif (\\n\\t\\t(check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) &&\\n\\t\\tcheck([0x43, 0x52], {offset: 8})\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'cr2',\\n\\t\\t\\tmime: 'image/x-canon-cr2'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x49, 0x49, 0x2A, 0x0]) ||\\n\\t\\tcheck([0x4D, 0x4D, 0x0, 0x2A])\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'tif',\\n\\t\\t\\tmime: 'image/tiff'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x42, 0x4D])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'bmp',\\n\\t\\t\\tmime: 'image/bmp'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x49, 0x49, 0xBC])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'jxr',\\n\\t\\t\\tmime: 'image/vnd.ms-photo'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x38, 0x42, 0x50, 0x53])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'psd',\\n\\t\\t\\tmime: 'image/vnd.adobe.photoshop'\\n\\t\\t};\\n\\t}\\n\\n\\t// Zip-based file formats\\n\\t// Need to be before the `zip` check\\n\\tif (check([0x50, 0x4B, 0x3, 0x4])) {\\n\\t\\tif (\\n\\t\\t\\tcheck([0x6D, 0x69, 0x6D, 0x65, 0x74, 0x79, 0x70, 0x65, 0x61, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x65, 0x70, 0x75, 0x62, 0x2B, 0x7A, 0x69, 0x70], {offset: 30})\\n\\t\\t) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'epub',\\n\\t\\t\\t\\tmime: 'application/epub+zip'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Assumes signed `.xpi` from addons.mozilla.org\\n\\t\\tif (check(xpiZipFilename, {offset: 30})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'xpi',\\n\\t\\t\\t\\tmime: 'application/x-xpinstall'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// https://github.com/file/file/blob/master/magic/Magdir/msooxml\\n\\t\\tif (check(oxmlContentTypes, {offset: 30}) || check(oxmlRels, {offset: 30})) {\\n\\t\\t\\tconst sliced = buf.subarray(4, 4 + 2000);\\n\\t\\t\\tconst nextZipHeaderIndex = arr => arr.findIndex((el, i, arr) => arr[i] === 0x50 && arr[i + 1] === 0x4B && arr[i + 2] === 0x3 && arr[i + 3] === 0x4);\\n\\t\\t\\tconst header2Pos = nextZipHeaderIndex(sliced);\\n\\n\\t\\t\\tif (header2Pos !== -1) {\\n\\t\\t\\t\\tconst slicedAgain = buf.subarray(header2Pos + 8, header2Pos + 8 + 1000);\\n\\t\\t\\t\\tconst header3Pos = nextZipHeaderIndex(slicedAgain);\\n\\n\\t\\t\\t\\tif (header3Pos !== -1) {\\n\\t\\t\\t\\t\\tconst offset = 8 + header2Pos + header3Pos + 30;\\n\\n\\t\\t\\t\\t\\tif (check(toBytes('word/'), {offset})) {\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\text: 'docx',\\n\\t\\t\\t\\t\\t\\t\\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (check(toBytes('ppt/'), {offset})) {\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\text: 'pptx',\\n\\t\\t\\t\\t\\t\\t\\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (check(toBytes('xl/'), {offset})) {\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\text: 'xlsx',\\n\\t\\t\\t\\t\\t\\t\\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x50, 0x4B]) &&\\n\\t\\t(buf[2] === 0x3 || buf[2] === 0x5 || buf[2] === 0x7) &&\\n\\t\\t(buf[3] === 0x4 || buf[3] === 0x6 || buf[3] === 0x8)\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'zip',\\n\\t\\t\\tmime: 'application/zip'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x75, 0x73, 0x74, 0x61, 0x72], {offset: 257})) {\\n\\t\\treturn {\\n\\t\\t\\text: 'tar',\\n\\t\\t\\tmime: 'application/x-tar'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) &&\\n\\t\\t(buf[6] === 0x0 || buf[6] === 0x1)\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'rar',\\n\\t\\t\\tmime: 'application/x-rar-compressed'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x1F, 0x8B, 0x8])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'gz',\\n\\t\\t\\tmime: 'application/gzip'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x42, 0x5A, 0x68])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'bz2',\\n\\t\\t\\tmime: 'application/x-bzip2'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\\n\\t\\treturn {\\n\\t\\t\\text: '7z',\\n\\t\\t\\tmime: 'application/x-7z-compressed'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x78, 0x01])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'dmg',\\n\\t\\t\\tmime: 'application/x-apple-diskimage'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x33, 0x67, 0x70, 0x35]) || // 3gp5\\n\\t\\t(\\n\\t\\t\\tcheck([0x0, 0x0, 0x0]) && check([0x66, 0x74, 0x79, 0x70], {offset: 4}) &&\\n\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\tcheck([0x6D, 0x70, 0x34, 0x31], {offset: 8}) || // MP41\\n\\t\\t\\t\\t\\tcheck([0x6D, 0x70, 0x34, 0x32], {offset: 8}) || // MP42\\n\\t\\t\\t\\t\\tcheck([0x69, 0x73, 0x6F, 0x6D], {offset: 8}) || // ISOM\\n\\t\\t\\t\\t\\tcheck([0x69, 0x73, 0x6F, 0x32], {offset: 8}) || // ISO2\\n\\t\\t\\t\\t\\tcheck([0x6D, 0x6D, 0x70, 0x34], {offset: 8}) || // MMP4\\n\\t\\t\\t\\t\\tcheck([0x4D, 0x34, 0x56], {offset: 8}) || // M4V\\n\\t\\t\\t\\t\\tcheck([0x64, 0x61, 0x73, 0x68], {offset: 8}) // DASH\\n\\t\\t\\t\\t)\\n\\t\\t)) {\\n\\t\\treturn {\\n\\t\\t\\text: 'mp4',\\n\\t\\t\\tmime: 'video/mp4'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x4D, 0x54, 0x68, 0x64])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'mid',\\n\\t\\t\\tmime: 'audio/midi'\\n\\t\\t};\\n\\t}\\n\\n\\t// https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\\n\\tif (check([0x1A, 0x45, 0xDF, 0xA3])) {\\n\\t\\tconst sliced = buf.subarray(4, 4 + 4096);\\n\\t\\tconst idPos = sliced.findIndex((el, i, arr) => arr[i] === 0x42 && arr[i + 1] === 0x82);\\n\\n\\t\\tif (idPos !== -1) {\\n\\t\\t\\tconst docTypePos = idPos + 3;\\n\\t\\t\\tconst findDocType = type => Array.from(type).every((c, i) => sliced[docTypePos + i] === c.charCodeAt(0));\\n\\n\\t\\t\\tif (findDocType('matroska')) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\text: 'mkv',\\n\\t\\t\\t\\t\\tmime: 'video/x-matroska'\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (findDocType('webm')) {\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\text: 'webm',\\n\\t\\t\\t\\t\\tmime: 'video/webm'\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif (check([0x0, 0x0, 0x0, 0x14, 0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20]) ||\\n\\t\\tcheck([0x66, 0x72, 0x65, 0x65], {offset: 4}) ||\\n\\t\\tcheck([0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20], {offset: 4}) ||\\n\\t\\tcheck([0x6D, 0x64, 0x61, 0x74], {offset: 4}) || // MJPEG\\n\\t\\tcheck([0x77, 0x69, 0x64, 0x65], {offset: 4})) {\\n\\t\\treturn {\\n\\t\\t\\text: 'mov',\\n\\t\\t\\tmime: 'video/quicktime'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x52, 0x49, 0x46, 0x46]) &&\\n\\t\\tcheck([0x41, 0x56, 0x49], {offset: 8})\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'avi',\\n\\t\\t\\tmime: 'video/x-msvideo'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'wmv',\\n\\t\\t\\tmime: 'video/x-ms-wmv'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x0, 0x0, 0x1, 0xBA])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'mpg',\\n\\t\\t\\tmime: 'video/mpeg'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x0, 0x0, 0x0, 0x1C, 0x66, 0x74, 0x79, 0x70, 0x33, 0x67, 0x70, 0x34])) {\\n\\t\\treturn {\\n\\t\\t\\text: '3gp',\\n\\t\\t\\tmime: 'video/3gpp'\\n\\t\\t};\\n\\t}\\n\\n\\t// Check for MP3 header at different starting offsets\\n\\tfor (let start = 0; start < 2 && start < (buf.length - 16); start++) {\\n\\t\\tif (\\n\\t\\t\\tcheck([0x49, 0x44, 0x33], {offset: start}) || // ID3 header\\n\\t\\t\\tcheck([0xFF, 0xE2], {offset: start, mask: [0xFF, 0xE2]}) // MPEG 1 or 2 Layer 3 header\\n\\t\\t) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'mp3',\\n\\t\\t\\t\\tmime: 'audio/mpeg'\\n\\t\\t\\t};\\n\\t\\t}\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x66, 0x74, 0x79, 0x70, 0x4D, 0x34, 0x41], {offset: 4}) ||\\n\\t\\tcheck([0x4D, 0x34, 0x41, 0x20])\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'm4a',\\n\\t\\t\\tmime: 'audio/m4a'\\n\\t\\t};\\n\\t}\\n\\n\\t// Needs to be before `ogg` check\\n\\tif (check([0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64], {offset: 28})) {\\n\\t\\treturn {\\n\\t\\t\\text: 'opus',\\n\\t\\t\\tmime: 'audio/opus'\\n\\t\\t};\\n\\t}\\n\\n\\t// If 'OggS' in first  bytes, then OGG container\\n\\tif (check([0x4F, 0x67, 0x67, 0x53])) {\\n\\t\\t// This is a OGG container\\n\\n\\t\\t// If ' theora' in header.\\n\\t\\tif (check([0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61], {offset: 28})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'ogv',\\n\\t\\t\\t\\tmime: 'video/ogg'\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\t// If '\\\\x01video' in header.\\n\\t\\tif (check([0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00], {offset: 28})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'ogm',\\n\\t\\t\\t\\tmime: 'video/ogg'\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\\n\\t\\tif (check([0x7F, 0x46, 0x4C, 0x41, 0x43], {offset: 28})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'oga',\\n\\t\\t\\t\\tmime: 'audio/ogg'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\\n\\t\\tif (check([0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20], {offset: 28})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'spx',\\n\\t\\t\\t\\tmime: 'audio/ogg'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// If '\\\\x01vorbis' in header\\n\\t\\tif (check([0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73], {offset: 28})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'ogg',\\n\\t\\t\\t\\tmime: 'audio/ogg'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\\n\\t\\treturn {\\n\\t\\t\\text: 'ogx',\\n\\t\\t\\tmime: 'application/ogg'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x66, 0x4C, 0x61, 0x43])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'flac',\\n\\t\\t\\tmime: 'audio/x-flac'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x52, 0x49, 0x46, 0x46]) &&\\n\\t\\tcheck([0x57, 0x41, 0x56, 0x45], {offset: 8})\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'wav',\\n\\t\\t\\tmime: 'audio/x-wav'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x23, 0x21, 0x41, 0x4D, 0x52, 0x0A])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'amr',\\n\\t\\t\\tmime: 'audio/amr'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x25, 0x50, 0x44, 0x46])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'pdf',\\n\\t\\t\\tmime: 'application/pdf'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x4D, 0x5A])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'exe',\\n\\t\\t\\tmime: 'application/x-msdownload'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\t(buf[0] === 0x43 || buf[0] === 0x46) &&\\n\\t\\tcheck([0x57, 0x53], {offset: 1})\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'swf',\\n\\t\\t\\tmime: 'application/x-shockwave-flash'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x7B, 0x5C, 0x72, 0x74, 0x66])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'rtf',\\n\\t\\t\\tmime: 'application/rtf'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x00, 0x61, 0x73, 0x6D])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'wasm',\\n\\t\\t\\tmime: 'application/wasm'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x77, 0x4F, 0x46, 0x46]) &&\\n\\t\\t(\\n\\t\\t\\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\\n\\t\\t\\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\\n\\t\\t)\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'woff',\\n\\t\\t\\tmime: 'font/woff'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x77, 0x4F, 0x46, 0x32]) &&\\n\\t\\t(\\n\\t\\t\\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\\n\\t\\t\\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\\n\\t\\t)\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'woff2',\\n\\t\\t\\tmime: 'font/woff2'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x4C, 0x50], {offset: 34}) &&\\n\\t\\t(\\n\\t\\t\\tcheck([0x00, 0x00, 0x01], {offset: 8}) ||\\n\\t\\t\\tcheck([0x01, 0x00, 0x02], {offset: 8}) ||\\n\\t\\t\\tcheck([0x02, 0x00, 0x02], {offset: 8})\\n\\t\\t)\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'eot',\\n\\t\\t\\tmime: 'application/octet-stream'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'ttf',\\n\\t\\t\\tmime: 'font/ttf'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'otf',\\n\\t\\t\\tmime: 'font/otf'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x00, 0x00, 0x01, 0x00])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'ico',\\n\\t\\t\\tmime: 'image/x-icon'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x46, 0x4C, 0x56, 0x01])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'flv',\\n\\t\\t\\tmime: 'video/x-flv'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x25, 0x21])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'ps',\\n\\t\\t\\tmime: 'application/postscript'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'xz',\\n\\t\\t\\tmime: 'application/x-xz'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x53, 0x51, 0x4C, 0x69])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'sqlite',\\n\\t\\t\\tmime: 'application/x-sqlite3'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x4E, 0x45, 0x53, 0x1A])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'nes',\\n\\t\\t\\tmime: 'application/x-nintendo-nes-rom'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x43, 0x72, 0x32, 0x34])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'crx',\\n\\t\\t\\tmime: 'application/x-google-chrome-extension'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x4D, 0x53, 0x43, 0x46]) ||\\n\\t\\tcheck([0x49, 0x53, 0x63, 0x28])\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'cab',\\n\\t\\t\\tmime: 'application/vnd.ms-cab-compressed'\\n\\t\\t};\\n\\t}\\n\\n\\t// Needs to be before `ar` check\\n\\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x64, 0x65, 0x62, 0x69, 0x61, 0x6E, 0x2D, 0x62, 0x69, 0x6E, 0x61, 0x72, 0x79])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'deb',\\n\\t\\t\\tmime: 'application/x-deb'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'ar',\\n\\t\\t\\tmime: 'application/x-unix-archive'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0xED, 0xAB, 0xEE, 0xDB])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'rpm',\\n\\t\\t\\tmime: 'application/x-rpm'\\n\\t\\t};\\n\\t}\\n\\n\\tif (\\n\\t\\tcheck([0x1F, 0xA0]) ||\\n\\t\\tcheck([0x1F, 0x9D])\\n\\t) {\\n\\t\\treturn {\\n\\t\\t\\text: 'Z',\\n\\t\\t\\tmime: 'application/x-compress'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x4C, 0x5A, 0x49, 0x50])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'lz',\\n\\t\\t\\tmime: 'application/x-lzip'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'msi',\\n\\t\\t\\tmime: 'application/x-msi'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'mxf',\\n\\t\\t\\tmime: 'application/mxf'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x47], {offset: 4}) && (check([0x47], {offset: 192}) || check([0x47], {offset: 196}))) {\\n\\t\\treturn {\\n\\t\\t\\text: 'mts',\\n\\t\\t\\tmime: 'video/mp2t'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x42, 0x4C, 0x45, 0x4E, 0x44, 0x45, 0x52])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'blend',\\n\\t\\t\\tmime: 'application/x-blender'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x42, 0x50, 0x47, 0xFB])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'bpg',\\n\\t\\t\\tmime: 'image/bpg'\\n\\t\\t};\\n\\t}\\n\\n\\tif (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\\n\\t\\t// JPEG-2000 family\\n\\n\\t\\tif (check([0x6A, 0x70, 0x32, 0x20], {offset: 20})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'jp2',\\n\\t\\t\\t\\tmime: 'image/jp2'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif (check([0x6A, 0x70, 0x78, 0x20], {offset: 20})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'jpx',\\n\\t\\t\\t\\tmime: 'image/jpx'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif (check([0x6A, 0x70, 0x6D, 0x20], {offset: 20})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'jpm',\\n\\t\\t\\t\\tmime: 'image/jpm'\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif (check([0x6D, 0x6A, 0x70, 0x32], {offset: 20})) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\text: 'mj2',\\n\\t\\t\\t\\tmime: 'image/mj2'\\n\\t\\t\\t};\\n\\t\\t}\\n\\t}\\n\\n\\tif (check([0x46, 0x4F, 0x52, 0x4D, 0x00])) {\\n\\t\\treturn {\\n\\t\\t\\text: 'aif',\\n\\t\\t\\tmime: 'audio/aiff'\\n\\t\\t};\\n\\t}\\n\\n\\treturn null;\\n};\\n\",\"module.exports = require(\\\"util\\\");\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n'use strict';\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = Object.setPrototypeOf ||\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nvar isWindows;\\nif (typeof process === 'object') {\\n    isWindows = process.platform === 'win32';\\n}\\nelse if (typeof navigator === 'object') {\\n    var userAgent = navigator.userAgent;\\n    isWindows = userAgent.indexOf('Windows') >= 0;\\n}\\n//#endregion\\nvar _schemePattern = /^\\\\w[\\\\w\\\\d+.-]*$/;\\nvar _singleSlashStart = /^\\\\//;\\nvar _doubleSlashStart = /^\\\\/\\\\//;\\nvar _throwOnMissingSchema = true;\\n/**\\n * @internal\\n */\\nexport function setUriThrowOnMissingScheme(value) {\\n    var old = _throwOnMissingSchema;\\n    _throwOnMissingSchema = value;\\n    return old;\\n}\\nfunction _validateUri(ret, _strict) {\\n    // scheme, must be set\\n    if (!ret.scheme) {\\n        if (_strict || _throwOnMissingSchema) {\\n            throw new Error(\\\"[UriError]: Scheme is missing: {scheme: \\\\\\\"\\\\\\\", authority: \\\\\\\"\\\" + ret.authority + \\\"\\\\\\\", path: \\\\\\\"\\\" + ret.path + \\\"\\\\\\\", query: \\\\\\\"\\\" + ret.query + \\\"\\\\\\\", fragment: \\\\\\\"\\\" + ret.fragment + \\\"\\\\\\\"}\\\");\\n            // } else {\\n            // \\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"${ret.authority}\\\", path: \\\"${ret.path}\\\", query: \\\"${ret.query}\\\", fragment: \\\"${ret.fragment}\\\"}`);\\n        }\\n    }\\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\\n    // ALPHA *( ALPHA / DIGIT / \\\"+\\\" / \\\"-\\\" / \\\".\\\" )\\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\\n        throw new Error('[UriError]: Scheme contains illegal characters.');\\n    }\\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\\n    // If a URI contains an authority component, then the path component\\n    // must either be empty or begin with a slash (\\\"/\\\") character.  If a URI\\n    // does not contain an authority component, then the path cannot begin\\n    // with two slash characters (\\\"//\\\").\\n    if (ret.path) {\\n        if (ret.authority) {\\n            if (!_singleSlashStart.test(ret.path)) {\\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\\\"/\\\") character');\\n            }\\n        }\\n        else {\\n            if (_doubleSlashStart.test(ret.path)) {\\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\\\"//\\\")');\\n            }\\n        }\\n    }\\n}\\n// for a while we allowed uris *without* schemes and this is the migration\\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\\n// back to the file-scheme. that should cause the least carnage and still be a\\n// clear warning\\nfunction _schemeFix(scheme, _strict) {\\n    if (_strict || _throwOnMissingSchema) {\\n        return scheme || _empty;\\n    }\\n    if (!scheme) {\\n        // console.trace('BAD uri lacks scheme, falling back to file-scheme.');\\n        scheme = 'file';\\n    }\\n    return scheme;\\n}\\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\\nfunction _referenceResolution(scheme, path) {\\n    // the slash-character is our 'default base' as we don't\\n    // support constructing URIs relative to other URIs. This\\n    // also means that we alter and potentially break paths.\\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\\n    switch (scheme) {\\n        case 'https':\\n        case 'http':\\n        case 'file':\\n            if (!path) {\\n                path = _slash;\\n            }\\n            else if (path[0] !== _slash) {\\n                path = _slash + path;\\n            }\\n            break;\\n    }\\n    return path;\\n}\\nvar _empty = '';\\nvar _slash = '/';\\nvar _regexp = /^(([^:/?#]+?):)?(\\\\/\\\\/([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?/;\\n/**\\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\\n * This class is a simple parser which creates the basic component parts\\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\\n * and encoding.\\n *\\n *       foo://example.com:8042/over/there?name=ferret#nose\\n *       \\\\_/   \\\\______________/\\\\_________/ \\\\_________/ \\\\__/\\n *        |           |            |            |        |\\n *     scheme     authority       path        query   fragment\\n *        |   _____________________|__\\n *       / \\\\ /                        \\\\\\n *       urn:example:animal:ferret:nose\\n */\\nvar URI = (function () {\\n    /**\\n     * @internal\\n     */\\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\\n        if (_strict === void 0) { _strict = false; }\\n        if (typeof schemeOrData === 'object') {\\n            this.scheme = schemeOrData.scheme || _empty;\\n            this.authority = schemeOrData.authority || _empty;\\n            this.path = schemeOrData.path || _empty;\\n            this.query = schemeOrData.query || _empty;\\n            this.fragment = schemeOrData.fragment || _empty;\\n            // no validation because it's this URI\\n            // that creates uri components.\\n            // _validateUri(this);\\n        }\\n        else {\\n            this.scheme = _schemeFix(schemeOrData, _strict);\\n            this.authority = authority || _empty;\\n            this.path = _referenceResolution(this.scheme, path || _empty);\\n            this.query = query || _empty;\\n            this.fragment = fragment || _empty;\\n            _validateUri(this, _strict);\\n        }\\n    }\\n    URI.isUri = function (thing) {\\n        if (thing instanceof URI) {\\n            return true;\\n        }\\n        if (!thing) {\\n            return false;\\n        }\\n        return typeof thing.authority === 'string'\\n            && typeof thing.fragment === 'string'\\n            && typeof thing.path === 'string'\\n            && typeof thing.query === 'string'\\n            && typeof thing.scheme === 'string'\\n            && typeof thing.fsPath === 'function'\\n            && typeof thing.with === 'function'\\n            && typeof thing.toString === 'function';\\n    };\\n    Object.defineProperty(URI.prototype, \\\"fsPath\\\", {\\n        // ---- filesystem path -----------------------\\n        /**\\n         * Returns a string representing the corresponding file system path of this URI.\\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\\n         * platform specific path separator.\\n         *\\n         * * Will *not* validate the path for invalid characters and semantics.\\n         * * Will *not* look at the scheme of this URI.\\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\\n         *\\n         *\\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\\n         *\\n         * ```ts\\n            const u = URI.parse('file://server/c$/folder/file.txt')\\n            u.authority === 'server'\\n            u.path === '/shares/c$/file.txt'\\n            u.fsPath === '\\\\\\\\server\\\\c$\\\\folder\\\\file.txt'\\n        ```\\n         *\\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\\n         * with URIs that represent files on disk (`file` scheme).\\n         */\\n        get: function () {\\n            // if (this.scheme !== 'file') {\\n            // \\tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\\n            // }\\n            return _makeFsPath(this);\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    // ---- modify to new -------------------------\\n    URI.prototype.with = function (change) {\\n        if (!change) {\\n            return this;\\n        }\\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\\n        if (scheme === undefined) {\\n            scheme = this.scheme;\\n        }\\n        else if (scheme === null) {\\n            scheme = _empty;\\n        }\\n        if (authority === undefined) {\\n            authority = this.authority;\\n        }\\n        else if (authority === null) {\\n            authority = _empty;\\n        }\\n        if (path === undefined) {\\n            path = this.path;\\n        }\\n        else if (path === null) {\\n            path = _empty;\\n        }\\n        if (query === undefined) {\\n            query = this.query;\\n        }\\n        else if (query === null) {\\n            query = _empty;\\n        }\\n        if (fragment === undefined) {\\n            fragment = this.fragment;\\n        }\\n        else if (fragment === null) {\\n            fragment = _empty;\\n        }\\n        if (scheme === this.scheme\\n            && authority === this.authority\\n            && path === this.path\\n            && query === this.query\\n            && fragment === this.fragment) {\\n            return this;\\n        }\\n        return new _URI(scheme, authority, path, query, fragment);\\n    };\\n    // ---- parse & validate ------------------------\\n    /**\\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\\n     * `file:///usr/home`, or `scheme:with/path`.\\n     *\\n     * @param value A string which represents an URI (see `URI#toString`).\\n     */\\n    URI.parse = function (value, _strict) {\\n        if (_strict === void 0) { _strict = false; }\\n        var match = _regexp.exec(value);\\n        if (!match) {\\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\\n        }\\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\\n    };\\n    /**\\n     * Creates a new URI from a file system path, e.g. `c:\\\\my\\\\files`,\\n     * `/usr/home`, or `\\\\\\\\server\\\\share\\\\some\\\\path`.\\n     *\\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\\n     * `URI.parse('file://' + path)` because the path might contain characters that are\\n     * interpreted (# and ?). See the following sample:\\n     * ```ts\\n    const good = URI.file('/coding/c#/project1');\\n    good.scheme === 'file';\\n    good.path === '/coding/c#/project1';\\n    good.fragment === '';\\n    const bad = URI.parse('file://' + '/coding/c#/project1');\\n    bad.scheme === 'file';\\n    bad.path === '/coding/c'; // path is now broken\\n    bad.fragment === '/project1';\\n    ```\\n     *\\n     * @param path A file system path (see `URI#fsPath`)\\n     */\\n    URI.file = function (path) {\\n        var authority = _empty;\\n        // normalize to fwd-slashes on windows,\\n        // on other systems bwd-slashes are valid\\n        // filename character, eg /f\\\\oo/ba\\\\r.txt\\n        if (isWindows) {\\n            path = path.replace(/\\\\\\\\/g, _slash);\\n        }\\n        // check for authority as used in UNC shares\\n        // or use the path as given\\n        if (path[0] === _slash && path[1] === _slash) {\\n            var idx = path.indexOf(_slash, 2);\\n            if (idx === -1) {\\n                authority = path.substring(2);\\n                path = _slash;\\n            }\\n            else {\\n                authority = path.substring(2, idx);\\n                path = path.substring(idx) || _slash;\\n            }\\n        }\\n        return new _URI('file', authority, path, _empty, _empty);\\n    };\\n    URI.from = function (components) {\\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\\n    };\\n    // ---- printing/externalize ---------------------------\\n    /**\\n     * Creates a string representation for this URI. It's guaranteed that calling\\n     * `URI.parse` with the result of this function creates an URI which is equal\\n     * to this URI.\\n     *\\n     * * The result shall *not* be used for display purposes but for externalization or transport.\\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\\n     * ignore the scheme-specific encoding rules.\\n     *\\n     * @param skipEncoding Do not encode the result, default is `false`\\n     */\\n    URI.prototype.toString = function (skipEncoding) {\\n        if (skipEncoding === void 0) { skipEncoding = false; }\\n        return _asFormatted(this, skipEncoding);\\n    };\\n    URI.prototype.toJSON = function () {\\n        return this;\\n    };\\n    URI.revive = function (data) {\\n        if (!data) {\\n            return data;\\n        }\\n        else if (data instanceof URI) {\\n            return data;\\n        }\\n        else {\\n            var result = new _URI(data);\\n            result._formatted = data.external;\\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\\n            return result;\\n        }\\n    };\\n    return URI;\\n}());\\nexport { URI };\\nvar _pathSepMarker = isWindows ? 1 : undefined;\\n// tslint:disable-next-line:class-name\\nvar _URI = (function (_super) {\\n    __extends(_URI, _super);\\n    function _URI() {\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\n        _this._formatted = null;\\n        _this._fsPath = null;\\n        return _this;\\n    }\\n    Object.defineProperty(_URI.prototype, \\\"fsPath\\\", {\\n        get: function () {\\n            if (!this._fsPath) {\\n                this._fsPath = _makeFsPath(this);\\n            }\\n            return this._fsPath;\\n        },\\n        enumerable: true,\\n        configurable: true\\n    });\\n    _URI.prototype.toString = function (skipEncoding) {\\n        if (skipEncoding === void 0) { skipEncoding = false; }\\n        if (!skipEncoding) {\\n            if (!this._formatted) {\\n                this._formatted = _asFormatted(this, false);\\n            }\\n            return this._formatted;\\n        }\\n        else {\\n            // we don't cache that\\n            return _asFormatted(this, true);\\n        }\\n    };\\n    _URI.prototype.toJSON = function () {\\n        var res = {\\n            $mid: 1\\n        };\\n        // cached state\\n        if (this._fsPath) {\\n            res.fsPath = this._fsPath;\\n            res._sep = _pathSepMarker;\\n        }\\n        if (this._formatted) {\\n            res.external = this._formatted;\\n        }\\n        // uri components\\n        if (this.path) {\\n            res.path = this.path;\\n        }\\n        if (this.scheme) {\\n            res.scheme = this.scheme;\\n        }\\n        if (this.authority) {\\n            res.authority = this.authority;\\n        }\\n        if (this.query) {\\n            res.query = this.query;\\n        }\\n        if (this.fragment) {\\n            res.fragment = this.fragment;\\n        }\\n        return res;\\n    };\\n    return _URI;\\n}(URI));\\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\\nvar encodeTable = (_a = {},\\n    _a[58 /* Colon */] = '%3A',\\n    _a[47 /* Slash */] = '%2F',\\n    _a[63 /* QuestionMark */] = '%3F',\\n    _a[35 /* Hash */] = '%23',\\n    _a[91 /* OpenSquareBracket */] = '%5B',\\n    _a[93 /* CloseSquareBracket */] = '%5D',\\n    _a[64 /* AtSign */] = '%40',\\n    _a[33 /* ExclamationMark */] = '%21',\\n    _a[36 /* DollarSign */] = '%24',\\n    _a[38 /* Ampersand */] = '%26',\\n    _a[39 /* SingleQuote */] = '%27',\\n    _a[40 /* OpenParen */] = '%28',\\n    _a[41 /* CloseParen */] = '%29',\\n    _a[42 /* Asterisk */] = '%2A',\\n    _a[43 /* Plus */] = '%2B',\\n    _a[44 /* Comma */] = '%2C',\\n    _a[59 /* Semicolon */] = '%3B',\\n    _a[61 /* Equals */] = '%3D',\\n    _a[32 /* Space */] = '%20',\\n    _a);\\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\\n    var res = undefined;\\n    var nativeEncodePos = -1;\\n    for (var pos = 0; pos < uriComponent.length; pos++) {\\n        var code = uriComponent.charCodeAt(pos);\\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\\n            || code === 45 /* Dash */\\n            || code === 46 /* Period */\\n            || code === 95 /* Underline */\\n            || code === 126 /* Tilde */\\n            || (allowSlash && code === 47 /* Slash */)) {\\n            // check if we are delaying native encode\\n            if (nativeEncodePos !== -1) {\\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\\n                nativeEncodePos = -1;\\n            }\\n            // check if we write into a new string (by default we try to return the param)\\n            if (res !== undefined) {\\n                res += uriComponent.charAt(pos);\\n            }\\n        }\\n        else {\\n            // encoding needed, we need to allocate a new string\\n            if (res === undefined) {\\n                res = uriComponent.substr(0, pos);\\n            }\\n            // check with default table first\\n            var escaped = encodeTable[code];\\n            if (escaped !== undefined) {\\n                // check if we are delaying native encode\\n                if (nativeEncodePos !== -1) {\\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\\n                    nativeEncodePos = -1;\\n                }\\n                // append escaped variant to result\\n                res += escaped;\\n            }\\n            else if (nativeEncodePos === -1) {\\n                // use native encode only when needed\\n                nativeEncodePos = pos;\\n            }\\n        }\\n    }\\n    if (nativeEncodePos !== -1) {\\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\\n    }\\n    return res !== undefined ? res : uriComponent;\\n}\\nfunction encodeURIComponentMinimal(path) {\\n    var res = undefined;\\n    for (var pos = 0; pos < path.length; pos++) {\\n        var code = path.charCodeAt(pos);\\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\\n            if (res === undefined) {\\n                res = path.substr(0, pos);\\n            }\\n            res += encodeTable[code];\\n        }\\n        else {\\n            if (res !== undefined) {\\n                res += path[pos];\\n            }\\n        }\\n    }\\n    return res !== undefined ? res : path;\\n}\\n/**\\n * Compute `fsPath` for the given uri\\n */\\nfunction _makeFsPath(uri) {\\n    var value;\\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\\n        // unc path: file://shares/c$/far/boo\\n        value = \\\"//\\\" + uri.authority + uri.path;\\n    }\\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\\n        // windows drive letter: file:///c:/far/boo\\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\\n    }\\n    else {\\n        // other path\\n        value = uri.path;\\n    }\\n    if (isWindows) {\\n        value = value.replace(/\\\\//g, '\\\\\\\\');\\n    }\\n    return value;\\n}\\n/**\\n * Create the external version of a uri\\n */\\nfunction _asFormatted(uri, skipEncoding) {\\n    var encoder = !skipEncoding\\n        ? encodeURIComponentFast\\n        : encodeURIComponentMinimal;\\n    var res = '';\\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\\n    if (scheme) {\\n        res += scheme;\\n        res += ':';\\n    }\\n    if (authority || scheme === 'file') {\\n        res += _slash;\\n        res += _slash;\\n    }\\n    if (authority) {\\n        var idx = authority.indexOf('@');\\n        if (idx !== -1) {\\n            // <user>@<auth>\\n            var userinfo = authority.substr(0, idx);\\n            authority = authority.substr(idx + 1);\\n            idx = userinfo.indexOf(':');\\n            if (idx === -1) {\\n                res += encoder(userinfo, false);\\n            }\\n            else {\\n                // <user>:<pass>@<auth>\\n                res += encoder(userinfo.substr(0, idx), false);\\n                res += ':';\\n                res += encoder(userinfo.substr(idx + 1), false);\\n            }\\n            res += '@';\\n        }\\n        authority = authority.toLowerCase();\\n        idx = authority.indexOf(':');\\n        if (idx === -1) {\\n            res += encoder(authority, false);\\n        }\\n        else {\\n            // <auth>:<port>\\n            res += encoder(authority.substr(0, idx), false);\\n            res += authority.substr(idx);\\n        }\\n    }\\n    if (path) {\\n        // lower-case windows drive letters in /C:/fff or C:/fff\\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\\n            var code = path.charCodeAt(1);\\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\\n                path = \\\"/\\\" + String.fromCharCode(code + 32) + \\\":\\\" + path.substr(3); // \\\"/c:\\\".length === 3\\n            }\\n        }\\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\\n            var code = path.charCodeAt(0);\\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\\n                path = String.fromCharCode(code + 32) + \\\":\\\" + path.substr(2); // \\\"/c:\\\".length === 3\\n            }\\n        }\\n        // encode the rest of the path\\n        res += encoder(path, true);\\n    }\\n    if (query) {\\n        res += '?';\\n        res += encoder(query, false);\\n    }\\n    if (fragment) {\\n        res += '#';\\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\\n    }\\n    return res;\\n}\\nvar _a;\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport * as jschardet from 'jschardet';\\n\\nfunction detectEncodingByBOM(buffer: Buffer): string | null {\\n\\tif (!buffer || buffer.length < 2) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tconst b0 = buffer.readUInt8(0);\\n\\tconst b1 = buffer.readUInt8(1);\\n\\n\\t// UTF-16 BE\\n\\tif (b0 === 0xFE && b1 === 0xFF) {\\n\\t\\treturn 'utf16be';\\n\\t}\\n\\n\\t// UTF-16 LE\\n\\tif (b0 === 0xFF && b1 === 0xFE) {\\n\\t\\treturn 'utf16le';\\n\\t}\\n\\n\\tif (buffer.length < 3) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tconst b2 = buffer.readUInt8(2);\\n\\n\\t// UTF-8\\n\\tif (b0 === 0xEF && b1 === 0xBB && b2 === 0xBF) {\\n\\t\\treturn 'utf8';\\n\\t}\\n\\n\\treturn null;\\n}\\n\\nconst IGNORE_ENCODINGS = [\\n\\t'ascii',\\n\\t'utf-8',\\n\\t'utf-16',\\n\\t'utf-32'\\n];\\n\\nconst JSCHARDET_TO_ICONV_ENCODINGS: { [name: string]: string } = {\\n\\t'ibm866': 'cp866',\\n\\t'big5': 'cp950'\\n};\\n\\nexport function detectEncoding(buffer: Buffer): string | null {\\n\\tlet result = detectEncodingByBOM(buffer);\\n\\n\\tif (result) {\\n\\t\\treturn result;\\n\\t}\\n\\n\\tconst detected = jschardet.detect(buffer);\\n\\n\\tif (!detected || !detected.encoding) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tconst encoding = detected.encoding;\\n\\n\\t// Ignore encodings that cannot guess correctly\\n\\t// (http://chardet.readthedocs.io/en/latest/supported-encodings.html)\\n\\tif (0 <= IGNORE_ENCODINGS.indexOf(encoding.toLowerCase())) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tconst normalizedEncodingName = encoding.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\\n\\tconst mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\\n\\n\\treturn mapped || normalizedEncodingName;\\n}\\n\",\"module.exports = require('./src')\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar UniversalDetector = require('./universaldetector');\\nvar setLogger = require('./logger').setLogger;\\n\\nexports.detect = function(buffer, options) {\\n    var u = new UniversalDetector(options);\\n    u.reset();\\n    if( typeof Buffer == 'function' && buffer instanceof Buffer ) {\\n        u.feed(buffer.toString('binary'));\\n    } else {\\n        u.feed(buffer);\\n    }\\n    u.close();\\n    return u.result;\\n}\\nexports.UniversalDetector = UniversalDetector;\\nexports.enableDebug = function() {\\n    setLogger(console.log.bind(console));\\n}\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n/**\\n * This is a port from the python port, version \\\"2.0.1\\\"\\n */\\n\\nvar constants = require('./constants');\\nvar MBCSGroupProber = require('./mbcsgroupprober');\\nvar SBCSGroupProber = require('./sbcsgroupprober');\\nvar Latin1Prober = require('./latin1prober');\\nvar EscCharSetProber = require('./escprober')\\nvar logger = require('./logger');\\n\\nfunction UniversalDetector(options) {\\n    if (!options) options = {};\\n    if (!options.minimumThreshold)  options.minimumThreshold = 0.20;\\n\\n    var _state = {\\n        pureAscii   : 0,\\n        escAscii    : 1,\\n        highbyte    : 2\\n    };\\n    var self = this;\\n\\n    function init() {\\n        self._highBitDetector = /[\\\\x80-\\\\xFF]/;\\n        self._escDetector = /(\\\\x1B|~\\\\{)/;\\n        self._mEscCharsetProber = null;\\n        self._mCharsetProbers = [];\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        this.result = {\\\"encoding\\\": null, \\\"confidence\\\": 0.0};\\n        this.done = false;\\n        this._mStart = true;\\n        this._mGotData = false;\\n        this._mInputState = _state.pureAscii;\\n        this._mLastChar = \\\"\\\";\\n        this._mBOM = \\\"\\\";\\n        if( this._mEscCharsetProber ) {\\n            this._mEscCharsetProber.reset();\\n        }\\n        for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\\n            prober.reset();\\n        }\\n    }\\n\\n    this.feed = function(aBuf) {\\n        if( this.done ) return;\\n\\n        var aLen = aBuf.length;\\n        if( !aLen ) return;\\n\\n        if( !this._mGotData ) {\\n            this._mBOM += aBuf;\\n            // If the data starts with BOM, we know it is UTF\\n            if( this._mBOM.slice(0,3) == \\\"\\\\xEF\\\\xBB\\\\xBF\\\" ) {\\n                // EF BB BF  UTF-8 with BOM\\n                this.result = {\\\"encoding\\\": \\\"UTF-8\\\", \\\"confidence\\\": 1.0};\\n            } else if( this._mBOM.slice(0,4) == \\\"\\\\xFF\\\\xFE\\\\x00\\\\x00\\\" ) {\\n                // FF FE 00 00  UTF-32, little-endian BOM\\n                this.result = {\\\"encoding\\\": \\\"UTF-32LE\\\", \\\"confidence\\\": 1.0};\\n            } else if( this._mBOM.slice(0,4) == \\\"\\\\x00\\\\x00\\\\xFE\\\\xFF\\\" ) {\\n                // 00 00 FE FF  UTF-32, big-endian BOM\\n                this.result = {\\\"encoding\\\": \\\"UTF-32BE\\\", \\\"confidence\\\": 1.0};\\n            } else if( this._mBOM.slice(0,4) == \\\"\\\\xFE\\\\xFF\\\\x00\\\\x00\\\" ) {\\n                // FE FF 00 00  UCS-4, unusual octet order BOM (3412)\\n                this.result = {\\\"encoding\\\": \\\"X-ISO-10646-UCS-4-3412\\\", \\\"confidence\\\": 1.0};\\n            } else if( this._mBOM.slice(0,4) == \\\"\\\\x00\\\\x00\\\\xFF\\\\xFE\\\" ) {\\n                // 00 00 FF FE  UCS-4, unusual octet order BOM (2143)\\n                this.result = {\\\"encoding\\\": \\\"X-ISO-10646-UCS-4-2143\\\", \\\"confidence\\\": 1.0};\\n            } else if( this._mBOM.slice(0,2) == \\\"\\\\xFF\\\\xFE\\\" ) {\\n                // FF FE  UTF-16, little endian BOM\\n                this.result = {\\\"encoding\\\": \\\"UTF-16LE\\\", \\\"confidence\\\": 1.0};\\n            } else if( this._mBOM.slice(0,2) == \\\"\\\\xFE\\\\xFF\\\" ) {\\n                // FE FF  UTF-16, big endian BOM\\n                this.result = {\\\"encoding\\\": \\\"UTF-16BE\\\", \\\"confidence\\\": 1.0};\\n            }\\n\\n            // If we got to 4 chars without being able to detect a BOM we\\n            // stop trying.\\n            if( this._mBOM.length > 3 ) {\\n                this._mGotData = true;\\n            }\\n        }\\n\\n        if( this.result.encoding && (this.result.confidence > 0.0) ) {\\n            this.done = true;\\n            return;\\n        }\\n\\n        if( this._mInputState == _state.pureAscii ) {\\n            if( this._highBitDetector.test(aBuf) ) {\\n                this._mInputState = _state.highbyte;\\n            } else if( this._escDetector.test(this._mLastChar + aBuf) ) {\\n                this._mInputState = _state.escAscii;\\n            }\\n        }\\n\\n        this._mLastChar = aBuf.slice(-1);\\n\\n        if( this._mInputState == _state.escAscii ) {\\n            if( !this._mEscCharsetProber ) {\\n                this._mEscCharsetProber = new EscCharSetProber();\\n            }\\n            if( this._mEscCharsetProber.feed(aBuf) == constants.foundIt ) {\\n                this.result = {\\n                    \\\"encoding\\\": this._mEscCharsetProber.getCharsetName(),\\n                    \\\"confidence\\\": this._mEscCharsetProber.getConfidence()\\n                };\\n                this.done = true;\\n            }\\n        } else if( this._mInputState == _state.highbyte ) {\\n            if( this._mCharsetProbers.length == 0 ) {\\n                this._mCharsetProbers = [\\n                    new MBCSGroupProber(),\\n                    new SBCSGroupProber(),\\n                    new Latin1Prober()\\n                ];\\n            }\\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\\n                if( prober.feed(aBuf) == constants.foundIt ) {\\n                    this.result = {\\n                        \\\"encoding\\\": prober.getCharsetName(),\\n                        \\\"confidence\\\": prober.getConfidence()\\n                    };\\n                    this.done = true;\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    this.close = function() {\\n        if( this.done ) return;\\n        if( this._mBOM.length === 0 ) {\\n            logger.log(\\\"no data received!\\\\n\\\");\\n            return;\\n        }\\n        this.done = true;\\n\\n        if( this._mInputState == _state.pureAscii ) {\\n            logger.log(\\\"pure ascii\\\")\\n            this.result = {\\\"encoding\\\": \\\"ascii\\\", \\\"confidence\\\": 1.0};\\n            return this.result;\\n        }\\n\\n        if( this._mInputState == _state.highbyte ) {\\n            var proberConfidence = null;\\n            var maxProberConfidence = 0.0;\\n            var maxProber = null;\\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\\n                if( !prober ) continue;\\n                proberConfidence = prober.getConfidence();\\n                if( proberConfidence > maxProberConfidence ) {\\n                    maxProberConfidence = proberConfidence;\\n                    maxProber = prober;\\n                }\\n                logger.log(prober.getCharsetName() + \\\" confidence \\\" + prober.getConfidence());\\n            }\\n            if( maxProber && maxProberConfidence > options.minimumThreshold ) {\\n                this.result = {\\n                    \\\"encoding\\\": maxProber.getCharsetName(),\\n                    \\\"confidence\\\": maxProber.getConfidence()\\n                };\\n                return this.result;\\n            }\\n        }\\n\\n        if( logger.enabled ) {\\n            logger.log(\\\"no probers hit minimum threshhold\\\\n\\\");\\n            for( var i = 0, prober; prober = this._mCharsetProbers[i]; i++ ) {\\n                if( !prober ) continue;\\n                logger.log(prober.getCharsetName() + \\\" confidence = \\\" +\\n                    prober.getConfidence() + \\\"\\\\n\\\");\\n            }\\n        }\\n    }\\n\\n    init();\\n}\\n\\nmodule.exports = UniversalDetector;\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CharSetGroupProber = require('./charsetgroupprober');\\nvar Big5Prober = require('./big5prober');\\nvar UTF8Prober = require('./utf8prober');\\nvar SJISProber = require('./sjisprober');\\nvar EUCJPProber = require('./eucjpprober');\\nvar GB2312Prober = require('./gb2312prober');\\nvar EUCKRProber = require('./euckrprober');\\nvar EUCTWProber = require('./euctwprober');\\n\\nfunction MBCSGroupProber() {\\n    CharSetGroupProber.apply(this);\\n    this._mProbers = [\\n        new UTF8Prober(),\\n        new SJISProber(),\\n        new EUCJPProber(),\\n        new GB2312Prober(),\\n        new EUCKRProber(),\\n        new Big5Prober(),\\n        new EUCTWProber()\\n    ];\\n    this.reset();\\n}\\nMBCSGroupProber.prototype = new CharSetGroupProber();\\n\\nmodule.exports = MBCSGroupProber\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CodingStateMachine = require('./codingstatemachine')\\nvar MultiByteCharSetProber = require('./mbcharsetprober')\\nvar Big5SMModel = require('./mbcssm/big5')\\nvar Big5DistributionAnalysis = require('./chardistribution').Big5DistributionAnalysis\\n\\nfunction Big5Prober() {\\n    MultiByteCharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = new CodingStateMachine(Big5SMModel);\\n        self._mDistributionAnalyzer = new Big5DistributionAnalysis();\\n        self.reset();\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"Big5\\\";\\n    }\\n\\n    init();\\n}\\nBig5Prober.prototype = new MultiByteCharSetProber();\\n\\nmodule.exports = Big5Prober\\n\",\"var consts = require('../constants');\\n\\nvar BIG5_cls = [\\n    1,1,1,1,1,1,1,1,  // 00 - 07    //allow 0x00 as legal value\\n    1,1,1,1,1,1,0,0,  // 08 - 0f\\n    1,1,1,1,1,1,1,1,  // 10 - 17\\n    1,1,1,0,1,1,1,1,  // 18 - 1f\\n    1,1,1,1,1,1,1,1,  // 20 - 27\\n    1,1,1,1,1,1,1,1,  // 28 - 2f\\n    1,1,1,1,1,1,1,1,  // 30 - 37\\n    1,1,1,1,1,1,1,1,  // 38 - 3f\\n    2,2,2,2,2,2,2,2,  // 40 - 47\\n    2,2,2,2,2,2,2,2,  // 48 - 4f\\n    2,2,2,2,2,2,2,2,  // 50 - 57\\n    2,2,2,2,2,2,2,2,  // 58 - 5f\\n    2,2,2,2,2,2,2,2,  // 60 - 67\\n    2,2,2,2,2,2,2,2,  // 68 - 6f\\n    2,2,2,2,2,2,2,2,  // 70 - 77\\n    2,2,2,2,2,2,2,1,  // 78 - 7f\\n    4,4,4,4,4,4,4,4,  // 80 - 87\\n    4,4,4,4,4,4,4,4,  // 88 - 8f\\n    4,4,4,4,4,4,4,4,  // 90 - 97\\n    4,4,4,4,4,4,4,4,  // 98 - 9f\\n    4,3,3,3,3,3,3,3,  // a0 - a7\\n    3,3,3,3,3,3,3,3,  // a8 - af\\n    3,3,3,3,3,3,3,3,  // b0 - b7\\n    3,3,3,3,3,3,3,3,  // b8 - bf\\n    3,3,3,3,3,3,3,3,  // c0 - c7\\n    3,3,3,3,3,3,3,3,  // c8 - cf\\n    3,3,3,3,3,3,3,3,  // d0 - d7\\n    3,3,3,3,3,3,3,3,  // d8 - df\\n    3,3,3,3,3,3,3,3,  // e0 - e7\\n    3,3,3,3,3,3,3,3,  // e8 - ef\\n    3,3,3,3,3,3,3,3,  // f0 - f7\\n    3,3,3,3,3,3,3,0   // f8 - ff\\n];\\n\\nvar BIG5_st = [\\n    consts.error,consts.start,consts.start,    3,consts.error,consts.error,consts.error,consts.error, //00-07\\n    consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error, //08-0f\\n    consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //10-17\\n];\\n\\nvar Big5CharLenTable = [0, 1, 1, 2, 0];\\n\\nmodule.exports = {\\n    \\\"classTable\\\"    : BIG5_cls,\\n    \\\"classFactor\\\"   : 5,\\n    \\\"stateTable\\\"    : BIG5_st,\\n    \\\"charLenTable\\\"  : Big5CharLenTable,\\n    \\\"name\\\"          : \\\"Big5\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// Sampling from about 20M text materials include literature and computer technology\\n//\\n// Japanese frequency table, applied to both S-JIS and EUC-JP\\n// They are sorted in order.\\n//\\n// 128  --> 0.77094\\n// 256  --> 0.85710\\n// 512  --> 0.92635\\n// 1024 --> 0.97130\\n// 2048 --> 0.99431\\n//\\n// Ideal Distribution Ratio = 0.92635 / (1-0.92635) = 12.58\\n// Random Distribution Ration = 512 / (2965+62+83+86-512) = 0.191\\n//\\n// Typical Distribution Ratio, 25% of IDR\\n\\nexports.JIS_TYPICAL_DISTRIBUTION_RATIO = 3.0;\\n\\nexports.JIS_TABLE_SIZE = 4368;\\n\\nexports.JISCharToFreqOrder = [\\n  40,   1,   6, 182, 152, 180, 295,2127, 285, 381,3295,4304,3068,4606,3165,3510, //   16\\n3511,1822,2785,4607,1193,2226,5070,4608, 171,2996,1247,  18, 179,5071, 856,1661, //   32\\n1262,5072, 619, 127,3431,3512,3230,1899,1700, 232, 228,1294,1298, 284, 283,2041, //   48\\n2042,1061,1062,  48,  49,  44,  45, 433, 434,1040,1041, 996, 787,2997,1255,4305, //   64\\n2108,4609,1684,1648,5073,5074,5075,5076,5077,5078,3687,5079,4610,5080,3927,3928, //   80\\n5081,3296,3432, 290,2285,1471,2187,5082,2580,2825,1303,2140,1739,1445,2691,3375, //   96\\n1691,3297,4306,4307,4611, 452,3376,1182,2713,3688,3069,4308,5083,5084,5085,5086, //  112\\n5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102, //  128\\n5103,5104,5105,5106,5107,5108,5109,5110,5111,5112,4097,5113,5114,5115,5116,5117, //  144\\n5118,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,5130,5131,5132,5133, //  160\\n5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149, //  176\\n5150,5151,5152,4612,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164, //  192\\n5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,1472, 598, 618, 820,1205, //  208\\n1309,1412,1858,1307,1692,5176,5177,5178,5179,5180,5181,5182,1142,1452,1234,1172, //  224\\n1875,2043,2149,1793,1382,2973, 925,2404,1067,1241, 960,1377,2935,1491, 919,1217, //  240\\n1865,2030,1406,1499,2749,4098,5183,5184,5185,5186,5187,5188,2561,4099,3117,1804, //  256\\n2049,3689,4309,3513,1663,5189,3166,3118,3298,1587,1561,3433,5190,3119,1625,2998, //  272\\n3299,4613,1766,3690,2786,4614,5191,5192,5193,5194,2161,  26,3377,   2,3929,  20, //  288\\n3691,  47,4100,  50,  17,  16,  35, 268,  27, 243,  42, 155,  24, 154,  29, 184, //  304\\n   4,  91,  14,  92,  53, 396,  33, 289,   9,  37,  64, 620,  21,  39, 321,   5, //  320\\n  12,  11,  52,  13,   3, 208, 138,   0,   7,  60, 526, 141, 151,1069, 181, 275, //  336\\n1591,  83, 132,1475, 126, 331, 829,  15,  69, 160,  59,  22, 157,  55,1079, 312, //  352\\n 109,  38,  23,  25,  10,  19,  79,5195,  61, 382,1124,   8,  30,5196,5197,5198, //  368\\n5199,5200,5201,5202,5203,5204,5205,5206,  89,  62,  74,  34,2416, 112, 139, 196, //  384\\n 271, 149,  84, 607, 131, 765,  46,  88, 153, 683,  76, 874, 101, 258,  57,  80, //  400\\n  32, 364, 121,1508, 169,1547,  68, 235, 145,2999,  41, 360,3027,  70,  63,  31, //  416\\n  43, 259, 262,1383,  99, 533, 194,  66,  93, 846, 217, 192,  56, 106,  58, 565, //  432\\n 280, 272, 311, 256, 146,  82, 308,  71, 100, 128, 214, 655, 110, 261, 104,1140, //  448\\n  54,  51,  36,  87,  67,3070, 185,2618,2936,2020,  28,1066,2390,2059,5207,5208, //  464\\n5209,5210,5211,5212,5213,5214,5215,5216,4615,5217,5218,5219,5220,5221,5222,5223, //  480\\n5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,3514,5237,5238, //  496\\n5239,5240,5241,5242,5243,5244,2297,2031,4616,4310,3692,5245,3071,5246,3598,5247, //  512\\n4617,3231,3515,5248,4101,4311,4618,3808,4312,4102,5249,4103,4104,3599,5250,5251, //  528\\n5252,5253,5254,5255,5256,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267, //  544\\n5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283, //  560\\n5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299, //  576\\n5300,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315, //  592\\n5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331, //  608\\n5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5345,5346,5347, //  624\\n5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362,5363, //  640\\n5364,5365,5366,5367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379, //  656\\n5380,5381, 363, 642,2787,2878,2788,2789,2316,3232,2317,3434,2011, 165,1942,3930, //  672\\n3931,3932,3933,5382,4619,5383,4620,5384,5385,5386,5387,5388,5389,5390,5391,5392, //  688\\n5393,5394,5395,5396,5397,5398,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408, //  704\\n5409,5410,5411,5412,5413,5414,5415,5416,5417,5418,5419,5420,5421,5422,5423,5424, //  720\\n5425,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,5439,5440, //  736\\n5441,5442,5443,5444,5445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456, //  752\\n5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472, //  768\\n5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488, //  784\\n5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504, //  800\\n5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520, //  816\\n5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536, //  832\\n5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552, //  848\\n5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568, //  864\\n5569,5570,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584, //  880\\n5585,5586,5587,5588,5589,5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600, //  896\\n5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,5615,5616, //  912\\n5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632, //  928\\n5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5647,5648, //  944\\n5649,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,5661,5662,5663,5664, //  960\\n5665,5666,5667,5668,5669,5670,5671,5672,5673,5674,5675,5676,5677,5678,5679,5680, //  976\\n5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696, //  992\\n5697,5698,5699,5700,5701,5702,5703,5704,5705,5706,5707,5708,5709,5710,5711,5712, // 1008\\n5713,5714,5715,5716,5717,5718,5719,5720,5721,5722,5723,5724,5725,5726,5727,5728, // 1024\\n5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5740,5741,5742,5743,5744, // 1040\\n5745,5746,5747,5748,5749,5750,5751,5752,5753,5754,5755,5756,5757,5758,5759,5760, // 1056\\n5761,5762,5763,5764,5765,5766,5767,5768,5769,5770,5771,5772,5773,5774,5775,5776, // 1072\\n5777,5778,5779,5780,5781,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792, // 1088\\n5793,5794,5795,5796,5797,5798,5799,5800,5801,5802,5803,5804,5805,5806,5807,5808, // 1104\\n5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824, // 1120\\n5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840, // 1136\\n5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856, // 1152\\n5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872, // 1168\\n5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888, // 1184\\n5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904, // 1200\\n5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920, // 1216\\n5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936, // 1232\\n5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952, // 1248\\n5953,5954,5955,5956,5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968, // 1264\\n5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984, // 1280\\n5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6000, // 1296\\n6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016, // 1312\\n6017,6018,6019,6020,6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032, // 1328\\n6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048, // 1344\\n6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064, // 1360\\n6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080, // 1376\\n6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096, // 1392\\n6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112, // 1408\\n6113,6114,2044,2060,4621, 997,1235, 473,1186,4622, 920,3378,6115,6116, 379,1108, // 1424\\n4313,2657,2735,3934,6117,3809, 636,3233, 573,1026,3693,3435,2974,3300,2298,4105, // 1440\\n 854,2937,2463, 393,2581,2417, 539, 752,1280,2750,2480, 140,1161, 440, 708,1569, // 1456\\n 665,2497,1746,1291,1523,3000, 164,1603, 847,1331, 537,1997, 486, 508,1693,2418, // 1472\\n1970,2227, 878,1220, 299,1030, 969, 652,2751, 624,1137,3301,2619,  65,3302,2045, // 1488\\n1761,1859,3120,1930,3694,3516, 663,1767, 852, 835,3695, 269, 767,2826,2339,1305, // 1504\\n 896,1150, 770,1616,6118, 506,1502,2075,1012,2519, 775,2520,2975,2340,2938,4314, // 1520\\n3028,2086,1224,1943,2286,6119,3072,4315,2240,1273,1987,3935,1557, 175, 597, 985, // 1536\\n3517,2419,2521,1416,3029, 585, 938,1931,1007,1052,1932,1685,6120,3379,4316,4623, // 1552\\n 804, 599,3121,1333,2128,2539,1159,1554,2032,3810, 687,2033,2904, 952, 675,1467, // 1568\\n3436,6121,2241,1096,1786,2440,1543,1924, 980,1813,2228, 781,2692,1879, 728,1918, // 1584\\n3696,4624, 548,1950,4625,1809,1088,1356,3303,2522,1944, 502, 972, 373, 513,2827, // 1600\\n 586,2377,2391,1003,1976,1631,6122,2464,1084, 648,1776,4626,2141, 324, 962,2012, // 1616\\n2177,2076,1384, 742,2178,1448,1173,1810, 222, 102, 301, 445, 125,2420, 662,2498, // 1632\\n 277, 200,1476,1165,1068, 224,2562,1378,1446, 450,1880, 659, 791, 582,4627,2939, // 1648\\n3936,1516,1274, 555,2099,3697,1020,1389,1526,3380,1762,1723,1787,2229, 412,2114, // 1664\\n1900,2392,3518, 512,2597, 427,1925,2341,3122,1653,1686,2465,2499, 697, 330, 273, // 1680\\n 380,2162, 951, 832, 780, 991,1301,3073, 965,2270,3519, 668,2523,2636,1286, 535, // 1696\\n1407, 518, 671, 957,2658,2378, 267, 611,2197,3030,6123, 248,2299, 967,1799,2356, // 1712\\n 850,1418,3437,1876,1256,1480,2828,1718,6124,6125,1755,1664,2405,6126,4628,2879, // 1728\\n2829, 499,2179, 676,4629, 557,2329,2214,2090, 325,3234, 464, 811,3001, 992,2342, // 1744\\n2481,1232,1469, 303,2242, 466,1070,2163, 603,1777,2091,4630,2752,4631,2714, 322, // 1760\\n2659,1964,1768, 481,2188,1463,2330,2857,3600,2092,3031,2421,4632,2318,2070,1849, // 1776\\n2598,4633,1302,2254,1668,1701,2422,3811,2905,3032,3123,2046,4106,1763,1694,4634, // 1792\\n1604, 943,1724,1454, 917, 868,2215,1169,2940, 552,1145,1800,1228,1823,1955, 316, // 1808\\n1080,2510, 361,1807,2830,4107,2660,3381,1346,1423,1134,4108,6127, 541,1263,1229, // 1824\\n1148,2540, 545, 465,1833,2880,3438,1901,3074,2482, 816,3937, 713,1788,2500, 122, // 1840\\n1575, 195,1451,2501,1111,6128, 859, 374,1225,2243,2483,4317, 390,1033,3439,3075, // 1856\\n2524,1687, 266, 793,1440,2599, 946, 779, 802, 507, 897,1081, 528,2189,1292, 711, // 1872\\n1866,1725,1167,1640, 753, 398,2661,1053, 246, 348,4318, 137,1024,3440,1600,2077, // 1888\\n2129, 825,4319, 698, 238, 521, 187,2300,1157,2423,1641,1605,1464,1610,1097,2541, // 1904\\n1260,1436, 759,2255,1814,2150, 705,3235, 409,2563,3304, 561,3033,2005,2564, 726, // 1920\\n1956,2343,3698,4109, 949,3812,3813,3520,1669, 653,1379,2525, 881,2198, 632,2256, // 1936\\n1027, 778,1074, 733,1957, 514,1481,2466, 554,2180, 702,3938,1606,1017,1398,6129, // 1952\\n1380,3521, 921, 993,1313, 594, 449,1489,1617,1166, 768,1426,1360, 495,1794,3601, // 1968\\n1177,3602,1170,4320,2344, 476, 425,3167,4635,3168,1424, 401,2662,1171,3382,1998, // 1984\\n1089,4110, 477,3169, 474,6130,1909, 596,2831,1842, 494, 693,1051,1028,1207,3076, // 2000\\n 606,2115, 727,2790,1473,1115, 743,3522, 630, 805,1532,4321,2021, 366,1057, 838, // 2016\\n 684,1114,2142,4322,2050,1492,1892,1808,2271,3814,2424,1971,1447,1373,3305,1090, // 2032\\n1536,3939,3523,3306,1455,2199, 336, 369,2331,1035, 584,2393, 902, 718,2600,6131, // 2048\\n2753, 463,2151,1149,1611,2467, 715,1308,3124,1268, 343,1413,3236,1517,1347,2663, // 2064\\n2093,3940,2022,1131,1553,2100,2941,1427,3441,2942,1323,2484,6132,1980, 872,2368, // 2080\\n2441,2943, 320,2369,2116,1082, 679,1933,3941,2791,3815, 625,1143,2023, 422,2200, // 2096\\n3816,6133, 730,1695, 356,2257,1626,2301,2858,2637,1627,1778, 937, 883,2906,2693, // 2112\\n3002,1769,1086, 400,1063,1325,3307,2792,4111,3077, 456,2345,1046, 747,6134,1524, // 2128\\n 884,1094,3383,1474,2164,1059, 974,1688,2181,2258,1047, 345,1665,1187, 358, 875, // 2144\\n3170, 305, 660,3524,2190,1334,1135,3171,1540,1649,2542,1527, 927, 968,2793, 885, // 2160\\n1972,1850, 482, 500,2638,1218,1109,1085,2543,1654,2034, 876,  78,2287,1482,1277, // 2176\\n 861,1675,1083,1779, 724,2754, 454, 397,1132,1612,2332, 893, 672,1237, 257,2259, // 2192\\n2370, 135,3384, 337,2244, 547, 352, 340, 709,2485,1400, 788,1138,2511, 540, 772, // 2208\\n1682,2260,2272,2544,2013,1843,1902,4636,1999,1562,2288,4637,2201,1403,1533, 407, // 2224\\n 576,3308,1254,2071, 978,3385, 170, 136,1201,3125,2664,3172,2394, 213, 912, 873, // 2240\\n3603,1713,2202, 699,3604,3699, 813,3442, 493, 531,1054, 468,2907,1483, 304, 281, // 2256\\n4112,1726,1252,2094, 339,2319,2130,2639, 756,1563,2944, 748, 571,2976,1588,2425, // 2272\\n2715,1851,1460,2426,1528,1392,1973,3237, 288,3309, 685,3386, 296, 892,2716,2216, // 2288\\n1570,2245, 722,1747,2217, 905,3238,1103,6135,1893,1441,1965, 251,1805,2371,3700, // 2304\\n2601,1919,1078,  75,2182,1509,1592,1270,2640,4638,2152,6136,3310,3817, 524, 706, // 2320\\n1075, 292,3818,1756,2602, 317,  98,3173,3605,3525,1844,2218,3819,2502, 814, 567, // 2336\\n 385,2908,1534,6137, 534,1642,3239, 797,6138,1670,1529, 953,4323, 188,1071, 538, // 2352\\n 178, 729,3240,2109,1226,1374,2000,2357,2977, 731,2468,1116,2014,2051,6139,1261, // 2368\\n1593, 803,2859,2736,3443, 556, 682, 823,1541,6140,1369,2289,1706,2794, 845, 462, // 2384\\n2603,2665,1361, 387, 162,2358,1740, 739,1770,1720,1304,1401,3241,1049, 627,1571, // 2400\\n2427,3526,1877,3942,1852,1500, 431,1910,1503, 677, 297,2795, 286,1433,1038,1198, // 2416\\n2290,1133,1596,4113,4639,2469,1510,1484,3943,6141,2442, 108, 712,4640,2372, 866, // 2432\\n3701,2755,3242,1348, 834,1945,1408,3527,2395,3243,1811, 824, 994,1179,2110,1548, // 2448\\n1453, 790,3003, 690,4324,4325,2832,2909,3820,1860,3821, 225,1748, 310, 346,1780, // 2464\\n2470, 821,1993,2717,2796, 828, 877,3528,2860,2471,1702,2165,2910,2486,1789, 453, // 2480\\n 359,2291,1676,  73,1164,1461,1127,3311, 421, 604, 314,1037, 589, 116,2487, 737, // 2496\\n 837,1180, 111, 244, 735,6142,2261,1861,1362, 986, 523, 418, 581,2666,3822, 103, // 2512\\n 855, 503,1414,1867,2488,1091, 657,1597, 979, 605,1316,4641,1021,2443,2078,2001, // 2528\\n1209,  96, 587,2166,1032, 260,1072,2153, 173,  94, 226,3244, 819,2006,4642,4114, // 2544\\n2203, 231,1744, 782,  97,2667, 786,3387, 887, 391, 442,2219,4326,1425,6143,2694, // 2560\\n 633,1544,1202, 483,2015, 592,2052,1958,2472,1655, 419, 129,4327,3444,3312,1714, // 2576\\n1257,3078,4328,1518,1098, 865,1310,1019,1885,1512,1734, 469,2444, 148, 773, 436, // 2592\\n1815,1868,1128,1055,4329,1245,2756,3445,2154,1934,1039,4643, 579,1238, 932,2320, // 2608\\n 353, 205, 801, 115,2428, 944,2321,1881, 399,2565,1211, 678, 766,3944, 335,2101, // 2624\\n1459,1781,1402,3945,2737,2131,1010, 844, 981,1326,1013, 550,1816,1545,2620,1335, // 2640\\n1008, 371,2881, 936,1419,1613,3529,1456,1395,2273,1834,2604,1317,2738,2503, 416, // 2656\\n1643,4330, 806,1126, 229, 591,3946,1314,1981,1576,1837,1666, 347,1790, 977,3313, // 2672\\n 764,2861,1853, 688,2429,1920,1462,  77, 595, 415,2002,3034, 798,1192,4115,6144, // 2688\\n2978,4331,3035,2695,2582,2072,2566, 430,2430,1727, 842,1396,3947,3702, 613, 377, // 2704\\n 278, 236,1417,3388,3314,3174, 757,1869, 107,3530,6145,1194, 623,2262, 207,1253, // 2720\\n2167,3446,3948, 492,1117,1935, 536,1838,2757,1246,4332, 696,2095,2406,1393,1572, // 2736\\n3175,1782, 583, 190, 253,1390,2230, 830,3126,3389, 934,3245,1703,1749,2979,1870, // 2752\\n2545,1656,2204, 869,2346,4116,3176,1817, 496,1764,4644, 942,1504, 404,1903,1122, // 2768\\n1580,3606,2945,1022, 515, 372,1735, 955,2431,3036,6146,2797,1110,2302,2798, 617, // 2784\\n6147, 441, 762,1771,3447,3607,3608,1904, 840,3037,  86, 939,1385, 572,1370,2445, // 2800\\n1336, 114,3703, 898, 294, 203,3315, 703,1583,2274, 429, 961,4333,1854,1951,3390, // 2816\\n2373,3704,4334,1318,1381, 966,1911,2322,1006,1155, 309, 989, 458,2718,1795,1372, // 2832\\n1203, 252,1689,1363,3177, 517,1936, 168,1490, 562, 193,3823,1042,4117,1835, 551, // 2848\\n 470,4645, 395, 489,3448,1871,1465,2583,2641, 417,1493, 279,1295, 511,1236,1119, // 2864\\n  72,1231,1982,1812,3004, 871,1564, 984,3449,1667,2696,2096,4646,2347,2833,1673, // 2880\\n3609, 695,3246,2668, 807,1183,4647, 890, 388,2333,1801,1457,2911,1765,1477,1031, // 2896\\n3316,3317,1278,3391,2799,2292,2526, 163,3450,4335,2669,1404,1802,6148,2323,2407, // 2912\\n1584,1728,1494,1824,1269, 298, 909,3318,1034,1632, 375, 776,1683,2061, 291, 210, // 2928\\n1123, 809,1249,1002,2642,3038, 206,1011,2132, 144, 975, 882,1565, 342, 667, 754, // 2944\\n1442,2143,1299,2303,2062, 447, 626,2205,1221,2739,2912,1144,1214,2206,2584, 760, // 2960\\n1715, 614, 950,1281,2670,2621, 810, 577,1287,2546,4648, 242,2168, 250,2643, 691, // 2976\\n 123,2644, 647, 313,1029, 689,1357,2946,1650, 216, 771,1339,1306, 808,2063, 549, // 2992\\n 913,1371,2913,2914,6149,1466,1092,1174,1196,1311,2605,2396,1783,1796,3079, 406, // 3008\\n2671,2117,3949,4649, 487,1825,2220,6150,2915, 448,2348,1073,6151,2397,1707, 130, // 3024\\n 900,1598, 329, 176,1959,2527,1620,6152,2275,4336,3319,1983,2191,3705,3610,2155, // 3040\\n3706,1912,1513,1614,6153,1988, 646, 392,2304,1589,3320,3039,1826,1239,1352,1340, // 3056\\n2916, 505,2567,1709,1437,2408,2547, 906,6154,2672, 384,1458,1594,1100,1329, 710, // 3072\\n 423,3531,2064,2231,2622,1989,2673,1087,1882, 333, 841,3005,1296,2882,2379, 580, // 3088\\n1937,1827,1293,2585, 601, 574, 249,1772,4118,2079,1120, 645, 901,1176,1690, 795, // 3104\\n2207, 478,1434, 516,1190,1530, 761,2080, 930,1264, 355, 435,1552, 644,1791, 987, // 3120\\n 220,1364,1163,1121,1538, 306,2169,1327,1222, 546,2645, 218, 241, 610,1704,3321, // 3136\\n1984,1839,1966,2528, 451,6155,2586,3707,2568, 907,3178, 254,2947, 186,1845,4650, // 3152\\n 745, 432,1757, 428,1633, 888,2246,2221,2489,3611,2118,1258,1265, 956,3127,1784, // 3168\\n4337,2490, 319, 510, 119, 457,3612, 274,2035,2007,4651,1409,3128, 970,2758, 590, // 3184\\n2800, 661,2247,4652,2008,3950,1420,1549,3080,3322,3951,1651,1375,2111, 485,2491, // 3200\\n1429,1156,6156,2548,2183,1495, 831,1840,2529,2446, 501,1657, 307,1894,3247,1341, // 3216\\n 666, 899,2156,1539,2549,1559, 886, 349,2208,3081,2305,1736,3824,2170,2759,1014, // 3232\\n1913,1386, 542,1397,2948, 490, 368, 716, 362, 159, 282,2569,1129,1658,1288,1750, // 3248\\n2674, 276, 649,2016, 751,1496, 658,1818,1284,1862,2209,2087,2512,3451, 622,2834, // 3264\\n 376, 117,1060,2053,1208,1721,1101,1443, 247,1250,3179,1792,3952,2760,2398,3953, // 3280\\n6157,2144,3708, 446,2432,1151,2570,3452,2447,2761,2835,1210,2448,3082, 424,2222, // 3296\\n1251,2449,2119,2836, 504,1581,4338, 602, 817, 857,3825,2349,2306, 357,3826,1470, // 3312\\n1883,2883, 255, 958, 929,2917,3248, 302,4653,1050,1271,1751,2307,1952,1430,2697, // 3328\\n2719,2359, 354,3180, 777, 158,2036,4339,1659,4340,4654,2308,2949,2248,1146,2232, // 3344\\n3532,2720,1696,2623,3827,6158,3129,1550,2698,1485,1297,1428, 637, 931,2721,2145, // 3360\\n 914,2550,2587,  81,2450, 612, 827,2646,1242,4655,1118,2884, 472,1855,3181,3533, // 3376\\n3534, 569,1353,2699,1244,1758,2588,4119,2009,2762,2171,3709,1312,1531,6159,1152, // 3392\\n1938, 134,1830, 471,3710,2276,1112,1535,3323,3453,3535, 982,1337,2950, 488, 826, // 3408\\n 674,1058,1628,4120,2017, 522,2399, 211, 568,1367,3454, 350, 293,1872,1139,3249, // 3424\\n1399,1946,3006,1300,2360,3324, 588, 736,6160,2606, 744, 669,3536,3828,6161,1358, // 3440\\n 199, 723, 848, 933, 851,1939,1505,1514,1338,1618,1831,4656,1634,3613, 443,2740, // 3456\\n3829, 717,1947, 491,1914,6162,2551,1542,4121,1025,6163,1099,1223, 198,3040,2722, // 3472\\n 370, 410,1905,2589, 998,1248,3182,2380, 519,1449,4122,1710, 947, 928,1153,4341, // 3488\\n2277, 344,2624,1511, 615, 105, 161,1212,1076,1960,3130,2054,1926,1175,1906,2473, // 3504\\n 414,1873,2801,6164,2309, 315,1319,3325, 318,2018,2146,2157, 963, 631, 223,4342, // 3520\\n4343,2675, 479,3711,1197,2625,3712,2676,2361,6165,4344,4123,6166,2451,3183,1886, // 3536\\n2184,1674,1330,1711,1635,1506, 799, 219,3250,3083,3954,1677,3713,3326,2081,3614, // 3552\\n1652,2073,4657,1147,3041,1752, 643,1961, 147,1974,3955,6167,1716,2037, 918,3007, // 3568\\n1994, 120,1537, 118, 609,3184,4345, 740,3455,1219, 332,1615,3830,6168,1621,2980, // 3584\\n1582, 783, 212, 553,2350,3714,1349,2433,2082,4124, 889,6169,2310,1275,1410, 973, // 3600\\n 166,1320,3456,1797,1215,3185,2885,1846,2590,2763,4658, 629, 822,3008, 763, 940, // 3616\\n1990,2862, 439,2409,1566,1240,1622, 926,1282,1907,2764, 654,2210,1607, 327,1130, // 3632\\n3956,1678,1623,6170,2434,2192, 686, 608,3831,3715, 903,3957,3042,6171,2741,1522, // 3648\\n1915,1105,1555,2552,1359, 323,3251,4346,3457, 738,1354,2553,2311,2334,1828,2003, // 3664\\n3832,1753,2351,1227,6172,1887,4125,1478,6173,2410,1874,1712,1847, 520,1204,2607, // 3680\\n 264,4659, 836,2677,2102, 600,4660,3833,2278,3084,6174,4347,3615,1342, 640, 532, // 3696\\n 543,2608,1888,2400,2591,1009,4348,1497, 341,1737,3616,2723,1394, 529,3252,1321, // 3712\\n 983,4661,1515,2120, 971,2592, 924, 287,1662,3186,4349,2700,4350,1519, 908,1948, // 3728\\n2452, 156, 796,1629,1486,2223,2055, 694,4126,1259,1036,3392,1213,2249,2742,1889, // 3744\\n1230,3958,1015, 910, 408, 559,3617,4662, 746, 725, 935,4663,3959,3009,1289, 563, // 3760\\n 867,4664,3960,1567,2981,2038,2626, 988,2263,2381,4351, 143,2374, 704,1895,6175, // 3776\\n1188,3716,2088, 673,3085,2362,4352, 484,1608,1921,2765,2918, 215, 904,3618,3537, // 3792\\n 894, 509, 976,3043,2701,3961,4353,2837,2982, 498,6176,6177,1102,3538,1332,3393, // 3808\\n1487,1636,1637, 233, 245,3962, 383, 650, 995,3044, 460,1520,1206,2352, 749,3327, // 3824\\n 530, 700, 389,1438,1560,1773,3963,2264, 719,2951,2724,3834, 870,1832,1644,1000, // 3840\\n 839,2474,3717, 197,1630,3394, 365,2886,3964,1285,2133, 734, 922, 818,1106, 732, // 3856\\n 480,2083,1774,3458, 923,2279,1350, 221,3086,  85,2233,2234,3835,1585,3010,2147, // 3872\\n1387,1705,2382,1619,2475, 133, 239,2802,1991,1016,2084,2383, 411,2838,1113, 651, // 3888\\n1985,1160,3328, 990,1863,3087,1048,1276,2647, 265,2627,1599,3253,2056, 150, 638, // 3904\\n2019, 656, 853, 326,1479, 680,1439,4354,1001,1759, 413,3459,3395,2492,1431, 459, // 3920\\n4355,1125,3329,2265,1953,1450,2065,2863, 849, 351,2678,3131,3254,3255,1104,1577, // 3936\\n 227,1351,1645,2453,2193,1421,2887, 812,2121, 634,  95,2435, 201,2312,4665,1646, // 3952\\n1671,2743,1601,2554,2702,2648,2280,1315,1366,2089,3132,1573,3718,3965,1729,1189, // 3968\\n 328,2679,1077,1940,1136, 558,1283, 964,1195, 621,2074,1199,1743,3460,3619,1896, // 3984\\n1916,1890,3836,2952,1154,2112,1064, 862, 378,3011,2066,2113,2803,1568,2839,6178, // 4000\\n3088,2919,1941,1660,2004,1992,2194, 142, 707,1590,1708,1624,1922,1023,1836,1233, // 4016\\n1004,2313, 789, 741,3620,6179,1609,2411,1200,4127,3719,3720,4666,2057,3721, 593, // 4032\\n2840, 367,2920,1878,6180,3461,1521, 628,1168, 692,2211,2649, 300, 720,2067,2571, // 4048\\n2953,3396, 959,2504,3966,3539,3462,1977, 701,6181, 954,1043, 800, 681, 183,3722, // 4064\\n1803,1730,3540,4128,2103, 815,2314, 174, 467, 230,2454,1093,2134, 755,3541,3397, // 4080\\n1141,1162,6182,1738,2039, 270,3256,2513,1005,1647,2185,3837, 858,1679,1897,1719, // 4096\\n2954,2324,1806, 402, 670, 167,4129,1498,2158,2104, 750,6183, 915, 189,1680,1551, // 4112\\n 455,4356,1501,2455, 405,1095,2955, 338,1586,1266,1819, 570, 641,1324, 237,1556, // 4128\\n2650,1388,3723,6184,1368,2384,1343,1978,3089,2436, 879,3724, 792,1191, 758,3012, // 4144\\n1411,2135,1322,4357, 240,4667,1848,3725,1574,6185, 420,3045,1546,1391, 714,4358, // 4160\\n1967, 941,1864, 863, 664, 426, 560,1731,2680,1785,2864,1949,2363, 403,3330,1415, // 4176\\n1279,2136,1697,2335, 204, 721,2097,3838,  90,6186,2085,2505, 191,3967, 124,2148, // 4192\\n1376,1798,1178,1107,1898,1405, 860,4359,1243,1272,2375,2983,1558,2456,1638, 113, // 4208\\n3621, 578,1923,2609, 880, 386,4130, 784,2186,2266,1422,2956,2172,1722, 497, 263, // 4224\\n2514,1267,2412,2610, 177,2703,3542, 774,1927,1344, 616,1432,1595,1018, 172,4360, // 4240\\n2325, 911,4361, 438,1468,3622, 794,3968,2024,2173,1681,1829,2957, 945, 895,3090, // 4256\\n 575,2212,2476, 475,2401,2681, 785,2744,1745,2293,2555,1975,3133,2865, 394,4668, // 4272\\n3839, 635,4131, 639, 202,1507,2195,2766,1345,1435,2572,3726,1908,1184,1181,2457, // 4288\\n3727,3134,4362, 843,2611, 437, 916,4669, 234, 769,1884,3046,3047,3623, 833,6187, // 4304\\n1639,2250,2402,1355,1185,2010,2047, 999, 525,1732,1290,1488,2612, 948,1578,3728, // 4320\\n2413,2477,1216,2725,2159, 334,3840,1328,3624,2921,1525,4132, 564,1056, 891,4363, // 4336\\n1444,1698,2385,2251,3729,1365,2281,2235,1717,6188, 864,3841,2515, 444, 527,2767, // 4352\\n2922,3625, 544, 461,6189, 566, 209,2437,3398,2098,1065,2068,3331,3626,3257,2137, // 4368  //last 512\\n//Everything below is of no interest for detection purpose\\n2138,2122,3730,2888,1995,1820,1044,6190,6191,6192,6193,6194,6195,6196,6197,6198, // 4384\\n6199,6200,6201,6202,6203,6204,6205,4670,6206,6207,6208,6209,6210,6211,6212,6213, // 4400\\n6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229, // 4416\\n6230,6231,6232,6233,6234,6235,6236,6237,3187,6238,6239,3969,6240,6241,6242,6243, // 4432\\n6244,4671,6245,6246,4672,6247,6248,4133,6249,6250,4364,6251,2923,2556,2613,4673, // 4448\\n4365,3970,6252,6253,6254,6255,4674,6256,6257,6258,2768,2353,4366,4675,4676,3188, // 4464\\n4367,3463,6259,4134,4677,4678,6260,2267,6261,3842,3332,4368,3543,6262,6263,6264, // 4480\\n3013,1954,1928,4135,4679,6265,6266,2478,3091,6267,4680,4369,6268,6269,1699,6270, // 4496\\n3544,4136,4681,6271,4137,6272,4370,2804,6273,6274,2593,3971,3972,4682,6275,2236, // 4512\\n4683,6276,6277,4684,6278,6279,4138,3973,4685,6280,6281,3258,6282,6283,6284,6285, // 4528\\n3974,4686,2841,3975,6286,6287,3545,6288,6289,4139,4687,4140,6290,4141,6291,4142, // 4544\\n6292,6293,3333,6294,6295,6296,4371,6297,3399,6298,6299,4372,3976,6300,6301,6302, // 4560\\n4373,6303,6304,3843,3731,6305,4688,4374,6306,6307,3259,2294,6308,3732,2530,4143, // 4576\\n6309,4689,6310,6311,6312,3048,6313,6314,4690,3733,2237,6315,6316,2282,3334,6317, // 4592\\n6318,3844,6319,6320,4691,6321,3400,4692,6322,4693,6323,3049,6324,4375,6325,3977, // 4608\\n6326,6327,6328,3546,6329,4694,3335,6330,4695,4696,6331,6332,6333,6334,4376,3978, // 4624\\n6335,4697,3979,4144,6336,3980,4698,6337,6338,6339,6340,6341,4699,4700,4701,6342, // 4640\\n6343,4702,6344,6345,4703,6346,6347,4704,6348,4705,4706,3135,6349,4707,6350,4708, // 4656\\n6351,4377,6352,4709,3734,4145,6353,2506,4710,3189,6354,3050,4711,3981,6355,3547, // 4672\\n3014,4146,4378,3735,2651,3845,3260,3136,2224,1986,6356,3401,6357,4712,2594,3627, // 4688\\n3137,2573,3736,3982,4713,3628,4714,4715,2682,3629,4716,6358,3630,4379,3631,6359, // 4704\\n6360,6361,3983,6362,6363,6364,6365,4147,3846,4717,6366,6367,3737,2842,6368,4718, // 4720\\n2628,6369,3261,6370,2386,6371,6372,3738,3984,4719,3464,4720,3402,6373,2924,3336, // 4736\\n4148,2866,6374,2805,3262,4380,2704,2069,2531,3138,2806,2984,6375,2769,6376,4721, // 4752\\n4722,3403,6377,6378,3548,6379,6380,2705,3092,1979,4149,2629,3337,2889,6381,3338, // 4768\\n4150,2557,3339,4381,6382,3190,3263,3739,6383,4151,4723,4152,2558,2574,3404,3191, // 4784\\n6384,6385,4153,6386,4724,4382,6387,6388,4383,6389,6390,4154,6391,4725,3985,6392, // 4800\\n3847,4155,6393,6394,6395,6396,6397,3465,6398,4384,6399,6400,6401,6402,6403,6404, // 4816\\n4156,6405,6406,6407,6408,2123,6409,6410,2326,3192,4726,6411,6412,6413,6414,4385, // 4832\\n4157,6415,6416,4158,6417,3093,3848,6418,3986,6419,6420,3849,6421,6422,6423,4159, // 4848\\n6424,6425,4160,6426,3740,6427,6428,6429,6430,3987,6431,4727,6432,2238,6433,6434, // 4864\\n4386,3988,6435,6436,3632,6437,6438,2843,6439,6440,6441,6442,3633,6443,2958,6444, // 4880\\n6445,3466,6446,2364,4387,3850,6447,4388,2959,3340,6448,3851,6449,4728,6450,6451, // 4896\\n3264,4729,6452,3193,6453,4389,4390,2706,3341,4730,6454,3139,6455,3194,6456,3051, // 4912\\n2124,3852,1602,4391,4161,3853,1158,3854,4162,3989,4392,3990,4731,4732,4393,2040, // 4928\\n4163,4394,3265,6457,2807,3467,3855,6458,6459,6460,3991,3468,4733,4734,6461,3140, // 4944\\n2960,6462,4735,6463,6464,6465,6466,4736,4737,4738,4739,6467,6468,4164,2403,3856, // 4960\\n6469,6470,2770,2844,6471,4740,6472,6473,6474,6475,6476,6477,6478,3195,6479,4741, // 4976\\n4395,6480,2867,6481,4742,2808,6482,2493,4165,6483,6484,6485,6486,2295,4743,6487, // 4992\\n6488,6489,3634,6490,6491,6492,6493,6494,6495,6496,2985,4744,6497,6498,4745,6499, // 5008\\n6500,2925,3141,4166,6501,6502,4746,6503,6504,4747,6505,6506,6507,2890,6508,6509, // 5024\\n6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,3469,4167,6520,6521,6522,4748, // 5040\\n4396,3741,4397,4749,4398,3342,2125,4750,6523,4751,4752,4753,3052,6524,2961,4168, // 5056\\n6525,4754,6526,4755,4399,2926,4169,6527,3857,6528,4400,4170,6529,4171,6530,6531, // 5072\\n2595,6532,6533,6534,6535,3635,6536,6537,6538,6539,6540,6541,6542,4756,6543,6544, // 5088\\n6545,6546,6547,6548,4401,6549,6550,6551,6552,4402,3405,4757,4403,6553,6554,6555, // 5104\\n4172,3742,6556,6557,6558,3992,3636,6559,6560,3053,2726,6561,3549,4173,3054,4404, // 5120\\n6562,6563,3993,4405,3266,3550,2809,4406,6564,6565,6566,4758,4759,6567,3743,6568, // 5136\\n4760,3744,4761,3470,6569,6570,6571,4407,6572,3745,4174,6573,4175,2810,4176,3196, // 5152\\n4762,6574,4177,6575,6576,2494,2891,3551,6577,6578,3471,6579,4408,6580,3015,3197, // 5168\\n6581,3343,2532,3994,3858,6582,3094,3406,4409,6583,2892,4178,4763,4410,3016,4411, // 5184\\n6584,3995,3142,3017,2683,6585,4179,6586,6587,4764,4412,6588,6589,4413,6590,2986, // 5200\\n6591,2962,3552,6592,2963,3472,6593,6594,4180,4765,6595,6596,2225,3267,4414,6597, // 5216\\n3407,3637,4766,6598,6599,3198,6600,4415,6601,3859,3199,6602,3473,4767,2811,4416, // 5232\\n1856,3268,3200,2575,3996,3997,3201,4417,6603,3095,2927,6604,3143,6605,2268,6606, // 5248\\n3998,3860,3096,2771,6607,6608,3638,2495,4768,6609,3861,6610,3269,2745,4769,4181, // 5264\\n3553,6611,2845,3270,6612,6613,6614,3862,6615,6616,4770,4771,6617,3474,3999,4418, // 5280\\n4419,6618,3639,3344,6619,4772,4182,6620,2126,6621,6622,6623,4420,4773,6624,3018, // 5296\\n6625,4774,3554,6626,4183,2025,3746,6627,4184,2707,6628,4421,4422,3097,1775,4185, // 5312\\n3555,6629,6630,2868,6631,6632,4423,6633,6634,4424,2414,2533,2928,6635,4186,2387, // 5328\\n6636,4775,6637,4187,6638,1891,4425,3202,3203,6639,6640,4776,6641,3345,6642,6643, // 5344\\n3640,6644,3475,3346,3641,4000,6645,3144,6646,3098,2812,4188,3642,3204,6647,3863, // 5360\\n3476,6648,3864,6649,4426,4001,6650,6651,6652,2576,6653,4189,4777,6654,6655,6656, // 5376\\n2846,6657,3477,3205,4002,6658,4003,6659,3347,2252,6660,6661,6662,4778,6663,6664, // 5392\\n6665,6666,6667,6668,6669,4779,4780,2048,6670,3478,3099,6671,3556,3747,4004,6672, // 5408\\n6673,6674,3145,4005,3748,6675,6676,6677,6678,6679,3408,6680,6681,6682,6683,3206, // 5424\\n3207,6684,6685,4781,4427,6686,4782,4783,4784,6687,6688,6689,4190,6690,6691,3479, // 5440\\n6692,2746,6693,4428,6694,6695,6696,6697,6698,6699,4785,6700,6701,3208,2727,6702, // 5456\\n3146,6703,6704,3409,2196,6705,4429,6706,6707,6708,2534,1996,6709,6710,6711,2747, // 5472\\n6712,6713,6714,4786,3643,6715,4430,4431,6716,3557,6717,4432,4433,6718,6719,6720, // 5488\\n6721,3749,6722,4006,4787,6723,6724,3644,4788,4434,6725,6726,4789,2772,6727,6728, // 5504\\n6729,6730,6731,2708,3865,2813,4435,6732,6733,4790,4791,3480,6734,6735,6736,6737, // 5520\\n4436,3348,6738,3410,4007,6739,6740,4008,6741,6742,4792,3411,4191,6743,6744,6745, // 5536\\n6746,6747,3866,6748,3750,6749,6750,6751,6752,6753,6754,6755,3867,6756,4009,6757, // 5552\\n4793,4794,6758,2814,2987,6759,6760,6761,4437,6762,6763,6764,6765,3645,6766,6767, // 5568\\n3481,4192,6768,3751,6769,6770,2174,6771,3868,3752,6772,6773,6774,4193,4795,4438, // 5584\\n3558,4796,4439,6775,4797,6776,6777,4798,6778,4799,3559,4800,6779,6780,6781,3482, // 5600\\n6782,2893,6783,6784,4194,4801,4010,6785,6786,4440,6787,4011,6788,6789,6790,6791, // 5616\\n6792,6793,4802,6794,6795,6796,4012,6797,6798,6799,6800,3349,4803,3483,6801,4804, // 5632\\n4195,6802,4013,6803,6804,4196,6805,4014,4015,6806,2847,3271,2848,6807,3484,6808, // 5648\\n6809,6810,4441,6811,4442,4197,4443,3272,4805,6812,3412,4016,1579,6813,6814,4017, // 5664\\n6815,3869,6816,2964,6817,4806,6818,6819,4018,3646,6820,6821,4807,4019,4020,6822, // 5680\\n6823,3560,6824,6825,4021,4444,6826,4198,6827,6828,4445,6829,6830,4199,4808,6831, // 5696\\n6832,6833,3870,3019,2458,6834,3753,3413,3350,6835,4809,3871,4810,3561,4446,6836, // 5712\\n6837,4447,4811,4812,6838,2459,4448,6839,4449,6840,6841,4022,3872,6842,4813,4814, // 5728\\n6843,6844,4815,4200,4201,4202,6845,4023,6846,6847,4450,3562,3873,6848,6849,4816, // 5744\\n4817,6850,4451,4818,2139,6851,3563,6852,6853,3351,6854,6855,3352,4024,2709,3414, // 5760\\n4203,4452,6856,4204,6857,6858,3874,3875,6859,6860,4819,6861,6862,6863,6864,4453, // 5776\\n3647,6865,6866,4820,6867,6868,6869,6870,4454,6871,2869,6872,6873,4821,6874,3754, // 5792\\n6875,4822,4205,6876,6877,6878,3648,4206,4455,6879,4823,6880,4824,3876,6881,3055, // 5808\\n4207,6882,3415,6883,6884,6885,4208,4209,6886,4210,3353,6887,3354,3564,3209,3485, // 5824\\n2652,6888,2728,6889,3210,3755,6890,4025,4456,6891,4825,6892,6893,6894,6895,4211, // 5840\\n6896,6897,6898,4826,6899,6900,4212,6901,4827,6902,2773,3565,6903,4828,6904,6905, // 5856\\n6906,6907,3649,3650,6908,2849,3566,6909,3567,3100,6910,6911,6912,6913,6914,6915, // 5872\\n4026,6916,3355,4829,3056,4457,3756,6917,3651,6918,4213,3652,2870,6919,4458,6920, // 5888\\n2438,6921,6922,3757,2774,4830,6923,3356,4831,4832,6924,4833,4459,3653,2507,6925, // 5904\\n4834,2535,6926,6927,3273,4027,3147,6928,3568,6929,6930,6931,4460,6932,3877,4461, // 5920\\n2729,3654,6933,6934,6935,6936,2175,4835,2630,4214,4028,4462,4836,4215,6937,3148, // 5936\\n4216,4463,4837,4838,4217,6938,6939,2850,4839,6940,4464,6941,6942,6943,4840,6944, // 5952\\n4218,3274,4465,6945,6946,2710,6947,4841,4466,6948,6949,2894,6950,6951,4842,6952, // 5968\\n4219,3057,2871,6953,6954,6955,6956,4467,6957,2711,6958,6959,6960,3275,3101,4843, // 5984\\n6961,3357,3569,6962,4844,6963,6964,4468,4845,3570,6965,3102,4846,3758,6966,4847, // 6000\\n3878,4848,4849,4029,6967,2929,3879,4850,4851,6968,6969,1733,6970,4220,6971,6972, // 6016\\n6973,6974,6975,6976,4852,6977,6978,6979,6980,6981,6982,3759,6983,6984,6985,3486, // 6032\\n3487,6986,3488,3416,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,4853, // 6048\\n6998,6999,4030,7000,7001,3211,7002,7003,4221,7004,7005,3571,4031,7006,3572,7007, // 6064\\n2614,4854,2577,7008,7009,2965,3655,3656,4855,2775,3489,3880,4222,4856,3881,4032, // 6080\\n3882,3657,2730,3490,4857,7010,3149,7011,4469,4858,2496,3491,4859,2283,7012,7013, // 6096\\n7014,2365,4860,4470,7015,7016,3760,7017,7018,4223,1917,7019,7020,7021,4471,7022, // 6112\\n2776,4472,7023,7024,7025,7026,4033,7027,3573,4224,4861,4034,4862,7028,7029,1929, // 6128\\n3883,4035,7030,4473,3058,7031,2536,3761,3884,7032,4036,7033,2966,2895,1968,4474, // 6144\\n3276,4225,3417,3492,4226,2105,7034,7035,1754,2596,3762,4227,4863,4475,3763,4864, // 6160\\n3764,2615,2777,3103,3765,3658,3418,4865,2296,3766,2815,7036,7037,7038,3574,2872, // 6176\\n3277,4476,7039,4037,4477,7040,7041,4038,7042,7043,7044,7045,7046,7047,2537,7048, // 6192\\n7049,7050,7051,7052,7053,7054,4478,7055,7056,3767,3659,4228,3575,7057,7058,4229, // 6208\\n7059,7060,7061,3660,7062,3212,7063,3885,4039,2460,7064,7065,7066,7067,7068,7069, // 6224\\n7070,7071,7072,7073,7074,4866,3768,4867,7075,7076,7077,7078,4868,3358,3278,2653, // 6240\\n7079,7080,4479,3886,7081,7082,4869,7083,7084,7085,7086,7087,7088,2538,7089,7090, // 6256\\n7091,4040,3150,3769,4870,4041,2896,3359,4230,2930,7092,3279,7093,2967,4480,3213, // 6272\\n4481,3661,7094,7095,7096,7097,7098,7099,7100,7101,7102,2461,3770,7103,7104,4231, // 6288\\n3151,7105,7106,7107,4042,3662,7108,7109,4871,3663,4872,4043,3059,7110,7111,7112, // 6304\\n3493,2988,7113,4873,7114,7115,7116,3771,4874,7117,7118,4232,4875,7119,3576,2336, // 6320\\n4876,7120,4233,3419,4044,4877,4878,4482,4483,4879,4484,4234,7121,3772,4880,1045, // 6336\\n3280,3664,4881,4882,7122,7123,7124,7125,4883,7126,2778,7127,4485,4486,7128,4884, // 6352\\n3214,3887,7129,7130,3215,7131,4885,4045,7132,7133,4046,7134,7135,7136,7137,7138, // 6368\\n7139,7140,7141,7142,7143,4235,7144,4886,7145,7146,7147,4887,7148,7149,7150,4487, // 6384\\n4047,4488,7151,7152,4888,4048,2989,3888,7153,3665,7154,4049,7155,7156,7157,7158, // 6400\\n7159,7160,2931,4889,4890,4489,7161,2631,3889,4236,2779,7162,7163,4891,7164,3060, // 6416\\n7165,1672,4892,7166,4893,4237,3281,4894,7167,7168,3666,7169,3494,7170,7171,4050, // 6432\\n7172,7173,3104,3360,3420,4490,4051,2684,4052,7174,4053,7175,7176,7177,2253,4054, // 6448\\n7178,7179,4895,7180,3152,3890,3153,4491,3216,7181,7182,7183,2968,4238,4492,4055, // 6464\\n7184,2990,7185,2479,7186,7187,4493,7188,7189,7190,7191,7192,4896,7193,4897,2969, // 6480\\n4494,4898,7194,3495,7195,7196,4899,4495,7197,3105,2731,7198,4900,7199,7200,7201, // 6496\\n4056,7202,3361,7203,7204,4496,4901,4902,7205,4497,7206,7207,2315,4903,7208,4904, // 6512\\n7209,4905,2851,7210,7211,3577,7212,3578,4906,7213,4057,3667,4907,7214,4058,2354, // 6528\\n3891,2376,3217,3773,7215,7216,7217,7218,7219,4498,7220,4908,3282,2685,7221,3496, // 6544\\n4909,2632,3154,4910,7222,2337,7223,4911,7224,7225,7226,4912,4913,3283,4239,4499, // 6560\\n7227,2816,7228,7229,7230,7231,7232,7233,7234,4914,4500,4501,7235,7236,7237,2686, // 6576\\n7238,4915,7239,2897,4502,7240,4503,7241,2516,7242,4504,3362,3218,7243,7244,7245, // 6592\\n4916,7246,7247,4505,3363,7248,7249,7250,7251,3774,4506,7252,7253,4917,7254,7255, // 6608\\n3284,2991,4918,4919,3219,3892,4920,3106,3497,4921,7256,7257,7258,4922,7259,4923, // 6624\\n3364,4507,4508,4059,7260,4240,3498,7261,7262,4924,7263,2992,3893,4060,3220,7264, // 6640\\n7265,7266,7267,7268,7269,4509,3775,7270,2817,7271,4061,4925,4510,3776,7272,4241, // 6656\\n4511,3285,7273,7274,3499,7275,7276,7277,4062,4512,4926,7278,3107,3894,7279,7280, // 6672\\n4927,7281,4513,7282,7283,3668,7284,7285,4242,4514,4243,7286,2058,4515,4928,4929, // 6688\\n4516,7287,3286,4244,7288,4517,7289,7290,7291,3669,7292,7293,4930,4931,4932,2355, // 6704\\n4933,7294,2633,4518,7295,4245,7296,7297,4519,7298,7299,4520,4521,4934,7300,4246, // 6720\\n4522,7301,7302,7303,3579,7304,4247,4935,7305,4936,7306,7307,7308,7309,3777,7310, // 6736\\n4523,7311,7312,7313,4248,3580,7314,4524,3778,4249,7315,3581,7316,3287,7317,3221, // 6752\\n7318,4937,7319,7320,7321,7322,7323,7324,4938,4939,7325,4525,7326,7327,7328,4063, // 6768\\n7329,7330,4940,7331,7332,4941,7333,4526,7334,3500,2780,1741,4942,2026,1742,7335, // 6784\\n7336,3582,4527,2388,7337,7338,7339,4528,7340,4250,4943,7341,7342,7343,4944,7344, // 6800\\n7345,7346,3020,7347,4945,7348,7349,7350,7351,3895,7352,3896,4064,3897,7353,7354, // 6816\\n7355,4251,7356,7357,3898,7358,3779,7359,3780,3288,7360,7361,4529,7362,4946,4530, // 6832\\n2027,7363,3899,4531,4947,3222,3583,7364,4948,7365,7366,7367,7368,4949,3501,4950, // 6848\\n3781,4951,4532,7369,2517,4952,4252,4953,3155,7370,4954,4955,4253,2518,4533,7371, // 6864\\n7372,2712,4254,7373,7374,7375,3670,4956,3671,7376,2389,3502,4065,7377,2338,7378, // 6880\\n7379,7380,7381,3061,7382,4957,7383,7384,7385,7386,4958,4534,7387,7388,2993,7389, // 6896\\n3062,7390,4959,7391,7392,7393,4960,3108,4961,7394,4535,7395,4962,3421,4536,7396, // 6912\\n4963,7397,4964,1857,7398,4965,7399,7400,2176,3584,4966,7401,7402,3422,4537,3900, // 6928\\n3585,7403,3782,7404,2852,7405,7406,7407,4538,3783,2654,3423,4967,4539,7408,3784, // 6944\\n3586,2853,4540,4541,7409,3901,7410,3902,7411,7412,3785,3109,2327,3903,7413,7414, // 6960\\n2970,4066,2932,7415,7416,7417,3904,3672,3424,7418,4542,4543,4544,7419,4968,7420, // 6976\\n7421,4255,7422,7423,7424,7425,7426,4067,7427,3673,3365,4545,7428,3110,2559,3674, // 6992\\n7429,7430,3156,7431,7432,3503,7433,3425,4546,7434,3063,2873,7435,3223,4969,4547, // 7008\\n4548,2898,4256,4068,7436,4069,3587,3786,2933,3787,4257,4970,4971,3788,7437,4972, // 7024\\n3064,7438,4549,7439,7440,7441,7442,7443,4973,3905,7444,2874,7445,7446,7447,7448, // 7040\\n3021,7449,4550,3906,3588,4974,7450,7451,3789,3675,7452,2578,7453,4070,7454,7455, // 7056\\n7456,4258,3676,7457,4975,7458,4976,4259,3790,3504,2634,4977,3677,4551,4260,7459, // 7072\\n7460,7461,7462,3907,4261,4978,7463,7464,7465,7466,4979,4980,7467,7468,2213,4262, // 7088\\n7469,7470,7471,3678,4981,7472,2439,7473,4263,3224,3289,7474,3908,2415,4982,7475, // 7104\\n4264,7476,4983,2655,7477,7478,2732,4552,2854,2875,7479,7480,4265,7481,4553,4984, // 7120\\n7482,7483,4266,7484,3679,3366,3680,2818,2781,2782,3367,3589,4554,3065,7485,4071, // 7136\\n2899,7486,7487,3157,2462,4072,4555,4073,4985,4986,3111,4267,2687,3368,4556,4074, // 7152\\n3791,4268,7488,3909,2783,7489,2656,1962,3158,4557,4987,1963,3159,3160,7490,3112, // 7168\\n4988,4989,3022,4990,4991,3792,2855,7491,7492,2971,4558,7493,7494,4992,7495,7496, // 7184\\n7497,7498,4993,7499,3426,4559,4994,7500,3681,4560,4269,4270,3910,7501,4075,4995, // 7200\\n4271,7502,7503,4076,7504,4996,7505,3225,4997,4272,4077,2819,3023,7506,7507,2733, // 7216\\n4561,7508,4562,7509,3369,3793,7510,3590,2508,7511,7512,4273,3113,2994,2616,7513, // 7232\\n7514,7515,7516,7517,7518,2820,3911,4078,2748,7519,7520,4563,4998,7521,7522,7523, // 7248\\n7524,4999,4274,7525,4564,3682,2239,4079,4565,7526,7527,7528,7529,5000,7530,7531, // 7264\\n5001,4275,3794,7532,7533,7534,3066,5002,4566,3161,7535,7536,4080,7537,3162,7538, // 7280\\n7539,4567,7540,7541,7542,7543,7544,7545,5003,7546,4568,7547,7548,7549,7550,7551, // 7296\\n7552,7553,7554,7555,7556,5004,7557,7558,7559,5005,7560,3795,7561,4569,7562,7563, // 7312\\n7564,2821,3796,4276,4277,4081,7565,2876,7566,5006,7567,7568,2900,7569,3797,3912, // 7328\\n7570,7571,7572,4278,7573,7574,7575,5007,7576,7577,5008,7578,7579,4279,2934,7580, // 7344\\n7581,5009,7582,4570,7583,4280,7584,7585,7586,4571,4572,3913,7587,4573,3505,7588, // 7360\\n5010,7589,7590,7591,7592,3798,4574,7593,7594,5011,7595,4281,7596,7597,7598,4282, // 7376\\n5012,7599,7600,5013,3163,7601,5014,7602,3914,7603,7604,2734,4575,4576,4577,7605, // 7392\\n7606,7607,7608,7609,3506,5015,4578,7610,4082,7611,2822,2901,2579,3683,3024,4579, // 7408\\n3507,7612,4580,7613,3226,3799,5016,7614,7615,7616,7617,7618,7619,7620,2995,3290, // 7424\\n7621,4083,7622,5017,7623,7624,7625,7626,7627,4581,3915,7628,3291,7629,5018,7630, // 7440\\n7631,7632,7633,4084,7634,7635,3427,3800,7636,7637,4582,7638,5019,4583,5020,7639, // 7456\\n3916,7640,3801,5021,4584,4283,7641,7642,3428,3591,2269,7643,2617,7644,4585,3592, // 7472\\n7645,4586,2902,7646,7647,3227,5022,7648,4587,7649,4284,7650,7651,7652,4588,2284, // 7488\\n7653,5023,7654,7655,7656,4589,5024,3802,7657,7658,5025,3508,4590,7659,7660,7661, // 7504\\n1969,5026,7662,7663,3684,1821,2688,7664,2028,2509,4285,7665,2823,1841,7666,2689, // 7520\\n3114,7667,3917,4085,2160,5027,5028,2972,7668,5029,7669,7670,7671,3593,4086,7672, // 7536\\n4591,4087,5030,3803,7673,7674,7675,7676,7677,7678,7679,4286,2366,4592,4593,3067, // 7552\\n2328,7680,7681,4594,3594,3918,2029,4287,7682,5031,3919,3370,4288,4595,2856,7683, // 7568\\n3509,7684,7685,5032,5033,7686,7687,3804,2784,7688,7689,7690,7691,3371,7692,7693, // 7584\\n2877,5034,7694,7695,3920,4289,4088,7696,7697,7698,5035,7699,5036,4290,5037,5038, // 7600\\n5039,7700,7701,7702,5040,5041,3228,7703,1760,7704,5042,3229,4596,2106,4089,7705, // 7616\\n4597,2824,5043,2107,3372,7706,4291,4090,5044,7707,4091,7708,5045,3025,3805,4598, // 7632\\n4292,4293,4294,3373,7709,4599,7710,5046,7711,7712,5047,5048,3806,7713,7714,7715, // 7648\\n5049,7716,7717,7718,7719,4600,5050,7720,7721,7722,5051,7723,4295,3429,7724,7725, // 7664\\n7726,7727,3921,7728,3292,5052,4092,7729,7730,7731,7732,7733,7734,7735,5053,5054, // 7680\\n7736,7737,7738,7739,3922,3685,7740,7741,7742,7743,2635,5055,7744,5056,4601,7745, // 7696\\n7746,2560,7747,7748,7749,7750,3923,7751,7752,7753,7754,7755,4296,2903,7756,7757, // 7712\\n7758,7759,7760,3924,7761,5057,4297,7762,7763,5058,4298,7764,4093,7765,7766,5059, // 7728\\n3925,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,3595,7777,4299,5060,4094, // 7744\\n7778,3293,5061,7779,7780,4300,7781,7782,4602,7783,3596,7784,7785,3430,2367,7786, // 7760\\n3164,5062,5063,4301,7787,7788,4095,5064,5065,7789,3374,3115,7790,7791,7792,7793, // 7776\\n7794,7795,7796,3597,4603,7797,7798,3686,3116,3807,5066,7799,7800,5067,7801,7802, // 7792\\n4604,4302,5068,4303,4096,7803,7804,3294,7805,7806,5069,4605,2690,7807,3026,7808, // 7808\\n7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824, // 7824\\n7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840, // 7840\\n7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856, // 7856\\n7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872, // 7872\\n7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888, // 7888\\n7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904, // 7904\\n7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920, // 7920\\n7921,7922,7923,7924,3926,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935, // 7936\\n7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951, // 7952\\n7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967, // 7968\\n7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983, // 7984\\n7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999, // 8000\\n8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015, // 8016\\n8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031, // 8032\\n8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047, // 8048\\n8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063, // 8064\\n8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079, // 8080\\n8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095, // 8096\\n8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111, // 8112\\n8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127, // 8128\\n8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143, // 8144\\n8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159, // 8160\\n8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175, // 8176\\n8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191, // 8192\\n8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207, // 8208\\n8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223, // 8224\\n8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239, // 8240\\n8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255, // 8256\\n8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271 // 8272\\n];\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// EUCTW frequency table\\n// Converted from big5 work\\n// by Taiwan's Mandarin Promotion Council\\n// <http://www.edu.tw:81/mandr/>\\n\\n// 128  --> 0.42261\\n// 256  --> 0.57851\\n// 512  --> 0.74851\\n// 1024 --> 0.89384\\n// 2048 --> 0.97583\\n//\\n// Idea Distribution Ratio = 0.74851/(1-0.74851) =2.98\\n// Random Distribution Ration = 512/(5401-512)=0.105\\n//\\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\\n\\nexports.EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75;\\n\\n// Char to FreqOrder table ,\\nexports.EUCTW_TABLE_SIZE = 8102;\\n\\nexports.EUCTWCharToFreqOrder = [\\n   1,1800,1506, 255,1431, 198,   9,  82,   6,7310, 177, 202,3615,1256,2808, 110, // 2742\\n3735,  33,3241, 261,  76,  44,2113,  16,2931,2184,1176, 659,3868,  26,3404,2643, // 2758\\n1198,3869,3313,4060, 410,2211, 302, 590, 361,1963,   8, 204,  58,4296,7311,1931, // 2774\\n  63,7312,7313, 317,1614,  75, 222, 159,4061,2412,1480,7314,3500,3068, 224,2809, // 2790\\n3616,   3,  10,3870,1471,  29,2774,1135,2852,1939, 873, 130,3242,1123, 312,7315, // 2806\\n4297,2051, 507, 252, 682,7316, 142,1914, 124, 206,2932,  34,3501,3173,  64, 604, // 2822\\n7317,2494,1976,1977, 155,1990, 645, 641,1606,7318,3405, 337,  72, 406,7319,  80, // 2838\\n 630, 238,3174,1509, 263, 939,1092,2644, 756,1440,1094,3406, 449,  69,2969, 591, // 2854\\n 179,2095, 471, 115,2034,1843,  60,  50,2970, 134, 806,1868, 734,2035,3407, 180, // 2870\\n 995,1607, 156, 537,2893, 688,7320, 319,1305, 779,2144, 514,2374, 298,4298, 359, // 2886\\n2495,  90,2707,1338, 663,  11, 906,1099,2545,  20,2436, 182, 532,1716,7321, 732, // 2902\\n1376,4062,1311,1420,3175,  25,2312,1056, 113, 399, 382,1949, 242,3408,2467, 529, // 2918\\n3243, 475,1447,3617,7322, 117,  21, 656, 810,1297,2295,2329,3502,7323, 126,4063, // 2934\\n 706, 456, 150, 613,4299,  71,1118,2036,4064, 145,3069,  85, 835, 486,2114,1246, // 2950\\n1426, 428, 727,1285,1015, 800, 106, 623, 303,1281,7324,2127,2354, 347,3736, 221, // 2966\\n3503,3110,7325,1955,1153,4065,  83, 296,1199,3070, 192, 624,  93,7326, 822,1897, // 2982\\n2810,3111, 795,2064, 991,1554,1542,1592,  27,  43,2853, 859, 139,1456, 860,4300, // 2998\\n 437, 712,3871, 164,2392,3112, 695, 211,3017,2096, 195,3872,1608,3504,3505,3618, // 3014\\n3873, 234, 811,2971,2097,3874,2229,1441,3506,1615,2375, 668,2076,1638, 305, 228, // 3030\\n1664,4301, 467, 415,7327, 262,2098,1593, 239, 108, 300, 200,1033, 512,1247,2077, // 3046\\n7328,7329,2173,3176,3619,2673, 593, 845,1062,3244,  88,1723,2037,3875,1950, 212, // 3062\\n 266, 152, 149, 468,1898,4066,4302,  77, 187,7330,3018,  37,   5,2972,7331,3876, // 3078\\n7332,7333,  39,2517,4303,2894,3177,2078,  55, 148,  74,4304, 545, 483,1474,1029, // 3094\\n1665, 217,1869,1531,3113,1104,2645,4067,  24, 172,3507, 900,3877,3508,3509,4305, // 3110\\n  32,1408,2811,1312, 329, 487,2355,2247,2708, 784,2674,   4,3019,3314,1427,1788, // 3126\\n 188, 109, 499,7334,3620,1717,1789, 888,1217,3020,4306,7335,3510,7336,3315,1520, // 3142\\n3621,3878, 196,1034, 775,7337,7338, 929,1815, 249, 439,  38,7339,1063,7340, 794, // 3158\\n3879,1435,2296,  46, 178,3245,2065,7341,2376,7342, 214,1709,4307, 804,  35, 707, // 3174\\n 324,3622,1601,2546, 140, 459,4068,7343,7344,1365, 839, 272, 978,2257,2572,3409, // 3190\\n2128,1363,3623,1423, 697, 100,3071,  48,  70,1231, 495,3114,2193,7345,1294,7346, // 3206\\n2079, 462, 586,1042,3246, 853, 256, 988, 185,2377,3410,1698, 434,1084,7347,3411, // 3222\\n 314,2615,2775,4308,2330,2331, 569,2280, 637,1816,2518, 757,1162,1878,1616,3412, // 3238\\n 287,1577,2115, 768,4309,1671,2854,3511,2519,1321,3737, 909,2413,7348,4069, 933, // 3254\\n3738,7349,2052,2356,1222,4310, 765,2414,1322, 786,4311,7350,1919,1462,1677,2895, // 3270\\n1699,7351,4312,1424,2437,3115,3624,2590,3316,1774,1940,3413,3880,4070, 309,1369, // 3286\\n1130,2812, 364,2230,1653,1299,3881,3512,3882,3883,2646, 525,1085,3021, 902,2000, // 3302\\n1475, 964,4313, 421,1844,1415,1057,2281, 940,1364,3116, 376,4314,4315,1381,   7, // 3318\\n2520, 983,2378, 336,1710,2675,1845, 321,3414, 559,1131,3022,2742,1808,1132,1313, // 3334\\n 265,1481,1857,7352, 352,1203,2813,3247, 167,1089, 420,2814, 776, 792,1724,3513, // 3350\\n4071,2438,3248,7353,4072,7354, 446, 229, 333,2743, 901,3739,1200,1557,4316,2647, // 3366\\n1920, 395,2744,2676,3740,4073,1835, 125, 916,3178,2616,4317,7355,7356,3741,7357, // 3382\\n7358,7359,4318,3117,3625,1133,2547,1757,3415,1510,2313,1409,3514,7360,2145, 438, // 3398\\n2591,2896,2379,3317,1068, 958,3023, 461, 311,2855,2677,4074,1915,3179,4075,1978, // 3414\\n 383, 750,2745,2617,4076, 274, 539, 385,1278,1442,7361,1154,1964, 384, 561, 210, // 3430\\n  98,1295,2548,3515,7362,1711,2415,1482,3416,3884,2897,1257, 129,7363,3742, 642, // 3446\\n 523,2776,2777,2648,7364, 141,2231,1333,  68, 176, 441, 876, 907,4077, 603,2592, // 3462\\n 710, 171,3417, 404, 549,  18,3118,2393,1410,3626,1666,7365,3516,4319,2898,4320, // 3478\\n7366,2973, 368,7367, 146, 366,  99, 871,3627,1543, 748, 807,1586,1185,  22,2258, // 3494\\n 379,3743,3180,7368,3181, 505,1941,2618,1991,1382,2314,7369, 380,2357, 218, 702, // 3510\\n1817,1248,3418,3024,3517,3318,3249,7370,2974,3628, 930,3250,3744,7371,  59,7372, // 3526\\n 585, 601,4078, 497,3419,1112,1314,4321,1801,7373,1223,1472,2174,7374, 749,1836, // 3542\\n 690,1899,3745,1772,3885,1476, 429,1043,1790,2232,2116, 917,4079, 447,1086,1629, // 3558\\n7375, 556,7376,7377,2020,1654, 844,1090, 105, 550, 966,1758,2815,1008,1782, 686, // 3574\\n1095,7378,2282, 793,1602,7379,3518,2593,4322,4080,2933,2297,4323,3746, 980,2496, // 3590\\n 544, 353, 527,4324, 908,2678,2899,7380, 381,2619,1942,1348,7381,1341,1252, 560, // 3606\\n3072,7382,3420,2856,7383,2053, 973, 886,2080, 143,4325,7384,7385, 157,3886, 496, // 3622\\n4081,  57, 840, 540,2038,4326,4327,3421,2117,1445, 970,2259,1748,1965,2081,4082, // 3638\\n3119,1234,1775,3251,2816,3629, 773,1206,2129,1066,2039,1326,3887,1738,1725,4083, // 3654\\n 279,3120,  51,1544,2594, 423,1578,2130,2066, 173,4328,1879,7386,7387,1583, 264, // 3670\\n 610,3630,4329,2439, 280, 154,7388,7389,7390,1739, 338,1282,3073, 693,2857,1411, // 3686\\n1074,3747,2440,7391,4330,7392,7393,1240, 952,2394,7394,2900,1538,2679, 685,1483, // 3702\\n4084,2468,1436, 953,4085,2054,4331, 671,2395,  79,4086,2441,3252, 608, 567,2680, // 3718\\n3422,4087,4088,1691, 393,1261,1791,2396,7395,4332,7396,7397,7398,7399,1383,1672, // 3734\\n3748,3182,1464, 522,1119, 661,1150, 216, 675,4333,3888,1432,3519, 609,4334,2681, // 3750\\n2397,7400,7401,7402,4089,3025,   0,7403,2469, 315, 231,2442, 301,3319,4335,2380, // 3766\\n7404, 233,4090,3631,1818,4336,4337,7405,  96,1776,1315,2082,7406, 257,7407,1809, // 3782\\n3632,2709,1139,1819,4091,2021,1124,2163,2778,1777,2649,7408,3074, 363,1655,3183, // 3798\\n7409,2975,7410,7411,7412,3889,1567,3890, 718, 103,3184, 849,1443, 341,3320,2934, // 3814\\n1484,7413,1712, 127,  67, 339,4092,2398, 679,1412, 821,7414,7415, 834, 738, 351, // 3830\\n2976,2146, 846, 235,1497,1880, 418,1992,3749,2710, 186,1100,2147,2746,3520,1545, // 3846\\n1355,2935,2858,1377, 583,3891,4093,2573,2977,7416,1298,3633,1078,2549,3634,2358, // 3862\\n  78,3750,3751, 267,1289,2099,2001,1594,4094, 348, 369,1274,2194,2175,1837,4338, // 3878\\n1820,2817,3635,2747,2283,2002,4339,2936,2748, 144,3321, 882,4340,3892,2749,3423, // 3894\\n4341,2901,7417,4095,1726, 320,7418,3893,3026, 788,2978,7419,2818,1773,1327,2859, // 3910\\n3894,2819,7420,1306,4342,2003,1700,3752,3521,2359,2650, 787,2022, 506, 824,3636, // 3926\\n 534, 323,4343,1044,3322,2023,1900, 946,3424,7421,1778,1500,1678,7422,1881,4344, // 3942\\n 165, 243,4345,3637,2521, 123, 683,4096, 764,4346,  36,3895,1792, 589,2902, 816, // 3958\\n 626,1667,3027,2233,1639,1555,1622,3753,3896,7423,3897,2860,1370,1228,1932, 891, // 3974\\n2083,2903, 304,4097,7424, 292,2979,2711,3522, 691,2100,4098,1115,4347, 118, 662, // 3990\\n7425, 611,1156, 854,2381,1316,2861,   2, 386, 515,2904,7426,7427,3253, 868,2234, // 4006\\n1486, 855,2651, 785,2212,3028,7428,1040,3185,3523,7429,3121, 448,7430,1525,7431, // 4022\\n2164,4348,7432,3754,7433,4099,2820,3524,3122, 503, 818,3898,3123,1568, 814, 676, // 4038\\n1444, 306,1749,7434,3755,1416,1030, 197,1428, 805,2821,1501,4349,7435,7436,7437, // 4054\\n1993,7438,4350,7439,7440,2195,  13,2779,3638,2980,3124,1229,1916,7441,3756,2131, // 4070\\n7442,4100,4351,2399,3525,7443,2213,1511,1727,1120,7444,7445, 646,3757,2443, 307, // 4086\\n7446,7447,1595,3186,7448,7449,7450,3639,1113,1356,3899,1465,2522,2523,7451, 519, // 4102\\n7452, 128,2132,  92,2284,1979,7453,3900,1512, 342,3125,2196,7454,2780,2214,1980, // 4118\\n3323,7455, 290,1656,1317, 789, 827,2360,7456,3758,4352, 562, 581,3901,7457, 401, // 4134\\n4353,2248,  94,4354,1399,2781,7458,1463,2024,4355,3187,1943,7459, 828,1105,4101, // 4150\\n1262,1394,7460,4102, 605,4356,7461,1783,2862,7462,2822, 819,2101, 578,2197,2937, // 4166\\n7463,1502, 436,3254,4103,3255,2823,3902,2905,3425,3426,7464,2712,2315,7465,7466, // 4182\\n2332,2067,  23,4357, 193, 826,3759,2102, 699,1630,4104,3075, 390,1793,1064,3526, // 4198\\n7467,1579,3076,3077,1400,7468,4105,1838,1640,2863,7469,4358,4359, 137,4106, 598, // 4214\\n3078,1966, 780, 104, 974,2938,7470, 278, 899, 253, 402, 572, 504, 493,1339,7471, // 4230\\n3903,1275,4360,2574,2550,7472,3640,3029,3079,2249, 565,1334,2713, 863,  41,7473, // 4246\\n7474,4361,7475,1657,2333,  19, 463,2750,4107, 606,7476,2981,3256,1087,2084,1323, // 4262\\n2652,2982,7477,1631,1623,1750,4108,2682,7478,2864, 791,2714,2653,2334, 232,2416, // 4278\\n7479,2983,1498,7480,2654,2620, 755,1366,3641,3257,3126,2025,1609, 119,1917,3427, // 4294\\n 862,1026,4109,7481,3904,3760,4362,3905,4363,2260,1951,2470,7482,1125, 817,4110, // 4310\\n4111,3906,1513,1766,2040,1487,4112,3030,3258,2824,3761,3127,7483,7484,1507,7485, // 4326\\n2683, 733,  40,1632,1106,2865, 345,4113, 841,2524, 230,4364,2984,1846,3259,3428, // 4342\\n7486,1263, 986,3429,7487, 735, 879, 254,1137, 857, 622,1300,1180,1388,1562,3907, // 4358\\n3908,2939, 967,2751,2655,1349, 592,2133,1692,3324,2985,1994,4114,1679,3909,1901, // 4374\\n2185,7488, 739,3642,2715,1296,1290,7489,4115,2198,2199,1921,1563,2595,2551,1870, // 4390\\n2752,2986,7490, 435,7491, 343,1108, 596,  17,1751,4365,2235,3430,3643,7492,4366, // 4406\\n 294,3527,2940,1693, 477, 979, 281,2041,3528, 643,2042,3644,2621,2782,2261,1031, // 4422\\n2335,2134,2298,3529,4367, 367,1249,2552,7493,3530,7494,4368,1283,3325,2004, 240, // 4438\\n1762,3326,4369,4370, 836,1069,3128, 474,7495,2148,2525, 268,3531,7496,3188,1521, // 4454\\n1284,7497,1658,1546,4116,7498,3532,3533,7499,4117,3327,2684,1685,4118, 961,1673, // 4470\\n2622, 190,2005,2200,3762,4371,4372,7500, 570,2497,3645,1490,7501,4373,2623,3260, // 4486\\n1956,4374, 584,1514, 396,1045,1944,7502,4375,1967,2444,7503,7504,4376,3910, 619, // 4502\\n7505,3129,3261, 215,2006,2783,2553,3189,4377,3190,4378, 763,4119,3763,4379,7506, // 4518\\n7507,1957,1767,2941,3328,3646,1174, 452,1477,4380,3329,3130,7508,2825,1253,2382, // 4534\\n2186,1091,2285,4120, 492,7509, 638,1169,1824,2135,1752,3911, 648, 926,1021,1324, // 4550\\n4381, 520,4382, 997, 847,1007, 892,4383,3764,2262,1871,3647,7510,2400,1784,4384, // 4566\\n1952,2942,3080,3191,1728,4121,2043,3648,4385,2007,1701,3131,1551,  30,2263,4122, // 4582\\n7511,2026,4386,3534,7512, 501,7513,4123, 594,3431,2165,1821,3535,3432,3536,3192, // 4598\\n 829,2826,4124,7514,1680,3132,1225,4125,7515,3262,4387,4126,3133,2336,7516,4388, // 4614\\n4127,7517,3912,3913,7518,1847,2383,2596,3330,7519,4389, 374,3914, 652,4128,4129, // 4630\\n 375,1140, 798,7520,7521,7522,2361,4390,2264, 546,1659, 138,3031,2445,4391,7523, // 4646\\n2250, 612,1848, 910, 796,3765,1740,1371, 825,3766,3767,7524,2906,2554,7525, 692, // 4662\\n 444,3032,2624, 801,4392,4130,7526,1491, 244,1053,3033,4131,4132, 340,7527,3915, // 4678\\n1041,2987, 293,1168,  87,1357,7528,1539, 959,7529,2236, 721, 694,4133,3768, 219, // 4694\\n1478, 644,1417,3331,2656,1413,1401,1335,1389,3916,7530,7531,2988,2362,3134,1825, // 4710\\n 730,1515, 184,2827,  66,4393,7532,1660,2943, 246,3332, 378,1457, 226,3433, 975, // 4726\\n3917,2944,1264,3537, 674, 696,7533, 163,7534,1141,2417,2166, 713,3538,3333,4394, // 4742\\n3918,7535,7536,1186,  15,7537,1079,1070,7538,1522,3193,3539, 276,1050,2716, 758, // 4758\\n1126, 653,2945,3263,7539,2337, 889,3540,3919,3081,2989, 903,1250,4395,3920,3434, // 4774\\n3541,1342,1681,1718, 766,3264, 286,  89,2946,3649,7540,1713,7541,2597,3334,2990, // 4790\\n7542,2947,2215,3194,2866,7543,4396,2498,2526, 181, 387,1075,3921, 731,2187,3335, // 4806\\n7544,3265, 310, 313,3435,2299, 770,4134,  54,3034, 189,4397,3082,3769,3922,7545, // 4822\\n1230,1617,1849, 355,3542,4135,4398,3336, 111,4136,3650,1350,3135,3436,3035,4137, // 4838\\n2149,3266,3543,7546,2784,3923,3924,2991, 722,2008,7547,1071, 247,1207,2338,2471, // 4854\\n1378,4399,2009, 864,1437,1214,4400, 373,3770,1142,2216, 667,4401, 442,2753,2555, // 4870\\n3771,3925,1968,4138,3267,1839, 837, 170,1107, 934,1336,1882,7548,7549,2118,4139, // 4886\\n2828, 743,1569,7550,4402,4140, 582,2384,1418,3437,7551,1802,7552, 357,1395,1729, // 4902\\n3651,3268,2418,1564,2237,7553,3083,3772,1633,4403,1114,2085,4141,1532,7554, 482, // 4918\\n2446,4404,7555,7556,1492, 833,1466,7557,2717,3544,1641,2829,7558,1526,1272,3652, // 4934\\n4142,1686,1794, 416,2556,1902,1953,1803,7559,3773,2785,3774,1159,2316,7560,2867, // 4950\\n4405,1610,1584,3036,2419,2754, 443,3269,1163,3136,7561,7562,3926,7563,4143,2499, // 4966\\n3037,4406,3927,3137,2103,1647,3545,2010,1872,4144,7564,4145, 431,3438,7565, 250, // 4982\\n  97,  81,4146,7566,1648,1850,1558, 160, 848,7567, 866, 740,1694,7568,2201,2830, // 4998\\n3195,4147,4407,3653,1687, 950,2472, 426, 469,3196,3654,3655,3928,7569,7570,1188, // 5014\\n 424,1995, 861,3546,4148,3775,2202,2685, 168,1235,3547,4149,7571,2086,1674,4408, // 5030\\n3337,3270, 220,2557,1009,7572,3776, 670,2992, 332,1208, 717,7573,7574,3548,2447, // 5046\\n3929,3338,7575, 513,7576,1209,2868,3339,3138,4409,1080,7577,7578,7579,7580,2527, // 5062\\n3656,3549, 815,1587,3930,3931,7581,3550,3439,3777,1254,4410,1328,3038,1390,3932, // 5078\\n1741,3933,3778,3934,7582, 236,3779,2448,3271,7583,7584,3657,3780,1273,3781,4411, // 5094\\n7585, 308,7586,4412, 245,4413,1851,2473,1307,2575, 430, 715,2136,2449,7587, 270, // 5110\\n 199,2869,3935,7588,3551,2718,1753, 761,1754, 725,1661,1840,4414,3440,3658,7589, // 5126\\n7590, 587,  14,3272, 227,2598, 326, 480,2265, 943,2755,3552, 291, 650,1883,7591, // 5142\\n1702,1226, 102,1547,  62,3441, 904,4415,3442,1164,4150,7592,7593,1224,1548,2756, // 5158\\n 391, 498,1493,7594,1386,1419,7595,2055,1177,4416, 813, 880,1081,2363, 566,1145, // 5174\\n4417,2286,1001,1035,2558,2599,2238, 394,1286,7596,7597,2068,7598,  86,1494,1730, // 5190\\n3936, 491,1588, 745, 897,2948, 843,3340,3937,2757,2870,3273,1768, 998,2217,2069, // 5206\\n 397,1826,1195,1969,3659,2993,3341, 284,7599,3782,2500,2137,2119,1903,7600,3938, // 5222\\n2150,3939,4151,1036,3443,1904, 114,2559,4152, 209,1527,7601,7602,2949,2831,2625, // 5238\\n2385,2719,3139, 812,2560,7603,3274,7604,1559, 737,1884,3660,1210, 885,  28,2686, // 5254\\n3553,3783,7605,4153,1004,1779,4418,7606, 346,1981,2218,2687,4419,3784,1742, 797, // 5270\\n1642,3940,1933,1072,1384,2151, 896,3941,3275,3661,3197,2871,3554,7607,2561,1958, // 5286\\n4420,2450,1785,7608,7609,7610,3942,4154,1005,1308,3662,4155,2720,4421,4422,1528, // 5302\\n2600, 161,1178,4156,1982, 987,4423,1101,4157, 631,3943,1157,3198,2420,1343,1241, // 5318\\n1016,2239,2562, 372, 877,2339,2501,1160, 555,1934, 911,3944,7611, 466,1170, 169, // 5334\\n1051,2907,2688,3663,2474,2994,1182,2011,2563,1251,2626,7612, 992,2340,3444,1540, // 5350\\n2721,1201,2070,2401,1996,2475,7613,4424, 528,1922,2188,1503,1873,1570,2364,3342, // 5366\\n3276,7614, 557,1073,7615,1827,3445,2087,2266,3140,3039,3084, 767,3085,2786,4425, // 5382\\n1006,4158,4426,2341,1267,2176,3664,3199, 778,3945,3200,2722,1597,2657,7616,4427, // 5398\\n7617,3446,7618,7619,7620,3277,2689,1433,3278, 131,  95,1504,3946, 723,4159,3141, // 5414\\n1841,3555,2758,2189,3947,2027,2104,3665,7621,2995,3948,1218,7622,3343,3201,3949, // 5430\\n4160,2576, 248,1634,3785, 912,7623,2832,3666,3040,3786, 654,  53,7624,2996,7625, // 5446\\n1688,4428, 777,3447,1032,3950,1425,7626, 191, 820,2120,2833, 971,4429, 931,3202, // 5462\\n 135, 664, 783,3787,1997, 772,2908,1935,3951,3788,4430,2909,3203, 282,2723, 640, // 5478\\n1372,3448,1127, 922, 325,3344,7627,7628, 711,2044,7629,7630,3952,2219,2787,1936, // 5494\\n3953,3345,2220,2251,3789,2300,7631,4431,3790,1258,3279,3954,3204,2138,2950,3955, // 5510\\n3956,7632,2221, 258,3205,4432, 101,1227,7633,3280,1755,7634,1391,3281,7635,2910, // 5526\\n2056, 893,7636,7637,7638,1402,4161,2342,7639,7640,3206,3556,7641,7642, 878,1325, // 5542\\n1780,2788,4433, 259,1385,2577, 744,1183,2267,4434,7643,3957,2502,7644, 684,1024, // 5558\\n4162,7645, 472,3557,3449,1165,3282,3958,3959, 322,2152, 881, 455,1695,1152,1340, // 5574\\n 660, 554,2153,4435,1058,4436,4163, 830,1065,3346,3960,4437,1923,7646,1703,1918, // 5590\\n7647, 932,2268, 122,7648,4438, 947, 677,7649,3791,2627, 297,1905,1924,2269,4439, // 5606\\n2317,3283,7650,7651,4164,7652,4165,  84,4166, 112, 989,7653, 547,1059,3961, 701, // 5622\\n3558,1019,7654,4167,7655,3450, 942, 639, 457,2301,2451, 993,2951, 407, 851, 494, // 5638\\n4440,3347, 927,7656,1237,7657,2421,3348, 573,4168, 680, 921,2911,1279,1874, 285, // 5654\\n 790,1448,1983, 719,2167,7658,7659,4441,3962,3963,1649,7660,1541, 563,7661,1077, // 5670\\n7662,3349,3041,3451, 511,2997,3964,3965,3667,3966,1268,2564,3350,3207,4442,4443, // 5686\\n7663, 535,1048,1276,1189,2912,2028,3142,1438,1373,2834,2952,1134,2012,7664,4169, // 5702\\n1238,2578,3086,1259,7665, 700,7666,2953,3143,3668,4170,7667,4171,1146,1875,1906, // 5718\\n4444,2601,3967, 781,2422, 132,1589, 203, 147, 273,2789,2402, 898,1786,2154,3968, // 5734\\n3969,7668,3792,2790,7669,7670,4445,4446,7671,3208,7672,1635,3793, 965,7673,1804, // 5750\\n2690,1516,3559,1121,1082,1329,3284,3970,1449,3794,  65,1128,2835,2913,2759,1590, // 5766\\n3795,7674,7675,  12,2658,  45, 976,2579,3144,4447, 517,2528,1013,1037,3209,7676, // 5782\\n3796,2836,7677,3797,7678,3452,7679,2602, 614,1998,2318,3798,3087,2724,2628,7680, // 5798\\n2580,4172, 599,1269,7681,1810,3669,7682,2691,3088, 759,1060, 489,1805,3351,3285, // 5814\\n1358,7683,7684,2386,1387,1215,2629,2252, 490,7685,7686,4173,1759,2387,2343,7687, // 5830\\n4448,3799,1907,3971,2630,1806,3210,4449,3453,3286,2760,2344, 874,7688,7689,3454, // 5846\\n3670,1858,  91,2914,3671,3042,3800,4450,7690,3145,3972,2659,7691,3455,1202,1403, // 5862\\n3801,2954,2529,1517,2503,4451,3456,2504,7692,4452,7693,2692,1885,1495,1731,3973, // 5878\\n2365,4453,7694,2029,7695,7696,3974,2693,1216, 237,2581,4174,2319,3975,3802,4454, // 5894\\n4455,2694,3560,3457, 445,4456,7697,7698,7699,7700,2761,  61,3976,3672,1822,3977, // 5910\\n7701, 687,2045, 935, 925, 405,2660, 703,1096,1859,2725,4457,3978,1876,1367,2695, // 5926\\n3352, 918,2105,1781,2476, 334,3287,1611,1093,4458, 564,3146,3458,3673,3353, 945, // 5942\\n2631,2057,4459,7702,1925, 872,4175,7703,3459,2696,3089, 349,4176,3674,3979,4460, // 5958\\n3803,4177,3675,2155,3980,4461,4462,4178,4463,2403,2046, 782,3981, 400, 251,4179, // 5974\\n1624,7704,7705, 277,3676, 299,1265, 476,1191,3804,2121,4180,4181,1109, 205,7706, // 5990\\n2582,1000,2156,3561,1860,7707,7708,7709,4464,7710,4465,2565, 107,2477,2157,3982, // 6006\\n3460,3147,7711,1533, 541,1301, 158, 753,4182,2872,3562,7712,1696, 370,1088,4183, // 6022\\n4466,3563, 579, 327, 440, 162,2240, 269,1937,1374,3461, 968,3043,  56,1396,3090, // 6038\\n2106,3288,3354,7713,1926,2158,4467,2998,7714,3564,7715,7716,3677,4468,2478,7717, // 6054\\n2791,7718,1650,4469,7719,2603,7720,7721,3983,2661,3355,1149,3356,3984,3805,3985, // 6070\\n7722,1076,  49,7723, 951,3211,3289,3290, 450,2837, 920,7724,1811,2792,2366,4184, // 6086\\n1908,1138,2367,3806,3462,7725,3212,4470,1909,1147,1518,2423,4471,3807,7726,4472, // 6102\\n2388,2604, 260,1795,3213,7727,7728,3808,3291, 708,7729,3565,1704,7730,3566,1351, // 6118\\n1618,3357,2999,1886, 944,4185,3358,4186,3044,3359,4187,7731,3678, 422, 413,1714, // 6134\\n3292, 500,2058,2345,4188,2479,7732,1344,1910, 954,7733,1668,7734,7735,3986,2404, // 6150\\n4189,3567,3809,4190,7736,2302,1318,2505,3091, 133,3092,2873,4473, 629,  31,2838, // 6166\\n2697,3810,4474, 850, 949,4475,3987,2955,1732,2088,4191,1496,1852,7737,3988, 620, // 6182\\n3214, 981,1242,3679,3360,1619,3680,1643,3293,2139,2452,1970,1719,3463,2168,7738, // 6198\\n3215,7739,7740,3361,1828,7741,1277,4476,1565,2047,7742,1636,3568,3093,7743, 869, // 6214\\n2839, 655,3811,3812,3094,3989,3000,3813,1310,3569,4477,7744,7745,7746,1733, 558, // 6230\\n4478,3681, 335,1549,3045,1756,4192,3682,1945,3464,1829,1291,1192, 470,2726,2107, // 6246\\n2793, 913,1054,3990,7747,1027,7748,3046,3991,4479, 982,2662,3362,3148,3465,3216, // 6262\\n3217,1946,2794,7749, 571,4480,7750,1830,7751,3570,2583,1523,2424,7752,2089, 984, // 6278\\n4481,3683,1959,7753,3684, 852, 923,2795,3466,3685, 969,1519, 999,2048,2320,1705, // 6294\\n7754,3095, 615,1662, 151, 597,3992,2405,2321,1049, 275,4482,3686,4193, 568,3687, // 6310\\n3571,2480,4194,3688,7755,2425,2270, 409,3218,7756,1566,2874,3467,1002, 769,2840, // 6326\\n 194,2090,3149,3689,2222,3294,4195, 628,1505,7757,7758,1763,2177,3001,3993, 521, // 6342\\n1161,2584,1787,2203,2406,4483,3994,1625,4196,4197, 412,  42,3096, 464,7759,2632, // 6358\\n4484,3363,1760,1571,2875,3468,2530,1219,2204,3814,2633,2140,2368,4485,4486,3295, // 6374\\n1651,3364,3572,7760,7761,3573,2481,3469,7762,3690,7763,7764,2271,2091, 460,7765, // 6390\\n4487,7766,3002, 962, 588,3574, 289,3219,2634,1116,  52,7767,3047,1796,7768,7769, // 6406\\n7770,1467,7771,1598,1143,3691,4198,1984,1734,1067,4488,1280,3365, 465,4489,1572, // 6422\\n 510,7772,1927,2241,1812,1644,3575,7773,4490,3692,7774,7775,2663,1573,1534,7776, // 6438\\n7777,4199, 536,1807,1761,3470,3815,3150,2635,7778,7779,7780,4491,3471,2915,1911, // 6454\\n2796,7781,3296,1122, 377,3220,7782, 360,7783,7784,4200,1529, 551,7785,2059,3693, // 6470\\n1769,2426,7786,2916,4201,3297,3097,2322,2108,2030,4492,1404, 136,1468,1479, 672, // 6486\\n1171,3221,2303, 271,3151,7787,2762,7788,2049, 678,2727, 865,1947,4493,7789,2013, // 6502\\n3995,2956,7790,2728,2223,1397,3048,3694,4494,4495,1735,2917,3366,3576,7791,3816, // 6518\\n 509,2841,2453,2876,3817,7792,7793,3152,3153,4496,4202,2531,4497,2304,1166,1010, // 6534\\n 552, 681,1887,7794,7795,2957,2958,3996,1287,1596,1861,3154, 358, 453, 736, 175, // 6550\\n 478,1117, 905,1167,1097,7796,1853,1530,7797,1706,7798,2178,3472,2287,3695,3473, // 6566\\n3577,4203,2092,4204,7799,3367,1193,2482,4205,1458,2190,2205,1862,1888,1421,3298, // 6582\\n2918,3049,2179,3474, 595,2122,7800,3997,7801,7802,4206,1707,2636, 223,3696,1359, // 6598\\n 751,3098, 183,3475,7803,2797,3003, 419,2369, 633, 704,3818,2389, 241,7804,7805, // 6614\\n7806, 838,3004,3697,2272,2763,2454,3819,1938,2050,3998,1309,3099,2242,1181,7807, // 6630\\n1136,2206,3820,2370,1446,4207,2305,4498,7808,7809,4208,1055,2605, 484,3698,7810, // 6646\\n3999, 625,4209,2273,3368,1499,4210,4000,7811,4001,4211,3222,2274,2275,3476,7812, // 6662\\n7813,2764, 808,2606,3699,3369,4002,4212,3100,2532, 526,3370,3821,4213, 955,7814, // 6678\\n1620,4214,2637,2427,7815,1429,3700,1669,1831, 994, 928,7816,3578,1260,7817,7818, // 6694\\n7819,1948,2288, 741,2919,1626,4215,2729,2455, 867,1184, 362,3371,1392,7820,7821, // 6710\\n4003,4216,1770,1736,3223,2920,4499,4500,1928,2698,1459,1158,7822,3050,3372,2877, // 6726\\n1292,1929,2506,2842,3701,1985,1187,2071,2014,2607,4217,7823,2566,2507,2169,3702, // 6742\\n2483,3299,7824,3703,4501,7825,7826, 666,1003,3005,1022,3579,4218,7827,4502,1813, // 6758\\n2253, 574,3822,1603, 295,1535, 705,3823,4219, 283, 858, 417,7828,7829,3224,4503, // 6774\\n4504,3051,1220,1889,1046,2276,2456,4004,1393,1599, 689,2567, 388,4220,7830,2484, // 6790\\n 802,7831,2798,3824,2060,1405,2254,7832,4505,3825,2109,1052,1345,3225,1585,7833, // 6806\\n 809,7834,7835,7836, 575,2730,3477, 956,1552,1469,1144,2323,7837,2324,1560,2457, // 6822\\n3580,3226,4005, 616,2207,3155,2180,2289,7838,1832,7839,3478,4506,7840,1319,3704, // 6838\\n3705,1211,3581,1023,3227,1293,2799,7841,7842,7843,3826, 607,2306,3827, 762,2878, // 6854\\n1439,4221,1360,7844,1485,3052,7845,4507,1038,4222,1450,2061,2638,4223,1379,4508, // 6870\\n2585,7846,7847,4224,1352,1414,2325,2921,1172,7848,7849,3828,3829,7850,1797,1451, // 6886\\n7851,7852,7853,7854,2922,4006,4007,2485,2346, 411,4008,4009,3582,3300,3101,4509, // 6902\\n1561,2664,1452,4010,1375,7855,7856,  47,2959, 316,7857,1406,1591,2923,3156,7858, // 6918\\n1025,2141,3102,3157, 354,2731, 884,2224,4225,2407, 508,3706, 726,3583, 996,2428, // 6934\\n3584, 729,7859, 392,2191,1453,4011,4510,3707,7860,7861,2458,3585,2608,1675,2800, // 6950\\n 919,2347,2960,2348,1270,4511,4012,  73,7862,7863, 647,7864,3228,2843,2255,1550, // 6966\\n1346,3006,7865,1332, 883,3479,7866,7867,7868,7869,3301,2765,7870,1212, 831,1347, // 6982\\n4226,4512,2326,3830,1863,3053, 720,3831,4513,4514,3832,7871,4227,7872,7873,4515, // 6998\\n7874,7875,1798,4516,3708,2609,4517,3586,1645,2371,7876,7877,2924, 669,2208,2665, // 7014\\n2429,7878,2879,7879,7880,1028,3229,7881,4228,2408,7882,2256,1353,7883,7884,4518, // 7030\\n3158, 518,7885,4013,7886,4229,1960,7887,2142,4230,7888,7889,3007,2349,2350,3833, // 7046\\n 516,1833,1454,4014,2699,4231,4519,2225,2610,1971,1129,3587,7890,2766,7891,2961, // 7062\\n1422, 577,1470,3008,1524,3373,7892,7893, 432,4232,3054,3480,7894,2586,1455,2508, // 7078\\n2226,1972,1175,7895,1020,2732,4015,3481,4520,7896,2733,7897,1743,1361,3055,3482, // 7094\\n2639,4016,4233,4521,2290, 895, 924,4234,2170, 331,2243,3056, 166,1627,3057,1098, // 7110\\n7898,1232,2880,2227,3374,4522, 657, 403,1196,2372, 542,3709,3375,1600,4235,3483, // 7126\\n7899,4523,2767,3230, 576, 530,1362,7900,4524,2533,2666,3710,4017,7901, 842,3834, // 7142\\n7902,2801,2031,1014,4018, 213,2700,3376, 665, 621,4236,7903,3711,2925,2430,7904, // 7158\\n2431,3302,3588,3377,7905,4237,2534,4238,4525,3589,1682,4239,3484,1380,7906, 724, // 7174\\n2277, 600,1670,7907,1337,1233,4526,3103,2244,7908,1621,4527,7909, 651,4240,7910, // 7190\\n1612,4241,2611,7911,2844,7912,2734,2307,3058,7913, 716,2459,3059, 174,1255,2701, // 7206\\n4019,3590, 548,1320,1398, 728,4020,1574,7914,1890,1197,3060,4021,7915,3061,3062, // 7222\\n3712,3591,3713, 747,7916, 635,4242,4528,7917,7918,7919,4243,7920,7921,4529,7922, // 7238\\n3378,4530,2432, 451,7923,3714,2535,2072,4244,2735,4245,4022,7924,1764,4531,7925, // 7254\\n4246, 350,7926,2278,2390,2486,7927,4247,4023,2245,1434,4024, 488,4532, 458,4248, // 7270\\n4025,3715, 771,1330,2391,3835,2568,3159,2159,2409,1553,2667,3160,4249,7928,2487, // 7286\\n2881,2612,1720,2702,4250,3379,4533,7929,2536,4251,7930,3231,4252,2768,7931,2015, // 7302\\n2736,7932,1155,1017,3716,3836,7933,3303,2308, 201,1864,4253,1430,7934,4026,7935, // 7318\\n7936,7937,7938,7939,4254,1604,7940, 414,1865, 371,2587,4534,4535,3485,2016,3104, // 7334\\n4536,1708, 960,4255, 887, 389,2171,1536,1663,1721,7941,2228,4027,2351,2926,1580, // 7350\\n7942,7943,7944,1744,7945,2537,4537,4538,7946,4539,7947,2073,7948,7949,3592,3380, // 7366\\n2882,4256,7950,4257,2640,3381,2802, 673,2703,2460, 709,3486,4028,3593,4258,7951, // 7382\\n1148, 502, 634,7952,7953,1204,4540,3594,1575,4541,2613,3717,7954,3718,3105, 948, // 7398\\n3232, 121,1745,3837,1110,7955,4259,3063,2509,3009,4029,3719,1151,1771,3838,1488, // 7414\\n4030,1986,7956,2433,3487,7957,7958,2093,7959,4260,3839,1213,1407,2803, 531,2737, // 7430\\n2538,3233,1011,1537,7960,2769,4261,3106,1061,7961,3720,3721,1866,2883,7962,2017, // 7446\\n 120,4262,4263,2062,3595,3234,2309,3840,2668,3382,1954,4542,7963,7964,3488,1047, // 7462\\n2704,1266,7965,1368,4543,2845, 649,3383,3841,2539,2738,1102,2846,2669,7966,7967, // 7478\\n1999,7968,1111,3596,2962,7969,2488,3842,3597,2804,1854,3384,3722,7970,7971,3385, // 7494\\n2410,2884,3304,3235,3598,7972,2569,7973,3599,2805,4031,1460, 856,7974,3600,7975, // 7510\\n2885,2963,7976,2886,3843,7977,4264, 632,2510, 875,3844,1697,3845,2291,7978,7979, // 7526\\n4544,3010,1239, 580,4545,4265,7980, 914, 936,2074,1190,4032,1039,2123,7981,7982, // 7542\\n7983,3386,1473,7984,1354,4266,3846,7985,2172,3064,4033, 915,3305,4267,4268,3306, // 7558\\n1605,1834,7986,2739, 398,3601,4269,3847,4034, 328,1912,2847,4035,3848,1331,4270, // 7574\\n3011, 937,4271,7987,3602,4036,4037,3387,2160,4546,3388, 524, 742, 538,3065,1012, // 7590\\n7988,7989,3849,2461,7990, 658,1103, 225,3850,7991,7992,4547,7993,4548,7994,3236, // 7606\\n1243,7995,4038, 963,2246,4549,7996,2705,3603,3161,7997,7998,2588,2327,7999,4550, // 7622\\n8000,8001,8002,3489,3307, 957,3389,2540,2032,1930,2927,2462, 870,2018,3604,1746, // 7638\\n2770,2771,2434,2463,8003,3851,8004,3723,3107,3724,3490,3390,3725,8005,1179,3066, // 7654\\n8006,3162,2373,4272,3726,2541,3163,3108,2740,4039,8007,3391,1556,2542,2292, 977, // 7670\\n2887,2033,4040,1205,3392,8008,1765,3393,3164,2124,1271,1689, 714,4551,3491,8009, // 7686\\n2328,3852, 533,4273,3605,2181, 617,8010,2464,3308,3492,2310,8011,8012,3165,8013, // 7702\\n8014,3853,1987, 618, 427,2641,3493,3394,8015,8016,1244,1690,8017,2806,4274,4552, // 7718\\n8018,3494,8019,8020,2279,1576, 473,3606,4275,3395, 972,8021,3607,8022,3067,8023, // 7734\\n8024,4553,4554,8025,3727,4041,4042,8026, 153,4555, 356,8027,1891,2888,4276,2143, // 7750\\n 408, 803,2352,8028,3854,8029,4277,1646,2570,2511,4556,4557,3855,8030,3856,4278, // 7766\\n8031,2411,3396, 752,8032,8033,1961,2964,8034, 746,3012,2465,8035,4279,3728, 698, // 7782\\n4558,1892,4280,3608,2543,4559,3609,3857,8036,3166,3397,8037,1823,1302,4043,2706, // 7798\\n3858,1973,4281,8038,4282,3167, 823,1303,1288,1236,2848,3495,4044,3398, 774,3859, // 7814\\n8039,1581,4560,1304,2849,3860,4561,8040,2435,2161,1083,3237,4283,4045,4284, 344, // 7830\\n1173, 288,2311, 454,1683,8041,8042,1461,4562,4046,2589,8043,8044,4563, 985, 894, // 7846\\n8045,3399,3168,8046,1913,2928,3729,1988,8047,2110,1974,8048,4047,8049,2571,1194, // 7862\\n 425,8050,4564,3169,1245,3730,4285,8051,8052,2850,8053, 636,4565,1855,3861, 760, // 7878\\n1799,8054,4286,2209,1508,4566,4048,1893,1684,2293,8055,8056,8057,4287,4288,2210, // 7894\\n 479,8058,8059, 832,8060,4049,2489,8061,2965,2490,3731, 990,3109, 627,1814,2642, // 7910\\n4289,1582,4290,2125,2111,3496,4567,8062, 799,4291,3170,8063,4568,2112,1737,3013, // 7926\\n1018, 543, 754,4292,3309,1676,4569,4570,4050,8064,1489,8065,3497,8066,2614,2889, // 7942\\n4051,8067,8068,2966,8069,8070,8071,8072,3171,4571,4572,2182,1722,8073,3238,3239, // 7958\\n1842,3610,1715, 481, 365,1975,1856,8074,8075,1962,2491,4573,8076,2126,3611,3240, // 7974\\n 433,1894,2063,2075,8077, 602,2741,8078,8079,8080,8081,8082,3014,1628,3400,8083, // 7990\\n3172,4574,4052,2890,4575,2512,8084,2544,2772,8085,8086,8087,3310,4576,2891,8088, // 8006\\n4577,8089,2851,4578,4579,1221,2967,4053,2513,8090,8091,8092,1867,1989,8093,8094, // 8022\\n8095,1895,8096,8097,4580,1896,4054, 318,8098,2094,4055,4293,8099,8100, 485,8101, // 8038\\n 938,3862, 553,2670, 116,8102,3863,3612,8103,3498,2671,2773,3401,3311,2807,8104, // 8054\\n3613,2929,4056,1747,2930,2968,8105,8106, 207,8107,8108,2672,4581,2514,8109,3015, // 8070\\n 890,3614,3864,8110,1877,3732,3402,8111,2183,2353,3403,1652,8112,8113,8114, 941, // 8086\\n2294, 208,3499,4057,2019, 330,4294,3865,2892,2492,3733,4295,8115,8116,8117,8118, // 8102\\n//Everything below is of no interest for detection purpose\\n2515,1613,4582,8119,3312,3866,2516,8120,4058,8121,1637,4059,2466,4583,3867,8122, // 8118\\n2493,3016,3734,8123,8124,2192,8125,8126,2162,8127,8128,8129,8130,8131,8132,8133, // 8134\\n8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149, // 8150\\n8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165, // 8166\\n8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181, // 8182\\n8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197, // 8198\\n8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213, // 8214\\n8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229, // 8230\\n8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245, // 8246\\n8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261, // 8262\\n8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277, // 8278\\n8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293, // 8294\\n8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309, // 8310\\n8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325, // 8326\\n8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341, // 8342\\n8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357, // 8358\\n8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373, // 8374\\n8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389, // 8390\\n8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405, // 8406\\n8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421, // 8422\\n8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437, // 8438\\n8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453, // 8454\\n8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469, // 8470\\n8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485, // 8486\\n8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501, // 8502\\n8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517, // 8518\\n8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533, // 8534\\n8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549, // 8550\\n8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565, // 8566\\n8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581, // 8582\\n8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597, // 8598\\n8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613, // 8614\\n8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629, // 8630\\n8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642,8643,8644,8645, // 8646\\n8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661, // 8662\\n8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672,8673,8674,8675,8676,8677, // 8678\\n8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,8688,8689,8690,8691,8692,8693, // 8694\\n8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8709, // 8710\\n8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725, // 8726\\n8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,8736,8737,8738,8739,8740,8741\\n]; // 8742\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// Sampling from about 20M text materials include literature and computer technology\\n\\n// 128  --> 0.79\\n// 256  --> 0.92\\n// 512  --> 0.986\\n// 1024 --> 0.99944\\n// 2048 --> 0.99999\\n//\\n// Idea Distribution Ratio = 0.98653 / (1-0.98653) = 73.24\\n// Random Distribution Ration = 512 / (2350-512) = 0.279.\\n//\\n// Typical Distribution Ratio\\n\\nexports.EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0;\\n\\nexports.EUCKR_TABLE_SIZE = 2352;\\n\\n// Char to FreqOrder table ,\\nexports.EUCKRCharToFreqOrder = [\\n  13, 130, 120,1396, 481,1719,1720, 328, 609, 212,1721, 707, 400, 299,1722,  87,\\n1397,1723, 104, 536,1117,1203,1724,1267, 685,1268, 508,1725,1726,1727,1728,1398,\\n1399,1729,1730,1731, 141, 621, 326,1057, 368,1732, 267, 488,  20,1733,1269,1734,\\n 945,1400,1735,  47, 904,1270,1736,1737, 773, 248,1738, 409, 313, 786, 429,1739,\\n 116, 987, 813,1401, 683,  75,1204, 145,1740,1741,1742,1743,  16, 847, 667, 622,\\n 708,1744,1745,1746, 966, 787, 304, 129,1747,  60, 820, 123, 676,1748,1749,1750,\\n1751, 617,1752, 626,1753,1754,1755,1756, 653,1757,1758,1759,1760,1761,1762, 856,\\n 344,1763,1764,1765,1766,  89, 401, 418, 806, 905, 848,1767,1768,1769, 946,1205,\\n 709,1770,1118,1771, 241,1772,1773,1774,1271,1775, 569,1776, 999,1777,1778,1779,\\n1780, 337, 751,1058,  28, 628, 254,1781, 177, 906, 270, 349, 891,1079,1782,  19,\\n1783, 379,1784, 315,1785, 629, 754,1402, 559,1786, 636, 203,1206,1787, 710, 567,\\n1788, 935, 814,1789,1790,1207, 766, 528,1791,1792,1208,1793,1794,1795,1796,1797,\\n1403,1798,1799, 533,1059,1404,1405,1156,1406, 936, 884,1080,1800, 351,1801,1802,\\n1803,1804,1805, 801,1806,1807,1808,1119,1809,1157, 714, 474,1407,1810, 298, 899,\\n 885,1811,1120, 802,1158,1812, 892,1813,1814,1408, 659,1815,1816,1121,1817,1818,\\n1819,1820,1821,1822, 319,1823, 594, 545,1824, 815, 937,1209,1825,1826, 573,1409,\\n1022,1827,1210,1828,1829,1830,1831,1832,1833, 556, 722, 807,1122,1060,1834, 697,\\n1835, 900, 557, 715,1836,1410, 540,1411, 752,1159, 294, 597,1211, 976, 803, 770,\\n1412,1837,1838,  39, 794,1413, 358,1839, 371, 925,1840, 453, 661, 788, 531, 723,\\n 544,1023,1081, 869,  91,1841, 392, 430, 790, 602,1414, 677,1082, 457,1415,1416,\\n1842,1843, 475, 327,1024,1417, 795, 121,1844, 733, 403,1418,1845,1846,1847, 300,\\n 119, 711,1212, 627,1848,1272, 207,1849,1850, 796,1213, 382,1851, 519,1852,1083,\\n 893,1853,1854,1855, 367, 809, 487, 671,1856, 663,1857,1858, 956, 471, 306, 857,\\n1859,1860,1160,1084,1861,1862,1863,1864,1865,1061,1866,1867,1868,1869,1870,1871,\\n 282,  96, 574,1872, 502,1085,1873,1214,1874, 907,1875,1876, 827, 977,1419,1420,\\n1421, 268,1877,1422,1878,1879,1880, 308,1881,   2, 537,1882,1883,1215,1884,1885,\\n 127, 791,1886,1273,1423,1887,  34, 336, 404, 643,1888, 571, 654, 894, 840,1889,\\n   0, 886,1274, 122, 575, 260, 908, 938,1890,1275, 410, 316,1891,1892, 100,1893,\\n1894,1123,  48,1161,1124,1025,1895, 633, 901,1276,1896,1897, 115, 816,1898, 317,\\n1899, 694,1900, 909, 734,1424, 572, 866,1425, 691,  85, 524,1010, 543, 394, 841,\\n1901,1902,1903,1026,1904,1905,1906,1907,1908,1909,  30, 451, 651, 988, 310,1910,\\n1911,1426, 810,1216,  93,1912,1913,1277,1217,1914, 858, 759,  45,  58, 181, 610,\\n 269,1915,1916, 131,1062, 551, 443,1000, 821,1427, 957, 895,1086,1917,1918, 375,\\n1919, 359,1920, 687,1921, 822,1922, 293,1923,1924,  40, 662, 118, 692,  29, 939,\\n 887, 640, 482, 174,1925,  69,1162, 728,1428, 910,1926,1278,1218,1279, 386, 870,\\n 217, 854,1163, 823,1927,1928,1929,1930, 834,1931,  78,1932, 859,1933,1063,1934,\\n1935,1936,1937, 438,1164, 208, 595,1938,1939,1940,1941,1219,1125,1942, 280, 888,\\n1429,1430,1220,1431,1943,1944,1945,1946,1947,1280, 150, 510,1432,1948,1949,1950,\\n1951,1952,1953,1954,1011,1087,1955,1433,1043,1956, 881,1957, 614, 958,1064,1065,\\n1221,1958, 638,1001, 860, 967, 896,1434, 989, 492, 553,1281,1165,1959,1282,1002,\\n1283,1222,1960,1961,1962,1963,  36, 383, 228, 753, 247, 454,1964, 876, 678,1965,\\n1966,1284, 126, 464, 490, 835, 136, 672, 529, 940,1088,1435, 473,1967,1968, 467,\\n  50, 390, 227, 587, 279, 378, 598, 792, 968, 240, 151, 160, 849, 882,1126,1285,\\n 639,1044, 133, 140, 288, 360, 811, 563,1027, 561, 142, 523,1969,1970,1971,   7,\\n 103, 296, 439, 407, 506, 634, 990,1972,1973,1974,1975, 645,1976,1977,1978,1979,\\n1980,1981, 236,1982,1436,1983,1984,1089, 192, 828, 618, 518,1166, 333,1127,1985,\\n 818,1223,1986,1987,1988,1989,1990,1991,1992,1993, 342,1128,1286, 746, 842,1994,\\n1995, 560, 223,1287,  98,   8, 189, 650, 978,1288,1996,1437,1997,  17, 345, 250,\\n 423, 277, 234, 512, 226,  97, 289,  42, 167,1998, 201,1999,2000, 843, 836, 824,\\n 532, 338, 783,1090, 182, 576, 436,1438,1439, 527, 500,2001, 947, 889,2002,2003,\\n2004,2005, 262, 600, 314, 447,2006, 547,2007, 693, 738,1129,2008,  71,1440, 745,\\n 619, 688,2009, 829,2010,2011, 147,2012,  33, 948,2013,2014,  74, 224,2015,  61,\\n 191, 918, 399, 637,2016,1028,1130, 257, 902,2017,2018,2019,2020,2021,2022,2023,\\n2024,2025,2026, 837,2027,2028,2029,2030, 179, 874, 591,  52, 724, 246,2031,2032,\\n2033,2034,1167, 969,2035,1289, 630, 605, 911,1091,1168,2036,2037,2038,1441, 912,\\n2039, 623,2040,2041, 253,1169,1290,2042,1442, 146, 620, 611, 577, 433,2043,1224,\\n 719,1170, 959, 440, 437, 534,  84, 388, 480,1131, 159, 220, 198, 679,2044,1012,\\n 819,1066,1443, 113,1225, 194, 318,1003,1029,2045,2046,2047,2048,1067,2049,2050,\\n2051,2052,2053,  59, 913, 112,2054, 632,2055, 455, 144, 739,1291,2056, 273, 681,\\n 499,2057, 448,2058,2059, 760,2060,2061, 970, 384, 169, 245,1132,2062,2063, 414,\\n1444,2064,2065,  41, 235,2066, 157, 252, 877, 568, 919, 789, 580,2067, 725,2068,\\n2069,1292,2070,2071,1445,2072,1446,2073,2074,  55, 588,  66,1447, 271,1092,2075,\\n1226,2076, 960,1013, 372,2077,2078,2079,2080,2081,1293,2082,2083,2084,2085, 850,\\n2086,2087,2088,2089,2090, 186,2091,1068, 180,2092,2093,2094, 109,1227, 522, 606,\\n2095, 867,1448,1093, 991,1171, 926, 353,1133,2096, 581,2097,2098,2099,1294,1449,\\n1450,2100, 596,1172,1014,1228,2101,1451,1295,1173,1229,2102,2103,1296,1134,1452,\\n 949,1135,2104,2105,1094,1453,1454,1455,2106,1095,2107,2108,2109,2110,2111,2112,\\n2113,2114,2115,2116,2117, 804,2118,2119,1230,1231, 805,1456, 405,1136,2120,2121,\\n2122,2123,2124, 720, 701,1297, 992,1457, 927,1004,2125,2126,2127,2128,2129,2130,\\n  22, 417,2131, 303,2132, 385,2133, 971, 520, 513,2134,1174,  73,1096, 231, 274,\\n 962,1458, 673,2135,1459,2136, 152,1137,2137,2138,2139,2140,1005,1138,1460,1139,\\n2141,2142,2143,2144,  11, 374, 844,2145, 154,1232,  46,1461,2146, 838, 830, 721,\\n1233, 106,2147,  90, 428, 462, 578, 566,1175, 352,2148,2149, 538,1234, 124,1298,\\n2150,1462, 761, 565,2151, 686,2152, 649,2153,  72, 173,2154, 460, 415,2155,1463,\\n2156,1235, 305,2157,2158,2159,2160,2161,2162, 579,2163,2164,2165,2166,2167, 747,\\n2168,2169,2170,2171,1464, 669,2172,2173,2174,2175,2176,1465,2177,  23, 530, 285,\\n2178, 335, 729,2179, 397,2180,2181,2182,1030,2183,2184, 698,2185,2186, 325,2187,\\n2188, 369,2189, 799,1097,1015, 348,2190,1069, 680,2191, 851,1466,2192,2193,  10,\\n2194, 613, 424,2195, 979, 108, 449, 589,  27, 172,  81,1031,  80, 774, 281, 350,\\n1032, 525, 301, 582,1176,2196, 674,1045,2197,2198,1467, 730, 762,2199,2200,2201,\\n2202,1468,2203, 993,2204,2205, 266,1070, 963,1140,2206,2207,2208, 664,1098, 972,\\n2209,2210,2211,1177,1469,1470, 871,2212,2213,2214,2215,2216,1471,2217,2218,2219,\\n2220,2221,2222,2223,2224,2225,2226,2227,1472,1236,2228,2229,2230,2231,2232,2233,\\n2234,2235,1299,2236,2237, 200,2238, 477, 373,2239,2240, 731, 825, 777,2241,2242,\\n2243, 521, 486, 548,2244,2245,2246,1473,1300,  53, 549, 137, 875,  76, 158,2247,\\n1301,1474, 469, 396,1016, 278, 712,2248, 321, 442, 503, 767, 744, 941,1237,1178,\\n1475,2249,  82, 178,1141,1179, 973,2250,1302,2251, 297,2252,2253, 570,2254,2255,\\n2256,  18, 450, 206,2257, 290, 292,1142,2258, 511, 162,  99, 346, 164, 735,2259,\\n1476,1477,   4, 554, 343, 798,1099,2260,1100,2261,  43, 171,1303, 139, 215,2262,\\n2263, 717, 775,2264,1033, 322, 216,2265, 831,2266, 149,2267,1304,2268,2269, 702,\\n1238, 135, 845, 347, 309,2270, 484,2271, 878, 655, 238,1006,1478,2272,  67,2273,\\n 295,2274,2275, 461,2276, 478, 942, 412,2277,1034,2278,2279,2280, 265,2281, 541,\\n2282,2283,2284,2285,2286,  70, 852,1071,2287,2288,2289,2290,  21,  56, 509, 117,\\n 432,2291,2292, 331, 980, 552,1101, 148, 284, 105, 393,1180,1239, 755,2293, 187,\\n2294,1046,1479,2295, 340,2296,  63,1047, 230,2297,2298,1305, 763,1306, 101, 800,\\n 808, 494,2299,2300,2301, 903,2302,  37,1072,  14,   5,2303,  79, 675,2304, 312,\\n2305,2306,2307,2308,2309,1480,   6,1307,2310,2311,2312,   1, 470,  35,  24, 229,\\n2313, 695, 210,  86, 778,  15, 784, 592, 779,  32,  77, 855, 964,2314, 259,2315,\\n 501, 380,2316,2317,  83, 981, 153, 689,1308,1481,1482,1483,2318,2319, 716,1484,\\n2320,2321,2322,2323,2324,2325,1485,2326,2327, 128,  57,  68, 261,1048, 211, 170,\\n1240,  31,2328,  51, 435, 742,2329,2330,2331, 635,2332, 264, 456,2333,2334,2335,\\n 425,2336,1486, 143, 507, 263, 943,2337, 363, 920,1487, 256,1488,1102, 243, 601,\\n1489,2338,2339,2340,2341,2342,2343,2344, 861,2345,2346,2347,2348,2349,2350, 395,\\n2351,1490,1491,  62, 535, 166, 225,2352,2353, 668, 419,1241, 138, 604, 928,2354,\\n1181,2355,1492,1493,2356,2357,2358,1143,2359, 696,2360, 387, 307,1309, 682, 476,\\n2361,2362, 332,  12, 222, 156,2363, 232,2364, 641, 276, 656, 517,1494,1495,1035,\\n 416, 736,1496,2365,1017, 586,2366,2367,2368,1497,2369, 242,2370,2371,2372,1498,\\n2373, 965, 713,2374,2375,2376,2377, 740, 982,1499, 944,1500,1007,2378,2379,1310,\\n1501,2380,2381,2382, 785, 329,2383,2384,1502,2385,2386,2387, 932,2388,1503,2389,\\n2390,2391,2392,1242,2393,2394,2395,2396,2397, 994, 950,2398,2399,2400,2401,1504,\\n1311,2402,2403,2404,2405,1049, 749,2406,2407, 853, 718,1144,1312,2408,1182,1505,\\n2409,2410, 255, 516, 479, 564, 550, 214,1506,1507,1313, 413, 239, 444, 339,1145,\\n1036,1508,1509,1314,1037,1510,1315,2411,1511,2412,2413,2414, 176, 703, 497, 624,\\n 593, 921, 302,2415, 341, 165,1103,1512,2416,1513,2417,2418,2419, 376,2420, 700,\\n2421,2422,2423, 258, 768,1316,2424,1183,2425, 995, 608,2426,2427,2428,2429, 221,\\n2430,2431,2432,2433,2434,2435,2436,2437, 195, 323, 726, 188, 897, 983,1317, 377,\\n 644,1050, 879,2438, 452,2439,2440,2441,2442,2443,2444, 914,2445,2446,2447,2448,\\n 915, 489,2449,1514,1184,2450,2451, 515,  64, 427, 495,2452, 583,2453, 483, 485,\\n1038, 562, 213,1515, 748, 666,2454,2455,2456,2457, 334,2458, 780, 996,1008, 705,\\n1243,2459,2460,2461,2462,2463, 114,2464, 493,1146, 366, 163,1516, 961,1104,2465,\\n 291,2466,1318,1105,2467,1517, 365,2468, 355, 951,1244,2469,1319,2470, 631,2471,\\n2472, 218,1320, 364, 320, 756,1518,1519,1321,1520,1322,2473,2474,2475,2476, 997,\\n2477,2478,2479,2480, 665,1185,2481, 916,1521,2482,2483,2484, 584, 684,2485,2486,\\n 797,2487,1051,1186,2488,2489,2490,1522,2491,2492, 370,2493,1039,1187,  65,2494,\\n 434, 205, 463,1188,2495, 125, 812, 391, 402, 826, 699, 286, 398, 155, 781, 771,\\n 585,2496, 590, 505,1073,2497, 599, 244, 219, 917,1018, 952, 646,1523,2498,1323,\\n2499,2500,  49, 984, 354, 741,2501, 625,2502,1324,2503,1019, 190, 357, 757, 491,\\n  95, 782, 868,2504,2505,2506,2507,2508,2509, 134,1524,1074, 422,1525, 898,2510,\\n 161,2511,2512,2513,2514, 769,2515,1526,2516,2517, 411,1325,2518, 472,1527,2519,\\n2520,2521,2522,2523,2524, 985,2525,2526,2527,2528,2529,2530, 764,2531,1245,2532,\\n2533,  25, 204, 311,2534, 496,2535,1052,2536,2537,2538,2539,2540,2541,2542, 199,\\n 704, 504, 468, 758, 657,1528, 196,  44, 839,1246, 272, 750,2543, 765, 862,2544,\\n2545,1326,2546, 132, 615, 933,2547, 732,2548,2549,2550,1189,1529,2551, 283,1247,\\n1053, 607, 929,2552,2553,2554, 930, 183, 872, 616,1040,1147,2555,1148,1020, 441,\\n 249,1075,2556,2557,2558, 466, 743,2559,2560,2561,  92, 514, 426, 420, 526,2562,\\n2563,2564,2565,2566,2567,2568, 185,2569,2570,2571,2572, 776,1530, 658,2573, 362,\\n2574, 361, 922,1076, 793,2575,2576,2577,2578,2579,2580,1531, 251,2581,2582,2583,\\n2584,1532,  54, 612, 237,1327,2585,2586, 275, 408, 647, 111,2587,1533,1106, 465,\\n   3, 458,   9,  38,2588, 107, 110, 890, 209,  26, 737, 498,2589,1534,2590, 431,\\n 202,  88,1535, 356, 287,1107, 660,1149,2591, 381,1536, 986,1150, 445,1248,1151,\\n 974,2592,2593, 846,2594, 446, 953, 184,1249,1250, 727,2595, 923, 193, 883,2596,\\n2597,2598, 102, 324, 539, 817,2599, 421,1041,2600, 832,2601,  94, 175, 197, 406,\\n2602, 459,2603,2604,2605,2606,2607, 330, 555,2608,2609,2610, 706,1108, 389,2611,\\n2612,2613,2614, 233,2615, 833, 558, 931, 954,1251,2616,2617,1537, 546,2618,2619,\\n1009,2620,2621,2622,1538, 690,1328,2623, 955,2624,1539,2625,2626, 772,2627,2628,\\n2629,2630,2631, 924, 648, 863, 603,2632,2633, 934,1540, 864, 865,2634, 642,1042,\\n 670,1190,2635,2636,2637,2638, 168,2639, 652, 873, 542,1054,1541,2640,2641,2642,  // 512, 256\\n//Everything below is of no interest for detection purpose\\n2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,\\n2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,\\n2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,\\n2691,2692,2693,2694,2695,2696,2697,2698,2699,1542, 880,2700,2701,2702,2703,2704,\\n2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,\\n2721,2722,2723,2724,2725,1543,2726,2727,2728,2729,2730,2731,2732,1544,2733,2734,\\n2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,\\n2751,2752,2753,2754,1545,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,\\n2766,1546,2767,1547,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,\\n2780,2781,2782,2783,2784,2785,2786,1548,2787,2788,2789,1109,2790,2791,2792,2793,\\n2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,\\n2810,2811,2812,1329,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,\\n2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,\\n2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,\\n1549,2857,2858,2859,2860,1550,2861,2862,1551,2863,2864,2865,2866,2867,2868,2869,\\n2870,2871,2872,2873,2874,1110,1330,2875,2876,2877,2878,2879,2880,2881,2882,2883,\\n2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,\\n2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,\\n2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,1331,\\n2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,1552,2944,2945,\\n2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,\\n2962,2963,2964,1252,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,\\n2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,\\n2993,2994,2995,2996,2997,2998,2999,3000,3001,3002,3003,3004,3005,3006,3007,3008,\\n3009,3010,3011,3012,1553,3013,3014,3015,3016,3017,1554,3018,1332,3019,3020,3021,\\n3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,\\n3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,1555,3051,3052,\\n3053,1556,1557,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,\\n3067,1558,3068,3069,3070,3071,3072,3073,3074,3075,3076,1559,3077,3078,3079,3080,\\n3081,3082,3083,1253,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,\\n3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,1152,3109,3110,\\n3111,3112,3113,1560,3114,3115,3116,3117,1111,3118,3119,3120,3121,3122,3123,3124,\\n3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,\\n3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,\\n3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,\\n3173,3174,3175,3176,1333,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,\\n3188,3189,1561,3190,3191,1334,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,\\n3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,\\n3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,\\n3234,1562,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,\\n3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,\\n3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,1563,3278,3279,\\n3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,\\n3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,\\n3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,\\n3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,\\n3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,\\n3360,3361,3362,3363,3364,1335,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,\\n3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,1336,3388,3389,\\n3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,\\n3406,3407,3408,3409,3410,3411,3412,3413,3414,1337,3415,3416,3417,3418,3419,1338,\\n3420,3421,3422,1564,1565,3423,3424,3425,3426,3427,3428,3429,3430,3431,1254,3432,\\n3433,3434,1339,3435,3436,3437,3438,3439,1566,3440,3441,3442,3443,3444,3445,3446,\\n3447,3448,3449,3450,3451,3452,3453,3454,1255,3455,3456,3457,3458,3459,1567,1191,\\n3460,1568,1569,3461,3462,3463,1570,3464,3465,3466,3467,3468,1571,3469,3470,3471,\\n3472,3473,1572,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,\\n1340,3487,3488,3489,3490,3491,3492,1021,3493,3494,3495,3496,3497,3498,1573,3499,\\n1341,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,1342,3512,3513,\\n3514,3515,3516,1574,1343,3517,3518,3519,1575,3520,1576,3521,3522,3523,3524,3525,\\n3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,\\n3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,\\n3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,\\n3574,3575,3576,3577,3578,3579,3580,1577,3581,3582,1578,3583,3584,3585,3586,3587,\\n3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,\\n3604,1579,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,\\n3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,1580,3630,3631,1581,3632,\\n3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,\\n3649,3650,3651,3652,3653,3654,3655,3656,1582,3657,3658,3659,3660,3661,3662,3663,\\n3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,\\n3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,\\n3696,3697,3698,3699,3700,1192,3701,3702,3703,3704,1256,3705,3706,3707,3708,1583,\\n1257,3709,3710,3711,3712,3713,3714,3715,3716,1584,3717,3718,3719,3720,3721,3722,\\n3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,\\n3739,3740,3741,3742,3743,3744,3745,1344,3746,3747,3748,3749,3750,3751,3752,3753,\\n3754,3755,3756,1585,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,1586,3767,\\n3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,1345,3779,3780,3781,3782,\\n3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,1346,1587,3796,\\n3797,1588,3798,3799,3800,3801,3802,3803,3804,3805,3806,1347,3807,3808,3809,3810,\\n3811,1589,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,1590,3822,3823,1591,\\n1348,3824,3825,3826,3827,3828,3829,3830,1592,3831,3832,1593,3833,3834,3835,3836,\\n3837,3838,3839,3840,3841,3842,3843,3844,1349,3845,3846,3847,3848,3849,3850,3851,\\n3852,3853,3854,3855,3856,3857,3858,1594,3859,3860,3861,3862,3863,3864,3865,3866,\\n3867,3868,3869,1595,3870,3871,3872,3873,1596,3874,3875,3876,3877,3878,3879,3880,\\n3881,3882,3883,3884,3885,3886,1597,3887,3888,3889,3890,3891,3892,3893,3894,3895,\\n1598,3896,3897,3898,1599,1600,3899,1350,3900,1351,3901,3902,1352,3903,3904,3905,\\n3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,\\n3922,3923,3924,1258,3925,3926,3927,3928,3929,3930,3931,1193,3932,1601,3933,3934,\\n3935,3936,3937,3938,3939,3940,3941,3942,3943,1602,3944,3945,3946,3947,3948,1603,\\n3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,\\n3965,1604,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,1353,3978,\\n3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,1354,3992,3993,\\n3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4009,\\n4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,4020,4021,4022,4023,1355,4024,\\n4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,4036,4037,4038,4039,4040,\\n1605,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,4052,4053,4054,4055,\\n4056,4057,4058,4059,4060,1606,4061,4062,4063,4064,1607,4065,4066,4067,4068,4069,\\n4070,4071,4072,4073,4074,4075,4076,1194,4077,4078,1608,4079,4080,4081,4082,4083,\\n4084,4085,4086,4087,1609,4088,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,\\n4099,4100,4101,4102,4103,4104,4105,4106,4107,4108,1259,4109,4110,4111,4112,4113,\\n4114,4115,4116,4117,4118,4119,4120,4121,4122,4123,4124,1195,4125,4126,4127,1610,\\n4128,4129,4130,4131,4132,4133,4134,4135,4136,4137,1356,4138,4139,4140,4141,4142,\\n4143,4144,1611,4145,4146,4147,4148,4149,4150,4151,4152,4153,4154,4155,4156,4157,\\n4158,4159,4160,4161,4162,4163,4164,4165,4166,4167,4168,4169,4170,4171,4172,4173,\\n4174,4175,4176,4177,4178,4179,4180,4181,4182,4183,4184,4185,4186,4187,4188,4189,\\n4190,4191,4192,4193,4194,4195,4196,4197,4198,4199,4200,4201,4202,4203,4204,4205,\\n4206,4207,4208,4209,4210,4211,4212,4213,4214,4215,4216,4217,4218,4219,1612,4220,\\n4221,4222,4223,4224,4225,4226,4227,1357,4228,1613,4229,4230,4231,4232,4233,4234,\\n4235,4236,4237,4238,4239,4240,4241,4242,4243,1614,4244,4245,4246,4247,4248,4249,\\n4250,4251,4252,4253,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,\\n4266,4267,4268,4269,4270,1196,1358,4271,4272,4273,4274,4275,4276,4277,4278,4279,\\n4280,4281,4282,4283,4284,4285,4286,4287,1615,4288,4289,4290,4291,4292,4293,4294,\\n4295,4296,4297,4298,4299,4300,4301,4302,4303,4304,4305,4306,4307,4308,4309,4310,\\n4311,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4322,4323,4324,4325,4326,\\n4327,4328,4329,4330,4331,4332,4333,4334,1616,4335,4336,4337,4338,4339,4340,4341,\\n4342,4343,4344,4345,4346,4347,4348,4349,4350,4351,4352,4353,4354,4355,4356,4357,\\n4358,4359,4360,1617,4361,4362,4363,4364,4365,1618,4366,4367,4368,4369,4370,4371,\\n4372,4373,4374,4375,4376,4377,4378,4379,4380,4381,4382,4383,4384,4385,4386,4387,\\n4388,4389,4390,4391,4392,4393,4394,4395,4396,4397,4398,4399,4400,4401,4402,4403,\\n4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,1619,4417,4418,\\n4419,4420,4421,4422,4423,4424,4425,1112,4426,4427,4428,4429,4430,1620,4431,4432,\\n4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,1260,1261,4443,4444,4445,4446,\\n4447,4448,4449,4450,4451,4452,4453,4454,4455,1359,4456,4457,4458,4459,4460,4461,\\n4462,4463,4464,4465,1621,4466,4467,4468,4469,4470,4471,4472,4473,4474,4475,4476,\\n4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4487,4488,4489,1055,4490,4491,\\n4492,4493,4494,4495,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4507,\\n4508,4509,4510,4511,4512,4513,4514,4515,4516,4517,4518,1622,4519,4520,4521,1623,\\n4522,4523,4524,4525,4526,4527,4528,4529,4530,4531,4532,4533,4534,4535,1360,4536,\\n4537,4538,4539,4540,4541,4542,4543, 975,4544,4545,4546,4547,4548,4549,4550,4551,\\n4552,4553,4554,4555,4556,4557,4558,4559,4560,4561,4562,4563,4564,4565,4566,4567,\\n4568,4569,4570,4571,1624,4572,4573,4574,4575,4576,1625,4577,4578,4579,4580,4581,\\n4582,4583,4584,1626,4585,4586,4587,4588,4589,4590,4591,4592,4593,4594,4595,1627,\\n4596,4597,4598,4599,4600,4601,4602,4603,4604,4605,4606,4607,4608,4609,4610,4611,\\n4612,4613,4614,4615,1628,4616,4617,4618,4619,4620,4621,4622,4623,4624,4625,4626,\\n4627,4628,4629,4630,4631,4632,4633,4634,4635,4636,4637,4638,4639,4640,4641,4642,\\n4643,4644,4645,4646,4647,4648,4649,1361,4650,4651,4652,4653,4654,4655,4656,4657,\\n4658,4659,4660,4661,1362,4662,4663,4664,4665,4666,4667,4668,4669,4670,4671,4672,\\n4673,4674,4675,4676,4677,4678,4679,4680,4681,4682,1629,4683,4684,4685,4686,4687,\\n1630,4688,4689,4690,4691,1153,4692,4693,4694,1113,4695,4696,4697,4698,4699,4700,\\n4701,4702,4703,4704,4705,4706,4707,4708,4709,4710,4711,1197,4712,4713,4714,4715,\\n4716,4717,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4728,4729,4730,4731,\\n4732,4733,4734,4735,1631,4736,1632,4737,4738,4739,4740,4741,4742,4743,4744,1633,\\n4745,4746,4747,4748,4749,1262,4750,4751,4752,4753,4754,1363,4755,4756,4757,4758,\\n4759,4760,4761,4762,4763,4764,4765,4766,4767,4768,1634,4769,4770,4771,4772,4773,\\n4774,4775,4776,4777,4778,1635,4779,4780,4781,4782,4783,4784,4785,4786,4787,4788,\\n4789,1636,4790,4791,4792,4793,4794,4795,4796,4797,4798,4799,4800,4801,4802,4803,\\n4804,4805,4806,1637,4807,4808,4809,1638,4810,4811,4812,4813,4814,4815,4816,4817,\\n4818,1639,4819,4820,4821,4822,4823,4824,4825,4826,4827,4828,4829,4830,4831,4832,\\n4833,1077,4834,4835,4836,4837,4838,4839,4840,4841,4842,4843,4844,4845,4846,4847,\\n4848,4849,4850,4851,4852,4853,4854,4855,4856,4857,4858,4859,4860,4861,4862,4863,\\n4864,4865,4866,4867,4868,4869,4870,4871,4872,4873,4874,4875,4876,4877,4878,4879,\\n4880,4881,4882,4883,1640,4884,4885,1641,4886,4887,4888,4889,4890,4891,4892,4893,\\n4894,4895,4896,4897,4898,4899,4900,4901,4902,4903,4904,4905,4906,4907,4908,4909,\\n4910,4911,1642,4912,4913,4914,1364,4915,4916,4917,4918,4919,4920,4921,4922,4923,\\n4924,4925,4926,4927,4928,4929,4930,4931,1643,4932,4933,4934,4935,4936,4937,4938,\\n4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,\\n4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,\\n4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,1644,4981,4982,4983,4984,1645,\\n4985,4986,1646,4987,4988,4989,4990,4991,4992,4993,4994,4995,4996,4997,4998,4999,\\n5000,5001,5002,5003,5004,5005,1647,5006,1648,5007,5008,5009,5010,5011,5012,1078,\\n5013,5014,5015,5016,5017,5018,5019,5020,5021,5022,5023,5024,5025,5026,5027,5028,\\n1365,5029,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,1649,5040,5041,5042,\\n5043,5044,5045,1366,5046,5047,5048,5049,5050,5051,5052,5053,5054,5055,1650,5056,\\n5057,5058,5059,5060,5061,5062,5063,5064,5065,5066,5067,5068,5069,5070,5071,5072,\\n5073,5074,5075,5076,5077,1651,5078,5079,5080,5081,5082,5083,5084,5085,5086,5087,\\n5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,\\n5104,5105,5106,5107,5108,5109,5110,1652,5111,5112,5113,5114,5115,5116,5117,5118,\\n1367,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,1653,5130,5131,5132,\\n5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,\\n5149,1368,5150,1654,5151,1369,5152,5153,5154,5155,5156,5157,5158,5159,5160,5161,\\n5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,5176,5177,\\n5178,1370,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,\\n5193,5194,5195,5196,5197,5198,1655,5199,5200,5201,5202,1656,5203,5204,5205,5206,\\n1371,5207,1372,5208,5209,5210,5211,1373,5212,5213,1374,5214,5215,5216,5217,5218,\\n5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,\\n5235,5236,5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,1657,5248,5249,\\n5250,5251,1658,1263,5252,5253,5254,5255,5256,1375,5257,5258,5259,5260,5261,5262,\\n5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,\\n5279,5280,5281,5282,5283,1659,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,\\n5294,5295,5296,5297,5298,5299,5300,1660,5301,5302,5303,5304,5305,5306,5307,5308,\\n5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,1376,5322,5323,\\n5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,1198,5334,5335,5336,5337,5338,\\n5339,5340,5341,5342,5343,1661,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,\\n5354,5355,5356,5357,5358,5359,5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,\\n5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,5382,5383,5384,5385,\\n5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,1264,5399,5400,\\n5401,5402,5403,5404,5405,5406,5407,5408,5409,5410,5411,5412,1662,5413,5414,5415,\\n5416,1663,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,\\n5431,5432,5433,5434,5435,5436,5437,5438,1664,5439,5440,5441,5442,5443,5444,5445,\\n5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,\\n5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,\\n5478,1154,5479,5480,5481,5482,5483,5484,5485,1665,5486,5487,5488,5489,5490,5491,\\n5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,\\n5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,\\n5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,\\n5540,5541,5542,5543,5544,5545,5546,5547,5548,1377,5549,5550,5551,5552,5553,5554,\\n5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,\\n1114,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,\\n5586,5587,5588,5589,5590,5591,5592,1378,5593,5594,5595,5596,5597,5598,5599,5600,\\n5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,1379,5615,\\n5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,\\n5632,5633,5634,1380,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,\\n5647,5648,5649,1381,1056,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,\\n1666,5661,5662,5663,5664,5665,5666,5667,5668,1667,5669,1668,5670,5671,5672,5673,\\n5674,5675,5676,5677,5678,1155,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,\\n5689,5690,5691,5692,5693,5694,5695,5696,5697,5698,1669,5699,5700,5701,5702,5703,\\n5704,5705,1670,5706,5707,5708,5709,5710,1671,5711,5712,5713,5714,1382,5715,5716,\\n5717,5718,5719,5720,5721,5722,5723,5724,5725,1672,5726,5727,1673,1674,5728,5729,\\n5730,5731,5732,5733,5734,5735,5736,1675,5737,5738,5739,5740,5741,5742,5743,5744,\\n1676,5745,5746,5747,5748,5749,5750,5751,1383,5752,5753,5754,5755,5756,5757,5758,\\n5759,5760,5761,5762,5763,5764,5765,5766,5767,5768,1677,5769,5770,5771,5772,5773,\\n1678,5774,5775,5776, 998,5777,5778,5779,5780,5781,5782,5783,5784,5785,1384,5786,\\n5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,1679,5801,\\n5802,5803,1115,1116,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,\\n5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,\\n5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,\\n5848,5849,5850,5851,5852,5853,5854,5855,1680,5856,5857,5858,5859,5860,5861,5862,\\n5863,5864,1681,5865,5866,5867,1682,5868,5869,5870,5871,5872,5873,5874,5875,5876,\\n5877,5878,5879,1683,5880,1684,5881,5882,5883,5884,1685,5885,5886,5887,5888,5889,\\n5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,\\n5906,5907,1686,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,\\n5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,1687,\\n5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,\\n5952,1688,1689,5953,1199,5954,5955,5956,5957,5958,5959,5960,5961,1690,5962,5963,\\n5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,\\n5980,5981,1385,5982,1386,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,\\n5994,5995,5996,5997,5998,5999,6000,6001,6002,6003,6004,6005,6006,6007,6008,6009,\\n6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6024,6025,\\n6026,6027,1265,6028,6029,1691,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,\\n6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,\\n6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,\\n6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,1692,6085,6086,\\n6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100,6101,6102,\\n6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116,6117,6118,\\n6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,1693,6132,6133,\\n6134,6135,6136,1694,6137,6138,6139,6140,6141,1695,6142,6143,6144,6145,6146,6147,\\n6148,6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,\\n6164,6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,\\n6180,6181,6182,6183,6184,6185,1696,6186,6187,6188,6189,6190,6191,6192,6193,6194,\\n6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,\\n6211,6212,6213,6214,6215,6216,6217,6218,6219,1697,6220,6221,6222,6223,6224,6225,\\n6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,\\n6242,6243,6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,1698,6254,6255,6256,\\n6257,6258,6259,6260,6261,6262,6263,1200,6264,6265,6266,6267,6268,6269,6270,6271,  //1024\\n6272,6273,6274,6275,6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,6286,6287,\\n6288,6289,6290,6291,6292,6293,6294,6295,6296,6297,6298,6299,6300,6301,6302,1699,\\n6303,6304,1700,6305,6306,6307,6308,6309,6310,6311,6312,6313,6314,6315,6316,6317,\\n6318,6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,\\n6334,6335,6336,6337,6338,6339,1701,6340,6341,6342,6343,6344,1387,6345,6346,6347,\\n6348,6349,6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,\\n6364,6365,6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,\\n6380,6381,6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,\\n6396,6397,6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,6411,\\n6412,6413,1702,6414,6415,6416,6417,6418,6419,6420,6421,6422,1703,6423,6424,6425,\\n6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,1704,6439,6440,\\n6441,6442,6443,6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,6455,6456,\\n6457,6458,6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,\\n6473,6474,6475,6476,6477,6478,6479,6480,6481,6482,6483,6484,6485,6486,6487,6488,\\n6489,6490,6491,6492,6493,6494,6495,6496,6497,6498,6499,6500,6501,6502,6503,1266,\\n6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,\\n6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532,6533,6534,6535,\\n6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6550,6551,\\n1705,1706,6552,6553,6554,6555,6556,6557,6558,6559,6560,6561,6562,6563,6564,6565,\\n6566,6567,6568,6569,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,\\n6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6594,6595,6596,6597,\\n6598,6599,6600,6601,6602,6603,6604,6605,6606,6607,6608,6609,6610,6611,6612,6613,\\n6614,6615,6616,6617,6618,6619,6620,6621,6622,6623,6624,6625,6626,6627,6628,6629,\\n6630,6631,6632,6633,6634,6635,6636,6637,1388,6638,6639,6640,6641,6642,6643,6644,\\n1707,6645,6646,6647,6648,6649,6650,6651,6652,6653,6654,6655,6656,6657,6658,6659,\\n6660,6661,6662,6663,1708,6664,6665,6666,6667,6668,6669,6670,6671,6672,6673,6674,\\n1201,6675,6676,6677,6678,6679,6680,6681,6682,6683,6684,6685,6686,6687,6688,6689,\\n6690,6691,6692,6693,6694,6695,6696,6697,6698,6699,6700,6701,6702,6703,6704,6705,\\n6706,6707,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6719,6720,6721,\\n6722,6723,6724,6725,1389,6726,6727,6728,6729,6730,6731,6732,6733,6734,6735,6736,\\n1390,1709,6737,6738,6739,6740,6741,6742,1710,6743,6744,6745,6746,1391,6747,6748,\\n6749,6750,6751,6752,6753,6754,6755,6756,6757,1392,6758,6759,6760,6761,6762,6763,\\n6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777,6778,6779,\\n6780,1202,6781,6782,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,\\n6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,1711,\\n6810,6811,6812,6813,6814,6815,6816,6817,6818,6819,6820,6821,6822,6823,6824,6825,\\n6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,1393,6837,6838,6839,6840,\\n6841,6842,6843,6844,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,\\n6857,6858,6859,6860,6861,6862,6863,6864,6865,6866,6867,6868,6869,6870,6871,6872,\\n6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,\\n6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6900,6901,6902,1712,6903,\\n6904,6905,6906,6907,6908,6909,6910,1713,6911,6912,6913,6914,6915,6916,6917,6918,\\n6919,6920,6921,6922,6923,6924,6925,6926,6927,6928,6929,6930,6931,6932,6933,6934,\\n6935,6936,6937,6938,6939,6940,6941,6942,6943,6944,6945,6946,6947,6948,6949,6950,\\n6951,6952,6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,\\n6967,6968,6969,6970,6971,6972,6973,6974,1714,6975,6976,6977,6978,6979,6980,6981,\\n6982,6983,6984,6985,6986,6987,6988,1394,6989,6990,6991,6992,6993,6994,6995,6996,\\n6997,6998,6999,7000,1715,7001,7002,7003,7004,7005,7006,7007,7008,7009,7010,7011,\\n7012,7013,7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,\\n7028,1716,7029,7030,7031,7032,7033,7034,7035,7036,7037,7038,7039,7040,7041,7042,\\n7043,7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,\\n7059,7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,7071,7072,7073,7074,\\n7075,7076,7077,7078,7079,7080,7081,7082,7083,7084,7085,7086,7087,7088,7089,7090,\\n7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105,7106,\\n7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,7119,7120,7121,7122,\\n7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136,7137,7138,\\n7139,7140,7141,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,\\n7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167,7168,7169,7170,\\n7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183,7184,7185,7186,\\n7187,7188,7189,7190,7191,7192,7193,7194,7195,7196,7197,7198,7199,7200,7201,7202,\\n7203,7204,7205,7206,7207,1395,7208,7209,7210,7211,7212,7213,1717,7214,7215,7216,\\n7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,\\n7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245,7246,7247,7248,\\n7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261,7262,7263,7264,\\n7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277,7278,7279,7280,\\n7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293,7294,7295,7296,\\n7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308,7309,7310,7311,7312,\\n7313,1718,7314,7315,7316,7317,7318,7319,7320,7321,7322,7323,7324,7325,7326,7327,\\n7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339,7340,7341,7342,7343,\\n7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,7354,7355,7356,7357,7358,7359,\\n7360,7361,7362,7363,7364,7365,7366,7367,7368,7369,7370,7371,7372,7373,7374,7375,\\n7376,7377,7378,7379,7380,7381,7382,7383,7384,7385,7386,7387,7388,7389,7390,7391,\\n7392,7393,7394,7395,7396,7397,7398,7399,7400,7401,7402,7403,7404,7405,7406,7407,\\n7408,7409,7410,7411,7412,7413,7414,7415,7416,7417,7418,7419,7420,7421,7422,7423,\\n7424,7425,7426,7427,7428,7429,7430,7431,7432,7433,7434,7435,7436,7437,7438,7439,\\n7440,7441,7442,7443,7444,7445,7446,7447,7448,7449,7450,7451,7452,7453,7454,7455,\\n7456,7457,7458,7459,7460,7461,7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,\\n7472,7473,7474,7475,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,\\n7488,7489,7490,7491,7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,7503,\\n7504,7505,7506,7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,\\n7520,7521,7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,\\n7536,7537,7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,7550,7551,\\n7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567,\\n7568,7569,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582,7583,\\n7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598,7599,\\n7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614,7615,\\n7616,7617,7618,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628,7629,7630,7631,\\n7632,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643,7644,7645,7646,7647,\\n7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659,7660,7661,7662,7663,\\n7664,7665,7666,7667,7668,7669,7670,7671,7672,7673,7674,7675,7676,7677,7678,7679,\\n7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,\\n7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,\\n7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,\\n7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,\\n7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,\\n7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,\\n7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,\\n7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806,7807,\\n7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,\\n7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,\\n7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,\\n7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,\\n7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,\\n7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,\\n7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,\\n7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,\\n7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,\\n7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,\\n7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,\\n7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,\\n8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,\\n8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,\\n8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,\\n8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,\\n8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,\\n8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,\\n8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111,\\n8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127,\\n8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,\\n8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,\\n8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,\\n8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,\\n8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,\\n8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,\\n8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,\\n8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,\\n8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,\\n8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,\\n8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,\\n8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,\\n8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,\\n8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,\\n8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,\\n8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,\\n8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,\\n8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,\\n8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,\\n8432,8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,\\n8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,\\n8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,\\n8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,\\n8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,\\n8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,\\n8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,\\n8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,\\n8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,\\n8576,8577,8578,8579,8580,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,\\n8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,\\n8608,8609,8610,8611,8612,8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,\\n8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,\\n8640,8641,8642,8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,\\n8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,\\n8672,8673,8674,8675,8676,8677,8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,\\n8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,\\n8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,\\n8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,\\n8736,8737,8738,8739,8740,8741\\n];\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// GB2312 most frequently used character table\\n//\\n// Char to FreqOrder table , from hz6763\\n\\n// 512  --> 0.79  -- 0.79\\n// 1024 --> 0.92  -- 0.13\\n// 2048 --> 0.98  -- 0.06\\n// 6768 --> 1.00  -- 0.02\\n//\\n// Ideal Distribution Ratio = 0.79135/(1-0.79135) = 3.79\\n// Random Distribution Ration = 512 / (3755 - 512) = 0.157\\n//\\n// Typical Distribution Ratio about 25% of Ideal one, still much higher that RDR\\n\\nexports.GB2312_TYPICAL_DISTRIBUTION_RATIO = 0.9;\\n\\nexports.GB2312_TABLE_SIZE = 3760;\\n\\nexports.GB2312CharToFreqOrder = [\\n1671, 749,1443,2364,3924,3807,2330,3921,1704,3463,2691,1511,1515, 572,3191,2205,\\n2361, 224,2558, 479,1711, 963,3162, 440,4060,1905,2966,2947,3580,2647,3961,3842,\\n2204, 869,4207, 970,2678,5626,2944,2956,1479,4048, 514,3595, 588,1346,2820,3409,\\n 249,4088,1746,1873,2047,1774, 581,1813, 358,1174,3590,1014,1561,4844,2245, 670,\\n1636,3112, 889,1286, 953, 556,2327,3060,1290,3141, 613, 185,3477,1367, 850,3820,\\n1715,2428,2642,2303,2732,3041,2562,2648,3566,3946,1349, 388,3098,2091,1360,3585,\\n 152,1687,1539, 738,1559,  59,1232,2925,2267,1388,1249,1741,1679,2960, 151,1566,\\n1125,1352,4271, 924,4296, 385,3166,4459, 310,1245,2850,  70,3285,2729,3534,3575,\\n2398,3298,3466,1960,2265, 217,3647, 864,1909,2084,4401,2773,1010,3269,5152, 853,\\n3051,3121,1244,4251,1895, 364,1499,1540,2313,1180,3655,2268, 562, 715,2417,3061,\\n 544, 336,3768,2380,1752,4075, 950, 280,2425,4382, 183,2759,3272, 333,4297,2155,\\n1688,2356,1444,1039,4540, 736,1177,3349,2443,2368,2144,2225, 565, 196,1482,3406,\\n 927,1335,4147, 692, 878,1311,1653,3911,3622,1378,4200,1840,2969,3149,2126,1816,\\n2534,1546,2393,2760, 737,2494,  13, 447, 245,2747,  38,2765,2129,2589,1079, 606,\\n 360, 471,3755,2890, 404, 848, 699,1785,1236, 370,2221,1023,3746,2074,2026,2023,\\n2388,1581,2119, 812,1141,3091,2536,1519, 804,2053, 406,1596,1090, 784, 548,4414,\\n1806,2264,2936,1100, 343,4114,5096, 622,3358, 743,3668,1510,1626,5020,3567,2513,\\n3195,4115,5627,2489,2991,  24,2065,2697,1087,2719,  48,1634, 315,  68, 985,2052,\\n 198,2239,1347,1107,1439, 597,2366,2172, 871,3307, 919,2487,2790,1867, 236,2570,\\n1413,3794, 906,3365,3381,1701,1982,1818,1524,2924,1205, 616,2586,2072,2004, 575,\\n 253,3099,  32,1365,1182, 197,1714,2454,1201, 554,3388,3224,2748, 756,2587, 250,\\n2567,1507,1517,3529,1922,2761,2337,3416,1961,1677,2452,2238,3153, 615, 911,1506,\\n1474,2495,1265,1906,2749,3756,3280,2161, 898,2714,1759,3450,2243,2444, 563,  26,\\n3286,2266,3769,3344,2707,3677, 611,1402, 531,1028,2871,4548,1375, 261,2948, 835,\\n1190,4134, 353, 840,2684,1900,3082,1435,2109,1207,1674, 329,1872,2781,4055,2686,\\n2104, 608,3318,2423,2957,2768,1108,3739,3512,3271,3985,2203,1771,3520,1418,2054,\\n1681,1153, 225,1627,2929, 162,2050,2511,3687,1954, 124,1859,2431,1684,3032,2894,\\n 585,4805,3969,2869,2704,2088,2032,2095,3656,2635,4362,2209, 256, 518,2042,2105,\\n3777,3657, 643,2298,1148,1779, 190, 989,3544, 414,  11,2135,2063,2979,1471, 403,\\n3678, 126, 770,1563, 671,2499,3216,2877, 600,1179, 307,2805,4937,1268,1297,2694,\\n 252,4032,1448,1494,1331,1394, 127,2256, 222,1647,1035,1481,3056,1915,1048, 873,\\n3651, 210,  33,1608,2516, 200,1520, 415, 102,   0,3389,1287, 817,  91,3299,2940,\\n 836,1814, 549,2197,1396,1669,2987,3582,2297,2848,4528,1070, 687,  20,1819, 121,\\n1552,1364,1461,1968,2617,3540,2824,2083, 177, 948,4938,2291, 110,4549,2066, 648,\\n3359,1755,2110,2114,4642,4845,1693,3937,3308,1257,1869,2123, 208,1804,3159,2992,\\n2531,2549,3361,2418,1350,2347,2800,2568,1291,2036,2680,  72, 842,1990, 212,1233,\\n1154,1586,  75,2027,3410,4900,1823,1337,2710,2676, 728,2810,1522,3026,4995, 157,\\n 755,1050,4022, 710, 785,1936,2194,2085,1406,2777,2400, 150,1250,4049,1206, 807,\\n1910, 534, 529,3309,1721,1660, 274,  39,2827, 661,2670,1578, 925,3248,3815,1094,\\n4278,4901,4252,  41,1150,3747,2572,2227,4501,3658,4902,3813,3357,3617,2884,2258,\\n 887, 538,4187,3199,1294,2439,3042,2329,2343,2497,1255, 107, 543,1527, 521,3478,\\n3568, 194,5062,  15, 961,3870,1241,1192,2664,  66,5215,3260,2111,1295,1127,2152,\\n3805,4135, 901,1164,1976, 398,1278, 530,1460, 748, 904,1054,1966,1426,  53,2909,\\n 509, 523,2279,1534, 536,1019, 239,1685, 460,2353, 673,1065,2401,3600,4298,2272,\\n1272,2363, 284,1753,3679,4064,1695,  81, 815,2677,2757,2731,1386, 859, 500,4221,\\n2190,2566, 757,1006,2519,2068,1166,1455, 337,2654,3203,1863,1682,1914,3025,1252,\\n1409,1366, 847, 714,2834,2038,3209, 964,2970,1901, 885,2553,1078,1756,3049, 301,\\n1572,3326, 688,2130,1996,2429,1805,1648,2930,3421,2750,3652,3088, 262,1158,1254,\\n 389,1641,1812, 526,1719, 923,2073,1073,1902, 468, 489,4625,1140, 857,2375,3070,\\n3319,2863, 380, 116,1328,2693,1161,2244, 273,1212,1884,2769,3011,1775,1142, 461,\\n3066,1200,2147,2212, 790, 702,2695,4222,1601,1058, 434,2338,5153,3640,  67,2360,\\n4099,2502, 618,3472,1329, 416,1132, 830,2782,1807,2653,3211,3510,1662, 192,2124,\\n 296,3979,1739,1611,3684,  23, 118, 324, 446,1239,1225, 293,2520,3814,3795,2535,\\n3116,  17,1074, 467,2692,2201, 387,2922,  45,1326,3055,1645,3659,2817, 958, 243,\\n1903,2320,1339,2825,1784,3289, 356, 576, 865,2315,2381,3377,3916,1088,3122,1713,\\n1655, 935, 628,4689,1034,1327, 441, 800, 720, 894,1979,2183,1528,5289,2702,1071,\\n4046,3572,2399,1571,3281,  79, 761,1103, 327, 134, 758,1899,1371,1615, 879, 442,\\n 215,2605,2579, 173,2048,2485,1057,2975,3317,1097,2253,3801,4263,1403,1650,2946,\\n 814,4968,3487,1548,2644,1567,1285,   2, 295,2636,  97, 946,3576, 832, 141,4257,\\n3273, 760,3821,3521,3156,2607, 949,1024,1733,1516,1803,1920,2125,2283,2665,3180,\\n1501,2064,3560,2171,1592, 803,3518,1416, 732,3897,4258,1363,1362,2458, 119,1427,\\n 602,1525,2608,1605,1639,3175, 694,3064,  10, 465,  76,2000,4846,4208, 444,3781,\\n1619,3353,2206,1273,3796, 740,2483, 320,1723,2377,3660,2619,1359,1137,1762,1724,\\n2345,2842,1850,1862, 912, 821,1866, 612,2625,1735,2573,3369,1093, 844,  89, 937,\\n 930,1424,3564,2413,2972,1004,3046,3019,2011, 711,3171,1452,4178, 428, 801,1943,\\n 432, 445,2811, 206,4136,1472, 730, 349,  73, 397,2802,2547, 998,1637,1167, 789,\\n 396,3217, 154,1218, 716,1120,1780,2819,4826,1931,3334,3762,2139,1215,2627, 552,\\n3664,3628,3232,1405,2383,3111,1356,2652,3577,3320,3101,1703, 640,1045,1370,1246,\\n4996, 371,1575,2436,1621,2210, 984,4033,1734,2638,  16,4529, 663,2755,3255,1451,\\n3917,2257,1253,1955,2234,1263,2951, 214,1229, 617, 485, 359,1831,1969, 473,2310,\\n 750,2058, 165,  80,2864,2419, 361,4344,2416,2479,1134, 796,3726,1266,2943, 860,\\n2715, 938, 390,2734,1313,1384, 248, 202, 877,1064,2854, 522,3907, 279,1602, 297,\\n2357, 395,3740, 137,2075, 944,4089,2584,1267,3802,  62,1533,2285, 178, 176, 780,\\n2440, 201,3707, 590, 478,1560,4354,2117,1075,  30,  74,4643,4004,1635,1441,2745,\\n 776,2596, 238,1077,1692,1912,2844, 605, 499,1742,3947, 241,3053, 980,1749, 936,\\n2640,4511,2582, 515,1543,2162,5322,2892,2993, 890,2148,1924, 665,1827,3581,1032,\\n 968,3163, 339,1044,1896, 270, 583,1791,1720,4367,1194,3488,3669,  43,2523,1657,\\n 163,2167, 290,1209,1622,3378, 550, 634,2508,2510, 695,2634,2384,2512,1476,1414,\\n 220,1469,2341,2138,2852,3183,2900,4939,2865,3502,1211,3680, 854,3227,1299,2976,\\n3172, 186,2998,1459, 443,1067,3251,1495, 321,1932,3054, 909, 753,1410,1828, 436,\\n2441,1119,1587,3164,2186,1258, 227, 231,1425,1890,3200,3942, 247, 959, 725,5254,\\n2741, 577,2158,2079, 929, 120, 174, 838,2813, 591,1115, 417,2024,  40,3240,1536,\\n1037, 291,4151,2354, 632,1298,2406,2500,3535,1825,1846,3451, 205,1171, 345,4238,\\n  18,1163, 811, 685,2208,1217, 425,1312,1508,1175,4308,2552,1033, 587,1381,3059,\\n2984,3482, 340,1316,4023,3972, 792,3176, 519, 777,4690, 918, 933,4130,2981,3741,\\n  90,3360,2911,2200,5184,4550, 609,3079,2030, 272,3379,2736, 363,3881,1130,1447,\\n 286, 779, 357,1169,3350,3137,1630,1220,2687,2391, 747,1277,3688,2618,2682,2601,\\n1156,3196,5290,4034,3102,1689,3596,3128, 874, 219,2783, 798, 508,1843,2461, 269,\\n1658,1776,1392,1913,2983,3287,2866,2159,2372, 829,4076,  46,4253,2873,1889,1894,\\n 915,1834,1631,2181,2318, 298, 664,2818,3555,2735, 954,3228,3117, 527,3511,2173,\\n 681,2712,3033,2247,2346,3467,1652, 155,2164,3382, 113,1994, 450, 899, 494, 994,\\n1237,2958,1875,2336,1926,3727, 545,1577,1550, 633,3473, 204,1305,3072,2410,1956,\\n2471, 707,2134, 841,2195,2196,2663,3843,1026,4940, 990,3252,4997, 368,1092, 437,\\n3212,3258,1933,1829, 675,2977,2893, 412, 943,3723,4644,3294,3283,2230,2373,5154,\\n2389,2241,2661,2323,1404,2524, 593, 787, 677,3008,1275,2059, 438,2709,2609,2240,\\n2269,2246,1446,  36,1568,1373,3892,1574,2301,1456,3962, 693,2276,5216,2035,1143,\\n2720,1919,1797,1811,2763,4137,2597,1830,1699,1488,1198,2090, 424,1694, 312,3634,\\n3390,4179,3335,2252,1214, 561,1059,3243,2295,2561, 975,5155,2321,2751,3772, 472,\\n1537,3282,3398,1047,2077,2348,2878,1323,3340,3076, 690,2906,  51, 369, 170,3541,\\n1060,2187,2688,3670,2541,1083,1683, 928,3918, 459, 109,4427, 599,3744,4286, 143,\\n2101,2730,2490,  82,1588,3036,2121, 281,1860, 477,4035,1238,2812,3020,2716,3312,\\n1530,2188,2055,1317, 843, 636,1808,1173,3495, 649, 181,1002, 147,3641,1159,2414,\\n3750,2289,2795, 813,3123,2610,1136,4368,   5,3391,4541,2174, 420, 429,1728, 754,\\n1228,2115,2219, 347,2223,2733, 735,1518,3003,2355,3134,1764,3948,3329,1888,2424,\\n1001,1234,1972,3321,3363,1672,1021,1450,1584, 226, 765, 655,2526,3404,3244,2302,\\n3665, 731, 594,2184, 319,1576, 621, 658,2656,4299,2099,3864,1279,2071,2598,2739,\\n 795,3086,3699,3908,1707,2352,2402,1382,3136,2475,1465,4847,3496,3865,1085,3004,\\n2591,1084, 213,2287,1963,3565,2250, 822, 793,4574,3187,1772,1789,3050, 595,1484,\\n1959,2770,1080,2650, 456, 422,2996, 940,3322,4328,4345,3092,2742, 965,2784, 739,\\n4124, 952,1358,2498,2949,2565, 332,2698,2378, 660,2260,2473,4194,3856,2919, 535,\\n1260,2651,1208,1428,1300,1949,1303,2942, 433,2455,2450,1251,1946, 614,1269, 641,\\n1306,1810,2737,3078,2912, 564,2365,1419,1415,1497,4460,2367,2185,1379,3005,1307,\\n3218,2175,1897,3063, 682,1157,4040,4005,1712,1160,1941,1399, 394, 402,2952,1573,\\n1151,2986,2404, 862, 299,2033,1489,3006, 346, 171,2886,3401,1726,2932, 168,2533,\\n  47,2507,1030,3735,1145,3370,1395,1318,1579,3609,4560,2857,4116,1457,2529,1965,\\n 504,1036,2690,2988,2405, 745,5871, 849,2397,2056,3081, 863,2359,3857,2096,  99,\\n1397,1769,2300,4428,1643,3455,1978,1757,3718,1440,  35,4879,3742,1296,4228,2280,\\n 160,5063,1599,2013, 166, 520,3479,1646,3345,3012, 490,1937,1545,1264,2182,2505,\\n1096,1188,1369,1436,2421,1667,2792,2460,1270,2122, 727,3167,2143, 806,1706,1012,\\n1800,3037, 960,2218,1882, 805, 139,2456,1139,1521, 851,1052,3093,3089, 342,2039,\\n 744,5097,1468,1502,1585,2087, 223, 939, 326,2140,2577, 892,2481,1623,4077, 982,\\n3708, 135,2131,  87,2503,3114,2326,1106, 876,1616, 547,2997,2831,2093,3441,4530,\\n4314,   9,3256,4229,4148, 659,1462,1986,1710,2046,2913,2231,4090,4880,5255,3392,\\n3274,1368,3689,4645,1477, 705,3384,3635,1068,1529,2941,1458,3782,1509, 100,1656,\\n2548, 718,2339, 408,1590,2780,3548,1838,4117,3719,1345,3530, 717,3442,2778,3220,\\n2898,1892,4590,3614,3371,2043,1998,1224,3483, 891, 635, 584,2559,3355, 733,1766,\\n1729,1172,3789,1891,2307, 781,2982,2271,1957,1580,5773,2633,2005,4195,3097,1535,\\n3213,1189,1934,5693,3262, 586,3118,1324,1598, 517,1564,2217,1868,1893,4445,3728,\\n2703,3139,1526,1787,1992,3882,2875,1549,1199,1056,2224,1904,2711,5098,4287, 338,\\n1993,3129,3489,2689,1809,2815,1997, 957,1855,3898,2550,3275,3057,1105,1319, 627,\\n1505,1911,1883,3526, 698,3629,3456,1833,1431, 746,  77,1261,2017,2296,1977,1885,\\n 125,1334,1600, 525,1798,1109,2222,1470,1945, 559,2236,1186,3443,2476,1929,1411,\\n2411,3135,1777,3372,2621,1841,1613,3229, 668,1430,1839,2643,2916, 195,1989,2671,\\n2358,1387, 629,3205,2293,5256,4439, 123,1310, 888,1879,4300,3021,3605,1003,1162,\\n3192,2910,2010, 140,2395,2859,  55,1082,2012,2901, 662, 419,2081,1438, 680,2774,\\n4654,3912,1620,1731,1625,5035,4065,2328, 512,1344, 802,5443,2163,2311,2537, 524,\\n3399,  98,1155,2103,1918,2606,3925,2816,1393,2465,1504,3773,2177,3963,1478,4346,\\n 180,1113,4655,3461,2028,1698, 833,2696,1235,1322,1594,4408,3623,3013,3225,2040,\\n3022, 541,2881, 607,3632,2029,1665,1219, 639,1385,1686,1099,2803,3231,1938,3188,\\n2858, 427, 676,2772,1168,2025, 454,3253,2486,3556, 230,1950, 580, 791,1991,1280,\\n1086,1974,2034, 630, 257,3338,2788,4903,1017,  86,4790, 966,2789,1995,1696,1131,\\n 259,3095,4188,1308, 179,1463,5257, 289,4107,1248,  42,3413,1725,2288, 896,1947,\\n 774,4474,4254, 604,3430,4264, 392,2514,2588, 452, 237,1408,3018, 988,4531,1970,\\n3034,3310, 540,2370,1562,1288,2990, 502,4765,1147,   4,1853,2708, 207, 294,2814,\\n4078,2902,2509, 684,  34,3105,3532,2551, 644, 709,2801,2344, 573,1727,3573,3557,\\n2021,1081,3100,4315,2100,3681, 199,2263,1837,2385, 146,3484,1195,2776,3949, 997,\\n1939,3973,1008,1091,1202,1962,1847,1149,4209,5444,1076, 493, 117,5400,2521, 972,\\n1490,2934,1796,4542,2374,1512,2933,2657, 413,2888,1135,2762,2314,2156,1355,2369,\\n 766,2007,2527,2170,3124,2491,2593,2632,4757,2437, 234,3125,3591,1898,1750,1376,\\n1942,3468,3138, 570,2127,2145,3276,4131, 962, 132,1445,4196,  19, 941,3624,3480,\\n3366,1973,1374,4461,3431,2629, 283,2415,2275, 808,2887,3620,2112,2563,1353,3610,\\n 955,1089,3103,1053,  96,  88,4097, 823,3808,1583, 399, 292,4091,3313, 421,1128,\\n 642,4006, 903,2539,1877,2082, 596,  29,4066,1790, 722,2157, 130, 995,1569, 769,\\n1485, 464, 513,2213, 288,1923,1101,2453,4316, 133, 486,2445,  50, 625, 487,2207,\\n  57, 423, 481,2962, 159,3729,1558, 491, 303, 482, 501, 240,2837, 112,3648,2392,\\n1783, 362,   8,3433,3422, 610,2793,3277,1390,1284,1654,  21,3823, 734, 367, 623,\\n 193, 287, 374,1009,1483, 816, 476, 313,2255,2340,1262,2150,2899,1146,2581, 782,\\n2116,1659,2018,1880, 255,3586,3314,1110,2867,2137,2564, 986,2767,5185,2006, 650,\\n 158, 926, 762, 881,3157,2717,2362,3587, 306,3690,3245,1542,3077,2427,1691,2478,\\n2118,2985,3490,2438, 539,2305, 983, 129,1754, 355,4201,2386, 827,2923, 104,1773,\\n2838,2771, 411,2905,3919, 376, 767, 122,1114, 828,2422,1817,3506, 266,3460,1007,\\n1609,4998, 945,2612,4429,2274, 726,1247,1964,2914,2199,2070,4002,4108, 657,3323,\\n1422, 579, 455,2764,4737,1222,2895,1670, 824,1223,1487,2525, 558, 861,3080, 598,\\n2659,2515,1967, 752,2583,2376,2214,4180, 977, 704,2464,4999,2622,4109,1210,2961,\\n 819,1541, 142,2284,  44, 418, 457,1126,3730,4347,4626,1644,1876,3671,1864, 302,\\n1063,5694, 624, 723,1984,3745,1314,1676,2488,1610,1449,3558,3569,2166,2098, 409,\\n1011,2325,3704,2306, 818,1732,1383,1824,1844,3757, 999,2705,3497,1216,1423,2683,\\n2426,2954,2501,2726,2229,1475,2554,5064,1971,1794,1666,2014,1343, 783, 724, 191,\\n2434,1354,2220,5065,1763,2752,2472,4152, 131, 175,2885,3434,  92,1466,4920,2616,\\n3871,3872,3866, 128,1551,1632, 669,1854,3682,4691,4125,1230, 188,2973,3290,1302,\\n1213, 560,3266, 917, 763,3909,3249,1760, 868,1958, 764,1782,2097, 145,2277,3774,\\n4462,  64,1491,3062, 971,2132,3606,2442, 221,1226,1617, 218, 323,1185,3207,3147,\\n 571, 619,1473,1005,1744,2281, 449,1887,2396,3685, 275, 375,3816,1743,3844,3731,\\n 845,1983,2350,4210,1377, 773, 967,3499,3052,3743,2725,4007,1697,1022,3943,1464,\\n3264,2855,2722,1952,1029,2839,2467,  84,4383,2215, 820,1391,2015,2448,3672, 377,\\n1948,2168, 797,2545,3536,2578,2645,  94,2874,1678, 405,1259,3071, 771, 546,1315,\\n 470,1243,3083, 895,2468, 981, 969,2037, 846,4181, 653,1276,2928,  14,2594, 557,\\n3007,2474, 156, 902,1338,1740,2574, 537,2518, 973,2282,2216,2433,1928, 138,2903,\\n1293,2631,1612, 646,3457, 839,2935, 111, 496,2191,2847, 589,3186, 149,3994,2060,\\n4031,2641,4067,3145,1870,  37,3597,2136,1025,2051,3009,3383,3549,1121,1016,3261,\\n1301, 251,2446,2599,2153, 872,3246, 637, 334,3705, 831, 884, 921,3065,3140,4092,\\n2198,1944, 246,2964, 108,2045,1152,1921,2308,1031, 203,3173,4170,1907,3890, 810,\\n1401,2003,1690, 506, 647,1242,2828,1761,1649,3208,2249,1589,3709,2931,5156,1708,\\n 498, 666,2613, 834,3817,1231, 184,2851,1124, 883,3197,2261,3710,1765,1553,2658,\\n1178,2639,2351,  93,1193, 942,2538,2141,4402, 235,1821, 870,1591,2192,1709,1871,\\n3341,1618,4126,2595,2334, 603, 651,  69, 701, 268,2662,3411,2555,1380,1606, 503,\\n 448, 254,2371,2646, 574,1187,2309,1770, 322,2235,1292,1801, 305, 566,1133, 229,\\n2067,2057, 706, 167, 483,2002,2672,3295,1820,3561,3067, 316, 378,2746,3452,1112,\\n 136,1981, 507,1651,2917,1117, 285,4591, 182,2580,3522,1304, 335,3303,1835,2504,\\n1795,1792,2248, 674,1018,2106,2449,1857,2292,2845, 976,3047,1781,2600,2727,1389,\\n1281,  52,3152, 153, 265,3950, 672,3485,3951,4463, 430,1183, 365, 278,2169,  27,\\n1407,1336,2304, 209,1340,1730,2202,1852,2403,2883, 979,1737,1062, 631,2829,2542,\\n3876,2592, 825,2086,2226,3048,3625, 352,1417,3724, 542, 991, 431,1351,3938,1861,\\n2294, 826,1361,2927,3142,3503,1738, 463,2462,2723, 582,1916,1595,2808, 400,3845,\\n3891,2868,3621,2254,  58,2492,1123, 910,2160,2614,1372,1603,1196,1072,3385,1700,\\n3267,1980, 696, 480,2430, 920, 799,1570,2920,1951,2041,4047,2540,1321,4223,2469,\\n3562,2228,1271,2602, 401,2833,3351,2575,5157, 907,2312,1256, 410, 263,3507,1582,\\n 996, 678,1849,2316,1480, 908,3545,2237, 703,2322, 667,1826,2849,1531,2604,2999,\\n2407,3146,2151,2630,1786,3711, 469,3542, 497,3899,2409, 858, 837,4446,3393,1274,\\n 786, 620,1845,2001,3311, 484, 308,3367,1204,1815,3691,2332,1532,2557,1842,2020,\\n2724,1927,2333,4440, 567,  22,1673,2728,4475,1987,1858,1144,1597, 101,1832,3601,\\n  12, 974,3783,4391, 951,1412,   1,3720, 453,4608,4041, 528,1041,1027,3230,2628,\\n1129, 875,1051,3291,1203,2262,1069,2860,2799,2149,2615,3278, 144,1758,3040,  31,\\n 475,1680, 366,2685,3184, 311,1642,4008,2466,5036,1593,1493,2809, 216,1420,1668,\\n 233, 304,2128,3284, 232,1429,1768,1040,2008,3407,2740,2967,2543, 242,2133, 778,\\n1565,2022,2620, 505,2189,2756,1098,2273, 372,1614, 708, 553,2846,2094,2278, 169,\\n3626,2835,4161, 228,2674,3165, 809,1454,1309, 466,1705,1095, 900,3423, 880,2667,\\n3751,5258,2317,3109,2571,4317,2766,1503,1342, 866,4447,1118,  63,2076, 314,1881,\\n1348,1061, 172, 978,3515,1747, 532, 511,3970,   6, 601, 905,2699,3300,1751, 276,\\n1467,3725,2668,  65,4239,2544,2779,2556,1604, 578,2451,1802, 992,2331,2624,1320,\\n3446, 713,1513,1013, 103,2786,2447,1661, 886,1702, 916, 654,3574,2031,1556, 751,\\n2178,2821,2179,1498,1538,2176, 271, 914,2251,2080,1325, 638,1953,2937,3877,2432,\\n2754,  95,3265,1716, 260,1227,4083, 775, 106,1357,3254, 426,1607, 555,2480, 772,\\n1985, 244,2546, 474, 495,1046,2611,1851,2061,  71,2089,1675,2590, 742,3758,2843,\\n3222,1433, 267,2180,2576,2826,2233,2092,3913,2435, 956,1745,3075, 856,2113,1116,\\n 451,   3,1988,2896,1398, 993,2463,1878,2049,1341,2718,2721,2870,2108, 712,2904,\\n4363,2753,2324, 277,2872,2349,2649, 384, 987, 435, 691,3000, 922, 164,3939, 652,\\n1500,1184,4153,2482,3373,2165,4848,2335,3775,3508,3154,2806,2830,1554,2102,1664,\\n2530,1434,2408, 893,1547,2623,3447,2832,2242,2532,3169,2856,3223,2078,  49,3770,\\n3469, 462, 318, 656,2259,3250,3069, 679,1629,2758, 344,1138,1104,3120,1836,1283,\\n3115,2154,1437,4448, 934, 759,1999, 794,2862,1038, 533,2560,1722,2342, 855,2626,\\n1197,1663,4476,3127,  85,4240,2528,  25,1111,1181,3673, 407,3470,4561,2679,2713,\\n 768,1925,2841,3986,1544,1165, 932, 373,1240,2146,1930,2673, 721,4766, 354,4333,\\n 391,2963, 187,  61,3364,1442,1102, 330,1940,1767, 341,3809,4118, 393,2496,2062,\\n2211, 105, 331, 300, 439, 913,1332, 626, 379,3304,1557, 328, 689,3952, 309,1555,\\n 931, 317,2517,3027, 325, 569, 686,2107,3084,  60,1042,1333,2794, 264,3177,4014,\\n1628, 258,3712,   7,4464,1176,1043,1778, 683, 114,1975,  78,1492, 383,1886, 510,\\n 386, 645,5291,2891,2069,3305,4138,3867,2939,2603,2493,1935,1066,1848,3588,1015,\\n1282,1289,4609, 697,1453,3044,2666,3611,1856,2412,  54, 719,1330, 568,3778,2459,\\n1748, 788, 492, 551,1191,1000, 488,3394,3763, 282,1799, 348,2016,1523,3155,2390,\\n1049, 382,2019,1788,1170, 729,2968,3523, 897,3926,2785,2938,3292, 350,2319,3238,\\n1718,1717,2655,3453,3143,4465, 161,2889,2980,2009,1421,  56,1908,1640,2387,2232,\\n1917,1874,2477,4921, 148,  83,3438, 592,4245,2882,1822,1055, 741, 115,1496,1624,\\n 381,1638,4592,1020, 516,3214, 458, 947,4575,1432, 211,1514,2926,1865,2142, 189,\\n 852,1221,1400,1486, 882,2299,4036, 351,  28,1122, 700,6479,6480,6481,6482,6483,  // last 512\\n//Everything below is of no interest for detection purpose\\n5508,6484,3900,3414,3974,4441,4024,3537,4037,5628,5099,3633,6485,3148,6486,3636,\\n5509,3257,5510,5973,5445,5872,4941,4403,3174,4627,5873,6276,2286,4230,5446,5874,\\n5122,6102,6103,4162,5447,5123,5323,4849,6277,3980,3851,5066,4246,5774,5067,6278,\\n3001,2807,5695,3346,5775,5974,5158,5448,6487,5975,5976,5776,3598,6279,5696,4806,\\n4211,4154,6280,6488,6489,6490,6281,4212,5037,3374,4171,6491,4562,4807,4722,4827,\\n5977,6104,4532,4079,5159,5324,5160,4404,3858,5359,5875,3975,4288,4610,3486,4512,\\n5325,3893,5360,6282,6283,5560,2522,4231,5978,5186,5449,2569,3878,6284,5401,3578,\\n4415,6285,4656,5124,5979,2506,4247,4449,3219,3417,4334,4969,4329,6492,4576,4828,\\n4172,4416,4829,5402,6286,3927,3852,5361,4369,4830,4477,4867,5876,4173,6493,6105,\\n4657,6287,6106,5877,5450,6494,4155,4868,5451,3700,5629,4384,6288,6289,5878,3189,\\n4881,6107,6290,6495,4513,6496,4692,4515,4723,5100,3356,6497,6291,3810,4080,5561,\\n3570,4430,5980,6498,4355,5697,6499,4724,6108,6109,3764,4050,5038,5879,4093,3226,\\n6292,5068,5217,4693,3342,5630,3504,4831,4377,4466,4309,5698,4431,5777,6293,5778,\\n4272,3706,6110,5326,3752,4676,5327,4273,5403,4767,5631,6500,5699,5880,3475,5039,\\n6294,5562,5125,4348,4301,4482,4068,5126,4593,5700,3380,3462,5981,5563,3824,5404,\\n4970,5511,3825,4738,6295,6501,5452,4516,6111,5881,5564,6502,6296,5982,6503,4213,\\n4163,3454,6504,6112,4009,4450,6113,4658,6297,6114,3035,6505,6115,3995,4904,4739,\\n4563,4942,4110,5040,3661,3928,5362,3674,6506,5292,3612,4791,5565,4149,5983,5328,\\n5259,5021,4725,4577,4564,4517,4364,6298,5405,4578,5260,4594,4156,4157,5453,3592,\\n3491,6507,5127,5512,4709,4922,5984,5701,4726,4289,6508,4015,6116,5128,4628,3424,\\n4241,5779,6299,4905,6509,6510,5454,5702,5780,6300,4365,4923,3971,6511,5161,3270,\\n3158,5985,4100, 867,5129,5703,6117,5363,3695,3301,5513,4467,6118,6512,5455,4232,\\n4242,4629,6513,3959,4478,6514,5514,5329,5986,4850,5162,5566,3846,4694,6119,5456,\\n4869,5781,3779,6301,5704,5987,5515,4710,6302,5882,6120,4392,5364,5705,6515,6121,\\n6516,6517,3736,5988,5457,5989,4695,2457,5883,4551,5782,6303,6304,6305,5130,4971,\\n6122,5163,6123,4870,3263,5365,3150,4871,6518,6306,5783,5069,5706,3513,3498,4409,\\n5330,5632,5366,5458,5459,3991,5990,4502,3324,5991,5784,3696,4518,5633,4119,6519,\\n4630,5634,4417,5707,4832,5992,3418,6124,5993,5567,4768,5218,6520,4595,3458,5367,\\n6125,5635,6126,4202,6521,4740,4924,6307,3981,4069,4385,6308,3883,2675,4051,3834,\\n4302,4483,5568,5994,4972,4101,5368,6309,5164,5884,3922,6127,6522,6523,5261,5460,\\n5187,4164,5219,3538,5516,4111,3524,5995,6310,6311,5369,3181,3386,2484,5188,3464,\\n5569,3627,5708,6524,5406,5165,4677,4492,6312,4872,4851,5885,4468,5996,6313,5709,\\n5710,6128,2470,5886,6314,5293,4882,5785,3325,5461,5101,6129,5711,5786,6525,4906,\\n6526,6527,4418,5887,5712,4808,2907,3701,5713,5888,6528,3765,5636,5331,6529,6530,\\n3593,5889,3637,4943,3692,5714,5787,4925,6315,6130,5462,4405,6131,6132,6316,5262,\\n6531,6532,5715,3859,5716,5070,4696,5102,3929,5788,3987,4792,5997,6533,6534,3920,\\n4809,5000,5998,6535,2974,5370,6317,5189,5263,5717,3826,6536,3953,5001,4883,3190,\\n5463,5890,4973,5999,4741,6133,6134,3607,5570,6000,4711,3362,3630,4552,5041,6318,\\n6001,2950,2953,5637,4646,5371,4944,6002,2044,4120,3429,6319,6537,5103,4833,6538,\\n6539,4884,4647,3884,6003,6004,4758,3835,5220,5789,4565,5407,6540,6135,5294,4697,\\n4852,6320,6321,3206,4907,6541,6322,4945,6542,6136,6543,6323,6005,4631,3519,6544,\\n5891,6545,5464,3784,5221,6546,5571,4659,6547,6324,6137,5190,6548,3853,6549,4016,\\n4834,3954,6138,5332,3827,4017,3210,3546,4469,5408,5718,3505,4648,5790,5131,5638,\\n5791,5465,4727,4318,6325,6326,5792,4553,4010,4698,3439,4974,3638,4335,3085,6006,\\n5104,5042,5166,5892,5572,6327,4356,4519,5222,5573,5333,5793,5043,6550,5639,5071,\\n4503,6328,6139,6551,6140,3914,3901,5372,6007,5640,4728,4793,3976,3836,4885,6552,\\n4127,6553,4451,4102,5002,6554,3686,5105,6555,5191,5072,5295,4611,5794,5296,6556,\\n5893,5264,5894,4975,5466,5265,4699,4976,4370,4056,3492,5044,4886,6557,5795,4432,\\n4769,4357,5467,3940,4660,4290,6141,4484,4770,4661,3992,6329,4025,4662,5022,4632,\\n4835,4070,5297,4663,4596,5574,5132,5409,5895,6142,4504,5192,4664,5796,5896,3885,\\n5575,5797,5023,4810,5798,3732,5223,4712,5298,4084,5334,5468,6143,4052,4053,4336,\\n4977,4794,6558,5335,4908,5576,5224,4233,5024,4128,5469,5225,4873,6008,5045,4729,\\n4742,4633,3675,4597,6559,5897,5133,5577,5003,5641,5719,6330,6560,3017,2382,3854,\\n4406,4811,6331,4393,3964,4946,6561,2420,3722,6562,4926,4378,3247,1736,4442,6332,\\n5134,6333,5226,3996,2918,5470,4319,4003,4598,4743,4744,4485,3785,3902,5167,5004,\\n5373,4394,5898,6144,4874,1793,3997,6334,4085,4214,5106,5642,4909,5799,6009,4419,\\n4189,3330,5899,4165,4420,5299,5720,5227,3347,6145,4081,6335,2876,3930,6146,3293,\\n3786,3910,3998,5900,5300,5578,2840,6563,5901,5579,6147,3531,5374,6564,6565,5580,\\n4759,5375,6566,6148,3559,5643,6336,6010,5517,6337,6338,5721,5902,3873,6011,6339,\\n6567,5518,3868,3649,5722,6568,4771,4947,6569,6149,4812,6570,2853,5471,6340,6341,\\n5644,4795,6342,6012,5723,6343,5724,6013,4349,6344,3160,6150,5193,4599,4514,4493,\\n5168,4320,6345,4927,3666,4745,5169,5903,5005,4928,6346,5725,6014,4730,4203,5046,\\n4948,3395,5170,6015,4150,6016,5726,5519,6347,5047,3550,6151,6348,4197,4310,5904,\\n6571,5581,2965,6152,4978,3960,4291,5135,6572,5301,5727,4129,4026,5905,4853,5728,\\n5472,6153,6349,4533,2700,4505,5336,4678,3583,5073,2994,4486,3043,4554,5520,6350,\\n6017,5800,4487,6351,3931,4103,5376,6352,4011,4321,4311,4190,5136,6018,3988,3233,\\n4350,5906,5645,4198,6573,5107,3432,4191,3435,5582,6574,4139,5410,6353,5411,3944,\\n5583,5074,3198,6575,6354,4358,6576,5302,4600,5584,5194,5412,6577,6578,5585,5413,\\n5303,4248,5414,3879,4433,6579,4479,5025,4854,5415,6355,4760,4772,3683,2978,4700,\\n3797,4452,3965,3932,3721,4910,5801,6580,5195,3551,5907,3221,3471,3029,6019,3999,\\n5908,5909,5266,5267,3444,3023,3828,3170,4796,5646,4979,4259,6356,5647,5337,3694,\\n6357,5648,5338,4520,4322,5802,3031,3759,4071,6020,5586,4836,4386,5048,6581,3571,\\n4679,4174,4949,6154,4813,3787,3402,3822,3958,3215,3552,5268,4387,3933,4950,4359,\\n6021,5910,5075,3579,6358,4234,4566,5521,6359,3613,5049,6022,5911,3375,3702,3178,\\n4911,5339,4521,6582,6583,4395,3087,3811,5377,6023,6360,6155,4027,5171,5649,4421,\\n4249,2804,6584,2270,6585,4000,4235,3045,6156,5137,5729,4140,4312,3886,6361,4330,\\n6157,4215,6158,3500,3676,4929,4331,3713,4930,5912,4265,3776,3368,5587,4470,4855,\\n3038,4980,3631,6159,6160,4132,4680,6161,6362,3923,4379,5588,4255,6586,4121,6587,\\n6363,4649,6364,3288,4773,4774,6162,6024,6365,3543,6588,4274,3107,3737,5050,5803,\\n4797,4522,5589,5051,5730,3714,4887,5378,4001,4523,6163,5026,5522,4701,4175,2791,\\n3760,6589,5473,4224,4133,3847,4814,4815,4775,3259,5416,6590,2738,6164,6025,5304,\\n3733,5076,5650,4816,5590,6591,6165,6592,3934,5269,6593,3396,5340,6594,5804,3445,\\n3602,4042,4488,5731,5732,3525,5591,4601,5196,6166,6026,5172,3642,4612,3202,4506,\\n4798,6366,3818,5108,4303,5138,5139,4776,3332,4304,2915,3415,4434,5077,5109,4856,\\n2879,5305,4817,6595,5913,3104,3144,3903,4634,5341,3133,5110,5651,5805,6167,4057,\\n5592,2945,4371,5593,6596,3474,4182,6367,6597,6168,4507,4279,6598,2822,6599,4777,\\n4713,5594,3829,6169,3887,5417,6170,3653,5474,6368,4216,2971,5228,3790,4579,6369,\\n5733,6600,6601,4951,4746,4555,6602,5418,5475,6027,3400,4665,5806,6171,4799,6028,\\n5052,6172,3343,4800,4747,5006,6370,4556,4217,5476,4396,5229,5379,5477,3839,5914,\\n5652,5807,4714,3068,4635,5808,6173,5342,4192,5078,5419,5523,5734,6174,4557,6175,\\n4602,6371,6176,6603,5809,6372,5735,4260,3869,5111,5230,6029,5112,6177,3126,4681,\\n5524,5915,2706,3563,4748,3130,6178,4018,5525,6604,6605,5478,4012,4837,6606,4534,\\n4193,5810,4857,3615,5479,6030,4082,3697,3539,4086,5270,3662,4508,4931,5916,4912,\\n5811,5027,3888,6607,4397,3527,3302,3798,2775,2921,2637,3966,4122,4388,4028,4054,\\n1633,4858,5079,3024,5007,3982,3412,5736,6608,3426,3236,5595,3030,6179,3427,3336,\\n3279,3110,6373,3874,3039,5080,5917,5140,4489,3119,6374,5812,3405,4494,6031,4666,\\n4141,6180,4166,6032,5813,4981,6609,5081,4422,4982,4112,3915,5653,3296,3983,6375,\\n4266,4410,5654,6610,6181,3436,5082,6611,5380,6033,3819,5596,4535,5231,5306,5113,\\n6612,4952,5918,4275,3113,6613,6376,6182,6183,5814,3073,4731,4838,5008,3831,6614,\\n4888,3090,3848,4280,5526,5232,3014,5655,5009,5737,5420,5527,6615,5815,5343,5173,\\n5381,4818,6616,3151,4953,6617,5738,2796,3204,4360,2989,4281,5739,5174,5421,5197,\\n3132,5141,3849,5142,5528,5083,3799,3904,4839,5480,2880,4495,3448,6377,6184,5271,\\n5919,3771,3193,6034,6035,5920,5010,6036,5597,6037,6378,6038,3106,5422,6618,5423,\\n5424,4142,6619,4889,5084,4890,4313,5740,6620,3437,5175,5307,5816,4199,5198,5529,\\n5817,5199,5656,4913,5028,5344,3850,6185,2955,5272,5011,5818,4567,4580,5029,5921,\\n3616,5233,6621,6622,6186,4176,6039,6379,6380,3352,5200,5273,2908,5598,5234,3837,\\n5308,6623,6624,5819,4496,4323,5309,5201,6625,6626,4983,3194,3838,4167,5530,5922,\\n5274,6381,6382,3860,3861,5599,3333,4292,4509,6383,3553,5481,5820,5531,4778,6187,\\n3955,3956,4324,4389,4218,3945,4325,3397,2681,5923,4779,5085,4019,5482,4891,5382,\\n5383,6040,4682,3425,5275,4094,6627,5310,3015,5483,5657,4398,5924,3168,4819,6628,\\n5925,6629,5532,4932,4613,6041,6630,4636,6384,4780,4204,5658,4423,5821,3989,4683,\\n5822,6385,4954,6631,5345,6188,5425,5012,5384,3894,6386,4490,4104,6632,5741,5053,\\n6633,5823,5926,5659,5660,5927,6634,5235,5742,5824,4840,4933,4820,6387,4859,5928,\\n4955,6388,4143,3584,5825,5346,5013,6635,5661,6389,5014,5484,5743,4337,5176,5662,\\n6390,2836,6391,3268,6392,6636,6042,5236,6637,4158,6638,5744,5663,4471,5347,3663,\\n4123,5143,4293,3895,6639,6640,5311,5929,5826,3800,6189,6393,6190,5664,5348,3554,\\n3594,4749,4603,6641,5385,4801,6043,5827,4183,6642,5312,5426,4761,6394,5665,6191,\\n4715,2669,6643,6644,5533,3185,5427,5086,5930,5931,5386,6192,6044,6645,4781,4013,\\n5745,4282,4435,5534,4390,4267,6045,5746,4984,6046,2743,6193,3501,4087,5485,5932,\\n5428,4184,4095,5747,4061,5054,3058,3862,5933,5600,6646,5144,3618,6395,3131,5055,\\n5313,6396,4650,4956,3855,6194,3896,5202,4985,4029,4225,6195,6647,5828,5486,5829,\\n3589,3002,6648,6397,4782,5276,6649,6196,6650,4105,3803,4043,5237,5830,6398,4096,\\n3643,6399,3528,6651,4453,3315,4637,6652,3984,6197,5535,3182,3339,6653,3096,2660,\\n6400,6654,3449,5934,4250,4236,6047,6401,5831,6655,5487,3753,4062,5832,6198,6199,\\n6656,3766,6657,3403,4667,6048,6658,4338,2897,5833,3880,2797,3780,4326,6659,5748,\\n5015,6660,5387,4351,5601,4411,6661,3654,4424,5935,4339,4072,5277,4568,5536,6402,\\n6662,5238,6663,5349,5203,6200,5204,6201,5145,4536,5016,5056,4762,5834,4399,4957,\\n6202,6403,5666,5749,6664,4340,6665,5936,5177,5667,6666,6667,3459,4668,6404,6668,\\n6669,4543,6203,6670,4276,6405,4480,5537,6671,4614,5205,5668,6672,3348,2193,4763,\\n6406,6204,5937,5602,4177,5669,3419,6673,4020,6205,4443,4569,5388,3715,3639,6407,\\n6049,4058,6206,6674,5938,4544,6050,4185,4294,4841,4651,4615,5488,6207,6408,6051,\\n5178,3241,3509,5835,6208,4958,5836,4341,5489,5278,6209,2823,5538,5350,5206,5429,\\n6675,4638,4875,4073,3516,4684,4914,4860,5939,5603,5389,6052,5057,3237,5490,3791,\\n6676,6409,6677,4821,4915,4106,5351,5058,4243,5539,4244,5604,4842,4916,5239,3028,\\n3716,5837,5114,5605,5390,5940,5430,6210,4332,6678,5540,4732,3667,3840,6053,4305,\\n3408,5670,5541,6410,2744,5240,5750,6679,3234,5606,6680,5607,5671,3608,4283,4159,\\n4400,5352,4783,6681,6411,6682,4491,4802,6211,6412,5941,6413,6414,5542,5751,6683,\\n4669,3734,5942,6684,6415,5943,5059,3328,4670,4144,4268,6685,6686,6687,6688,4372,\\n3603,6689,5944,5491,4373,3440,6416,5543,4784,4822,5608,3792,4616,5838,5672,3514,\\n5391,6417,4892,6690,4639,6691,6054,5673,5839,6055,6692,6056,5392,6212,4038,5544,\\n5674,4497,6057,6693,5840,4284,5675,4021,4545,5609,6418,4454,6419,6213,4113,4472,\\n5314,3738,5087,5279,4074,5610,4959,4063,3179,4750,6058,6420,6214,3476,4498,4716,\\n5431,4960,4685,6215,5241,6694,6421,6216,6695,5841,5945,6422,3748,5946,5179,3905,\\n5752,5545,5947,4374,6217,4455,6423,4412,6218,4803,5353,6696,3832,5280,6219,4327,\\n4702,6220,6221,6059,4652,5432,6424,3749,4751,6425,5753,4986,5393,4917,5948,5030,\\n5754,4861,4733,6426,4703,6697,6222,4671,5949,4546,4961,5180,6223,5031,3316,5281,\\n6698,4862,4295,4934,5207,3644,6427,5842,5950,6428,6429,4570,5843,5282,6430,6224,\\n5088,3239,6060,6699,5844,5755,6061,6431,2701,5546,6432,5115,5676,4039,3993,3327,\\n4752,4425,5315,6433,3941,6434,5677,4617,4604,3074,4581,6225,5433,6435,6226,6062,\\n4823,5756,5116,6227,3717,5678,4717,5845,6436,5679,5846,6063,5847,6064,3977,3354,\\n6437,3863,5117,6228,5547,5394,4499,4524,6229,4605,6230,4306,4500,6700,5951,6065,\\n3693,5952,5089,4366,4918,6701,6231,5548,6232,6702,6438,4704,5434,6703,6704,5953,\\n4168,6705,5680,3420,6706,5242,4407,6066,3812,5757,5090,5954,4672,4525,3481,5681,\\n4618,5395,5354,5316,5955,6439,4962,6707,4526,6440,3465,4673,6067,6441,5682,6708,\\n5435,5492,5758,5683,4619,4571,4674,4804,4893,4686,5493,4753,6233,6068,4269,6442,\\n6234,5032,4705,5146,5243,5208,5848,6235,6443,4963,5033,4640,4226,6236,5849,3387,\\n6444,6445,4436,4437,5850,4843,5494,4785,4894,6709,4361,6710,5091,5956,3331,6237,\\n4987,5549,6069,6711,4342,3517,4473,5317,6070,6712,6071,4706,6446,5017,5355,6713,\\n6714,4988,5436,6447,4734,5759,6715,4735,4547,4456,4754,6448,5851,6449,6450,3547,\\n5852,5318,6451,6452,5092,4205,6716,6238,4620,4219,5611,6239,6072,4481,5760,5957,\\n5958,4059,6240,6453,4227,4537,6241,5761,4030,4186,5244,5209,3761,4457,4876,3337,\\n5495,5181,6242,5959,5319,5612,5684,5853,3493,5854,6073,4169,5613,5147,4895,6074,\\n5210,6717,5182,6718,3830,6243,2798,3841,6075,6244,5855,5614,3604,4606,5496,5685,\\n5118,5356,6719,6454,5960,5357,5961,6720,4145,3935,4621,5119,5962,4261,6721,6455,\\n4786,5963,4375,4582,6245,6246,6247,6076,5437,4877,5856,3376,4380,6248,4160,6722,\\n5148,6456,5211,6457,6723,4718,6458,6724,6249,5358,4044,3297,6459,6250,5857,5615,\\n5497,5245,6460,5498,6725,6251,6252,5550,3793,5499,2959,5396,6461,6462,4572,5093,\\n5500,5964,3806,4146,6463,4426,5762,5858,6077,6253,4755,3967,4220,5965,6254,4989,\\n5501,6464,4352,6726,6078,4764,2290,5246,3906,5438,5283,3767,4964,2861,5763,5094,\\n6255,6256,4622,5616,5859,5860,4707,6727,4285,4708,4824,5617,6257,5551,4787,5212,\\n4965,4935,4687,6465,6728,6466,5686,6079,3494,4413,2995,5247,5966,5618,6729,5967,\\n5764,5765,5687,5502,6730,6731,6080,5397,6467,4990,6258,6732,4538,5060,5619,6733,\\n4719,5688,5439,5018,5149,5284,5503,6734,6081,4607,6259,5120,3645,5861,4583,6260,\\n4584,4675,5620,4098,5440,6261,4863,2379,3306,4585,5552,5689,4586,5285,6735,4864,\\n6736,5286,6082,6737,4623,3010,4788,4381,4558,5621,4587,4896,3698,3161,5248,4353,\\n4045,6262,3754,5183,4588,6738,6263,6739,6740,5622,3936,6741,6468,6742,6264,5095,\\n6469,4991,5968,6743,4992,6744,6083,4897,6745,4256,5766,4307,3108,3968,4444,5287,\\n3889,4343,6084,4510,6085,4559,6086,4898,5969,6746,5623,5061,4919,5249,5250,5504,\\n5441,6265,5320,4878,3242,5862,5251,3428,6087,6747,4237,5624,5442,6266,5553,4539,\\n6748,2585,3533,5398,4262,6088,5150,4736,4438,6089,6267,5505,4966,6749,6268,6750,\\n6269,5288,5554,3650,6090,6091,4624,6092,5690,6751,5863,4270,5691,4277,5555,5864,\\n6752,5692,4720,4865,6470,5151,4688,4825,6753,3094,6754,6471,3235,4653,6755,5213,\\n5399,6756,3201,4589,5865,4967,6472,5866,6473,5019,3016,6757,5321,4756,3957,4573,\\n6093,4993,5767,4721,6474,6758,5625,6759,4458,6475,6270,6760,5556,4994,5214,5252,\\n6271,3875,5768,6094,5034,5506,4376,5769,6761,2120,6476,5253,5770,6762,5771,5970,\\n3990,5971,5557,5558,5772,6477,6095,2787,4641,5972,5121,6096,6097,6272,6763,3703,\\n5867,5507,6273,4206,6274,4789,6098,6764,3619,3646,3833,3804,2394,3788,4936,3978,\\n4866,4899,6099,6100,5559,6478,6765,3599,5868,6101,5869,5870,6275,6766,4527,6767\\n];\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// Big5 frequency table\\n// by Taiwan's Mandarin Promotion Council\\n// <http://www.edu.tw:81/mandr/>\\n//\\n// 128  --> 0.42261\\n// 256  --> 0.57851\\n// 512  --> 0.74851\\n// 1024 --> 0.89384\\n// 2048 --> 0.97583\\n//\\n// Ideal Distribution Ratio = 0.74851/(1-0.74851) =2.98\\n// Random Distribution Ration = 512/(5401-512)=0.105\\n//\\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\\n\\nexports.BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75;\\n\\n//Char to FreqOrder table\\nexports.BIG5_TABLE_SIZE = 5376;\\n\\nexports.Big5CharToFreqOrder = [\\n   1,1801,1506, 255,1431, 198,   9,  82,   6,5008, 177, 202,3681,1256,2821, 110, //   16\\n3814,  33,3274, 261,  76,  44,2114,  16,2946,2187,1176, 659,3971,  26,3451,2653, //   32\\n1198,3972,3350,4202, 410,2215, 302, 590, 361,1964,   8, 204,  58,4510,5009,1932, //   48\\n  63,5010,5011, 317,1614,  75, 222, 159,4203,2417,1480,5012,3555,3091, 224,2822, //   64\\n3682,   3,  10,3973,1471,  29,2787,1135,2866,1940, 873, 130,3275,1123, 312,5013, //   80\\n4511,2052, 507, 252, 682,5014, 142,1915, 124, 206,2947,  34,3556,3204,  64, 604, //   96\\n5015,2501,1977,1978, 155,1991, 645, 641,1606,5016,3452, 337,  72, 406,5017,  80, //  112\\n 630, 238,3205,1509, 263, 939,1092,2654, 756,1440,1094,3453, 449,  69,2987, 591, //  128\\n 179,2096, 471, 115,2035,1844,  60,  50,2988, 134, 806,1869, 734,2036,3454, 180, //  144\\n 995,1607, 156, 537,2907, 688,5018, 319,1305, 779,2145, 514,2379, 298,4512, 359, //  160\\n2502,  90,2716,1338, 663,  11, 906,1099,2553,  20,2441, 182, 532,1716,5019, 732, //  176\\n1376,4204,1311,1420,3206,  25,2317,1056, 113, 399, 382,1950, 242,3455,2474, 529, //  192\\n3276, 475,1447,3683,5020, 117,  21, 656, 810,1297,2300,2334,3557,5021, 126,4205, //  208\\n 706, 456, 150, 613,4513,  71,1118,2037,4206, 145,3092,  85, 835, 486,2115,1246, //  224\\n1426, 428, 727,1285,1015, 800, 106, 623, 303,1281,5022,2128,2359, 347,3815, 221, //  240\\n3558,3135,5023,1956,1153,4207,  83, 296,1199,3093, 192, 624,  93,5024, 822,1898, //  256\\n2823,3136, 795,2065, 991,1554,1542,1592,  27,  43,2867, 859, 139,1456, 860,4514, //  272\\n 437, 712,3974, 164,2397,3137, 695, 211,3037,2097, 195,3975,1608,3559,3560,3684, //  288\\n3976, 234, 811,2989,2098,3977,2233,1441,3561,1615,2380, 668,2077,1638, 305, 228, //  304\\n1664,4515, 467, 415,5025, 262,2099,1593, 239, 108, 300, 200,1033, 512,1247,2078, //  320\\n5026,5027,2176,3207,3685,2682, 593, 845,1062,3277,  88,1723,2038,3978,1951, 212, //  336\\n 266, 152, 149, 468,1899,4208,4516,  77, 187,5028,3038,  37,   5,2990,5029,3979, //  352\\n5030,5031,  39,2524,4517,2908,3208,2079,  55, 148,  74,4518, 545, 483,1474,1029, //  368\\n1665, 217,1870,1531,3138,1104,2655,4209,  24, 172,3562, 900,3980,3563,3564,4519, //  384\\n  32,1408,2824,1312, 329, 487,2360,2251,2717, 784,2683,   4,3039,3351,1427,1789, //  400\\n 188, 109, 499,5032,3686,1717,1790, 888,1217,3040,4520,5033,3565,5034,3352,1520, //  416\\n3687,3981, 196,1034, 775,5035,5036, 929,1816, 249, 439,  38,5037,1063,5038, 794, //  432\\n3982,1435,2301,  46, 178,3278,2066,5039,2381,5040, 214,1709,4521, 804,  35, 707, //  448\\n 324,3688,1601,2554, 140, 459,4210,5041,5042,1365, 839, 272, 978,2262,2580,3456, //  464\\n2129,1363,3689,1423, 697, 100,3094,  48,  70,1231, 495,3139,2196,5043,1294,5044, //  480\\n2080, 462, 586,1042,3279, 853, 256, 988, 185,2382,3457,1698, 434,1084,5045,3458, //  496\\n 314,2625,2788,4522,2335,2336, 569,2285, 637,1817,2525, 757,1162,1879,1616,3459, //  512\\n 287,1577,2116, 768,4523,1671,2868,3566,2526,1321,3816, 909,2418,5046,4211, 933, //  528\\n3817,4212,2053,2361,1222,4524, 765,2419,1322, 786,4525,5047,1920,1462,1677,2909, //  544\\n1699,5048,4526,1424,2442,3140,3690,2600,3353,1775,1941,3460,3983,4213, 309,1369, //  560\\n1130,2825, 364,2234,1653,1299,3984,3567,3985,3986,2656, 525,1085,3041, 902,2001, //  576\\n1475, 964,4527, 421,1845,1415,1057,2286, 940,1364,3141, 376,4528,4529,1381,   7, //  592\\n2527, 983,2383, 336,1710,2684,1846, 321,3461, 559,1131,3042,2752,1809,1132,1313, //  608\\n 265,1481,1858,5049, 352,1203,2826,3280, 167,1089, 420,2827, 776, 792,1724,3568, //  624\\n4214,2443,3281,5050,4215,5051, 446, 229, 333,2753, 901,3818,1200,1557,4530,2657, //  640\\n1921, 395,2754,2685,3819,4216,1836, 125, 916,3209,2626,4531,5052,5053,3820,5054, //  656\\n5055,5056,4532,3142,3691,1133,2555,1757,3462,1510,2318,1409,3569,5057,2146, 438, //  672\\n2601,2910,2384,3354,1068, 958,3043, 461, 311,2869,2686,4217,1916,3210,4218,1979, //  688\\n 383, 750,2755,2627,4219, 274, 539, 385,1278,1442,5058,1154,1965, 384, 561, 210, //  704\\n  98,1295,2556,3570,5059,1711,2420,1482,3463,3987,2911,1257, 129,5060,3821, 642, //  720\\n 523,2789,2790,2658,5061, 141,2235,1333,  68, 176, 441, 876, 907,4220, 603,2602, //  736\\n 710, 171,3464, 404, 549,  18,3143,2398,1410,3692,1666,5062,3571,4533,2912,4534, //  752\\n5063,2991, 368,5064, 146, 366,  99, 871,3693,1543, 748, 807,1586,1185,  22,2263, //  768\\n 379,3822,3211,5065,3212, 505,1942,2628,1992,1382,2319,5066, 380,2362, 218, 702, //  784\\n1818,1248,3465,3044,3572,3355,3282,5067,2992,3694, 930,3283,3823,5068,  59,5069, //  800\\n 585, 601,4221, 497,3466,1112,1314,4535,1802,5070,1223,1472,2177,5071, 749,1837, //  816\\n 690,1900,3824,1773,3988,1476, 429,1043,1791,2236,2117, 917,4222, 447,1086,1629, //  832\\n5072, 556,5073,5074,2021,1654, 844,1090, 105, 550, 966,1758,2828,1008,1783, 686, //  848\\n1095,5075,2287, 793,1602,5076,3573,2603,4536,4223,2948,2302,4537,3825, 980,2503, //  864\\n 544, 353, 527,4538, 908,2687,2913,5077, 381,2629,1943,1348,5078,1341,1252, 560, //  880\\n3095,5079,3467,2870,5080,2054, 973, 886,2081, 143,4539,5081,5082, 157,3989, 496, //  896\\n4224,  57, 840, 540,2039,4540,4541,3468,2118,1445, 970,2264,1748,1966,2082,4225, //  912\\n3144,1234,1776,3284,2829,3695, 773,1206,2130,1066,2040,1326,3990,1738,1725,4226, //  928\\n 279,3145,  51,1544,2604, 423,1578,2131,2067, 173,4542,1880,5083,5084,1583, 264, //  944\\n 610,3696,4543,2444, 280, 154,5085,5086,5087,1739, 338,1282,3096, 693,2871,1411, //  960\\n1074,3826,2445,5088,4544,5089,5090,1240, 952,2399,5091,2914,1538,2688, 685,1483, //  976\\n4227,2475,1436, 953,4228,2055,4545, 671,2400,  79,4229,2446,3285, 608, 567,2689, //  992\\n3469,4230,4231,1691, 393,1261,1792,2401,5092,4546,5093,5094,5095,5096,1383,1672, // 1008\\n3827,3213,1464, 522,1119, 661,1150, 216, 675,4547,3991,1432,3574, 609,4548,2690, // 1024\\n2402,5097,5098,5099,4232,3045,   0,5100,2476, 315, 231,2447, 301,3356,4549,2385, // 1040\\n5101, 233,4233,3697,1819,4550,4551,5102,  96,1777,1315,2083,5103, 257,5104,1810, // 1056\\n3698,2718,1139,1820,4234,2022,1124,2164,2791,1778,2659,5105,3097, 363,1655,3214, // 1072\\n5106,2993,5107,5108,5109,3992,1567,3993, 718, 103,3215, 849,1443, 341,3357,2949, // 1088\\n1484,5110,1712, 127,  67, 339,4235,2403, 679,1412, 821,5111,5112, 834, 738, 351, // 1104\\n2994,2147, 846, 235,1497,1881, 418,1993,3828,2719, 186,1100,2148,2756,3575,1545, // 1120\\n1355,2950,2872,1377, 583,3994,4236,2581,2995,5113,1298,3699,1078,2557,3700,2363, // 1136\\n  78,3829,3830, 267,1289,2100,2002,1594,4237, 348, 369,1274,2197,2178,1838,4552, // 1152\\n1821,2830,3701,2757,2288,2003,4553,2951,2758, 144,3358, 882,4554,3995,2759,3470, // 1168\\n4555,2915,5114,4238,1726, 320,5115,3996,3046, 788,2996,5116,2831,1774,1327,2873, // 1184\\n3997,2832,5117,1306,4556,2004,1700,3831,3576,2364,2660, 787,2023, 506, 824,3702, // 1200\\n 534, 323,4557,1044,3359,2024,1901, 946,3471,5118,1779,1500,1678,5119,1882,4558, // 1216\\n 165, 243,4559,3703,2528, 123, 683,4239, 764,4560,  36,3998,1793, 589,2916, 816, // 1232\\n 626,1667,3047,2237,1639,1555,1622,3832,3999,5120,4000,2874,1370,1228,1933, 891, // 1248\\n2084,2917, 304,4240,5121, 292,2997,2720,3577, 691,2101,4241,1115,4561, 118, 662, // 1264\\n5122, 611,1156, 854,2386,1316,2875,   2, 386, 515,2918,5123,5124,3286, 868,2238, // 1280\\n1486, 855,2661, 785,2216,3048,5125,1040,3216,3578,5126,3146, 448,5127,1525,5128, // 1296\\n2165,4562,5129,3833,5130,4242,2833,3579,3147, 503, 818,4001,3148,1568, 814, 676, // 1312\\n1444, 306,1749,5131,3834,1416,1030, 197,1428, 805,2834,1501,4563,5132,5133,5134, // 1328\\n1994,5135,4564,5136,5137,2198,  13,2792,3704,2998,3149,1229,1917,5138,3835,2132, // 1344\\n5139,4243,4565,2404,3580,5140,2217,1511,1727,1120,5141,5142, 646,3836,2448, 307, // 1360\\n5143,5144,1595,3217,5145,5146,5147,3705,1113,1356,4002,1465,2529,2530,5148, 519, // 1376\\n5149, 128,2133,  92,2289,1980,5150,4003,1512, 342,3150,2199,5151,2793,2218,1981, // 1392\\n3360,4244, 290,1656,1317, 789, 827,2365,5152,3837,4566, 562, 581,4004,5153, 401, // 1408\\n4567,2252,  94,4568,5154,1399,2794,5155,1463,2025,4569,3218,1944,5156, 828,1105, // 1424\\n4245,1262,1394,5157,4246, 605,4570,5158,1784,2876,5159,2835, 819,2102, 578,2200, // 1440\\n2952,5160,1502, 436,3287,4247,3288,2836,4005,2919,3472,3473,5161,2721,2320,5162, // 1456\\n5163,2337,2068,  23,4571, 193, 826,3838,2103, 699,1630,4248,3098, 390,1794,1064, // 1472\\n3581,5164,1579,3099,3100,1400,5165,4249,1839,1640,2877,5166,4572,4573, 137,4250, // 1488\\n 598,3101,1967, 780, 104, 974,2953,5167, 278, 899, 253, 402, 572, 504, 493,1339, // 1504\\n5168,4006,1275,4574,2582,2558,5169,3706,3049,3102,2253, 565,1334,2722, 863,  41, // 1520\\n5170,5171,4575,5172,1657,2338,  19, 463,2760,4251, 606,5173,2999,3289,1087,2085, // 1536\\n1323,2662,3000,5174,1631,1623,1750,4252,2691,5175,2878, 791,2723,2663,2339, 232, // 1552\\n2421,5176,3001,1498,5177,2664,2630, 755,1366,3707,3290,3151,2026,1609, 119,1918, // 1568\\n3474, 862,1026,4253,5178,4007,3839,4576,4008,4577,2265,1952,2477,5179,1125, 817, // 1584\\n4254,4255,4009,1513,1766,2041,1487,4256,3050,3291,2837,3840,3152,5180,5181,1507, // 1600\\n5182,2692, 733,  40,1632,1106,2879, 345,4257, 841,2531, 230,4578,3002,1847,3292, // 1616\\n3475,5183,1263, 986,3476,5184, 735, 879, 254,1137, 857, 622,1300,1180,1388,1562, // 1632\\n4010,4011,2954, 967,2761,2665,1349, 592,2134,1692,3361,3003,1995,4258,1679,4012, // 1648\\n1902,2188,5185, 739,3708,2724,1296,1290,5186,4259,2201,2202,1922,1563,2605,2559, // 1664\\n1871,2762,3004,5187, 435,5188, 343,1108, 596,  17,1751,4579,2239,3477,3709,5189, // 1680\\n4580, 294,3582,2955,1693, 477, 979, 281,2042,3583, 643,2043,3710,2631,2795,2266, // 1696\\n1031,2340,2135,2303,3584,4581, 367,1249,2560,5190,3585,5191,4582,1283,3362,2005, // 1712\\n 240,1762,3363,4583,4584, 836,1069,3153, 474,5192,2149,2532, 268,3586,5193,3219, // 1728\\n1521,1284,5194,1658,1546,4260,5195,3587,3588,5196,4261,3364,2693,1685,4262, 961, // 1744\\n1673,2632, 190,2006,2203,3841,4585,4586,5197, 570,2504,3711,1490,5198,4587,2633, // 1760\\n3293,1957,4588, 584,1514, 396,1045,1945,5199,4589,1968,2449,5200,5201,4590,4013, // 1776\\n 619,5202,3154,3294, 215,2007,2796,2561,3220,4591,3221,4592, 763,4263,3842,4593, // 1792\\n5203,5204,1958,1767,2956,3365,3712,1174, 452,1477,4594,3366,3155,5205,2838,1253, // 1808\\n2387,2189,1091,2290,4264, 492,5206, 638,1169,1825,2136,1752,4014, 648, 926,1021, // 1824\\n1324,4595, 520,4596, 997, 847,1007, 892,4597,3843,2267,1872,3713,2405,1785,4598, // 1840\\n1953,2957,3103,3222,1728,4265,2044,3714,4599,2008,1701,3156,1551,  30,2268,4266, // 1856\\n5207,2027,4600,3589,5208, 501,5209,4267, 594,3478,2166,1822,3590,3479,3591,3223, // 1872\\n 829,2839,4268,5210,1680,3157,1225,4269,5211,3295,4601,4270,3158,2341,5212,4602, // 1888\\n4271,5213,4015,4016,5214,1848,2388,2606,3367,5215,4603, 374,4017, 652,4272,4273, // 1904\\n 375,1140, 798,5216,5217,5218,2366,4604,2269, 546,1659, 138,3051,2450,4605,5219, // 1920\\n2254, 612,1849, 910, 796,3844,1740,1371, 825,3845,3846,5220,2920,2562,5221, 692, // 1936\\n 444,3052,2634, 801,4606,4274,5222,1491, 244,1053,3053,4275,4276, 340,5223,4018, // 1952\\n1041,3005, 293,1168,  87,1357,5224,1539, 959,5225,2240, 721, 694,4277,3847, 219, // 1968\\n1478, 644,1417,3368,2666,1413,1401,1335,1389,4019,5226,5227,3006,2367,3159,1826, // 1984\\n 730,1515, 184,2840,  66,4607,5228,1660,2958, 246,3369, 378,1457, 226,3480, 975, // 2000\\n4020,2959,1264,3592, 674, 696,5229, 163,5230,1141,2422,2167, 713,3593,3370,4608, // 2016\\n4021,5231,5232,1186,  15,5233,1079,1070,5234,1522,3224,3594, 276,1050,2725, 758, // 2032\\n1126, 653,2960,3296,5235,2342, 889,3595,4022,3104,3007, 903,1250,4609,4023,3481, // 2048\\n3596,1342,1681,1718, 766,3297, 286,  89,2961,3715,5236,1713,5237,2607,3371,3008, // 2064\\n5238,2962,2219,3225,2880,5239,4610,2505,2533, 181, 387,1075,4024, 731,2190,3372, // 2080\\n5240,3298, 310, 313,3482,2304, 770,4278,  54,3054, 189,4611,3105,3848,4025,5241, // 2096\\n1230,1617,1850, 355,3597,4279,4612,3373, 111,4280,3716,1350,3160,3483,3055,4281, // 2112\\n2150,3299,3598,5242,2797,4026,4027,3009, 722,2009,5243,1071, 247,1207,2343,2478, // 2128\\n1378,4613,2010, 864,1437,1214,4614, 373,3849,1142,2220, 667,4615, 442,2763,2563, // 2144\\n3850,4028,1969,4282,3300,1840, 837, 170,1107, 934,1336,1883,5244,5245,2119,4283, // 2160\\n2841, 743,1569,5246,4616,4284, 582,2389,1418,3484,5247,1803,5248, 357,1395,1729, // 2176\\n3717,3301,2423,1564,2241,5249,3106,3851,1633,4617,1114,2086,4285,1532,5250, 482, // 2192\\n2451,4618,5251,5252,1492, 833,1466,5253,2726,3599,1641,2842,5254,1526,1272,3718, // 2208\\n4286,1686,1795, 416,2564,1903,1954,1804,5255,3852,2798,3853,1159,2321,5256,2881, // 2224\\n4619,1610,1584,3056,2424,2764, 443,3302,1163,3161,5257,5258,4029,5259,4287,2506, // 2240\\n3057,4620,4030,3162,2104,1647,3600,2011,1873,4288,5260,4289, 431,3485,5261, 250, // 2256\\n  97,  81,4290,5262,1648,1851,1558, 160, 848,5263, 866, 740,1694,5264,2204,2843, // 2272\\n3226,4291,4621,3719,1687, 950,2479, 426, 469,3227,3720,3721,4031,5265,5266,1188, // 2288\\n 424,1996, 861,3601,4292,3854,2205,2694, 168,1235,3602,4293,5267,2087,1674,4622, // 2304\\n3374,3303, 220,2565,1009,5268,3855, 670,3010, 332,1208, 717,5269,5270,3603,2452, // 2320\\n4032,3375,5271, 513,5272,1209,2882,3376,3163,4623,1080,5273,5274,5275,5276,2534, // 2336\\n3722,3604, 815,1587,4033,4034,5277,3605,3486,3856,1254,4624,1328,3058,1390,4035, // 2352\\n1741,4036,3857,4037,5278, 236,3858,2453,3304,5279,5280,3723,3859,1273,3860,4625, // 2368\\n5281, 308,5282,4626, 245,4627,1852,2480,1307,2583, 430, 715,2137,2454,5283, 270, // 2384\\n 199,2883,4038,5284,3606,2727,1753, 761,1754, 725,1661,1841,4628,3487,3724,5285, // 2400\\n5286, 587,  14,3305, 227,2608, 326, 480,2270, 943,2765,3607, 291, 650,1884,5287, // 2416\\n1702,1226, 102,1547,  62,3488, 904,4629,3489,1164,4294,5288,5289,1224,1548,2766, // 2432\\n 391, 498,1493,5290,1386,1419,5291,2056,1177,4630, 813, 880,1081,2368, 566,1145, // 2448\\n4631,2291,1001,1035,2566,2609,2242, 394,1286,5292,5293,2069,5294,  86,1494,1730, // 2464\\n4039, 491,1588, 745, 897,2963, 843,3377,4040,2767,2884,3306,1768, 998,2221,2070, // 2480\\n 397,1827,1195,1970,3725,3011,3378, 284,5295,3861,2507,2138,2120,1904,5296,4041, // 2496\\n2151,4042,4295,1036,3490,1905, 114,2567,4296, 209,1527,5297,5298,2964,2844,2635, // 2512\\n2390,2728,3164, 812,2568,5299,3307,5300,1559, 737,1885,3726,1210, 885,  28,2695, // 2528\\n3608,3862,5301,4297,1004,1780,4632,5302, 346,1982,2222,2696,4633,3863,1742, 797, // 2544\\n1642,4043,1934,1072,1384,2152, 896,4044,3308,3727,3228,2885,3609,5303,2569,1959, // 2560\\n4634,2455,1786,5304,5305,5306,4045,4298,1005,1308,3728,4299,2729,4635,4636,1528, // 2576\\n2610, 161,1178,4300,1983, 987,4637,1101,4301, 631,4046,1157,3229,2425,1343,1241, // 2592\\n1016,2243,2570, 372, 877,2344,2508,1160, 555,1935, 911,4047,5307, 466,1170, 169, // 2608\\n1051,2921,2697,3729,2481,3012,1182,2012,2571,1251,2636,5308, 992,2345,3491,1540, // 2624\\n2730,1201,2071,2406,1997,2482,5309,4638, 528,1923,2191,1503,1874,1570,2369,3379, // 2640\\n3309,5310, 557,1073,5311,1828,3492,2088,2271,3165,3059,3107, 767,3108,2799,4639, // 2656\\n1006,4302,4640,2346,1267,2179,3730,3230, 778,4048,3231,2731,1597,2667,5312,4641, // 2672\\n5313,3493,5314,5315,5316,3310,2698,1433,3311, 131,  95,1504,4049, 723,4303,3166, // 2688\\n1842,3610,2768,2192,4050,2028,2105,3731,5317,3013,4051,1218,5318,3380,3232,4052, // 2704\\n4304,2584, 248,1634,3864, 912,5319,2845,3732,3060,3865, 654,  53,5320,3014,5321, // 2720\\n1688,4642, 777,3494,1032,4053,1425,5322, 191, 820,2121,2846, 971,4643, 931,3233, // 2736\\n 135, 664, 783,3866,1998, 772,2922,1936,4054,3867,4644,2923,3234, 282,2732, 640, // 2752\\n1372,3495,1127, 922, 325,3381,5323,5324, 711,2045,5325,5326,4055,2223,2800,1937, // 2768\\n4056,3382,2224,2255,3868,2305,5327,4645,3869,1258,3312,4057,3235,2139,2965,4058, // 2784\\n4059,5328,2225, 258,3236,4646, 101,1227,5329,3313,1755,5330,1391,3314,5331,2924, // 2800\\n2057, 893,5332,5333,5334,1402,4305,2347,5335,5336,3237,3611,5337,5338, 878,1325, // 2816\\n1781,2801,4647, 259,1385,2585, 744,1183,2272,4648,5339,4060,2509,5340, 684,1024, // 2832\\n4306,5341, 472,3612,3496,1165,3315,4061,4062, 322,2153, 881, 455,1695,1152,1340, // 2848\\n 660, 554,2154,4649,1058,4650,4307, 830,1065,3383,4063,4651,1924,5342,1703,1919, // 2864\\n5343, 932,2273, 122,5344,4652, 947, 677,5345,3870,2637, 297,1906,1925,2274,4653, // 2880\\n2322,3316,5346,5347,4308,5348,4309,  84,4310, 112, 989,5349, 547,1059,4064, 701, // 2896\\n3613,1019,5350,4311,5351,3497, 942, 639, 457,2306,2456, 993,2966, 407, 851, 494, // 2912\\n4654,3384, 927,5352,1237,5353,2426,3385, 573,4312, 680, 921,2925,1279,1875, 285, // 2928\\n 790,1448,1984, 719,2168,5354,5355,4655,4065,4066,1649,5356,1541, 563,5357,1077, // 2944\\n5358,3386,3061,3498, 511,3015,4067,4068,3733,4069,1268,2572,3387,3238,4656,4657, // 2960\\n5359, 535,1048,1276,1189,2926,2029,3167,1438,1373,2847,2967,1134,2013,5360,4313, // 2976\\n1238,2586,3109,1259,5361, 700,5362,2968,3168,3734,4314,5363,4315,1146,1876,1907, // 2992\\n4658,2611,4070, 781,2427, 132,1589, 203, 147, 273,2802,2407, 898,1787,2155,4071, // 3008\\n4072,5364,3871,2803,5365,5366,4659,4660,5367,3239,5368,1635,3872, 965,5369,1805, // 3024\\n2699,1516,3614,1121,1082,1329,3317,4073,1449,3873,  65,1128,2848,2927,2769,1590, // 3040\\n3874,5370,5371,  12,2668,  45, 976,2587,3169,4661, 517,2535,1013,1037,3240,5372, // 3056\\n3875,2849,5373,3876,5374,3499,5375,2612, 614,1999,2323,3877,3110,2733,2638,5376, // 3072\\n2588,4316, 599,1269,5377,1811,3735,5378,2700,3111, 759,1060, 489,1806,3388,3318, // 3088\\n1358,5379,5380,2391,1387,1215,2639,2256, 490,5381,5382,4317,1759,2392,2348,5383, // 3104\\n4662,3878,1908,4074,2640,1807,3241,4663,3500,3319,2770,2349, 874,5384,5385,3501, // 3120\\n3736,1859,  91,2928,3737,3062,3879,4664,5386,3170,4075,2669,5387,3502,1202,1403, // 3136\\n3880,2969,2536,1517,2510,4665,3503,2511,5388,4666,5389,2701,1886,1495,1731,4076, // 3152\\n2370,4667,5390,2030,5391,5392,4077,2702,1216, 237,2589,4318,2324,4078,3881,4668, // 3168\\n4669,2703,3615,3504, 445,4670,5393,5394,5395,5396,2771,  61,4079,3738,1823,4080, // 3184\\n5397, 687,2046, 935, 925, 405,2670, 703,1096,1860,2734,4671,4081,1877,1367,2704, // 3200\\n3389, 918,2106,1782,2483, 334,3320,1611,1093,4672, 564,3171,3505,3739,3390, 945, // 3216\\n2641,2058,4673,5398,1926, 872,4319,5399,3506,2705,3112, 349,4320,3740,4082,4674, // 3232\\n3882,4321,3741,2156,4083,4675,4676,4322,4677,2408,2047, 782,4084, 400, 251,4323, // 3248\\n1624,5400,5401, 277,3742, 299,1265, 476,1191,3883,2122,4324,4325,1109, 205,5402, // 3264\\n2590,1000,2157,3616,1861,5403,5404,5405,4678,5406,4679,2573, 107,2484,2158,4085, // 3280\\n3507,3172,5407,1533, 541,1301, 158, 753,4326,2886,3617,5408,1696, 370,1088,4327, // 3296\\n4680,3618, 579, 327, 440, 162,2244, 269,1938,1374,3508, 968,3063,  56,1396,3113, // 3312\\n2107,3321,3391,5409,1927,2159,4681,3016,5410,3619,5411,5412,3743,4682,2485,5413, // 3328\\n2804,5414,1650,4683,5415,2613,5416,5417,4086,2671,3392,1149,3393,4087,3884,4088, // 3344\\n5418,1076,  49,5419, 951,3242,3322,3323, 450,2850, 920,5420,1812,2805,2371,4328, // 3360\\n1909,1138,2372,3885,3509,5421,3243,4684,1910,1147,1518,2428,4685,3886,5422,4686, // 3376\\n2393,2614, 260,1796,3244,5423,5424,3887,3324, 708,5425,3620,1704,5426,3621,1351, // 3392\\n1618,3394,3017,1887, 944,4329,3395,4330,3064,3396,4331,5427,3744, 422, 413,1714, // 3408\\n3325, 500,2059,2350,4332,2486,5428,1344,1911, 954,5429,1668,5430,5431,4089,2409, // 3424\\n4333,3622,3888,4334,5432,2307,1318,2512,3114, 133,3115,2887,4687, 629,  31,2851, // 3440\\n2706,3889,4688, 850, 949,4689,4090,2970,1732,2089,4335,1496,1853,5433,4091, 620, // 3456\\n3245, 981,1242,3745,3397,1619,3746,1643,3326,2140,2457,1971,1719,3510,2169,5434, // 3472\\n3246,5435,5436,3398,1829,5437,1277,4690,1565,2048,5438,1636,3623,3116,5439, 869, // 3488\\n2852, 655,3890,3891,3117,4092,3018,3892,1310,3624,4691,5440,5441,5442,1733, 558, // 3504\\n4692,3747, 335,1549,3065,1756,4336,3748,1946,3511,1830,1291,1192, 470,2735,2108, // 3520\\n2806, 913,1054,4093,5443,1027,5444,3066,4094,4693, 982,2672,3399,3173,3512,3247, // 3536\\n3248,1947,2807,5445, 571,4694,5446,1831,5447,3625,2591,1523,2429,5448,2090, 984, // 3552\\n4695,3749,1960,5449,3750, 852, 923,2808,3513,3751, 969,1519, 999,2049,2325,1705, // 3568\\n5450,3118, 615,1662, 151, 597,4095,2410,2326,1049, 275,4696,3752,4337, 568,3753, // 3584\\n3626,2487,4338,3754,5451,2430,2275, 409,3249,5452,1566,2888,3514,1002, 769,2853, // 3600\\n 194,2091,3174,3755,2226,3327,4339, 628,1505,5453,5454,1763,2180,3019,4096, 521, // 3616\\n1161,2592,1788,2206,2411,4697,4097,1625,4340,4341, 412,  42,3119, 464,5455,2642, // 3632\\n4698,3400,1760,1571,2889,3515,2537,1219,2207,3893,2643,2141,2373,4699,4700,3328, // 3648\\n1651,3401,3627,5456,5457,3628,2488,3516,5458,3756,5459,5460,2276,2092, 460,5461, // 3664\\n4701,5462,3020, 962, 588,3629, 289,3250,2644,1116,  52,5463,3067,1797,5464,5465, // 3680\\n5466,1467,5467,1598,1143,3757,4342,1985,1734,1067,4702,1280,3402, 465,4703,1572, // 3696\\n 510,5468,1928,2245,1813,1644,3630,5469,4704,3758,5470,5471,2673,1573,1534,5472, // 3712\\n5473, 536,1808,1761,3517,3894,3175,2645,5474,5475,5476,4705,3518,2929,1912,2809, // 3728\\n5477,3329,1122, 377,3251,5478, 360,5479,5480,4343,1529, 551,5481,2060,3759,1769, // 3744\\n2431,5482,2930,4344,3330,3120,2327,2109,2031,4706,1404, 136,1468,1479, 672,1171, // 3760\\n3252,2308, 271,3176,5483,2772,5484,2050, 678,2736, 865,1948,4707,5485,2014,4098, // 3776\\n2971,5486,2737,2227,1397,3068,3760,4708,4709,1735,2931,3403,3631,5487,3895, 509, // 3792\\n2854,2458,2890,3896,5488,5489,3177,3178,4710,4345,2538,4711,2309,1166,1010, 552, // 3808\\n 681,1888,5490,5491,2972,2973,4099,1287,1596,1862,3179, 358, 453, 736, 175, 478, // 3824\\n1117, 905,1167,1097,5492,1854,1530,5493,1706,5494,2181,3519,2292,3761,3520,3632, // 3840\\n4346,2093,4347,5495,3404,1193,2489,4348,1458,2193,2208,1863,1889,1421,3331,2932, // 3856\\n3069,2182,3521, 595,2123,5496,4100,5497,5498,4349,1707,2646, 223,3762,1359, 751, // 3872\\n3121, 183,3522,5499,2810,3021, 419,2374, 633, 704,3897,2394, 241,5500,5501,5502, // 3888\\n 838,3022,3763,2277,2773,2459,3898,1939,2051,4101,1309,3122,2246,1181,5503,1136, // 3904\\n2209,3899,2375,1446,4350,2310,4712,5504,5505,4351,1055,2615, 484,3764,5506,4102, // 3920\\n 625,4352,2278,3405,1499,4353,4103,5507,4104,4354,3253,2279,2280,3523,5508,5509, // 3936\\n2774, 808,2616,3765,3406,4105,4355,3123,2539, 526,3407,3900,4356, 955,5510,1620, // 3952\\n4357,2647,2432,5511,1429,3766,1669,1832, 994, 928,5512,3633,1260,5513,5514,5515, // 3968\\n1949,2293, 741,2933,1626,4358,2738,2460, 867,1184, 362,3408,1392,5516,5517,4106, // 3984\\n4359,1770,1736,3254,2934,4713,4714,1929,2707,1459,1158,5518,3070,3409,2891,1292, // 4000\\n1930,2513,2855,3767,1986,1187,2072,2015,2617,4360,5519,2574,2514,2170,3768,2490, // 4016\\n3332,5520,3769,4715,5521,5522, 666,1003,3023,1022,3634,4361,5523,4716,1814,2257, // 4032\\n 574,3901,1603, 295,1535, 705,3902,4362, 283, 858, 417,5524,5525,3255,4717,4718, // 4048\\n3071,1220,1890,1046,2281,2461,4107,1393,1599, 689,2575, 388,4363,5526,2491, 802, // 4064\\n5527,2811,3903,2061,1405,2258,5528,4719,3904,2110,1052,1345,3256,1585,5529, 809, // 4080\\n5530,5531,5532, 575,2739,3524, 956,1552,1469,1144,2328,5533,2329,1560,2462,3635, // 4096\\n3257,4108, 616,2210,4364,3180,2183,2294,5534,1833,5535,3525,4720,5536,1319,3770, // 4112\\n3771,1211,3636,1023,3258,1293,2812,5537,5538,5539,3905, 607,2311,3906, 762,2892, // 4128\\n1439,4365,1360,4721,1485,3072,5540,4722,1038,4366,1450,2062,2648,4367,1379,4723, // 4144\\n2593,5541,5542,4368,1352,1414,2330,2935,1172,5543,5544,3907,3908,4724,1798,1451, // 4160\\n5545,5546,5547,5548,2936,4109,4110,2492,2351, 411,4111,4112,3637,3333,3124,4725, // 4176\\n1561,2674,1452,4113,1375,5549,5550,  47,2974, 316,5551,1406,1591,2937,3181,5552, // 4192\\n1025,2142,3125,3182, 354,2740, 884,2228,4369,2412, 508,3772, 726,3638, 996,2433, // 4208\\n3639, 729,5553, 392,2194,1453,4114,4726,3773,5554,5555,2463,3640,2618,1675,2813, // 4224\\n 919,2352,2975,2353,1270,4727,4115,  73,5556,5557, 647,5558,3259,2856,2259,1550, // 4240\\n1346,3024,5559,1332, 883,3526,5560,5561,5562,5563,3334,2775,5564,1212, 831,1347, // 4256\\n4370,4728,2331,3909,1864,3073, 720,3910,4729,4730,3911,5565,4371,5566,5567,4731, // 4272\\n5568,5569,1799,4732,3774,2619,4733,3641,1645,2376,4734,5570,2938, 669,2211,2675, // 4288\\n2434,5571,2893,5572,5573,1028,3260,5574,4372,2413,5575,2260,1353,5576,5577,4735, // 4304\\n3183, 518,5578,4116,5579,4373,1961,5580,2143,4374,5581,5582,3025,2354,2355,3912, // 4320\\n 516,1834,1454,4117,2708,4375,4736,2229,2620,1972,1129,3642,5583,2776,5584,2976, // 4336\\n1422, 577,1470,3026,1524,3410,5585,5586, 432,4376,3074,3527,5587,2594,1455,2515, // 4352\\n2230,1973,1175,5588,1020,2741,4118,3528,4737,5589,2742,5590,1743,1361,3075,3529, // 4368\\n2649,4119,4377,4738,2295, 895, 924,4378,2171, 331,2247,3076, 166,1627,3077,1098, // 4384\\n5591,1232,2894,2231,3411,4739, 657, 403,1196,2377, 542,3775,3412,1600,4379,3530, // 4400\\n5592,4740,2777,3261, 576, 530,1362,4741,4742,2540,2676,3776,4120,5593, 842,3913, // 4416\\n5594,2814,2032,1014,4121, 213,2709,3413, 665, 621,4380,5595,3777,2939,2435,5596, // 4432\\n2436,3335,3643,3414,4743,4381,2541,4382,4744,3644,1682,4383,3531,1380,5597, 724, // 4448\\n2282, 600,1670,5598,1337,1233,4745,3126,2248,5599,1621,4746,5600, 651,4384,5601, // 4464\\n1612,4385,2621,5602,2857,5603,2743,2312,3078,5604, 716,2464,3079, 174,1255,2710, // 4480\\n4122,3645, 548,1320,1398, 728,4123,1574,5605,1891,1197,3080,4124,5606,3081,3082, // 4496\\n3778,3646,3779, 747,5607, 635,4386,4747,5608,5609,5610,4387,5611,5612,4748,5613, // 4512\\n3415,4749,2437, 451,5614,3780,2542,2073,4388,2744,4389,4125,5615,1764,4750,5616, // 4528\\n4390, 350,4751,2283,2395,2493,5617,4391,4126,2249,1434,4127, 488,4752, 458,4392, // 4544\\n4128,3781, 771,1330,2396,3914,2576,3184,2160,2414,1553,2677,3185,4393,5618,2494, // 4560\\n2895,2622,1720,2711,4394,3416,4753,5619,2543,4395,5620,3262,4396,2778,5621,2016, // 4576\\n2745,5622,1155,1017,3782,3915,5623,3336,2313, 201,1865,4397,1430,5624,4129,5625, // 4592\\n5626,5627,5628,5629,4398,1604,5630, 414,1866, 371,2595,4754,4755,3532,2017,3127, // 4608\\n4756,1708, 960,4399, 887, 389,2172,1536,1663,1721,5631,2232,4130,2356,2940,1580, // 4624\\n5632,5633,1744,4757,2544,4758,4759,5634,4760,5635,2074,5636,4761,3647,3417,2896, // 4640\\n4400,5637,4401,2650,3418,2815, 673,2712,2465, 709,3533,4131,3648,4402,5638,1148, // 4656\\n 502, 634,5639,5640,1204,4762,3649,1575,4763,2623,3783,5641,3784,3128, 948,3263, // 4672\\n 121,1745,3916,1110,5642,4403,3083,2516,3027,4132,3785,1151,1771,3917,1488,4133, // 4688\\n1987,5643,2438,3534,5644,5645,2094,5646,4404,3918,1213,1407,2816, 531,2746,2545, // 4704\\n3264,1011,1537,4764,2779,4405,3129,1061,5647,3786,3787,1867,2897,5648,2018, 120, // 4720\\n4406,4407,2063,3650,3265,2314,3919,2678,3419,1955,4765,4134,5649,3535,1047,2713, // 4736\\n1266,5650,1368,4766,2858, 649,3420,3920,2546,2747,1102,2859,2679,5651,5652,2000, // 4752\\n5653,1111,3651,2977,5654,2495,3921,3652,2817,1855,3421,3788,5655,5656,3422,2415, // 4768\\n2898,3337,3266,3653,5657,2577,5658,3654,2818,4135,1460, 856,5659,3655,5660,2899, // 4784\\n2978,5661,2900,3922,5662,4408, 632,2517, 875,3923,1697,3924,2296,5663,5664,4767, // 4800\\n3028,1239, 580,4768,4409,5665, 914, 936,2075,1190,4136,1039,2124,5666,5667,5668, // 4816\\n5669,3423,1473,5670,1354,4410,3925,4769,2173,3084,4137, 915,3338,4411,4412,3339, // 4832\\n1605,1835,5671,2748, 398,3656,4413,3926,4138, 328,1913,2860,4139,3927,1331,4414, // 4848\\n3029, 937,4415,5672,3657,4140,4141,3424,2161,4770,3425, 524, 742, 538,3085,1012, // 4864\\n5673,5674,3928,2466,5675, 658,1103, 225,3929,5676,5677,4771,5678,4772,5679,3267, // 4880\\n1243,5680,4142, 963,2250,4773,5681,2714,3658,3186,5682,5683,2596,2332,5684,4774, // 4896\\n5685,5686,5687,3536, 957,3426,2547,2033,1931,2941,2467, 870,2019,3659,1746,2780, // 4912\\n2781,2439,2468,5688,3930,5689,3789,3130,3790,3537,3427,3791,5690,1179,3086,5691, // 4928\\n3187,2378,4416,3792,2548,3188,3131,2749,4143,5692,3428,1556,2549,2297, 977,2901, // 4944\\n2034,4144,1205,3429,5693,1765,3430,3189,2125,1271, 714,1689,4775,3538,5694,2333, // 4960\\n3931, 533,4417,3660,2184, 617,5695,2469,3340,3539,2315,5696,5697,3190,5698,5699, // 4976\\n3932,1988, 618, 427,2651,3540,3431,5700,5701,1244,1690,5702,2819,4418,4776,5703, // 4992\\n3541,4777,5704,2284,1576, 473,3661,4419,3432, 972,5705,3662,5706,3087,5707,5708, // 5008\\n4778,4779,5709,3793,4145,4146,5710, 153,4780, 356,5711,1892,2902,4420,2144, 408, // 5024\\n 803,2357,5712,3933,5713,4421,1646,2578,2518,4781,4782,3934,5714,3935,4422,5715, // 5040\\n2416,3433, 752,5716,5717,1962,3341,2979,5718, 746,3030,2470,4783,4423,3794, 698, // 5056\\n4784,1893,4424,3663,2550,4785,3664,3936,5719,3191,3434,5720,1824,1302,4147,2715, // 5072\\n3937,1974,4425,5721,4426,3192, 823,1303,1288,1236,2861,3542,4148,3435, 774,3938, // 5088\\n5722,1581,4786,1304,2862,3939,4787,5723,2440,2162,1083,3268,4427,4149,4428, 344, // 5104\\n1173, 288,2316, 454,1683,5724,5725,1461,4788,4150,2597,5726,5727,4789, 985, 894, // 5120\\n5728,3436,3193,5729,1914,2942,3795,1989,5730,2111,1975,5731,4151,5732,2579,1194, // 5136\\n 425,5733,4790,3194,1245,3796,4429,5734,5735,2863,5736, 636,4791,1856,3940, 760, // 5152\\n1800,5737,4430,2212,1508,4792,4152,1894,1684,2298,5738,5739,4793,4431,4432,2213, // 5168\\n 479,5740,5741, 832,5742,4153,2496,5743,2980,2497,3797, 990,3132, 627,1815,2652, // 5184\\n4433,1582,4434,2126,2112,3543,4794,5744, 799,4435,3195,5745,4795,2113,1737,3031, // 5200\\n1018, 543, 754,4436,3342,1676,4796,4797,4154,4798,1489,5746,3544,5747,2624,2903, // 5216\\n4155,5748,5749,2981,5750,5751,5752,5753,3196,4799,4800,2185,1722,5754,3269,3270, // 5232\\n1843,3665,1715, 481, 365,1976,1857,5755,5756,1963,2498,4801,5757,2127,3666,3271, // 5248\\n 433,1895,2064,2076,5758, 602,2750,5759,5760,5761,5762,5763,3032,1628,3437,5764, // 5264\\n3197,4802,4156,2904,4803,2519,5765,2551,2782,5766,5767,5768,3343,4804,2905,5769, // 5280\\n4805,5770,2864,4806,4807,1221,2982,4157,2520,5771,5772,5773,1868,1990,5774,5775, // 5296\\n5776,1896,5777,5778,4808,1897,4158, 318,5779,2095,4159,4437,5780,5781, 485,5782, // 5312\\n 938,3941, 553,2680, 116,5783,3942,3667,5784,3545,2681,2783,3438,3344,2820,5785, // 5328\\n3668,2943,4160,1747,2944,2983,5786,5787, 207,5788,4809,5789,4810,2521,5790,3033, // 5344\\n 890,3669,3943,5791,1878,3798,3439,5792,2186,2358,3440,1652,5793,5794,5795, 941, // 5360\\n2299, 208,3546,4161,2020, 330,4438,3944,2906,2499,3799,4439,4811,5796,5797,5798, // 5376  //last 512\\n//Everything below is of no interest for detection purpose\\n2522,1613,4812,5799,3345,3945,2523,5800,4162,5801,1637,4163,2471,4813,3946,5802, // 5392\\n2500,3034,3800,5803,5804,2195,4814,5805,2163,5806,5807,5808,5809,5810,5811,5812, // 5408\\n5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828, // 5424\\n5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844, // 5440\\n5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860, // 5456\\n5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876, // 5472\\n5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892, // 5488\\n5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908, // 5504\\n5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924, // 5520\\n5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940, // 5536\\n5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956, // 5552\\n5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972, // 5568\\n5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984,5985,5986,5987,5988, // 5584\\n5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6000,6001,6002,6003,6004, // 5600\\n6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020, // 5616\\n6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036, // 5632\\n6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052, // 5648\\n6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068, // 5664\\n6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084, // 5680\\n6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100, // 5696\\n6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6116, // 5712\\n6117,6118,6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,6132, // 5728\\n6133,6134,6135,6136,6137,6138,6139,6140,6141,6142,6143,6144,6145,6146,6147,6148, // 5744\\n6149,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,6164, // 5760\\n6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6176,6177,6178,6179,6180, // 5776\\n6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196, // 5792\\n6197,6198,6199,6200,6201,6202,6203,6204,6205,6206,6207,6208,6209,6210,6211,6212, // 5808\\n6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,3670,6224,6225,6226,6227, // 5824\\n6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243, // 5840\\n6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,6254,6255,6256,6257,6258,6259, // 5856\\n6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275, // 5872\\n6276,6277,6278,6279,6280,6281,6282,6283,6284,6285,4815,6286,6287,6288,6289,6290, // 5888\\n6291,6292,4816,6293,6294,6295,6296,6297,6298,6299,6300,6301,6302,6303,6304,6305, // 5904\\n6306,6307,6308,6309,6310,6311,4817,4818,6312,6313,6314,6315,6316,6317,6318,4819, // 5920\\n6319,6320,6321,6322,6323,6324,6325,6326,6327,6328,6329,6330,6331,6332,6333,6334, // 5936\\n6335,6336,6337,4820,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349, // 5952\\n6350,6351,6352,6353,6354,6355,6356,6357,6358,6359,6360,6361,6362,6363,6364,6365, // 5968\\n6366,6367,6368,6369,6370,6371,6372,6373,6374,6375,6376,6377,6378,6379,6380,6381, // 5984\\n6382,6383,6384,6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,6396,6397, // 6000\\n6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,3441,6411,6412, // 6016\\n6413,6414,6415,6416,6417,6418,6419,6420,6421,6422,6423,6424,6425,4440,6426,6427, // 6032\\n6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441,6442,6443, // 6048\\n6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,4821,6455,6456,6457,6458, // 6064\\n6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,6473,6474, // 6080\\n6475,6476,6477,3947,3948,6478,6479,6480,6481,3272,4441,6482,6483,6484,6485,4442, // 6096\\n6486,6487,6488,6489,6490,6491,6492,6493,6494,6495,6496,4822,6497,6498,6499,6500, // 6112\\n6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516, // 6128\\n6517,6518,6519,6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532, // 6144\\n6533,6534,6535,6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548, // 6160\\n6549,6550,6551,6552,6553,6554,6555,6556,2784,6557,4823,6558,6559,6560,6561,6562, // 6176\\n6563,6564,6565,6566,6567,6568,6569,3949,6570,6571,6572,4824,6573,6574,6575,6576, // 6192\\n6577,6578,6579,6580,6581,6582,6583,4825,6584,6585,6586,3950,2785,6587,6588,6589, // 6208\\n6590,6591,6592,6593,6594,6595,6596,6597,6598,6599,6600,6601,6602,6603,6604,6605, // 6224\\n6606,6607,6608,6609,6610,6611,6612,4826,6613,6614,6615,4827,6616,6617,6618,6619, // 6240\\n6620,6621,6622,6623,6624,6625,4164,6626,6627,6628,6629,6630,6631,6632,6633,6634, // 6256\\n3547,6635,4828,6636,6637,6638,6639,6640,6641,6642,3951,2984,6643,6644,6645,6646, // 6272\\n6647,6648,6649,4165,6650,4829,6651,6652,4830,6653,6654,6655,6656,6657,6658,6659, // 6288\\n6660,6661,6662,4831,6663,6664,6665,6666,6667,6668,6669,6670,6671,4166,6672,4832, // 6304\\n3952,6673,6674,6675,6676,4833,6677,6678,6679,4167,6680,6681,6682,3198,6683,6684, // 6320\\n6685,6686,6687,6688,6689,6690,6691,6692,6693,6694,6695,6696,6697,4834,6698,6699, // 6336\\n6700,6701,6702,6703,6704,6705,6706,6707,6708,6709,6710,6711,6712,6713,6714,6715, // 6352\\n6716,6717,6718,6719,6720,6721,6722,6723,6724,6725,6726,6727,6728,6729,6730,6731, // 6368\\n6732,6733,6734,4443,6735,6736,6737,6738,6739,6740,6741,6742,6743,6744,6745,4444, // 6384\\n6746,6747,6748,6749,6750,6751,6752,6753,6754,6755,6756,6757,6758,6759,6760,6761, // 6400\\n6762,6763,6764,6765,6766,6767,6768,6769,6770,6771,6772,6773,6774,6775,6776,6777, // 6416\\n6778,6779,6780,6781,4168,6782,6783,3442,6784,6785,6786,6787,6788,6789,6790,6791, // 6432\\n4169,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806, // 6448\\n6807,6808,6809,6810,6811,4835,6812,6813,6814,4445,6815,6816,4446,6817,6818,6819, // 6464\\n6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835, // 6480\\n3548,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6846,4836,6847,6848,6849, // 6496\\n6850,6851,6852,6853,6854,3953,6855,6856,6857,6858,6859,6860,6861,6862,6863,6864, // 6512\\n6865,6866,6867,6868,6869,6870,6871,6872,6873,6874,6875,6876,6877,3199,6878,6879, // 6528\\n6880,6881,6882,4447,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894, // 6544\\n6895,6896,6897,6898,6899,6900,6901,6902,6903,6904,4170,6905,6906,6907,6908,6909, // 6560\\n6910,6911,6912,6913,6914,6915,6916,6917,6918,6919,6920,6921,6922,6923,6924,6925, // 6576\\n6926,6927,4837,6928,6929,6930,6931,6932,6933,6934,6935,6936,3346,6937,6938,4838, // 6592\\n6939,6940,6941,4448,6942,6943,6944,6945,6946,4449,6947,6948,6949,6950,6951,6952, // 6608\\n6953,6954,6955,6956,6957,6958,6959,6960,6961,6962,6963,6964,6965,6966,6967,6968, // 6624\\n6969,6970,6971,6972,6973,6974,6975,6976,6977,6978,6979,6980,6981,6982,6983,6984, // 6640\\n6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,3671,6995,6996,6997,6998,4839, // 6656\\n6999,7000,7001,7002,3549,7003,7004,7005,7006,7007,7008,7009,7010,7011,7012,7013, // 6672\\n7014,7015,7016,7017,7018,7019,7020,7021,7022,7023,7024,7025,7026,7027,7028,7029, // 6688\\n7030,4840,7031,7032,7033,7034,7035,7036,7037,7038,4841,7039,7040,7041,7042,7043, // 6704\\n7044,7045,7046,7047,7048,7049,7050,7051,7052,7053,7054,7055,7056,7057,7058,7059, // 6720\\n7060,7061,7062,7063,7064,7065,7066,7067,7068,7069,7070,2985,7071,7072,7073,7074, // 6736\\n7075,7076,7077,7078,7079,7080,4842,7081,7082,7083,7084,7085,7086,7087,7088,7089, // 6752\\n7090,7091,7092,7093,7094,7095,7096,7097,7098,7099,7100,7101,7102,7103,7104,7105, // 6768\\n7106,7107,7108,7109,7110,7111,7112,7113,7114,7115,7116,7117,7118,4450,7119,7120, // 6784\\n7121,7122,7123,7124,7125,7126,7127,7128,7129,7130,7131,7132,7133,7134,7135,7136, // 6800\\n7137,7138,7139,7140,7141,7142,7143,4843,7144,7145,7146,7147,7148,7149,7150,7151, // 6816\\n7152,7153,7154,7155,7156,7157,7158,7159,7160,7161,7162,7163,7164,7165,7166,7167, // 6832\\n7168,7169,7170,7171,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183, // 6848\\n7184,7185,7186,7187,7188,4171,4172,7189,7190,7191,7192,7193,7194,7195,7196,7197, // 6864\\n7198,7199,7200,7201,7202,7203,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213, // 6880\\n7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229, // 6896\\n7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245, // 6912\\n7246,7247,7248,7249,7250,7251,7252,7253,7254,7255,7256,7257,7258,7259,7260,7261, // 6928\\n7262,7263,7264,7265,7266,7267,7268,7269,7270,7271,7272,7273,7274,7275,7276,7277, // 6944\\n7278,7279,7280,7281,7282,7283,7284,7285,7286,7287,7288,7289,7290,7291,7292,7293, // 6960\\n7294,7295,7296,4844,7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7308, // 6976\\n7309,7310,7311,7312,7313,7314,7315,7316,4451,7317,7318,7319,7320,7321,7322,7323, // 6992\\n7324,7325,7326,7327,7328,7329,7330,7331,7332,7333,7334,7335,7336,7337,7338,7339, // 7008\\n7340,7341,7342,7343,7344,7345,7346,7347,7348,7349,7350,7351,7352,7353,4173,7354, // 7024\\n7355,4845,7356,7357,7358,7359,7360,7361,7362,7363,7364,7365,7366,7367,7368,7369, // 7040\\n7370,7371,7372,7373,7374,7375,7376,7377,7378,7379,7380,7381,7382,7383,7384,7385, // 7056\\n7386,7387,7388,4846,7389,7390,7391,7392,7393,7394,7395,7396,7397,7398,7399,7400, // 7072\\n7401,7402,7403,7404,7405,3672,7406,7407,7408,7409,7410,7411,7412,7413,7414,7415, // 7088\\n7416,7417,7418,7419,7420,7421,7422,7423,7424,7425,7426,7427,7428,7429,7430,7431, // 7104\\n7432,7433,7434,7435,7436,7437,7438,7439,7440,7441,7442,7443,7444,7445,7446,7447, // 7120\\n7448,7449,7450,7451,7452,7453,4452,7454,3200,7455,7456,7457,7458,7459,7460,7461, // 7136\\n7462,7463,7464,7465,7466,7467,7468,7469,7470,7471,7472,7473,7474,4847,7475,7476, // 7152\\n7477,3133,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491, // 7168\\n7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,3347,7503,7504,7505,7506, // 7184\\n7507,7508,7509,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,7520,7521,4848, // 7200\\n7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,7536,7537, // 7216\\n7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,3801,4849,7550,7551, // 7232\\n7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567, // 7248\\n7568,7569,3035,7570,7571,7572,7573,7574,7575,7576,7577,7578,7579,7580,7581,7582, // 7264\\n7583,7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598, // 7280\\n7599,7600,7601,7602,7603,7604,7605,7606,7607,7608,7609,7610,7611,7612,7613,7614, // 7296\\n7615,7616,4850,7617,7618,3802,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628, // 7312\\n7629,7630,7631,7632,4851,7633,7634,7635,7636,7637,7638,7639,7640,7641,7642,7643, // 7328\\n7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659, // 7344\\n7660,7661,7662,7663,7664,7665,7666,7667,7668,7669,7670,4453,7671,7672,7673,7674, // 7360\\n7675,7676,7677,7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690, // 7376\\n7691,7692,7693,7694,7695,7696,7697,3443,7698,7699,7700,7701,7702,4454,7703,7704, // 7392\\n7705,7706,7707,7708,7709,7710,7711,7712,7713,2472,7714,7715,7716,7717,7718,7719, // 7408\\n7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,3954,7732,7733,7734, // 7424\\n7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750, // 7440\\n3134,7751,7752,4852,7753,7754,7755,4853,7756,7757,7758,7759,7760,4174,7761,7762, // 7456\\n7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778, // 7472\\n7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794, // 7488\\n7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,4854,7806,7807,7808,7809, // 7504\\n7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825, // 7520\\n4855,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840, // 7536\\n7841,7842,7843,7844,7845,7846,7847,3955,7848,7849,7850,7851,7852,7853,7854,7855, // 7552\\n7856,7857,7858,7859,7860,3444,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870, // 7568\\n7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886, // 7584\\n7887,7888,7889,7890,7891,4175,7892,7893,7894,7895,7896,4856,4857,7897,7898,7899, // 7600\\n7900,2598,7901,7902,7903,7904,7905,7906,7907,7908,4455,7909,7910,7911,7912,7913, // 7616\\n7914,3201,7915,7916,7917,7918,7919,7920,7921,4858,7922,7923,7924,7925,7926,7927, // 7632\\n7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943, // 7648\\n7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959, // 7664\\n7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975, // 7680\\n7976,7977,7978,7979,7980,7981,4859,7982,7983,7984,7985,7986,7987,7988,7989,7990, // 7696\\n7991,7992,7993,7994,7995,7996,4860,7997,7998,7999,8000,8001,8002,8003,8004,8005, // 7712\\n8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,4176,8017,8018,8019,8020, // 7728\\n8021,8022,8023,4861,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035, // 7744\\n8036,4862,4456,8037,8038,8039,8040,4863,8041,8042,8043,8044,8045,8046,8047,8048, // 7760\\n8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064, // 7776\\n8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,8080, // 7792\\n8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096, // 7808\\n8097,8098,8099,4864,4177,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110, // 7824\\n8111,8112,8113,8114,8115,8116,8117,8118,8119,8120,4178,8121,8122,8123,8124,8125, // 7840\\n8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141, // 7856\\n8142,8143,8144,8145,4865,4866,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155, // 7872\\n8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,4179,8166,8167,8168,8169,8170, // 7888\\n8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,4457,8182,8183,8184,8185, // 7904\\n8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201, // 7920\\n8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217, // 7936\\n8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233, // 7952\\n8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249, // 7968\\n8250,8251,8252,8253,8254,8255,8256,3445,8257,8258,8259,8260,8261,8262,4458,8263, // 7984\\n8264,8265,8266,8267,8268,8269,8270,8271,8272,4459,8273,8274,8275,8276,3550,8277, // 8000\\n8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,4460,8290,8291,8292, // 8016\\n8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,4867, // 8032\\n8308,8309,8310,8311,8312,3551,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322, // 8048\\n8323,8324,8325,8326,4868,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337, // 8064\\n8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353, // 8080\\n8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,4869,4461,8364,8365,8366,8367, // 8096\\n8368,8369,8370,4870,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382, // 8112\\n8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398, // 8128\\n8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,4871,8411,8412,8413, // 8144\\n8414,8415,8416,8417,8418,8419,8420,8421,8422,4462,8423,8424,8425,8426,8427,8428, // 8160\\n8429,8430,8431,8432,8433,2986,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443, // 8176\\n8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459, // 8192\\n8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475, // 8208\\n8476,8477,8478,4180,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490, // 8224\\n8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506, // 8240\\n8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522, // 8256\\n8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538, // 8272\\n8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554, // 8288\\n8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,4872,8565,8566,8567,8568,8569, // 8304\\n8570,8571,8572,8573,4873,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584, // 8320\\n8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600, // 8336\\n8601,8602,8603,8604,8605,3803,8606,8607,8608,8609,8610,8611,8612,8613,4874,3804, // 8352\\n8614,8615,8616,8617,8618,8619,8620,8621,3956,8622,8623,8624,8625,8626,8627,8628, // 8368\\n8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,2865,8639,8640,8641,8642,8643, // 8384\\n8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,4463,8657,8658, // 8400\\n8659,4875,4876,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672, // 8416\\n8673,8674,8675,8676,8677,8678,8679,8680,8681,4464,8682,8683,8684,8685,8686,8687, // 8432\\n8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703, // 8448\\n8704,8705,8706,8707,8708,8709,2261,8710,8711,8712,8713,8714,8715,8716,8717,8718, // 8464\\n8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,4181, // 8480\\n8734,8735,8736,8737,8738,8739,8740,8741,8742,8743,8744,8745,8746,8747,8748,8749, // 8496\\n8750,8751,8752,8753,8754,8755,8756,8757,8758,8759,8760,8761,8762,8763,4877,8764, // 8512\\n8765,8766,8767,8768,8769,8770,8771,8772,8773,8774,8775,8776,8777,8778,8779,8780, // 8528\\n8781,8782,8783,8784,8785,8786,8787,8788,4878,8789,4879,8790,8791,8792,4880,8793, // 8544\\n8794,8795,8796,8797,8798,8799,8800,8801,4881,8802,8803,8804,8805,8806,8807,8808, // 8560\\n8809,8810,8811,8812,8813,8814,8815,3957,8816,8817,8818,8819,8820,8821,8822,8823, // 8576\\n8824,8825,8826,8827,8828,8829,8830,8831,8832,8833,8834,8835,8836,8837,8838,8839, // 8592\\n8840,8841,8842,8843,8844,8845,8846,8847,4882,8848,8849,8850,8851,8852,8853,8854, // 8608\\n8855,8856,8857,8858,8859,8860,8861,8862,8863,8864,8865,8866,8867,8868,8869,8870, // 8624\\n8871,8872,8873,8874,8875,8876,8877,8878,8879,8880,8881,8882,8883,8884,3202,8885, // 8640\\n8886,8887,8888,8889,8890,8891,8892,8893,8894,8895,8896,8897,8898,8899,8900,8901, // 8656\\n8902,8903,8904,8905,8906,8907,8908,8909,8910,8911,8912,8913,8914,8915,8916,8917, // 8672\\n8918,8919,8920,8921,8922,8923,8924,4465,8925,8926,8927,8928,8929,8930,8931,8932, // 8688\\n4883,8933,8934,8935,8936,8937,8938,8939,8940,8941,8942,8943,2214,8944,8945,8946, // 8704\\n8947,8948,8949,8950,8951,8952,8953,8954,8955,8956,8957,8958,8959,8960,8961,8962, // 8720\\n8963,8964,8965,4884,8966,8967,8968,8969,8970,8971,8972,8973,8974,8975,8976,8977, // 8736\\n8978,8979,8980,8981,8982,8983,8984,8985,8986,8987,8988,8989,8990,8991,8992,4885, // 8752\\n8993,8994,8995,8996,8997,8998,8999,9000,9001,9002,9003,9004,9005,9006,9007,9008, // 8768\\n9009,9010,9011,9012,9013,9014,9015,9016,9017,9018,9019,9020,9021,4182,9022,9023, // 8784\\n9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9036,9037,9038,9039, // 8800\\n9040,9041,9042,9043,9044,9045,9046,9047,9048,9049,9050,9051,9052,9053,9054,9055, // 8816\\n9056,9057,9058,9059,9060,9061,9062,9063,4886,9064,9065,9066,9067,9068,9069,4887, // 8832\\n9070,9071,9072,9073,9074,9075,9076,9077,9078,9079,9080,9081,9082,9083,9084,9085, // 8848\\n9086,9087,9088,9089,9090,9091,9092,9093,9094,9095,9096,9097,9098,9099,9100,9101, // 8864\\n9102,9103,9104,9105,9106,9107,9108,9109,9110,9111,9112,9113,9114,9115,9116,9117, // 8880\\n9118,9119,9120,9121,9122,9123,9124,9125,9126,9127,9128,9129,9130,9131,9132,9133, // 8896\\n9134,9135,9136,9137,9138,9139,9140,9141,3958,9142,9143,9144,9145,9146,9147,9148, // 8912\\n9149,9150,9151,4888,9152,9153,9154,9155,9156,9157,9158,9159,9160,9161,9162,9163, // 8928\\n9164,9165,9166,9167,9168,9169,9170,9171,9172,9173,9174,9175,4889,9176,9177,9178, // 8944\\n9179,9180,9181,9182,9183,9184,9185,9186,9187,9188,9189,9190,9191,9192,9193,9194, // 8960\\n9195,9196,9197,9198,9199,9200,9201,9202,9203,4890,9204,9205,9206,9207,9208,9209, // 8976\\n9210,9211,9212,9213,9214,9215,9216,9217,9218,9219,9220,9221,9222,4466,9223,9224, // 8992\\n9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240, // 9008\\n9241,9242,9243,9244,9245,4891,9246,9247,9248,9249,9250,9251,9252,9253,9254,9255, // 9024\\n9256,9257,4892,9258,9259,9260,9261,4893,4894,9262,9263,9264,9265,9266,9267,9268, // 9040\\n9269,9270,9271,9272,9273,4467,9274,9275,9276,9277,9278,9279,9280,9281,9282,9283, // 9056\\n9284,9285,3673,9286,9287,9288,9289,9290,9291,9292,9293,9294,9295,9296,9297,9298, // 9072\\n9299,9300,9301,9302,9303,9304,9305,9306,9307,9308,9309,9310,9311,9312,9313,9314, // 9088\\n9315,9316,9317,9318,9319,9320,9321,9322,4895,9323,9324,9325,9326,9327,9328,9329, // 9104\\n9330,9331,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345, // 9120\\n9346,9347,4468,9348,9349,9350,9351,9352,9353,9354,9355,9356,9357,9358,9359,9360, // 9136\\n9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9372,9373,4896,9374,4469, // 9152\\n9375,9376,9377,9378,9379,4897,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389, // 9168\\n9390,9391,9392,9393,9394,9395,9396,9397,9398,9399,9400,9401,9402,9403,9404,9405, // 9184\\n9406,4470,9407,2751,9408,9409,3674,3552,9410,9411,9412,9413,9414,9415,9416,9417, // 9200\\n9418,9419,9420,9421,4898,9422,9423,9424,9425,9426,9427,9428,9429,3959,9430,9431, // 9216\\n9432,9433,9434,9435,9436,4471,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446, // 9232\\n9447,9448,9449,9450,3348,9451,9452,9453,9454,9455,9456,9457,9458,9459,9460,9461, // 9248\\n9462,9463,9464,9465,9466,9467,9468,9469,9470,9471,9472,4899,9473,9474,9475,9476, // 9264\\n9477,4900,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,3349,9489,9490, // 9280\\n9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506, // 9296\\n9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,4901,9521, // 9312\\n9522,9523,9524,9525,9526,4902,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536, // 9328\\n9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,9548,9549,9550,9551,9552, // 9344\\n9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568, // 9360\\n9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584, // 9376\\n3805,9585,9586,9587,9588,9589,9590,9591,9592,9593,9594,9595,9596,9597,9598,9599, // 9392\\n9600,9601,9602,4903,9603,9604,9605,9606,9607,4904,9608,9609,9610,9611,9612,9613, // 9408\\n9614,4905,9615,9616,9617,9618,9619,9620,9621,9622,9623,9624,9625,9626,9627,9628, // 9424\\n9629,9630,9631,9632,4906,9633,9634,9635,9636,9637,9638,9639,9640,9641,9642,9643, // 9440\\n4907,9644,9645,9646,9647,9648,9649,9650,9651,9652,9653,9654,9655,9656,9657,9658, // 9456\\n9659,9660,9661,9662,9663,9664,9665,9666,9667,9668,9669,9670,9671,9672,4183,9673, // 9472\\n9674,9675,9676,9677,4908,9678,9679,9680,9681,4909,9682,9683,9684,9685,9686,9687, // 9488\\n9688,9689,9690,4910,9691,9692,9693,3675,9694,9695,9696,2945,9697,9698,9699,9700, // 9504\\n9701,9702,9703,9704,9705,4911,9706,9707,9708,9709,9710,9711,9712,9713,9714,9715, // 9520\\n9716,9717,9718,9719,9720,9721,9722,9723,9724,9725,9726,9727,9728,9729,9730,9731, // 9536\\n9732,9733,9734,9735,4912,9736,9737,9738,9739,9740,4913,9741,9742,9743,9744,9745, // 9552\\n9746,9747,9748,9749,9750,9751,9752,9753,9754,9755,9756,9757,9758,4914,9759,9760, // 9568\\n9761,9762,9763,9764,9765,9766,9767,9768,9769,9770,9771,9772,9773,9774,9775,9776, // 9584\\n9777,9778,9779,9780,9781,9782,4915,9783,9784,9785,9786,9787,9788,9789,9790,9791, // 9600\\n9792,9793,4916,9794,9795,9796,9797,9798,9799,9800,9801,9802,9803,9804,9805,9806, // 9616\\n9807,9808,9809,9810,9811,9812,9813,9814,9815,9816,9817,9818,9819,9820,9821,9822, // 9632\\n9823,9824,9825,9826,9827,9828,9829,9830,9831,9832,9833,9834,9835,9836,9837,9838, // 9648\\n9839,9840,9841,9842,9843,9844,9845,9846,9847,9848,9849,9850,9851,9852,9853,9854, // 9664\\n9855,9856,9857,9858,9859,9860,9861,9862,9863,9864,9865,9866,9867,9868,4917,9869, // 9680\\n9870,9871,9872,9873,9874,9875,9876,9877,9878,9879,9880,9881,9882,9883,9884,9885, // 9696\\n9886,9887,9888,9889,9890,9891,9892,4472,9893,9894,9895,9896,9897,3806,9898,9899, // 9712\\n9900,9901,9902,9903,9904,9905,9906,9907,9908,9909,9910,9911,9912,9913,9914,4918, // 9728\\n9915,9916,9917,4919,9918,9919,9920,9921,4184,9922,9923,9924,9925,9926,9927,9928, // 9744\\n9929,9930,9931,9932,9933,9934,9935,9936,9937,9938,9939,9940,9941,9942,9943,9944, // 9760\\n9945,9946,4920,9947,9948,9949,9950,9951,9952,9953,9954,9955,4185,9956,9957,9958, // 9776\\n9959,9960,9961,9962,9963,9964,9965,4921,9966,9967,9968,4473,9969,9970,9971,9972, // 9792\\n9973,9974,9975,9976,9977,4474,9978,9979,9980,9981,9982,9983,9984,9985,9986,9987, // 9808\\n9988,9989,9990,9991,9992,9993,9994,9995,9996,9997,9998,9999,10000,10001,10002,10003, // 9824\\n10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019, // 9840\\n10020,10021,4922,10022,4923,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033, // 9856\\n10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,4924, // 9872\\n10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064, // 9888\\n10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080, // 9904\\n10081,10082,10083,10084,10085,10086,10087,4475,10088,10089,10090,10091,10092,10093,10094,10095, // 9920\\n10096,10097,4476,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110, // 9936\\n10111,2174,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125, // 9952\\n10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,3807, // 9968\\n4186,4925,10141,10142,10143,10144,10145,10146,10147,4477,4187,10148,10149,10150,10151,10152, // 9984\\n10153,4188,10154,10155,10156,10157,10158,10159,10160,10161,4926,10162,10163,10164,10165,10166, //10000\\n10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182, //10016\\n10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,3203,10193,10194,10195,10196,10197, //10032\\n10198,10199,10200,4478,10201,10202,10203,10204,4479,10205,10206,10207,10208,10209,10210,10211, //10048\\n10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227, //10064\\n10228,10229,10230,10231,10232,10233,10234,4927,10235,10236,10237,10238,10239,10240,10241,10242, //10080\\n10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258, //10096\\n10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,4480, //10112\\n4928,4929,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287, //10128\\n10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303, //10144\\n10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319, //10160\\n10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,4930, //10176\\n10335,10336,10337,10338,10339,10340,10341,10342,4931,10343,10344,10345,10346,10347,10348,10349, //10192\\n10350,10351,10352,10353,10354,10355,3088,10356,2786,10357,10358,10359,10360,4189,10361,10362, //10208\\n10363,10364,10365,10366,10367,10368,10369,10370,10371,10372,10373,10374,10375,4932,10376,10377, //10224\\n10378,10379,10380,10381,10382,10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,4933, //10240\\n10393,10394,10395,4934,10396,10397,10398,10399,10400,10401,10402,10403,10404,10405,10406,10407, //10256\\n10408,10409,10410,10411,10412,3446,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422, //10272\\n10423,4935,10424,10425,10426,10427,10428,10429,10430,4936,10431,10432,10433,10434,10435,10436, //10288\\n10437,10438,10439,10440,10441,10442,10443,4937,10444,10445,10446,10447,4481,10448,10449,10450, //10304\\n10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466, //10320\\n10467,10468,10469,10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482, //10336\\n10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493,10494,10495,10496,10497,10498, //10352\\n10499,10500,10501,10502,10503,10504,10505,4938,10506,10507,10508,10509,10510,2552,10511,10512, //10368\\n10513,10514,10515,10516,3447,10517,10518,10519,10520,10521,10522,10523,10524,10525,10526,10527, //10384\\n10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543, //10400\\n4482,10544,4939,10545,10546,10547,10548,10549,10550,10551,10552,10553,10554,10555,10556,10557, //10416\\n10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,3676,4483,10568,10569,10570,10571, //10432\\n10572,3448,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583,10584,10585,10586, //10448\\n10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602, //10464\\n10603,10604,10605,10606,10607,10608,10609,10610,10611,10612,10613,10614,10615,10616,10617,10618, //10480\\n10619,10620,10621,10622,10623,10624,10625,10626,10627,4484,10628,10629,10630,10631,10632,4940, //10496\\n10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648, //10512\\n10649,10650,10651,10652,10653,10654,10655,10656,4941,10657,10658,10659,2599,10660,10661,10662, //10528\\n10663,10664,10665,10666,3089,10667,10668,10669,10670,10671,10672,10673,10674,10675,10676,10677, //10544\\n10678,10679,10680,4942,10681,10682,10683,10684,10685,10686,10687,10688,10689,10690,10691,10692, //10560\\n10693,10694,10695,10696,10697,4485,10698,10699,10700,10701,10702,10703,10704,4943,10705,3677, //10576\\n10706,10707,10708,10709,10710,10711,10712,4944,10713,10714,10715,10716,10717,10718,10719,10720, //10592\\n10721,10722,10723,10724,10725,10726,10727,10728,4945,10729,10730,10731,10732,10733,10734,10735, //10608\\n10736,10737,10738,10739,10740,10741,10742,10743,10744,10745,10746,10747,10748,10749,10750,10751, //10624\\n10752,10753,10754,10755,10756,10757,10758,10759,10760,10761,4946,10762,10763,10764,10765,10766, //10640\\n10767,4947,4948,10768,10769,10770,10771,10772,10773,10774,10775,10776,10777,10778,10779,10780, //10656\\n10781,10782,10783,10784,10785,10786,10787,10788,10789,10790,10791,10792,10793,10794,10795,10796, //10672\\n10797,10798,10799,10800,10801,10802,10803,10804,10805,10806,10807,10808,10809,10810,10811,10812, //10688\\n10813,10814,10815,10816,10817,10818,10819,10820,10821,10822,10823,10824,10825,10826,10827,10828, //10704\\n10829,10830,10831,10832,10833,10834,10835,10836,10837,10838,10839,10840,10841,10842,10843,10844, //10720\\n10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10856,10857,10858,10859,10860, //10736\\n10861,10862,10863,10864,10865,10866,10867,10868,10869,10870,10871,10872,10873,10874,10875,10876, //10752\\n10877,10878,4486,10879,10880,10881,10882,10883,10884,10885,4949,10886,10887,10888,10889,10890, //10768\\n10891,10892,10893,10894,10895,10896,10897,10898,10899,10900,10901,10902,10903,10904,10905,10906, //10784\\n10907,10908,10909,10910,10911,10912,10913,10914,10915,10916,10917,10918,10919,4487,10920,10921, //10800\\n10922,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,4950,10933,10934,10935,10936, //10816\\n10937,10938,10939,10940,10941,10942,10943,10944,10945,10946,10947,10948,10949,4488,10950,10951, //10832\\n10952,10953,10954,10955,10956,10957,10958,10959,4190,10960,10961,10962,10963,10964,10965,10966, //10848\\n10967,10968,10969,10970,10971,10972,10973,10974,10975,10976,10977,10978,10979,10980,10981,10982, //10864\\n10983,10984,10985,10986,10987,10988,10989,10990,10991,10992,10993,10994,10995,10996,10997,10998, //10880\\n10999,11000,11001,11002,11003,11004,11005,11006,3960,11007,11008,11009,11010,11011,11012,11013, //10896\\n11014,11015,11016,11017,11018,11019,11020,11021,11022,11023,11024,11025,11026,11027,11028,11029, //10912\\n11030,11031,11032,4951,11033,11034,11035,11036,11037,11038,11039,11040,11041,11042,11043,11044, //10928\\n11045,11046,11047,4489,11048,11049,11050,11051,4952,11052,11053,11054,11055,11056,11057,11058, //10944\\n4953,11059,11060,11061,11062,11063,11064,11065,11066,11067,11068,11069,11070,11071,4954,11072, //10960\\n11073,11074,11075,11076,11077,11078,11079,11080,11081,11082,11083,11084,11085,11086,11087,11088, //10976\\n11089,11090,11091,11092,11093,11094,11095,11096,11097,11098,11099,11100,11101,11102,11103,11104, //10992\\n11105,11106,11107,11108,11109,11110,11111,11112,11113,11114,11115,3808,11116,11117,11118,11119, //11008\\n11120,11121,11122,11123,11124,11125,11126,11127,11128,11129,11130,11131,11132,11133,11134,4955, //11024\\n11135,11136,11137,11138,11139,11140,11141,11142,11143,11144,11145,11146,11147,11148,11149,11150, //11040\\n11151,11152,11153,11154,11155,11156,11157,11158,11159,11160,11161,4956,11162,11163,11164,11165, //11056\\n11166,11167,11168,11169,11170,11171,11172,11173,11174,11175,11176,11177,11178,11179,11180,4957, //11072\\n11181,11182,11183,11184,11185,11186,4958,11187,11188,11189,11190,11191,11192,11193,11194,11195, //11088\\n11196,11197,11198,11199,11200,3678,11201,11202,11203,11204,11205,11206,4191,11207,11208,11209, //11104\\n11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225, //11120\\n11226,11227,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11240,11241, //11136\\n11242,11243,11244,11245,11246,11247,11248,11249,11250,11251,4959,11252,11253,11254,11255,11256, //11152\\n11257,11258,11259,11260,11261,11262,11263,11264,11265,11266,11267,11268,11269,11270,11271,11272, //11168\\n11273,11274,11275,11276,11277,11278,11279,11280,11281,11282,11283,11284,11285,11286,11287,11288, //11184\\n11289,11290,11291,11292,11293,11294,11295,11296,11297,11298,11299,11300,11301,11302,11303,11304, //11200\\n11305,11306,11307,11308,11309,11310,11311,11312,11313,11314,3679,11315,11316,11317,11318,4490, //11216\\n11319,11320,11321,11322,11323,11324,11325,11326,11327,11328,11329,11330,11331,11332,11333,11334, //11232\\n11335,11336,11337,11338,11339,11340,11341,11342,11343,11344,11345,11346,11347,4960,11348,11349, //11248\\n11350,11351,11352,11353,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365, //11264\\n11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,3961,4961,11378,11379, //11280\\n11380,11381,11382,11383,11384,11385,11386,11387,11388,11389,11390,11391,11392,11393,11394,11395, //11296\\n11396,11397,4192,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410, //11312\\n11411,4962,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425, //11328\\n11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441, //11344\\n11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457, //11360\\n11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,4963,11470,11471,4491, //11376\\n11472,11473,11474,11475,4964,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486, //11392\\n11487,11488,11489,11490,11491,11492,4965,11493,11494,11495,11496,11497,11498,11499,11500,11501, //11408\\n11502,11503,11504,11505,11506,11507,11508,11509,11510,11511,11512,11513,11514,11515,11516,11517, //11424\\n11518,11519,11520,11521,11522,11523,11524,11525,11526,11527,11528,11529,3962,11530,11531,11532, //11440\\n11533,11534,11535,11536,11537,11538,11539,11540,11541,11542,11543,11544,11545,11546,11547,11548, //11456\\n11549,11550,11551,11552,11553,11554,11555,11556,11557,11558,11559,11560,11561,11562,11563,11564, //11472\\n4193,4194,11565,11566,11567,11568,11569,11570,11571,11572,11573,11574,11575,11576,11577,11578, //11488\\n11579,11580,11581,11582,11583,11584,11585,11586,11587,11588,11589,11590,11591,4966,4195,11592, //11504\\n11593,11594,11595,11596,11597,11598,11599,11600,11601,11602,11603,11604,3090,11605,11606,11607, //11520\\n11608,11609,11610,4967,11611,11612,11613,11614,11615,11616,11617,11618,11619,11620,11621,11622, //11536\\n11623,11624,11625,11626,11627,11628,11629,11630,11631,11632,11633,11634,11635,11636,11637,11638, //11552\\n11639,11640,11641,11642,11643,11644,11645,11646,11647,11648,11649,11650,11651,11652,11653,11654, //11568\\n11655,11656,11657,11658,11659,11660,11661,11662,11663,11664,11665,11666,11667,11668,11669,11670, //11584\\n11671,11672,11673,11674,4968,11675,11676,11677,11678,11679,11680,11681,11682,11683,11684,11685, //11600\\n11686,11687,11688,11689,11690,11691,11692,11693,3809,11694,11695,11696,11697,11698,11699,11700, //11616\\n11701,11702,11703,11704,11705,11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716, //11632\\n11717,11718,3553,11719,11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,4969, //11648\\n11731,11732,11733,11734,11735,11736,11737,11738,11739,11740,4492,11741,11742,11743,11744,11745, //11664\\n11746,11747,11748,11749,11750,11751,11752,4970,11753,11754,11755,11756,11757,11758,11759,11760, //11680\\n11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776, //11696\\n11777,11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790,4971,11791, //11712\\n11792,11793,11794,11795,11796,11797,4972,11798,11799,11800,11801,11802,11803,11804,11805,11806, //11728\\n11807,11808,11809,11810,4973,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821, //11744\\n11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,11834,3680,3810,11835, //11760\\n11836,4974,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848,11849,11850, //11776\\n11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862,11863,11864,11865,11866, //11792\\n11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877,11878,11879,11880,11881,11882, //11808\\n11883,11884,4493,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897, //11824\\n11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,11913, //11840\\n11914,11915,4975,11916,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928, //11856\\n11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,11941,11942,11943,11944, //11872\\n11945,11946,11947,11948,11949,4976,11950,11951,11952,11953,11954,11955,11956,11957,11958,11959, //11888\\n11960,11961,11962,11963,11964,11965,11966,11967,11968,11969,11970,11971,11972,11973,11974,11975, //11904\\n11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,11987,4196,11988,11989,11990, //11920\\n11991,11992,4977,11993,11994,11995,11996,11997,11998,11999,12000,12001,12002,12003,12004,12005, //11936\\n12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,12020,12021, //11952\\n12022,12023,12024,12025,12026,12027,12028,12029,12030,12031,12032,12033,12034,12035,12036,12037, //11968\\n12038,12039,12040,12041,12042,12043,12044,12045,12046,12047,12048,12049,12050,12051,12052,12053, //11984\\n12054,12055,12056,12057,12058,12059,12060,12061,4978,12062,12063,12064,12065,12066,12067,12068, //12000\\n12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080,12081,12082,12083,12084, //12016\\n12085,12086,12087,12088,12089,12090,12091,12092,12093,12094,12095,12096,12097,12098,12099,12100, //12032\\n12101,12102,12103,12104,12105,12106,12107,12108,12109,12110,12111,12112,12113,12114,12115,12116, //12048\\n12117,12118,12119,12120,12121,12122,12123,4979,12124,12125,12126,12127,12128,4197,12129,12130, //12064\\n12131,12132,12133,12134,12135,12136,12137,12138,12139,12140,12141,12142,12143,12144,12145,12146, //12080\\n12147,12148,12149,12150,12151,12152,12153,12154,4980,12155,12156,12157,12158,12159,12160,4494, //12096\\n12161,12162,12163,12164,3811,12165,12166,12167,12168,12169,4495,12170,12171,4496,12172,12173, //12112\\n12174,12175,12176,3812,12177,12178,12179,12180,12181,12182,12183,12184,12185,12186,12187,12188, //12128\\n12189,12190,12191,12192,12193,12194,12195,12196,12197,12198,12199,12200,12201,12202,12203,12204, //12144\\n12205,12206,12207,12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220, //12160\\n12221,4981,12222,12223,12224,12225,12226,12227,12228,12229,12230,12231,12232,12233,12234,12235, //12176\\n4982,12236,12237,12238,12239,12240,12241,12242,12243,12244,12245,4983,12246,12247,12248,12249, //12192\\n4984,12250,12251,12252,12253,12254,12255,12256,12257,12258,12259,12260,12261,12262,12263,12264, //12208\\n4985,12265,4497,12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278, //12224\\n12279,12280,12281,12282,12283,12284,12285,12286,12287,4986,12288,12289,12290,12291,12292,12293, //12240\\n12294,12295,12296,2473,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308, //12256\\n12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12319,3963,12320,12321,12322,12323, //12272\\n12324,12325,12326,12327,12328,12329,12330,12331,12332,4987,12333,12334,12335,12336,12337,12338, //12288\\n12339,12340,12341,12342,12343,12344,12345,12346,12347,12348,12349,12350,12351,12352,12353,12354, //12304\\n12355,12356,12357,12358,12359,3964,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369, //12320\\n12370,3965,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384, //12336\\n12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400, //12352\\n12401,12402,12403,12404,12405,12406,12407,12408,4988,12409,12410,12411,12412,12413,12414,12415, //12368\\n12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431, //12384\\n12432,12433,12434,12435,12436,12437,12438,3554,12439,12440,12441,12442,12443,12444,12445,12446, //12400\\n12447,12448,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462, //12416\\n12463,12464,4989,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477, //12432\\n12478,12479,12480,4990,12481,12482,12483,12484,12485,12486,12487,12488,12489,4498,12490,12491, //12448\\n12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507, //12464\\n12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523, //12480\\n12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,12535,12536,12537,12538,12539, //12496\\n12540,12541,12542,12543,12544,12545,12546,12547,12548,12549,12550,12551,4991,12552,12553,12554, //12512\\n12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570, //12528\\n12571,12572,12573,12574,12575,12576,12577,12578,3036,12579,12580,12581,12582,12583,3966,12584, //12544\\n12585,12586,12587,12588,12589,12590,12591,12592,12593,12594,12595,12596,12597,12598,12599,12600, //12560\\n12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616, //12576\\n12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632, //12592\\n12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,4499,12647, //12608\\n12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663, //12624\\n12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679, //12640\\n12680,12681,12682,12683,12684,12685,12686,12687,12688,12689,12690,12691,12692,12693,12694,12695, //12656\\n12696,12697,12698,4992,12699,12700,12701,12702,12703,12704,12705,12706,12707,12708,12709,12710, //12672\\n12711,12712,12713,12714,12715,12716,12717,12718,12719,12720,12721,12722,12723,12724,12725,12726, //12688\\n12727,12728,12729,12730,12731,12732,12733,12734,12735,12736,12737,12738,12739,12740,12741,12742, //12704\\n12743,12744,12745,12746,12747,12748,12749,12750,12751,12752,12753,12754,12755,12756,12757,12758, //12720\\n12759,12760,12761,12762,12763,12764,12765,12766,12767,12768,12769,12770,12771,12772,12773,12774, //12736\\n12775,12776,12777,12778,4993,2175,12779,12780,12781,12782,12783,12784,12785,12786,4500,12787, //12752\\n12788,12789,12790,12791,12792,12793,12794,12795,12796,12797,12798,12799,12800,12801,12802,12803, //12768\\n12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819, //12784\\n12820,12821,12822,12823,12824,12825,12826,4198,3967,12827,12828,12829,12830,12831,12832,12833, //12800\\n12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12847,12848,12849, //12816\\n12850,12851,12852,12853,12854,12855,12856,12857,12858,12859,12860,12861,4199,12862,12863,12864, //12832\\n12865,12866,12867,12868,12869,12870,12871,12872,12873,12874,12875,12876,12877,12878,12879,12880, //12848\\n12881,12882,12883,12884,12885,12886,12887,4501,12888,12889,12890,12891,12892,12893,12894,12895, //12864\\n12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911, //12880\\n12912,4994,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,12924,12925,12926, //12896\\n12927,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942, //12912\\n12943,12944,12945,12946,12947,12948,12949,12950,12951,12952,12953,12954,12955,12956,1772,12957, //12928\\n12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973, //12944\\n12974,12975,12976,12977,12978,12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989, //12960\\n12990,12991,12992,12993,12994,12995,12996,12997,4502,12998,4503,12999,13000,13001,13002,13003, //12976\\n4504,13004,13005,13006,13007,13008,13009,13010,13011,13012,13013,13014,13015,13016,13017,13018, //12992\\n13019,13020,13021,13022,13023,13024,13025,13026,13027,13028,13029,3449,13030,13031,13032,13033, //13008\\n13034,13035,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,13047,13048,13049, //13024\\n13050,13051,13052,13053,13054,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065, //13040\\n13066,13067,13068,13069,13070,13071,13072,13073,13074,13075,13076,13077,13078,13079,13080,13081, //13056\\n13082,13083,13084,13085,13086,13087,13088,13089,13090,13091,13092,13093,13094,13095,13096,13097, //13072\\n13098,13099,13100,13101,13102,13103,13104,13105,13106,13107,13108,13109,13110,13111,13112,13113, //13088\\n13114,13115,13116,13117,13118,3968,13119,4995,13120,13121,13122,13123,13124,13125,13126,13127, //13104\\n4505,13128,13129,13130,13131,13132,13133,13134,4996,4506,13135,13136,13137,13138,13139,4997, //13120\\n13140,13141,13142,13143,13144,13145,13146,13147,13148,13149,13150,13151,13152,13153,13154,13155, //13136\\n13156,13157,13158,13159,4998,13160,13161,13162,13163,13164,13165,13166,13167,13168,13169,13170, //13152\\n13171,13172,13173,13174,13175,13176,4999,13177,13178,13179,13180,13181,13182,13183,13184,13185, //13168\\n13186,13187,13188,13189,13190,13191,13192,13193,13194,13195,13196,13197,13198,13199,13200,13201, //13184\\n13202,13203,13204,13205,13206,5000,13207,13208,13209,13210,13211,13212,13213,13214,13215,13216, //13200\\n13217,13218,13219,13220,13221,13222,13223,13224,13225,13226,13227,4200,5001,13228,13229,13230, //13216\\n13231,13232,13233,13234,13235,13236,13237,13238,13239,13240,3969,13241,13242,13243,13244,3970, //13232\\n13245,13246,13247,13248,13249,13250,13251,13252,13253,13254,13255,13256,13257,13258,13259,13260, //13248\\n13261,13262,13263,13264,13265,13266,13267,13268,3450,13269,13270,13271,13272,13273,13274,13275, //13264\\n13276,5002,13277,13278,13279,13280,13281,13282,13283,13284,13285,13286,13287,13288,13289,13290, //13280\\n13291,13292,13293,13294,13295,13296,13297,13298,13299,13300,13301,13302,3813,13303,13304,13305, //13296\\n13306,13307,13308,13309,13310,13311,13312,13313,13314,13315,13316,13317,13318,13319,13320,13321, //13312\\n13322,13323,13324,13325,13326,13327,13328,4507,13329,13330,13331,13332,13333,13334,13335,13336, //13328\\n13337,13338,13339,13340,13341,5003,13342,13343,13344,13345,13346,13347,13348,13349,13350,13351, //13344\\n13352,13353,13354,13355,13356,13357,13358,13359,13360,13361,13362,13363,13364,13365,13366,13367, //13360\\n5004,13368,13369,13370,13371,13372,13373,13374,13375,13376,13377,13378,13379,13380,13381,13382, //13376\\n13383,13384,13385,13386,13387,13388,13389,13390,13391,13392,13393,13394,13395,13396,13397,13398, //13392\\n13399,13400,13401,13402,13403,13404,13405,13406,13407,13408,13409,13410,13411,13412,13413,13414, //13408\\n13415,13416,13417,13418,13419,13420,13421,13422,13423,13424,13425,13426,13427,13428,13429,13430, //13424\\n13431,13432,4508,13433,13434,13435,4201,13436,13437,13438,13439,13440,13441,13442,13443,13444, //13440\\n13445,13446,13447,13448,13449,13450,13451,13452,13453,13454,13455,13456,13457,5005,13458,13459, //13456\\n13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,13470,4509,13471,13472,13473,13474, //13472\\n13475,13476,13477,13478,13479,13480,13481,13482,13483,13484,13485,13486,13487,13488,13489,13490, //13488\\n13491,13492,13493,13494,13495,13496,13497,13498,13499,13500,13501,13502,13503,13504,13505,13506, //13504\\n13507,13508,13509,13510,13511,13512,13513,13514,13515,13516,13517,13518,13519,13520,13521,13522, //13520\\n13523,13524,13525,13526,13527,13528,13529,13530,13531,13532,13533,13534,13535,13536,13537,13538, //13536\\n13539,13540,13541,13542,13543,13544,13545,13546,13547,13548,13549,13550,13551,13552,13553,13554, //13552\\n13555,13556,13557,13558,13559,13560,13561,13562,13563,13564,13565,13566,13567,13568,13569,13570, //13568\\n13571,13572,13573,13574,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586, //13584\\n13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,13599,13600,13601,13602, //13600\\n13603,13604,13605,13606,13607,13608,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618, //13616\\n13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13629,13630,13631,13632,13633,13634, //13632\\n13635,13636,13637,13638,13639,13640,13641,13642,5006,13643,13644,13645,13646,13647,13648,13649, //13648\\n13650,13651,5007,13652,13653,13654,13655,13656,13657,13658,13659,13660,13661,13662,13663,13664, //13664\\n13665,13666,13667,13668,13669,13670,13671,13672,13673,13674,13675,13676,13677,13678,13679,13680, //13680\\n13681,13682,13683,13684,13685,13686,13687,13688,13689,13690,13691,13692,13693,13694,13695,13696, //13696\\n13697,13698,13699,13700,13701,13702,13703,13704,13705,13706,13707,13708,13709,13710,13711,13712, //13712\\n13713,13714,13715,13716,13717,13718,13719,13720,13721,13722,13723,13724,13725,13726,13727,13728, //13728\\n13729,13730,13731,13732,13733,13734,13735,13736,13737,13738,13739,13740,13741,13742,13743,13744, //13744\\n13745,13746,13747,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760, //13760\\n13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,3273,13775, //13776\\n13776,13777,13778,13779,13780,13781,13782,13783,13784,13785,13786,13787,13788,13789,13790,13791, //13792\\n13792,13793,13794,13795,13796,13797,13798,13799,13800,13801,13802,13803,13804,13805,13806,13807, //13808\\n13808,13809,13810,13811,13812,13813,13814,13815,13816,13817,13818,13819,13820,13821,13822,13823, //13824\\n13824,13825,13826,13827,13828,13829,13830,13831,13832,13833,13834,13835,13836,13837,13838,13839, //13840\\n13840,13841,13842,13843,13844,13845,13846,13847,13848,13849,13850,13851,13852,13853,13854,13855, //13856\\n13856,13857,13858,13859,13860,13861,13862,13863,13864,13865,13866,13867,13868,13869,13870,13871, //13872\\n13872,13873,13874,13875,13876,13877,13878,13879,13880,13881,13882,13883,13884,13885,13886,13887, //13888\\n13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13900,13901,13902,13903, //13904\\n13904,13905,13906,13907,13908,13909,13910,13911,13912,13913,13914,13915,13916,13917,13918,13919, //13920\\n13920,13921,13922,13923,13924,13925,13926,13927,13928,13929,13930,13931,13932,13933,13934,13935, //13936\\n13936,13937,13938,13939,13940,13941,13942,13943,13944,13945,13946,13947,13948,13949,13950,13951, //13952\\n13952,13953,13954,13955,13956,13957,13958,13959,13960,13961,13962,13963,13964,13965,13966,13967, //13968\\n13968,13969,13970,13971,13972]; //13973\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CodingStateMachine = require('./codingstatemachine');\\nvar CharSetProber = require('./charsetprober');\\nvar constants = require('./constants');\\nvar UTF8SMModel = require('./mbcssm/utf8');\\n\\nfunction UTF8Prober() {\\n    CharSetProber.apply(this);\\n\\n    var ONE_CHAR_PROB = 0.5;\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = new CodingStateMachine(UTF8SMModel);\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        UTF8Prober.prototype.reset.apply(this);\\n        this._mCodingSM.reset();\\n        this._mNumOfMBChar = 0;\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"UTF-8\\\";\\n    }\\n\\n    this.feed = function(aBuf) {\\n        for( var i = 0, c; i < aBuf.length; i++ ) {\\n            c = aBuf[i];\\n            var codingState = this._mCodingSM.nextState(c);\\n            if( codingState == constants.error ) {\\n                this._mState = constants.notMe;\\n                break;\\n            } else if( codingState == constants.itsMe ) {\\n                this._mState = constants.foundIt;\\n                break;\\n            } else if( codingState == constants.start ) {\\n                if( this._mCodingSM.getCurrentCharLen() >= 2 ) {\\n                    this._mNumOfMBChar++;\\n                }\\n            }\\n        }\\n\\n        if( this.getState() == constants.detecting ) {\\n            if( this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\\n                this._mState = constants.foundIt;\\n            }\\n        }\\n\\n        return this.getState();\\n    }\\n\\n    this.getConfidence = function() {\\n        var unlike = 0.99;\\n        if( this._mNumOfMBChar < 6 ) {\\n            for( var i = 0; i < this._mNumOfMBChar; i++ ) {\\n                unlike *= ONE_CHAR_PROB;\\n            }\\n            return 1 - unlike;\\n        } else {\\n            return unlike;\\n        }\\n    }\\n\\n    init();\\n}\\nUTF8Prober.prototype = new CharSetProber();\\n\\nmodule.exports = UTF8Prober;\\n\",\"var consts = require('../constants');\\n\\nvar UTF8_cls = [\\n    1,1,1,1,1,1,1,1,  // 00 - 07  //allow 0x00 as a legal value\\n    1,1,1,1,1,1,0,0,  // 08 - 0f\\n    1,1,1,1,1,1,1,1,  // 10 - 17\\n    1,1,1,0,1,1,1,1,  // 18 - 1f\\n    1,1,1,1,1,1,1,1,  // 20 - 27\\n    1,1,1,1,1,1,1,1,  // 28 - 2f\\n    1,1,1,1,1,1,1,1,  // 30 - 37\\n    1,1,1,1,1,1,1,1,  // 38 - 3f\\n    1,1,1,1,1,1,1,1,  // 40 - 47\\n    1,1,1,1,1,1,1,1,  // 48 - 4f\\n    1,1,1,1,1,1,1,1,  // 50 - 57\\n    1,1,1,1,1,1,1,1,  // 58 - 5f\\n    1,1,1,1,1,1,1,1,  // 60 - 67\\n    1,1,1,1,1,1,1,1,  // 68 - 6f\\n    1,1,1,1,1,1,1,1,  // 70 - 77\\n    1,1,1,1,1,1,1,1,  // 78 - 7f\\n    2,2,2,2,3,3,3,3,  // 80 - 87\\n    4,4,4,4,4,4,4,4,  // 88 - 8f\\n    4,4,4,4,4,4,4,4,  // 90 - 97\\n    4,4,4,4,4,4,4,4,  // 98 - 9f\\n    5,5,5,5,5,5,5,5,  // a0 - a7\\n    5,5,5,5,5,5,5,5,  // a8 - af\\n    5,5,5,5,5,5,5,5,  // b0 - b7\\n    5,5,5,5,5,5,5,5,  // b8 - bf\\n    0,0,6,6,6,6,6,6,  // c0 - c7\\n    6,6,6,6,6,6,6,6,  // c8 - cf\\n    6,6,6,6,6,6,6,6,  // d0 - d7\\n    6,6,6,6,6,6,6,6,  // d8 - df\\n    7,8,8,8,8,8,8,8,  // e0 - e7\\n    8,8,8,8,8,9,8,8,  // e8 - ef\\n    10,11,11,11,11,11,11,11,  // f0 - f7\\n    12,13,13,13,14,15,0,0    // f8 - ff\\n];\\n\\nvar UTF8_st = [\\n    consts.error,consts.start,consts.error,consts.error,consts.error,consts.error,    12,  10, //00-07\\n        9,    11,    8,    7,    6,    5,    4,   3, //08-0f\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //10-17\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //18-1f\\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //20-27\\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //28-2f\\n    consts.error,consts.error,    5,    5,    5,    5,consts.error,consts.error, //30-37\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //38-3f\\n    consts.error,consts.error,consts.error,    5,    5,    5,consts.error,consts.error, //40-47\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //48-4f\\n    consts.error,consts.error,    7,    7,    7,    7,consts.error,consts.error, //50-57\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //58-5f\\n    consts.error,consts.error,consts.error,consts.error,    7,    7,consts.error,consts.error, //60-67\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //68-6f\\n    consts.error,consts.error,    9,    9,    9,    9,consts.error,consts.error, //70-77\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //78-7f\\n    consts.error,consts.error,consts.error,consts.error,    9,    9,consts.error,consts.error, //80-87\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //88-8f\\n    consts.error,consts.error,   12,   12,   12,   12,consts.error,consts.error, //90-97\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //98-9f\\n    consts.error,consts.error,consts.error,consts.error,consts.error,   12,consts.error,consts.error, //a0-a7\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //a8-af\\n    consts.error,consts.error,   12,   12,   12,consts.error,consts.error,consts.error, //b0-b7\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, //b8-bf\\n    consts.error,consts.error,consts.start,consts.start,consts.start,consts.start,consts.error,consts.error, //c0-c7\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error  //c8-cf\\n];\\n\\nvar UTF8CharLenTable = [0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6];\\n\\nmodule.exports = {\\n    \\\"classTable\\\"    : UTF8_cls,\\n    \\\"classFactor\\\"   : 16,\\n    \\\"stateTable\\\"    : UTF8_st,\\n    \\\"charLenTable\\\"  : UTF8CharLenTable,\\n    \\\"name\\\"          : \\\"UTF-8\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CodingStateMachine = require('./codingstatemachine');\\nvar MultiByteCharSetProber = require('./mbcharsetprober');\\nvar SJISSMModel = require('./mbcssm/sjis');\\nvar SJISDistributionAnalysis = require('./chardistribution').SJISDistributionAnalysis;\\nvar SJISContextAnalysis = require('./jpcntx').SJISContextAnalysis;\\nvar constants = require('./constants');\\nvar logger = require('./logger');\\n\\nfunction SJISProber() {\\n    MultiByteCharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = new CodingStateMachine(SJISSMModel);\\n        self._mDistributionAnalyzer = new SJISDistributionAnalysis();\\n        self._mContextAnalyzer = new SJISContextAnalysis();\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        SJISProber.prototype.reset.apply(this);\\n        this._mContextAnalyzer.reset();\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"SHIFT_JIS\\\";\\n    }\\n\\n    this.feed = function(aBuf) {\\n        var aLen = aBuf.length;\\n        for( var i = 0; i < aLen; i++ ) {\\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\\n            if( codingState == constants.error ) {\\n                logger.log(this.getCharsetName() + \\\" prober hit error at byte \\\" + i + \\\"\\\\n\\\");\\n                this._mState = constants.notMe;\\n                break;\\n            } else if( codingState == constants.itsMe ) {\\n                this._mState = constants.foundIt;\\n                break;\\n            } else if( codingState == constants.start ) {\\n                var charLen = this._mCodingSM.getCurrentCharLen();\\n                if( i == 0 ) {\\n                    this._mLastChar[1] = aBuf[0];\\n                    this._mContextAnalyzer.feed(this._mLastChar.slice(2 - charLen), charLen);\\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\\n                } else {\\n                    this._mContextAnalyzer.feed(aBuf.slice(i + 1 - charLen, i + 3 - charLen), charLen);\\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i - 1, i + 1), charLen);\\n                }\\n            }\\n        }\\n\\n        this._mLastChar[0] = aBuf[aLen - 1];\\n\\n        if( this.getState() == constants.detecting ) {\\n            if( this._mContextAnalyzer.gotEnoughData() &&\\n                this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\\n                this._mState = constants.foundIt;\\n            }\\n        }\\n\\n        return this.getState();\\n    }\\n\\n    this.getConfidence = function() {\\n        var contxtCf = this._mContextAnalyzer.getConfidence();\\n        var distribCf = this._mDistributionAnalyzer.getConfidence();\\n        return Math.max(contxtCf, distribCf);\\n    }\\n\\n    init();\\n}\\nSJISProber.prototype = new MultiByteCharSetProber();\\n\\nmodule.exports = SJISProber\\n\",\"var consts = require('../constants');\\n\\nvar SJIS_cls = [\\n    1,1,1,1,1,1,1,1,  // 00 - 07\\n    1,1,1,1,1,1,0,0,  // 08 - 0f\\n    1,1,1,1,1,1,1,1,  // 10 - 17\\n    1,1,1,0,1,1,1,1,  // 18 - 1f\\n    1,1,1,1,1,1,1,1,  // 20 - 27\\n    1,1,1,1,1,1,1,1,  // 28 - 2f\\n    1,1,1,1,1,1,1,1,  // 30 - 37\\n    1,1,1,1,1,1,1,1,  // 38 - 3f\\n    2,2,2,2,2,2,2,2,  // 40 - 47\\n    2,2,2,2,2,2,2,2,  // 48 - 4f\\n    2,2,2,2,2,2,2,2,  // 50 - 57\\n    2,2,2,2,2,2,2,2,  // 58 - 5f\\n    2,2,2,2,2,2,2,2,  // 60 - 67\\n    2,2,2,2,2,2,2,2,  // 68 - 6f\\n    2,2,2,2,2,2,2,2,  // 70 - 77\\n    2,2,2,2,2,2,2,1,  // 78 - 7f\\n    3,3,3,3,3,3,3,3,  // 80 - 87\\n    3,3,3,3,3,3,3,3,  // 88 - 8f\\n    3,3,3,3,3,3,3,3,  // 90 - 97\\n    3,3,3,3,3,3,3,3,  // 98 - 9f\\n    // 0xa0 is illegal in sjis encoding, but some pages does\\n    // contain such byte. We need to be more consts.error forgiven.\\n    2,2,2,2,2,2,2,2,  // a0 - a7\\n    2,2,2,2,2,2,2,2,  // a8 - af\\n    2,2,2,2,2,2,2,2,  // b0 - b7\\n    2,2,2,2,2,2,2,2,  // b8 - bf\\n    2,2,2,2,2,2,2,2,  // c0 - c7\\n    2,2,2,2,2,2,2,2,  // c8 - cf\\n    2,2,2,2,2,2,2,2,  // d0 - d7\\n    2,2,2,2,2,2,2,2,  // d8 - df\\n    3,3,3,3,3,3,3,3,  // e0 - e7\\n    3,3,3,3,3,4,4,4,  // e8 - ef\\n    3,3,3,3,3,3,3,3,  // f0 - f7\\n    3,3,3,3,3,0,0,0   // f8 - ff\\n];\\n\\nvar SJIS_st = [\\n    consts.error,consts.start,consts.start,    3,consts.error,consts.error,consts.error,consts.error, //00-07\\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start,consts.start,consts.start  //10-17\\n];\\n\\nvar SJISCharLenTable = [0, 1, 1, 2, 0, 0];\\n\\nmodule.exports = {\\n    \\\"classTable\\\"    : SJIS_cls,\\n    \\\"classFactor\\\"   : 6,\\n    \\\"stateTable\\\"    : SJIS_st,\\n    \\\"charLenTable\\\"  : SJISCharLenTable,\\n    \\\"name\\\"          : \\\"Shift_JIS\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CodingStateMachine = require('./codingstatemachine');\\nvar MultiByteCharSetProber = require('./mbcharsetprober');\\nvar EUCJPDistributionAnalysis = require('./chardistribution').EUCJPDistributionAnalysis;\\nvar EUCJPContextAnalysis = require('./jpcntx').EUCJPContextAnalysis;\\nvar EUCJPSMModel = require('./mbcssm/eucjp');\\nvar constants = require('./constants');\\nvar logger = require('./logger');\\n\\nfunction EUCJPProber() {\\n    MultiByteCharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = new CodingStateMachine(EUCJPSMModel);\\n        self._mDistributionAnalyzer = new EUCJPDistributionAnalysis();\\n        self._mContextAnalyzer = new EUCJPContextAnalysis();\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        EUCJPProber.prototype.reset.apply(this);\\n        this._mContextAnalyzer.reset();\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"EUC-JP\\\";\\n    }\\n\\n    this.feed = function(aBuf) {\\n        var aLen = aBuf.length;\\n        for( var i = 0; i < aLen; i++ ) {\\n            var codingState = this._mCodingSM.nextState(aBuf[i]);\\n            if( codingState == constants.error ) {\\n                logger.log(this.getCharsetName() + \\\" prober hit error at byte \\\" + i + \\\"\\\\n\\\");\\n                this._mState = constants.notMe;\\n                break;\\n            } else if( codingState == constants.itsMe ) {\\n                this._mState = constants.foundIt;\\n                break;\\n            } else if( codingState == constants.start ) {\\n                var charLen = this._mCodingSM.getCurrentCharLen();\\n                if( i == 0 ) {\\n                    this._mLastChar[1] = aBuf[0];\\n                    this._mContextAnalyzer.feed(this._mLastChar, charLen);\\n                    this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\\n                } else {\\n                    this._mContextAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\\n                    this._mDistributionAnalyzer.feed(aBuf.slice(i-1,i+1), charLen);\\n                }\\n            }\\n        }\\n\\n        this._mLastChar[0] = aBuf[aLen - 1];\\n\\n        if( this.getState() == constants.detecting ) {\\n            if( this._mContextAnalyzer.gotEnoughData() &&\\n                this.getConfidence() > constants.SHORTCUT_THRESHOLD ) {\\n                this._mState = constants.foundIt;\\n            }\\n        }\\n\\n        return this.getState();\\n    }\\n\\n    this.getConfidence = function() {\\n        var contxtCf = this._mContextAnalyzer.getConfidence();\\n        var distribCf = this._mDistributionAnalyzer.getConfidence();\\n\\n        return Math.max(contxtCf, distribCf);\\n    }\\n\\n    init();\\n}\\nEUCJPProber.prototype = new MultiByteCharSetProber();\\n\\nmodule.exports = EUCJPProber\\n\",\"var consts = require('../constants');\\n\\nvar EUCJP_cls = [\\n    4,4,4,4,4,4,4,4,  // 00 - 07\\n    4,4,4,4,4,4,5,5,  // 08 - 0f\\n    4,4,4,4,4,4,4,4,  // 10 - 17\\n    4,4,4,5,4,4,4,4,  // 18 - 1f\\n    4,4,4,4,4,4,4,4,  // 20 - 27\\n    4,4,4,4,4,4,4,4,  // 28 - 2f\\n    4,4,4,4,4,4,4,4,  // 30 - 37\\n    4,4,4,4,4,4,4,4,  // 38 - 3f\\n    4,4,4,4,4,4,4,4,  // 40 - 47\\n    4,4,4,4,4,4,4,4,  // 48 - 4f\\n    4,4,4,4,4,4,4,4,  // 50 - 57\\n    4,4,4,4,4,4,4,4,  // 58 - 5f\\n    4,4,4,4,4,4,4,4,  // 60 - 67\\n    4,4,4,4,4,4,4,4,  // 68 - 6f\\n    4,4,4,4,4,4,4,4,  // 70 - 77\\n    4,4,4,4,4,4,4,4,  // 78 - 7f\\n    5,5,5,5,5,5,5,5,  // 80 - 87\\n    5,5,5,5,5,5,1,3,  // 88 - 8f\\n    5,5,5,5,5,5,5,5,  // 90 - 97\\n    5,5,5,5,5,5,5,5,  // 98 - 9f\\n    5,2,2,2,2,2,2,2,  // a0 - a7\\n    2,2,2,2,2,2,2,2,  // a8 - af\\n    2,2,2,2,2,2,2,2,  // b0 - b7\\n    2,2,2,2,2,2,2,2,  // b8 - bf\\n    2,2,2,2,2,2,2,2,  // c0 - c7\\n    2,2,2,2,2,2,2,2,  // c8 - cf\\n    2,2,2,2,2,2,2,2,  // d0 - d7\\n    2,2,2,2,2,2,2,2,  // d8 - df\\n    0,0,0,0,0,0,0,0,  // e0 - e7\\n    0,0,0,0,0,0,0,0,  // e8 - ef\\n    0,0,0,0,0,0,0,0,  // f0 - f7\\n    0,0,0,0,0,0,0,5   // f8 - ff\\n];\\n\\nvar EUCJP_st = [\\n         3,    4,    3,    5,consts.start,consts.error,consts.error,consts.error, //00-07\\n     consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, //08-0f\\n     consts.itsMe,consts.itsMe,consts.start,consts.error,consts.start,consts.error,consts.error,consts.error, //10-17\\n     consts.error,consts.error,consts.start,consts.error,consts.error,consts.error,    3,consts.error, //18-1f\\n         3,consts.error,consts.error,consts.error,consts.start,consts.start,consts.start,consts.start  //20-27\\n];\\n\\nvar EUCJPCharLenTable = [2, 2, 2, 3, 1, 0];\\n\\nmodule.exports = {\\n    \\\"classTable\\\"    : EUCJP_cls,\\n    \\\"classFactor\\\"   : 6,\\n    \\\"stateTable\\\"    : EUCJP_st,\\n    \\\"charLenTable\\\"  : EUCJPCharLenTable,\\n    \\\"name\\\"          : \\\"EUC-JP\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar MultiByteCharSetProber = require('./mbcharsetprober');\\nvar CodingStateMachine = require('./codingstatemachine');\\nvar GB2312SMModel = require('./mbcssm/gb2312');\\nvar GB2312DistributionAnalysis = require('./chardistribution').GB2312DistributionAnalysis;\\n\\nfunction GB2312Prober() {\\n    MultiByteCharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = new CodingStateMachine(GB2312SMModel);\\n        self._mDistributionAnalyzer = new GB2312DistributionAnalysis();\\n        self.reset();\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"GB2312\\\";\\n    }\\n\\n    init();\\n}\\nGB2312Prober.prototype = new MultiByteCharSetProber();\\n\\nmodule.exports = GB2312Prober\\n\",\"var consts = require('../constants');\\n\\nvar GB2312_cls = [\\n    1,1,1,1,1,1,1,1,  // 00 - 07\\n    1,1,1,1,1,1,0,0,  // 08 - 0f\\n    1,1,1,1,1,1,1,1,  // 10 - 17\\n    1,1,1,0,1,1,1,1,  // 18 - 1f\\n    1,1,1,1,1,1,1,1,  // 20 - 27\\n    1,1,1,1,1,1,1,1,  // 28 - 2f\\n    3,3,3,3,3,3,3,3,  // 30 - 37\\n    3,3,1,1,1,1,1,1,  // 38 - 3f\\n    2,2,2,2,2,2,2,2,  // 40 - 47\\n    2,2,2,2,2,2,2,2,  // 48 - 4f\\n    2,2,2,2,2,2,2,2,  // 50 - 57\\n    2,2,2,2,2,2,2,2,  // 58 - 5f\\n    2,2,2,2,2,2,2,2,  // 60 - 67\\n    2,2,2,2,2,2,2,2,  // 68 - 6f\\n    2,2,2,2,2,2,2,2,  // 70 - 77\\n    2,2,2,2,2,2,2,4,  // 78 - 7f\\n    5,6,6,6,6,6,6,6,  // 80 - 87\\n    6,6,6,6,6,6,6,6,  // 88 - 8f\\n    6,6,6,6,6,6,6,6,  // 90 - 97\\n    6,6,6,6,6,6,6,6,  // 98 - 9f\\n    6,6,6,6,6,6,6,6,  // a0 - a7\\n    6,6,6,6,6,6,6,6,  // a8 - af\\n    6,6,6,6,6,6,6,6,  // b0 - b7\\n    6,6,6,6,6,6,6,6,  // b8 - bf\\n    6,6,6,6,6,6,6,6,  // c0 - c7\\n    6,6,6,6,6,6,6,6,  // c8 - cf\\n    6,6,6,6,6,6,6,6,  // d0 - d7\\n    6,6,6,6,6,6,6,6,  // d8 - df\\n    6,6,6,6,6,6,6,6,  // e0 - e7\\n    6,6,6,6,6,6,6,6,  // e8 - ef\\n    6,6,6,6,6,6,6,6,  // f0 - f7\\n    6,6,6,6,6,6,6,0   // f8 - ff\\n];\\n\\nvar GB2312_st = [\\n    consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,    3,consts.error, //00-07\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, //08-0f\\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start, //10-17\\n        4,consts.error,consts.start,consts.start,consts.error,consts.error,consts.error,consts.error, //18-1f\\n    consts.error,consts.error,    5,consts.error,consts.error,consts.error,consts.itsMe,consts.error, //20-27\\n    consts.error,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //28-2f\\n];\\n\\n// To be accurate, the length of class 6 can be either 2 or 4.\\n// But it is not necessary to discriminate between the two since\\n// it is used for frequency analysis only, and we are validing\\n// each code range there as well. So it is safe to set it to be\\n// 2 here.\\nvar GB2312CharLenTable = [0, 1, 1, 1, 1, 1, 2];\\n\\nmodule.exports = {\\n    \\\"classTable\\\"    : GB2312_cls,\\n    \\\"classFactor\\\"   : 7,\\n    \\\"stateTable\\\"    : GB2312_st,\\n    \\\"charLenTable\\\"  : GB2312CharLenTable,\\n    \\\"name\\\"          : \\\"GB2312\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CodingStateMachine = require('./codingstatemachine');\\nvar MultiByteCharSetProber = require('./mbcharsetprober');\\nvar EUCKRDistributionAnalysis = require('./chardistribution').EUCKRDistributionAnalysis;\\nvar EUCKRSMModel = require('./mbcssm/euckr');\\n\\nfunction EUCKRProber() {\\n    MultiByteCharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = new CodingStateMachine(EUCKRSMModel);\\n        self._mDistributionAnalyzer = new EUCKRDistributionAnalysis();\\n        self.reset();\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"EUC-KR\\\";\\n    }\\n\\n    init();\\n}\\nEUCKRProber.prototype = new MultiByteCharSetProber();\\n\\nmodule.exports = EUCKRProber;\\n\",\"var consts = require('../constants');\\n\\nvar EUCKR_cls  = [\\n    1,1,1,1,1,1,1,1,  // 00 - 07\\n    1,1,1,1,1,1,0,0,  // 08 - 0f\\n    1,1,1,1,1,1,1,1,  // 10 - 17\\n    1,1,1,0,1,1,1,1,  // 18 - 1f\\n    1,1,1,1,1,1,1,1,  // 20 - 27\\n    1,1,1,1,1,1,1,1,  // 28 - 2f\\n    1,1,1,1,1,1,1,1,  // 30 - 37\\n    1,1,1,1,1,1,1,1,  // 38 - 3f\\n    1,1,1,1,1,1,1,1,  // 40 - 47\\n    1,1,1,1,1,1,1,1,  // 48 - 4f\\n    1,1,1,1,1,1,1,1,  // 50 - 57\\n    1,1,1,1,1,1,1,1,  // 58 - 5f\\n    1,1,1,1,1,1,1,1,  // 60 - 67\\n    1,1,1,1,1,1,1,1,  // 68 - 6f\\n    1,1,1,1,1,1,1,1,  // 70 - 77\\n    1,1,1,1,1,1,1,1,  // 78 - 7f\\n    0,0,0,0,0,0,0,0,  // 80 - 87\\n    0,0,0,0,0,0,0,0,  // 88 - 8f\\n    0,0,0,0,0,0,0,0,  // 90 - 97\\n    0,0,0,0,0,0,0,0,  // 98 - 9f\\n    0,2,2,2,2,2,2,2,  // a0 - a7\\n    2,2,2,2,2,3,3,3,  // a8 - af\\n    2,2,2,2,2,2,2,2,  // b0 - b7\\n    2,2,2,2,2,2,2,2,  // b8 - bf\\n    2,2,2,2,2,2,2,2,  // c0 - c7\\n    2,3,2,2,2,2,2,2,  // c8 - cf\\n    2,2,2,2,2,2,2,2,  // d0 - d7\\n    2,2,2,2,2,2,2,2,  // d8 - df\\n    2,2,2,2,2,2,2,2,  // e0 - e7\\n    2,2,2,2,2,2,2,2,  // e8 - ef\\n    2,2,2,2,2,2,2,2,  // f0 - f7\\n    2,2,2,2,2,2,2,0   // f8 - ff\\n];\\n\\nvar EUCKR_st = [\\n    consts.error,consts.start,    3,consts.error,consts.error,consts.error,consts.error,consts.error, //00-07\\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start  //08-0f\\n];\\n\\nvar EUCKRCharLenTable = [0, 1, 2, 0];\\n\\nmodule.exports = {\\n    \\\"classTable\\\"    : EUCKR_cls,\\n    \\\"classFactor\\\"   : 4,\\n    \\\"stateTable\\\"    : EUCKR_st,\\n    \\\"charLenTable\\\"  : EUCKRCharLenTable,\\n    \\\"name\\\"          : \\\"EUC-KR\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n var CodingStateMachine = require('./codingstatemachine');\\n var MultiByteCharSetProber = require('./mbcharsetprober');\\n var EUCTWDistributionAnalysis = require('./chardistribution').EUCTWDistributionAnalysis;\\n var EUCTWSMModel = require('./mbcssm/euctw');\\n\\nfunction EUCTWProber() {\\n    MultiByteCharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = new CodingStateMachine(EUCTWSMModel);\\n        self._mDistributionAnalyzer = new EUCTWDistributionAnalysis();\\n        self.reset();\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"EUC-TW\\\";\\n    }\\n\\n    init();\\n}\\nEUCTWProber.prototype = new MultiByteCharSetProber();\\n\\nmodule.exports = EUCTWProber\\n\",\"var consts = require('../constants');\\n\\nvar EUCTW_cls = [\\n    2,2,2,2,2,2,2,2,  // 00 - 07\\n    2,2,2,2,2,2,0,0,  // 08 - 0f\\n    2,2,2,2,2,2,2,2,  // 10 - 17\\n    2,2,2,0,2,2,2,2,  // 18 - 1f\\n    2,2,2,2,2,2,2,2,  // 20 - 27\\n    2,2,2,2,2,2,2,2,  // 28 - 2f\\n    2,2,2,2,2,2,2,2,  // 30 - 37\\n    2,2,2,2,2,2,2,2,  // 38 - 3f\\n    2,2,2,2,2,2,2,2,  // 40 - 47\\n    2,2,2,2,2,2,2,2,  // 48 - 4f\\n    2,2,2,2,2,2,2,2,  // 50 - 57\\n    2,2,2,2,2,2,2,2,  // 58 - 5f\\n    2,2,2,2,2,2,2,2,  // 60 - 67\\n    2,2,2,2,2,2,2,2,  // 68 - 6f\\n    2,2,2,2,2,2,2,2,  // 70 - 77\\n    2,2,2,2,2,2,2,2,  // 78 - 7f\\n    0,0,0,0,0,0,0,0,  // 80 - 87\\n    0,0,0,0,0,0,6,0,  // 88 - 8f\\n    0,0,0,0,0,0,0,0,  // 90 - 97\\n    0,0,0,0,0,0,0,0,  // 98 - 9f\\n    0,3,4,4,4,4,4,4,  // a0 - a7\\n    5,5,1,1,1,1,1,1,  // a8 - af\\n    1,1,1,1,1,1,1,1,  // b0 - b7\\n    1,1,1,1,1,1,1,1,  // b8 - bf\\n    1,1,3,1,3,3,3,3,  // c0 - c7\\n    3,3,3,3,3,3,3,3,  // c8 - cf\\n    3,3,3,3,3,3,3,3,  // d0 - d7\\n    3,3,3,3,3,3,3,3,  // d8 - df\\n    3,3,3,3,3,3,3,3,  // e0 - e7\\n    3,3,3,3,3,3,3,3,  // e8 - ef\\n    3,3,3,3,3,3,3,3,  // f0 - f7\\n    3,3,3,3,3,3,3,0   // f8 - ff\\n];\\n\\nvar EUCTW_st = [\\n    consts.error,consts.error,consts.start,    3,    3,    3,    4,consts.error, //00-07\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, //08-0f\\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.start,consts.error, //10-17\\n    consts.start,consts.start,consts.start,consts.error,consts.error,consts.error,consts.error,consts.error, //18-1f\\n        5,consts.error,consts.error,consts.error,consts.start,consts.error,consts.start,consts.start, //20-27\\n    consts.start,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  //28-2f\\n];\\n\\nvar EUCTWCharLenTable = [0, 0, 1, 2, 2, 2, 3];\\n\\nmodule.exports = {\\n    \\\"classTable\\\"    : EUCTW_cls,\\n    \\\"classFactor\\\"   : 7,\\n    \\\"stateTable\\\"    : EUCTW_st,\\n    \\\"charLenTable\\\"  : EUCTWCharLenTable,\\n    \\\"name\\\"          : \\\"x-euc-tw\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar SingleByteCharSetProber = require('./sbcharsetprober');\\nvar CharSetGroupProber = require('./charsetgroupprober');\\nvar Win1255HebrewModel = require('./langhebrewmodel').Win1255HebrewModel;\\nvar HebrewProber = require('./hebrewprober');\\nvar cyrillicModels = require('./langcyrillicmodel');\\nvar greekModels = require('./langgreekmodel');\\nvar TIS620ThaiModel = require('./langthaimodel').TIS620ThaiModel;\\nvar hungarianModels = require('./langhungarianmodel');\\nvar bulgarianModels = require('./langbulgarianmodel')\\n\\nfunction SBCSGroupProber() {\\n    CharSetGroupProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mProbers = [\\n            new SingleByteCharSetProber(cyrillicModels.Win1251CyrillicModel),\\n            new SingleByteCharSetProber(cyrillicModels.Koi8rModel),\\n            new SingleByteCharSetProber(cyrillicModels.Latin5CyrillicModel),\\n            new SingleByteCharSetProber(cyrillicModels.MacCyrillicModel),\\n            new SingleByteCharSetProber(cyrillicModels.Ibm866Model),\\n            new SingleByteCharSetProber(cyrillicModels.Ibm855Model),\\n            new SingleByteCharSetProber(greekModels.Latin7GreekModel),\\n            new SingleByteCharSetProber(greekModels.Win1253GreekModel),\\n            new SingleByteCharSetProber(bulgarianModels.Latin5BulgarianModel),\\n            new SingleByteCharSetProber(bulgarianModels.Win1251BulgarianModel),\\n            new SingleByteCharSetProber(hungarianModels.Latin2HungarianModel),\\n            new SingleByteCharSetProber(hungarianModels.Win1250HungarianModel),\\n            new SingleByteCharSetProber(TIS620ThaiModel)\\n        ];\\n        var hebrewProber = new HebrewProber();\\n        var logicalHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, false, hebrewProber);\\n        var visualHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, true, hebrewProber);\\n        hebrewProber.setModelProbers(logicalHebrewProber, visualHebrewProber);\\n        self._mProbers.push(hebrewProber, logicalHebrewProber, visualHebrewProber);\\n\\n        self.reset();\\n    }\\n\\n    init();\\n}\\nSBCSGroupProber.prototype = new CharSetGroupProber();\\n\\nmodule.exports = SBCSGroupProber;\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CharSetProber = require('./charsetprober');\\nvar constants = require('./constants');\\nvar logger = require('./logger');\\n\\nfunction SingleByteCharSetProber(model, reversed, nameProber) {\\n    CharSetProber.apply(this);\\n\\n    var SAMPLE_SIZE = 64;\\n    var SB_ENOUGH_REL_THRESHOLD = 1024;\\n    var POSITIVE_SHORTCUT_THRESHOLD = 0.95;\\n    var NEGATIVE_SHORTCUT_THRESHOLD = 0.05;\\n    var SYMBOL_CAT_ORDER = 250;\\n    var NUMBER_OF_SEQ_CAT = 4;\\n    var POSITIVE_CAT = NUMBER_OF_SEQ_CAT - 1;\\n    //var NEGATIVE_CAT = 0;\\n\\n    var self = this;\\n\\n    function init(model, reversed, nameProber) {\\n        self._mModel = model;\\n        self._mReversed = reversed; // \\\"true\\\" if we need to reverse every pair in the model lookup\\n        self._mNameProber = nameProber; // Optional auxiliary prober for name decision\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        SingleByteCharSetProber.prototype.reset.apply(this);\\n        this._mLastOrder = 255; // char order of last character\\n        this._mSeqCounters = [];\\n        for( var i = 0; i < NUMBER_OF_SEQ_CAT; this._mSeqCounters[i++] = 0 );\\n        this._mTotalSeqs = 0;\\n        this._mTotalChar = 0;\\n        this._mFreqChar = 0; // characters that fall in our sampling range\\n    }\\n\\n    this.getCharsetName = function() {\\n        if( this._mNameProber ) {\\n            return this._mNameProber.getCharsetName();\\n        } else {\\n            return this._mModel.charsetName;\\n        }\\n    }\\n\\n    this.feed = function(aBuf) {\\n        if( ! this._mModel.keepEnglishLetter ) {\\n            aBuf = this.filterWithoutEnglishLetters(aBuf);\\n        }\\n        var aLen = aBuf.length;\\n        if( !aLen ) {\\n            return this.getState();\\n        }\\n        for( var i = 0, c; i < aLen; i++ )\\n        {\\n            c = aBuf.charCodeAt(i);\\n            var order = this._mModel.charToOrderMap[c];\\n            if( order < SYMBOL_CAT_ORDER ) {\\n                this._mTotalChar++;\\n            }\\n            if( order < SAMPLE_SIZE ) {\\n                this._mFreqChar++;\\n                if( this._mLastOrder < SAMPLE_SIZE ) {\\n                    this._mTotalSeqs++;\\n                    if( !this._mReversed ) {\\n                        this._mSeqCounters[this._mModel.precedenceMatrix[(this._mLastOrder * SAMPLE_SIZE) + order]]++;\\n                    } else { // reverse the order of the letters in the lookup\\n                        this._mSeqCounters[this._mModel.precedenceMatrix[(order * SAMPLE_SIZE) + this._mLastOrder]]++;\\n                    }\\n                }\\n            }\\n            this._mLastOrder = order;\\n        }\\n\\n        if( this.getState() == constants.detecting ) {\\n            if( self._mTotalSeqs > SB_ENOUGH_REL_THRESHOLD ) {\\n                var cf = this.getConfidence();\\n                if( cf > POSITIVE_SHORTCUT_THRESHOLD ) {\\n                    logger.log(this._mModel.charsetName + \\\" confidence = \\\" + cf + \\\", we have a winner\\\\n\\\");\\n                } else if( cf < NEGATIVE_SHORTCUT_THRESHOLD ) {\\n                    logger.log(this._mModel.charsetName + \\\" confidence = \\\" + cf + \\\", below negative shortcut threshhold \\\" + NEGATIVE_SHORTCUT_THRESHOLD + \\\"\\\\n\\\");\\n                    this._mState = constants.notMe;\\n                }\\n            }\\n        }\\n\\n        return this.getState();\\n    }\\n\\n    this.getConfidence = function() {\\n        var r = 0.01;\\n        if( this._mTotalSeqs > 0 ) {\\n            //logger.log(this._mSeqCounters[POSITIVE_CAT] + \\\" \\\" + this._mTotalSeqs + \\\" \\\" + this._mModel.mTypicalPositiveRatio);\\n            r = (1.0 * this._mSeqCounters[POSITIVE_CAT]) / this._mTotalSeqs / this._mModel.mTypicalPositiveRatio;\\n            //logger.log(r + \\\" \\\" + this._mFreqChar + \\\" \\\" + this._mTotalChar);\\n            r *= this._mFreqChar / this._mTotalChar;\\n            if( r >= 1.0 ) {\\n                r = 0.99;\\n            }\\n        }\\n        return r;\\n    }\\n\\n    reversed = reversed !== undefined ? reversed : false;\\n    nameProber = nameProber !== undefined ? nameProber : null;\\n    init(model, reversed, nameProber);\\n}\\nSingleByteCharSetProber.prototype = new CharSetProber();\\n\\nmodule.exports = SingleByteCharSetProber\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// 255: Control characters that usually does not exist in any text\\n// 254: Carriage/Return\\n// 253: symbol (punctuation) that does not belong to word\\n// 252: 0 - 9\\n\\n// Windows-1255 language model\\n// Character Mapping Table:\\nexports.win1255_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253, 69, 91, 79, 80, 92, 89, 97, 90, 68,111,112, 82, 73, 95, 85,  // 40\\n 78,121, 86, 71, 67,102,107, 84,114,103,115,253,253,253,253,253,  // 50\\n253, 50, 74, 60, 61, 42, 76, 70, 64, 53,105, 93, 56, 65, 54, 49,  // 60\\n 66,110, 51, 43, 44, 63, 81, 77, 98, 75,108,253,253,253,253,253,  // 70\\n124,202,203,204,205, 40, 58,206,207,208,209,210,211,212,213,214,\\n215, 83, 52, 47, 46, 72, 32, 94,216,113,217,109,218,219,220,221,\\n 34,116,222,118,100,223,224,117,119,104,125,225,226, 87, 99,227,\\n106,122,123,228, 55,229,230,101,231,232,120,233, 48, 39, 57,234,\\n 30, 59, 41, 88, 33, 37, 36, 31, 29, 35,235, 62, 28,236,126,237,\\n238, 38, 45,239,240,241,242,243,127,244,245,246,247,248,249,250,\\n  9,  8, 20, 16,  3,  2, 24, 14, 22,  1, 25, 15,  4, 11,  6, 23,\\n 12, 19, 13, 26, 18, 27, 21, 17,  7, 10,  5,251,252,128, 96,253\\n];\\n\\n// Model Table:\\n// total sequences: 100%\\n// first 512 sequences: 98.4004%\\n// first 1024 sequences: 1.5981%\\n// rest  sequences:      0.087%\\n// negative sequences:   0.0015%\\nexports.HebrewLangModel = [\\n0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,2,0,1,0,0,\\n3,0,3,1,0,0,1,3,2,0,1,1,2,0,2,2,2,1,1,1,1,2,1,1,1,2,0,0,2,2,0,1,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,\\n1,2,1,2,1,2,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,\\n1,2,1,3,1,1,0,0,2,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,1,2,2,1,3,\\n1,2,1,1,2,2,0,0,2,2,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,3,2,\\n1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,2,3,2,2,2,1,2,2,2,2,\\n1,2,1,1,2,2,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,2,2,2,2,2,\\n0,2,0,2,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,0,2,2,2,\\n0,2,1,2,2,2,0,0,2,1,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,3,2,2,2,\\n1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,\\n3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,0,2,\\n0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,2,1,2,1,1,1,\\n0,1,1,1,1,1,3,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,\\n0,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,\\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,2,3,3,3,2,1,2,3,3,2,3,3,3,3,2,3,2,1,2,0,2,1,2,\\n0,2,0,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,2,3,3,3,1,2,2,3,3,2,3,2,3,2,2,3,1,2,2,0,2,2,2,\\n0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,2,2,3,3,3,3,1,3,2,2,2,\\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,2,2,2,1,2,2,0,2,2,2,2,\\n0,2,0,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,1,3,2,3,3,2,3,3,2,2,1,2,2,2,2,2,2,\\n0,2,1,2,1,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,1,\\n0,2,0,1,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,2,1,2,3,3,3,3,3,3,3,2,3,2,3,2,1,2,3,0,2,1,2,2,\\n0,2,1,1,2,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,\\n3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,1,3,1,2,2,2,1,2,3,3,1,2,1,2,2,2,2,\\n0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,0,2,3,3,3,1,3,3,3,1,2,2,2,2,1,1,2,2,2,2,2,2,\\n0,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,2,3,3,3,2,2,3,3,3,2,1,2,3,2,3,2,2,2,2,1,2,1,1,1,2,2,\\n0,2,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,\\n1,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,2,3,3,2,3,1,2,2,2,2,3,2,3,1,1,2,2,1,2,2,1,1,0,2,2,2,2,\\n0,1,0,1,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,\\n3,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,\\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\\n3,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,1,1,1,1,1,1,1,1,2,1,1,0,3,3,3,\\n0,3,0,2,2,2,2,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,1,1,2,0,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,0,0,0,0,\\n0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,0,2,1,0,\\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\\n0,3,1,1,2,2,2,2,2,1,2,2,2,1,1,2,2,2,2,2,2,2,1,2,2,1,0,1,1,1,1,0,\\n0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,2,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,\\n0,0,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,\\n2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,1,2,1,1,1,1,0,0,0,0,\\n0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,0,1,0,1,\\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,0,1,0,1,\\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,\\n0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,\\n0,1,1,1,2,1,2,2,2,0,2,0,2,0,1,1,2,1,1,1,1,2,1,0,1,1,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,1,0,0,0,0,0,1,0,1,2,2,0,1,0,0,1,1,2,2,1,2,0,2,0,0,0,1,2,0,1,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,2,0,2,1,2,0,2,0,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,1,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,1,2,2,0,0,1,0,0,0,1,0,0,1,\\n1,1,2,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,2,1,\\n0,2,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,\\n2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,2,1,1,2,0,1,0,0,0,1,1,0,1,\\n1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,0,0,2,1,1,2,0,2,0,0,0,1,1,0,1,\\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,2,2,1,2,1,1,0,1,0,0,0,1,1,0,1,\\n2,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,\\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,2,1,1,1,0,2,1,1,0,0,0,2,1,0,1,\\n1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,0,2,1,1,0,1,0,0,0,1,1,0,1,\\n2,2,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,0,1,2,1,0,2,0,0,0,1,1,0,1,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,\\n0,1,0,0,2,0,2,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,\\n1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,\\n0,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,0,0\\n];\\n\\nexports.Win1255HebrewModel = {\\n    \\\"charToOrderMap\\\"        : exports.win1255_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.HebrewLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.984004,\\n    \\\"keepEnglishLetter\\\"     : false,\\n    \\\"charsetName\\\"           : \\\"windows-1255\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// This prober doesn't actually recognize a language or a charset.\\n// It is a helper prober for the use of the Hebrew model probers\\n\\n////// General ideas of the Hebrew charset recognition //////\\n//\\n// Four main charsets exist in Hebrew:\\n// \\\"ISO-8859-8\\\" - Visual Hebrew\\n// \\\"windows-1255\\\" - Logical Hebrew\\n// \\\"ISO-8859-8-I\\\" - Logical Hebrew\\n// \\\"x-mac-hebrew\\\" - ?? Logical Hebrew ??\\n//\\n// Both \\\"ISO\\\" charsets use a completely identical set of code points, whereas\\n// \\\"windows-1255\\\" and \\\"x-mac-hebrew\\\" are two different proper supersets of\\n// these code points. windows-1255 defines additional characters in the range\\n// 0x80-0x9F as some misc punctuation marks as well as some Hebrew-specific\\n// diacritics and additional 'Yiddish' ligature letters in the range 0xc0-0xd6.\\n// x-mac-hebrew defines similar additional code points but with a different\\n// mapping.\\n//\\n// As far as an average Hebrew text with no diacritics is concerned, all four\\n// charsets are identical with respect to code points. Meaning that for the\\n// main Hebrew alphabet, all four map the same values to all 27 Hebrew letters\\n// (including final letters).\\n//\\n// The dominant difference between these charsets is their directionality.\\n// \\\"Visual\\\" directionality means that the text is ordered as if the renderer is\\n// not aware of a BIDI rendering algorithm. The renderer sees the text and\\n// draws it from left to right. The text itself when ordered naturally is read\\n// backwards. A buffer of Visual Hebrew generally looks like so:\\n// \\\"[last word of first line spelled backwards] [whole line ordered backwards\\n// and spelled backwards] [first word of first line spelled backwards]\\n// [end of line] [last word of second line] ... etc' \\\"\\n// adding punctuation marks, numbers and English text to visual text is\\n// naturally also \\\"visual\\\" and from left to right.\\n//\\n// \\\"Logical\\\" directionality means the text is ordered \\\"naturally\\\" according to\\n// the order it is read. It is the responsibility of the renderer to display\\n// the text from right to left. A BIDI algorithm is used to place general\\n// punctuation marks, numbers and English text in the text.\\n//\\n// Texts in x-mac-hebrew are almost impossible to find on the Internet. From\\n// what little evidence I could find, it seems that its general directionality\\n// is Logical.\\n//\\n// To sum up all of the above, the Hebrew probing mechanism knows about two\\n// charsets:\\n// Visual Hebrew - \\\"ISO-8859-8\\\" - backwards text - Words and sentences are\\n//    backwards while line order is natural. For charset recognition purposes\\n//    the line order is unimportant (In fact, for this implementation, even\\n//    word order is unimportant).\\n// Logical Hebrew - \\\"windows-1255\\\" - normal, naturally ordered text.\\n//\\n// \\\"ISO-8859-8-I\\\" is a subset of windows-1255 and doesn't need to be\\n//    specifically identified.\\n// \\\"x-mac-hebrew\\\" is also identified as windows-1255. A text in x-mac-hebrew\\n//    that contain special punctuation marks or diacritics is displayed with\\n//    some unconverted characters showing as question marks. This problem might\\n//    be corrected using another model prober for x-mac-hebrew. Due to the fact\\n//    that x-mac-hebrew texts are so rare, writing another model prober isn't\\n//    worth the effort and performance hit.\\n//\\n//////// The Prober ////////\\n//\\n// The prober is divided between two SBCharSetProbers and a HebrewProber,\\n// all of which are managed, created, fed data, inquired and deleted by the\\n// SBCSGroupProber. The two SBCharSetProbers identify that the text is in\\n// fact some kind of Hebrew, Logical or Visual. The final decision about which\\n// one is it is made by the HebrewProber by combining final-letter scores\\n// with the scores of the two SBCharSetProbers to produce a final answer.\\n//\\n// The SBCSGroupProber is responsible for stripping the original text of HTML\\n// tags, English characters, numbers, low-ASCII punctuation characters, spaces\\n// and new lines. It reduces any sequence of such characters to a single space.\\n// The buffer fed to each prober in the SBCS group prober is pure text in\\n// high-ASCII.\\n// The two SBCharSetProbers (model probers) share the same language model:\\n// Win1255Model.\\n// The first SBCharSetProber uses the model normally as any other\\n// SBCharSetProber does, to recognize windows-1255, upon which this model was\\n// built. The second SBCharSetProber is told to make the pair-of-letter\\n// lookup in the language model backwards. This in practice exactly simulates\\n// a visual Hebrew model using the windows-1255 logical Hebrew model.\\n//\\n// The HebrewProber is not using any language model. All it does is look for\\n// final-letter evidence suggesting the text is either logical Hebrew or visual\\n// Hebrew. Disjointed from the model probers, the results of the HebrewProber\\n// alone are meaningless. HebrewProber always returns 0.00 as confidence\\n// since it never identifies a charset by itself. Instead, the pointer to the\\n// HebrewProber is passed to the model probers as a helper \\\"Name Prober\\\".\\n// When the Group prober receives a positive identification from any prober,\\n// it asks for the name of the charset identified. If the prober queried is a\\n// Hebrew model prober, the model prober forwards the call to the\\n// HebrewProber to make the final decision. In the HebrewProber, the\\n// decision is made according to the final-letters scores maintained and Both\\n// model probers scores. The answer is returned in the form of the name of the\\n// charset identified, either \\\"windows-1255\\\" or \\\"ISO-8859-8\\\".\\n\\nvar CharSetProber = require('./charsetprober');\\nvar constants = require('./constants')\\n\\n// https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array/IndexOf\\nif (!Array.prototype.indexOf)\\n{\\n    Array.prototype.indexOf = function(elt /*, from*/)\\n    {\\n        var len = this.length >>> 0;\\n\\n        var from = Number(arguments[1]) || 0;\\n        from = (from < 0)\\n             ? Math.ceil(from)\\n             : Math.floor(from);\\n        if (from < 0)\\n            from += len;\\n\\n        for (; from < len; from++)\\n        {\\n            if (from in this &&\\n                this[from] === elt)\\n                return from;\\n        }\\n        return -1;\\n    };\\n}\\n\\nfunction HebrewProber() {\\n    CharSetProber.apply(this);\\n\\n    // windows-1255 / ISO-8859-8 code points of interest\\n    var FINAL_KAF = '\\\\xea'\\n    var NORMAL_KAF = '\\\\xeb'\\n    var FINAL_MEM = '\\\\xed'\\n    var NORMAL_MEM = '\\\\xee'\\n    var FINAL_NUN = '\\\\xef'\\n    var NORMAL_NUN = '\\\\xf0'\\n    var FINAL_PE = '\\\\xf3'\\n    var NORMAL_PE = '\\\\xf4'\\n    var FINAL_TSADI = '\\\\xf5'\\n    var NORMAL_TSADI = '\\\\xf6'\\n\\n    // Minimum Visual vs Logical final letter score difference.\\n    // If the difference is below this, don't rely solely on the final letter score distance.\\n    var MIN_FINAL_CHAR_DISTANCE = 5\\n\\n    // Minimum Visual vs Logical model score difference.\\n    // If the difference is below this, don't rely at all on the model score distance.\\n    var MIN_MODEL_DISTANCE = 0.01\\n\\n    var VISUAL_HEBREW_NAME = \\\"ISO-8859-8\\\"\\n    var LOGICAL_HEBREW_NAME = \\\"windows-1255\\\"\\n    var self = this;\\n\\n    function init() {\\n        self._mLogicalProber = null;\\n        self._mVisualProber = null;\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        this._mFinalCharLogicalScore = 0;\\n        this._mFinalCharVisualScore = 0;\\n        // The two last characters seen in the previous buffer,\\n        // mPrev and mBeforePrev are initialized to space in order to simulate a word\\n        // delimiter at the beginning of the data\\n        this._mPrev = \\\" \\\";\\n        this._mBeforePrev = \\\" \\\";\\n        // These probers are owned by the group prober.\\n    }\\n\\n    this.setModelProbers = function(logicalProber, visualProber) {\\n        this._mLogicalProber = logicalProber;\\n        this._mVisualProber = visualProber;\\n    }\\n\\n    this.isFinal = function(c) {\\n        return [FINAL_KAF, FINAL_MEM, FINAL_NUN, FINAL_PE, FINAL_TSADI].indexOf(c) != -1;\\n    }\\n\\n    this.isNonFinal = function(c) {\\n        // The normal Tsadi is not a good Non-Final letter due to words like\\n        // 'lechotet' (to chat) containing an apostrophe after the tsadi. This\\n        // apostrophe is converted to a space in FilterWithoutEnglishLetters causing\\n        // the Non-Final tsadi to appear at an end of a word even though this is not\\n        // the case in the original text.\\n        // The letters Pe and Kaf rarely display a related behavior of not being a\\n        // good Non-Final letter. Words like 'Pop', 'Winamp' and 'Mubarak' for\\n        // example legally end with a Non-Final Pe or Kaf. However, the benefit of\\n        // these letters as Non-Final letters outweighs the damage since these words\\n        // are quite rare.\\n        return [NORMAL_KAF, NORMAL_MEM, NORMAL_NUN, NORMAL_PE].indexOf(c) != -1;\\n    }\\n\\n    this.feed = function(aBuf) {\\n        // Final letter analysis for logical-visual decision.\\n        // Look for evidence that the received buffer is either logical Hebrew or\\n        // visual Hebrew.\\n        // The following cases are checked:\\n        // 1) A word longer than 1 letter, ending with a final letter. This is an\\n        //    indication that the text is laid out \\\"naturally\\\" since the final letter\\n        //    really appears at the end. +1 for logical score.\\n        // 2) A word longer than 1 letter, ending with a Non-Final letter. In normal\\n        //    Hebrew, words ending with Kaf, Mem, Nun, Pe or Tsadi, should not end with\\n        //    the Non-Final form of that letter. Exceptions to this rule are mentioned\\n        //    above in isNonFinal(). This is an indication that the text is laid out\\n        //    backwards. +1 for visual score\\n        // 3) A word longer than 1 letter, starting with a final letter. Final letters\\n        //    should not appear at the beginning of a word. This is an indication that\\n        //    the text is laid out backwards. +1 for visual score.\\n        //\\n        // The visual score and logical score are accumulated throughout the text and\\n        // are finally checked against each other in GetCharSetName().\\n        // No checking for final letters in the middle of words is done since that case\\n        // is not an indication for either Logical or Visual text.\\n        //\\n        // We automatically filter out all 7-bit characters (replace them with spaces)\\n        // so the word boundary detection works properly. [MAP]\\n\\n        if( this.getState() == constants.notMe ) {\\n            // Both model probers say it's not them. No reason to continue.\\n            return constants.notMe;\\n        }\\n\\n        aBuf = this.filterHighBitOnly(aBuf);\\n\\n        for( var i = 0, cur; i < aBuf.length; i++ ) {\\n            cur = aBuf[i];\\n            if( cur == \\\" \\\" ) {\\n                // We stand on a space - a word just ended\\n                if( this._mBeforePrev != \\\" \\\" ) {\\n                    // next-to-last char was not a space so self._mPrev is not a 1 letter word\\n                    if( this.isFinal(this._mPrev) ) {\\n                        // case (1) [-2:not space][-1:final letter][cur:space]\\n                        this._mFinalCharLogicalScore++;\\n                    } else if( this.isNonFinal(this._mPrev) ) {\\n                        // case (2) [-2:not space][-1:Non-Final letter][cur:space]\\n                        this._mFinalCharVisualScore++;\\n                    }\\n                }\\n            } else {\\n                // Not standing on a space\\n                if( this._mBeforePrev == \\\" \\\" && this.isFinal(this._mPrev) && cur != \\\" \\\" ) {\\n                    // case (3) [-2:space][-1:final letter][cur:not space]\\n                    this._mFinalCharVisualScore++;\\n                }\\n            }\\n            this._mBeforePrev = this._mPrev;\\n            this._mPrev = cur;\\n        }\\n        // Forever detecting, till the end or until both model probers return eNotMe (handled above)\\n        return constants.detecting;\\n    }\\n\\n    this.getCharsetName = function() {\\n        // Make the decision: is it Logical or Visual?\\n        // If the final letter score distance is dominant enough, rely on it.\\n        var finalsub = this._mFinalCharLogicalScore - this._mFinalCharVisualScore;\\n        if( finalsub >= MIN_FINAL_CHAR_DISTANCE ) {\\n            return LOGICAL_HEBREW_NAME;\\n        }\\n        if( finalsub <= -MIN_FINAL_CHAR_DISTANCE ) {\\n            return VISUAL_HEBREW_NAME;\\n        }\\n\\n        // It's not dominant enough, try to rely on the model scores instead.\\n        var modelsub = this._mLogicalProber.getConfidence() - this._mVisualProber.getConfidence();\\n        if( modelsub > MIN_MODEL_DISTANCE ) {\\n            return LOGICAL_HEBREW_NAME;\\n        }\\n        if( modelsub < -MIN_MODEL_DISTANCE ) {\\n            return VISUAL_HEBREW_NAME;\\n        }\\n\\n        // Still no good, back to final letter distance, maybe it'll save the day.\\n        if( finalsub < 0 ) {\\n            return VISUAL_HEBREW_NAME;\\n        }\\n\\n        // (finalsub > 0 - Logical) or (don't know what to do) default to Logical.\\n        return LOGICAL_HEBREW_NAME;\\n    }\\n\\n    this.getState = function() {\\n        // Remain active as long as any of the model probers are active.\\n        if( this._mLogicalProber.getState() == constants.notMe &&\\n            this._mVisualProber.getState() == constants.notMe ) {\\n            return constants.notMe;\\n        }\\n        return constants.detecting;\\n    }\\n\\n    init();\\n}\\nHebrewProber.prototype = new CharSetProber();\\n\\nmodule.exports = HebrewProber\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// KOI8-R language model\\n// Character Mapping Table:\\nexports.KOI8R_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,  // 80\\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,  // 90\\n223,224,225, 68,226,227,228,229,230,231,232,233,234,235,236,237,  // a0\\n238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,  // b0\\n 27,  3, 21, 28, 13,  2, 39, 19, 26,  4, 23, 11,  8, 12,  5,  1,  // c0\\n 15, 16,  9,  7,  6, 14, 24, 10, 17, 18, 20, 25, 30, 29, 22, 54,  // d0\\n 59, 37, 44, 58, 41, 48, 53, 46, 55, 42, 60, 36, 49, 38, 31, 34,  // e0\\n 35, 43, 45, 32, 40, 52, 56, 33, 61, 62, 51, 57, 47, 63, 50, 70   // f0\\n];\\n\\nexports.win1251_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\\n239,240,241,242,243,244,245,246, 68,247,248,249,250,251,252,253,\\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16\\n];\\n\\nexports.latin5_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,\\n239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255\\n];\\n\\nexports.macCyrillic_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\\n239,240,241,242,243,244,245,246,247,248,249,250,251,252, 68, 16,\\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27,255\\n];\\n\\nexports.IBM855_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\\n191,192,193,194, 68,195,196,197,198,199,200,201,202,203,204,205,\\n206,207,208,209,210,211,212,213,214,215,216,217, 27, 59, 54, 70,\\n  3, 37, 21, 44, 28, 58, 13, 41,  2, 48, 39, 53, 19, 46,218,219,\\n220,221,222,223,224, 26, 55,  4, 42,225,226,227,228, 23, 60,229,\\n230,231,232,233,234,235, 11, 36,236,237,238,239,240,241,242,243,\\n  8, 49, 12, 38,  5, 31,  1, 34, 15,244,245,246,247, 35, 16,248,\\n 43,  9, 45,  7, 32,  6, 40, 14, 52, 24, 56, 10, 33, 17, 61,249,\\n250, 18, 62, 20, 51, 25, 57, 30, 47, 29, 63, 22, 50,251,252,255\\n];\\n\\nexports.IBM866_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  // 40\\n155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  // 50\\n253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  // 60\\n 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  // 70\\n 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,\\n 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,\\n  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,\\n191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\\n207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,\\n223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,\\n  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,\\n239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255\\n];\\n\\n// Model Table:\\n// total sequences: 100%\\n// first 512 sequences: 97.6601%\\n// first 1024 sequences: 2.3389%\\n// rest  sequences:      0.1237%\\n// negative sequences:   0.0009%\\nexports.RussianLangModel = [\\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,1,3,3,3,2,3,2,3,3,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,2,0,0,2,\\n3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,2,3,2,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,2,3,3,1,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,\\n0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,\\n0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,2,2,2,3,1,3,3,1,3,3,3,3,2,2,3,0,2,2,2,3,3,2,1,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,2,3,3,3,2,1,2,2,0,1,2,2,2,2,2,2,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,0,2,2,3,3,2,1,2,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,3,3,1,2,3,2,2,3,2,3,3,3,3,2,2,3,0,3,2,2,3,1,1,1,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,2,2,2,0,3,3,3,2,2,2,2,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,2,3,2,2,0,1,3,2,1,2,2,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,0,1,1,1,1,2,1,1,0,2,2,2,1,2,0,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,3,3,2,2,2,2,1,3,2,3,2,3,2,1,2,2,0,1,1,2,1,2,1,2,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,3,3,2,2,2,2,0,2,2,2,2,3,1,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n3,2,3,2,2,3,3,3,3,3,3,3,3,3,1,3,2,0,0,3,3,3,3,2,3,3,3,3,2,3,2,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,3,3,3,3,3,2,2,3,3,0,2,1,0,3,2,3,2,3,0,0,1,2,0,0,1,0,1,2,1,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,3,0,2,3,3,3,3,2,3,3,3,3,1,2,2,0,0,2,3,2,2,2,3,2,3,2,2,3,0,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,2,3,0,2,3,2,3,0,1,2,3,3,2,0,2,3,0,0,2,3,2,2,0,1,3,1,3,2,2,1,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,3,0,2,3,3,3,3,3,3,3,3,2,1,3,2,0,0,2,2,3,3,3,2,3,3,0,2,2,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,2,3,3,2,2,2,3,3,0,0,1,1,1,1,1,2,0,0,1,1,1,1,0,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,0,3,2,3,3,2,3,2,0,2,1,0,1,1,0,1,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,3,3,3,2,2,2,2,3,1,3,2,3,1,1,2,1,0,2,2,2,2,1,3,1,0,\\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n2,2,3,3,3,3,3,1,2,2,1,3,1,0,3,0,0,3,0,0,0,1,1,0,1,2,1,0,0,0,0,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,2,2,1,1,3,3,3,2,2,1,2,2,3,1,1,2,0,0,2,2,1,3,0,0,2,1,1,2,1,1,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,2,3,3,3,3,1,2,2,2,1,2,1,3,3,1,1,2,1,2,1,2,2,0,2,0,0,1,1,0,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,3,3,3,3,3,2,1,3,2,2,3,2,0,3,2,0,3,0,1,0,1,1,0,0,1,1,1,1,0,1,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,2,3,3,3,2,2,2,3,3,1,2,1,2,1,0,1,0,1,1,0,1,0,0,2,1,1,1,0,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\\n3,1,1,2,1,2,3,3,2,2,1,2,2,3,0,2,1,0,0,2,2,3,2,1,2,2,2,2,2,3,1,0,\\n0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,1,1,0,1,1,2,2,1,1,3,0,0,1,3,1,1,1,0,0,0,1,0,1,1,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,1,3,3,3,2,0,0,0,2,1,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,1,0,0,2,3,2,2,2,1,2,2,2,1,2,1,0,0,1,1,1,0,2,0,1,1,1,0,0,1,1,\\n1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\\n2,3,3,3,3,0,0,0,0,1,0,0,0,0,3,0,1,2,1,0,0,0,0,0,0,0,1,1,0,0,1,1,\\n1,0,1,0,1,2,0,0,1,1,2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,\\n2,2,3,2,2,2,3,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,1,0,1,1,1,0,2,1,\\n1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,\\n3,3,3,2,2,2,2,3,2,2,1,1,2,2,2,2,1,1,3,1,2,1,2,0,0,1,1,0,1,0,2,1,\\n1,1,1,1,1,2,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,1,0,\\n2,0,0,1,0,3,2,2,2,2,1,2,1,2,1,2,0,0,0,2,1,2,2,1,1,2,2,0,1,1,0,2,\\n1,1,1,1,1,0,1,1,1,2,1,1,1,2,1,0,1,2,1,1,1,1,0,1,1,1,0,0,1,0,0,1,\\n1,3,2,2,2,1,1,1,2,3,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,1,1,\\n1,0,1,1,0,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,\\n2,3,2,3,2,1,2,2,2,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,2,1,\\n1,1,2,1,0,2,0,0,1,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,\\n3,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,0,0,0,2,1,2,1,1,1,2,2,0,0,0,1,2,\\n1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,\\n2,3,2,3,3,2,0,1,1,1,0,0,1,0,2,0,1,1,3,1,0,0,0,0,0,0,0,1,0,0,2,1,\\n1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,\\n2,3,3,3,3,1,2,2,2,2,0,1,1,0,2,1,1,1,2,1,0,1,1,0,0,1,0,1,0,0,2,0,\\n0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,3,3,3,2,0,0,1,1,2,2,1,0,0,2,0,1,1,3,0,0,1,0,0,0,0,0,1,0,1,2,1,\\n1,1,2,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,\\n1,3,2,3,2,1,0,0,2,2,2,0,1,0,2,0,1,1,1,0,1,0,0,0,3,0,1,1,0,0,2,1,\\n1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,2,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,\\n3,1,2,1,1,2,2,2,2,2,2,1,2,2,1,1,0,0,0,2,2,2,0,0,0,1,2,1,0,1,0,1,\\n2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,\\n3,0,0,0,0,2,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,\\n1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,\\n1,3,3,2,2,0,0,0,2,2,0,0,0,1,2,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,\\n0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\\n2,3,2,3,2,0,0,0,0,1,1,0,0,0,2,0,2,0,2,0,0,0,0,0,1,0,0,1,0,0,1,1,\\n1,1,2,0,1,2,1,0,1,1,2,1,1,1,1,1,2,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,\\n1,3,2,2,2,1,0,0,2,2,1,0,1,2,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,\\n0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,1,0,2,3,1,2,2,2,2,2,2,1,1,0,0,0,1,0,1,0,2,1,1,1,0,0,0,0,1,\\n1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,\\n2,0,2,0,0,1,0,3,2,1,2,1,2,2,0,1,0,0,0,2,1,0,0,2,1,1,1,1,0,2,0,2,\\n2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,\\n1,2,2,2,2,1,0,0,1,0,0,0,0,0,2,0,1,1,1,1,0,0,0,0,1,0,1,2,0,0,2,0,\\n1,0,1,1,1,2,1,0,1,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,\\n2,1,2,2,2,0,3,0,1,1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,\\n1,2,2,3,2,2,0,0,1,1,2,0,1,2,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,\\n0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,\\n2,2,1,1,2,1,2,2,2,2,2,1,2,2,0,1,0,0,0,1,2,2,2,1,2,1,1,1,1,1,2,1,\\n1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,\\n1,2,2,2,2,0,1,0,2,2,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,\\n0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,2,2,2,2,0,0,0,2,2,2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,\\n0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,2,2,2,2,0,0,0,0,1,0,0,1,1,2,0,0,0,0,1,0,1,0,0,1,0,0,2,0,0,0,1,\\n0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\\n1,2,2,2,1,1,2,0,2,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,\\n0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,2,1,2,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,\\n0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,\\n1,0,0,0,0,2,0,1,2,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,\\n0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,\\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n1,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,0,0,0,\\n0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0\\n];\\n\\nexports.Koi8rModel = {\\n    \\\"charToOrderMap\\\"          : exports.KOI8R_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"        : exports.RussianLangModel,\\n    \\\"mTypicalPositiveRatio\\\"   : 0.976601,\\n    \\\"keepEnglishLetter\\\"       : false,\\n    \\\"charsetName\\\"             : \\\"KOI8-R\\\"\\n};\\n\\nexports.Win1251CyrillicModel = {\\n    \\\"charToOrderMap\\\"          : exports.win1251_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"        : exports.RussianLangModel,\\n    \\\"mTypicalPositiveRatio\\\"   : 0.976601,\\n    \\\"keepEnglishLetter\\\"       : false,\\n    \\\"charsetName\\\"             : \\\"windows-1251\\\"\\n};\\n\\nexports.Latin5CyrillicModel = {\\n    \\\"charToOrderMap\\\"          : exports.latin5_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"        : exports.RussianLangModel,\\n    \\\"mTypicalPositiveRatio\\\"   : 0.976601,\\n    \\\"keepEnglishLetter\\\"       : false,\\n    \\\"charsetName\\\"             : \\\"ISO-8859-5\\\"\\n};\\n\\nexports.MacCyrillicModel = {\\n    \\\"charToOrderMap\\\"          : exports.macCyrillic_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"        : exports.RussianLangModel,\\n    \\\"mTypicalPositiveRatio\\\"   : 0.976601,\\n    \\\"keepEnglishLetter\\\"       : false,\\n    \\\"charsetName\\\"             : \\\"MacCyrillic\\\"\\n};\\n\\nexports.Ibm866Model = {\\n    \\\"charToOrderMap\\\"          : exports.IBM866_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"        : exports.RussianLangModel,\\n    \\\"mTypicalPositiveRatio\\\"   : 0.976601,\\n    \\\"keepEnglishLetter\\\"       : false,\\n    \\\"charsetName\\\"             : \\\"IBM866\\\"\\n};\\n\\nexports.Ibm855Model = {\\n    \\\"charToOrderMap\\\"          : exports.IBM855_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"        : exports.RussianLangModel,\\n    \\\"mTypicalPositiveRatio\\\"   : 0.976601,\\n    \\\"keepEnglishLetter\\\"       : false,\\n    \\\"charsetName\\\"             : \\\"IBM855\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// 255: Control characters that usually does not exist in any text\\n// 254: Carriage/Return\\n// 253: symbol (punctuation) that does not belong to word\\n// 252: 0 - 9\\n\\n// Character Mapping Table:\\nexports.Latin7_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  // 40\\n 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  // 50\\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  // 60\\n 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  // 70\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 80\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 90\\n253,233, 90,253,253,253,253,253,253,253,253,253,253, 74,253,253,  // a0\\n253,253,253,253,247,248, 61, 36, 46, 71, 73,253, 54,253,108,123,  // b0\\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  // c0\\n 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  // d0\\n124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  // e0\\n  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253   // f0\\n];\\n\\nexports.win1253_CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  // 40\\n 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  // 50\\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  // 60\\n 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  // 70\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 80\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 90\\n253,233, 61,253,253,253,253,253,253,253,253,253,253, 74,253,253,  // a0\\n253,253,253,253,247,253,253, 36, 46, 71, 73,253, 54,253,108,123,  // b0\\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  // c0\\n 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  // d0\\n124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  // e0\\n  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253   // f0\\n]\\n\\n// Model Table:\\n// total sequences: 100%\\n// first 512 sequences: 98.2851%\\n// first 1024 sequences:1.7001%\\n// rest  sequences:     0.0359%\\n// negative sequences:  0.0148%\\nexports.GreekLangModel = [\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,3,2,2,3,3,3,3,3,3,3,3,1,3,3,3,0,2,2,3,3,0,3,0,3,2,0,3,3,3,0,\\n3,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,0,3,3,0,3,2,3,3,0,3,2,3,3,3,0,0,3,0,3,0,3,3,2,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\\n0,2,3,2,2,3,3,3,3,3,3,3,3,0,3,3,3,3,0,2,3,3,0,3,3,3,3,2,3,3,3,0,\\n2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,2,1,3,3,3,3,2,3,3,2,3,3,2,0,\\n0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,\\n2,0,1,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,2,3,0,0,0,0,3,3,0,3,1,3,3,3,0,3,3,0,3,3,3,3,0,0,0,0,\\n2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,2,2,3,0,2,3,3,3,3,3,2,3,3,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,3,2,2,2,3,3,3,3,0,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,2,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,2,0,3,0,0,0,3,3,2,3,3,3,3,3,0,0,3,2,3,0,2,3,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,0,3,3,3,3,0,0,3,3,0,2,3,0,3,0,3,3,3,0,0,3,0,3,0,2,2,3,3,0,0,\\n0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,2,0,3,2,3,3,3,3,0,3,3,3,3,3,0,3,3,2,3,2,3,3,2,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,2,3,2,3,3,3,3,3,3,0,2,3,2,3,2,2,2,3,2,3,3,2,3,0,2,2,2,3,0,\\n2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,3,0,0,0,3,3,3,2,3,3,0,0,3,0,3,0,0,0,3,2,0,3,0,3,0,0,2,0,2,0,\\n0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,0,0,0,3,3,0,3,3,3,0,0,1,2,3,0,\\n3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,2,0,0,3,2,2,3,3,0,3,3,3,3,3,2,1,3,0,3,2,3,3,2,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,3,3,0,2,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,3,0,3,2,3,0,0,3,3,3,0,\\n3,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,0,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,2,0,3,2,3,0,0,3,2,3,0,\\n2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,3,1,2,2,3,3,3,3,3,3,0,2,3,0,3,0,0,0,3,3,0,3,0,2,0,0,2,3,1,0,\\n2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,0,3,3,3,3,0,3,0,3,3,2,3,0,3,3,3,3,3,3,0,3,3,3,0,2,3,0,0,3,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,0,3,3,3,0,0,3,0,0,0,3,3,0,3,0,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,0,2,0,0,0,3,3,0,3,0,3,0,0,2,0,2,0,\\n0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,3,0,3,0,2,0,3,2,0,3,2,3,2,3,0,0,3,2,3,2,3,3,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,3,0,0,2,3,3,3,3,3,0,0,0,3,0,2,1,0,0,3,2,2,2,0,3,0,0,2,2,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,0,3,3,3,2,0,3,0,3,0,3,3,0,2,1,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,2,3,3,3,0,3,3,3,3,3,3,0,2,3,0,3,0,0,0,2,1,0,2,2,3,0,0,2,2,2,0,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,3,0,0,2,3,3,3,2,3,0,0,1,3,0,2,0,0,0,0,3,0,1,0,2,0,0,1,1,1,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,3,1,0,3,0,0,0,3,2,0,3,2,3,3,3,0,0,3,0,3,2,2,2,1,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,0,3,3,3,0,0,3,0,0,0,0,2,0,2,3,3,2,2,2,2,3,0,2,0,2,2,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,2,0,2,3,2,0,0,3,0,3,0,3,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,3,2,3,3,2,2,3,0,2,0,3,0,0,0,2,0,0,0,0,1,2,0,2,0,2,0,\\n0,2,0,2,0,2,2,0,0,1,0,2,2,2,0,2,2,2,0,2,2,2,0,0,2,0,0,1,0,0,0,0,\\n0,2,0,3,3,2,0,0,0,0,0,0,1,3,0,2,0,2,2,2,0,0,2,0,3,0,0,2,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,3,0,2,3,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,0,0,0,0,0,0,2,3,0,0,0,2,\\n0,1,2,0,0,0,0,2,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,\\n0,0,2,1,0,2,3,2,2,3,2,3,2,0,0,3,3,3,0,0,3,2,0,0,0,1,1,0,2,0,2,2,\\n0,2,0,2,0,2,2,0,0,2,0,2,2,2,0,2,2,2,2,0,0,2,0,0,0,2,0,1,0,0,0,0,\\n0,3,0,3,3,2,2,0,3,0,0,0,2,2,0,2,2,2,1,2,0,0,1,2,2,0,0,3,0,0,0,2,\\n0,1,2,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,1,0,0,2,0,0,0,2,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,2,3,3,2,2,0,0,0,2,0,2,3,3,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,2,0,2,\\n0,2,2,0,0,2,2,2,2,1,0,0,2,2,0,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,\\n0,2,0,3,2,3,0,0,0,3,0,0,2,2,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,0,2,\\n0,0,2,2,0,0,2,2,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,2,0,0,3,2,0,2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,1,0,0,2,0,1,0,0,0,\\n0,2,2,2,0,2,2,0,1,2,0,2,2,2,0,2,2,2,2,1,2,2,0,0,2,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\\n0,2,0,2,0,2,2,0,0,0,0,1,2,1,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,3,2,3,0,0,2,0,0,0,2,2,0,2,0,0,0,1,0,0,2,0,2,0,2,2,0,0,0,0,\\n0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,\\n0,2,2,3,2,2,0,0,0,0,0,0,1,3,0,2,0,2,2,0,0,0,1,0,2,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,2,0,2,0,3,2,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n0,0,2,0,0,0,0,1,1,0,0,2,1,2,0,2,2,0,1,0,0,1,0,0,0,2,0,0,0,0,0,0,\\n0,3,0,2,2,2,0,0,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,0,0,0,2,2,0,0,0,2,\\n0,1,2,0,0,0,1,2,2,1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,2,1,2,0,2,2,0,2,0,0,2,0,0,0,0,1,2,1,0,2,1,0,0,0,0,0,0,0,0,0,0,\\n0,0,2,0,0,0,3,1,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,3,0,0,0,0,2,2,2,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,2,1,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,2,\\n0,2,2,0,0,2,2,2,2,2,0,1,2,0,0,0,2,2,0,1,0,2,0,0,2,2,0,0,0,0,0,0,\\n0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,\\n0,1,2,0,0,0,0,2,2,1,0,1,0,1,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,\\n0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,1,0,0,0,0,0,0,2,\\n0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,\\n0,2,2,2,2,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,\\n0,0,2,0,0,0,0,1,2,0,0,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,\\n0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,\\n0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\\n0,3,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,\\n0,0,2,0,0,0,0,2,2,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,2,0,2,2,1,0,0,0,0,0,0,2,0,0,2,0,2,2,2,0,0,0,0,0,0,2,0,0,0,0,2,\\n0,0,2,0,0,2,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,\\n0,0,3,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,\\n0,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,\\n0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\\n0,2,0,0,0,2,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,0,0,0,\\n0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,2,0,2,0,0,0,\\n0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\\n];\\n\\nexports.Latin7GreekModel = {\\n    \\\"charToOrderMap\\\"        : exports.Latin7_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.GreekLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.982851,\\n    \\\"keepEnglishLetter\\\"     : false,\\n    \\\"charsetName\\\"           : \\\"ISO-8859-7\\\"\\n};\\n\\nexports.Win1253GreekModel = {\\n    \\\"charToOrderMap\\\"        : exports.win1253_CharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.GreekLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.982851,\\n    \\\"keepEnglishLetter\\\"     : false,\\n    \\\"charsetName\\\"           : \\\"windows-1253\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// 255: Control characters that usually does not exist in any text\\n// 254: Carriage/Return\\n// 253: symbol (punctuation) that does not belong to word\\n// 252: 0 - 9\\n\\n// The following result for thai was collected from a limited sample (1M).\\n\\n// Character Mapping Table:\\nexports.TIS620CharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253,182,106,107,100,183,184,185,101, 94,186,187,108,109,110,111,  // 40\\n188,189,190, 89, 95,112,113,191,192,193,194,253,253,253,253,253,  // 50\\n253, 64, 72, 73,114, 74,115,116,102, 81,201,117, 90,103, 78, 82,  // 60\\n 96,202, 91, 79, 84,104,105, 97, 98, 92,203,253,253,253,253,253,  // 70\\n209,210,211,212,213, 88,214,215,216,217,218,219,220,118,221,222,\\n223,224, 99, 85, 83,225,226,227,228,229,230,231,232,233,234,235,\\n236,  5, 30,237, 24,238, 75,  8, 26, 52, 34, 51,119, 47, 58, 57,\\n 49, 53, 55, 43, 20, 19, 44, 14, 48,  3, 17, 25, 39, 62, 31, 54,\\n 45,  9, 16,  2, 61, 15,239, 12, 42, 46, 18, 21, 76,  4, 66, 63,\\n 22, 10,  1, 36, 23, 13, 40, 27, 32, 35, 86,240,241,242,243,244,\\n 11, 28, 41, 29, 33,245, 50, 37,  6,  7, 67, 77, 38, 93,246,247,\\n 68, 56, 59, 65, 69, 60, 70, 80, 71, 87,248,249,250,251,252,253\\n];\\n\\n// Model Table:\\n// total sequences: 100%\\n// first 512 sequences: 92.6386%\\n// first 1024 sequences:7.3177%\\n// rest  sequences:     1.0230%\\n// negative sequences:  0.0436%\\nexports.ThaiLangModel = [\\n0,1,3,3,3,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,\\n0,3,3,0,0,0,1,3,0,3,3,2,3,3,0,1,2,3,3,3,3,0,2,0,2,0,0,3,2,1,2,2,\\n3,0,3,3,2,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,3,0,2,2,2,3,\\n0,2,3,0,0,0,0,1,0,1,2,3,1,1,3,2,2,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,\\n3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,3,2,3,2,3,3,2,2,2,\\n3,1,2,3,0,3,3,2,2,1,2,3,3,1,2,0,1,3,0,1,0,0,1,0,0,0,0,0,0,0,1,1,\\n3,3,2,2,3,3,3,3,1,2,3,3,3,3,3,2,2,2,2,3,3,2,2,3,3,2,2,3,2,3,2,2,\\n3,3,1,2,3,1,2,2,3,3,1,0,2,1,0,0,3,1,2,1,0,0,1,0,0,0,0,0,0,1,0,1,\\n3,3,3,3,3,3,2,2,3,3,3,3,2,3,2,2,3,3,2,2,3,2,2,2,2,1,1,3,1,2,1,1,\\n3,2,1,0,2,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,\\n3,3,3,2,3,2,3,3,2,2,3,2,3,3,2,3,1,1,2,3,2,2,2,3,2,2,2,2,2,1,2,1,\\n2,2,1,1,3,3,2,1,0,1,2,2,0,1,3,0,0,0,1,1,0,0,0,0,0,2,3,0,0,2,1,1,\\n3,3,2,3,3,2,0,0,3,3,0,3,3,0,2,2,3,1,2,2,1,1,1,0,2,2,2,0,2,2,1,1,\\n0,2,1,0,2,0,0,2,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,2,3,3,2,0,0,3,3,0,2,3,0,2,1,2,2,2,2,1,2,0,0,2,2,2,0,2,2,1,1,\\n0,2,1,0,2,0,0,2,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,\\n3,3,2,3,2,3,2,0,2,2,1,3,2,1,3,2,1,2,3,2,2,3,0,2,3,2,2,1,2,2,2,2,\\n1,2,2,0,0,0,0,2,0,1,2,0,1,1,1,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,2,3,3,2,3,2,2,2,3,2,2,3,2,2,1,2,3,2,2,3,1,3,2,2,2,3,2,2,2,3,\\n3,2,1,3,0,1,1,1,0,2,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,\\n1,0,0,3,0,3,3,3,3,3,0,0,3,0,2,2,3,3,3,3,3,0,0,0,1,1,3,0,0,0,0,2,\\n0,0,1,0,0,0,0,0,0,0,2,3,0,0,0,3,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\\n2,0,3,3,3,3,0,0,2,3,0,0,3,0,3,3,2,3,3,3,3,3,0,0,3,3,3,0,0,0,3,3,\\n0,0,3,0,0,0,0,2,0,0,2,1,1,3,0,0,1,0,0,2,3,0,1,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,2,3,3,3,3,3,3,3,1,2,1,3,3,2,2,1,2,2,2,3,1,1,2,0,2,1,2,1,\\n2,2,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,\\n3,0,2,1,2,3,3,3,0,2,0,2,2,0,2,1,3,2,2,1,2,1,0,0,2,2,1,0,2,1,2,2,\\n0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,2,1,3,3,1,1,3,0,2,3,1,1,3,2,1,1,2,0,2,2,3,2,1,1,1,1,1,2,\\n3,0,0,1,3,1,2,1,2,0,3,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,\\n3,3,1,1,3,2,3,3,3,1,3,2,1,3,2,1,3,2,2,2,2,1,3,3,1,2,1,3,1,2,3,0,\\n2,1,1,3,2,2,2,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,\\n3,3,2,3,2,3,3,2,3,2,3,2,3,3,2,1,0,3,2,2,2,1,2,2,2,1,2,2,1,2,1,1,\\n2,2,2,3,0,1,3,1,1,1,1,0,1,1,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,2,3,2,2,1,1,3,2,3,2,3,2,0,3,2,2,1,2,0,2,2,2,1,2,2,2,2,1,\\n3,2,1,2,2,1,0,2,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,2,3,1,2,3,3,2,2,3,0,1,1,2,0,3,3,2,2,3,0,1,1,3,0,0,0,0,\\n3,1,0,3,3,0,2,0,2,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,2,3,2,3,3,0,1,3,1,1,2,1,2,1,1,3,1,1,0,2,3,1,1,1,1,1,1,1,1,\\n3,1,1,2,2,2,2,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n3,2,2,1,1,2,1,3,3,2,3,2,2,3,2,2,3,1,2,2,1,2,0,3,2,1,2,2,2,2,2,1,\\n3,2,1,2,2,2,1,1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,1,3,3,0,2,1,0,3,2,0,0,3,1,0,1,1,0,1,0,0,0,0,0,1,\\n1,0,0,1,0,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,2,2,2,3,0,0,1,3,0,3,2,0,3,2,2,3,3,3,3,3,1,0,2,2,2,0,2,2,1,2,\\n0,2,3,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n3,0,2,3,1,3,3,2,3,3,0,3,3,0,3,2,2,3,2,3,3,3,0,0,2,2,3,0,1,1,1,3,\\n0,0,3,0,0,0,2,2,0,1,3,0,1,2,2,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,\\n3,2,3,3,2,0,3,3,2,2,3,1,3,2,1,3,2,0,1,2,2,0,2,3,2,1,0,3,0,0,0,0,\\n3,0,0,2,3,1,3,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,3,2,2,2,1,2,0,1,3,1,1,3,1,3,0,0,2,1,1,1,1,2,1,1,1,0,2,1,0,1,\\n1,2,0,0,0,3,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,3,1,0,0,0,1,0,\\n3,3,3,3,2,2,2,2,2,1,3,1,1,1,2,0,1,1,2,1,2,1,3,2,0,0,3,1,1,1,1,1,\\n3,1,0,2,3,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,2,3,0,3,3,0,2,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,2,3,1,3,0,0,1,2,0,0,2,0,3,3,2,3,3,3,2,3,0,0,2,2,2,0,0,0,2,2,\\n0,0,1,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,1,2,3,1,3,3,0,0,1,0,3,0,0,0,0,0,\\n0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,1,2,3,1,2,3,1,0,3,0,2,2,1,0,2,1,1,2,0,1,0,0,1,1,1,1,0,1,0,0,\\n1,0,0,0,0,1,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,2,1,0,1,1,1,3,1,2,2,2,2,2,2,1,1,1,1,0,3,1,0,1,3,1,1,1,1,\\n1,1,0,2,0,1,3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,\\n3,0,2,2,1,3,3,2,3,3,0,1,1,0,2,2,1,2,1,3,3,1,0,0,3,2,0,0,0,0,2,1,\\n0,1,0,0,0,0,1,2,0,1,1,3,1,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\\n0,0,3,0,0,1,0,0,0,3,0,0,3,0,3,1,0,1,1,1,3,2,0,0,0,3,0,0,0,0,2,0,\\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\\n3,3,1,3,2,1,3,3,1,2,2,0,1,2,1,0,1,2,0,0,0,0,0,3,0,0,0,3,0,0,0,0,\\n3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,1,2,0,3,3,3,2,2,0,1,1,0,1,3,0,0,0,2,2,0,0,0,0,3,1,0,1,0,0,0,\\n0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,2,3,1,2,0,0,2,1,0,3,1,0,1,2,0,1,1,1,1,3,0,0,3,1,1,0,2,2,1,1,\\n0,2,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,0,3,1,2,0,0,2,2,0,1,2,0,1,0,1,3,1,2,1,0,0,0,2,0,3,0,0,0,1,0,\\n0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,1,1,2,2,0,0,0,2,0,2,1,0,1,1,0,1,1,1,2,1,0,0,1,1,1,0,2,1,1,1,\\n0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,\\n0,0,0,2,0,1,3,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,1,2,0,0,0,1,0,0,0,0,\\n0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,2,3,2,2,0,0,0,1,0,0,0,0,2,3,2,1,2,2,3,0,0,0,2,3,1,0,0,0,1,1,\\n0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,\\n3,3,2,2,0,1,0,0,0,0,2,0,2,0,1,0,0,0,1,1,0,0,0,2,1,0,1,0,1,1,0,0,\\n0,1,0,2,0,0,1,0,3,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,1,0,0,1,0,0,0,0,0,1,1,2,0,0,0,0,1,0,0,1,3,1,0,0,0,0,1,1,0,0,\\n0,1,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,\\n3,3,1,1,1,1,2,3,0,0,2,1,1,1,1,1,0,2,1,1,0,0,0,2,1,0,1,2,1,1,0,1,\\n2,1,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,3,1,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,\\n0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,2,0,0,0,1,3,0,1,0,0,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,\\n3,3,0,0,1,1,2,0,0,1,2,1,0,1,1,1,0,1,1,0,0,2,1,1,0,1,0,0,1,1,1,0,\\n0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,2,1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\\n2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,3,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,1,0,1,2,0,1,2,0,0,1,1,0,2,0,1,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,\\n1,0,0,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,2,1,3,0,0,0,0,1,1,0,0,0,0,0,0,0,3,\\n1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,1,0,1,0,0,2,0,0,2,0,0,1,1,2,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,\\n1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,\\n1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,1,1,0,0,2,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\\n];\\n\\nexports.TIS620ThaiModel = {\\n    \\\"charToOrderMap\\\"        : exports.TIS620CharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.ThaiLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.926386,\\n    \\\"keepEnglishLetter\\\"     : false,\\n    \\\"charsetName\\\"           : \\\"TIS-620\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// 255: Control characters that usually does not exist in any text\\n// 254: Carriage/Return\\n// 253: symbol (punctuation) that does not belong to word\\n// 252: 0 - 9\\n\\n// Character Mapping Table:\\nexports.Latin2_HungarianCharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,\\n 46, 71, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,\\n253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,\\n 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,\\n159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,\\n175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,\\n191,192,193,194,195,196,197, 75,198,199,200,201,202,203,204,205,\\n 79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,\\n221, 51, 81,222, 78,223,224,225,226, 44,227,228,229, 61,230,231,\\n232,233,234, 58,235, 66, 59,236,237,238, 60, 69, 63,239,240,241,\\n 82, 14, 74,242, 70, 80,243, 72,244, 15, 83, 77, 84, 30, 76, 85,\\n245,246,247, 25, 73, 42, 24,248,249,250, 31, 56, 29,251,252,253\\n]\\n\\nexports.win1250HungarianCharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,\\n 46, 72, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,\\n253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,\\n 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,\\n161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,\\n177,178,179,180, 78,181, 69,182,183,184,185,186,187,188,189,190,\\n191,192,193,194,195,196,197, 76,198,199,200,201,202,203,204,205,\\n 81,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,\\n221, 51, 83,222, 80,223,224,225,226, 44,227,228,229, 61,230,231,\\n232,233,234, 58,235, 66, 59,236,237,238, 60, 70, 63,239,240,241,\\n 84, 14, 75,242, 71, 82,243, 73,244, 15, 85, 79, 86, 30, 77, 87,\\n245,246,247, 25, 74, 42, 24,248,249,250, 31, 56, 29,251,252,253\\n];\\n\\n// Model Table:\\n// total sequences: 100%\\n// first 512 sequences: 94.7368%\\n// first 1024 sequences:5.2623%\\n// rest  sequences:     0.8894%\\n// negative sequences:  0.0009%\\nexports.HungarianLangModel = [\\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,\\n3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,1,1,2,2,2,2,2,1,2,\\n3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,1,2,3,3,3,3,2,3,3,1,1,3,3,0,1,1,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,\\n3,2,1,3,3,3,3,3,2,3,3,3,3,3,1,1,2,3,3,3,3,3,3,3,1,1,3,2,0,1,1,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,3,1,3,3,3,3,3,1,3,3,2,2,0,3,2,3,\\n0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,2,3,3,2,2,3,2,3,2,0,3,2,2,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,1,2,3,2,2,3,1,2,3,3,2,2,0,3,3,3,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,0,2,3,2,\\n0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3,2,1,3,2,2,3,2,1,3,2,2,1,0,3,3,1,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,2,2,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,3,2,2,3,1,1,3,2,0,1,1,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,1,3,3,3,3,3,2,2,1,3,3,3,0,1,1,2,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,2,0,3,2,3,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,\\n3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,1,3,2,2,2,3,1,1,3,3,1,1,0,3,3,2,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,3,3,3,3,1,2,3,2,2,0,2,2,2,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,2,2,2,3,1,3,3,2,2,1,3,3,3,1,1,3,1,2,3,2,3,2,2,2,1,0,2,2,2,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\\n3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,2,2,3,2,1,0,3,2,0,1,1,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,1,0,3,3,3,3,0,2,3,0,0,2,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,2,2,3,3,2,2,2,2,3,3,0,1,2,3,2,3,2,2,3,2,1,2,0,2,2,2,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,1,2,3,3,3,2,1,2,3,3,2,2,2,3,2,3,3,1,3,3,1,1,0,2,3,2,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,1,2,2,2,2,3,3,3,1,1,1,3,3,1,1,3,1,1,3,2,1,2,3,1,1,0,2,2,2,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,2,1,2,1,1,3,3,1,1,1,1,3,3,1,1,2,2,1,2,1,1,2,2,1,1,0,2,2,1,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,1,1,2,1,1,3,3,1,0,1,1,3,3,2,0,1,1,2,3,1,0,2,2,1,0,0,1,3,2,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,2,1,3,3,3,3,3,1,2,3,2,3,3,2,1,1,3,2,3,2,1,2,2,0,1,2,1,0,0,1,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,\\n3,3,3,3,2,2,2,2,3,1,2,2,1,1,3,3,0,3,2,1,2,3,2,1,3,3,1,1,0,2,1,3,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,3,3,2,2,2,3,2,3,3,3,2,1,1,3,3,1,1,1,2,2,3,2,3,2,2,2,1,0,2,2,1,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n1,0,0,3,3,3,3,3,0,0,3,3,2,3,0,0,0,2,3,3,1,0,1,2,0,0,1,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,2,3,3,3,3,3,1,2,3,3,2,2,1,1,0,3,3,2,2,1,2,2,1,0,2,2,0,1,1,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,2,2,1,3,1,2,3,3,2,2,1,1,2,2,1,1,1,1,3,2,1,1,1,1,2,1,0,1,2,1,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\\n2,3,3,1,1,1,1,1,3,3,3,0,1,1,3,3,1,1,1,1,1,2,2,0,3,1,1,2,0,2,1,1,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n3,1,0,1,2,1,2,2,0,1,2,3,1,2,0,0,0,2,1,1,1,1,1,2,0,0,1,1,0,0,0,0,\\n1,2,1,2,2,2,1,2,1,2,0,2,0,2,2,1,1,2,1,1,2,1,1,1,0,1,0,0,0,1,1,0,\\n1,1,1,2,3,2,3,3,0,1,2,2,3,1,0,1,0,2,1,2,2,0,1,1,0,0,1,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,3,3,2,2,1,0,0,3,2,3,2,0,0,0,1,1,3,0,0,1,1,0,0,2,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,1,2,2,3,3,1,0,1,3,2,3,1,1,1,0,1,1,1,1,1,3,1,0,0,2,2,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,1,1,2,2,2,1,0,1,2,3,3,2,0,0,0,2,1,1,1,2,1,1,1,0,1,1,1,0,0,0,\\n1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,2,1,1,1,1,1,1,0,1,1,1,0,0,1,1,\\n3,2,2,1,0,0,1,1,2,2,0,3,0,1,2,1,1,0,0,1,1,1,0,1,1,1,1,0,2,1,1,1,\\n2,2,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,2,3,1,1,1,1,1,1,1,1,1,0,1,\\n2,3,3,0,1,0,0,0,3,3,1,0,0,1,2,2,1,0,0,0,0,2,0,0,1,1,1,0,2,1,1,1,\\n2,1,1,1,1,1,1,2,1,1,0,1,1,0,1,1,1,0,1,2,1,1,0,1,1,1,1,1,1,1,0,1,\\n2,3,3,0,1,0,0,0,2,2,0,0,0,0,1,2,2,0,0,0,0,1,0,0,1,1,0,0,2,0,1,0,\\n2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,\\n3,2,2,0,1,0,1,0,2,3,2,0,0,1,2,2,1,0,0,1,1,1,0,0,2,1,0,1,2,2,1,1,\\n2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,2,1,0,1,1,0,1,1,1,0,1,1,2,1,1,0,1,\\n2,2,2,0,0,1,0,0,2,2,1,1,0,0,2,1,1,0,0,0,1,2,0,0,2,1,0,0,2,1,1,1,\\n2,1,1,1,1,2,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,\\n1,2,3,0,0,0,1,0,3,2,1,0,0,1,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,2,1,\\n1,1,0,0,0,1,0,1,1,1,1,1,2,0,0,1,0,0,0,2,0,0,1,1,1,1,1,1,1,1,0,1,\\n3,0,0,2,1,2,2,1,0,0,2,1,2,2,0,0,0,2,1,1,1,0,1,1,0,0,1,1,2,0,0,0,\\n1,2,1,2,2,1,1,2,1,2,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,0,0,1,\\n1,3,2,0,0,0,1,0,2,2,2,0,0,0,2,2,1,0,0,0,0,3,1,1,1,1,0,0,2,1,1,1,\\n2,1,0,1,1,1,0,1,1,1,1,1,1,1,0,2,1,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,\\n2,3,2,0,0,0,1,0,2,2,0,0,0,0,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,1,0,\\n2,1,1,1,1,2,1,2,1,2,0,1,1,1,0,2,1,1,1,2,1,1,1,1,0,1,1,1,1,1,0,1,\\n3,1,1,2,2,2,3,2,1,1,2,2,1,1,0,1,0,2,2,1,1,1,1,1,0,0,1,1,0,1,1,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,2,0,0,0,0,0,2,2,0,0,0,0,2,2,1,0,0,0,1,1,0,0,1,2,0,0,2,1,1,1,\\n2,2,1,1,1,2,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,1,1,0,1,2,1,1,1,0,1,\\n1,0,0,1,2,3,2,1,0,0,2,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,\\n1,2,1,2,1,2,1,1,1,2,0,2,1,1,1,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,\\n2,3,2,0,0,0,0,0,1,1,2,1,0,0,1,1,1,0,0,0,0,2,0,0,1,1,0,0,2,1,1,1,\\n2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,2,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,\\n1,2,2,0,1,1,1,0,2,2,2,0,0,0,3,2,1,0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,\\n1,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,0,0,1,1,1,0,1,0,1,\\n2,1,0,2,1,1,2,2,1,1,2,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,\\n1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,\\n1,2,3,0,0,0,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,1,0,0,1,0,0,0,2,0,1,0,\\n2,1,1,1,1,1,0,2,0,0,0,1,2,1,1,1,1,0,1,2,0,1,0,1,0,1,1,1,0,1,0,1,\\n2,2,2,0,0,0,1,0,2,1,2,0,0,0,1,1,2,0,0,0,0,1,0,0,1,1,0,0,2,1,0,1,\\n2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,\\n1,2,2,0,0,0,1,0,2,2,2,0,0,0,1,1,0,0,0,0,0,1,1,0,2,0,0,1,1,1,0,1,\\n1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,\\n1,0,0,1,0,1,2,1,0,0,1,1,1,2,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,\\n0,2,1,2,1,1,1,1,1,2,0,2,0,1,1,0,1,2,1,0,1,1,1,0,0,0,0,0,0,1,0,0,\\n2,1,1,0,1,2,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,2,1,0,1,\\n2,2,1,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,\\n1,2,2,0,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,1,\\n2,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,\\n1,1,2,0,0,3,1,0,2,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,\\n1,2,1,0,1,1,1,2,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,\\n2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,2,0,0,0,\\n2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,1,0,1,\\n2,1,1,1,2,1,1,1,0,1,1,2,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,1,0,1,1,1,1,1,0,0,1,1,2,1,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,\\n1,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,\\n2,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,2,0,0,1,0,0,1,0,1,0,0,0,\\n0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\\n1,0,0,1,1,1,1,1,0,0,2,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,\\n0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,\\n1,0,0,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,\\n0,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\\n0,0,0,1,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,1,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,\\n2,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0\\n];\\n\\nexports.Latin2HungarianModel = {\\n    \\\"charToOrderMap\\\"        : exports.Latin2_HungarianCharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.HungarianLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.947368,\\n    \\\"keepEnglishLetter\\\"     : true,\\n    \\\"charsetName\\\"           : \\\"ISO-8859-2\\\"\\n};\\n\\nexports.Win1250HungarianModel = {\\n    \\\"charToOrderMap\\\"        : exports.win1250HungarianCharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.HungarianLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.947368,\\n    \\\"keepEnglishLetter\\\"     : true,\\n    \\\"charsetName\\\"           : \\\"windows-1250\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\n// 255: Control characters that usually does not exist in any text\\n// 254: Carriage/Return\\n// 253: symbol (punctuation) that does not belong to word\\n// 252: 0 - 9\\n\\n// Character Mapping Table:\\n// this table is modified base on win1251BulgarianCharToOrderMap, so\\n// only number <64 is sure valid\\n\\nexports.Latin5_BulgarianCharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  // 40\\n110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  // 50\\n253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  // 60\\n116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  // 70\\n194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,  // 80\\n210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,  // 90\\n 81,226,227,228,229,230,105,231,232,233,234,235,236, 45,237,238,  // a0\\n 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  // b0\\n 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,239, 67,240, 60, 56,  // c0\\n  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  // d0\\n  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,241, 42, 16,  // e0\\n 62,242,243,244, 58,245, 98,246,247,248,249,250,251, 91,252,253   // f0\\n];\\n\\nexports.win1251BulgarianCharToOrderMap = [\\n255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  // 00\\n255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  // 10\\n253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  // 20\\n252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  // 30\\n253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  // 40\\n110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  // 50\\n253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  // 60\\n116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  // 70\\n206,207,208,209,210,211,212,213,120,214,215,216,217,218,219,220,  // 80\\n221, 78, 64, 83,121, 98,117,105,222,223,224,225,226,227,228,229,  // 90\\n 88,230,231,232,233,122, 89,106,234,235,236,237,238, 45,239,240,  // a0\\n 73, 80,118,114,241,242,243,244,245, 62, 58,246,247,248,249,250,  // b0\\n 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  // c0\\n 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,251, 67,252, 60, 56,  // d0\\n  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  // e0\\n  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,253, 42, 16   // f0\\n];\\n\\n// Model Table:\\n// total sequences: 100%\\n// first 512 sequences: 96.9392%\\n// first 1024 sequences:3.0618%\\n// rest  sequences:     0.2992%\\n// negative sequences:  0.0020%\\nexports.BulgarianLangModel = [\\n0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,2,2,1,2,2,\\n3,1,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,0,1,\\n0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,3,0,3,1,0,\\n0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,3,3,3,3,2,2,2,1,1,2,0,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,2,3,2,2,3,3,1,1,2,3,3,2,3,3,3,3,2,1,2,0,2,0,3,0,0,\\n0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,1,3,3,3,3,3,2,3,2,3,3,3,3,3,2,3,3,1,3,0,3,0,2,0,0,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,3,1,3,3,2,3,3,3,1,3,3,2,3,2,2,2,0,0,2,0,2,0,2,0,0,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,3,1,2,2,3,2,1,1,2,0,2,0,0,0,0,\\n1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,2,3,3,1,2,3,2,2,2,3,3,3,3,3,2,2,3,1,2,0,2,1,2,0,0,\\n0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,1,3,3,3,3,3,2,3,3,3,2,3,3,2,3,2,2,2,3,1,2,0,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,2,1,3,1,3,2,2,3,0,0,1,0,1,0,1,0,0,\\n0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,2,2,3,2,2,3,1,2,1,1,1,2,3,1,3,1,2,2,0,1,1,1,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,1,3,2,2,3,3,1,2,3,1,1,3,3,3,3,1,2,2,1,1,1,0,2,0,2,0,1,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,3,3,3,2,2,1,1,2,0,2,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,0,1,2,1,3,3,2,3,3,3,3,3,2,3,2,1,0,3,1,2,1,2,1,2,3,2,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,1,3,3,2,3,3,2,2,2,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,3,3,3,3,0,3,3,3,3,3,2,1,1,2,1,3,3,0,3,1,1,1,1,3,2,0,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,3,2,3,2,2,2,3,0,2,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,2,3,3,2,2,3,2,1,1,1,1,1,3,1,3,1,1,0,0,0,1,0,0,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,3,2,3,2,0,3,2,0,3,0,2,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,2,1,1,1,1,2,1,1,2,1,1,1,2,2,1,2,1,1,1,0,1,1,0,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,2,1,3,1,1,2,1,3,2,1,1,0,1,2,3,2,1,1,1,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,3,3,3,3,2,2,1,0,1,0,0,1,0,0,0,2,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,2,3,2,3,3,1,3,2,1,1,1,2,1,1,2,1,3,0,1,0,0,0,1,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,1,1,2,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,1,1,2,2,0,1,1,0,1,0,2,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,3,3,3,2,1,3,1,0,2,2,1,3,2,1,0,0,2,0,2,0,1,0,0,0,0,0,0,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,3,3,3,3,1,2,0,2,3,1,2,3,2,0,1,3,1,2,1,1,1,0,0,1,0,0,2,2,2,3,\\n2,2,2,2,1,2,1,1,2,2,1,1,2,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,\\n3,3,3,3,3,2,1,2,2,1,2,0,2,0,1,0,1,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,\\n3,3,2,3,3,1,1,3,1,0,3,2,1,0,0,0,1,2,0,2,0,1,0,0,0,1,0,1,2,1,2,2,\\n1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,\\n3,1,0,1,0,2,3,2,2,2,3,2,2,2,2,2,1,0,2,1,2,1,1,1,0,1,2,1,2,2,2,1,\\n1,1,2,2,2,2,1,2,1,1,0,1,2,1,2,2,2,1,1,1,0,1,1,1,1,2,0,1,0,0,0,0,\\n2,3,2,3,3,0,0,2,1,0,2,1,0,0,0,0,2,3,0,2,0,0,0,0,0,1,0,0,2,0,1,2,\\n2,1,2,1,2,2,1,1,1,2,1,1,1,0,1,2,2,1,1,1,1,1,0,1,1,1,0,0,1,2,0,0,\\n3,3,2,2,3,0,2,3,1,1,2,0,0,0,1,0,0,2,0,2,0,0,0,1,0,1,0,1,2,0,2,2,\\n1,1,1,1,2,1,0,1,2,2,2,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,\\n2,3,2,3,3,0,0,3,0,1,1,0,1,0,0,0,2,2,1,2,0,0,0,0,0,0,0,0,2,0,1,2,\\n2,2,1,1,1,1,1,2,2,2,1,0,2,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,\\n3,3,3,3,2,2,2,2,2,0,2,1,1,1,1,2,1,2,1,1,0,2,0,1,0,1,0,0,2,0,1,2,\\n1,1,1,1,1,1,1,2,2,1,1,0,2,0,1,0,2,0,0,1,1,1,0,0,2,0,0,0,1,1,0,0,\\n2,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,1,2,0,1,2,\\n2,2,2,1,1,2,1,1,2,2,2,1,2,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,\\n2,3,3,3,3,0,2,2,0,2,1,0,0,0,1,1,1,2,0,2,0,0,0,3,0,0,0,0,2,0,2,2,\\n1,1,1,2,1,2,1,1,2,2,2,1,2,0,1,1,1,0,1,1,1,1,0,2,1,0,0,0,1,1,0,0,\\n2,3,3,3,3,0,2,1,0,0,2,0,0,0,0,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,\\n1,1,1,2,1,1,1,1,2,2,2,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,\\n3,3,2,2,3,0,1,0,1,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,0,0,0,1,0,2,2,\\n1,1,1,1,1,2,1,1,2,2,1,2,2,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,\\n3,1,0,1,0,2,2,2,2,3,2,1,1,1,2,3,0,0,1,0,2,1,1,0,1,1,1,1,2,1,1,1,\\n1,2,2,1,2,1,2,2,1,1,0,1,2,1,2,2,1,1,1,0,0,1,1,1,2,1,0,1,0,0,0,0,\\n2,1,0,1,0,3,1,2,2,2,2,1,2,2,1,1,1,0,2,1,2,2,1,1,2,1,1,0,2,1,1,1,\\n1,2,2,2,2,2,2,2,1,2,0,1,1,0,2,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,\\n2,1,1,1,1,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,2,3,2,2,1,1,1,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,2,3,2,0,1,2,0,1,2,1,1,0,1,0,1,2,1,2,0,0,0,1,1,0,0,0,1,0,0,2,\\n1,1,0,0,1,1,0,1,1,1,1,0,2,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,\\n2,0,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,2,1,1,1,\\n1,2,2,2,2,1,1,2,1,2,1,1,1,0,2,1,2,1,1,1,0,2,1,1,1,1,0,1,0,0,0,0,\\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,\\n1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,2,3,2,0,0,0,0,1,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,0,0,0,1,0,1,2,\\n1,1,1,1,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,\\n2,3,1,2,1,0,1,1,0,2,2,2,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,2,\\n1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,\\n2,2,2,2,2,0,0,2,0,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,2,\\n1,1,1,1,1,0,0,1,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\\n1,2,2,2,2,0,0,2,0,1,1,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,1,1,\\n0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\\n1,2,2,3,2,0,0,1,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,0,2,\\n1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\\n2,1,2,2,2,1,2,1,2,2,1,1,2,1,1,1,0,1,1,1,1,2,0,1,0,1,1,1,1,0,1,1,\\n1,1,2,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,\\n1,0,0,1,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,2,2,1,0,0,1,0,2,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,1,\\n0,2,0,1,0,0,1,1,2,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,2,2,2,2,0,1,1,0,2,1,0,1,1,1,0,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,1,\\n0,1,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,2,2,2,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,\\n0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,\\n2,0,1,0,0,1,2,1,1,1,1,1,1,2,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,\\n1,1,2,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n2,2,1,2,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,\\n0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,\\n0,1,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,\\n1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,2,0,0,2,0,1,0,0,1,0,0,1,\\n1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,\\n1,1,1,1,1,1,1,2,0,0,0,0,0,0,2,1,0,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,\\n2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\\n1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,\\n0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1\\n];\\n\\nexports.Latin5BulgarianModel = {\\n    \\\"charToOrderMap\\\"        : exports.Latin5_BulgarianCharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.BulgarianLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.969392,\\n    \\\"keepEnglishLetter\\\"     : false,\\n    \\\"charsetName\\\"           : \\\"ISO-8859-5\\\"\\n};\\n\\nexports.Win1251BulgarianModel = {\\n    \\\"charToOrderMap\\\"        : exports.win1251BulgarianCharToOrderMap,\\n    \\\"precedenceMatrix\\\"      : exports.BulgarianLangModel,\\n    \\\"mTypicalPositiveRatio\\\" : 0.969392,\\n    \\\"keepEnglishLetter\\\"     : false,\\n    \\\"charsetName\\\"           : \\\"windows-1251\\\"\\n};\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CharSetProber = require('./charsetprober');\\nvar Constants = require('./constants');\\n\\nvar UDF = 0; // undefined\\nvar OTH = 1; // other\\nvar ASC = 2; // ascii capital letter\\nvar ASS = 3; // ascii small letter\\nvar ACV = 4; // accent capital vowel\\nvar ACO = 5; // accent capital other\\nvar ASV = 6; // accent small vowel\\nvar ASO = 7; // accent small other\\n\\nvar Latin1_CharToClass = [\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 00 - 07\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 08 - 0F\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 10 - 17\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 18 - 1F\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 20 - 27\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 28 - 2F\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 30 - 37\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 38 - 3F\\n  OTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 40 - 47\\n  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 48 - 4F\\n  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   // 50 - 57\\n  ASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH,   // 58 - 5F\\n  OTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 60 - 67\\n  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 68 - 6F\\n  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   // 70 - 77\\n  ASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH,   // 78 - 7F\\n  OTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH,   // 80 - 87\\n  OTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF,   // 88 - 8F\\n  UDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // 90 - 97\\n  OTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO,   // 98 - 9F\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A0 - A7\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // A8 - AF\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B0 - B7\\n  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   // B8 - BF\\n  ACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO,   // C0 - C7\\n  ACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV,   // C8 - CF\\n  ACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH,   // D0 - D7\\n  ACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO,   // D8 - DF\\n  ASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO,   // E0 - E7\\n  ASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV,   // E8 - EF\\n  ASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH,   // F0 - F7\\n  ASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO    // F8 - FF\\n];\\n\\n// 0 : illegal\\n// 1 : very unlikely\\n// 2 : normal\\n// 3 : very likely\\nvar Latin1ClassModel = [\\n// UDF OTH ASC ASS ACV ACO ASV ASO\\n   0,  0,  0,  0,  0,  0,  0,  0,  // UDF\\n   0,  3,  3,  3,  3,  3,  3,  3,  // OTH\\n   0,  3,  3,  3,  3,  3,  3,  3,  // ASC\\n   0,  3,  3,  3,  1,  1,  3,  3,  // ASS\\n   0,  3,  3,  3,  1,  2,  1,  2,  // ACV\\n   0,  3,  3,  3,  3,  3,  3,  3,  // ACO\\n   0,  3,  1,  3,  1,  1,  1,  3,  // ASV\\n   0,  3,  1,  3,  1,  1,  3,  3   // ASO\\n];\\n\\nfunction Latin1Prober() {\\n    CharSetProber.apply(this);\\n\\n    var FREQ_CAT_NUM = 4;\\n    var CLASS_NUM = 8; // total classes\\n    var self = this;\\n\\n    function init() {\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        this._mLastCharClass = OTH;\\n        this._mFreqCounter = [];\\n        for( var i = 0; i < FREQ_CAT_NUM; this._mFreqCounter[i++] = 0 );\\n        Latin1Prober.prototype.reset.apply(this);\\n    }\\n\\n    this.getCharsetName = function() {\\n        return \\\"windows-1252\\\";\\n    }\\n\\n    this.feed = function(aBuf) {\\n        aBuf = this.filterWithEnglishLetters(aBuf);\\n        for( var i = 0; i < aBuf.length; i++ ) {\\n            var c = aBuf.charCodeAt(i);\\n            var charClass = Latin1_CharToClass[c];\\n            var freq = Latin1ClassModel[(this._mLastCharClass * CLASS_NUM) + charClass];\\n            if( freq == 0 ) {\\n                this._mState = Constants.notMe;\\n                break;\\n            }\\n            this._mFreqCounter[freq]++;\\n            this._mLastCharClass = charClass;\\n        }\\n\\n        return this.getState();\\n    }\\n\\n    this.getConfidence = function() {\\n        var confidence;\\n        var constants;\\n\\n        if( this.getState() == Constants.notMe ) {\\n            return 0.01;\\n        }\\n\\n        var total = 0;\\n        for( var i = 0; i < this._mFreqCounter.length; i++ ) {\\n            total += this._mFreqCounter[i];\\n        }\\n        if( total < 0.01 ) {\\n            constants = 0.0;\\n        } else {\\n            confidence = (this._mFreqCounter[3] / total) - (this._mFreqCounter[1] * 20 / total);\\n        }\\n        if( confidence < 0 ) {\\n            confidence = 0.0;\\n        }\\n        // lower the confidence of latin1 so that other more accurate detector\\n        // can take priority.\\n        //\\n        // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected.\\n        confidence = confidence * 0.95;\\n        return confidence;\\n    }\\n\\n    init();\\n}\\nLatin1Prober.prototype = new CharSetProber();\\n\\nmodule.exports = Latin1Prober\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar CharSetProber = require('./charsetprober');\\nvar CodingStateMachine = require('./codingstatemachine');\\nvar escsm = require('./escsm');\\nvar constants = require('./constants');\\n\\nfunction EscCharSetProber() {\\n    CharSetProber.apply(this);\\n\\n    var self = this;\\n\\n    function init() {\\n        self._mCodingSM = [\\n            new CodingStateMachine(escsm.HZSMModel),\\n            new CodingStateMachine(escsm.ISO2022CNSMModel),\\n            new CodingStateMachine(escsm.ISO2022JPSMModel),\\n            new CodingStateMachine(escsm.ISO2022KRSMModel)\\n        ];\\n        self.reset();\\n    }\\n\\n    this.reset = function() {\\n        EscCharSetProber.prototype.reset.apply(this);\\n        for( var i = 0, codingSM; codingSM = this._mCodingSM[i]; i++ ) {\\n            if( !codingSM ) continue;\\n            codingSM.active = true;\\n            codingSM.reset();\\n        }\\n        this._mActiveSM = self._mCodingSM.length;\\n        this._mDetectedCharset = null;\\n    }\\n\\n    this.getCharsetName = function() {\\n        return this._mDetectedCharset;\\n    }\\n\\n    this.getConfidence = function() {\\n        if( this._mDetectedCharset ) {\\n            return 0.99;\\n        } else {\\n            return 0.00;\\n        }\\n    }\\n\\n    this.feed = function(aBuf) {\\n        for( var i = 0, c; i < aBuf.length; i++ ) {\\n            c = aBuf[i];\\n            for( var j = 0, codingSM; codingSM = this._mCodingSM[j]; j++ ) {\\n                if( !codingSM || !codingSM.active ) continue;\\n                var codingState = codingSM.nextState(c);\\n                if( codingState == constants.error ) {\\n                    codingSM.active = false;\\n                    this._mActiveSM--;\\n                    if( this._mActiveSM <= 0 ) {\\n                        this._mState = constants.notMe;\\n                        return this.getState();\\n                    }\\n                } else if( codingState == constants.itsMe ) {\\n                    this._mState = constants.foundIt;\\n                    this._mDetectedCharset = codingSM.getCodingStateMachine();\\n                    return this.getState();\\n                }\\n            }\\n        }\\n\\n        return this.getState();\\n    }\\n\\n    init();\\n}\\nEscCharSetProber.prototype = new CharSetProber();\\n\\nmodule.exports = EscCharSetProber\\n\",\"/*\\n * The Original Code is Mozilla Universal charset detector code.\\n *\\n * The Initial Developer of the Original Code is\\n * Netscape Communications Corporation.\\n * Portions created by the Initial Developer are Copyright (C) 2001\\n * the Initial Developer. All Rights Reserved.\\n *\\n * Contributor(s):\\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\\n *   Mark Pilgrim - port to Python\\n *   Shy Shalom - original C code\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2.1 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the Free Software\\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\\n * 02110-1301  USA\\n */\\n\\nvar consts = require('./constants');\\n\\nvar HZ_cls = [\\n    1,0,0,0,0,0,0,0,  // 00 - 07\\n    0,0,0,0,0,0,0,0,  // 08 - 0f\\n    0,0,0,0,0,0,0,0,  // 10 - 17\\n    0,0,0,1,0,0,0,0,  // 18 - 1f\\n    0,0,0,0,0,0,0,0,  // 20 - 27\\n    0,0,0,0,0,0,0,0,  // 28 - 2f\\n    0,0,0,0,0,0,0,0,  // 30 - 37\\n    0,0,0,0,0,0,0,0,  // 38 - 3f\\n    0,0,0,0,0,0,0,0,  // 40 - 47\\n    0,0,0,0,0,0,0,0,  // 48 - 4f\\n    0,0,0,0,0,0,0,0,  // 50 - 57\\n    0,0,0,0,0,0,0,0,  // 58 - 5f\\n    0,0,0,0,0,0,0,0,  // 60 - 67\\n    0,0,0,0,0,0,0,0,  // 68 - 6f\\n    0,0,0,0,0,0,0,0,  // 70 - 77\\n    0,0,0,4,0,5,2,0,  // 78 - 7f\\n    1,1,1,1,1,1,1,1,  // 80 - 87\\n    1,1,1,1,1,1,1,1,  // 88 - 8f\\n    1,1,1,1,1,1,1,1,  // 90 - 97\\n    1,1,1,1,1,1,1,1,  // 98 - 9f\\n    1,1,1,1,1,1,1,1,  // a0 - a7\\n    1,1,1,1,1,1,1,1,  // a8 - af\\n    1,1,1,1,1,1,1,1,  // b0 - b7\\n    1,1,1,1,1,1,1,1,  // b8 - bf\\n    1,1,1,1,1,1,1,1,  // c0 - c7\\n    1,1,1,1,1,1,1,1,  // c8 - cf\\n    1,1,1,1,1,1,1,1,  // d0 - d7\\n    1,1,1,1,1,1,1,1,  // d8 - df\\n    1,1,1,1,1,1,1,1,  // e0 - e7\\n    1,1,1,1,1,1,1,1,  // e8 - ef\\n    1,1,1,1,1,1,1,1,  // f0 - f7\\n    1,1,1,1,1,1,1,1   // f8 - ff\\n];\\n\\nvar HZ_st = [\\n    consts.start,consts.error,    3,consts.start,consts.start,consts.start,consts.error,consts.error, // 00-07\\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 08-0f\\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.start,consts.start,    4,consts.error, // 10-17\\n        5,consts.error,    6,consts.error,    5,    5,    4,consts.error, // 18-1f\\n        4,consts.error,    4,    4,    4,consts.error,    4,consts.error, // 20-27\\n        4,consts.itsMe,consts.start,consts.start,consts.start,consts.start,consts.start,consts.start  // 28-2f\\n];\\n\\nvar HZCharLenTable = [0, 0, 0, 0, 0, 0];\\n\\nexports.HZSMModel = {\\n    \\\"classTable\\\"    : HZ_cls,\\n    \\\"classFactor\\\"   : 6,\\n    \\\"stateTable\\\"    : HZ_st,\\n    \\\"charLenTable\\\"  : HZCharLenTable,\\n    \\\"name\\\"          : \\\"HZ-GB-2312\\\"\\n};\\n\\nvar ISO2022CN_cls = [\\n    2,0,0,0,0,0,0,0,  // 00 - 07\\n    0,0,0,0,0,0,0,0,  // 08 - 0f\\n    0,0,0,0,0,0,0,0,  // 10 - 17\\n    0,0,0,1,0,0,0,0,  // 18 - 1f\\n    0,0,0,0,0,0,0,0,  // 20 - 27\\n    0,3,0,0,0,0,0,0,  // 28 - 2f\\n    0,0,0,0,0,0,0,0,  // 30 - 37\\n    0,0,0,0,0,0,0,0,  // 38 - 3f\\n    0,0,0,4,0,0,0,0,  // 40 - 47\\n    0,0,0,0,0,0,0,0,  // 48 - 4f\\n    0,0,0,0,0,0,0,0,  // 50 - 57\\n    0,0,0,0,0,0,0,0,  // 58 - 5f\\n    0,0,0,0,0,0,0,0,  // 60 - 67\\n    0,0,0,0,0,0,0,0,  // 68 - 6f\\n    0,0,0,0,0,0,0,0,  // 70 - 77\\n    0,0,0,0,0,0,0,0,  // 78 - 7f\\n    2,2,2,2,2,2,2,2,  // 80 - 87\\n    2,2,2,2,2,2,2,2,  // 88 - 8f\\n    2,2,2,2,2,2,2,2,  // 90 - 97\\n    2,2,2,2,2,2,2,2,  // 98 - 9f\\n    2,2,2,2,2,2,2,2,  // a0 - a7\\n    2,2,2,2,2,2,2,2,  // a8 - af\\n    2,2,2,2,2,2,2,2,  // b0 - b7\\n    2,2,2,2,2,2,2,2,  // b8 - bf\\n    2,2,2,2,2,2,2,2,  // c0 - c7\\n    2,2,2,2,2,2,2,2,  // c8 - cf\\n    2,2,2,2,2,2,2,2,  // d0 - d7\\n    2,2,2,2,2,2,2,2,  // d8 - df\\n    2,2,2,2,2,2,2,2,  // e0 - e7\\n    2,2,2,2,2,2,2,2,  // e8 - ef\\n    2,2,2,2,2,2,2,2,  // f0 - f7\\n    2,2,2,2,2,2,2,2   // f8 - ff\\n];\\n\\nvar ISO2022CN_st = [\\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start, // 00-07\\n    consts.start,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 08-0f\\n    consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 10-17\\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error,consts.error,    4,consts.error, // 18-1f\\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 20-27\\n        5,    6,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 28-2f\\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 30-37\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.start  // 38-3f\\n];\\n\\nvar ISO2022CNCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0];\\n\\nexports.ISO2022CNSMModel = {\\n    \\\"classTable\\\"    : ISO2022CN_cls,\\n    \\\"classFactor\\\"   : 9,\\n    \\\"stateTable\\\"    : ISO2022CN_st,\\n    \\\"charLenTable\\\"  : ISO2022CNCharLenTable,\\n    \\\"name\\\"          : \\\"ISO-2022-CN\\\"\\n};\\n\\nvar ISO2022JP_cls = [\\n    2,0,0,0,0,0,0,0,  // 00 - 07\\n    0,0,0,0,0,0,2,2,  // 08 - 0f\\n    0,0,0,0,0,0,0,0,  // 10 - 17\\n    0,0,0,1,0,0,0,0,  // 18 - 1f\\n    0,0,0,0,7,0,0,0,  // 20 - 27\\n    3,0,0,0,0,0,0,0,  // 28 - 2f\\n    0,0,0,0,0,0,0,0,  // 30 - 37\\n    0,0,0,0,0,0,0,0,  // 38 - 3f\\n    6,0,4,0,8,0,0,0,  // 40 - 47\\n    0,9,5,0,0,0,0,0,  // 48 - 4f\\n    0,0,0,0,0,0,0,0,  // 50 - 57\\n    0,0,0,0,0,0,0,0,  // 58 - 5f\\n    0,0,0,0,0,0,0,0,  // 60 - 67\\n    0,0,0,0,0,0,0,0,  // 68 - 6f\\n    0,0,0,0,0,0,0,0,  // 70 - 77\\n    0,0,0,0,0,0,0,0,  // 78 - 7f\\n    2,2,2,2,2,2,2,2,  // 80 - 87\\n    2,2,2,2,2,2,2,2,  // 88 - 8f\\n    2,2,2,2,2,2,2,2,  // 90 - 97\\n    2,2,2,2,2,2,2,2,  // 98 - 9f\\n    2,2,2,2,2,2,2,2,  // a0 - a7\\n    2,2,2,2,2,2,2,2,  // a8 - af\\n    2,2,2,2,2,2,2,2,  // b0 - b7\\n    2,2,2,2,2,2,2,2,  // b8 - bf\\n    2,2,2,2,2,2,2,2,  // c0 - c7\\n    2,2,2,2,2,2,2,2,  // c8 - cf\\n    2,2,2,2,2,2,2,2,  // d0 - d7\\n    2,2,2,2,2,2,2,2,  // d8 - df\\n    2,2,2,2,2,2,2,2,  // e0 - e7\\n    2,2,2,2,2,2,2,2,  // e8 - ef\\n    2,2,2,2,2,2,2,2,  // f0 - f7\\n    2,2,2,2,2,2,2,2   // f8 - ff\\n];\\n\\nvar ISO2022JP_st = [\\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.start,consts.start, // 00-07\\n    consts.start,consts.start,consts.error,consts.error,consts.error,consts.error,consts.error,consts.error, // 08-0f\\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 10-17\\n    consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe,consts.error,consts.error, // 18-1f\\n    consts.error,    5,consts.error,consts.error,consts.error,    4,consts.error,consts.error, // 20-27\\n    consts.error,consts.error,consts.error,    6,consts.itsMe,consts.error,consts.itsMe,consts.error, // 28-2f\\n    consts.error,consts.error,consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe, // 30-37\\n    consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.error,consts.error,consts.error, // 38-3f\\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.error,consts.start,consts.start  // 40-47\\n];\\n\\nvar ISO2022JPCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n\\nexports.ISO2022JPSMModel = {\\n    \\\"classTable\\\"    : ISO2022JP_cls,\\n    \\\"classFactor\\\"   : 10,\\n    \\\"stateTable\\\"    : ISO2022JP_st,\\n    \\\"charLenTable\\\"  : ISO2022JPCharLenTable,\\n    \\\"name\\\"          : \\\"ISO-2022-JP\\\"\\n};\\n\\nvar ISO2022KR_cls = [\\n    2,0,0,0,0,0,0,0,  // 00 - 07\\n    0,0,0,0,0,0,0,0,  // 08 - 0f\\n    0,0,0,0,0,0,0,0,  // 10 - 17\\n    0,0,0,1,0,0,0,0,  // 18 - 1f\\n    0,0,0,0,3,0,0,0,  // 20 - 27\\n    0,4,0,0,0,0,0,0,  // 28 - 2f\\n    0,0,0,0,0,0,0,0,  // 30 - 37\\n    0,0,0,0,0,0,0,0,  // 38 - 3f\\n    0,0,0,5,0,0,0,0,  // 40 - 47\\n    0,0,0,0,0,0,0,0,  // 48 - 4f\\n    0,0,0,0,0,0,0,0,  // 50 - 57\\n    0,0,0,0,0,0,0,0,  // 58 - 5f\\n    0,0,0,0,0,0,0,0,  // 60 - 67\\n    0,0,0,0,0,0,0,0,  // 68 - 6f\\n    0,0,0,0,0,0,0,0,  // 70 - 77\\n    0,0,0,0,0,0,0,0,  // 78 - 7f\\n    2,2,2,2,2,2,2,2,  // 80 - 87\\n    2,2,2,2,2,2,2,2,  // 88 - 8f\\n    2,2,2,2,2,2,2,2,  // 90 - 97\\n    2,2,2,2,2,2,2,2,  // 98 - 9f\\n    2,2,2,2,2,2,2,2,  // a0 - a7\\n    2,2,2,2,2,2,2,2,  // a8 - af\\n    2,2,2,2,2,2,2,2,  // b0 - b7\\n    2,2,2,2,2,2,2,2,  // b8 - bf\\n    2,2,2,2,2,2,2,2,  // c0 - c7\\n    2,2,2,2,2,2,2,2,  // c8 - cf\\n    2,2,2,2,2,2,2,2,  // d0 - d7\\n    2,2,2,2,2,2,2,2,  // d8 - df\\n    2,2,2,2,2,2,2,2,  // e0 - e7\\n    2,2,2,2,2,2,2,2,  // e8 - ef\\n    2,2,2,2,2,2,2,2,  // f0 - f7\\n    2,2,2,2,2,2,2,2   // f8 - ff\\n];\\n\\nvar ISO2022KR_st = [\\n    consts.start,    3,consts.error,consts.start,consts.start,consts.start,consts.error,consts.error, // 00-07\\n    consts.error,consts.error,consts.error,consts.error,consts.itsMe,consts.itsMe,consts.itsMe,consts.itsMe, // 08-0f\\n    consts.itsMe,consts.itsMe,consts.error,consts.error,consts.error,    4,consts.error,consts.error, // 10-17\\n    consts.error,consts.error,consts.error,consts.error,    5,consts.error,consts.error,consts.error, // 18-1f\\n    consts.error,consts.error,consts.error,consts.itsMe,consts.start,consts.start,consts.start,consts.start  // 20-27\\n];\\n\\nvar ISO2022KRCharLenTable = [0, 0, 0, 0, 0, 0];\\n\\nexports.ISO2022KRSMModel = {\\n    \\\"classTable\\\"    : ISO2022KR_cls,\\n    \\\"classFactor\\\"   : 6,\\n    \\\"stateTable\\\"    : ISO2022KR_st,\\n    \\\"charLenTable\\\"  : ISO2022KRCharLenTable,\\n    \\\"name\\\"          : \\\"ISO-2022-KR\\\"\\n};\\n\",null,null,null,\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { Event, EventEmitter, Uri } from 'vscode';\\nimport { join } from 'path';\\nimport * as fs from 'fs';\\nimport { IDisposable } from './util';\\n\\nexport interface IFileWatcher extends IDisposable {\\n\\treadonly event: Event<Uri>;\\n}\\n\\nexport function watch(location: string): IFileWatcher {\\n\\tconst dotGitWatcher = fs.watch(location);\\n\\tconst onDotGitFileChangeEmitter = new EventEmitter<Uri>();\\n\\tdotGitWatcher.on('change', (_, e) => onDotGitFileChangeEmitter.fire(Uri.file(join(location, e as string))));\\n\\tdotGitWatcher.on('error', err => console.error(err));\\n\\n\\treturn new class implements IFileWatcher {\\n\\t\\tevent = onDotGitFileChangeEmitter.event;\\n\\t\\tdispose() { dotGitWatcher.close(); }\\n\\t};\\n}\\n\",null,\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { TextDocument, Range, LineChange, Selection } from 'vscode';\\n\\nexport function applyLineChanges(original: TextDocument, modified: TextDocument, diffs: LineChange[]): string {\\n\\tconst result: string[] = [];\\n\\tlet currentLine = 0;\\n\\n\\tfor (let diff of diffs) {\\n\\t\\tconst isInsertion = diff.originalEndLineNumber === 0;\\n\\t\\tconst isDeletion = diff.modifiedEndLineNumber === 0;\\n\\n\\t\\tlet endLine = isInsertion ? diff.originalStartLineNumber : diff.originalStartLineNumber - 1;\\n\\t\\tlet endCharacter = 0;\\n\\n\\t\\t// if this is a deletion at the very end of the document,then we need to account\\n\\t\\t// for a newline at the end of the last line which may have been deleted\\n\\t\\t// https://github.com/Microsoft/vscode/issues/59670\\n\\t\\tif (isDeletion && diff.originalStartLineNumber === original.lineCount) {\\n\\t\\t\\tendLine -= 1;\\n\\t\\t\\tendCharacter = original.lineAt(endLine).range.end.character;\\n\\t\\t}\\n\\n\\t\\tresult.push(original.getText(new Range(currentLine, 0, endLine, endCharacter)));\\n\\n\\t\\tif (!isDeletion) {\\n\\t\\t\\tlet fromLine = diff.modifiedStartLineNumber - 1;\\n\\t\\t\\tlet fromCharacter = 0;\\n\\n\\t\\t\\t// if this is an insertion at the very end of the document,\\n\\t\\t\\t// then we must start the next range after the last character of the\\n\\t\\t\\t// previous line, in order to take the correct eol\\n\\t\\t\\tif (isInsertion && diff.originalStartLineNumber === original.lineCount) {\\n\\t\\t\\t\\tfromLine -= 1;\\n\\t\\t\\t\\tfromCharacter = modified.lineAt(fromLine).range.end.character;\\n\\t\\t\\t}\\n\\n\\t\\t\\tresult.push(modified.getText(new Range(fromLine, fromCharacter, diff.modifiedEndLineNumber, 0)));\\n\\t\\t}\\n\\n\\t\\tcurrentLine = isInsertion ? diff.originalStartLineNumber : diff.originalEndLineNumber;\\n\\t}\\n\\n\\tresult.push(original.getText(new Range(currentLine, 0, original.lineCount, 0)));\\n\\n\\treturn result.join('');\\n}\\n\\nexport function toLineRanges(selections: Selection[], textDocument: TextDocument): Range[] {\\n\\tconst lineRanges = selections.map(s => {\\n\\t\\tconst startLine = textDocument.lineAt(s.start.line);\\n\\t\\tconst endLine = textDocument.lineAt(s.end.line);\\n\\t\\treturn new Range(startLine.range.start, endLine.range.end);\\n\\t});\\n\\n\\tlineRanges.sort((a, b) => a.start.line - b.start.line);\\n\\n\\tconst result = lineRanges.reduce((result, l) => {\\n\\t\\tif (result.length === 0) {\\n\\t\\t\\tresult.push(l);\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\n\\t\\tconst [last, ...rest] = result;\\n\\t\\tconst intersection = l.intersection(last);\\n\\n\\t\\tif (intersection) {\\n\\t\\t\\treturn [intersection, ...rest];\\n\\t\\t}\\n\\n\\t\\tif (l.start.line === last.end.line + 1) {\\n\\t\\t\\tconst merge = new Range(last.start, l.end);\\n\\t\\t\\treturn [merge, ...rest];\\n\\t\\t}\\n\\n\\t\\treturn [l, ...result];\\n\\t}, [] as Range[]);\\n\\n\\tresult.reverse();\\n\\n\\treturn result;\\n}\\n\\nexport function getModifiedRange(textDocument: TextDocument, diff: LineChange): Range {\\n\\tif (diff.modifiedEndLineNumber === 0) {\\n\\t\\tif (diff.modifiedStartLineNumber === 0) {\\n\\t\\t\\treturn new Range(textDocument.lineAt(diff.modifiedStartLineNumber).range.end, textDocument.lineAt(diff.modifiedStartLineNumber).range.start);\\n\\t\\t} else if (textDocument.lineCount === diff.modifiedStartLineNumber) {\\n\\t\\t\\treturn new Range(textDocument.lineAt(diff.modifiedStartLineNumber - 1).range.end, textDocument.lineAt(diff.modifiedStartLineNumber - 1).range.end);\\n\\t\\t} else {\\n\\t\\t\\treturn new Range(textDocument.lineAt(diff.modifiedStartLineNumber - 1).range.end, textDocument.lineAt(diff.modifiedStartLineNumber).range.start);\\n\\t\\t}\\n\\t} else {\\n\\t\\treturn new Range(textDocument.lineAt(diff.modifiedStartLineNumber - 1).range.start, textDocument.lineAt(diff.modifiedEndLineNumber - 1).range.end);\\n\\t}\\n}\\n\\nexport function intersectDiffWithRange(textDocument: TextDocument, diff: LineChange, range: Range): LineChange | null {\\n\\tconst modifiedRange = getModifiedRange(textDocument, diff);\\n\\tconst intersection = range.intersection(modifiedRange);\\n\\n\\tif (!intersection) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\tif (diff.modifiedEndLineNumber === 0) {\\n\\t\\treturn diff;\\n\\t} else {\\n\\t\\treturn {\\n\\t\\t\\toriginalStartLineNumber: diff.originalStartLineNumber,\\n\\t\\t\\toriginalEndLineNumber: diff.originalEndLineNumber,\\n\\t\\t\\tmodifiedStartLineNumber: intersection.start.line + 1,\\n\\t\\t\\tmodifiedEndLineNumber: intersection.end.line + 1\\n\\t\\t};\\n\\t}\\n}\\n\\nexport function invertLineChange(diff: LineChange): LineChange {\\n\\treturn {\\n\\t\\tmodifiedStartLineNumber: diff.originalStartLineNumber,\\n\\t\\tmodifiedEndLineNumber: diff.originalEndLineNumber,\\n\\t\\toriginalStartLineNumber: diff.modifiedStartLineNumber,\\n\\t\\toriginalEndLineNumber: diff.modifiedEndLineNumber\\n\\t};\\n}\\n\",\"!function(t,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\\\"use strict\\\";var t=\\\"millisecond\\\",n=\\\"second\\\",e=\\\"minute\\\",r=\\\"hour\\\",i=\\\"day\\\",s=\\\"week\\\",u=\\\"month\\\",o=\\\"quarter\\\",a=\\\"year\\\",h=/^(\\\\d{4})-?(\\\\d{1,2})-?(\\\\d{0,2})[^0-9]*(\\\\d{1,2})?:?(\\\\d{1,2})?:?(\\\\d{1,2})?.?(\\\\d{1,3})?$/,f=/\\\\[([^\\\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\\\"\\\"+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\\\"+\\\":\\\"-\\\")+c(r,2,\\\"0\\\")+\\\":\\\"+c(i,2,\\\"0\\\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:a,w:s,d:i,h:r,m:e,s:n,ms:t,Q:o}[h]||String(h||\\\"\\\").toLowerCase().replace(/s$/,\\\"\\\")},u:function(t){return void 0===t}},$={name:\\\"en\\\",weekdays:\\\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\\\".split(\\\"_\\\"),months:\\\"January_February_March_April_May_June_July_August_September_October_November_December\\\".split(\\\"_\\\")},l=\\\"en\\\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return l;if(\\\"string\\\"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?\\\"string\\\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u,$offset:n.$offset})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\\\"string\\\"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\\\"Invalid Date\\\"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,\\\"$y\\\",a)},d.month=function(t){return this.$g(t,\\\"$M\\\",u)},d.day=function(t){return this.$g(t,\\\"$W\\\",i)},d.date=function(t){return this.$g(t,\\\"$D\\\",\\\"date\\\")},d.hour=function(t){return this.$g(t,\\\"$H\\\",r)},d.minute=function(t){return this.$g(t,\\\"$m\\\",e)},d.second=function(t){return this.$g(t,\\\"$s\\\",n)},d.millisecond=function(n){return this.$g(n,\\\"$ms\\\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,o){var h=this,f=!!D.u(o)||o,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\\\"set\\\"+(this.$u?\\\"UTC\\\":\\\"\\\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\\\"date\\\":return $(M+\\\"Hours\\\",0);case r:return $(M+\\\"Minutes\\\",1);case e:return $(M+\\\"Seconds\\\",2);case n:return $(M+\\\"Milliseconds\\\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,o){var h,f=D.p(s),c=\\\"set\\\"+(this.$u?\\\"UTC\\\":\\\"\\\"),d=(h={},h[i]=c+\\\"Date\\\",h.date=c+\\\"Date\\\",h[u]=c+\\\"Month\\\",h[a]=c+\\\"FullYear\\\",h[r]=c+\\\"Hours\\\",h[e]=c+\\\"Minutes\\\",h[n]=c+\\\"Seconds\\\",h[t]=c+\\\"Milliseconds\\\",h)[f],$=f===i?this.$D+(o-this.$W):o;if(f===u||f===a){var l=this.clone().set(\\\"date\\\",1);l.$d[d]($),l.init(),this.$d=l.set(\\\"date\\\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,o){var h,f=this;t=Number(t);var c=D.p(o),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===a)return this.set(a,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.$d.getTime()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return\\\"Invalid Date\\\";var e=t||\\\"YYYY-MM-DDTHH:mm:ssZ\\\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,o=this.$M,a=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\\\"0\\\")},$=i.meridiem||function(t,n,e){var r=t<12?\\\"AM\\\":\\\"PM\\\";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:D.s(o+1,2,\\\"0\\\"),MMM:c(i.monthsShort,o,h,3),MMMM:h[o]||h(this,e),D:this.$D,DD:D.s(this.$D,2,\\\"0\\\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,a,2),ddd:c(i.weekdaysShort,this.$W,a,3),dddd:a[this.$W],H:String(s),HH:D.s(s,2,\\\"0\\\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\\\"0\\\"),s:String(this.$s),ss:D.s(this.$s,2,\\\"0\\\"),SSS:D.s(this.$ms,3,\\\"0\\\"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(\\\":\\\",\\\"\\\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[a]=y/12,c[u]=y,c[o]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone(),r=M(t,n,!0);return r&&(e.$L=r),e},d.clone=function(){return D.w(this.$d,this)},d.toDate=function(){return new Date(this.valueOf())},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\\n\",\"!function(e,t){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=t():\\\"function\\\"==typeof define&&define.amd?define(t):e.dayjs_plugin_advancedFormat=t()}(this,function(){\\\"use strict\\\";return function(e,t,r){var n=t.prototype,o=n.format;r.en.ordinal=function(e){var t=[\\\"th\\\",\\\"st\\\",\\\"nd\\\",\\\"rd\\\"],r=e%100;return\\\"[\\\"+e+(t[(r-20)%10]||t[r]||t[0])+\\\"]\\\"},n.format=function(e){var t=this,r=this.$locale(),n=this.$utils(),a=(e||\\\"YYYY-MM-DDTHH:mm:ssZ\\\").replace(/\\\\[([^\\\\]]+)]|Q|wo|ww|w|gggg|Do|X|x|k{1,2}|S/g,function(e){switch(e){case\\\"Q\\\":return Math.ceil((t.$M+1)/3);case\\\"Do\\\":return r.ordinal(t.$D);case\\\"gggg\\\":return t.weekYear();case\\\"wo\\\":return r.ordinal(t.week(),\\\"W\\\");case\\\"w\\\":case\\\"ww\\\":return n.s(t.week(),\\\"w\\\"===e?1:2,\\\"0\\\");case\\\"k\\\":case\\\"kk\\\":return n.s(String(0===t.$H?24:t.$H),\\\"k\\\"===e?1:2,\\\"0\\\");case\\\"X\\\":return Math.floor(t.$d.getTime()/1e3);case\\\"x\\\":return t.$d.getTime();default:return e}});return o.bind(this)(a)}}});\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { workspace, Uri, Disposable, Event, EventEmitter, window } from 'vscode';\\nimport { debounce, throttle } from './decorators';\\nimport { fromGitUri, toGitUri } from './uri';\\nimport { Model, ModelChangeEvent, OriginalResourceChangeEvent } from './model';\\nimport { filterEvent, eventToPromise, isDescendant, pathEquals } from './util';\\n\\ninterface CacheRow {\\n\\turi: Uri;\\n\\ttimestamp: number;\\n}\\n\\ninterface Cache {\\n\\t[uri: string]: CacheRow;\\n}\\n\\nconst THREE_MINUTES = 1000 * 60 * 3;\\nconst FIVE_MINUTES = 1000 * 60 * 5;\\n\\nexport class GitContentProvider {\\n\\n\\tprivate _onDidChange = new EventEmitter<Uri>();\\n\\tget onDidChange(): Event<Uri> { return this._onDidChange.event; }\\n\\n\\tprivate changedRepositoryRoots = new Set<string>();\\n\\tprivate cache: Cache = Object.create(null);\\n\\tprivate disposables: Disposable[] = [];\\n\\n\\tconstructor(private model: Model) {\\n\\t\\tthis.disposables.push(\\n\\t\\t\\tmodel.onDidChangeRepository(this.onDidChangeRepository, this),\\n\\t\\t\\tmodel.onDidChangeOriginalResource(this.onDidChangeOriginalResource, this),\\n\\t\\t\\tworkspace.registerTextDocumentContentProvider('git', this)\\n\\t\\t);\\n\\n\\t\\tsetInterval(() => this.cleanup(), FIVE_MINUTES);\\n\\t}\\n\\n\\tprivate onDidChangeRepository({ repository }: ModelChangeEvent): void {\\n\\t\\tthis.changedRepositoryRoots.add(repository.root);\\n\\t\\tthis.eventuallyFireChangeEvents();\\n\\t}\\n\\n\\tprivate onDidChangeOriginalResource({ uri }: OriginalResourceChangeEvent): void {\\n\\t\\tif (uri.scheme !== 'file') {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis._onDidChange.fire(toGitUri(uri, '', { replaceFileExtension: true }));\\n\\t}\\n\\n\\t@debounce(1100)\\n\\tprivate eventuallyFireChangeEvents(): void {\\n\\t\\tthis.fireChangeEvents();\\n\\t}\\n\\n\\t@throttle\\n\\tprivate async fireChangeEvents(): Promise<void> {\\n\\t\\tif (!window.state.focused) {\\n\\t\\t\\tconst onDidFocusWindow = filterEvent(window.onDidChangeWindowState, e => e.focused);\\n\\t\\t\\tawait eventToPromise(onDidFocusWindow);\\n\\t\\t}\\n\\n\\t\\tObject.keys(this.cache).forEach(key => {\\n\\t\\t\\tconst uri = this.cache[key].uri;\\n\\t\\t\\tconst fsPath = uri.fsPath;\\n\\n\\t\\t\\tfor (const root of this.changedRepositoryRoots) {\\n\\t\\t\\t\\tif (isDescendant(root, fsPath)) {\\n\\t\\t\\t\\t\\tthis._onDidChange.fire(uri);\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tthis.changedRepositoryRoots.clear();\\n\\t}\\n\\n\\tasync provideTextDocumentContent(uri: Uri): Promise<string> {\\n\\t\\tlet { path, ref, submoduleOf } = fromGitUri(uri);\\n\\n\\t\\tif (submoduleOf) {\\n\\t\\t\\tconst repository = this.model.getRepository(submoduleOf);\\n\\n\\t\\t\\tif (!repository) {\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (ref === 'index') {\\n\\t\\t\\t\\treturn await repository.diffIndexWithHEAD(path);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn await repository.diffWithHEAD(path);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tconst repository = this.model.getRepository(uri);\\n\\n\\t\\tif (!repository) {\\n\\t\\t\\treturn '';\\n\\t\\t}\\n\\n\\t\\tconst cacheKey = uri.toString();\\n\\t\\tconst timestamp = new Date().getTime();\\n\\t\\tconst cacheValue: CacheRow = { uri, timestamp };\\n\\n\\t\\tthis.cache[cacheKey] = cacheValue;\\n\\n\\t\\tif (ref === '~') {\\n\\t\\t\\tconst fileUri = Uri.file(path);\\n\\t\\t\\tconst uriString = fileUri.toString();\\n\\t\\t\\tconst [indexStatus] = repository.indexGroup.resourceStates.filter(r => r.resourceUri.toString() === uriString);\\n\\t\\t\\tref = indexStatus ? '' : 'HEAD';\\n\\t\\t} else if (/^~\\\\d$/.test(ref)) {\\n\\t\\t\\tref = `:${ref[1]}`;\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\treturn await repository.show(ref, path);\\n\\t\\t} catch (err) {\\n\\t\\t\\treturn '';\\n\\t\\t}\\n\\t}\\n\\n\\tprivate cleanup(): void {\\n\\t\\tconst now = new Date().getTime();\\n\\t\\tconst cache = Object.create(null);\\n\\n\\t\\tObject.keys(this.cache).forEach(key => {\\n\\t\\t\\tconst row = this.cache[key];\\n\\t\\t\\tconst { path } = fromGitUri(row.uri);\\n\\t\\t\\tconst isOpen = workspace.textDocuments\\n\\t\\t\\t\\t.filter(d => d.uri.scheme === 'file')\\n\\t\\t\\t\\t.some(d => pathEquals(d.uri.fsPath, path));\\n\\n\\t\\t\\tif (isOpen || now - row.timestamp < THREE_MINUTES) {\\n\\t\\t\\t\\tcache[row.uri.toString()] = row;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tthis.cache = cache;\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.disposables.forEach(d => d.dispose());\\n\\t}\\n}\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { workspace, Uri, Disposable, Event, EventEmitter, window, FileSystemProvider, FileChangeEvent, FileStat, FileType, FileChangeType, FileSystemError } from 'vscode';\\nimport { debounce, throttle } from './decorators';\\nimport { fromGitUri, toGitUri } from './uri';\\nimport { Model, ModelChangeEvent, OriginalResourceChangeEvent } from './model';\\nimport { filterEvent, eventToPromise, isDescendant, pathEquals, EmptyDisposable } from './util';\\nimport { Repository } from './repository';\\n\\ninterface CacheRow {\\n\\turi: Uri;\\n\\ttimestamp: number;\\n}\\n\\nconst THREE_MINUTES = 1000 * 60 * 3;\\nconst FIVE_MINUTES = 1000 * 60 * 5;\\n\\nfunction sanitizeRef(ref: string, path: string, repository: Repository): string {\\n\\tif (ref === '~') {\\n\\t\\tconst fileUri = Uri.file(path);\\n\\t\\tconst uriString = fileUri.toString();\\n\\t\\tconst [indexStatus] = repository.indexGroup.resourceStates.filter(r => r.resourceUri.toString() === uriString);\\n\\t\\treturn indexStatus ? '' : 'HEAD';\\n\\t}\\n\\n\\tif (/^~\\\\d$/.test(ref)) {\\n\\t\\treturn `:${ref[1]}`;\\n\\t}\\n\\n\\treturn ref;\\n}\\n\\nexport class GitFileSystemProvider implements FileSystemProvider {\\n\\n\\tprivate _onDidChangeFile = new EventEmitter<FileChangeEvent[]>();\\n\\treadonly onDidChangeFile: Event<FileChangeEvent[]> = this._onDidChangeFile.event;\\n\\n\\tprivate changedRepositoryRoots = new Set<string>();\\n\\tprivate cache = new Map<string, CacheRow>();\\n\\tprivate mtime = new Date().getTime();\\n\\tprivate disposables: Disposable[] = [];\\n\\n\\tconstructor(private model: Model) {\\n\\t\\tthis.disposables.push(\\n\\t\\t\\tmodel.onDidChangeRepository(this.onDidChangeRepository, this),\\n\\t\\t\\tmodel.onDidChangeOriginalResource(this.onDidChangeOriginalResource, this),\\n\\t\\t\\tworkspace.registerFileSystemProvider('git', this, { isReadonly: true, isCaseSensitive: true }),\\n\\t\\t\\tworkspace.registerResourceLabelFormatter({\\n\\t\\t\\t\\tscheme: 'git',\\n\\t\\t\\t\\tformatting: {\\n\\t\\t\\t\\t\\tlabel: '${path} (git)',\\n\\t\\t\\t\\t\\tseparator: '/'\\n\\t\\t\\t\\t}\\n\\t\\t\\t})\\n\\t\\t);\\n\\n\\t\\tsetInterval(() => this.cleanup(), FIVE_MINUTES);\\n\\t}\\n\\n\\tprivate onDidChangeRepository({ repository }: ModelChangeEvent): void {\\n\\t\\tthis.changedRepositoryRoots.add(repository.root);\\n\\t\\tthis.eventuallyFireChangeEvents();\\n\\t}\\n\\n\\tprivate onDidChangeOriginalResource({ uri }: OriginalResourceChangeEvent): void {\\n\\t\\tif (uri.scheme !== 'file') {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst gitUri = toGitUri(uri, '', { replaceFileExtension: true });\\n\\t\\tthis.mtime = new Date().getTime();\\n\\t\\tthis._onDidChangeFile.fire([{ type: FileChangeType.Changed, uri: gitUri }]);\\n\\t}\\n\\n\\t@debounce(1100)\\n\\tprivate eventuallyFireChangeEvents(): void {\\n\\t\\tthis.fireChangeEvents();\\n\\t}\\n\\n\\t@throttle\\n\\tprivate async fireChangeEvents(): Promise<void> {\\n\\t\\tif (!window.state.focused) {\\n\\t\\t\\tconst onDidFocusWindow = filterEvent(window.onDidChangeWindowState, e => e.focused);\\n\\t\\t\\tawait eventToPromise(onDidFocusWindow);\\n\\t\\t}\\n\\n\\t\\tconst events: FileChangeEvent[] = [];\\n\\n\\t\\tfor (const { uri } of this.cache.values()) {\\n\\t\\t\\tconst fsPath = uri.fsPath;\\n\\n\\t\\t\\tfor (const root of this.changedRepositoryRoots) {\\n\\t\\t\\t\\tif (isDescendant(root, fsPath)) {\\n\\t\\t\\t\\t\\tevents.push({ type: FileChangeType.Changed, uri });\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (events.length > 0) {\\n\\t\\t\\tthis.mtime = new Date().getTime();\\n\\t\\t\\tthis._onDidChangeFile.fire(events);\\n\\t\\t}\\n\\n\\t\\tthis.changedRepositoryRoots.clear();\\n\\t}\\n\\n\\tprivate cleanup(): void {\\n\\t\\tconst now = new Date().getTime();\\n\\t\\tconst cache = new Map<string, CacheRow>();\\n\\n\\t\\tfor (const row of this.cache.values()) {\\n\\t\\t\\tconst { path } = fromGitUri(row.uri);\\n\\t\\t\\tconst isOpen = workspace.textDocuments\\n\\t\\t\\t\\t.filter(d => d.uri.scheme === 'file')\\n\\t\\t\\t\\t.some(d => pathEquals(d.uri.fsPath, path));\\n\\n\\t\\t\\tif (isOpen || now - row.timestamp < THREE_MINUTES) {\\n\\t\\t\\t\\tcache.set(row.uri.toString(), row);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// TODO: should fire delete events?\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.cache = cache;\\n\\t}\\n\\n\\twatch(): Disposable {\\n\\t\\treturn EmptyDisposable;\\n\\t}\\n\\n\\tasync stat(uri: Uri): Promise<FileStat> {\\n\\t\\tconst { submoduleOf, path, ref } = fromGitUri(uri);\\n\\t\\tconst repository = submoduleOf ? this.model.getRepository(submoduleOf) : this.model.getRepository(uri);\\n\\t\\tif (!repository) {\\n\\t\\t\\tthrow FileSystemError.FileNotFound();\\n\\t\\t}\\n\\n\\t\\tlet size = 0;\\n\\t\\ttry {\\n\\t\\t\\tconst details = await repository.getObjectDetails(sanitizeRef(ref, path, repository), path);\\n\\t\\t\\tsize = details.size;\\n\\t\\t} catch {\\n\\t\\t\\t// noop\\n\\t\\t}\\n\\t\\treturn { type: FileType.File, size: size, mtime: this.mtime, ctime: 0 };\\n\\t}\\n\\n\\treadDirectory(): Thenable<[string, FileType][]> {\\n\\t\\tthrow new Error('Method not implemented.');\\n\\t}\\n\\n\\tcreateDirectory(): void {\\n\\t\\tthrow new Error('Method not implemented.');\\n\\t}\\n\\n\\tasync readFile(uri: Uri): Promise<Uint8Array> {\\n\\t\\tconst { path, ref, submoduleOf } = fromGitUri(uri);\\n\\n\\t\\tif (submoduleOf) {\\n\\t\\t\\tconst repository = this.model.getRepository(submoduleOf);\\n\\n\\t\\t\\tif (!repository) {\\n\\t\\t\\t\\tthrow FileSystemError.FileNotFound();\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst encoder = new TextEncoder();\\n\\n\\t\\t\\tif (ref === 'index') {\\n\\t\\t\\t\\treturn encoder.encode(await repository.diffIndexWithHEAD(path));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn encoder.encode(await repository.diffWithHEAD(path));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tconst repository = this.model.getRepository(uri);\\n\\n\\t\\tif (!repository) {\\n\\t\\t\\tthrow FileSystemError.FileNotFound();\\n\\t\\t}\\n\\n\\t\\tconst timestamp = new Date().getTime();\\n\\t\\tconst cacheValue: CacheRow = { uri, timestamp };\\n\\n\\t\\tthis.cache.set(uri.toString(), cacheValue);\\n\\n\\t\\ttry {\\n\\t\\t\\treturn await repository.buffer(sanitizeRef(ref, path, repository), path);\\n\\t\\t} catch (err) {\\n\\t\\t\\treturn new Uint8Array(0);\\n\\t\\t}\\n\\t}\\n\\n\\twriteFile(): void {\\n\\t\\tthrow new Error('Method not implemented.');\\n\\t}\\n\\n\\tdelete(): void {\\n\\t\\tthrow new Error('Method not implemented.');\\n\\t}\\n\\n\\trename(): void {\\n\\t\\tthrow new Error('Method not implemented.');\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.disposables.forEach(d => d.dispose());\\n\\t}\\n}\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { window, workspace, Uri, Disposable, Event, EventEmitter, Decoration, DecorationProvider, ThemeColor } from 'vscode';\\nimport * as path from 'path';\\nimport { Repository, GitResourceGroup } from './repository';\\nimport { Model } from './model';\\nimport { debounce } from './decorators';\\nimport { filterEvent, dispose, anyEvent, fireEvent } from './util';\\nimport { GitErrorCodes, Status } from './api/git';\\n\\ntype Callback = { resolve: (status: boolean) => void, reject: (err: any) => void };\\n\\nclass GitIgnoreDecorationProvider implements DecorationProvider {\\n\\n\\treadonly onDidChangeDecorations: Event<Uri[]>;\\n\\tprivate queue = new Map<string, { repository: Repository; queue: Map<string, Callback>; }>();\\n\\tprivate disposables: Disposable[] = [];\\n\\n\\tconstructor(private model: Model) {\\n\\t\\tthis.onDidChangeDecorations = fireEvent(anyEvent<any>(\\n\\t\\t\\tfilterEvent(workspace.onDidSaveTextDocument, e => e.fileName.endsWith('.gitignore')),\\n\\t\\t\\tmodel.onDidOpenRepository,\\n\\t\\t\\tmodel.onDidCloseRepository\\n\\t\\t));\\n\\n\\t\\tthis.disposables.push(window.registerDecorationProvider(this));\\n\\t}\\n\\n\\tprovideDecoration(uri: Uri): Promise<Decoration | undefined> {\\n\\t\\tconst repository = this.model.getRepository(uri);\\n\\n\\t\\tif (!repository) {\\n\\t\\t\\treturn Promise.resolve(undefined);\\n\\t\\t}\\n\\n\\t\\tlet queueItem = this.queue.get(repository.root);\\n\\n\\t\\tif (!queueItem) {\\n\\t\\t\\tqueueItem = { repository, queue: new Map<string, Callback>() };\\n\\t\\t\\tthis.queue.set(repository.root, queueItem);\\n\\t\\t}\\n\\n\\t\\treturn new Promise<boolean>((resolve, reject) => {\\n\\t\\t\\tqueueItem!.queue.set(uri.fsPath, { resolve, reject });\\n\\t\\t\\tthis.checkIgnoreSoon();\\n\\t\\t}).then(ignored => {\\n\\t\\t\\tif (ignored) {\\n\\t\\t\\t\\treturn <Decoration>{\\n\\t\\t\\t\\t\\tpriority: 3,\\n\\t\\t\\t\\t\\tcolor: new ThemeColor('gitDecoration.ignoredResourceForeground')\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\treturn undefined;\\n\\t\\t});\\n\\t}\\n\\n\\t@debounce(500)\\n\\tprivate checkIgnoreSoon(): void {\\n\\t\\tconst queue = new Map(this.queue.entries());\\n\\t\\tthis.queue.clear();\\n\\n\\t\\tfor (const [, item] of queue) {\\n\\t\\t\\tconst paths = [...item.queue.keys()];\\n\\n\\t\\t\\titem.repository.checkIgnore(paths).then(ignoreSet => {\\n\\t\\t\\t\\tfor (const [key, value] of item.queue.entries()) {\\n\\t\\t\\t\\t\\tvalue.resolve(ignoreSet.has(key));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}, err => {\\n\\t\\t\\t\\tif (err.gitErrorCode !== GitErrorCodes.IsInSubmodule) {\\n\\t\\t\\t\\t\\tconsole.error(err);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tfor (const [, value] of item.queue.entries()) {\\n\\t\\t\\t\\t\\tvalue.reject(err);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.disposables.forEach(d => d.dispose());\\n\\t\\tthis.queue.clear();\\n\\t}\\n}\\n\\nclass GitDecorationProvider implements DecorationProvider {\\n\\n\\tprivate static SubmoduleDecorationData: Decoration = {\\n\\t\\ttitle: 'Submodule',\\n\\t\\tletter: 'S',\\n\\t\\tcolor: new ThemeColor('gitDecoration.submoduleResourceForeground')\\n\\t};\\n\\n\\tprivate readonly _onDidChangeDecorations = new EventEmitter<Uri[]>();\\n\\treadonly onDidChangeDecorations: Event<Uri[]> = this._onDidChangeDecorations.event;\\n\\n\\tprivate disposables: Disposable[] = [];\\n\\tprivate decorations = new Map<string, Decoration>();\\n\\n\\tconstructor(private repository: Repository) {\\n\\t\\tthis.disposables.push(\\n\\t\\t\\twindow.registerDecorationProvider(this),\\n\\t\\t\\trepository.onDidRunGitStatus(this.onDidRunGitStatus, this)\\n\\t\\t);\\n\\t}\\n\\n\\tprivate onDidRunGitStatus(): void {\\n\\t\\tlet newDecorations = new Map<string, Decoration>();\\n\\n\\t\\tthis.collectSubmoduleDecorationData(newDecorations);\\n\\t\\tthis.collectDecorationData(this.repository.indexGroup, newDecorations);\\n\\t\\tthis.collectDecorationData(this.repository.untrackedGroup, newDecorations);\\n\\t\\tthis.collectDecorationData(this.repository.workingTreeGroup, newDecorations);\\n\\t\\tthis.collectDecorationData(this.repository.mergeGroup, newDecorations);\\n\\n\\t\\tconst uris = new Set([...this.decorations.keys()].concat([...newDecorations.keys()]));\\n\\t\\tthis.decorations = newDecorations;\\n\\t\\tthis._onDidChangeDecorations.fire([...uris.values()].map(value => Uri.parse(value, true)));\\n\\t}\\n\\n\\tprivate collectDecorationData(group: GitResourceGroup, bucket: Map<string, Decoration>): void {\\n\\t\\tfor (const r of group.resourceStates) {\\n\\t\\t\\tconst decoration = r.resourceDecoration;\\n\\n\\t\\t\\tif (decoration) {\\n\\t\\t\\t\\t// not deleted and has a decoration\\n\\t\\t\\t\\tbucket.set(r.original.toString(), decoration);\\n\\n\\t\\t\\t\\tif (r.type === Status.INDEX_RENAMED) {\\n\\t\\t\\t\\t\\tbucket.set(r.resourceUri.toString(), decoration);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tprivate collectSubmoduleDecorationData(bucket: Map<string, Decoration>): void {\\n\\t\\tfor (const submodule of this.repository.submodules) {\\n\\t\\t\\tbucket.set(Uri.file(path.join(this.repository.root, submodule.path)).toString(), GitDecorationProvider.SubmoduleDecorationData);\\n\\t\\t}\\n\\t}\\n\\n\\tprovideDecoration(uri: Uri): Decoration | undefined {\\n\\t\\treturn this.decorations.get(uri.toString());\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.disposables.forEach(d => d.dispose());\\n\\t}\\n}\\n\\n\\nexport class GitDecorations {\\n\\n\\tprivate disposables: Disposable[] = [];\\n\\tprivate modelDisposables: Disposable[] = [];\\n\\tprivate providers = new Map<Repository, Disposable>();\\n\\n\\tconstructor(private model: Model) {\\n\\t\\tthis.disposables.push(new GitIgnoreDecorationProvider(model));\\n\\n\\t\\tconst onEnablementChange = filterEvent(workspace.onDidChangeConfiguration, e => e.affectsConfiguration('git.decorations.enabled'));\\n\\t\\tonEnablementChange(this.update, this, this.disposables);\\n\\t\\tthis.update();\\n\\t}\\n\\n\\tprivate update(): void {\\n\\t\\tconst enabled = workspace.getConfiguration('git').get('decorations.enabled');\\n\\n\\t\\tif (enabled) {\\n\\t\\t\\tthis.enable();\\n\\t\\t} else {\\n\\t\\t\\tthis.disable();\\n\\t\\t}\\n\\t}\\n\\n\\tprivate enable(): void {\\n\\t\\tthis.model.onDidOpenRepository(this.onDidOpenRepository, this, this.modelDisposables);\\n\\t\\tthis.model.onDidCloseRepository(this.onDidCloseRepository, this, this.modelDisposables);\\n\\t\\tthis.model.repositories.forEach(this.onDidOpenRepository, this);\\n\\t}\\n\\n\\tprivate disable(): void {\\n\\t\\tthis.modelDisposables = dispose(this.modelDisposables);\\n\\t\\tthis.providers.forEach(value => value.dispose());\\n\\t\\tthis.providers.clear();\\n\\t}\\n\\n\\tprivate onDidOpenRepository(repository: Repository): void {\\n\\t\\tconst provider = new GitDecorationProvider(repository);\\n\\t\\tthis.providers.set(repository, provider);\\n\\t}\\n\\n\\tprivate onDidCloseRepository(repository: Repository): void {\\n\\t\\tconst provider = this.providers.get(repository);\\n\\n\\t\\tif (provider) {\\n\\t\\t\\tprovider.dispose();\\n\\t\\t\\tthis.providers.delete(repository);\\n\\t\\t}\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.disable();\\n\\t\\tthis.disposables = dispose(this.disposables);\\n\\t}\\n}\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { window, InputBoxOptions } from 'vscode';\\nimport { IDisposable } from './util';\\nimport * as path from 'path';\\nimport { IIPCHandler, IIPCServer } from './ipc/ipcServer';\\n\\nexport interface AskpassEnvironment {\\n\\tGIT_ASKPASS: string;\\n\\tELECTRON_RUN_AS_NODE?: string;\\n\\tVSCODE_GIT_ASKPASS_NODE?: string;\\n\\tVSCODE_GIT_ASKPASS_MAIN?: string;\\n\\tVSCODE_GIT_ASKPASS_HANDLE?: string;\\n}\\n\\nexport class Askpass implements IIPCHandler {\\n\\n\\tprivate disposable: IDisposable;\\n\\n\\tstatic getDisabledEnv(): AskpassEnvironment {\\n\\t\\treturn {\\n\\t\\t\\tGIT_ASKPASS: path.join(__dirname, 'askpass-empty.sh')\\n\\t\\t};\\n\\t}\\n\\n\\tconstructor(ipc: IIPCServer) {\\n\\t\\tthis.disposable = ipc.registerHandler('askpass', this);\\n\\t}\\n\\n\\tasync handle({ request, host }: { request: string, host: string }): Promise<string> {\\n\\t\\tconst options: InputBoxOptions = {\\n\\t\\t\\tpassword: /password/i.test(request),\\n\\t\\t\\tplaceHolder: request,\\n\\t\\t\\tprompt: `Git: ${host}`,\\n\\t\\t\\tignoreFocusOut: true\\n\\t\\t};\\n\\n\\t\\treturn await window.showInputBox(options) || '';\\n\\t}\\n\\n\\tgetEnv(): AskpassEnvironment {\\n\\t\\treturn {\\n\\t\\t\\tELECTRON_RUN_AS_NODE: '1',\\n\\t\\t\\tGIT_ASKPASS: path.join(__dirname, 'askpass.sh'),\\n\\t\\t\\tVSCODE_GIT_ASKPASS_NODE: process.execPath,\\n\\t\\t\\tVSCODE_GIT_ASKPASS_MAIN: path.join(__dirname, 'askpass-main.js')\\n\\t\\t};\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.disposable.dispose();\\n\\t}\\n}\\n\",\"/*---------------------------------------------------------\\n * Copyright (C) Microsoft Corporation. All rights reserved.\\n *--------------------------------------------------------*/\\n'use strict';\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nprocess.env['APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL'] = true;\\nvar fs = require(\\\"fs\\\");\\nvar os = require(\\\"os\\\");\\nvar path = require(\\\"path\\\");\\nvar vscode = require(\\\"vscode\\\");\\nvar appInsights = require(\\\"applicationinsights\\\");\\nvar TelemetryReporter = /** @class */ (function () {\\n    // tslint:disable-next-line\\n    function TelemetryReporter(extensionId, extensionVersion, key) {\\n        var _this = this;\\n        this.extensionId = extensionId;\\n        this.extensionVersion = extensionVersion;\\n        this.userOptIn = false;\\n        var logFilePath = process.env['VSCODE_LOGS'] || '';\\n        if (logFilePath && extensionId && process.env['VSCODE_LOG_LEVEL'] === 'trace') {\\n            logFilePath = path.join(logFilePath, extensionId + \\\".txt\\\");\\n            this.logStream = fs.createWriteStream(logFilePath, { flags: 'a', encoding: 'utf8', autoClose: true });\\n        }\\n        this.updateUserOptIn(key);\\n        this.configListener = vscode.workspace.onDidChangeConfiguration(function () { return _this.updateUserOptIn(key); });\\n    }\\n    TelemetryReporter.prototype.updateUserOptIn = function (key) {\\n        var config = vscode.workspace.getConfiguration(TelemetryReporter.TELEMETRY_CONFIG_ID);\\n        if (this.userOptIn !== config.get(TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID, true)) {\\n            this.userOptIn = config.get(TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID, true);\\n            if (this.userOptIn) {\\n                this.createAppInsightsClient(key);\\n            }\\n            else {\\n                this.dispose();\\n            }\\n        }\\n    };\\n    TelemetryReporter.prototype.createAppInsightsClient = function (key) {\\n        //check if another instance is already initialized\\n        if (appInsights.defaultClient) {\\n            this.appInsightsClient = new appInsights.TelemetryClient(key);\\n            // no other way to enable offline mode\\n            this.appInsightsClient.channel.setUseDiskRetryCaching(true);\\n        }\\n        else {\\n            appInsights.setup(key)\\n                .setAutoCollectRequests(false)\\n                .setAutoCollectPerformance(false)\\n                .setAutoCollectExceptions(false)\\n                .setAutoCollectDependencies(false)\\n                .setAutoDependencyCorrelation(false)\\n                .setAutoCollectConsole(false)\\n                .setUseDiskRetryCaching(true)\\n                .start();\\n            this.appInsightsClient = appInsights.defaultClient;\\n        }\\n        this.appInsightsClient.commonProperties = this.getCommonProperties();\\n        if (vscode && vscode.env) {\\n            this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.userId] = vscode.env.machineId;\\n            this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.sessionId] = vscode.env.sessionId;\\n        }\\n        //check if it's an Asimov key to change the endpoint\\n        if (key && key.indexOf('AIF-') === 0) {\\n            this.appInsightsClient.config.endpointUrl = \\\"https://vortex.data.microsoft.com/collect/v1\\\";\\n        }\\n    };\\n    // __GDPR__COMMON__ \\\"common.os\\\" : { \\\"classification\\\": \\\"SystemMetaData\\\", \\\"purpose\\\": \\\"FeatureInsight\\\" }\\n    // __GDPR__COMMON__ \\\"common.platformversion\\\" : { \\\"classification\\\": \\\"SystemMetaData\\\", \\\"purpose\\\": \\\"FeatureInsight\\\" }\\n    // __GDPR__COMMON__ \\\"common.extname\\\" : { \\\"classification\\\": \\\"PublicNonPersonalData\\\", \\\"purpose\\\": \\\"FeatureInsight\\\" }\\n    // __GDPR__COMMON__ \\\"common.extversion\\\" : { \\\"classification\\\": \\\"PublicNonPersonalData\\\", \\\"purpose\\\": \\\"FeatureInsight\\\" }\\n    // __GDPR__COMMON__ \\\"common.vscodemachineid\\\" : { \\\"endPoint\\\": \\\"MacAddressHash\\\", \\\"classification\\\": \\\"EndUserPseudonymizedInformation\\\", \\\"purpose\\\": \\\"FeatureInsight\\\" }\\n    // __GDPR__COMMON__ \\\"common.vscodesessionid\\\" : { \\\"classification\\\": \\\"SystemMetaData\\\", \\\"purpose\\\": \\\"FeatureInsight\\\" }\\n    // __GDPR__COMMON__ \\\"common.vscodeversion\\\" : { \\\"classification\\\": \\\"SystemMetaData\\\", \\\"purpose\\\": \\\"FeatureInsight\\\" }\\n    TelemetryReporter.prototype.getCommonProperties = function () {\\n        var commonProperties = Object.create(null);\\n        commonProperties['common.os'] = os.platform();\\n        commonProperties['common.platformversion'] = (os.release() || '').replace(/^(\\\\d+)(\\\\.\\\\d+)?(\\\\.\\\\d+)?(.*)/, '$1$2$3');\\n        commonProperties['common.extname'] = this.extensionId;\\n        commonProperties['common.extversion'] = this.extensionVersion;\\n        if (vscode && vscode.env) {\\n            commonProperties['common.vscodemachineid'] = vscode.env.machineId;\\n            commonProperties['common.vscodesessionid'] = vscode.env.sessionId;\\n            commonProperties['common.vscodeversion'] = vscode.version;\\n        }\\n        return commonProperties;\\n    };\\n    TelemetryReporter.prototype.sendTelemetryEvent = function (eventName, properties, measurements) {\\n        if (this.userOptIn && eventName && this.appInsightsClient) {\\n            this.appInsightsClient.trackEvent({\\n                name: this.extensionId + \\\"/\\\" + eventName,\\n                properties: properties,\\n                measurements: measurements\\n            });\\n            if (this.logStream) {\\n                this.logStream.write(\\\"telemetry/\\\" + eventName + \\\" \\\" + JSON.stringify({ properties: properties, measurements: measurements }) + \\\"\\\\n\\\");\\n            }\\n        }\\n    };\\n    TelemetryReporter.prototype.dispose = function () {\\n        var _this = this;\\n        this.configListener.dispose();\\n        var flushEventsToLogger = new Promise(function (resolve) {\\n            if (!_this.logStream) {\\n                return resolve(void 0);\\n            }\\n            _this.logStream.on('finish', resolve);\\n            _this.logStream.end();\\n        });\\n        var flushEventsToAI = new Promise(function (resolve) {\\n            if (_this.appInsightsClient) {\\n                _this.appInsightsClient.flush({\\n                    callback: function () {\\n                        // all data flushed\\n                        _this.appInsightsClient = undefined;\\n                        resolve(void 0);\\n                    }\\n                });\\n            }\\n            else {\\n                resolve(void 0);\\n            }\\n        });\\n        return Promise.all([flushEventsToAI, flushEventsToLogger]);\\n    };\\n    TelemetryReporter.TELEMETRY_CONFIG_ID = 'telemetry';\\n    TelemetryReporter.TELEMETRY_CONFIG_ENABLED_ID = 'enableTelemetry';\\n    return TelemetryReporter;\\n}());\\nexports.default = TelemetryReporter;\\n//# sourceMappingURL=telemetryReporter.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar CorrelationContextManager = require(\\\"./AutoCollection/CorrelationContextManager\\\"); // Keep this first\\r\\nvar AutoCollectConsole = require(\\\"./AutoCollection/Console\\\");\\r\\nvar AutoCollectExceptions = require(\\\"./AutoCollection/Exceptions\\\");\\r\\nvar AutoCollectPerformance = require(\\\"./AutoCollection/Performance\\\");\\r\\nvar AutoCollectHttpDependencies = require(\\\"./AutoCollection/HttpDependencies\\\");\\r\\nvar AutoCollectHttpRequests = require(\\\"./AutoCollection/HttpRequests\\\");\\r\\nvar Logging = require(\\\"./Library/Logging\\\");\\r\\n// We export these imports so that SDK users may use these classes directly.\\r\\n// They're exposed using \\\"export import\\\" so that types are passed along as expected\\r\\nexports.TelemetryClient = require(\\\"./Library/NodeClient\\\");\\r\\nexports.Contracts = require(\\\"./Declarations/Contracts\\\");\\r\\n// Default autocollection configuration\\r\\nvar _isConsole = true;\\r\\nvar _isConsoleLog = false;\\r\\nvar _isExceptions = true;\\r\\nvar _isPerformance = true;\\r\\nvar _isRequests = true;\\r\\nvar _isDependencies = true;\\r\\nvar _isDiskRetry = true;\\r\\nvar _isCorrelating = true;\\r\\nvar _diskRetryInterval = undefined;\\r\\nvar _diskRetryMaxBytes = undefined;\\r\\nvar _console;\\r\\nvar _exceptions;\\r\\nvar _performance;\\r\\nvar _serverRequests;\\r\\nvar _clientRequests;\\r\\nvar _isStarted = false;\\r\\n/**\\r\\n * Initializes the default client. Should be called after setting\\r\\n * configuration options.\\r\\n *\\r\\n * @param instrumentationKey the instrumentation key to use. Optional, if\\r\\n * this is not specified, the value will be read from the environment\\r\\n * variable APPINSIGHTS_INSTRUMENTATIONKEY.\\r\\n * @returns {Configuration} the configuration class to initialize\\r\\n * and start the SDK.\\r\\n */\\r\\nfunction setup(instrumentationKey) {\\r\\n    if (!exports.defaultClient) {\\r\\n        exports.defaultClient = new exports.TelemetryClient(instrumentationKey);\\r\\n        _console = new AutoCollectConsole(exports.defaultClient);\\r\\n        _exceptions = new AutoCollectExceptions(exports.defaultClient);\\r\\n        _performance = new AutoCollectPerformance(exports.defaultClient);\\r\\n        _serverRequests = new AutoCollectHttpRequests(exports.defaultClient);\\r\\n        _clientRequests = new AutoCollectHttpDependencies(exports.defaultClient);\\r\\n    }\\r\\n    else {\\r\\n        Logging.info(\\\"The default client is already setup\\\");\\r\\n    }\\r\\n    if (exports.defaultClient && exports.defaultClient.channel) {\\r\\n        exports.defaultClient.channel.setUseDiskRetryCaching(_isDiskRetry, _diskRetryInterval, _diskRetryMaxBytes);\\r\\n    }\\r\\n    return Configuration;\\r\\n}\\r\\nexports.setup = setup;\\r\\n/**\\r\\n * Starts automatic collection of telemetry. Prior to calling start no\\r\\n * telemetry will be *automatically* collected, though manual collection\\r\\n * is enabled.\\r\\n * @returns {ApplicationInsights} this class\\r\\n */\\r\\nfunction start() {\\r\\n    if (!!exports.defaultClient) {\\r\\n        _isStarted = true;\\r\\n        _console.enable(_isConsole, _isConsoleLog);\\r\\n        _exceptions.enable(_isExceptions);\\r\\n        _performance.enable(_isPerformance);\\r\\n        _serverRequests.useAutoCorrelation(_isCorrelating);\\r\\n        _serverRequests.enable(_isRequests);\\r\\n        _clientRequests.enable(_isDependencies);\\r\\n    }\\r\\n    else {\\r\\n        Logging.warn(\\\"Start cannot be called before setup\\\");\\r\\n    }\\r\\n    return Configuration;\\r\\n}\\r\\nexports.start = start;\\r\\n/**\\r\\n * Returns an object that is shared across all code handling a given request.\\r\\n * This can be used similarly to thread-local storage in other languages.\\r\\n * Properties set on this object will be available to telemetry processors.\\r\\n *\\r\\n * Do not store sensitive information here.\\r\\n * Custom properties set on this object can be exposed in a future SDK\\r\\n * release via outgoing HTTP headers.\\r\\n * This is to allow for correlating data cross-component.\\r\\n *\\r\\n * This method will return null if automatic dependency correlation is disabled.\\r\\n * @returns A plain object for request storage or null if automatic dependency correlation is disabled.\\r\\n */\\r\\nfunction getCorrelationContext() {\\r\\n    if (_isCorrelating) {\\r\\n        return CorrelationContextManager.CorrelationContextManager.getCurrentContext();\\r\\n    }\\r\\n    return null;\\r\\n}\\r\\nexports.getCorrelationContext = getCorrelationContext;\\r\\n/**\\r\\n * Returns a function that will get the same correlation context within its\\r\\n * function body as the code executing this function.\\r\\n * Use this method if automatic dependency correlation is not propagating\\r\\n * correctly to an asynchronous callback.\\r\\n */\\r\\nfunction wrapWithCorrelationContext(fn) {\\r\\n    return CorrelationContextManager.CorrelationContextManager.wrapCallback(fn);\\r\\n}\\r\\nexports.wrapWithCorrelationContext = wrapWithCorrelationContext;\\r\\n/**\\r\\n * The active configuration for global SDK behaviors, such as autocollection.\\r\\n */\\r\\nvar Configuration = (function () {\\r\\n    function Configuration() {\\r\\n    }\\r\\n    /**\\r\\n     * Sets the state of console and logger tracking (enabled by default for third-party loggers only)\\r\\n     * @param value if true logger activity will be sent to Application Insights\\r\\n     * @param collectConsoleLog if true, logger autocollection will include console.log calls (default false)\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setAutoCollectConsole = function (value, collectConsoleLog) {\\r\\n        if (collectConsoleLog === void 0) { collectConsoleLog = false; }\\r\\n        _isConsole = value;\\r\\n        _isConsoleLog = collectConsoleLog;\\r\\n        if (_isStarted) {\\r\\n            _console.enable(value, collectConsoleLog);\\r\\n        }\\r\\n        return Configuration;\\r\\n    };\\r\\n    /**\\r\\n     * Sets the state of exception tracking (enabled by default)\\r\\n     * @param value if true uncaught exceptions will be sent to Application Insights\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setAutoCollectExceptions = function (value) {\\r\\n        _isExceptions = value;\\r\\n        if (_isStarted) {\\r\\n            _exceptions.enable(value);\\r\\n        }\\r\\n        return Configuration;\\r\\n    };\\r\\n    /**\\r\\n     * Sets the state of performance tracking (enabled by default)\\r\\n     * @param value if true performance counters will be collected every second and sent to Application Insights\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setAutoCollectPerformance = function (value) {\\r\\n        _isPerformance = value;\\r\\n        if (_isStarted) {\\r\\n            _performance.enable(value);\\r\\n        }\\r\\n        return Configuration;\\r\\n    };\\r\\n    /**\\r\\n     * Sets the state of request tracking (enabled by default)\\r\\n     * @param value if true requests will be sent to Application Insights\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setAutoCollectRequests = function (value) {\\r\\n        _isRequests = value;\\r\\n        if (_isStarted) {\\r\\n            _serverRequests.enable(value);\\r\\n        }\\r\\n        return Configuration;\\r\\n    };\\r\\n    /**\\r\\n     * Sets the state of dependency tracking (enabled by default)\\r\\n     * @param value if true dependencies will be sent to Application Insights\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setAutoCollectDependencies = function (value) {\\r\\n        _isDependencies = value;\\r\\n        if (_isStarted) {\\r\\n            _clientRequests.enable(value);\\r\\n        }\\r\\n        return Configuration;\\r\\n    };\\r\\n    /**\\r\\n     * Sets the state of automatic dependency correlation (enabled by default)\\r\\n     * @param value if true dependencies will be correlated with requests\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setAutoDependencyCorrelation = function (value) {\\r\\n        _isCorrelating = value;\\r\\n        if (_isStarted) {\\r\\n            _serverRequests.useAutoCorrelation(value);\\r\\n        }\\r\\n        return Configuration;\\r\\n    };\\r\\n    /**\\r\\n     * Enable or disable disk-backed retry caching to cache events when client is offline (enabled by default)\\r\\n     * Note that this method only applies to the default client. Disk-backed retry caching is disabled by default for additional clients.\\r\\n     * For enable for additional clients, use client.channel.setUseDiskRetryCaching(true).\\r\\n     * These cached events are stored in your system or user's temporary directory and access restricted to your user when possible.\\r\\n     * @param value if true events that occured while client is offline will be cached on disk\\r\\n     * @param resendInterval The wait interval for resending cached events.\\r\\n     * @param maxBytesOnDisk The maximum size (in bytes) that the created temporary directory for cache events can grow to, before caching is disabled.\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setUseDiskRetryCaching = function (value, resendInterval, maxBytesOnDisk) {\\r\\n        _isDiskRetry = value;\\r\\n        _diskRetryInterval = resendInterval;\\r\\n        _diskRetryMaxBytes = maxBytesOnDisk;\\r\\n        if (exports.defaultClient && exports.defaultClient.channel) {\\r\\n            exports.defaultClient.channel.setUseDiskRetryCaching(value, resendInterval, maxBytesOnDisk);\\r\\n        }\\r\\n        return Configuration;\\r\\n    };\\r\\n    /**\\r\\n     * Enables debug and warning logging for AppInsights itself.\\r\\n     * @param enableDebugLogging if true, enables debug logging\\r\\n     * @param enableWarningLogging if true, enables warning logging\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Configuration.setInternalLogging = function (enableDebugLogging, enableWarningLogging) {\\r\\n        if (enableDebugLogging === void 0) { enableDebugLogging = false; }\\r\\n        if (enableWarningLogging === void 0) { enableWarningLogging = true; }\\r\\n        Logging.enableDebug = enableDebugLogging;\\r\\n        Logging.disableWarnings = !enableWarningLogging;\\r\\n        return Configuration;\\r\\n    };\\r\\n    // Convenience shortcut to ApplicationInsights.start\\r\\n    Configuration.start = start;\\r\\n    return Configuration;\\r\\n}());\\r\\nexports.Configuration = Configuration;\\r\\n/**\\r\\n * Disposes the default client and all the auto collectors so they can be reinitialized with different configuration\\r\\n*/\\r\\nfunction dispose() {\\r\\n    exports.defaultClient = null;\\r\\n    _isStarted = false;\\r\\n    if (_console) {\\r\\n        _console.dispose();\\r\\n    }\\r\\n    if (_exceptions) {\\r\\n        _exceptions.dispose();\\r\\n    }\\r\\n    if (_performance) {\\r\\n        _performance.dispose();\\r\\n    }\\r\\n    if (_serverRequests) {\\r\\n        _serverRequests.dispose();\\r\\n    }\\r\\n    if (_clientRequests) {\\r\\n        _clientRequests.dispose();\\r\\n    }\\r\\n}\\r\\nexports.dispose = dispose;\\r\\n//# sourceMappingURL=applicationinsights.js.map\",\"\\\"use strict\\\";\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar bunyan = require(\\\"./bunyan.pub\\\");\\r\\nexports.bunyan = bunyan;\\r\\nvar consolePub = require(\\\"./console.pub\\\");\\r\\nexports.console = consolePub;\\r\\nvar mongodbCore = require(\\\"./mongodb-core.pub\\\");\\r\\nexports.mongodbCore = mongodbCore;\\r\\nvar mongodb = require(\\\"./mongodb.pub\\\");\\r\\nexports.mongodb = mongodb;\\r\\nvar mysql = require(\\\"./mysql.pub\\\");\\r\\nexports.mysql = mysql;\\r\\nvar pgPool = require(\\\"./pg-pool.pub\\\");\\r\\nexports.pgPool = pgPool;\\r\\nvar pg = require(\\\"./pg.pub\\\");\\r\\nexports.pg = pg;\\r\\nvar redis = require(\\\"./redis.pub\\\");\\r\\nexports.redis = redis;\\r\\nvar winston = require(\\\"./winston.pub\\\");\\r\\nexports.winston = winston;\\r\\nfunction enable() {\\r\\n    bunyan.enable();\\r\\n    consolePub.enable();\\r\\n    mongodbCore.enable();\\r\\n    mongodb.enable();\\r\\n    mysql.enable();\\r\\n    pg.enable();\\r\\n    pgPool.enable();\\r\\n    redis.enable();\\r\\n    winston.enable();\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=index.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar bunyanPatchFunction = function (originalBunyan) {\\r\\n    var originalEmit = originalBunyan.prototype._emit;\\r\\n    originalBunyan.prototype._emit = function (rec, noemit) {\\r\\n        var ret = originalEmit.apply(this, arguments);\\r\\n        if (!noemit) {\\r\\n            var str = ret;\\r\\n            if (!str) {\\r\\n                str = originalEmit.call(this, rec, true);\\r\\n            }\\r\\n            diagnostic_channel_1.channel.publish(\\\"bunyan\\\", { level: rec.level, result: str });\\r\\n        }\\r\\n        return ret;\\r\\n    };\\r\\n    return originalBunyan;\\r\\n};\\r\\nexports.bunyan = {\\r\\n    versionSpecifier: \\\">= 1.0.0 < 2.0.0\\\",\\r\\n    patch: bunyanPatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"bunyan\\\", exports.bunyan);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=bunyan.pub.js.map\",\"exports = module.exports = SemVer;\\n\\n// The debug function is excluded entirely from the minified version.\\n/* nomin */ var debug;\\n/* nomin */ if (typeof process === 'object' &&\\n    /* nomin */ process.env &&\\n    /* nomin */ process.env.NODE_DEBUG &&\\n    /* nomin */ /\\\\bsemver\\\\b/i.test(process.env.NODE_DEBUG))\\n  /* nomin */ debug = function() {\\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\\n    /* nomin */ args.unshift('SEMVER');\\n    /* nomin */ console.log.apply(console, args);\\n    /* nomin */ };\\n/* nomin */ else\\n  /* nomin */ debug = function() {};\\n\\n// Note: this is the semver.org version of the spec that it implements\\n// Not necessarily the package version of this code.\\nexports.SEMVER_SPEC_VERSION = '2.0.0';\\n\\nvar MAX_LENGTH = 256;\\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\\n\\n// Max safe segment length for coercion.\\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\\n\\n// The actual regexps go on exports.re\\nvar re = exports.re = [];\\nvar src = exports.src = [];\\nvar R = 0;\\n\\n// The following Regular Expressions can be used for tokenizing,\\n// validating, and parsing SemVer version strings.\\n\\n// ## Numeric Identifier\\n// A single `0`, or a non-zero digit followed by zero or more digits.\\n\\nvar NUMERICIDENTIFIER = R++;\\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\\\\\d*';\\nvar NUMERICIDENTIFIERLOOSE = R++;\\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\\n\\n\\n// ## Non-numeric Identifier\\n// Zero or more digits, followed by a letter or hyphen, and then zero or\\n// more letters, digits, or hyphens.\\n\\nvar NONNUMERICIDENTIFIER = R++;\\nsrc[NONNUMERICIDENTIFIER] = '\\\\\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\\n\\n\\n// ## Main Version\\n// Three dot-separated numeric identifiers.\\n\\nvar MAINVERSION = R++;\\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\\\\\.' +\\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\\\\\.' +\\n                   '(' + src[NUMERICIDENTIFIER] + ')';\\n\\nvar MAINVERSIONLOOSE = R++;\\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\\\\\.' +\\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\\\\\.' +\\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\\n\\n// ## Pre-release Version Identifier\\n// A numeric identifier, or a non-numeric identifier.\\n\\nvar PRERELEASEIDENTIFIER = R++;\\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\\n\\nvar PRERELEASEIDENTIFIERLOOSE = R++;\\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\\n\\n\\n// ## Pre-release Version\\n// Hyphen, followed by one or more dot-separated pre-release version\\n// identifiers.\\n\\nvar PRERELEASE = R++;\\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\\n                  '(?:\\\\\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\\n\\nvar PRERELEASELOOSE = R++;\\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\\n                       '(?:\\\\\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\\n\\n// ## Build Metadata Identifier\\n// Any combination of digits, letters, or hyphens.\\n\\nvar BUILDIDENTIFIER = R++;\\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\\n\\n// ## Build Metadata\\n// Plus sign, followed by one or more period-separated build metadata\\n// identifiers.\\n\\nvar BUILD = R++;\\nsrc[BUILD] = '(?:\\\\\\\\+(' + src[BUILDIDENTIFIER] +\\n             '(?:\\\\\\\\.' + src[BUILDIDENTIFIER] + ')*))';\\n\\n\\n// ## Full Version String\\n// A main version, followed optionally by a pre-release version and\\n// build metadata.\\n\\n// Note that the only major, minor, patch, and pre-release sections of\\n// the version string are capturing groups.  The build metadata is not a\\n// capturing group, because it should not ever be used in version\\n// comparison.\\n\\nvar FULL = R++;\\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\\n                src[PRERELEASE] + '?' +\\n                src[BUILD] + '?';\\n\\nsrc[FULL] = '^' + FULLPLAIN + '$';\\n\\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\\n// common in the npm registry.\\nvar LOOSEPLAIN = '[v=\\\\\\\\s]*' + src[MAINVERSIONLOOSE] +\\n                 src[PRERELEASELOOSE] + '?' +\\n                 src[BUILD] + '?';\\n\\nvar LOOSE = R++;\\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\\n\\nvar GTLT = R++;\\nsrc[GTLT] = '((?:<|>)?=?)';\\n\\n// Something like \\\"2.*\\\" or \\\"1.2.x\\\".\\n// Note that \\\"x.x\\\" is a valid xRange identifer, meaning \\\"any version\\\"\\n// Only the first item is strictly required.\\nvar XRANGEIDENTIFIERLOOSE = R++;\\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\\\\\*';\\nvar XRANGEIDENTIFIER = R++;\\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\\\\\*';\\n\\nvar XRANGEPLAIN = R++;\\nsrc[XRANGEPLAIN] = '[v=\\\\\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\\n                   '(?:\\\\\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\\n                   '(?:\\\\\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\\n                   '(?:' + src[PRERELEASE] + ')?' +\\n                   src[BUILD] + '?' +\\n                   ')?)?';\\n\\nvar XRANGEPLAINLOOSE = R++;\\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\\n                        '(?:\\\\\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\\n                        '(?:\\\\\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\\n                        src[BUILD] + '?' +\\n                        ')?)?';\\n\\nvar XRANGE = R++;\\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\\\\\s*' + src[XRANGEPLAIN] + '$';\\nvar XRANGELOOSE = R++;\\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\\n\\n// Coercion.\\n// Extract anything that could conceivably be a part of a valid semver\\nvar COERCE = R++;\\nsrc[COERCE] = '(?:^|[^\\\\\\\\d])' +\\n              '(\\\\\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\\n              '(?:\\\\\\\\.(\\\\\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\\n              '(?:\\\\\\\\.(\\\\\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\\n              '(?:$|[^\\\\\\\\d])';\\n\\n// Tilde ranges.\\n// Meaning is \\\"reasonably at or greater than\\\"\\nvar LONETILDE = R++;\\nsrc[LONETILDE] = '(?:~>?)';\\n\\nvar TILDETRIM = R++;\\nsrc[TILDETRIM] = '(\\\\\\\\s*)' + src[LONETILDE] + '\\\\\\\\s+';\\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\\nvar tildeTrimReplace = '$1~';\\n\\nvar TILDE = R++;\\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\\nvar TILDELOOSE = R++;\\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\\n\\n// Caret ranges.\\n// Meaning is \\\"at least and backwards compatible with\\\"\\nvar LONECARET = R++;\\nsrc[LONECARET] = '(?:\\\\\\\\^)';\\n\\nvar CARETTRIM = R++;\\nsrc[CARETTRIM] = '(\\\\\\\\s*)' + src[LONECARET] + '\\\\\\\\s+';\\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\\nvar caretTrimReplace = '$1^';\\n\\nvar CARET = R++;\\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\\nvar CARETLOOSE = R++;\\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\\n\\n// A simple gt/lt/eq thing, or just \\\"\\\" to indicate \\\"any version\\\"\\nvar COMPARATORLOOSE = R++;\\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\\\\\s*(' + LOOSEPLAIN + ')$|^$';\\nvar COMPARATOR = R++;\\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\\\\\s*(' + FULLPLAIN + ')$|^$';\\n\\n\\n// An expression to strip any whitespace between the gtlt and the thing\\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\\nvar COMPARATORTRIM = R++;\\nsrc[COMPARATORTRIM] = '(\\\\\\\\s*)' + src[GTLT] +\\n                      '\\\\\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\\n\\n// this one has to use the /g flag\\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\\nvar comparatorTrimReplace = '$1$2$3';\\n\\n\\n// Something like `1.2.3 - 1.2.4`\\n// Note that these all use the loose form, because they'll be\\n// checked against either the strict or loose comparator form\\n// later.\\nvar HYPHENRANGE = R++;\\nsrc[HYPHENRANGE] = '^\\\\\\\\s*(' + src[XRANGEPLAIN] + ')' +\\n                   '\\\\\\\\s+-\\\\\\\\s+' +\\n                   '(' + src[XRANGEPLAIN] + ')' +\\n                   '\\\\\\\\s*$';\\n\\nvar HYPHENRANGELOOSE = R++;\\nsrc[HYPHENRANGELOOSE] = '^\\\\\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\\n                        '\\\\\\\\s+-\\\\\\\\s+' +\\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\\n                        '\\\\\\\\s*$';\\n\\n// Star ranges basically just allow anything at all.\\nvar STAR = R++;\\nsrc[STAR] = '(<|>)?=?\\\\\\\\s*\\\\\\\\*';\\n\\n// Compile to actual regexp objects.\\n// All are flag-free, unless they were created above with a flag.\\nfor (var i = 0; i < R; i++) {\\n  debug(i, src[i]);\\n  if (!re[i])\\n    re[i] = new RegExp(src[i]);\\n}\\n\\nexports.parse = parse;\\nfunction parse(version, loose) {\\n  if (version instanceof SemVer)\\n    return version;\\n\\n  if (typeof version !== 'string')\\n    return null;\\n\\n  if (version.length > MAX_LENGTH)\\n    return null;\\n\\n  var r = loose ? re[LOOSE] : re[FULL];\\n  if (!r.test(version))\\n    return null;\\n\\n  try {\\n    return new SemVer(version, loose);\\n  } catch (er) {\\n    return null;\\n  }\\n}\\n\\nexports.valid = valid;\\nfunction valid(version, loose) {\\n  var v = parse(version, loose);\\n  return v ? v.version : null;\\n}\\n\\n\\nexports.clean = clean;\\nfunction clean(version, loose) {\\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\\n  return s ? s.version : null;\\n}\\n\\nexports.SemVer = SemVer;\\n\\nfunction SemVer(version, loose) {\\n  if (version instanceof SemVer) {\\n    if (version.loose === loose)\\n      return version;\\n    else\\n      version = version.version;\\n  } else if (typeof version !== 'string') {\\n    throw new TypeError('Invalid Version: ' + version);\\n  }\\n\\n  if (version.length > MAX_LENGTH)\\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\\n\\n  if (!(this instanceof SemVer))\\n    return new SemVer(version, loose);\\n\\n  debug('SemVer', version, loose);\\n  this.loose = loose;\\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\\n\\n  if (!m)\\n    throw new TypeError('Invalid Version: ' + version);\\n\\n  this.raw = version;\\n\\n  // these are actually numbers\\n  this.major = +m[1];\\n  this.minor = +m[2];\\n  this.patch = +m[3];\\n\\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\\n    throw new TypeError('Invalid major version')\\n\\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\\n    throw new TypeError('Invalid minor version')\\n\\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\\n    throw new TypeError('Invalid patch version')\\n\\n  // numberify any prerelease numeric ids\\n  if (!m[4])\\n    this.prerelease = [];\\n  else\\n    this.prerelease = m[4].split('.').map(function(id) {\\n      if (/^[0-9]+$/.test(id)) {\\n        var num = +id;\\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\\n          return num;\\n      }\\n      return id;\\n    });\\n\\n  this.build = m[5] ? m[5].split('.') : [];\\n  this.format();\\n}\\n\\nSemVer.prototype.format = function() {\\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\\n  if (this.prerelease.length)\\n    this.version += '-' + this.prerelease.join('.');\\n  return this.version;\\n};\\n\\nSemVer.prototype.toString = function() {\\n  return this.version;\\n};\\n\\nSemVer.prototype.compare = function(other) {\\n  debug('SemVer.compare', this.version, this.loose, other);\\n  if (!(other instanceof SemVer))\\n    other = new SemVer(other, this.loose);\\n\\n  return this.compareMain(other) || this.comparePre(other);\\n};\\n\\nSemVer.prototype.compareMain = function(other) {\\n  if (!(other instanceof SemVer))\\n    other = new SemVer(other, this.loose);\\n\\n  return compareIdentifiers(this.major, other.major) ||\\n         compareIdentifiers(this.minor, other.minor) ||\\n         compareIdentifiers(this.patch, other.patch);\\n};\\n\\nSemVer.prototype.comparePre = function(other) {\\n  if (!(other instanceof SemVer))\\n    other = new SemVer(other, this.loose);\\n\\n  // NOT having a prerelease is > having one\\n  if (this.prerelease.length && !other.prerelease.length)\\n    return -1;\\n  else if (!this.prerelease.length && other.prerelease.length)\\n    return 1;\\n  else if (!this.prerelease.length && !other.prerelease.length)\\n    return 0;\\n\\n  var i = 0;\\n  do {\\n    var a = this.prerelease[i];\\n    var b = other.prerelease[i];\\n    debug('prerelease compare', i, a, b);\\n    if (a === undefined && b === undefined)\\n      return 0;\\n    else if (b === undefined)\\n      return 1;\\n    else if (a === undefined)\\n      return -1;\\n    else if (a === b)\\n      continue;\\n    else\\n      return compareIdentifiers(a, b);\\n  } while (++i);\\n};\\n\\n// preminor will bump the version up to the next minor release, and immediately\\n// down to pre-release. premajor and prepatch work the same way.\\nSemVer.prototype.inc = function(release, identifier) {\\n  switch (release) {\\n    case 'premajor':\\n      this.prerelease.length = 0;\\n      this.patch = 0;\\n      this.minor = 0;\\n      this.major++;\\n      this.inc('pre', identifier);\\n      break;\\n    case 'preminor':\\n      this.prerelease.length = 0;\\n      this.patch = 0;\\n      this.minor++;\\n      this.inc('pre', identifier);\\n      break;\\n    case 'prepatch':\\n      // If this is already a prerelease, it will bump to the next version\\n      // drop any prereleases that might already exist, since they are not\\n      // relevant at this point.\\n      this.prerelease.length = 0;\\n      this.inc('patch', identifier);\\n      this.inc('pre', identifier);\\n      break;\\n    // If the input is a non-prerelease version, this acts the same as\\n    // prepatch.\\n    case 'prerelease':\\n      if (this.prerelease.length === 0)\\n        this.inc('patch', identifier);\\n      this.inc('pre', identifier);\\n      break;\\n\\n    case 'major':\\n      // If this is a pre-major version, bump up to the same major version.\\n      // Otherwise increment major.\\n      // 1.0.0-5 bumps to 1.0.0\\n      // 1.1.0 bumps to 2.0.0\\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\\n        this.major++;\\n      this.minor = 0;\\n      this.patch = 0;\\n      this.prerelease = [];\\n      break;\\n    case 'minor':\\n      // If this is a pre-minor version, bump up to the same minor version.\\n      // Otherwise increment minor.\\n      // 1.2.0-5 bumps to 1.2.0\\n      // 1.2.1 bumps to 1.3.0\\n      if (this.patch !== 0 || this.prerelease.length === 0)\\n        this.minor++;\\n      this.patch = 0;\\n      this.prerelease = [];\\n      break;\\n    case 'patch':\\n      // If this is not a pre-release version, it will increment the patch.\\n      // If it is a pre-release it will bump up to the same patch version.\\n      // 1.2.0-5 patches to 1.2.0\\n      // 1.2.0 patches to 1.2.1\\n      if (this.prerelease.length === 0)\\n        this.patch++;\\n      this.prerelease = [];\\n      break;\\n    // This probably shouldn't be used publicly.\\n    // 1.0.0 \\\"pre\\\" would become 1.0.0-0 which is the wrong direction.\\n    case 'pre':\\n      if (this.prerelease.length === 0)\\n        this.prerelease = [0];\\n      else {\\n        var i = this.prerelease.length;\\n        while (--i >= 0) {\\n          if (typeof this.prerelease[i] === 'number') {\\n            this.prerelease[i]++;\\n            i = -2;\\n          }\\n        }\\n        if (i === -1) // didn't increment anything\\n          this.prerelease.push(0);\\n      }\\n      if (identifier) {\\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\\n        if (this.prerelease[0] === identifier) {\\n          if (isNaN(this.prerelease[1]))\\n            this.prerelease = [identifier, 0];\\n        } else\\n          this.prerelease = [identifier, 0];\\n      }\\n      break;\\n\\n    default:\\n      throw new Error('invalid increment argument: ' + release);\\n  }\\n  this.format();\\n  this.raw = this.version;\\n  return this;\\n};\\n\\nexports.inc = inc;\\nfunction inc(version, release, loose, identifier) {\\n  if (typeof(loose) === 'string') {\\n    identifier = loose;\\n    loose = undefined;\\n  }\\n\\n  try {\\n    return new SemVer(version, loose).inc(release, identifier).version;\\n  } catch (er) {\\n    return null;\\n  }\\n}\\n\\nexports.diff = diff;\\nfunction diff(version1, version2) {\\n  if (eq(version1, version2)) {\\n    return null;\\n  } else {\\n    var v1 = parse(version1);\\n    var v2 = parse(version2);\\n    if (v1.prerelease.length || v2.prerelease.length) {\\n      for (var key in v1) {\\n        if (key === 'major' || key === 'minor' || key === 'patch') {\\n          if (v1[key] !== v2[key]) {\\n            return 'pre'+key;\\n          }\\n        }\\n      }\\n      return 'prerelease';\\n    }\\n    for (var key in v1) {\\n      if (key === 'major' || key === 'minor' || key === 'patch') {\\n        if (v1[key] !== v2[key]) {\\n          return key;\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nexports.compareIdentifiers = compareIdentifiers;\\n\\nvar numeric = /^[0-9]+$/;\\nfunction compareIdentifiers(a, b) {\\n  var anum = numeric.test(a);\\n  var bnum = numeric.test(b);\\n\\n  if (anum && bnum) {\\n    a = +a;\\n    b = +b;\\n  }\\n\\n  return (anum && !bnum) ? -1 :\\n         (bnum && !anum) ? 1 :\\n         a < b ? -1 :\\n         a > b ? 1 :\\n         0;\\n}\\n\\nexports.rcompareIdentifiers = rcompareIdentifiers;\\nfunction rcompareIdentifiers(a, b) {\\n  return compareIdentifiers(b, a);\\n}\\n\\nexports.major = major;\\nfunction major(a, loose) {\\n  return new SemVer(a, loose).major;\\n}\\n\\nexports.minor = minor;\\nfunction minor(a, loose) {\\n  return new SemVer(a, loose).minor;\\n}\\n\\nexports.patch = patch;\\nfunction patch(a, loose) {\\n  return new SemVer(a, loose).patch;\\n}\\n\\nexports.compare = compare;\\nfunction compare(a, b, loose) {\\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\\n}\\n\\nexports.compareLoose = compareLoose;\\nfunction compareLoose(a, b) {\\n  return compare(a, b, true);\\n}\\n\\nexports.rcompare = rcompare;\\nfunction rcompare(a, b, loose) {\\n  return compare(b, a, loose);\\n}\\n\\nexports.sort = sort;\\nfunction sort(list, loose) {\\n  return list.sort(function(a, b) {\\n    return exports.compare(a, b, loose);\\n  });\\n}\\n\\nexports.rsort = rsort;\\nfunction rsort(list, loose) {\\n  return list.sort(function(a, b) {\\n    return exports.rcompare(a, b, loose);\\n  });\\n}\\n\\nexports.gt = gt;\\nfunction gt(a, b, loose) {\\n  return compare(a, b, loose) > 0;\\n}\\n\\nexports.lt = lt;\\nfunction lt(a, b, loose) {\\n  return compare(a, b, loose) < 0;\\n}\\n\\nexports.eq = eq;\\nfunction eq(a, b, loose) {\\n  return compare(a, b, loose) === 0;\\n}\\n\\nexports.neq = neq;\\nfunction neq(a, b, loose) {\\n  return compare(a, b, loose) !== 0;\\n}\\n\\nexports.gte = gte;\\nfunction gte(a, b, loose) {\\n  return compare(a, b, loose) >= 0;\\n}\\n\\nexports.lte = lte;\\nfunction lte(a, b, loose) {\\n  return compare(a, b, loose) <= 0;\\n}\\n\\nexports.cmp = cmp;\\nfunction cmp(a, op, b, loose) {\\n  var ret;\\n  switch (op) {\\n    case '===':\\n      if (typeof a === 'object') a = a.version;\\n      if (typeof b === 'object') b = b.version;\\n      ret = a === b;\\n      break;\\n    case '!==':\\n      if (typeof a === 'object') a = a.version;\\n      if (typeof b === 'object') b = b.version;\\n      ret = a !== b;\\n      break;\\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\\n    case '!=': ret = neq(a, b, loose); break;\\n    case '>': ret = gt(a, b, loose); break;\\n    case '>=': ret = gte(a, b, loose); break;\\n    case '<': ret = lt(a, b, loose); break;\\n    case '<=': ret = lte(a, b, loose); break;\\n    default: throw new TypeError('Invalid operator: ' + op);\\n  }\\n  return ret;\\n}\\n\\nexports.Comparator = Comparator;\\nfunction Comparator(comp, loose) {\\n  if (comp instanceof Comparator) {\\n    if (comp.loose === loose)\\n      return comp;\\n    else\\n      comp = comp.value;\\n  }\\n\\n  if (!(this instanceof Comparator))\\n    return new Comparator(comp, loose);\\n\\n  debug('comparator', comp, loose);\\n  this.loose = loose;\\n  this.parse(comp);\\n\\n  if (this.semver === ANY)\\n    this.value = '';\\n  else\\n    this.value = this.operator + this.semver.version;\\n\\n  debug('comp', this);\\n}\\n\\nvar ANY = {};\\nComparator.prototype.parse = function(comp) {\\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\\n  var m = comp.match(r);\\n\\n  if (!m)\\n    throw new TypeError('Invalid comparator: ' + comp);\\n\\n  this.operator = m[1];\\n  if (this.operator === '=')\\n    this.operator = '';\\n\\n  // if it literally is just '>' or '' then allow anything.\\n  if (!m[2])\\n    this.semver = ANY;\\n  else\\n    this.semver = new SemVer(m[2], this.loose);\\n};\\n\\nComparator.prototype.toString = function() {\\n  return this.value;\\n};\\n\\nComparator.prototype.test = function(version) {\\n  debug('Comparator.test', version, this.loose);\\n\\n  if (this.semver === ANY)\\n    return true;\\n\\n  if (typeof version === 'string')\\n    version = new SemVer(version, this.loose);\\n\\n  return cmp(version, this.operator, this.semver, this.loose);\\n};\\n\\nComparator.prototype.intersects = function(comp, loose) {\\n  if (!(comp instanceof Comparator)) {\\n    throw new TypeError('a Comparator is required');\\n  }\\n\\n  var rangeTmp;\\n\\n  if (this.operator === '') {\\n    rangeTmp = new Range(comp.value, loose);\\n    return satisfies(this.value, rangeTmp, loose);\\n  } else if (comp.operator === '') {\\n    rangeTmp = new Range(this.value, loose);\\n    return satisfies(comp.semver, rangeTmp, loose);\\n  }\\n\\n  var sameDirectionIncreasing =\\n    (this.operator === '>=' || this.operator === '>') &&\\n    (comp.operator === '>=' || comp.operator === '>');\\n  var sameDirectionDecreasing =\\n    (this.operator === '<=' || this.operator === '<') &&\\n    (comp.operator === '<=' || comp.operator === '<');\\n  var sameSemVer = this.semver.version === comp.semver.version;\\n  var differentDirectionsInclusive =\\n    (this.operator === '>=' || this.operator === '<=') &&\\n    (comp.operator === '>=' || comp.operator === '<=');\\n  var oppositeDirectionsLessThan =\\n    cmp(this.semver, '<', comp.semver, loose) &&\\n    ((this.operator === '>=' || this.operator === '>') &&\\n    (comp.operator === '<=' || comp.operator === '<'));\\n  var oppositeDirectionsGreaterThan =\\n    cmp(this.semver, '>', comp.semver, loose) &&\\n    ((this.operator === '<=' || this.operator === '<') &&\\n    (comp.operator === '>=' || comp.operator === '>'));\\n\\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\\n    (sameSemVer && differentDirectionsInclusive) ||\\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\\n};\\n\\n\\nexports.Range = Range;\\nfunction Range(range, loose) {\\n  if (range instanceof Range) {\\n    if (range.loose === loose) {\\n      return range;\\n    } else {\\n      return new Range(range.raw, loose);\\n    }\\n  }\\n\\n  if (range instanceof Comparator) {\\n    return new Range(range.value, loose);\\n  }\\n\\n  if (!(this instanceof Range))\\n    return new Range(range, loose);\\n\\n  this.loose = loose;\\n\\n  // First, split based on boolean or ||\\n  this.raw = range;\\n  this.set = range.split(/\\\\s*\\\\|\\\\|\\\\s*/).map(function(range) {\\n    return this.parseRange(range.trim());\\n  }, this).filter(function(c) {\\n    // throw out any that are not relevant for whatever reason\\n    return c.length;\\n  });\\n\\n  if (!this.set.length) {\\n    throw new TypeError('Invalid SemVer Range: ' + range);\\n  }\\n\\n  this.format();\\n}\\n\\nRange.prototype.format = function() {\\n  this.range = this.set.map(function(comps) {\\n    return comps.join(' ').trim();\\n  }).join('||').trim();\\n  return this.range;\\n};\\n\\nRange.prototype.toString = function() {\\n  return this.range;\\n};\\n\\nRange.prototype.parseRange = function(range) {\\n  var loose = this.loose;\\n  range = range.trim();\\n  debug('range', range, loose);\\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\\n  range = range.replace(hr, hyphenReplace);\\n  debug('hyphen replace', range);\\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\\n  debug('comparator trim', range, re[COMPARATORTRIM]);\\n\\n  // `~ 1.2.3` => `~1.2.3`\\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\\n\\n  // `^ 1.2.3` => `^1.2.3`\\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\\n\\n  // normalize spaces\\n  range = range.split(/\\\\s+/).join(' ');\\n\\n  // At this point, the range is completely trimmed and\\n  // ready to be split into comparators.\\n\\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\\n  var set = range.split(' ').map(function(comp) {\\n    return parseComparator(comp, loose);\\n  }).join(' ').split(/\\\\s+/);\\n  if (this.loose) {\\n    // in loose mode, throw out any that are not valid comparators\\n    set = set.filter(function(comp) {\\n      return !!comp.match(compRe);\\n    });\\n  }\\n  set = set.map(function(comp) {\\n    return new Comparator(comp, loose);\\n  });\\n\\n  return set;\\n};\\n\\nRange.prototype.intersects = function(range, loose) {\\n  if (!(range instanceof Range)) {\\n    throw new TypeError('a Range is required');\\n  }\\n\\n  return this.set.some(function(thisComparators) {\\n    return thisComparators.every(function(thisComparator) {\\n      return range.set.some(function(rangeComparators) {\\n        return rangeComparators.every(function(rangeComparator) {\\n          return thisComparator.intersects(rangeComparator, loose);\\n        });\\n      });\\n    });\\n  });\\n};\\n\\n// Mostly just for testing and legacy API reasons\\nexports.toComparators = toComparators;\\nfunction toComparators(range, loose) {\\n  return new Range(range, loose).set.map(function(comp) {\\n    return comp.map(function(c) {\\n      return c.value;\\n    }).join(' ').trim().split(' ');\\n  });\\n}\\n\\n// comprised of xranges, tildes, stars, and gtlt's at this point.\\n// already replaced the hyphen ranges\\n// turn into a set of JUST comparators.\\nfunction parseComparator(comp, loose) {\\n  debug('comp', comp);\\n  comp = replaceCarets(comp, loose);\\n  debug('caret', comp);\\n  comp = replaceTildes(comp, loose);\\n  debug('tildes', comp);\\n  comp = replaceXRanges(comp, loose);\\n  debug('xrange', comp);\\n  comp = replaceStars(comp, loose);\\n  debug('stars', comp);\\n  return comp;\\n}\\n\\nfunction isX(id) {\\n  return !id || id.toLowerCase() === 'x' || id === '*';\\n}\\n\\n// ~, ~> --> * (any, kinda silly)\\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\\nfunction replaceTildes(comp, loose) {\\n  return comp.trim().split(/\\\\s+/).map(function(comp) {\\n    return replaceTilde(comp, loose);\\n  }).join(' ');\\n}\\n\\nfunction replaceTilde(comp, loose) {\\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\\n  return comp.replace(r, function(_, M, m, p, pr) {\\n    debug('tilde', comp, _, M, m, p, pr);\\n    var ret;\\n\\n    if (isX(M))\\n      ret = '';\\n    else if (isX(m))\\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\\n    else if (isX(p))\\n      // ~1.2 == >=1.2.0 <1.3.0\\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\\n    else if (pr) {\\n      debug('replaceTilde pr', pr);\\n      if (pr.charAt(0) !== '-')\\n        pr = '-' + pr;\\n      ret = '>=' + M + '.' + m + '.' + p + pr +\\n            ' <' + M + '.' + (+m + 1) + '.0';\\n    } else\\n      // ~1.2.3 == >=1.2.3 <1.3.0\\n      ret = '>=' + M + '.' + m + '.' + p +\\n            ' <' + M + '.' + (+m + 1) + '.0';\\n\\n    debug('tilde return', ret);\\n    return ret;\\n  });\\n}\\n\\n// ^ --> * (any, kinda silly)\\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\\n// ^1.2.3 --> >=1.2.3 <2.0.0\\n// ^1.2.0 --> >=1.2.0 <2.0.0\\nfunction replaceCarets(comp, loose) {\\n  return comp.trim().split(/\\\\s+/).map(function(comp) {\\n    return replaceCaret(comp, loose);\\n  }).join(' ');\\n}\\n\\nfunction replaceCaret(comp, loose) {\\n  debug('caret', comp, loose);\\n  var r = loose ? re[CARETLOOSE] : re[CARET];\\n  return comp.replace(r, function(_, M, m, p, pr) {\\n    debug('caret', comp, _, M, m, p, pr);\\n    var ret;\\n\\n    if (isX(M))\\n      ret = '';\\n    else if (isX(m))\\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\\n    else if (isX(p)) {\\n      if (M === '0')\\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\\n      else\\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\\n    } else if (pr) {\\n      debug('replaceCaret pr', pr);\\n      if (pr.charAt(0) !== '-')\\n        pr = '-' + pr;\\n      if (M === '0') {\\n        if (m === '0')\\n          ret = '>=' + M + '.' + m + '.' + p + pr +\\n                ' <' + M + '.' + m + '.' + (+p + 1);\\n        else\\n          ret = '>=' + M + '.' + m + '.' + p + pr +\\n                ' <' + M + '.' + (+m + 1) + '.0';\\n      } else\\n        ret = '>=' + M + '.' + m + '.' + p + pr +\\n              ' <' + (+M + 1) + '.0.0';\\n    } else {\\n      debug('no pr');\\n      if (M === '0') {\\n        if (m === '0')\\n          ret = '>=' + M + '.' + m + '.' + p +\\n                ' <' + M + '.' + m + '.' + (+p + 1);\\n        else\\n          ret = '>=' + M + '.' + m + '.' + p +\\n                ' <' + M + '.' + (+m + 1) + '.0';\\n      } else\\n        ret = '>=' + M + '.' + m + '.' + p +\\n              ' <' + (+M + 1) + '.0.0';\\n    }\\n\\n    debug('caret return', ret);\\n    return ret;\\n  });\\n}\\n\\nfunction replaceXRanges(comp, loose) {\\n  debug('replaceXRanges', comp, loose);\\n  return comp.split(/\\\\s+/).map(function(comp) {\\n    return replaceXRange(comp, loose);\\n  }).join(' ');\\n}\\n\\nfunction replaceXRange(comp, loose) {\\n  comp = comp.trim();\\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\\n    var xM = isX(M);\\n    var xm = xM || isX(m);\\n    var xp = xm || isX(p);\\n    var anyX = xp;\\n\\n    if (gtlt === '=' && anyX)\\n      gtlt = '';\\n\\n    if (xM) {\\n      if (gtlt === '>' || gtlt === '<') {\\n        // nothing is allowed\\n        ret = '<0.0.0';\\n      } else {\\n        // nothing is forbidden\\n        ret = '*';\\n      }\\n    } else if (gtlt && anyX) {\\n      // replace X with 0\\n      if (xm)\\n        m = 0;\\n      if (xp)\\n        p = 0;\\n\\n      if (gtlt === '>') {\\n        // >1 => >=2.0.0\\n        // >1.2 => >=1.3.0\\n        // >1.2.3 => >= 1.2.4\\n        gtlt = '>=';\\n        if (xm) {\\n          M = +M + 1;\\n          m = 0;\\n          p = 0;\\n        } else if (xp) {\\n          m = +m + 1;\\n          p = 0;\\n        }\\n      } else if (gtlt === '<=') {\\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\\n        gtlt = '<';\\n        if (xm)\\n          M = +M + 1;\\n        else\\n          m = +m + 1;\\n      }\\n\\n      ret = gtlt + M + '.' + m + '.' + p;\\n    } else if (xm) {\\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\\n    } else if (xp) {\\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\\n    }\\n\\n    debug('xRange return', ret);\\n\\n    return ret;\\n  });\\n}\\n\\n// Because * is AND-ed with everything else in the comparator,\\n// and '' means \\\"any version\\\", just remove the *s entirely.\\nfunction replaceStars(comp, loose) {\\n  debug('replaceStars', comp, loose);\\n  // Looseness is ignored here.  star is always as loose as it gets!\\n  return comp.trim().replace(re[STAR], '');\\n}\\n\\n// This function is passed to string.replace(re[HYPHENRANGE])\\n// M, m, patch, prerelease, build\\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\\nfunction hyphenReplace($0,\\n                       from, fM, fm, fp, fpr, fb,\\n                       to, tM, tm, tp, tpr, tb) {\\n\\n  if (isX(fM))\\n    from = '';\\n  else if (isX(fm))\\n    from = '>=' + fM + '.0.0';\\n  else if (isX(fp))\\n    from = '>=' + fM + '.' + fm + '.0';\\n  else\\n    from = '>=' + from;\\n\\n  if (isX(tM))\\n    to = '';\\n  else if (isX(tm))\\n    to = '<' + (+tM + 1) + '.0.0';\\n  else if (isX(tp))\\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\\n  else if (tpr)\\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\\n  else\\n    to = '<=' + to;\\n\\n  return (from + ' ' + to).trim();\\n}\\n\\n\\n// if ANY of the sets match ALL of its comparators, then pass\\nRange.prototype.test = function(version) {\\n  if (!version)\\n    return false;\\n\\n  if (typeof version === 'string')\\n    version = new SemVer(version, this.loose);\\n\\n  for (var i = 0; i < this.set.length; i++) {\\n    if (testSet(this.set[i], version))\\n      return true;\\n  }\\n  return false;\\n};\\n\\nfunction testSet(set, version) {\\n  for (var i = 0; i < set.length; i++) {\\n    if (!set[i].test(version))\\n      return false;\\n  }\\n\\n  if (version.prerelease.length) {\\n    // Find the set of versions that are allowed to have prereleases\\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\\n    // That should allow `1.2.3-pr.2` to pass.\\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\\n    // even though it's within the range set by the comparators.\\n    for (var i = 0; i < set.length; i++) {\\n      debug(set[i].semver);\\n      if (set[i].semver === ANY)\\n        continue;\\n\\n      if (set[i].semver.prerelease.length > 0) {\\n        var allowed = set[i].semver;\\n        if (allowed.major === version.major &&\\n            allowed.minor === version.minor &&\\n            allowed.patch === version.patch)\\n          return true;\\n      }\\n    }\\n\\n    // Version has a -pre, but it's not one of the ones we like.\\n    return false;\\n  }\\n\\n  return true;\\n}\\n\\nexports.satisfies = satisfies;\\nfunction satisfies(version, range, loose) {\\n  try {\\n    range = new Range(range, loose);\\n  } catch (er) {\\n    return false;\\n  }\\n  return range.test(version);\\n}\\n\\nexports.maxSatisfying = maxSatisfying;\\nfunction maxSatisfying(versions, range, loose) {\\n  var max = null;\\n  var maxSV = null;\\n  try {\\n    var rangeObj = new Range(range, loose);\\n  } catch (er) {\\n    return null;\\n  }\\n  versions.forEach(function (v) {\\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\\n        max = v;\\n        maxSV = new SemVer(max, loose);\\n      }\\n    }\\n  })\\n  return max;\\n}\\n\\nexports.minSatisfying = minSatisfying;\\nfunction minSatisfying(versions, range, loose) {\\n  var min = null;\\n  var minSV = null;\\n  try {\\n    var rangeObj = new Range(range, loose);\\n  } catch (er) {\\n    return null;\\n  }\\n  versions.forEach(function (v) {\\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\\n        min = v;\\n        minSV = new SemVer(min, loose);\\n      }\\n    }\\n  })\\n  return min;\\n}\\n\\nexports.validRange = validRange;\\nfunction validRange(range, loose) {\\n  try {\\n    // Return '*' instead of '' so that truthiness works.\\n    // This will throw if it's invalid anyway\\n    return new Range(range, loose).range || '*';\\n  } catch (er) {\\n    return null;\\n  }\\n}\\n\\n// Determine if version is less than all the versions possible in the range\\nexports.ltr = ltr;\\nfunction ltr(version, range, loose) {\\n  return outside(version, range, '<', loose);\\n}\\n\\n// Determine if version is greater than all the versions possible in the range.\\nexports.gtr = gtr;\\nfunction gtr(version, range, loose) {\\n  return outside(version, range, '>', loose);\\n}\\n\\nexports.outside = outside;\\nfunction outside(version, range, hilo, loose) {\\n  version = new SemVer(version, loose);\\n  range = new Range(range, loose);\\n\\n  var gtfn, ltefn, ltfn, comp, ecomp;\\n  switch (hilo) {\\n    case '>':\\n      gtfn = gt;\\n      ltefn = lte;\\n      ltfn = lt;\\n      comp = '>';\\n      ecomp = '>=';\\n      break;\\n    case '<':\\n      gtfn = lt;\\n      ltefn = gte;\\n      ltfn = gt;\\n      comp = '<';\\n      ecomp = '<=';\\n      break;\\n    default:\\n      throw new TypeError('Must provide a hilo val of \\\"<\\\" or \\\">\\\"');\\n  }\\n\\n  // If it satisifes the range it is not outside\\n  if (satisfies(version, range, loose)) {\\n    return false;\\n  }\\n\\n  // From now on, variable terms are as if we're in \\\"gtr\\\" mode.\\n  // but note that everything is flipped for the \\\"ltr\\\" function.\\n\\n  for (var i = 0; i < range.set.length; ++i) {\\n    var comparators = range.set[i];\\n\\n    var high = null;\\n    var low = null;\\n\\n    comparators.forEach(function(comparator) {\\n      if (comparator.semver === ANY) {\\n        comparator = new Comparator('>=0.0.0')\\n      }\\n      high = high || comparator;\\n      low = low || comparator;\\n      if (gtfn(comparator.semver, high.semver, loose)) {\\n        high = comparator;\\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\\n        low = comparator;\\n      }\\n    });\\n\\n    // If the edge version comparator has a operator then our version\\n    // isn't outside it\\n    if (high.operator === comp || high.operator === ecomp) {\\n      return false;\\n    }\\n\\n    // If the lowest version comparator has an operator and our version\\n    // is less than it then it isn't higher than the range\\n    if ((!low.operator || low.operator === comp) &&\\n        ltefn(version, low.semver)) {\\n      return false;\\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\n\\nexports.prerelease = prerelease;\\nfunction prerelease(version, loose) {\\n  var parsed = parse(version, loose);\\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\\n}\\n\\nexports.intersects = intersects;\\nfunction intersects(r1, r2, loose) {\\n  r1 = new Range(r1, loose)\\n  r2 = new Range(r2, loose)\\n  return r1.intersects(r2)\\n}\\n\\nexports.coerce = coerce;\\nfunction coerce(version) {\\n  if (version instanceof SemVer)\\n    return version;\\n\\n  if (typeof version !== 'string')\\n    return null;\\n\\n  var match = version.match(re[COERCE]);\\n\\n  if (match == null)\\n    return null;\\n\\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \\n}\\n\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar stream_1 = require(\\\"stream\\\");\\r\\nvar consolePatchFunction = function (originalConsole) {\\r\\n    var aiLoggingOutStream = new stream_1.Writable();\\r\\n    var aiLoggingErrStream = new stream_1.Writable();\\r\\n    // Default console is roughly equivalent to `new Console(process.stdout, process.stderr)`\\r\\n    // We create a version which publishes to the channel and also to stdout/stderr\\r\\n    aiLoggingOutStream.write = function (chunk) {\\r\\n        if (!chunk) {\\r\\n            return true;\\r\\n        }\\r\\n        var message = chunk.toString();\\r\\n        diagnostic_channel_1.channel.publish(\\\"console\\\", { message: message });\\r\\n        return true;\\r\\n    };\\r\\n    aiLoggingErrStream.write = function (chunk) {\\r\\n        if (!chunk) {\\r\\n            return true;\\r\\n        }\\r\\n        var message = chunk.toString();\\r\\n        diagnostic_channel_1.channel.publish(\\\"console\\\", { message: message, stderr: true });\\r\\n        return true;\\r\\n    };\\r\\n    var aiLoggingConsole = new originalConsole.Console(aiLoggingOutStream, aiLoggingErrStream);\\r\\n    var consoleMethods = [\\\"log\\\", \\\"info\\\", \\\"warn\\\", \\\"error\\\", \\\"dir\\\", \\\"time\\\", \\\"timeEnd\\\", \\\"trace\\\", \\\"assert\\\"];\\r\\n    var _loop_1 = function (method) {\\r\\n        var originalMethod = originalConsole[method];\\r\\n        if (originalMethod) {\\r\\n            originalConsole[method] = function () {\\r\\n                if (aiLoggingConsole[method]) {\\r\\n                    try {\\r\\n                        aiLoggingConsole[method].apply(aiLoggingConsole, arguments);\\r\\n                    }\\r\\n                    catch (e) {\\r\\n                        // Ignore errors; allow the original method to throw if necessary\\r\\n                    }\\r\\n                }\\r\\n                return originalMethod.apply(originalConsole, arguments);\\r\\n            };\\r\\n        }\\r\\n    };\\r\\n    for (var _i = 0, consoleMethods_1 = consoleMethods; _i < consoleMethods_1.length; _i++) {\\r\\n        var method = consoleMethods_1[_i];\\r\\n        _loop_1(method);\\r\\n    }\\r\\n    return originalConsole;\\r\\n};\\r\\nexports.console = {\\r\\n    versionSpecifier: \\\">= 4.0.0\\\",\\r\\n    patch: consolePatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"console\\\", exports.console);\\r\\n    // Force patching of console\\r\\n    /* tslint:disable-next-line:no-var-requires */\\r\\n    require(\\\"console\\\");\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=console.pub.js.map\",\"module.exports = require(\\\"console\\\");\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar mongodbcorePatchFunction = function (originalMongoCore) {\\r\\n    var originalConnect = originalMongoCore.Server.prototype.connect;\\r\\n    originalMongoCore.Server.prototype.connect = function contextPreservingConnect() {\\r\\n        var ret = originalConnect.apply(this, arguments);\\r\\n        // Messages sent to mongo progress through a pool\\r\\n        // This can result in context getting mixed between different responses\\r\\n        // so we wrap the callbacks to restore appropriate state\\r\\n        var originalWrite = this.s.pool.write;\\r\\n        this.s.pool.write = function contextPreservingWrite() {\\r\\n            var cbidx = typeof arguments[1] === \\\"function\\\" ? 1 : 2;\\r\\n            if (typeof arguments[cbidx] === \\\"function\\\") {\\r\\n                arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(arguments[cbidx]);\\r\\n            }\\r\\n            return originalWrite.apply(this, arguments);\\r\\n        };\\r\\n        // Logout is a special case, it doesn't call the write function but instead\\r\\n        // directly calls into connection.write\\r\\n        var originalLogout = this.s.pool.logout;\\r\\n        this.s.pool.logout = function contextPreservingLogout() {\\r\\n            if (typeof arguments[1] === \\\"function\\\") {\\r\\n                arguments[1] = diagnostic_channel_1.channel.bindToContext(arguments[1]);\\r\\n            }\\r\\n            return originalLogout.apply(this, arguments);\\r\\n        };\\r\\n        return ret;\\r\\n    };\\r\\n    return originalMongoCore;\\r\\n};\\r\\nexports.mongoCore2 = {\\r\\n    versionSpecifier: \\\">= 2.0.0 < 2.2.0\\\",\\r\\n    patch: mongodbcorePatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"mongodb-core\\\", exports.mongoCore2);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=mongodb-core.pub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar mongodbPatchFunction = function (originalMongo) {\\r\\n    var listener = originalMongo.instrument({\\r\\n        operationIdGenerator: {\\r\\n            next: function () {\\r\\n                return diagnostic_channel_1.channel.bindToContext(function (cb) { return cb(); });\\r\\n            },\\r\\n        },\\r\\n    });\\r\\n    var eventMap = {};\\r\\n    listener.on(\\\"started\\\", function (event) {\\r\\n        if (eventMap[event.requestId]) {\\r\\n            // Note: Mongo can generate 2 completely separate requests\\r\\n            // which share the same requestId, if a certain race condition is triggered.\\r\\n            // For now, we accept that this can happen and potentially miss or mislabel some events.\\r\\n            return;\\r\\n        }\\r\\n        eventMap[event.requestId] = event;\\r\\n    });\\r\\n    listener.on(\\\"succeeded\\\", function (event) {\\r\\n        var startedData = eventMap[event.requestId];\\r\\n        if (startedData) {\\r\\n            delete eventMap[event.requestId];\\r\\n        }\\r\\n        event.operationId(function () { return diagnostic_channel_1.channel.publish(\\\"mongodb\\\", { startedData: startedData, event: event, succeeded: true }); });\\r\\n    });\\r\\n    listener.on(\\\"failed\\\", function (event) {\\r\\n        var startedData = eventMap[event.requestId];\\r\\n        if (startedData) {\\r\\n            delete eventMap[event.requestId];\\r\\n        }\\r\\n        event.operationId(function () { return diagnostic_channel_1.channel.publish(\\\"mongodb\\\", { startedData: startedData, event: event, succeeded: false }); });\\r\\n    });\\r\\n    return originalMongo;\\r\\n};\\r\\nexports.mongo2 = {\\r\\n    versionSpecifier: \\\">= 2.0.0 <= 2.2.x\\\",\\r\\n    patch: mongodbPatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"mongodb\\\", exports.mongo2);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=mongodb.pub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar path = require(\\\"path\\\");\\r\\nvar mysqlPatchFunction = function (originalMysql, originalMysqlPath) {\\r\\n    // The `name` passed in here is for debugging purposes,\\r\\n    // to help distinguish which object is being patched.\\r\\n    var patchObjectFunction = function (obj, name) {\\r\\n        return function (func, cbWrapper) {\\r\\n            var originalFunc = obj[func];\\r\\n            if (originalFunc) {\\r\\n                obj[func] = function mysqlContextPreserver() {\\r\\n                    // Find the callback, if there is one\\r\\n                    var cbidx = arguments.length - 1;\\r\\n                    for (var i = arguments.length - 1; i >= 0; --i) {\\r\\n                        if (typeof arguments[i] === \\\"function\\\") {\\r\\n                            cbidx = i;\\r\\n                            break;\\r\\n                        }\\r\\n                        else if (typeof arguments[i] !== \\\"undefined\\\") {\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                    var cb = arguments[cbidx];\\r\\n                    var resultContainer = { result: null, startTime: null };\\r\\n                    if (typeof cb === \\\"function\\\") {\\r\\n                        // Preserve context on the callback.\\r\\n                        // If this is one of the functions that we want to track,\\r\\n                        // then wrap the callback with the tracking wrapper\\r\\n                        if (cbWrapper) {\\r\\n                            resultContainer.startTime = process.hrtime();\\r\\n                            arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(cbWrapper(resultContainer, cb));\\r\\n                        }\\r\\n                        else {\\r\\n                            arguments[cbidx] = diagnostic_channel_1.channel.bindToContext(cb);\\r\\n                        }\\r\\n                    }\\r\\n                    var result = originalFunc.apply(this, arguments);\\r\\n                    resultContainer.result = result;\\r\\n                    return result;\\r\\n                };\\r\\n            }\\r\\n        };\\r\\n    };\\r\\n    var patchClassMemberFunction = function (classObject, name) {\\r\\n        return patchObjectFunction(classObject.prototype, name + \\\".prototype\\\");\\r\\n    };\\r\\n    var connectionCallbackFunctions = [\\r\\n        \\\"connect\\\", \\\"changeUser\\\",\\r\\n        \\\"ping\\\", \\\"statistics\\\", \\\"end\\\",\\r\\n    ];\\r\\n    var connectionClass = require(path.dirname(originalMysqlPath) + \\\"/lib/Connection\\\");\\r\\n    connectionCallbackFunctions.forEach(function (value) { return patchClassMemberFunction(connectionClass, \\\"Connection\\\")(value); });\\r\\n    // Connection.createQuery is a static method\\r\\n    patchObjectFunction(connectionClass, \\\"Connection\\\")(\\\"createQuery\\\", function (resultContainer, cb) {\\r\\n        return function (err) {\\r\\n            var hrDuration = process.hrtime(resultContainer.startTime);\\r\\n            /* tslint:disable-next-line:no-bitwise */\\r\\n            var duration = (hrDuration[0] * 1e3 + hrDuration[1] / 1e6) | 0;\\r\\n            diagnostic_channel_1.channel.publish(\\\"mysql\\\", { query: resultContainer.result, callbackArgs: arguments, err: err, duration: duration });\\r\\n            cb.apply(this, arguments);\\r\\n        };\\r\\n    });\\r\\n    var poolCallbackFunctions = [\\r\\n        \\\"_enqueueCallback\\\",\\r\\n    ];\\r\\n    var poolClass = require(path.dirname(originalMysqlPath) + \\\"/lib/Pool\\\");\\r\\n    poolCallbackFunctions.forEach(function (value) { return patchClassMemberFunction(poolClass, \\\"Pool\\\")(value); });\\r\\n    return originalMysql;\\r\\n};\\r\\nexports.mysql = {\\r\\n    versionSpecifier: \\\">= 2.0.0 <= 2.14.x\\\",\\r\\n    patch: mysqlPatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"mysql\\\", exports.mysql);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=mysql.pub.js.map\",\"function webpackEmptyContext(req) {\\n\\tvar e = new Error(\\\"Cannot find module '\\\" + req + \\\"'\\\");\\n\\te.code = 'MODULE_NOT_FOUND';\\n\\tthrow e;\\n}\\nwebpackEmptyContext.keys = function() { return []; };\\nwebpackEmptyContext.resolve = webpackEmptyContext;\\nmodule.exports = webpackEmptyContext;\\nwebpackEmptyContext.id = 139;\",\"function webpackEmptyContext(req) {\\n\\tvar e = new Error(\\\"Cannot find module '\\\" + req + \\\"'\\\");\\n\\te.code = 'MODULE_NOT_FOUND';\\n\\tthrow e;\\n}\\nwebpackEmptyContext.keys = function() { return []; };\\nwebpackEmptyContext.resolve = webpackEmptyContext;\\nmodule.exports = webpackEmptyContext;\\nwebpackEmptyContext.id = 140;\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nfunction postgresPool1PatchFunction(originalPgPool) {\\r\\n    var originalConnect = originalPgPool.prototype.connect;\\r\\n    originalPgPool.prototype.connect = function connect(callback) {\\r\\n        if (callback) {\\r\\n            arguments[0] = diagnostic_channel_1.channel.bindToContext(callback);\\r\\n        }\\r\\n        originalConnect.apply(this, arguments);\\r\\n    };\\r\\n    return originalPgPool;\\r\\n}\\r\\nexports.postgresPool1 = {\\r\\n    versionSpecifier: \\\"1.x\\\",\\r\\n    patch: postgresPool1PatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"pg-pool\\\", exports.postgresPool1);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=pg-pool.pub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar events_1 = require(\\\"events\\\");\\r\\nfunction postgres6PatchFunction(originalPg, originalPgPath) {\\r\\n    var originalClientQuery = originalPg.Client.prototype.query;\\r\\n    var diagnosticOriginalFunc = \\\"__diagnosticOriginalFunc\\\";\\r\\n    // wherever the callback is passed, find it, save it, and remove it from the call\\r\\n    // to the the original .query() function\\r\\n    originalPg.Client.prototype.query = function query(config, values, callback) {\\r\\n        var data = {\\r\\n            query: {},\\r\\n            database: {\\r\\n                host: this.connectionParameters.host,\\r\\n                port: this.connectionParameters.port,\\r\\n            },\\r\\n            result: null,\\r\\n            error: null,\\r\\n            duration: 0,\\r\\n        };\\r\\n        var start = process.hrtime();\\r\\n        var queryResult;\\r\\n        function patchCallback(cb) {\\r\\n            if (cb && cb[diagnosticOriginalFunc]) {\\r\\n                cb = cb[diagnosticOriginalFunc];\\r\\n            }\\r\\n            var trackingCallback = diagnostic_channel_1.channel.bindToContext(function (err, res) {\\r\\n                var end = process.hrtime(start);\\r\\n                data.result = res && { rowCount: res.rowCount, command: res.command };\\r\\n                data.error = err;\\r\\n                data.duration = Math.ceil((end[0] * 1e3) + (end[1] / 1e6));\\r\\n                diagnostic_channel_1.channel.publish(\\\"postgres\\\", data);\\r\\n                // emulate weird internal behavior in pg@6\\r\\n                // on success, the callback is called *before* query events are emitted\\r\\n                // on failure, the callback is called *instead of* the query emitting events\\r\\n                // with no events, that means no promises (since the promise is resolved/rejected in an event handler)\\r\\n                // since we are always inserting ourselves as a callback, we have to restore the original\\r\\n                // behavior if the user didn't provide one themselves\\r\\n                if (err) {\\r\\n                    if (cb) {\\r\\n                        return cb.apply(this, arguments);\\r\\n                    }\\r\\n                    else if (queryResult && queryResult instanceof events_1.EventEmitter) {\\r\\n                        queryResult.emit(\\\"error\\\", err);\\r\\n                    }\\r\\n                }\\r\\n                else if (cb) {\\r\\n                    cb.apply(this, arguments);\\r\\n                }\\r\\n            });\\r\\n            try {\\r\\n                Object.defineProperty(trackingCallback, diagnosticOriginalFunc, { value: cb });\\r\\n                return trackingCallback;\\r\\n            }\\r\\n            catch (e) {\\r\\n                // this should never happen, but bailout in case it does\\r\\n                return cb;\\r\\n            }\\r\\n        }\\r\\n        // this function takes too many variations of arguments.\\r\\n        // this patches any provided callback or creates a new callback if one wasn't provided.\\r\\n        // since the callback is always called (if provided) in addition to always having a Promisified\\r\\n        // EventEmitter returned (well, sometimes -- see above), its safe to insert a callback if none was given\\r\\n        try {\\r\\n            if (typeof config === \\\"string\\\") {\\r\\n                if (values instanceof Array) {\\r\\n                    data.query.preparable = {\\r\\n                        text: config,\\r\\n                        args: values,\\r\\n                    };\\r\\n                    callback = patchCallback(callback);\\r\\n                }\\r\\n                else {\\r\\n                    data.query.text = config;\\r\\n                    // pg v6 will, for some reason, accept both\\r\\n                    // client.query(\\\"...\\\", undefined, () => {...})\\r\\n                    // **and**\\r\\n                    // client.query(\\\"...\\\", () => {...});\\r\\n                    // Internally, precedence is given to the callback argument\\r\\n                    if (callback) {\\r\\n                        callback = patchCallback(callback);\\r\\n                    }\\r\\n                    else {\\r\\n                        values = patchCallback(values);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                if (typeof config.name === \\\"string\\\") {\\r\\n                    data.query.plan = config.name;\\r\\n                }\\r\\n                else if (config.values instanceof Array) {\\r\\n                    data.query.preparable = {\\r\\n                        text: config.text,\\r\\n                        args: config.values,\\r\\n                    };\\r\\n                }\\r\\n                else {\\r\\n                    data.query.text = config.text;\\r\\n                }\\r\\n                if (callback) {\\r\\n                    callback = patchCallback(callback);\\r\\n                }\\r\\n                else if (values) {\\r\\n                    values = patchCallback(values);\\r\\n                }\\r\\n                else {\\r\\n                    config.callback = patchCallback(config.callback);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (e) {\\r\\n            // if our logic here throws, bail out and just let pg do its thing\\r\\n            return originalClientQuery.apply(this, arguments);\\r\\n        }\\r\\n        arguments[0] = config;\\r\\n        arguments[1] = values;\\r\\n        arguments[2] = callback;\\r\\n        arguments.length = (arguments.length > 3) ? arguments.length : 3;\\r\\n        queryResult = originalClientQuery.apply(this, arguments);\\r\\n        return queryResult;\\r\\n    };\\r\\n    return originalPg;\\r\\n}\\r\\nexports.postgres6 = {\\r\\n    versionSpecifier: \\\"6.x\\\",\\r\\n    patch: postgres6PatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"pg\\\", exports.postgres6);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=pg.pub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar redisPatchFunction = function (originalRedis) {\\r\\n    var originalSend = originalRedis.RedisClient.prototype.internal_send_command;\\r\\n    // Note: This is mixing together both context tracking and dependency tracking\\r\\n    originalRedis.RedisClient.prototype.internal_send_command = function (commandObj) {\\r\\n        if (commandObj) {\\r\\n            var cb_1 = commandObj.callback;\\r\\n            if (!cb_1 || !cb_1.pubsubBound) {\\r\\n                var address_1 = this.address;\\r\\n                var startTime_1 = process.hrtime();\\r\\n                // Note: augmenting the callback on internal_send_command is correct for context\\r\\n                // tracking, but may be too low-level for dependency tracking. There are some 'errors'\\r\\n                // which higher levels expect in some cases\\r\\n                // However, the only other option is to intercept every individual command.\\r\\n                commandObj.callback = diagnostic_channel_1.channel.bindToContext(function (err, result) {\\r\\n                    var hrDuration = process.hrtime(startTime_1);\\r\\n                    /* tslint:disable-next-line:no-bitwise */\\r\\n                    var duration = (hrDuration[0] * 1e3 + hrDuration[1] / 1e6) | 0;\\r\\n                    diagnostic_channel_1.channel.publish(\\\"redis\\\", { duration: duration, address: address_1, commandObj: commandObj, err: err, result: result });\\r\\n                    if (typeof cb_1 === \\\"function\\\") {\\r\\n                        cb_1.apply(this, arguments);\\r\\n                    }\\r\\n                });\\r\\n                commandObj.callback.pubsubBound = true;\\r\\n            }\\r\\n        }\\r\\n        return originalSend.call(this, commandObj);\\r\\n    };\\r\\n    return originalRedis;\\r\\n};\\r\\nexports.redis = {\\r\\n    versionSpecifier: \\\">= 2.0.0 < 3.0.0\\\",\\r\\n    patch: redisPatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"redis\\\", exports.redis);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=redis.pub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n// Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n// Licensed under the MIT license. See LICENSE file in the project root for details.\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\n// register a \\\"filter\\\" with each logger that publishes the data about to be logged\\r\\nvar winstonPatchFunction = function (originalWinston) {\\r\\n    var originalLog = originalWinston.Logger.prototype.log;\\r\\n    var curLevels;\\r\\n    var loggingFilter = function (level, message, meta) {\\r\\n        var levelKind;\\r\\n        if (curLevels === originalWinston.config.npm.levels) {\\r\\n            levelKind = \\\"npm\\\";\\r\\n        }\\r\\n        else if (curLevels === originalWinston.config.syslog.levels) {\\r\\n            levelKind = \\\"syslog\\\";\\r\\n        }\\r\\n        else {\\r\\n            levelKind = \\\"unknown\\\";\\r\\n        }\\r\\n        diagnostic_channel_1.channel.publish(\\\"winston\\\", { level: level, message: message, meta: meta, levelKind: levelKind });\\r\\n        return message;\\r\\n    };\\r\\n    // whenever someone logs, ensure our filter comes last\\r\\n    originalWinston.Logger.prototype.log = function log() {\\r\\n        curLevels = this.levels;\\r\\n        if (!this.filters || this.filters.length === 0) {\\r\\n            this.filters = [loggingFilter];\\r\\n        }\\r\\n        else if (this.filters[this.filters.length - 1] !== loggingFilter) {\\r\\n            this.filters = this.filters.filter(function (f) { return f !== loggingFilter; });\\r\\n            this.filters.push(loggingFilter);\\r\\n        }\\r\\n        return originalLog.apply(this, arguments);\\r\\n    };\\r\\n    return originalWinston;\\r\\n};\\r\\nexports.winston = {\\r\\n    versionSpecifier: \\\"2.x\\\",\\r\\n    patch: winstonPatchFunction,\\r\\n};\\r\\nfunction enable() {\\r\\n    diagnostic_channel_1.channel.registerMonkeyPatch(\\\"winston\\\", exports.winston);\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=winston.pub.js.map\",\"/**\\n* @license\\n* Copyright Google Inc. All Rights Reserved.\\n*\\n* Use of this source code is governed by an MIT-style license that can be\\n* found in the LICENSE file at https://angular.io/license\\n*/\\n(function (global, factory) {\\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\\n    typeof define === 'function' && define.amd ? define(factory) :\\n    (factory());\\n}(this, (function () { 'use strict';\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\n\\n\\nvar Zone$1 = (function (global) {\\n    if (global['Zone']) {\\n        throw new Error('Zone already loaded.');\\n    }\\n    var Zone = (function () {\\n        function Zone(parent, zoneSpec) {\\n            this._properties = null;\\n            this._parent = parent;\\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\\n            this._properties = zoneSpec && zoneSpec.properties || {};\\n            this._zoneDelegate =\\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\\n        }\\n        Zone.assertZonePatched = function () {\\n            if (global.Promise !== ZoneAwarePromise) {\\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\\n                    'has been overwritten.\\\\n' +\\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\\n                    'If you must load one, do so before loading zone.js.)');\\n            }\\n        };\\n        Object.defineProperty(Zone, \\\"current\\\", {\\n            get: function () {\\n                return _currentZoneFrame.zone;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Object.defineProperty(Zone, \\\"currentTask\\\", {\\n            get: function () {\\n                return _currentTask;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Object.defineProperty(Zone.prototype, \\\"parent\\\", {\\n            get: function () {\\n                return this._parent;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Object.defineProperty(Zone.prototype, \\\"name\\\", {\\n            get: function () {\\n                return this._name;\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n        \\n        Zone.prototype.get = function (key) {\\n            var zone = this.getZoneWith(key);\\n            if (zone)\\n                return zone._properties[key];\\n        };\\n        Zone.prototype.getZoneWith = function (key) {\\n            var current = this;\\n            while (current) {\\n                if (current._properties.hasOwnProperty(key)) {\\n                    return current;\\n                }\\n                current = current._parent;\\n            }\\n            return null;\\n        };\\n        Zone.prototype.fork = function (zoneSpec) {\\n            if (!zoneSpec)\\n                throw new Error('ZoneSpec required!');\\n            return this._zoneDelegate.fork(this, zoneSpec);\\n        };\\n        Zone.prototype.wrap = function (callback, source) {\\n            if (typeof callback !== 'function') {\\n                throw new Error('Expecting function got: ' + callback);\\n            }\\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\\n            var zone = this;\\n            return function () {\\n                return zone.runGuarded(_callback, this, arguments, source);\\n            };\\n        };\\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\\n            if (applyThis === void 0) { applyThis = null; }\\n            if (applyArgs === void 0) { applyArgs = null; }\\n            if (source === void 0) { source = null; }\\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\\n            try {\\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\\n            }\\n            finally {\\n                _currentZoneFrame = _currentZoneFrame.parent;\\n            }\\n        };\\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\\n            if (applyThis === void 0) { applyThis = null; }\\n            if (applyArgs === void 0) { applyArgs = null; }\\n            if (source === void 0) { source = null; }\\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\\n            try {\\n                try {\\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\\n                }\\n                catch (error) {\\n                    if (this._zoneDelegate.handleError(this, error)) {\\n                        throw error;\\n                    }\\n                }\\n            }\\n            finally {\\n                _currentZoneFrame = _currentZoneFrame.parent;\\n            }\\n        };\\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\\n            task.runCount++;\\n            if (task.zone != this)\\n                throw new Error('A task can only be run in the zone which created it! (Creation: ' + task.zone.name +\\n                    '; Execution: ' + this.name + ')');\\n            var previousTask = _currentTask;\\n            _currentTask = task;\\n            _currentZoneFrame = new ZoneFrame(_currentZoneFrame, this);\\n            try {\\n                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {\\n                    task.cancelFn = null;\\n                }\\n                try {\\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\\n                }\\n                catch (error) {\\n                    if (this._zoneDelegate.handleError(this, error)) {\\n                        throw error;\\n                    }\\n                }\\n            }\\n            finally {\\n                _currentZoneFrame = _currentZoneFrame.parent;\\n                _currentTask = previousTask;\\n            }\\n        };\\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));\\n        };\\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));\\n        };\\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\\n            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));\\n        };\\n        Zone.prototype.cancelTask = function (task) {\\n            var value = this._zoneDelegate.cancelTask(this, task);\\n            task.runCount = -1;\\n            task.cancelFn = null;\\n            return value;\\n        };\\n        return Zone;\\n    }());\\n    Zone.__symbol__ = __symbol__;\\n    \\n    var ZoneDelegate = (function () {\\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\\n            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };\\n            this.zone = zone;\\n            this._parentDelegate = parentDelegate;\\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\\n            this._interceptZS =\\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\\n            this._interceptDlgt =\\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\\n            this._interceptCurrZone =\\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\\n            this._invokeDlgt =\\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\\n            this._handleErrorZS =\\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\\n            this._handleErrorDlgt =\\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\\n            this._handleErrorCurrZone =\\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\\n            this._scheduleTaskZS =\\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\\n            this._scheduleTaskDlgt =\\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\\n            this._scheduleTaskCurrZone =\\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\\n            this._invokeTaskZS =\\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\\n            this._invokeTaskDlgt =\\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\\n            this._invokeTaskCurrZone =\\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\\n            this._cancelTaskZS =\\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\\n            this._cancelTaskDlgt =\\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\\n            this._cancelTaskCurrZone =\\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\\n            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);\\n            this._hasTaskDlgt =\\n                zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);\\n            this._hasTaskCurrZone = zoneSpec && (zoneSpec.onHasTask ? this.zone : parentDelegate.zone);\\n        }\\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\\n                new Zone(targetZone, zoneSpec);\\n        };\\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\\n            return this._interceptZS ?\\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\\n                callback;\\n        };\\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\\n            return this._invokeZS ?\\n                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\\n                callback.apply(applyThis, applyArgs);\\n        };\\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\\n            return this._handleErrorZS ?\\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\\n                true;\\n        };\\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\\n            try {\\n                if (this._scheduleTaskZS) {\\n                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\\n                }\\n                else if (task.scheduleFn) {\\n                    task.scheduleFn(task);\\n                }\\n                else if (task.type == 'microTask') {\\n                    scheduleMicroTask(task);\\n                }\\n                else {\\n                    throw new Error('Task is missing scheduleFn.');\\n                }\\n                return task;\\n            }\\n            finally {\\n                if (targetZone == this.zone) {\\n                    this._updateTaskCount(task.type, 1);\\n                }\\n            }\\n        };\\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\\n            try {\\n                return this._invokeTaskZS ?\\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\\n                    task.callback.apply(applyThis, applyArgs);\\n            }\\n            finally {\\n                if (targetZone == this.zone && (task.type != 'eventTask') &&\\n                    !(task.data && task.data.isPeriodic)) {\\n                    this._updateTaskCount(task.type, -1);\\n                }\\n            }\\n        };\\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\\n            var value;\\n            if (this._cancelTaskZS) {\\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\\n            }\\n            else if (!task.cancelFn) {\\n                throw new Error('Task does not support cancellation, or is already canceled.');\\n            }\\n            else {\\n                value = task.cancelFn(task);\\n            }\\n            if (targetZone == this.zone) {\\n                // this should not be in the finally block, because exceptions assume not canceled.\\n                this._updateTaskCount(task.type, -1);\\n            }\\n            return value;\\n        };\\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\\n            return this._hasTaskZS &&\\n                this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\\n        };\\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\\n            var counts = this._taskCounts;\\n            var prev = counts[type];\\n            var next = counts[type] = prev + count;\\n            if (next < 0) {\\n                throw new Error('More tasks executed then were scheduled.');\\n            }\\n            if (prev == 0 || next == 0) {\\n                var isEmpty = {\\n                    microTask: counts.microTask > 0,\\n                    macroTask: counts.macroTask > 0,\\n                    eventTask: counts.eventTask > 0,\\n                    change: type\\n                };\\n                try {\\n                    this.hasTask(this.zone, isEmpty);\\n                }\\n                finally {\\n                    if (this._parentDelegate) {\\n                        this._parentDelegate._updateTaskCount(type, count);\\n                    }\\n                }\\n            }\\n        };\\n        return ZoneDelegate;\\n    }());\\n    var ZoneTask = (function () {\\n        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {\\n            this.runCount = 0;\\n            this.type = type;\\n            this.zone = zone;\\n            this.source = source;\\n            this.data = options;\\n            this.scheduleFn = scheduleFn;\\n            this.cancelFn = cancelFn;\\n            this.callback = callback;\\n            var self = this;\\n            this.invoke = function () {\\n                _numberOfNestedTaskFrames++;\\n                try {\\n                    return zone.runTask(self, this, arguments);\\n                }\\n                finally {\\n                    if (_numberOfNestedTaskFrames == 1) {\\n                        drainMicroTaskQueue();\\n                    }\\n                    _numberOfNestedTaskFrames--;\\n                }\\n            };\\n        }\\n        ZoneTask.prototype.toString = function () {\\n            if (this.data && typeof this.data.handleId !== 'undefined') {\\n                return this.data.handleId;\\n            }\\n            else {\\n                return Object.prototype.toString.call(this);\\n            }\\n        };\\n        // add toJSON method to prevent cyclic error when\\n        // call JSON.stringify(zoneTask)\\n        ZoneTask.prototype.toJSON = function () {\\n            return {\\n                type: this.type,\\n                source: this.source,\\n                data: this.data,\\n                zone: this.zone.name,\\n                invoke: this.invoke,\\n                scheduleFn: this.scheduleFn,\\n                cancelFn: this.cancelFn,\\n                runCount: this.runCount,\\n                callback: this.callback\\n            };\\n        };\\n        return ZoneTask;\\n    }());\\n    var ZoneFrame = (function () {\\n        function ZoneFrame(parent, zone) {\\n            this.parent = parent;\\n            this.zone = zone;\\n        }\\n        return ZoneFrame;\\n    }());\\n    function __symbol__(name) {\\n        return '__zone_symbol__' + name;\\n    }\\n    \\n    var symbolSetTimeout = __symbol__('setTimeout');\\n    var symbolPromise = __symbol__('Promise');\\n    var symbolThen = __symbol__('then');\\n    var _currentZoneFrame = new ZoneFrame(null, new Zone(null, null));\\n    var _currentTask = null;\\n    var _microTaskQueue = [];\\n    var _isDrainingMicrotaskQueue = false;\\n    var _uncaughtPromiseErrors = [];\\n    var _numberOfNestedTaskFrames = 0;\\n    function scheduleQueueDrain() {\\n        // if we are not running in any task, and there has not been anything scheduled\\n        // we must bootstrap the initial task creation by manually scheduling the drain\\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\\n            // We are not running in Task, so we need to kickstart the microtask queue.\\n            if (global[symbolPromise]) {\\n                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);\\n            }\\n            else {\\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\\n            }\\n        }\\n    }\\n    function scheduleMicroTask(task) {\\n        scheduleQueueDrain();\\n        _microTaskQueue.push(task);\\n    }\\n    function consoleError(e) {\\n        var rejection = e && e.rejection;\\n        if (rejection) {\\n            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\\n        }\\n        console.error(e);\\n    }\\n    function drainMicroTaskQueue() {\\n        if (!_isDrainingMicrotaskQueue) {\\n            _isDrainingMicrotaskQueue = true;\\n            while (_microTaskQueue.length) {\\n                var queue = _microTaskQueue;\\n                _microTaskQueue = [];\\n                for (var i = 0; i < queue.length; i++) {\\n                    var task = queue[i];\\n                    try {\\n                        task.zone.runTask(task, null, null);\\n                    }\\n                    catch (e) {\\n                        consoleError(e);\\n                    }\\n                }\\n            }\\n            while (_uncaughtPromiseErrors.length) {\\n                var _loop_1 = function () {\\n                    var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\\n                    try {\\n                        uncaughtPromiseError.zone.runGuarded(function () {\\n                            throw uncaughtPromiseError;\\n                        });\\n                    }\\n                    catch (e) {\\n                        consoleError(e);\\n                    }\\n                };\\n                while (_uncaughtPromiseErrors.length) {\\n                    _loop_1();\\n                }\\n            }\\n            _isDrainingMicrotaskQueue = false;\\n        }\\n    }\\n    function isThenable(value) {\\n        return value && value.then;\\n    }\\n    function forwardResolution(value) {\\n        return value;\\n    }\\n    function forwardRejection(rejection) {\\n        return ZoneAwarePromise.reject(rejection);\\n    }\\n    var symbolState = __symbol__('state');\\n    var symbolValue = __symbol__('value');\\n    var source = 'Promise.then';\\n    var UNRESOLVED = null;\\n    var RESOLVED = true;\\n    var REJECTED = false;\\n    var REJECTED_NO_CATCH = 0;\\n    function makeResolver(promise, state) {\\n        return function (v) {\\n            resolvePromise(promise, state, v);\\n            // Do not return value or you will break the Promise spec.\\n        };\\n    }\\n    function resolvePromise(promise, state, value) {\\n        if (promise[symbolState] === UNRESOLVED) {\\n            if (value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) &&\\n                value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {\\n                clearRejectedNoCatch(value);\\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\\n            }\\n            else if (isThenable(value)) {\\n                value.then(makeResolver(promise, state), makeResolver(promise, false));\\n            }\\n            else {\\n                promise[symbolState] = state;\\n                var queue = promise[symbolValue];\\n                promise[symbolValue] = value;\\n                for (var i = 0; i < queue.length;) {\\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\\n                }\\n                if (queue.length == 0 && state == REJECTED) {\\n                    promise[symbolState] = REJECTED_NO_CATCH;\\n                    try {\\n                        throw new Error('Uncaught (in promise): ' + value +\\n                            (value && value.stack ? '\\\\n' + value.stack : ''));\\n                    }\\n                    catch (e) {\\n                        var error_1 = e;\\n                        error_1.rejection = value;\\n                        error_1.promise = promise;\\n                        error_1.zone = Zone.current;\\n                        error_1.task = Zone.currentTask;\\n                        _uncaughtPromiseErrors.push(error_1);\\n                        scheduleQueueDrain();\\n                    }\\n                }\\n            }\\n        }\\n        // Resolving an already resolved promise is a noop.\\n        return promise;\\n    }\\n    function clearRejectedNoCatch(promise) {\\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\\n            promise[symbolState] = REJECTED;\\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\\n                if (promise === _uncaughtPromiseErrors[i].promise) {\\n                    _uncaughtPromiseErrors.splice(i, 1);\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\\n        clearRejectedNoCatch(promise);\\n        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;\\n        zone.scheduleMicroTask(source, function () {\\n            try {\\n                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));\\n            }\\n            catch (error) {\\n                resolvePromise(chainPromise, false, error);\\n            }\\n        });\\n    }\\n    var ZoneAwarePromise = (function () {\\n        function ZoneAwarePromise(executor) {\\n            var promise = this;\\n            if (!(promise instanceof ZoneAwarePromise)) {\\n                throw new Error('Must be an instanceof Promise.');\\n            }\\n            promise[symbolState] = UNRESOLVED;\\n            promise[symbolValue] = []; // queue;\\n            try {\\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\\n            }\\n            catch (e) {\\n                resolvePromise(promise, false, e);\\n            }\\n        }\\n        ZoneAwarePromise.toString = function () {\\n            return 'function ZoneAwarePromise() { [native code] }';\\n        };\\n        ZoneAwarePromise.resolve = function (value) {\\n            return resolvePromise(new this(null), RESOLVED, value);\\n        };\\n        ZoneAwarePromise.reject = function (error) {\\n            return resolvePromise(new this(null), REJECTED, error);\\n        };\\n        ZoneAwarePromise.race = function (values) {\\n            var resolve;\\n            var reject;\\n            var promise = new this(function (res, rej) {\\n                _a = [res, rej], resolve = _a[0], reject = _a[1];\\n                var _a;\\n            });\\n            function onResolve(value) {\\n                promise && (promise = null || resolve(value));\\n            }\\n            function onReject(error) {\\n                promise && (promise = null || reject(error));\\n            }\\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\\n                var value = values_1[_i];\\n                if (!isThenable(value)) {\\n                    value = this.resolve(value);\\n                }\\n                value.then(onResolve, onReject);\\n            }\\n            return promise;\\n        };\\n        ZoneAwarePromise.all = function (values) {\\n            var resolve;\\n            var reject;\\n            var promise = new this(function (res, rej) {\\n                resolve = res;\\n                reject = rej;\\n            });\\n            var count = 0;\\n            var resolvedValues = [];\\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\\n                var value = values_2[_i];\\n                if (!isThenable(value)) {\\n                    value = this.resolve(value);\\n                }\\n                value.then((function (index) { return function (value) {\\n                    resolvedValues[index] = value;\\n                    count--;\\n                    if (!count) {\\n                        resolve(resolvedValues);\\n                    }\\n                }; })(count), reject);\\n                count++;\\n            }\\n            if (!count)\\n                resolve(resolvedValues);\\n            return promise;\\n        };\\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\\n            var chainPromise = new this.constructor(null);\\n            var zone = Zone.current;\\n            if (this[symbolState] == UNRESOLVED) {\\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\\n            }\\n            else {\\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\\n            }\\n            return chainPromise;\\n        };\\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\\n            return this.then(null, onRejected);\\n        };\\n        return ZoneAwarePromise;\\n    }());\\n    // Protect against aggressive optimizers dropping seemingly unused properties.\\n    // E.g. Closure Compiler in advanced mode.\\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\\n    var NativePromise = global[__symbol__('Promise')] = global['Promise'];\\n    global['Promise'] = ZoneAwarePromise;\\n    function patchThen(NativePromise) {\\n        var NativePromiseProtototype = NativePromise.prototype;\\n        var NativePromiseThen = NativePromiseProtototype[__symbol__('then')] =\\n            NativePromiseProtototype.then;\\n        NativePromiseProtototype.then = function (onResolve, onReject) {\\n            var nativePromise = this;\\n            return new ZoneAwarePromise(function (resolve, reject) {\\n                NativePromiseThen.call(nativePromise, resolve, reject);\\n            })\\n                .then(onResolve, onReject);\\n        };\\n    }\\n    if (NativePromise) {\\n        patchThen(NativePromise);\\n        if (typeof global['fetch'] !== 'undefined') {\\n            var fetchPromise = void 0;\\n            try {\\n                // In MS Edge this throws\\n                fetchPromise = global['fetch']();\\n            }\\n            catch (e) {\\n                // In Chrome this throws instead.\\n                fetchPromise = global['fetch']('about:blank');\\n            }\\n            // ignore output to prevent error;\\n            fetchPromise.then(function () { return null; }, function () { return null; });\\n            if (fetchPromise.constructor != NativePromise &&\\n                fetchPromise.constructor != ZoneAwarePromise) {\\n                patchThen(fetchPromise.constructor);\\n            }\\n        }\\n    }\\n    // This is not part of public API, but it is usefull for tests, so we expose it.\\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\\n    /*\\n     * This code patches Error so that:\\n     *   - It ignores un-needed stack frames.\\n     *   - It Shows the associated Zone for reach frame.\\n     */\\n    var FrameType;\\n    (function (FrameType) {\\n        /// Skip this frame when printing out stack\\n        FrameType[FrameType[\\\"blackList\\\"] = 0] = \\\"blackList\\\";\\n        /// This frame marks zone transition\\n        FrameType[FrameType[\\\"transition\\\"] = 1] = \\\"transition\\\";\\n    })(FrameType || (FrameType = {}));\\n    var NativeError = global[__symbol__('Error')] = global.Error;\\n    // Store the frames which should be removed from the stack frames\\n    var blackListedStackFrames = {};\\n    // We must find the frame where Error was created, otherwise we assume we don't understand stack\\n    var zoneAwareFrame;\\n    global.Error = ZoneAwareError;\\n    // How should the stack frames be parsed.\\n    var frameParserStrategy = null;\\n    var stackRewrite = 'stackRewrite';\\n    // fix #595, create property descriptor\\n    // for error properties\\n    var createProperty = function (props, key) {\\n        // if property is already defined, skip it.\\n        if (props[key]) {\\n            return;\\n        }\\n        // define a local property\\n        // in case error property is not settable\\n        var name = __symbol__(key);\\n        props[key] = {\\n            configurable: true,\\n            enumerable: true,\\n            get: function () {\\n                // if local property has no value\\n                // use internal error's property value\\n                if (!this[name]) {\\n                    var error_2 = this[__symbol__('error')];\\n                    if (error_2) {\\n                        this[name] = error_2[key];\\n                    }\\n                }\\n                return this[name];\\n            },\\n            set: function (value) {\\n                // setter will set value to local property value\\n                this[name] = value;\\n            }\\n        };\\n    };\\n    // fix #595, create property descriptor\\n    // for error method properties\\n    var createMethodProperty = function (props, key) {\\n        if (props[key]) {\\n            return;\\n        }\\n        props[key] = {\\n            configurable: true,\\n            enumerable: true,\\n            writable: true,\\n            value: function () {\\n                var error = this[__symbol__('error')];\\n                var errorMethod = (error && error[key]) || this[key];\\n                if (errorMethod) {\\n                    return errorMethod.apply(error, arguments);\\n                }\\n            }\\n        };\\n    };\\n    var createErrorProperties = function () {\\n        var props = Object.create(null);\\n        var error = new NativeError();\\n        var keys = Object.getOwnPropertyNames(error);\\n        for (var i = 0; i < keys.length; i++) {\\n            var key = keys[i];\\n            // Avoid bugs when hasOwnProperty is shadowed\\n            if (Object.prototype.hasOwnProperty.call(error, key)) {\\n                createProperty(props, key);\\n            }\\n        }\\n        var proto = NativeError.prototype;\\n        if (proto) {\\n            var pKeys = Object.getOwnPropertyNames(proto);\\n            for (var i = 0; i < pKeys.length; i++) {\\n                var key = pKeys[i];\\n                // skip constructor\\n                if (key !== 'constructor' && key !== 'toString' && key !== 'toSource') {\\n                    createProperty(props, key);\\n                }\\n            }\\n        }\\n        // some other properties are not\\n        // in NativeError\\n        createProperty(props, 'originalStack');\\n        createProperty(props, 'zoneAwareStack');\\n        // define toString, toSource as method property\\n        createMethodProperty(props, 'toString');\\n        createMethodProperty(props, 'toSource');\\n        return props;\\n    };\\n    var errorProperties = createErrorProperties();\\n    // for derived Error class which extends ZoneAwareError\\n    // we should not override the derived class's property\\n    // so we create a new props object only copy the properties\\n    // from errorProperties which not exist in derived Error's prototype\\n    var getErrorPropertiesForPrototype = function (prototype) {\\n        // if the prototype is ZoneAwareError.prototype\\n        // we just return the prebuilt errorProperties.\\n        if (prototype === ZoneAwareError.prototype) {\\n            return errorProperties;\\n        }\\n        var newProps = Object.create(null);\\n        var cKeys = Object.getOwnPropertyNames(errorProperties);\\n        var keys = Object.getOwnPropertyNames(prototype);\\n        cKeys.forEach(function (cKey) {\\n            if (keys.filter(function (key) {\\n                return key === cKey;\\n            })\\n                .length === 0) {\\n                newProps[cKey] = errorProperties[cKey];\\n            }\\n        });\\n        return newProps;\\n    };\\n    /**\\n     * This is ZoneAwareError which processes the stack frame and cleans up extra frames as well as\\n     * adds zone information to it.\\n     */\\n    function ZoneAwareError() {\\n        // make sure we have a valid this\\n        // if this is undefined(call Error without new) or this is global\\n        // or this is some other objects, we should force to create a\\n        // valid ZoneAwareError by call Object.create()\\n        if (!(this instanceof ZoneAwareError)) {\\n            return ZoneAwareError.apply(Object.create(ZoneAwareError.prototype), arguments);\\n        }\\n        // Create an Error.\\n        var error = NativeError.apply(this, arguments);\\n        this[__symbol__('error')] = error;\\n        // Save original stack trace\\n        error.originalStack = error.stack;\\n        // Process the stack trace and rewrite the frames.\\n        if (ZoneAwareError[stackRewrite] && error.originalStack) {\\n            var frames_1 = error.originalStack.split('\\\\n');\\n            var zoneFrame = _currentZoneFrame;\\n            var i = 0;\\n            // Find the first frame\\n            while (frames_1[i] !== zoneAwareFrame && i < frames_1.length) {\\n                i++;\\n            }\\n            for (; i < frames_1.length && zoneFrame; i++) {\\n                var frame = frames_1[i];\\n                if (frame.trim()) {\\n                    var frameType = blackListedStackFrames.hasOwnProperty(frame) && blackListedStackFrames[frame];\\n                    if (frameType === FrameType.blackList) {\\n                        frames_1.splice(i, 1);\\n                        i--;\\n                    }\\n                    else if (frameType === FrameType.transition) {\\n                        if (zoneFrame.parent) {\\n                            // This is the special frame where zone changed. Print and process it accordingly\\n                            frames_1[i] += \\\" [\\\" + zoneFrame.parent.zone.name + \\\" => \\\" + zoneFrame.zone.name + \\\"]\\\";\\n                            zoneFrame = zoneFrame.parent;\\n                        }\\n                        else {\\n                            zoneFrame = null;\\n                        }\\n                    }\\n                    else {\\n                        frames_1[i] += \\\" [\\\" + zoneFrame.zone.name + \\\"]\\\";\\n                    }\\n                }\\n            }\\n            error.stack = error.zoneAwareStack = frames_1.join('\\\\n');\\n        }\\n        // use defineProperties here instead of copy property value\\n        // because of issue #595 which will break angular2.\\n        Object.defineProperties(this, getErrorPropertiesForPrototype(Object.getPrototypeOf(this)));\\n        return this;\\n    }\\n    // Copy the prototype so that instanceof operator works as expected\\n    ZoneAwareError.prototype = NativeError.prototype;\\n    ZoneAwareError[Zone.__symbol__('blacklistedStackFrames')] = blackListedStackFrames;\\n    ZoneAwareError[stackRewrite] = false;\\n    if (NativeError.hasOwnProperty('stackTraceLimit')) {\\n        // Extend default stack limit as we will be removing few frames.\\n        NativeError.stackTraceLimit = Math.max(NativeError.stackTraceLimit, 15);\\n        // make sure that ZoneAwareError has the same property which forwards to NativeError.\\n        Object.defineProperty(ZoneAwareError, 'stackTraceLimit', {\\n            get: function () {\\n                return NativeError.stackTraceLimit;\\n            },\\n            set: function (value) {\\n                return NativeError.stackTraceLimit = value;\\n            }\\n        });\\n    }\\n    if (NativeError.hasOwnProperty('captureStackTrace')) {\\n        Object.defineProperty(ZoneAwareError, 'captureStackTrace', {\\n            // add named function here because we need to remove this\\n            // stack frame when prepareStackTrace below\\n            value: function zoneCaptureStackTrace(targetObject, constructorOpt) {\\n                NativeError.captureStackTrace(targetObject, constructorOpt);\\n            }\\n        });\\n    }\\n    Object.defineProperty(ZoneAwareError, 'prepareStackTrace', {\\n        get: function () {\\n            return NativeError.prepareStackTrace;\\n        },\\n        set: function (value) {\\n            if (!value || typeof value !== 'function') {\\n                return NativeError.prepareStackTrace = value;\\n            }\\n            return NativeError.prepareStackTrace = function (error, structuredStackTrace) {\\n                // remove additional stack information from ZoneAwareError.captureStackTrace\\n                if (structuredStackTrace) {\\n                    for (var i = 0; i < structuredStackTrace.length; i++) {\\n                        var st = structuredStackTrace[i];\\n                        // remove the first function which name is zoneCaptureStackTrace\\n                        if (st.getFunctionName() === 'zoneCaptureStackTrace') {\\n                            structuredStackTrace.splice(i, 1);\\n                            break;\\n                        }\\n                    }\\n                }\\n                return value.apply(this, [error, structuredStackTrace]);\\n            };\\n        }\\n    });\\n    // Now we need to populet the `blacklistedStackFrames` as well as find the\\n    // run/runGuraded/runTask frames. This is done by creating a detect zone and then threading\\n    // the execution through all of the above methods so that we can look at the stack trace and\\n    // find the frames of interest.\\n    var detectZone = Zone.current.fork({\\n        name: 'detect',\\n        onInvoke: function (parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\\n            // Here only so that it will show up in the stack frame so that it can be black listed.\\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\\n        },\\n        onHandleError: function (parentZD, current, target, error) {\\n            if (error.originalStack && Error === ZoneAwareError) {\\n                var frames_2 = error.originalStack.split(/\\\\n/);\\n                var runFrame = false, runGuardedFrame = false, runTaskFrame = false;\\n                while (frames_2.length) {\\n                    var frame = frames_2.shift();\\n                    // On safari it is possible to have stack frame with no line number.\\n                    // This check makes sure that we don't filter frames on name only (must have\\n                    // linenumber)\\n                    if (/:\\\\d+:\\\\d+/.test(frame)) {\\n                        // Get rid of the path so that we don't accidintely find function name in path.\\n                        // In chrome the seperator is `(` and `@` in FF and safari\\n                        // Chrome: at Zone.run (zone.js:100)\\n                        // Chrome: at Zone.run (http://localhost:9876/base/build/lib/zone.js:100:24)\\n                        // FireFox: Zone.prototype.run@http://localhost:9876/base/build/lib/zone.js:101:24\\n                        // Safari: run@http://localhost:9876/base/build/lib/zone.js:101:24\\n                        var fnName = frame.split('(')[0].split('@')[0];\\n                        var frameType = FrameType.transition;\\n                        if (fnName.indexOf('ZoneAwareError') !== -1) {\\n                            zoneAwareFrame = frame;\\n                        }\\n                        if (fnName.indexOf('runGuarded') !== -1) {\\n                            runGuardedFrame = true;\\n                        }\\n                        else if (fnName.indexOf('runTask') !== -1) {\\n                            runTaskFrame = true;\\n                        }\\n                        else if (fnName.indexOf('run') !== -1) {\\n                            runFrame = true;\\n                        }\\n                        else {\\n                            frameType = FrameType.blackList;\\n                        }\\n                        blackListedStackFrames[frame] = frameType;\\n                        // Once we find all of the frames we can stop looking.\\n                        if (runFrame && runGuardedFrame && runTaskFrame) {\\n                            ZoneAwareError[stackRewrite] = true;\\n                            break;\\n                        }\\n                    }\\n                }\\n            }\\n            return false;\\n        }\\n    });\\n    // carefully constructor a stack frame which contains all of the frames of interest which\\n    // need to be detected and blacklisted.\\n    var detectRunFn = function () {\\n        detectZone.run(function () {\\n            detectZone.runGuarded(function () {\\n                throw new Error('blacklistStackFrames');\\n            });\\n        });\\n    };\\n    // Cause the error to extract the stack frames.\\n    detectZone.runTask(detectZone.scheduleMacroTask('detect', detectRunFn, null, function () { return null; }, null));\\n    return global['Zone'] = Zone;\\n})(typeof window === 'object' && window || typeof self === 'object' && self || global);\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\n/**\\n * Suppress closure compiler errors about unknown 'Zone' variable\\n * @fileoverview\\n * @suppress {undefinedVars}\\n */\\nvar zoneSymbol = function (n) { return \\\"__zone_symbol__\\\" + n; };\\nvar _global$1 = typeof window === 'object' && window || typeof self === 'object' && self || global;\\nfunction bindArguments(args, source) {\\n    for (var i = args.length - 1; i >= 0; i--) {\\n        if (typeof args[i] === 'function') {\\n            args[i] = Zone.current.wrap(args[i], source + '_' + i);\\n        }\\n    }\\n    return args;\\n}\\n\\n\\nvar isNode = (!('nw' in _global$1) && typeof process !== 'undefined' &&\\n    {}.toString.call(process) === '[object process]');\\n\\n\\n\\n\\n\\nvar EVENT_TASKS = zoneSymbol('eventTasks');\\n// For EventTarget\\nvar ADD_EVENT_LISTENER = 'addEventListener';\\nvar REMOVE_EVENT_LISTENER = 'removeEventListener';\\nfunction findExistingRegisteredTask(target, handler, name, capture, remove) {\\n    var eventTasks = target[EVENT_TASKS];\\n    if (eventTasks) {\\n        for (var i = 0; i < eventTasks.length; i++) {\\n            var eventTask = eventTasks[i];\\n            var data = eventTask.data;\\n            var listener = data.handler;\\n            if ((data.handler === handler || listener.listener === handler) &&\\n                data.useCapturing === capture && data.eventName === name) {\\n                if (remove) {\\n                    eventTasks.splice(i, 1);\\n                }\\n                return eventTask;\\n            }\\n        }\\n    }\\n    return null;\\n}\\nfunction findAllExistingRegisteredTasks(target, name, capture, remove) {\\n    var eventTasks = target[EVENT_TASKS];\\n    if (eventTasks) {\\n        var result = [];\\n        for (var i = eventTasks.length - 1; i >= 0; i--) {\\n            var eventTask = eventTasks[i];\\n            var data = eventTask.data;\\n            if (data.eventName === name && data.useCapturing === capture) {\\n                result.push(eventTask);\\n                if (remove) {\\n                    eventTasks.splice(i, 1);\\n                }\\n            }\\n        }\\n        return result;\\n    }\\n    return null;\\n}\\nfunction attachRegisteredEvent(target, eventTask, isPrepend) {\\n    var eventTasks = target[EVENT_TASKS];\\n    if (!eventTasks) {\\n        eventTasks = target[EVENT_TASKS] = [];\\n    }\\n    if (isPrepend) {\\n        eventTasks.unshift(eventTask);\\n    }\\n    else {\\n        eventTasks.push(eventTask);\\n    }\\n}\\nvar defaultListenerMetaCreator = function (self, args) {\\n    return {\\n        useCapturing: args[2],\\n        eventName: args[0],\\n        handler: args[1],\\n        target: self || _global$1,\\n        name: args[0],\\n        invokeAddFunc: function (addFnSymbol, delegate) {\\n            if (delegate && delegate.invoke) {\\n                return this.target[addFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\\n            }\\n            else {\\n                return this.target[addFnSymbol](this.eventName, delegate, this.useCapturing);\\n            }\\n        },\\n        invokeRemoveFunc: function (removeFnSymbol, delegate) {\\n            if (delegate && delegate.invoke) {\\n                return this.target[removeFnSymbol](this.eventName, delegate.invoke, this.useCapturing);\\n            }\\n            else {\\n                return this.target[removeFnSymbol](this.eventName, delegate, this.useCapturing);\\n            }\\n        }\\n    };\\n};\\nfunction makeZoneAwareAddListener(addFnName, removeFnName, useCapturingParam, allowDuplicates, isPrepend, metaCreator) {\\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\\n    if (allowDuplicates === void 0) { allowDuplicates = false; }\\n    if (isPrepend === void 0) { isPrepend = false; }\\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\\n    var addFnSymbol = zoneSymbol(addFnName);\\n    var removeFnSymbol = zoneSymbol(removeFnName);\\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\\n    function scheduleEventListener(eventTask) {\\n        var meta = eventTask.data;\\n        attachRegisteredEvent(meta.target, eventTask, isPrepend);\\n        return meta.invokeAddFunc(addFnSymbol, eventTask);\\n    }\\n    function cancelEventListener(eventTask) {\\n        var meta = eventTask.data;\\n        findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);\\n        return meta.invokeRemoveFunc(removeFnSymbol, eventTask);\\n    }\\n    return function zoneAwareAddListener(self, args) {\\n        var data = metaCreator(self, args);\\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\\n        // see https://github.com/angular/zone.js/issues/190\\n        var delegate = null;\\n        if (typeof data.handler == 'function') {\\n            delegate = data.handler;\\n        }\\n        else if (data.handler && data.handler.handleEvent) {\\n            delegate = function (event) { return data.handler.handleEvent(event); };\\n        }\\n        var validZoneHandler = false;\\n        try {\\n            // In cross site contexts (such as WebDriver frameworks like Selenium),\\n            // accessing the handler object here will cause an exception to be thrown which\\n            // will fail tests prematurely.\\n            validZoneHandler = data.handler && data.handler.toString() === '[object FunctionWrapper]';\\n        }\\n        catch (e) {\\n            // Returning nothing here is fine, because objects in a cross-site context are unusable\\n            return;\\n        }\\n        // Ignore special listeners of IE11 & Edge dev tools, see\\n        // https://github.com/angular/zone.js/issues/150\\n        if (!delegate || validZoneHandler) {\\n            return data.invokeAddFunc(addFnSymbol, data.handler);\\n        }\\n        if (!allowDuplicates) {\\n            var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, false);\\n            if (eventTask) {\\n                // we already registered, so this will have noop.\\n                return data.invokeAddFunc(addFnSymbol, eventTask);\\n            }\\n        }\\n        var zone = Zone.current;\\n        var source = data.target.constructor['name'] + '.' + addFnName + ':' + data.eventName;\\n        zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);\\n    };\\n}\\nfunction makeZoneAwareRemoveListener(fnName, useCapturingParam, metaCreator) {\\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\\n    if (metaCreator === void 0) { metaCreator = defaultListenerMetaCreator; }\\n    var symbol = zoneSymbol(fnName);\\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\\n    return function zoneAwareRemoveListener(self, args) {\\n        var data = metaCreator(self, args);\\n        data.useCapturing = data.useCapturing || defaultUseCapturing;\\n        // - Inside a Web Worker, `this` is undefined, the context is `global`\\n        // - When `addEventListener` is called on the global context in strict mode, `this` is undefined\\n        // see https://github.com/angular/zone.js/issues/190\\n        var eventTask = findExistingRegisteredTask(data.target, data.handler, data.eventName, data.useCapturing, true);\\n        if (eventTask) {\\n            eventTask.zone.cancelTask(eventTask);\\n        }\\n        else {\\n            data.invokeRemoveFunc(symbol, data.handler);\\n        }\\n    };\\n}\\nfunction makeZoneAwareRemoveAllListeners(fnName, useCapturingParam) {\\n    if (useCapturingParam === void 0) { useCapturingParam = true; }\\n    var symbol = zoneSymbol(fnName);\\n    var defaultUseCapturing = useCapturingParam ? false : undefined;\\n    return function zoneAwareRemoveAllListener(self, args) {\\n        var target = self || _global$1;\\n        if (args.length === 0) {\\n            // remove all listeners without eventName\\n            target[EVENT_TASKS] = [];\\n            // we don't cancel Task either, because call native eventEmitter.removeAllListeners will\\n            // will do remove listener(cancelTask) for us\\n            target[symbol]();\\n            return;\\n        }\\n        var eventName = args[0];\\n        var useCapturing = args[1] || defaultUseCapturing;\\n        // call this function just remove the related eventTask from target[EVENT_TASKS]\\n        findAllExistingRegisteredTasks(target, eventName, useCapturing, true);\\n        // we don't need useCapturing here because useCapturing is just for DOM, and\\n        // removeAllListeners should only be called by node eventEmitter\\n        // and we don't cancel Task either, because call native eventEmitter.removeAllListeners will\\n        // will do remove listener(cancelTask) for us\\n        target[symbol](eventName);\\n    };\\n}\\nfunction makeZoneAwareListeners(fnName) {\\n    var symbol = zoneSymbol(fnName);\\n    return function zoneAwareEventListeners(self, args) {\\n        var eventName = args[0];\\n        var target = self || _global$1;\\n        if (!target[EVENT_TASKS]) {\\n            return [];\\n        }\\n        return target[EVENT_TASKS]\\n            .filter(function (task) { return task.data.eventName === eventName; })\\n            .map(function (task) { return task.data.handler; });\\n    };\\n}\\nvar zoneAwareAddEventListener = makeZoneAwareAddListener(ADD_EVENT_LISTENER, REMOVE_EVENT_LISTENER);\\nvar zoneAwareRemoveEventListener = makeZoneAwareRemoveListener(REMOVE_EVENT_LISTENER);\\n\\nvar originalInstanceKey = zoneSymbol('originalInstance');\\n// wrap some native API on `window`\\n\\n\\nfunction createNamedFn(name, delegate) {\\n    try {\\n        return (Function('f', \\\"return function \\\" + name + \\\"(){return f(this, arguments)}\\\"))(delegate);\\n    }\\n    catch (e) {\\n        // if we fail, we must be CSP, just return delegate.\\n        return function () {\\n            return delegate(this, arguments);\\n        };\\n    }\\n}\\nfunction patchMethod(target, name, patchFn) {\\n    var proto = target;\\n    while (proto && Object.getOwnPropertyNames(proto).indexOf(name) === -1) {\\n        proto = Object.getPrototypeOf(proto);\\n    }\\n    if (!proto && target[name]) {\\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\\n        proto = target;\\n    }\\n    var delegateName = zoneSymbol(name);\\n    var delegate;\\n    if (proto && !(delegate = proto[delegateName])) {\\n        delegate = proto[delegateName] = proto[name];\\n        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));\\n    }\\n    return delegate;\\n}\\n// TODO: support cancel task later if necessary\\nfunction patchMacroTask(obj, funcName, metaCreator) {\\n    var setNative = null;\\n    function scheduleTask(task) {\\n        var data = task.data;\\n        data.args[data.callbackIndex] = function () {\\n            task.invoke.apply(this, arguments);\\n        };\\n        setNative.apply(data.target, data.args);\\n        return task;\\n    }\\n    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\\n        var meta = metaCreator(self, args);\\n        if (meta.callbackIndex >= 0 && typeof args[meta.callbackIndex] === 'function') {\\n            var task = Zone.current.scheduleMacroTask(meta.name, args[meta.callbackIndex], meta, scheduleTask, null);\\n            return task;\\n        }\\n        else {\\n            // cause an error by calling it directly.\\n            return delegate.apply(self, args);\\n        }\\n    }; });\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nvar callAndReturnFirstParam = function (fn) {\\n    return function (self, args) {\\n        fn(self, args);\\n        return self;\\n    };\\n};\\n// For EventEmitter\\nvar EE_ADD_LISTENER = 'addListener';\\nvar EE_PREPEND_LISTENER = 'prependListener';\\nvar EE_REMOVE_LISTENER = 'removeListener';\\nvar EE_REMOVE_ALL_LISTENER = 'removeAllListeners';\\nvar EE_LISTENERS = 'listeners';\\nvar EE_ON = 'on';\\nvar zoneAwareAddListener$1 = callAndReturnFirstParam(makeZoneAwareAddListener(EE_ADD_LISTENER, EE_REMOVE_LISTENER, false, true, false));\\nvar zoneAwarePrependListener = callAndReturnFirstParam(makeZoneAwareAddListener(EE_PREPEND_LISTENER, EE_REMOVE_LISTENER, false, true, true));\\nvar zoneAwareRemoveListener$1 = callAndReturnFirstParam(makeZoneAwareRemoveListener(EE_REMOVE_LISTENER, false));\\nvar zoneAwareRemoveAllListeners = callAndReturnFirstParam(makeZoneAwareRemoveAllListeners(EE_REMOVE_ALL_LISTENER, false));\\nvar zoneAwareListeners = makeZoneAwareListeners(EE_LISTENERS);\\nfunction patchEventEmitterMethods(obj) {\\n    if (obj && obj.addListener) {\\n        patchMethod(obj, EE_ADD_LISTENER, function () { return zoneAwareAddListener$1; });\\n        patchMethod(obj, EE_PREPEND_LISTENER, function () { return zoneAwarePrependListener; });\\n        patchMethod(obj, EE_REMOVE_LISTENER, function () { return zoneAwareRemoveListener$1; });\\n        patchMethod(obj, EE_REMOVE_ALL_LISTENER, function () { return zoneAwareRemoveAllListeners; });\\n        patchMethod(obj, EE_LISTENERS, function () { return zoneAwareListeners; });\\n        obj[EE_ON] = obj[EE_ADD_LISTENER];\\n        return true;\\n    }\\n    else {\\n        return false;\\n    }\\n}\\n// EventEmitter\\nvar events;\\ntry {\\n    events = require('events');\\n}\\ncatch (err) {\\n}\\nif (events && events.EventEmitter) {\\n    patchEventEmitterMethods(events.EventEmitter.prototype);\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nvar fs;\\ntry {\\n    fs = require('fs');\\n}\\ncatch (err) {\\n}\\n// watch, watchFile, unwatchFile has been patched\\n// because EventEmitter has been patched\\nvar TO_PATCH_MACROTASK_METHODS = [\\n    'access', 'appendFile', 'chmod', 'chown', 'close', 'exists', 'fchmod',\\n    'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchmod',\\n    'lchown', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'read',\\n    'readdir', 'readFile', 'readlink', 'realpath', 'rename', 'rmdir', 'stat',\\n    'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile',\\n];\\nif (fs) {\\n    TO_PATCH_MACROTASK_METHODS.filter(function (name) { return !!fs[name] && typeof fs[name] === 'function'; })\\n        .forEach(function (name) {\\n        patchMacroTask(fs, name, function (self, args) {\\n            return {\\n                name: 'fs.' + name,\\n                args: args,\\n                callbackIndex: args.length > 0 ? args.length - 1 : -1,\\n                target: self\\n            };\\n        });\\n    });\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\\n    var setNative = null;\\n    var clearNative = null;\\n    setName += nameSuffix;\\n    cancelName += nameSuffix;\\n    var tasksByHandleId = {};\\n    function scheduleTask(task) {\\n        var data = task.data;\\n        data.args[0] = function () {\\n            task.invoke.apply(this, arguments);\\n            delete tasksByHandleId[data.handleId];\\n        };\\n        data.handleId = setNative.apply(window, data.args);\\n        tasksByHandleId[data.handleId] = task;\\n        return task;\\n    }\\n    function clearTask(task) {\\n        delete tasksByHandleId[task.data.handleId];\\n        return clearNative(task.data.handleId);\\n    }\\n    setNative =\\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\\n            if (typeof args[0] === 'function') {\\n                var zone = Zone.current;\\n                var options = {\\n                    handleId: null,\\n                    isPeriodic: nameSuffix === 'Interval',\\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\\n                    args: args\\n                };\\n                var task = zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);\\n                if (!task) {\\n                    return task;\\n                }\\n                // Node.js must additionally support the ref and unref functions.\\n                var handle = task.data.handleId;\\n                if (handle.ref && handle.unref) {\\n                    task.ref = handle.ref.bind(handle);\\n                    task.unref = handle.unref.bind(handle);\\n                }\\n                return task;\\n            }\\n            else {\\n                // cause an error by calling it directly.\\n                return delegate.apply(window, args);\\n            }\\n        }; });\\n    clearNative =\\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\\n            var task = typeof args[0] === 'number' ? tasksByHandleId[args[0]] : args[0];\\n            if (task && typeof task.type === 'string') {\\n                if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {\\n                    // Do not cancel already canceled functions\\n                    task.zone.cancelTask(task);\\n                }\\n            }\\n            else {\\n                // cause an error by calling it directly.\\n                delegate.apply(window, args);\\n            }\\n        }; });\\n}\\n\\n/**\\n * @license\\n * Copyright Google Inc. All Rights Reserved.\\n *\\n * Use of this source code is governed by an MIT-style license that can be\\n * found in the LICENSE file at https://angular.io/license\\n */\\nvar set = 'set';\\nvar clear = 'clear';\\nvar _global = typeof window === 'object' && window || typeof self === 'object' && self || global;\\n// Timers\\nvar timers = require('timers');\\npatchTimer(timers, set, clear, 'Timeout');\\npatchTimer(timers, set, clear, 'Interval');\\npatchTimer(timers, set, clear, 'Immediate');\\nvar shouldPatchGlobalTimers = global.setTimeout !== timers.setTimeout;\\nif (shouldPatchGlobalTimers) {\\n    patchTimer(_global, set, clear, 'Timeout');\\n    patchTimer(_global, set, clear, 'Interval');\\n    patchTimer(_global, set, clear, 'Immediate');\\n}\\npatchNextTick();\\n// Crypto\\nvar crypto;\\ntry {\\n    crypto = require('crypto');\\n}\\ncatch (err) {\\n}\\n// TODO(gdi2290): implement a better way to patch these methods\\nif (crypto) {\\n    var nativeRandomBytes_1 = crypto.randomBytes;\\n    crypto.randomBytes = function randomBytesZone(size, callback) {\\n        if (!callback) {\\n            return nativeRandomBytes_1(size);\\n        }\\n        else {\\n            var zone = Zone.current;\\n            var source = crypto.constructor.name + '.randomBytes';\\n            return nativeRandomBytes_1(size, zone.wrap(callback, source));\\n        }\\n    }.bind(crypto);\\n    var nativePbkdf2_1 = crypto.pbkdf2;\\n    crypto.pbkdf2 = function pbkdf2Zone() {\\n        var args = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            args[_i] = arguments[_i];\\n        }\\n        var fn = args[args.length - 1];\\n        if (typeof fn === 'function') {\\n            var zone = Zone.current;\\n            var source = crypto.constructor.name + '.pbkdf2';\\n            args[args.length - 1] = zone.wrap(fn, source);\\n            return nativePbkdf2_1.apply(void 0, args);\\n        }\\n        else {\\n            return nativePbkdf2_1.apply(void 0, args);\\n        }\\n    }.bind(crypto);\\n}\\n// HTTP Client\\nvar httpClient;\\ntry {\\n    httpClient = require('_http_client');\\n}\\ncatch (err) {\\n}\\nif (httpClient && httpClient.ClientRequest) {\\n    var ClientRequest_1 = httpClient.ClientRequest.bind(httpClient);\\n    httpClient.ClientRequest = function (options, callback) {\\n        if (!callback) {\\n            return new ClientRequest_1(options);\\n        }\\n        else {\\n            var zone = Zone.current;\\n            return new ClientRequest_1(options, zone.wrap(callback, 'http.ClientRequest'));\\n        }\\n    };\\n}\\nfunction patchNextTick() {\\n    var setNative = null;\\n    function scheduleTask(task) {\\n        var args = task.data;\\n        args[0] = function () {\\n            task.invoke.apply(this, arguments);\\n        };\\n        setNative.apply(process, args);\\n        return task;\\n    }\\n    setNative =\\n        patchMethod(process, 'nextTick', function (delegate) { return function (self, args) {\\n            if (typeof args[0] === 'function') {\\n                var zone = Zone.current;\\n                var task = zone.scheduleMicroTask('nextTick', args[0], args, scheduleTask);\\n                return task;\\n            }\\n            else {\\n                // cause an error by calling it directly.\\n                return delegate.apply(process, args);\\n            }\\n        }; });\\n}\\n\\n})));\\n\",\"module.exports = require(\\\"_http_client\\\");\",\"\\\"use strict\\\";\\r\\nvar DiagChannel = require(\\\"./diagnostic-channel/initialization\\\");\\r\\nvar AutoCollectConsole = (function () {\\r\\n    function AutoCollectConsole(client) {\\r\\n        if (!!AutoCollectConsole.INSTANCE) {\\r\\n            throw new Error(\\\"Console logging adapter tracking should be configured from the applicationInsights object\\\");\\r\\n        }\\r\\n        this._client = client;\\r\\n        AutoCollectConsole.INSTANCE = this;\\r\\n    }\\r\\n    AutoCollectConsole.prototype.enable = function (isEnabled, collectConsoleLog) {\\r\\n        if (DiagChannel.IsInitialized) {\\r\\n            require(\\\"./diagnostic-channel/console.sub\\\").enable(isEnabled && collectConsoleLog, this._client);\\r\\n            require(\\\"./diagnostic-channel/bunyan.sub\\\").enable(isEnabled, this._client);\\r\\n            require(\\\"./diagnostic-channel/winston.sub\\\").enable(isEnabled, this._client);\\r\\n        }\\r\\n    };\\r\\n    AutoCollectConsole.prototype.isInitialized = function () {\\r\\n        return this._isInitialized;\\r\\n    };\\r\\n    AutoCollectConsole.prototype.dispose = function () {\\r\\n        AutoCollectConsole.INSTANCE = null;\\r\\n        this.enable(false, false);\\r\\n    };\\r\\n    AutoCollectConsole._methodNames = [\\\"debug\\\", \\\"info\\\", \\\"log\\\", \\\"warn\\\", \\\"error\\\"];\\r\\n    return AutoCollectConsole;\\r\\n}());\\r\\nmodule.exports = AutoCollectConsole;\\r\\n//# sourceMappingURL=Console.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Contracts_1 = require(\\\"../../Declarations/Contracts\\\");\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar clients = [];\\r\\nvar subscriber = function (event) {\\r\\n    clients.forEach(function (client) {\\r\\n        // Message can have a trailing newline\\r\\n        var message = event.data.message;\\r\\n        if (message.lastIndexOf(\\\"\\\\n\\\") == message.length - 1) {\\r\\n            message = message.substring(0, message.length - 1);\\r\\n        }\\r\\n        client.trackTrace({ message: message, severity: (event.data.stderr ? Contracts_1.SeverityLevel.Warning : Contracts_1.SeverityLevel.Information) });\\r\\n    });\\r\\n};\\r\\nfunction enable(enabled, client) {\\r\\n    if (enabled) {\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.subscribe(\\\"console\\\", subscriber);\\r\\n        }\\r\\n        ;\\r\\n        clients.push(client);\\r\\n    }\\r\\n    else {\\r\\n        clients = clients.filter(function (c) { return c != client; });\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.unsubscribe(\\\"console\\\", subscriber);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=console.sub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Generated_1 = require(\\\"./Generated\\\");\\r\\nvar RemoteDependencyDataConstants = (function () {\\r\\n    function RemoteDependencyDataConstants() {\\r\\n    }\\r\\n    RemoteDependencyDataConstants.TYPE_HTTP = \\\"Http\\\";\\r\\n    RemoteDependencyDataConstants.TYPE_AI = \\\"Http (tracked component)\\\";\\r\\n    return RemoteDependencyDataConstants;\\r\\n}());\\r\\nexports.RemoteDependencyDataConstants = RemoteDependencyDataConstants;\\r\\nfunction domainSupportsProperties(domain) {\\r\\n    return \\\"properties\\\" in domain ||\\r\\n        domain instanceof Generated_1.EventData ||\\r\\n        domain instanceof Generated_1.ExceptionData ||\\r\\n        domain instanceof Generated_1.MessageData ||\\r\\n        domain instanceof Generated_1.MetricData ||\\r\\n        domain instanceof Generated_1.PageViewData ||\\r\\n        domain instanceof Generated_1.RemoteDependencyData ||\\r\\n        domain instanceof Generated_1.RequestData;\\r\\n}\\r\\nexports.domainSupportsProperties = domainSupportsProperties;\\r\\n//# sourceMappingURL=Constants.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Domain = require(\\\"./Domain\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Instances of AvailabilityData represent the result of executing an availability test.\\r\\n */\\r\\nvar AvailabilityData = (function (_super) {\\r\\n    __extends(AvailabilityData, _super);\\r\\n    function AvailabilityData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.properties = {};\\r\\n        _this.measurements = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return AvailabilityData;\\r\\n}(Domain));\\r\\nmodule.exports = AvailabilityData;\\r\\n//# sourceMappingURL=AvailabilityData.js.map\",\"// THIS FILE WAS AUTOGENERATED\\r\\n\\\"use strict\\\";\\r\\nvar ContextTagKeys = (function () {\\r\\n    function ContextTagKeys() {\\r\\n        this.applicationVersion = \\\"ai.application.ver\\\";\\r\\n        this.deviceId = \\\"ai.device.id\\\";\\r\\n        this.deviceLocale = \\\"ai.device.locale\\\";\\r\\n        this.deviceModel = \\\"ai.device.model\\\";\\r\\n        this.deviceOEMName = \\\"ai.device.oemName\\\";\\r\\n        this.deviceOSVersion = \\\"ai.device.osVersion\\\";\\r\\n        this.deviceType = \\\"ai.device.type\\\";\\r\\n        this.locationIp = \\\"ai.location.ip\\\";\\r\\n        this.operationId = \\\"ai.operation.id\\\";\\r\\n        this.operationName = \\\"ai.operation.name\\\";\\r\\n        this.operationParentId = \\\"ai.operation.parentId\\\";\\r\\n        this.operationSyntheticSource = \\\"ai.operation.syntheticSource\\\";\\r\\n        this.operationCorrelationVector = \\\"ai.operation.correlationVector\\\";\\r\\n        this.sessionId = \\\"ai.session.id\\\";\\r\\n        this.sessionIsFirst = \\\"ai.session.isFirst\\\";\\r\\n        this.userAccountId = \\\"ai.user.accountId\\\";\\r\\n        this.userId = \\\"ai.user.id\\\";\\r\\n        this.userAuthUserId = \\\"ai.user.authUserId\\\";\\r\\n        this.cloudRole = \\\"ai.cloud.role\\\";\\r\\n        this.cloudRoleInstance = \\\"ai.cloud.roleInstance\\\";\\r\\n        this.internalSdkVersion = \\\"ai.internal.sdkVersion\\\";\\r\\n        this.internalAgentVersion = \\\"ai.internal.agentVersion\\\";\\r\\n        this.internalNodeName = \\\"ai.internal.nodeName\\\";\\r\\n    }\\r\\n    return ContextTagKeys;\\r\\n}());\\r\\nmodule.exports = ContextTagKeys;\\r\\n//# sourceMappingURL=ContextTagKeys.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Base = require(\\\"./Base\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Data struct to contain both B and C sections.\\r\\n */\\r\\nvar Data = (function (_super) {\\r\\n    __extends(Data, _super);\\r\\n    function Data() {\\r\\n        return _super.call(this) || this;\\r\\n    }\\r\\n    return Data;\\r\\n}(Base));\\r\\nmodule.exports = Data;\\r\\n//# sourceMappingURL=Data.js.map\",\"\\\"use strict\\\";\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar DataPointType = require(\\\"./DataPointType\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Metric data single measurement.\\r\\n */\\r\\nvar DataPoint = (function () {\\r\\n    function DataPoint() {\\r\\n        this.kind = DataPointType.Measurement;\\r\\n    }\\r\\n    return DataPoint;\\r\\n}());\\r\\nmodule.exports = DataPoint;\\r\\n//# sourceMappingURL=DataPoint.js.map\",\"\\\"use strict\\\";\\r\\n/**\\r\\n * System variables for a telemetry item.\\r\\n */\\r\\nvar Envelope = (function () {\\r\\n    function Envelope() {\\r\\n        this.ver = 1;\\r\\n        this.sampleRate = 100.0;\\r\\n        this.tags = {};\\r\\n    }\\r\\n    return Envelope;\\r\\n}());\\r\\nmodule.exports = Envelope;\\r\\n//# sourceMappingURL=Envelope.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Domain = require(\\\"./Domain\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\\r\\n */\\r\\nvar ExceptionData = (function (_super) {\\r\\n    __extends(ExceptionData, _super);\\r\\n    function ExceptionData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.exceptions = [];\\r\\n        _this.properties = {};\\r\\n        _this.measurements = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return ExceptionData;\\r\\n}(Domain));\\r\\nmodule.exports = ExceptionData;\\r\\n//# sourceMappingURL=ExceptionData.js.map\",\"\\\"use strict\\\";\\r\\n/**\\r\\n * Exception details of the exception in a chain.\\r\\n */\\r\\nvar ExceptionDetails = (function () {\\r\\n    function ExceptionDetails() {\\r\\n        this.hasFullStack = true;\\r\\n        this.parsedStack = [];\\r\\n    }\\r\\n    return ExceptionDetails;\\r\\n}());\\r\\nmodule.exports = ExceptionDetails;\\r\\n//# sourceMappingURL=ExceptionDetails.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Domain = require(\\\"./Domain\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\\r\\n */\\r\\nvar MessageData = (function (_super) {\\r\\n    __extends(MessageData, _super);\\r\\n    function MessageData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.properties = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return MessageData;\\r\\n}(Domain));\\r\\nmodule.exports = MessageData;\\r\\n//# sourceMappingURL=MessageData.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Domain = require(\\\"./Domain\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\\r\\n */\\r\\nvar MetricData = (function (_super) {\\r\\n    __extends(MetricData, _super);\\r\\n    function MetricData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.metrics = [];\\r\\n        _this.properties = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return MetricData;\\r\\n}(Domain));\\r\\nmodule.exports = MetricData;\\r\\n//# sourceMappingURL=MetricData.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar EventData = require(\\\"./EventData\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\\r\\n */\\r\\nvar PageViewData = (function (_super) {\\r\\n    __extends(PageViewData, _super);\\r\\n    function PageViewData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.properties = {};\\r\\n        _this.measurements = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return PageViewData;\\r\\n}(EventData));\\r\\nmodule.exports = PageViewData;\\r\\n//# sourceMappingURL=PageViewData.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Domain = require(\\\"./Domain\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\\r\\n */\\r\\nvar RemoteDependencyData = (function (_super) {\\r\\n    __extends(RemoteDependencyData, _super);\\r\\n    function RemoteDependencyData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.success = true;\\r\\n        _this.properties = {};\\r\\n        _this.measurements = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return RemoteDependencyData;\\r\\n}(Domain));\\r\\nmodule.exports = RemoteDependencyData;\\r\\n//# sourceMappingURL=RemoteDependencyData.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\n// THIS FILE WAS AUTOGENERATED\\r\\nvar Domain = require(\\\"./Domain\\\");\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * An instance of Request represents completion of an external request to the application to do work and contains a summary of that request execution and the results.\\r\\n */\\r\\nvar RequestData = (function (_super) {\\r\\n    __extends(RequestData, _super);\\r\\n    function RequestData() {\\r\\n        var _this = _super.call(this) || this;\\r\\n        _this.ver = 2;\\r\\n        _this.properties = {};\\r\\n        _this.measurements = {};\\r\\n        return _this;\\r\\n    }\\r\\n    return RequestData;\\r\\n}(Domain));\\r\\nmodule.exports = RequestData;\\r\\n//# sourceMappingURL=RequestData.js.map\",\"// THIS FILE WAS AUTOGENERATED\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Defines the level of severity for the event.\\r\\n */\\r\\nvar SeverityLevel;\\r\\n(function (SeverityLevel) {\\r\\n    SeverityLevel[SeverityLevel[\\\"Verbose\\\"] = 0] = \\\"Verbose\\\";\\r\\n    SeverityLevel[SeverityLevel[\\\"Information\\\"] = 1] = \\\"Information\\\";\\r\\n    SeverityLevel[SeverityLevel[\\\"Warning\\\"] = 2] = \\\"Warning\\\";\\r\\n    SeverityLevel[SeverityLevel[\\\"Error\\\"] = 3] = \\\"Error\\\";\\r\\n    SeverityLevel[SeverityLevel[\\\"Critical\\\"] = 4] = \\\"Critical\\\";\\r\\n})(SeverityLevel || (SeverityLevel = {}));\\r\\nmodule.exports = SeverityLevel;\\r\\n//# sourceMappingURL=SeverityLevel.js.map\",\"// THIS FILE WAS AUTOGENERATED\\r\\n\\\"use strict\\\";\\r\\n/**\\r\\n * Stack frame information.\\r\\n */\\r\\nvar StackFrame = (function () {\\r\\n    function StackFrame() {\\r\\n    }\\r\\n    return StackFrame;\\r\\n}());\\r\\nmodule.exports = StackFrame;\\r\\n//# sourceMappingURL=StackFrame.js.map\",\"\\\"use strict\\\";\\r\\nfunction __export(m) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n__export(require(\\\"./TelemetryType\\\"));\\r\\n//# sourceMappingURL=index.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n/**\\r\\n * Converts the user-friendly enumeration TelemetryType to the underlying schema baseType value\\r\\n * @param type Type to convert to BaseData string\\r\\n */\\r\\nfunction telemetryTypeToBaseType(type) {\\r\\n    switch (type) {\\r\\n        case TelemetryType.Event:\\r\\n            return \\\"EventData\\\";\\r\\n        case TelemetryType.Exception:\\r\\n            return \\\"ExceptionData\\\";\\r\\n        case TelemetryType.Trace:\\r\\n            return \\\"MessageData\\\";\\r\\n        case TelemetryType.Metric:\\r\\n            return \\\"MetricData\\\";\\r\\n        case TelemetryType.Request:\\r\\n            return \\\"RequestData\\\";\\r\\n        case TelemetryType.Dependency:\\r\\n            return \\\"RemoteDependencyData\\\";\\r\\n    }\\r\\n    return undefined;\\r\\n}\\r\\nexports.telemetryTypeToBaseType = telemetryTypeToBaseType;\\r\\n/**\\r\\n * Converts the schema baseType value to the user-friendly enumeration TelemetryType\\r\\n * @param baseType BaseData string to convert to TelemetryType\\r\\n */\\r\\nfunction baseTypeToTelemetryType(baseType) {\\r\\n    switch (baseType) {\\r\\n        case \\\"EventData\\\":\\r\\n            return TelemetryType.Event;\\r\\n        case \\\"ExceptionData\\\":\\r\\n            return TelemetryType.Exception;\\r\\n        case \\\"MessageData\\\":\\r\\n            return TelemetryType.Trace;\\r\\n        case \\\"MetricData\\\":\\r\\n            return TelemetryType.Metric;\\r\\n        case \\\"RequestData\\\":\\r\\n            return TelemetryType.Request;\\r\\n        case \\\"RemoteDependencyData\\\":\\r\\n            return TelemetryType.Dependency;\\r\\n    }\\r\\n    return undefined;\\r\\n}\\r\\nexports.baseTypeToTelemetryType = baseTypeToTelemetryType;\\r\\n/**\\r\\n * Telemetry types supported by this SDK\\r\\n */\\r\\nvar TelemetryType;\\r\\n(function (TelemetryType) {\\r\\n    TelemetryType[TelemetryType[\\\"Event\\\"] = 0] = \\\"Event\\\";\\r\\n    TelemetryType[TelemetryType[\\\"Exception\\\"] = 1] = \\\"Exception\\\";\\r\\n    TelemetryType[TelemetryType[\\\"Trace\\\"] = 2] = \\\"Trace\\\";\\r\\n    TelemetryType[TelemetryType[\\\"Metric\\\"] = 3] = \\\"Metric\\\";\\r\\n    TelemetryType[TelemetryType[\\\"Request\\\"] = 4] = \\\"Request\\\";\\r\\n    TelemetryType[TelemetryType[\\\"Dependency\\\"] = 5] = \\\"Dependency\\\";\\r\\n})(TelemetryType = exports.TelemetryType || (exports.TelemetryType = {}));\\r\\n//# sourceMappingURL=TelemetryType.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Contracts_1 = require(\\\"../../Declarations/Contracts\\\");\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar clients = [];\\r\\n// Mapping from bunyan levels defined at https://github.com/trentm/node-bunyan/blob/master/lib/bunyan.js#L256\\r\\nvar bunyanToAILevelMap = {\\r\\n    10: Contracts_1.SeverityLevel.Verbose,\\r\\n    20: Contracts_1.SeverityLevel.Verbose,\\r\\n    30: Contracts_1.SeverityLevel.Information,\\r\\n    40: Contracts_1.SeverityLevel.Warning,\\r\\n    50: Contracts_1.SeverityLevel.Error,\\r\\n    60: Contracts_1.SeverityLevel.Critical,\\r\\n};\\r\\nvar subscriber = function (event) {\\r\\n    clients.forEach(function (client) {\\r\\n        var AIlevel = bunyanToAILevelMap[event.data.level];\\r\\n        client.trackTrace({ message: event.data.result, severity: AIlevel });\\r\\n    });\\r\\n};\\r\\nfunction enable(enabled, client) {\\r\\n    if (enabled) {\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.subscribe(\\\"bunyan\\\", subscriber);\\r\\n        }\\r\\n        ;\\r\\n        clients.push(client);\\r\\n    }\\r\\n    else {\\r\\n        clients = clients.filter(function (c) { return c != client; });\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.unsubscribe(\\\"bunyan\\\", subscriber);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=bunyan.sub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Contracts_1 = require(\\\"../../Declarations/Contracts\\\");\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar clients = [];\\r\\nvar winstonToAILevelMap = {\\r\\n    syslog: function (og) {\\r\\n        var map = {\\r\\n            emerg: Contracts_1.SeverityLevel.Critical,\\r\\n            alert: Contracts_1.SeverityLevel.Critical,\\r\\n            crit: Contracts_1.SeverityLevel.Critical,\\r\\n            error: Contracts_1.SeverityLevel.Error,\\r\\n            warning: Contracts_1.SeverityLevel.Warning,\\r\\n            notice: Contracts_1.SeverityLevel.Information,\\r\\n            info: Contracts_1.SeverityLevel.Information,\\r\\n            debug: Contracts_1.SeverityLevel.Verbose\\r\\n        };\\r\\n        return map[og] === undefined ? Contracts_1.SeverityLevel.Information : map[og];\\r\\n    },\\r\\n    npm: function (og) {\\r\\n        var map = {\\r\\n            error: Contracts_1.SeverityLevel.Error,\\r\\n            warn: Contracts_1.SeverityLevel.Warning,\\r\\n            info: Contracts_1.SeverityLevel.Information,\\r\\n            verbose: Contracts_1.SeverityLevel.Verbose,\\r\\n            debug: Contracts_1.SeverityLevel.Verbose,\\r\\n            silly: Contracts_1.SeverityLevel.Verbose\\r\\n        };\\r\\n        return map[og] === undefined ? Contracts_1.SeverityLevel.Information : map[og];\\r\\n    },\\r\\n    unknown: function (og) {\\r\\n        return Contracts_1.SeverityLevel.Information;\\r\\n    }\\r\\n};\\r\\nvar subscriber = function (event) {\\r\\n    clients.forEach(function (client) {\\r\\n        var AIlevel = winstonToAILevelMap[event.data.levelKind](event.data.level);\\r\\n        client.trackTrace({\\r\\n            message: event.data.message,\\r\\n            severity: AIlevel,\\r\\n            properties: event.data.meta\\r\\n        });\\r\\n    });\\r\\n};\\r\\nfunction enable(enabled, client) {\\r\\n    if (enabled) {\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.subscribe(\\\"winston\\\", subscriber);\\r\\n        }\\r\\n        ;\\r\\n        clients.push(client);\\r\\n    }\\r\\n    else {\\r\\n        clients = clients.filter(function (c) { return c != client; });\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.unsubscribe(\\\"winston\\\", subscriber);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=winston.sub.js.map\",\"\\\"use strict\\\";\\r\\nvar AutoCollectExceptions = (function () {\\r\\n    function AutoCollectExceptions(client) {\\r\\n        if (!!AutoCollectExceptions.INSTANCE) {\\r\\n            throw new Error(\\\"Exception tracking should be configured from the applicationInsights object\\\");\\r\\n        }\\r\\n        AutoCollectExceptions.INSTANCE = this;\\r\\n        this._client = client;\\r\\n    }\\r\\n    Object.defineProperty(AutoCollectExceptions, \\\"UNCAUGHT_EXCEPTION_HANDLER_NAME\\\", {\\r\\n        get: function () { return \\\"uncaughtException\\\"; },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(AutoCollectExceptions, \\\"UNHANDLED_REJECTION_HANDLER_NAME\\\", {\\r\\n        get: function () { return \\\"unhandledRejection\\\"; },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    AutoCollectExceptions.prototype.isInitialized = function () {\\r\\n        return this._isInitialized;\\r\\n    };\\r\\n    AutoCollectExceptions.prototype.enable = function (isEnabled) {\\r\\n        var _this = this;\\r\\n        if (isEnabled) {\\r\\n            this._isInitialized = true;\\r\\n            var self = this;\\r\\n            if (!this._exceptionListenerHandle) {\\r\\n                var handle = function (reThrow, error) {\\r\\n                    _this._client.trackException({ exception: error });\\r\\n                    _this._client.flush({ isAppCrashing: true });\\r\\n                    if (reThrow) {\\r\\n                        var THIS_IS_APPLICATION_INSIGHTS_RETHROWING_YOUR_EXCEPTION = error;\\r\\n                        throw THIS_IS_APPLICATION_INSIGHTS_RETHROWING_YOUR_EXCEPTION; // Error originated somewhere else in your app\\r\\n                    }\\r\\n                };\\r\\n                this._exceptionListenerHandle = handle.bind(this, true);\\r\\n                this._rejectionListenerHandle = handle.bind(this, false);\\r\\n                process.on(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\\r\\n                process.on(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            if (this._exceptionListenerHandle) {\\r\\n                process.removeListener(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\\r\\n                process.removeListener(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\\r\\n                this._exceptionListenerHandle = undefined;\\r\\n                this._rejectionListenerHandle = undefined;\\r\\n                delete this._exceptionListenerHandle;\\r\\n                delete this._rejectionListenerHandle;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    AutoCollectExceptions.prototype.dispose = function () {\\r\\n        AutoCollectExceptions.INSTANCE = null;\\r\\n        this.enable(false);\\r\\n        this._isInitialized = false;\\r\\n    };\\r\\n    AutoCollectExceptions.INSTANCE = null;\\r\\n    return AutoCollectExceptions;\\r\\n}());\\r\\nmodule.exports = AutoCollectExceptions;\\r\\n//# sourceMappingURL=Exceptions.js.map\",\"module.exports = require(\\\"constants\\\");\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nvar url = require(\\\"url\\\");\\r\\nvar Contracts = require(\\\"../Declarations/Contracts\\\");\\r\\nvar Util = require(\\\"../Library/Util\\\");\\r\\nvar RequestResponseHeaders = require(\\\"../Library/RequestResponseHeaders\\\");\\r\\nvar RequestParser = require(\\\"./RequestParser\\\");\\r\\nvar CorrelationIdManager = require(\\\"../Library/CorrelationIdManager\\\");\\r\\n/**\\r\\n * Helper class to read data from the requst/response objects and convert them into the telemetry contract\\r\\n */\\r\\nvar HttpDependencyParser = (function (_super) {\\r\\n    __extends(HttpDependencyParser, _super);\\r\\n    function HttpDependencyParser(requestOptions, request) {\\r\\n        var _this = _super.call(this) || this;\\r\\n        if (request && request.method && requestOptions) {\\r\\n            // The ClientRequest.method property isn't documented, but is always there.\\r\\n            _this.method = request.method;\\r\\n            _this.url = HttpDependencyParser._getUrlFromRequestOptions(requestOptions, request);\\r\\n            _this.startTime = +new Date();\\r\\n        }\\r\\n        return _this;\\r\\n    }\\r\\n    /**\\r\\n     * Called when the ClientRequest emits an error event.\\r\\n     */\\r\\n    HttpDependencyParser.prototype.onError = function (error) {\\r\\n        this._setStatus(undefined, error);\\r\\n    };\\r\\n    /**\\r\\n     * Called when the ClientRequest emits a response event.\\r\\n     */\\r\\n    HttpDependencyParser.prototype.onResponse = function (response) {\\r\\n        this._setStatus(response.statusCode, undefined);\\r\\n        this.correlationId = Util.getCorrelationContextTarget(response, RequestResponseHeaders.requestContextTargetKey);\\r\\n    };\\r\\n    /**\\r\\n     * Gets a dependency data contract object for a completed ClientRequest.\\r\\n     */\\r\\n    HttpDependencyParser.prototype.getDependencyTelemetry = function (baseTelemetry, dependencyId) {\\r\\n        var urlObject = url.parse(this.url);\\r\\n        urlObject.search = undefined;\\r\\n        urlObject.hash = undefined;\\r\\n        var dependencyName = this.method.toUpperCase() + \\\" \\\" + urlObject.pathname;\\r\\n        var remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_HTTP;\\r\\n        var remoteDependencyTarget = urlObject.hostname;\\r\\n        if (this.correlationId) {\\r\\n            remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_AI;\\r\\n            if (this.correlationId !== CorrelationIdManager.correlationIdPrefix) {\\r\\n                remoteDependencyTarget = urlObject.hostname + \\\" | \\\" + this.correlationId;\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            remoteDependencyType = Contracts.RemoteDependencyDataConstants.TYPE_HTTP;\\r\\n        }\\r\\n        var dependencyTelemetry = {\\r\\n            id: dependencyId,\\r\\n            name: dependencyName,\\r\\n            data: this.url,\\r\\n            duration: this.duration,\\r\\n            success: this._isSuccess(),\\r\\n            resultCode: this.statusCode ? this.statusCode.toString() : null,\\r\\n            properties: this.properties || {},\\r\\n            dependencyTypeName: remoteDependencyType,\\r\\n            target: remoteDependencyTarget\\r\\n        };\\r\\n        // We should keep any parameters the user passed in\\r\\n        // Except the fields defined above in requestTelemetry, which take priority\\r\\n        // Except the properties field, where they're merged instead, with baseTelemetry taking priority\\r\\n        if (baseTelemetry) {\\r\\n            // Copy missing fields\\r\\n            for (var key in baseTelemetry) {\\r\\n                if (!dependencyTelemetry[key]) {\\r\\n                    dependencyTelemetry[key] = baseTelemetry[key];\\r\\n                }\\r\\n            }\\r\\n            // Merge properties\\r\\n            if (baseTelemetry.properties) {\\r\\n                for (var key in baseTelemetry.properties) {\\r\\n                    dependencyTelemetry.properties[key] = baseTelemetry.properties[key];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return dependencyTelemetry;\\r\\n    };\\r\\n    /**\\r\\n     * Builds a URL from request options, using the same logic as http.request(). This is\\r\\n     * necessary because a ClientRequest object does not expose a url property.\\r\\n     */\\r\\n    HttpDependencyParser._getUrlFromRequestOptions = function (options, request) {\\r\\n        if (typeof options === 'string') {\\r\\n            options = url.parse(options);\\r\\n        }\\r\\n        else {\\r\\n            // Avoid modifying the original options object.\\r\\n            var originalOptions_1 = options;\\r\\n            options = {};\\r\\n            if (originalOptions_1) {\\r\\n                Object.keys(originalOptions_1).forEach(function (key) {\\r\\n                    options[key] = originalOptions_1[key];\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        // Oddly, url.format ignores path and only uses pathname and search,\\r\\n        // so create them from the path, if path was specified\\r\\n        if (options.path) {\\r\\n            var parsedQuery = url.parse(options.path);\\r\\n            options.pathname = parsedQuery.pathname;\\r\\n            options.search = parsedQuery.search;\\r\\n        }\\r\\n        // Simiarly, url.format ignores hostname and port if host is specified,\\r\\n        // even if host doesn't have the port, but http.request does not work\\r\\n        // this way. It will use the port if one is not specified in host,\\r\\n        // effectively treating host as hostname, but will use the port specified\\r\\n        // in host if it exists.\\r\\n        if (options.host && options.port) {\\r\\n            // Force a protocol so it will parse the host as the host, not path.\\r\\n            // It is discarded and not used, so it doesn't matter if it doesn't match\\r\\n            var parsedHost = url.parse(\\\"http://\\\" + options.host);\\r\\n            if (!parsedHost.port && options.port) {\\r\\n                options.hostname = options.host;\\r\\n                delete options.host;\\r\\n            }\\r\\n        }\\r\\n        // Mix in default values used by http.request and others\\r\\n        options.protocol = options.protocol || (request.agent && request.agent.protocol) || undefined;\\r\\n        options.hostname = options.hostname || 'localhost';\\r\\n        return url.format(options);\\r\\n    };\\r\\n    return HttpDependencyParser;\\r\\n}(RequestParser));\\r\\nmodule.exports = HttpDependencyParser;\\r\\n//# sourceMappingURL=HttpDependencyParser.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar clients = [];\\r\\nexports.subscriber = function (event) {\\r\\n    clients.forEach(function (client) {\\r\\n        var dbName = (event.data.startedData && event.data.startedData.databaseName) || \\\"Unknown database\\\";\\r\\n        client.trackDependency({\\r\\n            target: dbName,\\r\\n            data: event.data.event.commandName,\\r\\n            name: event.data.event.commandName,\\r\\n            duration: event.data.event.duration,\\r\\n            success: event.data.succeeded,\\r\\n            /* TODO: transmit result code from mongo */\\r\\n            resultCode: event.data.succeeded ? \\\"0\\\" : \\\"1\\\",\\r\\n            dependencyTypeName: 'mongodb'\\r\\n        });\\r\\n    });\\r\\n};\\r\\nfunction enable(enabled, client) {\\r\\n    if (enabled) {\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.subscribe(\\\"mongodb\\\", exports.subscriber);\\r\\n        }\\r\\n        ;\\r\\n        clients.push(client);\\r\\n    }\\r\\n    else {\\r\\n        clients = clients.filter(function (c) { return c != client; });\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.unsubscribe(\\\"mongodb\\\", exports.subscriber);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=mongodb.sub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar clients = [];\\r\\nexports.subscriber = function (event) {\\r\\n    clients.forEach(function (client) {\\r\\n        var queryObj = event.data.query || {};\\r\\n        var sqlString = queryObj.sql || \\\"Unknown query\\\";\\r\\n        var success = !event.data.err;\\r\\n        var connection = queryObj._connection || {};\\r\\n        var connectionConfig = connection.config || {};\\r\\n        var dbName = connectionConfig.socketPath ? connectionConfig.socketPath : (connectionConfig.host || \\\"localhost\\\") + \\\":\\\" + connectionConfig.port;\\r\\n        client.trackDependency({\\r\\n            target: dbName,\\r\\n            data: sqlString,\\r\\n            name: sqlString,\\r\\n            duration: event.data.duration,\\r\\n            success: success,\\r\\n            /* TODO: transmit result code from mysql */\\r\\n            resultCode: success ? \\\"0\\\" : \\\"1\\\",\\r\\n            dependencyTypeName: \\\"mysql\\\"\\r\\n        });\\r\\n    });\\r\\n};\\r\\nfunction enable(enabled, client) {\\r\\n    if (enabled) {\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.subscribe(\\\"mysql\\\", exports.subscriber);\\r\\n        }\\r\\n        ;\\r\\n        clients.push(client);\\r\\n    }\\r\\n    else {\\r\\n        clients = clients.filter(function (c) { return c != client; });\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.unsubscribe(\\\"mysql\\\", exports.subscriber);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=mysql.sub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar clients = [];\\r\\nexports.subscriber = function (event) {\\r\\n    clients.forEach(function (client) {\\r\\n        if (event.data.commandObj.command === \\\"info\\\") {\\r\\n            // We don't want to report 'info', it's irrelevant\\r\\n            return;\\r\\n        }\\r\\n        client.trackDependency({\\r\\n            target: event.data.address,\\r\\n            name: event.data.commandObj.command,\\r\\n            data: event.data.commandObj.command,\\r\\n            duration: event.data.duration,\\r\\n            success: !event.data.err,\\r\\n            /* TODO: transmit result code from redis */\\r\\n            resultCode: event.data.err ? \\\"1\\\" : \\\"0\\\",\\r\\n            dependencyTypeName: \\\"redis\\\"\\r\\n        });\\r\\n    });\\r\\n};\\r\\nfunction enable(enabled, client) {\\r\\n    if (enabled) {\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.subscribe(\\\"redis\\\", exports.subscriber);\\r\\n        }\\r\\n        ;\\r\\n        clients.push(client);\\r\\n    }\\r\\n    else {\\r\\n        clients = clients.filter(function (c) { return c != client; });\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.unsubscribe(\\\"redis\\\", exports.subscriber);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=redis.sub.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar diagnostic_channel_1 = require(\\\"diagnostic-channel\\\");\\r\\nvar clients = [];\\r\\nexports.subscriber = function (event) {\\r\\n    clients.forEach(function (client) {\\r\\n        var q = event.data.query;\\r\\n        var sql = (q.preparable && q.preparable.text) || q.plan || q.text || \\\"unknown query\\\";\\r\\n        var success = !event.data.error;\\r\\n        var conn = event.data.database.host + \\\":\\\" + event.data.database.port;\\r\\n        client.trackDependency({\\r\\n            target: conn,\\r\\n            data: sql,\\r\\n            name: sql,\\r\\n            duration: event.data.duration,\\r\\n            success: success,\\r\\n            resultCode: success ? \\\"0\\\" : \\\"1\\\",\\r\\n            dependencyTypeName: \\\"postgres\\\"\\r\\n        });\\r\\n    });\\r\\n};\\r\\nfunction enable(enabled, client) {\\r\\n    if (enabled) {\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.subscribe(\\\"postgres\\\", exports.subscriber);\\r\\n        }\\r\\n        ;\\r\\n        clients.push(client);\\r\\n    }\\r\\n    else {\\r\\n        clients = clients.filter(function (c) { return c != client; });\\r\\n        if (clients.length === 0) {\\r\\n            diagnostic_channel_1.channel.unsubscribe(\\\"postgres\\\", exports.subscriber);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.enable = enable;\\r\\n//# sourceMappingURL=postgres.sub.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nvar url = require(\\\"url\\\");\\r\\nvar Contracts = require(\\\"../Declarations/Contracts\\\");\\r\\nvar Util = require(\\\"../Library/Util\\\");\\r\\nvar RequestResponseHeaders = require(\\\"../Library/RequestResponseHeaders\\\");\\r\\nvar RequestParser = require(\\\"./RequestParser\\\");\\r\\nvar CorrelationIdManager = require(\\\"../Library/CorrelationIdManager\\\");\\r\\n/**\\r\\n * Helper class to read data from the requst/response objects and convert them into the telemetry contract\\r\\n */\\r\\nvar HttpRequestParser = (function (_super) {\\r\\n    __extends(HttpRequestParser, _super);\\r\\n    function HttpRequestParser(request, requestId) {\\r\\n        var _this = _super.call(this) || this;\\r\\n        if (request) {\\r\\n            _this.method = request.method;\\r\\n            _this.url = _this._getAbsoluteUrl(request);\\r\\n            _this.startTime = +new Date();\\r\\n            _this.socketRemoteAddress = request.socket && request.socket.remoteAddress;\\r\\n            _this.parseHeaders(request, requestId);\\r\\n            if (request.connection) {\\r\\n                _this.connectionRemoteAddress = request.connection.remoteAddress;\\r\\n                _this.legacySocketRemoteAddress = request.connection[\\\"socket\\\"] && request.connection[\\\"socket\\\"].remoteAddress;\\r\\n            }\\r\\n        }\\r\\n        return _this;\\r\\n    }\\r\\n    HttpRequestParser.prototype.onError = function (error, ellapsedMilliseconds) {\\r\\n        this._setStatus(undefined, error);\\r\\n        // This parameter is only for overrides. setStatus handles this internally for the autocollected case\\r\\n        if (ellapsedMilliseconds) {\\r\\n            this.duration = ellapsedMilliseconds;\\r\\n        }\\r\\n    };\\r\\n    HttpRequestParser.prototype.onResponse = function (response, ellapsedMilliseconds) {\\r\\n        this._setStatus(response.statusCode, undefined);\\r\\n        // This parameter is only for overrides. setStatus handles this internally for the autocollected case\\r\\n        if (ellapsedMilliseconds) {\\r\\n            this.duration = ellapsedMilliseconds;\\r\\n        }\\r\\n    };\\r\\n    HttpRequestParser.prototype.getRequestTelemetry = function (baseTelemetry) {\\r\\n        var requestTelemetry = {\\r\\n            id: this.requestId,\\r\\n            name: this.method + \\\" \\\" + url.parse(this.url).pathname,\\r\\n            url: this.url,\\r\\n            /*\\r\\n            See https://github.com/Microsoft/ApplicationInsights-dotnet-server/blob/25d695e6a906fbe977f67be3966d25dbf1c50a79/Src/Web/Web.Shared.Net/RequestTrackingTelemetryModule.cs#L250\\r\\n            for reference\\r\\n            */\\r\\n            source: this.sourceCorrelationId,\\r\\n            duration: this.duration,\\r\\n            resultCode: this.statusCode ? this.statusCode.toString() : null,\\r\\n            success: this._isSuccess(),\\r\\n            properties: this.properties\\r\\n        };\\r\\n        // We should keep any parameters the user passed in\\r\\n        // Except the fields defined above in requestTelemetry, which take priority\\r\\n        // Except the properties field, where they're merged instead, with baseTelemetry taking priority\\r\\n        if (baseTelemetry) {\\r\\n            // Copy missing fields\\r\\n            for (var key in baseTelemetry) {\\r\\n                if (!requestTelemetry[key]) {\\r\\n                    requestTelemetry[key] = baseTelemetry[key];\\r\\n                }\\r\\n            }\\r\\n            // Merge properties\\r\\n            if (baseTelemetry.properties) {\\r\\n                for (var key in baseTelemetry.properties) {\\r\\n                    requestTelemetry.properties[key] = baseTelemetry.properties[key];\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return requestTelemetry;\\r\\n    };\\r\\n    HttpRequestParser.prototype.getRequestTags = function (tags) {\\r\\n        // create a copy of the context for requests since client info will be used here\\r\\n        var newTags = {};\\r\\n        for (var key in tags) {\\r\\n            newTags[key] = tags[key];\\r\\n        }\\r\\n        // don't override tags if they are already set\\r\\n        newTags[HttpRequestParser.keys.locationIp] = tags[HttpRequestParser.keys.locationIp] || this._getIp();\\r\\n        newTags[HttpRequestParser.keys.sessionId] = tags[HttpRequestParser.keys.sessionId] || this._getId(\\\"ai_session\\\");\\r\\n        newTags[HttpRequestParser.keys.userId] = tags[HttpRequestParser.keys.userId] || this._getId(\\\"ai_user\\\");\\r\\n        newTags[HttpRequestParser.keys.userAuthUserId] = tags[HttpRequestParser.keys.userAuthUserId] || this._getId(\\\"ai_authUser\\\");\\r\\n        newTags[HttpRequestParser.keys.operationName] = this.getOperationName(tags);\\r\\n        newTags[HttpRequestParser.keys.operationParentId] = this.getOperationParentId(tags);\\r\\n        newTags[HttpRequestParser.keys.operationId] = this.getOperationId(tags);\\r\\n        return newTags;\\r\\n    };\\r\\n    HttpRequestParser.prototype.getOperationId = function (tags) {\\r\\n        return tags[HttpRequestParser.keys.operationId] || this.operationId;\\r\\n    };\\r\\n    HttpRequestParser.prototype.getOperationParentId = function (tags) {\\r\\n        return tags[HttpRequestParser.keys.operationParentId] || this.parentId || this.getOperationId(tags);\\r\\n    };\\r\\n    HttpRequestParser.prototype.getOperationName = function (tags) {\\r\\n        return tags[HttpRequestParser.keys.operationName] || this.method + \\\" \\\" + url.parse(this.url).pathname;\\r\\n    };\\r\\n    HttpRequestParser.prototype.getRequestId = function () {\\r\\n        return this.requestId;\\r\\n    };\\r\\n    HttpRequestParser.prototype.getCorrelationContextHeader = function () {\\r\\n        return this.correlationContextHeader;\\r\\n    };\\r\\n    HttpRequestParser.prototype._getAbsoluteUrl = function (request) {\\r\\n        if (!request.headers) {\\r\\n            return request.url;\\r\\n        }\\r\\n        var encrypted = request.connection ? request.connection.encrypted : null;\\r\\n        var requestUrl = url.parse(request.url);\\r\\n        var pathName = requestUrl.pathname;\\r\\n        var search = requestUrl.search;\\r\\n        var absoluteUrl = url.format({\\r\\n            protocol: encrypted ? \\\"https\\\" : \\\"http\\\",\\r\\n            host: request.headers.host,\\r\\n            pathname: pathName,\\r\\n            search: search\\r\\n        });\\r\\n        return absoluteUrl;\\r\\n    };\\r\\n    HttpRequestParser.prototype._getIp = function () {\\r\\n        // regex to match ipv4 without port\\r\\n        // Note: including the port would cause the payload to be rejected by the data collector\\r\\n        var ipMatch = /[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}/;\\r\\n        var check = function (str) {\\r\\n            var results = ipMatch.exec(str);\\r\\n            if (results) {\\r\\n                return results[0];\\r\\n            }\\r\\n        };\\r\\n        var ip = check(this.rawHeaders[\\\"x-forwarded-for\\\"])\\r\\n            || check(this.rawHeaders[\\\"x-client-ip\\\"])\\r\\n            || check(this.rawHeaders[\\\"x-real-ip\\\"])\\r\\n            || check(this.connectionRemoteAddress)\\r\\n            || check(this.socketRemoteAddress)\\r\\n            || check(this.legacySocketRemoteAddress);\\r\\n        // node v12 returns this if the address is \\\"localhost\\\"\\r\\n        if (!ip\\r\\n            && this.connectionRemoteAddress\\r\\n            && this.connectionRemoteAddress.substr\\r\\n            && this.connectionRemoteAddress.substr(0, 2) === \\\"::\\\") {\\r\\n            ip = \\\"127.0.0.1\\\";\\r\\n        }\\r\\n        return ip;\\r\\n    };\\r\\n    HttpRequestParser.prototype._getId = function (name) {\\r\\n        var cookie = (this.rawHeaders && this.rawHeaders[\\\"cookie\\\"] &&\\r\\n            typeof this.rawHeaders[\\\"cookie\\\"] === 'string' && this.rawHeaders[\\\"cookie\\\"]) || \\\"\\\";\\r\\n        var value = HttpRequestParser.parseId(Util.getCookie(name, cookie));\\r\\n        return value;\\r\\n    };\\r\\n    HttpRequestParser.prototype.parseHeaders = function (request, requestId) {\\r\\n        this.rawHeaders = request.headers || request.rawHeaders;\\r\\n        this.userAgent = request.headers && request.headers[\\\"user-agent\\\"];\\r\\n        this.sourceCorrelationId = Util.getCorrelationContextTarget(request, RequestResponseHeaders.requestContextSourceKey);\\r\\n        if (request.headers) {\\r\\n            this.correlationContextHeader = request.headers[RequestResponseHeaders.correlationContextHeader];\\r\\n            if (request.headers[RequestResponseHeaders.requestIdHeader]) {\\r\\n                this.parentId = request.headers[RequestResponseHeaders.requestIdHeader];\\r\\n                this.requestId = CorrelationIdManager.generateRequestId(this.parentId);\\r\\n                this.correlationContextHeader = request.headers[RequestResponseHeaders.correlationContextHeader];\\r\\n            }\\r\\n            else {\\r\\n                // Legacy fallback\\r\\n                var rootId = request.headers[RequestResponseHeaders.rootIdHeader];\\r\\n                this.parentId = request.headers[RequestResponseHeaders.parentIdHeader];\\r\\n                this.requestId = CorrelationIdManager.generateRequestId(rootId || this.parentId);\\r\\n                this.correlationContextHeader = null;\\r\\n            }\\r\\n            if (requestId) {\\r\\n                // For the scenarios that don't guarantee an AI-created context,\\r\\n                // override the requestId with the provided one.\\r\\n                this.requestId = requestId;\\r\\n            }\\r\\n            this.operationId = CorrelationIdManager.getRootId(this.requestId);\\r\\n        }\\r\\n    };\\r\\n    HttpRequestParser.parseId = function (cookieValue) {\\r\\n        return cookieValue.substr(0, cookieValue.indexOf('|'));\\r\\n    };\\r\\n    HttpRequestParser.keys = new Contracts.ContextTagKeys();\\r\\n    return HttpRequestParser;\\r\\n}(RequestParser));\\r\\nmodule.exports = HttpRequestParser;\\r\\n//# sourceMappingURL=HttpRequestParser.js.map\",\"\\\"use strict\\\";\\r\\nvar __extends = (this && this.__extends) || (function () {\\r\\n    var extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return function (d, b) {\\r\\n        extendStatics(d, b);\\r\\n        function __() { this.constructor = d; }\\r\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n    };\\r\\n})();\\r\\nvar TelemetryClient = require(\\\"./TelemetryClient\\\");\\r\\nvar ServerRequestTracking = require(\\\"../AutoCollection/HttpRequests\\\");\\r\\nvar ClientRequestTracking = require(\\\"../AutoCollection/HttpDependencies\\\");\\r\\nvar Logging = require(\\\"./Logging\\\");\\r\\n/**\\r\\n * Application Insights Telemetry Client for Node.JS. Provides the Application Insights TelemetryClient API\\r\\n * in addition to Node-specific helper functions.\\r\\n * Construct a new TelemetryClient to have an instance with a different configuration than the default client.\\r\\n * In most cases, `appInsights.defaultClient` should be used instead.\\r\\n */\\r\\nvar NodeClient = (function (_super) {\\r\\n    __extends(NodeClient, _super);\\r\\n    function NodeClient() {\\r\\n        return _super !== null && _super.apply(this, arguments) || this;\\r\\n    }\\r\\n    /**\\r\\n     * Log RequestTelemetry from HTTP request and response. This method will log immediately without waitng for request completion\\r\\n     * and it requires duration parameter to be specified on NodeHttpRequestTelemetry object.\\r\\n     * Use trackNodeHttpRequest function to log the telemetry after request completion\\r\\n     * @param telemetry Object encapsulating incoming request, response and duration information\\r\\n     */\\r\\n    NodeClient.prototype.trackNodeHttpRequestSync = function (telemetry) {\\r\\n        if (telemetry && telemetry.request && telemetry.response && telemetry.duration) {\\r\\n            ServerRequestTracking.trackRequestSync(this, telemetry);\\r\\n        }\\r\\n        else {\\r\\n            Logging.warn(\\\"trackNodeHttpRequestSync requires NodeHttpRequestTelemetry object with request, response and duration specified.\\\");\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Log RequestTelemetry from HTTP request and response. This method will `follow` the request to completion.\\r\\n     * Use trackNodeHttpRequestSync function to log telemetry immediately without waiting for request completion\\r\\n     * @param telemetry Object encapsulating incoming request and response information\\r\\n     */\\r\\n    NodeClient.prototype.trackNodeHttpRequest = function (telemetry) {\\r\\n        if (telemetry.duration || telemetry.error) {\\r\\n            Logging.warn(\\\"trackNodeHttpRequest will ignore supplied duration and error parameters. These values are collected from the request and response objects.\\\");\\r\\n        }\\r\\n        if (telemetry && telemetry.request && telemetry.response) {\\r\\n            ServerRequestTracking.trackRequest(this, telemetry);\\r\\n        }\\r\\n        else {\\r\\n            Logging.warn(\\\"trackNodeHttpRequest requires NodeHttpRequestTelemetry object with request and response specified.\\\");\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Log DependencyTelemetry from outgoing HTTP request. This method will instrument the outgoing request and append\\r\\n     * the specified headers and will log the telemetry when outgoing request is complete\\r\\n     * @param telemetry Object encapsulating outgoing request information\\r\\n     */\\r\\n    NodeClient.prototype.trackNodeHttpDependency = function (telemetry) {\\r\\n        if (telemetry && telemetry.request) {\\r\\n            ClientRequestTracking.trackRequest(this, telemetry);\\r\\n        }\\r\\n        else {\\r\\n            Logging.warn(\\\"trackNodeHttpDependency requires NodeHttpDependencyTelemetry object with request specified.\\\");\\r\\n        }\\r\\n    };\\r\\n    return NodeClient;\\r\\n}(TelemetryClient));\\r\\nmodule.exports = NodeClient;\\r\\n//# sourceMappingURL=NodeClient.js.map\",\"\\\"use strict\\\";\\r\\nvar url = require(\\\"url\\\");\\r\\nvar Config = require(\\\"./Config\\\");\\r\\nvar Context = require(\\\"./Context\\\");\\r\\nvar Contracts = require(\\\"../Declarations/Contracts\\\");\\r\\nvar Channel = require(\\\"./Channel\\\");\\r\\nvar TelemetryProcessors = require(\\\"../TelemetryProcessors\\\");\\r\\nvar CorrelationContextManager_1 = require(\\\"../AutoCollection/CorrelationContextManager\\\");\\r\\nvar Sender = require(\\\"./Sender\\\");\\r\\nvar Util = require(\\\"./Util\\\");\\r\\nvar Logging = require(\\\"./Logging\\\");\\r\\nvar EnvelopeFactory = require(\\\"./EnvelopeFactory\\\");\\r\\n/**\\r\\n * Application Insights telemetry client provides interface to track telemetry items, register telemetry initializers and\\r\\n * and manually trigger immediate sending (flushing)\\r\\n */\\r\\nvar TelemetryClient = (function () {\\r\\n    /**\\r\\n     * Constructs a new client of the client\\r\\n     * @param iKey the instrumentation key to use (read from environment variable if not specified)\\r\\n     */\\r\\n    function TelemetryClient(iKey) {\\r\\n        this._telemetryProcessors = [];\\r\\n        var config = new Config(iKey);\\r\\n        this.config = config;\\r\\n        this.context = new Context();\\r\\n        this.commonProperties = {};\\r\\n        var sender = new Sender(this.config);\\r\\n        this.channel = new Channel(function () { return config.disableAppInsights; }, function () { return config.maxBatchSize; }, function () { return config.maxBatchIntervalMs; }, sender);\\r\\n    }\\r\\n    /**\\r\\n     * Log a trace message\\r\\n     * @param telemetry      Object encapsulating tracking options\\r\\n     */\\r\\n    TelemetryClient.prototype.trackTrace = function (telemetry) {\\r\\n        this.track(telemetry, Contracts.TelemetryType.Trace);\\r\\n    };\\r\\n    /**\\r\\n     * Log a numeric value that is not associated with a specific event. Typically used to send regular reports of performance indicators.\\r\\n     * To send a single measurement, use just the first two parameters. If you take measurements very frequently, you can reduce the\\r\\n     * telemetry bandwidth by aggregating multiple measurements and sending the resulting average at intervals.\\r\\n     * @param telemetry      Object encapsulating tracking options\\r\\n     */\\r\\n    TelemetryClient.prototype.trackMetric = function (telemetry) {\\r\\n        this.track(telemetry, Contracts.TelemetryType.Metric);\\r\\n    };\\r\\n    /**\\r\\n     * Log an exception\\r\\n     * @param telemetry      Object encapsulating tracking options\\r\\n     */\\r\\n    TelemetryClient.prototype.trackException = function (telemetry) {\\r\\n        if (telemetry && telemetry.exception && !Util.isError(telemetry.exception)) {\\r\\n            telemetry.exception = new Error(telemetry.exception.toString());\\r\\n        }\\r\\n        this.track(telemetry, Contracts.TelemetryType.Exception);\\r\\n    };\\r\\n    /**\\r\\n     * Log a user action or other occurrence.\\r\\n     * @param telemetry      Object encapsulating tracking options\\r\\n     */\\r\\n    TelemetryClient.prototype.trackEvent = function (telemetry) {\\r\\n        this.track(telemetry, Contracts.TelemetryType.Event);\\r\\n    };\\r\\n    /**\\r\\n     * Log a request. Note that the default client will attempt to collect HTTP requests automatically so only use this for requests\\r\\n     * that aren't automatically captured or if you've disabled automatic request collection.\\r\\n     *\\r\\n     * @param telemetry      Object encapsulating tracking options\\r\\n     */\\r\\n    TelemetryClient.prototype.trackRequest = function (telemetry) {\\r\\n        this.track(telemetry, Contracts.TelemetryType.Request);\\r\\n    };\\r\\n    /**\\r\\n     * Log a dependency. Note that the default client will attempt to collect dependencies automatically so only use this for dependencies\\r\\n     * that aren't automatically captured or if you've disabled automatic dependency collection.\\r\\n     *\\r\\n     * @param telemetry      Object encapsulating tracking option\\r\\n     * */\\r\\n    TelemetryClient.prototype.trackDependency = function (telemetry) {\\r\\n        if (telemetry && !telemetry.target && telemetry.data) {\\r\\n            // url.parse().host returns null for non-urls,\\r\\n            // making this essentially a no-op in those cases\\r\\n            // If this logic is moved, update jsdoc in DependencyTelemetry.target\\r\\n            telemetry.target = url.parse(telemetry.data).host;\\r\\n        }\\r\\n        this.track(telemetry, Contracts.TelemetryType.Dependency);\\r\\n    };\\r\\n    /**\\r\\n     * Immediately send all queued telemetry.\\r\\n     * @param options Flush options, including indicator whether app is crashing and callback\\r\\n     */\\r\\n    TelemetryClient.prototype.flush = function (options) {\\r\\n        this.channel.triggerSend(options ? !!options.isAppCrashing : false, options ? options.callback : undefined);\\r\\n    };\\r\\n    /**\\r\\n     * Generic track method for all telemetry types\\r\\n     * @param data the telemetry to send\\r\\n     * @param telemetryType specify the type of telemetry you are tracking from the list of Contracts.DataTypes\\r\\n     */\\r\\n    TelemetryClient.prototype.track = function (telemetry, telemetryType) {\\r\\n        if (telemetry && Contracts.telemetryTypeToBaseType(telemetryType)) {\\r\\n            var envelope = EnvelopeFactory.createEnvelope(telemetry, telemetryType, this.commonProperties, this.context, this.config);\\r\\n            // Set time on the envelope if it was set on the telemetry item\\r\\n            if (telemetry.time) {\\r\\n                envelope.time = telemetry.time.toISOString();\\r\\n            }\\r\\n            var accepted = this.runTelemetryProcessors(envelope, telemetry.contextObjects);\\r\\n            // Ideally we would have a central place for \\\"internal\\\" telemetry processors and users can configure which ones are in use.\\r\\n            // This will do for now. Otherwise clearTelemetryProcessors() would be problematic.\\r\\n            accepted = accepted && TelemetryProcessors.samplingTelemetryProcessor(envelope, { correlationContext: CorrelationContextManager_1.CorrelationContextManager.getCurrentContext() });\\r\\n            if (accepted) {\\r\\n                this.channel.send(envelope);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            Logging.warn(\\\"track() requires telemetry object and telemetryType to be specified.\\\");\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Adds telemetry processor to the collection. Telemetry processors will be called one by one\\r\\n     * before telemetry item is pushed for sending and in the order they were added.\\r\\n     *\\r\\n     * @param telemetryProcessor function, takes Envelope, and optional context object and returns boolean\\r\\n     */\\r\\n    TelemetryClient.prototype.addTelemetryProcessor = function (telemetryProcessor) {\\r\\n        this._telemetryProcessors.push(telemetryProcessor);\\r\\n    };\\r\\n    /*\\r\\n     * Removes all telemetry processors\\r\\n     */\\r\\n    TelemetryClient.prototype.clearTelemetryProcessors = function () {\\r\\n        this._telemetryProcessors = [];\\r\\n    };\\r\\n    TelemetryClient.prototype.runTelemetryProcessors = function (envelope, contextObjects) {\\r\\n        var accepted = true;\\r\\n        var telemetryProcessorsCount = this._telemetryProcessors.length;\\r\\n        if (telemetryProcessorsCount === 0) {\\r\\n            return accepted;\\r\\n        }\\r\\n        contextObjects = contextObjects || {};\\r\\n        contextObjects['correlationContext'] = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\\r\\n        for (var i = 0; i < telemetryProcessorsCount; ++i) {\\r\\n            try {\\r\\n                var processor = this._telemetryProcessors[i];\\r\\n                if (processor) {\\r\\n                    if (processor.apply(null, [envelope, contextObjects]) === false) {\\r\\n                        accepted = false;\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            catch (error) {\\r\\n                accepted = true;\\r\\n                Logging.warn(\\\"One of telemetry processors failed, telemetry item will be sent.\\\", error, envelope);\\r\\n            }\\r\\n        }\\r\\n        return accepted;\\r\\n    };\\r\\n    return TelemetryClient;\\r\\n}());\\r\\nmodule.exports = TelemetryClient;\\r\\n//# sourceMappingURL=TelemetryClient.js.map\",\"\\\"use strict\\\";\\r\\nvar CorrelationIdManager = require(\\\"./CorrelationIdManager\\\");\\r\\nvar Config = (function () {\\r\\n    function Config(instrumentationKey) {\\r\\n        var _this = this;\\r\\n        this.endpointBase = \\\"https://dc.services.visualstudio.com\\\";\\r\\n        this.instrumentationKey = instrumentationKey || Config._getInstrumentationKey();\\r\\n        this.endpointUrl = this.endpointBase + \\\"/v2/track\\\";\\r\\n        this.maxBatchSize = 250;\\r\\n        this.maxBatchIntervalMs = 15000;\\r\\n        this.disableAppInsights = false;\\r\\n        this.samplingPercentage = 100;\\r\\n        this.correlationIdRetryIntervalMs = 30 * 1000;\\r\\n        this.correlationHeaderExcludedDomains = [\\r\\n            \\\"*.core.windows.net\\\",\\r\\n            \\\"*.core.chinacloudapi.cn\\\",\\r\\n            \\\"*.core.cloudapi.de\\\",\\r\\n            \\\"*.core.usgovcloudapi.net\\\"\\r\\n        ];\\r\\n        this.setCorrelationId = function (correlationId) { return _this.correlationId = correlationId; };\\r\\n        this.profileQueryEndpoint = process.env[Config.ENV_profileQueryEndpoint] || this.endpointBase;\\r\\n        this.proxyHttpUrl = process.env[Config.ENV_http_proxy] || undefined;\\r\\n        this.proxyHttpsUrl = process.env[Config.ENV_https_proxy] || undefined;\\r\\n        this.httpAgent = undefined;\\r\\n        this.httpsAgent = undefined;\\r\\n    }\\r\\n    Object.defineProperty(Config.prototype, \\\"profileQueryEndpoint\\\", {\\r\\n        get: function () {\\r\\n            return this._profileQueryEndpoint;\\r\\n        },\\r\\n        set: function (endpoint) {\\r\\n            CorrelationIdManager.cancelCorrelationIdQuery(this, this.setCorrelationId);\\r\\n            this._profileQueryEndpoint = endpoint;\\r\\n            this.correlationId = CorrelationIdManager.correlationIdPrefix; // Reset the correlationId while we wait for the new query\\r\\n            CorrelationIdManager.queryCorrelationId(this, this.setCorrelationId);\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Config._getInstrumentationKey = function () {\\r\\n        // check for both the documented env variable and the azure-prefixed variable\\r\\n        var iKey = process.env[Config.ENV_iKey]\\r\\n            || process.env[Config.ENV_azurePrefix + Config.ENV_iKey]\\r\\n            || process.env[Config.legacy_ENV_iKey]\\r\\n            || process.env[Config.ENV_azurePrefix + Config.legacy_ENV_iKey];\\r\\n        if (!iKey || iKey == \\\"\\\") {\\r\\n            throw new Error(\\\"Instrumentation key not found, pass the key in the config to this method or set the key in the environment variable APPINSIGHTS_INSTRUMENTATIONKEY before starting the server\\\");\\r\\n        }\\r\\n        return iKey;\\r\\n    };\\r\\n    // Azure adds this prefix to all environment variables\\r\\n    Config.ENV_azurePrefix = \\\"APPSETTING_\\\";\\r\\n    // This key is provided in the readme\\r\\n    Config.ENV_iKey = \\\"APPINSIGHTS_INSTRUMENTATIONKEY\\\";\\r\\n    Config.legacy_ENV_iKey = \\\"APPINSIGHTS_INSTRUMENTATION_KEY\\\";\\r\\n    Config.ENV_profileQueryEndpoint = \\\"APPINSIGHTS_PROFILE_QUERY_ENDPOINT\\\";\\r\\n    Config.ENV_http_proxy = \\\"http_proxy\\\";\\r\\n    Config.ENV_https_proxy = \\\"https_proxy\\\";\\r\\n    return Config;\\r\\n}());\\r\\nmodule.exports = Config;\\r\\n//# sourceMappingURL=Config.js.map\",\"\\\"use strict\\\";\\r\\nvar os = require(\\\"os\\\");\\r\\nvar fs = require(\\\"fs\\\");\\r\\nvar path = require(\\\"path\\\");\\r\\nvar Contracts = require(\\\"../Declarations/Contracts\\\");\\r\\nvar Logging = require(\\\"./Logging\\\");\\r\\nvar Context = (function () {\\r\\n    function Context(packageJsonPath) {\\r\\n        this.keys = new Contracts.ContextTagKeys();\\r\\n        this.tags = {};\\r\\n        this._loadApplicationContext();\\r\\n        this._loadDeviceContext();\\r\\n        this._loadInternalContext();\\r\\n    }\\r\\n    Context.prototype._loadApplicationContext = function (packageJsonPath) {\\r\\n        // note: this should return the host package.json\\r\\n        packageJsonPath = packageJsonPath || path.resolve(__dirname, \\\"../../../../package.json\\\");\\r\\n        if (!Context.appVersion[packageJsonPath]) {\\r\\n            Context.appVersion[packageJsonPath] = \\\"unknown\\\";\\r\\n            try {\\r\\n                var packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \\\"utf8\\\"));\\r\\n                if (packageJson && typeof packageJson.version === \\\"string\\\") {\\r\\n                    Context.appVersion[packageJsonPath] = packageJson.version;\\r\\n                }\\r\\n            }\\r\\n            catch (exception) {\\r\\n                Logging.info(\\\"unable to read app version: \\\", exception);\\r\\n            }\\r\\n        }\\r\\n        this.tags[this.keys.applicationVersion] = Context.appVersion[packageJsonPath];\\r\\n    };\\r\\n    Context.prototype._loadDeviceContext = function () {\\r\\n        this.tags[this.keys.deviceId] = \\\"\\\";\\r\\n        this.tags[this.keys.cloudRoleInstance] = os && os.hostname();\\r\\n        this.tags[this.keys.deviceOSVersion] = os && (os.type() + \\\" \\\" + os.release());\\r\\n        this.tags[this.keys.cloudRole] = Context.DefaultRoleName;\\r\\n        // not yet supported tags\\r\\n        this.tags[\\\"ai.device.osArchitecture\\\"] = os && os.arch();\\r\\n        this.tags[\\\"ai.device.osPlatform\\\"] = os && os.platform();\\r\\n    };\\r\\n    Context.prototype._loadInternalContext = function () {\\r\\n        // note: this should return the sdk package.json\\r\\n        var packageJsonPath = path.resolve(__dirname, \\\"../../package.json\\\");\\r\\n        if (!Context.sdkVersion) {\\r\\n            Context.sdkVersion = \\\"unknown\\\";\\r\\n            try {\\r\\n                var packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \\\"utf8\\\"));\\r\\n                if (packageJson && typeof packageJson.version === \\\"string\\\") {\\r\\n                    Context.sdkVersion = packageJson.version;\\r\\n                }\\r\\n            }\\r\\n            catch (exception) {\\r\\n                Logging.info(\\\"unable to read app version: \\\", exception);\\r\\n            }\\r\\n        }\\r\\n        this.tags[this.keys.internalSdkVersion] = \\\"node:\\\" + Context.sdkVersion;\\r\\n    };\\r\\n    Context.DefaultRoleName = \\\"Web\\\";\\r\\n    Context.appVersion = {};\\r\\n    Context.sdkVersion = null;\\r\\n    return Context;\\r\\n}());\\r\\nmodule.exports = Context;\\r\\n//# sourceMappingURL=Context.js.map\",\"\\\"use strict\\\";\\r\\nvar Logging = require(\\\"./Logging\\\");\\r\\nvar Channel = (function () {\\r\\n    function Channel(isDisabled, getBatchSize, getBatchIntervalMs, sender) {\\r\\n        this._buffer = [];\\r\\n        this._lastSend = 0;\\r\\n        this._isDisabled = isDisabled;\\r\\n        this._getBatchSize = getBatchSize;\\r\\n        this._getBatchIntervalMs = getBatchIntervalMs;\\r\\n        this._sender = sender;\\r\\n    }\\r\\n    /**\\r\\n     * Enable or disable disk-backed retry caching to cache events when client is offline (enabled by default)\\r\\n     * These cached events are stored in your system or user's temporary directory and access restricted to your user when possible.\\r\\n     * @param value if true events that occured while client is offline will be cached on disk\\r\\n     * @param resendInterval The wait interval for resending cached events.\\r\\n     * @param maxBytesOnDisk The maximum size (in bytes) that the created temporary directory for cache events can grow to, before caching is disabled.\\r\\n     * @returns {Configuration} this class\\r\\n     */\\r\\n    Channel.prototype.setUseDiskRetryCaching = function (value, resendInterval, maxBytesOnDisk) {\\r\\n        this._sender.setDiskRetryMode(value, resendInterval, maxBytesOnDisk);\\r\\n    };\\r\\n    /**\\r\\n     * Add a telemetry item to the send buffer\\r\\n     */\\r\\n    Channel.prototype.send = function (envelope) {\\r\\n        var _this = this;\\r\\n        // if master off switch is set, don't send any data\\r\\n        if (this._isDisabled()) {\\r\\n            // Do not send/save data\\r\\n            return;\\r\\n        }\\r\\n        // validate input\\r\\n        if (!envelope) {\\r\\n            Logging.warn(\\\"Cannot send null/undefined telemetry\\\");\\r\\n            return;\\r\\n        }\\r\\n        // check if the incoming payload is too large, truncate if necessary\\r\\n        var payload = this._stringify(envelope);\\r\\n        if (typeof payload !== \\\"string\\\") {\\r\\n            return;\\r\\n        }\\r\\n        // enqueue the payload\\r\\n        this._buffer.push(payload);\\r\\n        // flush if we would exceed the max-size limit by adding this item\\r\\n        if (this._buffer.length >= this._getBatchSize()) {\\r\\n            this.triggerSend(false);\\r\\n            return;\\r\\n        }\\r\\n        // ensure an invocation timeout is set if anything is in the buffer\\r\\n        if (!this._timeoutHandle && this._buffer.length > 0) {\\r\\n            this._timeoutHandle = setTimeout(function () {\\r\\n                _this._timeoutHandle = null;\\r\\n                _this.triggerSend(false);\\r\\n            }, this._getBatchIntervalMs());\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Immediately send buffered data\\r\\n     */\\r\\n    Channel.prototype.triggerSend = function (isNodeCrashing, callback) {\\r\\n        var bufferIsEmpty = this._buffer.length < 1;\\r\\n        if (!bufferIsEmpty) {\\r\\n            // compose an array of payloads\\r\\n            var batch = this._buffer.join(\\\"\\\\n\\\");\\r\\n            // invoke send\\r\\n            if (isNodeCrashing) {\\r\\n                this._sender.saveOnCrash(batch);\\r\\n                if (typeof callback === \\\"function\\\") {\\r\\n                    callback(\\\"data saved on crash\\\");\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                this._sender.send(Buffer.from ? Buffer.from(batch) : new Buffer(batch), callback);\\r\\n            }\\r\\n        }\\r\\n        // update lastSend time to enable throttling\\r\\n        this._lastSend = +new Date;\\r\\n        // clear buffer\\r\\n        this._buffer.length = 0;\\r\\n        clearTimeout(this._timeoutHandle);\\r\\n        this._timeoutHandle = null;\\r\\n        if (bufferIsEmpty && typeof callback === \\\"function\\\") {\\r\\n            callback(\\\"no data to send\\\");\\r\\n        }\\r\\n    };\\r\\n    Channel.prototype._stringify = function (envelope) {\\r\\n        try {\\r\\n            return JSON.stringify(envelope);\\r\\n        }\\r\\n        catch (error) {\\r\\n            Logging.warn(\\\"Failed to serialize payload\\\", error, envelope);\\r\\n        }\\r\\n    };\\r\\n    return Channel;\\r\\n}());\\r\\nmodule.exports = Channel;\\r\\n//# sourceMappingURL=Channel.js.map\",\"\\\"use strict\\\";\\r\\nfunction __export(m) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\n__export(require(\\\"./SamplingTelemetryProcessor\\\"));\\r\\n//# sourceMappingURL=index.js.map\",\"\\\"use strict\\\";\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Contracts = require(\\\"../Declarations/Contracts\\\");\\r\\n/**\\r\\n *  A telemetry processor that handles sampling.\\r\\n */\\r\\nfunction samplingTelemetryProcessor(envelope, contextObjects) {\\r\\n    var samplingPercentage = envelope.sampleRate; // Set for us in Client.getEnvelope\\r\\n    var isSampledIn = false;\\r\\n    if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\\r\\n        return true;\\r\\n    }\\r\\n    else if (envelope.data && Contracts.TelemetryType.Metric === Contracts.baseTypeToTelemetryType(envelope.data.baseType)) {\\r\\n        // Exclude MetricData telemetry from sampling\\r\\n        return true;\\r\\n    }\\r\\n    else if (contextObjects.correlationContext && contextObjects.correlationContext.operation) {\\r\\n        // If we're using dependency correlation, sampling should retain all telemetry from a given request \\r\\n        isSampledIn = getSamplingHashCode(contextObjects.correlationContext.operation.id) < samplingPercentage;\\r\\n    }\\r\\n    else {\\r\\n        // If we're not using dependency correlation, sampling should use a random distribution on each item\\r\\n        isSampledIn = (Math.random() * 100) < samplingPercentage;\\r\\n    }\\r\\n    return isSampledIn;\\r\\n}\\r\\nexports.samplingTelemetryProcessor = samplingTelemetryProcessor;\\r\\n/** Ported from AI .NET SDK */\\r\\nfunction getSamplingHashCode(input) {\\r\\n    var csharpMin = -2147483648;\\r\\n    var csharpMax = 2147483647;\\r\\n    var hash = 5381;\\r\\n    if (!input) {\\r\\n        return 0;\\r\\n    }\\r\\n    while (input.length < 8) {\\r\\n        input = input + input;\\r\\n    }\\r\\n    for (var i = 0; i < input.length; i++) {\\r\\n        // JS doesn't respond to integer overflow by wrapping around. Simulate it with bitwise operators ( | 0)\\r\\n        hash = ((((hash << 5) + hash) | 0) + input.charCodeAt(i) | 0);\\r\\n    }\\r\\n    hash = hash <= csharpMin ? csharpMax : Math.abs(hash);\\r\\n    return (hash / csharpMax) * 100;\\r\\n}\\r\\nexports.getSamplingHashCode = getSamplingHashCode;\\r\\n//# sourceMappingURL=SamplingTelemetryProcessor.js.map\",\"\\\"use strict\\\";\\r\\nvar fs = require(\\\"fs\\\");\\r\\nvar os = require(\\\"os\\\");\\r\\nvar path = require(\\\"path\\\");\\r\\nvar zlib = require(\\\"zlib\\\");\\r\\nvar child_process = require(\\\"child_process\\\");\\r\\nvar Logging = require(\\\"./Logging\\\");\\r\\nvar AutoCollectHttpDependencies = require(\\\"../AutoCollection/HttpDependencies\\\");\\r\\nvar Util = require(\\\"./Util\\\");\\r\\nvar Sender = (function () {\\r\\n    function Sender(config, onSuccess, onError) {\\r\\n        this._config = config;\\r\\n        this._onSuccess = onSuccess;\\r\\n        this._onError = onError;\\r\\n        this._enableDiskRetryMode = false;\\r\\n        this._resendInterval = Sender.WAIT_BETWEEN_RESEND;\\r\\n        this._maxBytesOnDisk = Sender.MAX_BYTES_ON_DISK;\\r\\n        this._numConsecutiveFailures = 0;\\r\\n        if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\\r\\n            // Node's chmod levels do not appropriately restrict file access on Windows\\r\\n            // Use the built-in command line tool ICACLS on Windows to properly restrict\\r\\n            // access to the temporary directory used for disk retry mode.\\r\\n            if (Sender.USE_ICACLS) {\\r\\n                // This should be async - but it's currently safer to have this synchronous\\r\\n                // This guarantees we can immediately fail setDiskRetryMode if we need to\\r\\n                try {\\r\\n                    Sender.OS_PROVIDES_FILE_PROTECTION = fs.existsSync(Sender.ICACLS_PATH);\\r\\n                }\\r\\n                catch (e) { }\\r\\n                if (!Sender.OS_PROVIDES_FILE_PROTECTION) {\\r\\n                    Logging.warn(Sender.TAG, \\\"Could not find ICACLS in expected location! This is necessary to use disk retry mode on Windows.\\\");\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                // chmod works everywhere else\\r\\n                Sender.OS_PROVIDES_FILE_PROTECTION = true;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    /**\\r\\n    * Enable or disable offline mode\\r\\n    */\\r\\n    Sender.prototype.setDiskRetryMode = function (value, resendInterval, maxBytesOnDisk) {\\r\\n        this._enableDiskRetryMode = Sender.OS_PROVIDES_FILE_PROTECTION && value;\\r\\n        if (typeof resendInterval === 'number' && resendInterval >= 0) {\\r\\n            this._resendInterval = Math.floor(resendInterval);\\r\\n        }\\r\\n        if (typeof maxBytesOnDisk === 'number' && maxBytesOnDisk >= 0) {\\r\\n            this._maxBytesOnDisk = Math.floor(maxBytesOnDisk);\\r\\n        }\\r\\n        if (value && !Sender.OS_PROVIDES_FILE_PROTECTION) {\\r\\n            this._enableDiskRetryMode = false;\\r\\n            Logging.warn(Sender.TAG, \\\"Ignoring request to enable disk retry mode. Sufficient file protection capabilities were not detected.\\\");\\r\\n        }\\r\\n    };\\r\\n    Sender.prototype.send = function (payload, callback) {\\r\\n        var _this = this;\\r\\n        var endpointUrl = this._config.endpointUrl;\\r\\n        // todo: investigate specifying an agent here: https://nodejs.org/api/http.html#http_class_http_agent\\r\\n        var options = {\\r\\n            method: \\\"POST\\\",\\r\\n            withCredentials: false,\\r\\n            headers: {\\r\\n                \\\"Content-Type\\\": \\\"application/x-json-stream\\\"\\r\\n            }\\r\\n        };\\r\\n        zlib.gzip(payload, function (err, buffer) {\\r\\n            var dataToSend = buffer;\\r\\n            if (err) {\\r\\n                Logging.warn(err);\\r\\n                dataToSend = payload; // something went wrong so send without gzip\\r\\n                options.headers[\\\"Content-Length\\\"] = payload.length.toString();\\r\\n            }\\r\\n            else {\\r\\n                options.headers[\\\"Content-Encoding\\\"] = \\\"gzip\\\";\\r\\n                options.headers[\\\"Content-Length\\\"] = buffer.length;\\r\\n            }\\r\\n            Logging.info(Sender.TAG, options);\\r\\n            // Ensure this request is not captured by auto-collection.\\r\\n            options[AutoCollectHttpDependencies.disableCollectionRequestOption] = true;\\r\\n            var requestCallback = function (res) {\\r\\n                res.setEncoding(\\\"utf-8\\\");\\r\\n                //returns empty if the data is accepted\\r\\n                var responseString = \\\"\\\";\\r\\n                res.on(\\\"data\\\", function (data) {\\r\\n                    responseString += data;\\r\\n                });\\r\\n                res.on(\\\"end\\\", function () {\\r\\n                    _this._numConsecutiveFailures = 0;\\r\\n                    Logging.info(Sender.TAG, responseString);\\r\\n                    if (typeof _this._onSuccess === \\\"function\\\") {\\r\\n                        _this._onSuccess(responseString);\\r\\n                    }\\r\\n                    if (typeof callback === \\\"function\\\") {\\r\\n                        callback(responseString);\\r\\n                    }\\r\\n                    if (_this._enableDiskRetryMode) {\\r\\n                        // try to send any cached events if the user is back online\\r\\n                        if (res.statusCode === 200) {\\r\\n                            setTimeout(function () { return _this._sendFirstFileOnDisk(); }, _this._resendInterval);\\r\\n                            // store to disk in case of burst throttling\\r\\n                        }\\r\\n                        else if (res.statusCode === 408 ||\\r\\n                            res.statusCode === 429 ||\\r\\n                            res.statusCode === 439 ||\\r\\n                            res.statusCode === 500 ||\\r\\n                            res.statusCode === 503) {\\r\\n                            // TODO: Do not support partial success (206) until _sendFirstFileOnDisk checks payload age\\r\\n                            _this._storeToDisk(payload);\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n            };\\r\\n            var req = Util.makeRequest(_this._config, endpointUrl, options, requestCallback);\\r\\n            req.on(\\\"error\\\", function (error) {\\r\\n                // todo: handle error codes better (group to recoverable/non-recoverable and persist)\\r\\n                _this._numConsecutiveFailures++;\\r\\n                // Only use warn level if retries are disabled or we've had some number of consecutive failures sending data\\r\\n                // This is because warn level is printed in the console by default, and we don't want to be noisy for transient and self-recovering errors\\r\\n                // Continue informing on each failure if verbose logging is being used\\r\\n                if (!_this._enableDiskRetryMode || _this._numConsecutiveFailures > 0 && _this._numConsecutiveFailures % Sender.MAX_CONNECTION_FAILURES_BEFORE_WARN === 0) {\\r\\n                    var notice = \\\"Ingestion endpoint could not be reached. This batch of telemetry items has been lost. Use Disk Retry Caching to enable resending of failed telemetry. Error:\\\";\\r\\n                    if (_this._enableDiskRetryMode) {\\r\\n                        notice = \\\"Ingestion endpoint could not be reached \\\" + _this._numConsecutiveFailures + \\\" consecutive times. There may be resulting telemetry loss. Most recent error:\\\";\\r\\n                    }\\r\\n                    Logging.warn(Sender.TAG, notice, error);\\r\\n                }\\r\\n                else {\\r\\n                    var notice = \\\"Transient failure to reach ingestion endpoint. This batch of telemetry items will be retried. Error:\\\";\\r\\n                    Logging.info(Sender.TAG, notice, error);\\r\\n                }\\r\\n                _this._onErrorHelper(error);\\r\\n                if (typeof callback === \\\"function\\\") {\\r\\n                    var errorMessage = \\\"error sending telemetry\\\";\\r\\n                    if (error && (typeof error.toString === \\\"function\\\")) {\\r\\n                        errorMessage = error.toString();\\r\\n                    }\\r\\n                    callback(errorMessage);\\r\\n                }\\r\\n                if (_this._enableDiskRetryMode) {\\r\\n                    _this._storeToDisk(payload);\\r\\n                }\\r\\n            });\\r\\n            req.write(dataToSend);\\r\\n            req.end();\\r\\n        });\\r\\n    };\\r\\n    Sender.prototype.saveOnCrash = function (payload) {\\r\\n        if (this._enableDiskRetryMode) {\\r\\n            this._storeToDiskSync(payload);\\r\\n        }\\r\\n    };\\r\\n    Sender.prototype._runICACLS = function (args, callback) {\\r\\n        var aclProc = child_process.spawn(Sender.ICACLS_PATH, args, { windowsHide: true });\\r\\n        aclProc.on(\\\"error\\\", function (e) { return callback(e); });\\r\\n        aclProc.on(\\\"close\\\", function (code, signal) {\\r\\n            return callback(code === 0 ? null : new Error(\\\"Setting ACL restrictions did not succeed (ICACLS returned code \\\" + code + \\\")\\\"));\\r\\n        });\\r\\n    };\\r\\n    Sender.prototype._runICACLSSync = function (args) {\\r\\n        // Some very old versions of Node (< 0.11) don't have this\\r\\n        if (child_process.spawnSync) {\\r\\n            var aclProc = child_process.spawnSync(Sender.ICACLS_PATH, args, { windowsHide: true });\\r\\n            if (aclProc.error) {\\r\\n                throw aclProc.error;\\r\\n            }\\r\\n            else if (aclProc.status !== 0) {\\r\\n                throw new Error(\\\"Setting ACL restrictions did not succeed (ICACLS returned code \\\" + aclProc.status + \\\")\\\");\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            throw new Error(\\\"Could not synchronously call ICACLS under current version of Node.js\\\");\\r\\n        }\\r\\n    };\\r\\n    Sender.prototype._getACLIdentity = function (callback) {\\r\\n        if (Sender.ACL_IDENTITY) {\\r\\n            return callback(null, Sender.ACL_IDENTITY);\\r\\n        }\\r\\n        var psProc = child_process.spawn(Sender.POWERSHELL_PATH, [\\\"-Command\\\", \\\"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\\\"], {\\r\\n            windowsHide: true,\\r\\n            stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\\r\\n        });\\r\\n        var data = \\\"\\\";\\r\\n        psProc.stdout.on(\\\"data\\\", function (d) { return data += d; });\\r\\n        psProc.on(\\\"error\\\", function (e) { return callback(e, null); });\\r\\n        psProc.on(\\\"close\\\", function (code, signal) {\\r\\n            Sender.ACL_IDENTITY = data && data.trim();\\r\\n            return callback(code === 0 ? null : new Error(\\\"Getting ACL identity did not succeed (PS returned code \\\" + code + \\\")\\\"), Sender.ACL_IDENTITY);\\r\\n        });\\r\\n    };\\r\\n    Sender.prototype._getACLIdentitySync = function () {\\r\\n        if (Sender.ACL_IDENTITY) {\\r\\n            return Sender.ACL_IDENTITY;\\r\\n        }\\r\\n        // Some very old versions of Node (< 0.11) don't have this\\r\\n        if (child_process.spawnSync) {\\r\\n            var psProc = child_process.spawnSync(Sender.POWERSHELL_PATH, [\\\"-Command\\\", \\\"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\\\"], {\\r\\n                windowsHide: true,\\r\\n                stdio: ['ignore', 'pipe', 'pipe'] // Needed to prevent hanging on Win 7\\r\\n            });\\r\\n            if (psProc.error) {\\r\\n                throw psProc.error;\\r\\n            }\\r\\n            else if (psProc.status !== 0) {\\r\\n                throw new Error(\\\"Getting ACL identity did not succeed (PS returned code \\\" + psProc.status + \\\")\\\");\\r\\n            }\\r\\n            Sender.ACL_IDENTITY = psProc.stdout && psProc.stdout.toString().trim();\\r\\n            return Sender.ACL_IDENTITY;\\r\\n        }\\r\\n        else {\\r\\n            throw new Error(\\\"Could not synchronously get ACL identity under current version of Node.js\\\");\\r\\n        }\\r\\n    };\\r\\n    Sender.prototype._getACLArguments = function (directory, identity) {\\r\\n        return [directory,\\r\\n            \\\"/grant\\\", \\\"*S-1-5-32-544:(OI)(CI)F\\\",\\r\\n            \\\"/grant\\\", identity + \\\":(OI)(CI)F\\\",\\r\\n            \\\"/inheritance:r\\\"]; // Remove all inherited permissions\\r\\n    };\\r\\n    Sender.prototype._applyACLRules = function (directory, callback) {\\r\\n        var _this = this;\\r\\n        if (!Sender.USE_ICACLS) {\\r\\n            return callback(null);\\r\\n        }\\r\\n        // For performance, only run ACL rules if we haven't already during this session\\r\\n        if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\\r\\n            // Avoid multiple calls race condition by setting ACLED_DIRECTORIES to false for this directory immediately\\r\\n            // If batches are being failed faster than the processes spawned below return, some data won't be stored to disk\\r\\n            // This is better than the alternative of potentially infinitely spawned processes\\r\\n            Sender.ACLED_DIRECTORIES[directory] = false;\\r\\n            // Restrict this directory to only current user and administrator access\\r\\n            this._getACLIdentity(function (err, identity) {\\r\\n                if (err) {\\r\\n                    Sender.ACLED_DIRECTORIES[directory] = false; // false is used to cache failed (vs undefined which is \\\"not yet tried\\\")\\r\\n                    return callback(err);\\r\\n                }\\r\\n                else {\\r\\n                    _this._runICACLS(_this._getACLArguments(directory, identity), function (err) {\\r\\n                        Sender.ACLED_DIRECTORIES[directory] = !err;\\r\\n                        return callback(err);\\r\\n                    });\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            return callback(Sender.ACLED_DIRECTORIES[directory] ? null :\\r\\n                new Error(\\\"Setting ACL restrictions did not succeed (cached result)\\\"));\\r\\n        }\\r\\n    };\\r\\n    Sender.prototype._applyACLRulesSync = function (directory) {\\r\\n        if (Sender.USE_ICACLS) {\\r\\n            // For performance, only run ACL rules if we haven't already during this session\\r\\n            if (Sender.ACLED_DIRECTORIES[directory] === undefined) {\\r\\n                this._runICACLSSync(this._getACLArguments(directory, this._getACLIdentitySync()));\\r\\n                Sender.ACLED_DIRECTORIES[directory] = true; // If we get here, it succeeded. _runIACLSSync will throw on failures\\r\\n                return;\\r\\n            }\\r\\n            else if (!Sender.ACLED_DIRECTORIES[directory]) {\\r\\n                throw new Error(\\\"Setting ACL restrictions did not succeed (cached result)\\\");\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    Sender.prototype._confirmDirExists = function (directory, callback) {\\r\\n        var _this = this;\\r\\n        fs.lstat(directory, function (err, stats) {\\r\\n            if (err && err.code === 'ENOENT') {\\r\\n                fs.mkdir(directory, function (err) {\\r\\n                    if (err && err.code !== 'EEXIST') {\\r\\n                        callback(err);\\r\\n                    }\\r\\n                    else {\\r\\n                        _this._applyACLRules(directory, callback);\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            else if (!err && stats.isDirectory()) {\\r\\n                _this._applyACLRules(directory, callback);\\r\\n            }\\r\\n            else {\\r\\n                callback(err || new Error(\\\"Path existed but was not a directory\\\"));\\r\\n            }\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * Computes the size (in bytes) of all files in a directory at the root level. Asynchronously.\\r\\n     */\\r\\n    Sender.prototype._getShallowDirectorySize = function (directory, callback) {\\r\\n        // Get the directory listing\\r\\n        fs.readdir(directory, function (err, files) {\\r\\n            if (err) {\\r\\n                return callback(err, -1);\\r\\n            }\\r\\n            var error = null;\\r\\n            var totalSize = 0;\\r\\n            var count = 0;\\r\\n            if (files.length === 0) {\\r\\n                callback(null, 0);\\r\\n                return;\\r\\n            }\\r\\n            // Query all file sizes\\r\\n            for (var i = 0; i < files.length; i++) {\\r\\n                fs.stat(path.join(directory, files[i]), function (err, fileStats) {\\r\\n                    count++;\\r\\n                    if (err) {\\r\\n                        error = err;\\r\\n                    }\\r\\n                    else {\\r\\n                        if (fileStats.isFile()) {\\r\\n                            totalSize += fileStats.size;\\r\\n                        }\\r\\n                    }\\r\\n                    if (count === files.length) {\\r\\n                        // Did we get an error?\\r\\n                        if (error) {\\r\\n                            callback(error, -1);\\r\\n                        }\\r\\n                        else {\\r\\n                            callback(error, totalSize);\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * Computes the size (in bytes) of all files in a directory at the root level. Synchronously.\\r\\n     */\\r\\n    Sender.prototype._getShallowDirectorySizeSync = function (directory) {\\r\\n        var files = fs.readdirSync(directory);\\r\\n        var totalSize = 0;\\r\\n        for (var i = 0; i < files.length; i++) {\\r\\n            totalSize += fs.statSync(path.join(directory, files[i])).size;\\r\\n        }\\r\\n        return totalSize;\\r\\n    };\\r\\n    /**\\r\\n     * Stores the payload as a json file on disk in the temp directory\\r\\n     */\\r\\n    Sender.prototype._storeToDisk = function (payload) {\\r\\n        var _this = this;\\r\\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\\r\\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\\r\\n        // This will create the dir if it does not exist\\r\\n        // Default permissions on *nix are directory listing from other users but no file creations\\r\\n        Logging.info(Sender.TAG, \\\"Checking existance of data storage directory: \\\" + directory);\\r\\n        this._confirmDirExists(directory, function (error) {\\r\\n            if (error) {\\r\\n                Logging.warn(Sender.TAG, \\\"Error while checking/creating directory: \\\" + (error && error.message));\\r\\n                _this._onErrorHelper(error);\\r\\n                return;\\r\\n            }\\r\\n            _this._getShallowDirectorySize(directory, function (err, size) {\\r\\n                if (err || size < 0) {\\r\\n                    Logging.warn(Sender.TAG, \\\"Error while checking directory size: \\\" + (err && err.message));\\r\\n                    _this._onErrorHelper(err);\\r\\n                    return;\\r\\n                }\\r\\n                else if (size > _this._maxBytesOnDisk) {\\r\\n                    Logging.warn(Sender.TAG, \\\"Not saving data due to max size limit being met. Directory size in bytes is: \\\" + size);\\r\\n                    return;\\r\\n                }\\r\\n                //create file - file name for now is the timestamp, a better approach would be a UUID but that\\r\\n                //would require an external dependency\\r\\n                var fileName = new Date().getTime() + \\\".ai.json\\\";\\r\\n                var fileFullPath = path.join(directory, fileName);\\r\\n                // Mode 600 is w/r for creator and no read access for others (only applies on *nix)\\r\\n                // For Windows, ACL rules are applied to the entire directory (see logic in _confirmDirExists and _applyACLRules)\\r\\n                Logging.info(Sender.TAG, \\\"saving data to disk at: \\\" + fileFullPath);\\r\\n                fs.writeFile(fileFullPath, payload, { mode: 384 }, function (error) { return _this._onErrorHelper(error); });\\r\\n            });\\r\\n        });\\r\\n    };\\r\\n    /**\\r\\n     * Stores the payload as a json file on disk using sync file operations\\r\\n     * this is used when storing data before crashes\\r\\n     */\\r\\n    Sender.prototype._storeToDiskSync = function (payload) {\\r\\n        // tmpdir is /tmp for *nix and USERDIR/AppData/Local/Temp for Windows\\r\\n        var directory = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\\r\\n        try {\\r\\n            Logging.info(Sender.TAG, \\\"Checking existance of data storage directory: \\\" + directory);\\r\\n            if (!fs.existsSync(directory)) {\\r\\n                fs.mkdirSync(directory);\\r\\n            }\\r\\n            // Make sure permissions are valid\\r\\n            this._applyACLRulesSync(directory);\\r\\n            var dirSize = this._getShallowDirectorySizeSync(directory);\\r\\n            if (dirSize > this._maxBytesOnDisk) {\\r\\n                Logging.info(Sender.TAG, \\\"Not saving data due to max size limit being met. Directory size in bytes is: \\\" + dirSize);\\r\\n                return;\\r\\n            }\\r\\n            //create file - file name for now is the timestamp, a better approach would be a UUID but that\\r\\n            //would require an external dependency\\r\\n            var fileName = new Date().getTime() + \\\".ai.json\\\";\\r\\n            var fileFullPath = path.join(directory, fileName);\\r\\n            // Mode 600 is w/r for creator and no access for anyone else (only applies on *nix)\\r\\n            Logging.info(Sender.TAG, \\\"saving data before crash to disk at: \\\" + fileFullPath);\\r\\n            fs.writeFileSync(fileFullPath, payload, { mode: 384 });\\r\\n        }\\r\\n        catch (error) {\\r\\n            Logging.warn(Sender.TAG, \\\"Error while saving data to disk: \\\" + (error && error.message));\\r\\n            this._onErrorHelper(error);\\r\\n        }\\r\\n    };\\r\\n    /**\\r\\n     * Check for temp telemetry files\\r\\n     * reads the first file if exist, deletes it and tries to send its load\\r\\n     */\\r\\n    Sender.prototype._sendFirstFileOnDisk = function () {\\r\\n        var _this = this;\\r\\n        var tempDir = path.join(os.tmpdir(), Sender.TEMPDIR_PREFIX + this._config.instrumentationKey);\\r\\n        fs.exists(tempDir, function (exists) {\\r\\n            if (exists) {\\r\\n                fs.readdir(tempDir, function (error, files) {\\r\\n                    if (!error) {\\r\\n                        files = files.filter(function (f) { return path.basename(f).indexOf(\\\".ai.json\\\") > -1; });\\r\\n                        if (files.length > 0) {\\r\\n                            var firstFile = files[0];\\r\\n                            var filePath = path.join(tempDir, firstFile);\\r\\n                            fs.readFile(filePath, function (error, payload) {\\r\\n                                if (!error) {\\r\\n                                    // delete the file first to prevent double sending\\r\\n                                    fs.unlink(filePath, function (error) {\\r\\n                                        if (!error) {\\r\\n                                            _this.send(payload);\\r\\n                                        }\\r\\n                                        else {\\r\\n                                            _this._onErrorHelper(error);\\r\\n                                        }\\r\\n                                    });\\r\\n                                }\\r\\n                                else {\\r\\n                                    _this._onErrorHelper(error);\\r\\n                                }\\r\\n                            });\\r\\n                        }\\r\\n                    }\\r\\n                    else {\\r\\n                        _this._onErrorHelper(error);\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n    };\\r\\n    Sender.prototype._onErrorHelper = function (error) {\\r\\n        if (typeof this._onError === \\\"function\\\") {\\r\\n            this._onError(error);\\r\\n        }\\r\\n    };\\r\\n    Sender.TAG = \\\"Sender\\\";\\r\\n    Sender.ICACLS_PATH = process.env.systemdrive + \\\"/windows/system32/icacls.exe\\\";\\r\\n    Sender.POWERSHELL_PATH = process.env.systemdrive + \\\"/windows/system32/windowspowershell/v1.0/powershell.exe\\\";\\r\\n    Sender.ACLED_DIRECTORIES = {};\\r\\n    Sender.ACL_IDENTITY = null;\\r\\n    // the amount of time the SDK will wait between resending cached data, this buffer is to avoid any throtelling from the service side\\r\\n    Sender.WAIT_BETWEEN_RESEND = 60 * 1000;\\r\\n    Sender.MAX_BYTES_ON_DISK = 50 * 1000 * 1000;\\r\\n    Sender.MAX_CONNECTION_FAILURES_BEFORE_WARN = 5;\\r\\n    Sender.TEMPDIR_PREFIX = \\\"appInsights-node\\\";\\r\\n    Sender.OS_PROVIDES_FILE_PROTECTION = false;\\r\\n    Sender.USE_ICACLS = os.type() === \\\"Windows_NT\\\";\\r\\n    return Sender;\\r\\n}());\\r\\nmodule.exports = Sender;\\r\\n//# sourceMappingURL=Sender.js.map\",\"module.exports = require(\\\"zlib\\\");\",\"\\\"use strict\\\";\\r\\nvar Contracts = require(\\\"../Declarations/Contracts\\\");\\r\\nvar Util = require(\\\"./Util\\\");\\r\\nvar CorrelationContextManager_1 = require(\\\"../AutoCollection/CorrelationContextManager\\\");\\r\\n/**\\r\\n * Manages the logic of creating envelopes from Telemetry objects\\r\\n */\\r\\nvar EnvelopeFactory = (function () {\\r\\n    function EnvelopeFactory() {\\r\\n    }\\r\\n    /**\\r\\n     * Creates envelope ready to be sent by Channel\\r\\n     * @param telemetry Telemetry data\\r\\n     * @param telemetryType Type of telemetry\\r\\n     * @param commonProperties Bag of custom common properties to be added to the envelope\\r\\n     * @param context Client context\\r\\n     * @param config Client configuration\\r\\n     */\\r\\n    EnvelopeFactory.createEnvelope = function (telemetry, telemetryType, commonProperties, context, config) {\\r\\n        var data = null;\\r\\n        switch (telemetryType) {\\r\\n            case Contracts.TelemetryType.Trace:\\r\\n                data = EnvelopeFactory.createTraceData(telemetry);\\r\\n                break;\\r\\n            case Contracts.TelemetryType.Dependency:\\r\\n                data = EnvelopeFactory.createDependencyData(telemetry);\\r\\n                break;\\r\\n            case Contracts.TelemetryType.Event:\\r\\n                data = EnvelopeFactory.createEventData(telemetry);\\r\\n                break;\\r\\n            case Contracts.TelemetryType.Exception:\\r\\n                data = EnvelopeFactory.createExceptionData(telemetry);\\r\\n                break;\\r\\n            case Contracts.TelemetryType.Request:\\r\\n                data = EnvelopeFactory.createRequestData(telemetry);\\r\\n                break;\\r\\n            case Contracts.TelemetryType.Metric:\\r\\n                data = EnvelopeFactory.createMetricData(telemetry);\\r\\n                break;\\r\\n        }\\r\\n        if (commonProperties && Contracts.domainSupportsProperties(data.baseData)) {\\r\\n            if (data && data.baseData) {\\r\\n                // if no properties are specified just add the common ones\\r\\n                if (!data.baseData.properties) {\\r\\n                    data.baseData.properties = commonProperties;\\r\\n                }\\r\\n                else {\\r\\n                    // otherwise, check each of the common ones\\r\\n                    for (var name in commonProperties) {\\r\\n                        // only override if the property `name` has not been set on this item\\r\\n                        if (!data.baseData.properties[name]) {\\r\\n                            data.baseData.properties[name] = commonProperties[name];\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            // sanitize properties\\r\\n            data.baseData.properties = Util.validateStringMap(data.baseData.properties);\\r\\n        }\\r\\n        var iKey = config ? config.instrumentationKey || \\\"\\\" : \\\"\\\";\\r\\n        var envelope = new Contracts.Envelope();\\r\\n        envelope.data = data;\\r\\n        envelope.iKey = iKey;\\r\\n        // this is kind of a hack, but the envelope name is always the same as the data name sans the chars \\\"data\\\"\\r\\n        envelope.name =\\r\\n            \\\"Microsoft.ApplicationInsights.\\\" +\\r\\n                iKey.replace(/-/g, \\\"\\\") +\\r\\n                \\\".\\\" +\\r\\n                data.baseType.substr(0, data.baseType.length - 4);\\r\\n        envelope.tags = this.getTags(context, telemetry.tagOverrides);\\r\\n        envelope.time = (new Date()).toISOString();\\r\\n        envelope.ver = 1;\\r\\n        envelope.sampleRate = config ? config.samplingPercentage : 100;\\r\\n        // Exclude metrics from sampling by default\\r\\n        if (telemetryType === Contracts.TelemetryType.Metric) {\\r\\n            envelope.sampleRate = 100;\\r\\n        }\\r\\n        return envelope;\\r\\n    };\\r\\n    EnvelopeFactory.createTraceData = function (telemetry) {\\r\\n        var trace = new Contracts.MessageData();\\r\\n        trace.message = telemetry.message;\\r\\n        trace.properties = telemetry.properties;\\r\\n        if (!isNaN(telemetry.severity)) {\\r\\n            trace.severityLevel = telemetry.severity;\\r\\n        }\\r\\n        else {\\r\\n            trace.severityLevel = Contracts.SeverityLevel.Information;\\r\\n        }\\r\\n        var data = new Contracts.Data();\\r\\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Trace);\\r\\n        data.baseData = trace;\\r\\n        return data;\\r\\n    };\\r\\n    EnvelopeFactory.createDependencyData = function (telemetry) {\\r\\n        var remoteDependency = new Contracts.RemoteDependencyData();\\r\\n        remoteDependency.name = telemetry.name;\\r\\n        remoteDependency.data = telemetry.data;\\r\\n        remoteDependency.target = telemetry.target;\\r\\n        remoteDependency.duration = Util.msToTimeSpan(telemetry.duration);\\r\\n        remoteDependency.success = telemetry.success;\\r\\n        remoteDependency.type = telemetry.dependencyTypeName;\\r\\n        remoteDependency.properties = telemetry.properties;\\r\\n        remoteDependency.resultCode = (telemetry.resultCode ? telemetry.resultCode + '' : '');\\r\\n        if (telemetry.id) {\\r\\n            remoteDependency.id = telemetry.id;\\r\\n        }\\r\\n        else {\\r\\n            remoteDependency.id = Util.w3cTraceId();\\r\\n        }\\r\\n        var data = new Contracts.Data();\\r\\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Dependency);\\r\\n        data.baseData = remoteDependency;\\r\\n        return data;\\r\\n    };\\r\\n    EnvelopeFactory.createEventData = function (telemetry) {\\r\\n        var event = new Contracts.EventData();\\r\\n        event.name = telemetry.name;\\r\\n        event.properties = telemetry.properties;\\r\\n        event.measurements = telemetry.measurements;\\r\\n        var data = new Contracts.Data();\\r\\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Event);\\r\\n        data.baseData = event;\\r\\n        return data;\\r\\n    };\\r\\n    EnvelopeFactory.createExceptionData = function (telemetry) {\\r\\n        var exception = new Contracts.ExceptionData();\\r\\n        exception.properties = telemetry.properties;\\r\\n        exception.severityLevel = Contracts.SeverityLevel.Error;\\r\\n        exception.measurements = telemetry.measurements;\\r\\n        exception.exceptions = [];\\r\\n        var stack = telemetry.exception[\\\"stack\\\"];\\r\\n        var exceptionDetails = new Contracts.ExceptionDetails();\\r\\n        exceptionDetails.message = telemetry.exception.message;\\r\\n        exceptionDetails.typeName = telemetry.exception.name;\\r\\n        exceptionDetails.parsedStack = this.parseStack(stack);\\r\\n        exceptionDetails.hasFullStack = Util.isArray(exceptionDetails.parsedStack) && exceptionDetails.parsedStack.length > 0;\\r\\n        exception.exceptions.push(exceptionDetails);\\r\\n        var data = new Contracts.Data();\\r\\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Exception);\\r\\n        data.baseData = exception;\\r\\n        return data;\\r\\n    };\\r\\n    EnvelopeFactory.createRequestData = function (telemetry) {\\r\\n        var requestData = new Contracts.RequestData();\\r\\n        if (telemetry.id) {\\r\\n            requestData.id = telemetry.id;\\r\\n        }\\r\\n        else {\\r\\n            requestData.id = Util.w3cTraceId();\\r\\n        }\\r\\n        requestData.name = telemetry.name;\\r\\n        requestData.url = telemetry.url;\\r\\n        requestData.source = telemetry.source;\\r\\n        requestData.duration = Util.msToTimeSpan(telemetry.duration);\\r\\n        requestData.responseCode = (telemetry.resultCode ? telemetry.resultCode + '' : '');\\r\\n        requestData.success = telemetry.success;\\r\\n        requestData.properties = telemetry.properties;\\r\\n        var data = new Contracts.Data();\\r\\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Request);\\r\\n        data.baseData = requestData;\\r\\n        return data;\\r\\n    };\\r\\n    EnvelopeFactory.createMetricData = function (telemetry) {\\r\\n        var metrics = new Contracts.MetricData(); // todo: enable client-batching of these\\r\\n        metrics.metrics = [];\\r\\n        var metric = new Contracts.DataPoint();\\r\\n        metric.count = !isNaN(telemetry.count) ? telemetry.count : 1;\\r\\n        metric.kind = Contracts.DataPointType.Aggregation;\\r\\n        metric.max = !isNaN(telemetry.max) ? telemetry.max : telemetry.value;\\r\\n        metric.min = !isNaN(telemetry.min) ? telemetry.min : telemetry.value;\\r\\n        metric.name = telemetry.name;\\r\\n        metric.stdDev = !isNaN(telemetry.stdDev) ? telemetry.stdDev : 0;\\r\\n        metric.value = telemetry.value;\\r\\n        metrics.metrics.push(metric);\\r\\n        metrics.properties = telemetry.properties;\\r\\n        var data = new Contracts.Data();\\r\\n        data.baseType = Contracts.telemetryTypeToBaseType(Contracts.TelemetryType.Metric);\\r\\n        data.baseData = metrics;\\r\\n        return data;\\r\\n    };\\r\\n    EnvelopeFactory.getTags = function (context, tagOverrides) {\\r\\n        var correlationContext = CorrelationContextManager_1.CorrelationContextManager.getCurrentContext();\\r\\n        // Make a copy of context tags so we don't alter the actual object\\r\\n        // Also perform tag overriding\\r\\n        var newTags = {};\\r\\n        if (context && context.tags) {\\r\\n            for (var key in context.tags) {\\r\\n                newTags[key] = context.tags[key];\\r\\n            }\\r\\n        }\\r\\n        if (tagOverrides) {\\r\\n            for (var key in tagOverrides) {\\r\\n                newTags[key] = tagOverrides[key];\\r\\n            }\\r\\n        }\\r\\n        // Fill in internally-populated values if not already set\\r\\n        if (correlationContext) {\\r\\n            newTags[context.keys.operationId] = newTags[context.keys.operationId] || correlationContext.operation.id;\\r\\n            newTags[context.keys.operationName] = newTags[context.keys.operationName] || correlationContext.operation.name;\\r\\n            newTags[context.keys.operationParentId] = newTags[context.keys.operationParentId] || correlationContext.operation.parentId;\\r\\n        }\\r\\n        return newTags;\\r\\n    };\\r\\n    EnvelopeFactory.parseStack = function (stack) {\\r\\n        var parsedStack = undefined;\\r\\n        if (typeof stack === \\\"string\\\") {\\r\\n            var frames = stack.split(\\\"\\\\n\\\");\\r\\n            parsedStack = [];\\r\\n            var level = 0;\\r\\n            var totalSizeInBytes = 0;\\r\\n            for (var i = 0; i <= frames.length; i++) {\\r\\n                var frame = frames[i];\\r\\n                if (_StackFrame.regex.test(frame)) {\\r\\n                    var parsedFrame = new _StackFrame(frames[i], level++);\\r\\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\\r\\n                    parsedStack.push(parsedFrame);\\r\\n                }\\r\\n            }\\r\\n            // DP Constraint - exception parsed stack must be < 32KB\\r\\n            // remove frames from the middle to meet the threshold\\r\\n            var exceptionParsedStackThreshold = 32 * 1024;\\r\\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\\r\\n                var left = 0;\\r\\n                var right = parsedStack.length - 1;\\r\\n                var size = 0;\\r\\n                var acceptedLeft = left;\\r\\n                var acceptedRight = right;\\r\\n                while (left < right) {\\r\\n                    // check size\\r\\n                    var lSize = parsedStack[left].sizeInBytes;\\r\\n                    var rSize = parsedStack[right].sizeInBytes;\\r\\n                    size += lSize + rSize;\\r\\n                    if (size > exceptionParsedStackThreshold) {\\r\\n                        // remove extra frames from the middle\\r\\n                        var howMany = acceptedRight - acceptedLeft + 1;\\r\\n                        parsedStack.splice(acceptedLeft, howMany);\\r\\n                        break;\\r\\n                    }\\r\\n                    // update pointers\\r\\n                    acceptedLeft = left;\\r\\n                    acceptedRight = right;\\r\\n                    left++;\\r\\n                    right--;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return parsedStack;\\r\\n    };\\r\\n    return EnvelopeFactory;\\r\\n}());\\r\\nvar _StackFrame = (function () {\\r\\n    function _StackFrame(frame, level) {\\r\\n        this.sizeInBytes = 0;\\r\\n        this.level = level;\\r\\n        this.method = \\\"<no_method>\\\";\\r\\n        this.assembly = Util.trim(frame);\\r\\n        var matches = frame.match(_StackFrame.regex);\\r\\n        if (matches && matches.length >= 5) {\\r\\n            this.method = Util.trim(matches[2]) || this.method;\\r\\n            this.fileName = Util.trim(matches[4]) || \\\"<no_filename>\\\";\\r\\n            this.line = parseInt(matches[5]) || 0;\\r\\n        }\\r\\n        this.sizeInBytes += this.method.length;\\r\\n        this.sizeInBytes += this.fileName.length;\\r\\n        this.sizeInBytes += this.assembly.length;\\r\\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\\r\\n        this.sizeInBytes += _StackFrame.baseSize;\\r\\n        this.sizeInBytes += this.level.toString().length;\\r\\n        this.sizeInBytes += this.line.toString().length;\\r\\n    }\\r\\n    // regex to match stack frames from ie/chrome/ff\\r\\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\\r\\n    _StackFrame.regex = /^([\\\\s]+at)?(.*?)(\\\\@|\\\\s\\\\(|\\\\s)([^\\\\(\\\\@\\\\n]+):([0-9]+):([0-9]+)(\\\\)?)$/;\\r\\n    _StackFrame.baseSize = 58; //'{\\\"method\\\":\\\"\\\",\\\"level\\\":,\\\"assembly\\\":\\\"\\\",\\\"fileName\\\":\\\"\\\",\\\"line\\\":}'.length\\r\\n    return _StackFrame;\\r\\n}());\\r\\nmodule.exports = EnvelopeFactory;\\r\\n//# sourceMappingURL=EnvelopeFactory.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { UriHandler, Uri, window, Disposable, commands } from 'vscode';\\nimport { dispose } from './util';\\nimport * as querystring from 'querystring';\\n\\nexport class GitProtocolHandler implements UriHandler {\\n\\n\\tprivate disposables: Disposable[] = [];\\n\\n\\tconstructor() {\\n\\t\\tthis.disposables.push(window.registerUriHandler(this));\\n\\t}\\n\\n\\thandleUri(uri: Uri): void {\\n\\t\\tswitch (uri.path) {\\n\\t\\t\\tcase '/clone': this.clone(uri);\\n\\t\\t}\\n\\t}\\n\\n\\tprivate clone(uri: Uri): void {\\n\\t\\tconst data = querystring.parse(uri.query);\\n\\n\\t\\tif (!data.url) {\\n\\t\\t\\tconsole.warn('Failed to open URI:', uri);\\n\\t\\t}\\n\\n\\t\\tcommands.executeCommand('git.clone', data.url);\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.disposables = dispose(this.disposables);\\n\\t}\\n}\",\"module.exports = require(\\\"querystring\\\");\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { Model } from '../model';\\nimport { GitExtension, Repository, API } from './git';\\nimport { ApiRepository, ApiImpl } from './api1';\\nimport { Event, EventEmitter } from 'vscode';\\nimport { latchEvent } from '../util';\\n\\nexport function deprecated(_target: any, key: string, descriptor: any): void {\\n\\tif (typeof descriptor.value !== 'function') {\\n\\t\\tthrow new Error('not supported');\\n\\t}\\n\\n\\tconst fn = descriptor.value;\\n\\tdescriptor.value = function () {\\n\\t\\tconsole.warn(`Git extension API method '${key}' is deprecated.`);\\n\\t\\treturn fn.apply(this, arguments);\\n\\t};\\n}\\n\\nexport class GitExtensionImpl implements GitExtension {\\n\\n\\tenabled: boolean = false;\\n\\n\\tprivate _onDidChangeEnablement = new EventEmitter<boolean>();\\n\\treadonly onDidChangeEnablement: Event<boolean> = latchEvent(this._onDidChangeEnablement.event);\\n\\n\\tprivate _model: Model | undefined = undefined;\\n\\n\\tset model(model: Model | undefined) {\\n\\t\\tthis._model = model;\\n\\n\\t\\tthis.enabled = !!model;\\n\\t\\tthis._onDidChangeEnablement.fire(this.enabled);\\n\\t}\\n\\n\\tconstructor(model?: Model) {\\n\\t\\tif (model) {\\n\\t\\t\\tthis.enabled = true;\\n\\t\\t\\tthis._model = model;\\n\\t\\t}\\n\\t}\\n\\n\\t@deprecated\\n\\tasync getGitPath(): Promise<string> {\\n\\t\\tif (!this._model) {\\n\\t\\t\\tthrow new Error('Git model not found');\\n\\t\\t}\\n\\n\\t\\treturn this._model.git.path;\\n\\t}\\n\\n\\t@deprecated\\n\\tasync getRepositories(): Promise<Repository[]> {\\n\\t\\tif (!this._model) {\\n\\t\\t\\tthrow new Error('Git model not found');\\n\\t\\t}\\n\\n\\t\\treturn this._model.repositories.map(repository => new ApiRepository(repository));\\n\\t}\\n\\n\\tgetAPI(version: number): API {\\n\\t\\tif (!this._model) {\\n\\t\\t\\tthrow new Error('Git model not found');\\n\\t\\t}\\n\\n\\t\\tif (version !== 1) {\\n\\t\\t\\tthrow new Error(`No API version ${version} found.`);\\n\\t\\t}\\n\\n\\t\\treturn new ApiImpl(this._model);\\n\\t}\\n}\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { Model } from '../model';\\nimport { Repository as BaseRepository, Resource } from '../repository';\\nimport { InputBox, Git, API, Repository, Remote, RepositoryState, Branch, Ref, Submodule, Commit, Change, RepositoryUIState, Status, LogOptions, APIState, CommitOptions } from './git';\\nimport { Event, SourceControlInputBox, Uri, SourceControl } from 'vscode';\\nimport { mapEvent } from '../util';\\nimport { toGitUri } from '../uri';\\n\\nclass ApiInputBox implements InputBox {\\n\\tset value(value: string) { this._inputBox.value = value; }\\n\\tget value(): string { return this._inputBox.value; }\\n\\tconstructor(private _inputBox: SourceControlInputBox) { }\\n}\\n\\nexport class ApiChange implements Change {\\n\\n\\tget uri(): Uri { return this.resource.resourceUri; }\\n\\tget originalUri(): Uri { return this.resource.original; }\\n\\tget renameUri(): Uri | undefined { return this.resource.renameResourceUri; }\\n\\tget status(): Status { return this.resource.type; }\\n\\n\\tconstructor(private readonly resource: Resource) { }\\n}\\n\\nexport class ApiRepositoryState implements RepositoryState {\\n\\n\\tget HEAD(): Branch | undefined { return this._repository.HEAD; }\\n\\tget refs(): Ref[] { return [...this._repository.refs]; }\\n\\tget remotes(): Remote[] { return [...this._repository.remotes]; }\\n\\tget submodules(): Submodule[] { return [...this._repository.submodules]; }\\n\\tget rebaseCommit(): Commit | undefined { return this._repository.rebaseCommit; }\\n\\n\\tget mergeChanges(): Change[] { return this._repository.mergeGroup.resourceStates.map(r => new ApiChange(r)); }\\n\\tget indexChanges(): Change[] { return this._repository.indexGroup.resourceStates.map(r => new ApiChange(r)); }\\n\\tget workingTreeChanges(): Change[] { return this._repository.workingTreeGroup.resourceStates.map(r => new ApiChange(r)); }\\n\\n\\treadonly onDidChange: Event<void> = this._repository.onDidRunGitStatus;\\n\\n\\tconstructor(private _repository: BaseRepository) { }\\n}\\n\\nexport class ApiRepositoryUIState implements RepositoryUIState {\\n\\n\\tget selected(): boolean { return this._sourceControl.selected; }\\n\\n\\treadonly onDidChange: Event<void> = mapEvent<boolean, void>(this._sourceControl.onDidChangeSelection, () => null);\\n\\n\\tconstructor(private _sourceControl: SourceControl) { }\\n}\\n\\nexport class ApiRepository implements Repository {\\n\\n\\treadonly rootUri: Uri = Uri.file(this._repository.root);\\n\\treadonly inputBox: InputBox = new ApiInputBox(this._repository.inputBox);\\n\\treadonly state: RepositoryState = new ApiRepositoryState(this._repository);\\n\\treadonly ui: RepositoryUIState = new ApiRepositoryUIState(this._repository.sourceControl);\\n\\n\\tconstructor(private _repository: BaseRepository) { }\\n\\n\\tapply(patch: string, reverse?: boolean): Promise<void> {\\n\\t\\treturn this._repository.apply(patch, reverse);\\n\\t}\\n\\n\\tgetConfigs(): Promise<{ key: string; value: string; }[]> {\\n\\t\\treturn this._repository.getConfigs();\\n\\t}\\n\\n\\tgetConfig(key: string): Promise<string> {\\n\\t\\treturn this._repository.getConfig(key);\\n\\t}\\n\\n\\tsetConfig(key: string, value: string): Promise<string> {\\n\\t\\treturn this._repository.setConfig(key, value);\\n\\t}\\n\\n\\tgetGlobalConfig(key: string): Promise<string> {\\n\\t\\treturn this._repository.getGlobalConfig(key);\\n\\t}\\n\\n\\tgetObjectDetails(treeish: string, path: string): Promise<{ mode: string; object: string; size: number; }> {\\n\\t\\treturn this._repository.getObjectDetails(treeish, path);\\n\\t}\\n\\n\\tdetectObjectType(object: string): Promise<{ mimetype: string, encoding?: string }> {\\n\\t\\treturn this._repository.detectObjectType(object);\\n\\t}\\n\\n\\tbuffer(ref: string, filePath: string): Promise<Buffer> {\\n\\t\\treturn this._repository.buffer(ref, filePath);\\n\\t}\\n\\n\\tshow(ref: string, path: string): Promise<string> {\\n\\t\\treturn this._repository.show(ref, path);\\n\\t}\\n\\n\\tgetCommit(ref: string): Promise<Commit> {\\n\\t\\treturn this._repository.getCommit(ref);\\n\\t}\\n\\n\\tclean(paths: string[]) {\\n\\t\\treturn this._repository.clean(paths.map(p => Uri.file(p)));\\n\\t}\\n\\n\\tdiff(cached?: boolean) {\\n\\t\\treturn this._repository.diff(cached);\\n\\t}\\n\\n\\tdiffWithHEAD(): Promise<Change[]>;\\n\\tdiffWithHEAD(path: string): Promise<string>;\\n\\tdiffWithHEAD(path?: string): Promise<string | Change[]> {\\n\\t\\treturn this._repository.diffWithHEAD(path);\\n\\t}\\n\\n\\tdiffWith(ref: string): Promise<Change[]>;\\n\\tdiffWith(ref: string, path: string): Promise<string>;\\n\\tdiffWith(ref: string, path?: string): Promise<string | Change[]> {\\n\\t\\treturn this._repository.diffWith(ref, path);\\n\\t}\\n\\n\\tdiffIndexWithHEAD(): Promise<Change[]>;\\n\\tdiffIndexWithHEAD(path: string): Promise<string>;\\n\\tdiffIndexWithHEAD(path?: string): Promise<string | Change[]> {\\n\\t\\treturn this._repository.diffIndexWithHEAD(path);\\n\\t}\\n\\n\\tdiffIndexWith(ref: string): Promise<Change[]>;\\n\\tdiffIndexWith(ref: string, path: string): Promise<string>;\\n\\tdiffIndexWith(ref: string, path?: string): Promise<string | Change[]> {\\n\\t\\treturn this._repository.diffIndexWith(ref, path);\\n\\t}\\n\\n\\tdiffBlobs(object1: string, object2: string): Promise<string> {\\n\\t\\treturn this._repository.diffBlobs(object1, object2);\\n\\t}\\n\\n\\tdiffBetween(ref1: string, ref2: string): Promise<Change[]>;\\n\\tdiffBetween(ref1: string, ref2: string, path: string): Promise<string>;\\n\\tdiffBetween(ref1: string, ref2: string, path?: string): Promise<string | Change[]> {\\n\\t\\treturn this._repository.diffBetween(ref1, ref2, path);\\n\\t}\\n\\n\\thashObject(data: string): Promise<string> {\\n\\t\\treturn this._repository.hashObject(data);\\n\\t}\\n\\n\\tcreateBranch(name: string, checkout: boolean, ref?: string | undefined): Promise<void> {\\n\\t\\treturn this._repository.branch(name, checkout, ref);\\n\\t}\\n\\n\\tdeleteBranch(name: string, force?: boolean): Promise<void> {\\n\\t\\treturn this._repository.deleteBranch(name, force);\\n\\t}\\n\\n\\tgetBranch(name: string): Promise<Branch> {\\n\\t\\treturn this._repository.getBranch(name);\\n\\t}\\n\\n\\tsetBranchUpstream(name: string, upstream: string): Promise<void> {\\n\\t\\treturn this._repository.setBranchUpstream(name, upstream);\\n\\t}\\n\\n\\tgetMergeBase(ref1: string, ref2: string): Promise<string> {\\n\\t\\treturn this._repository.getMergeBase(ref1, ref2);\\n\\t}\\n\\n\\tstatus(): Promise<void> {\\n\\t\\treturn this._repository.status();\\n\\t}\\n\\n\\tcheckout(treeish: string): Promise<void> {\\n\\t\\treturn this._repository.checkout(treeish);\\n\\t}\\n\\n\\taddRemote(name: string, url: string): Promise<void> {\\n\\t\\treturn this._repository.addRemote(name, url);\\n\\t}\\n\\n\\tremoveRemote(name: string): Promise<void> {\\n\\t\\treturn this._repository.removeRemote(name);\\n\\t}\\n\\n\\tfetch(remote?: string | undefined, ref?: string | undefined, depth?: number | undefined): Promise<void> {\\n\\t\\treturn this._repository.fetch(remote, ref, depth);\\n\\t}\\n\\n\\tpull(unshallow?: boolean): Promise<void> {\\n\\t\\treturn this._repository.pull(undefined, unshallow);\\n\\t}\\n\\n\\tpush(remoteName?: string, branchName?: string, setUpstream: boolean = false): Promise<void> {\\n\\t\\treturn this._repository.pushTo(remoteName, branchName, setUpstream);\\n\\t}\\n\\n\\tblame(path: string): Promise<string> {\\n\\t\\treturn this._repository.blame(path);\\n\\t}\\n\\n\\tlog(options?: LogOptions): Promise<Commit[]> {\\n\\t\\treturn this._repository.log(options);\\n\\t}\\n\\n\\tcommit(message: string, opts?: CommitOptions): Promise<void> {\\n\\t\\treturn this._repository.commit(message, opts);\\n\\t}\\n}\\n\\nexport class ApiGit implements Git {\\n\\n\\tget path(): string { return this._model.git.path; }\\n\\n\\tconstructor(private _model: Model) { }\\n}\\n\\nexport class ApiImpl implements API {\\n\\n\\treadonly git = new ApiGit(this._model);\\n\\n\\tget state(): APIState {\\n\\t\\treturn this._model.state;\\n\\t}\\n\\n\\tget onDidChangeState(): Event<APIState> {\\n\\t\\treturn this._model.onDidChangeState;\\n\\t}\\n\\n\\tget onDidOpenRepository(): Event<Repository> {\\n\\t\\treturn mapEvent(this._model.onDidOpenRepository, r => new ApiRepository(r));\\n\\t}\\n\\n\\tget onDidCloseRepository(): Event<Repository> {\\n\\t\\treturn mapEvent(this._model.onDidCloseRepository, r => new ApiRepository(r));\\n\\t}\\n\\n\\tget repositories(): Repository[] {\\n\\t\\treturn this._model.repositories.map(r => new ApiRepository(r));\\n\\t}\\n\\n\\ttoGitUri(uri: Uri, ref: string): Uri {\\n\\t\\treturn toGitUri(uri, ref);\\n\\t}\\n\\n\\tgetRepository(uri: Uri): Repository | null {\\n\\t\\tconst result = this._model.getRepository(uri);\\n\\t\\treturn result ? new ApiRepository(result) : null;\\n\\t}\\n\\n\\tconstructor(private _model: Model) { }\\n}\\n\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport { Disposable } from 'vscode';\\nimport { toDisposable } from '../util';\\nimport * as path from 'path';\\nimport * as http from 'http';\\nimport * as os from 'os';\\nimport * as fs from 'fs';\\nimport * as crypto from 'crypto';\\n\\nfunction getIPCHandlePath(nonce: string): string {\\n\\tif (process.platform === 'win32') {\\n\\t\\treturn `\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-git-ipc-${nonce}-sock`;\\n\\t}\\n\\n\\tif (process.env['XDG_RUNTIME_DIR']) {\\n\\t\\treturn path.join(process.env['XDG_RUNTIME_DIR'] as string, `vscode-git-ipc-${nonce}.sock`);\\n\\t}\\n\\n\\treturn path.join(os.tmpdir(), `vscode-git-ipc-${nonce}.sock`);\\n}\\n\\nexport interface IIPCHandler {\\n\\thandle(request: any): Promise<any>;\\n}\\n\\nexport async function createIPCServer(): Promise<IIPCServer> {\\n\\tconst server = http.createServer();\\n\\tconst buffer = await new Promise<Buffer>((c, e) => crypto.randomBytes(20, (err, buf) => err ? e(err) : c(buf)));\\n\\tconst nonce = buffer.toString('hex');\\n\\tconst ipcHandlePath = getIPCHandlePath(nonce);\\n\\n\\treturn new Promise((c, e) => {\\n\\t\\ttry {\\n\\t\\t\\tserver.on('error', err => e(err));\\n\\t\\t\\tserver.listen(ipcHandlePath);\\n\\t\\t\\tc(new IPCServer(server, ipcHandlePath));\\n\\t\\t} catch (err) {\\n\\t\\t\\te(err);\\n\\t\\t}\\n\\t});\\n}\\n\\nexport interface IIPCServer extends Disposable {\\n\\treadonly ipcHandlePath: string | undefined;\\n\\tgetEnv(): any;\\n\\tregisterHandler(name: string, handler: IIPCHandler): Disposable;\\n}\\n\\nclass IPCServer implements IIPCServer, Disposable {\\n\\n\\tprivate handlers = new Map<string, IIPCHandler>();\\n\\tget ipcHandlePath(): string { return this._ipcHandlePath; }\\n\\n\\tconstructor(private server: http.Server, private _ipcHandlePath: string) {\\n\\t\\tthis.server.on('request', this.onRequest.bind(this));\\n\\t}\\n\\n\\tregisterHandler(name: string, handler: IIPCHandler): Disposable {\\n\\t\\tthis.handlers.set(`/${name}`, handler);\\n\\t\\treturn toDisposable(() => this.handlers.delete(name));\\n\\t}\\n\\n\\tprivate onRequest(req: http.IncomingMessage, res: http.ServerResponse): void {\\n\\t\\tif (!req.url) {\\n\\t\\t\\tconsole.warn(`Request lacks url`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst handler = this.handlers.get(req.url);\\n\\n\\t\\tif (!handler) {\\n\\t\\t\\tconsole.warn(`IPC handler for ${req.url} not found`);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst chunks: Buffer[] = [];\\n\\t\\treq.on('data', d => chunks.push(d));\\n\\t\\treq.on('end', () => {\\n\\t\\t\\tconst request = JSON.parse(Buffer.concat(chunks).toString('utf8'));\\n\\t\\t\\thandler.handle(request).then(result => {\\n\\t\\t\\t\\tres.writeHead(200);\\n\\t\\t\\t\\tres.end(JSON.stringify(result));\\n\\t\\t\\t}, () => {\\n\\t\\t\\t\\tres.writeHead(500);\\n\\t\\t\\t\\tres.end();\\n\\t\\t\\t});\\n\\t\\t});\\n\\t}\\n\\n\\tgetEnv(): any {\\n\\t\\treturn { VSCODE_GIT_IPC_HANDLE: this.ipcHandlePath };\\n\\t}\\n\\n\\tdispose(): void {\\n\\t\\tthis.handlers.clear();\\n\\t\\tthis.server.close();\\n\\n\\t\\tif (this._ipcHandlePath && process.platform !== 'win32') {\\n\\t\\t\\tfs.unlinkSync(this._ipcHandlePath);\\n\\t\\t}\\n\\t}\\n}\\n\"]}","code":"!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=54)}([function(e,t){e.exports=require(\"path\")},function(e,t){e.exports={detecting:0,foundIt:1,notMe:2,start:0,error:1,itsMe:2,SHORTCUT_THRESHOLD:.95}},function(e,t){e.exports=require(\"fs\")},function(e,t){e.exports=require(\"vscode\")},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(44),i=r(44);t.makePatchingRequire=i.makePatchingRequire;var o=function(e){return!0},s=function(){function e(){this.version=r(133).version,this.subscribers={},this.contextPreservationFunction=function(e){return e},this.knownPatches={},this.currentlyPublishing=!1}return e.prototype.shouldPublish=function(e){var t=this.subscribers[e];return!!t&&t.some(function(e){var t=e.filter;return!t||t(!1)})},e.prototype.publish=function(e,t){if(!this.currentlyPublishing){var r=this.subscribers[e];if(r){var n={timestamp:Date.now(),data:t};this.currentlyPublishing=!0,r.forEach(function(e){var t=e.listener,r=e.filter;try{r&&r(!0)&&t(n)}catch(e){}}),this.currentlyPublishing=!1}}},e.prototype.subscribe=function(e,t,r){void 0===r&&(r=o),this.subscribers[e]||(this.subscribers[e]=[]),this.subscribers[e].push({listener:t,filter:r})},e.prototype.unsubscribe=function(e,t,r){void 0===r&&(r=o);var n=this.subscribers[e];if(n)for(var i=0;i<n.length;++i)if(n[i].listener===t&&n[i].filter===r)return n.splice(i,1),!0;return!1},e.prototype.reset=function(){var e=this;this.subscribers={},this.contextPreservationFunction=function(e){return e},Object.getOwnPropertyNames(this.knownPatches).forEach(function(t){return delete e.knownPatches[t]})},e.prototype.bindToContext=function(e){return this.contextPreservationFunction(e)},e.prototype.addContextPreservation=function(e){var t=this.contextPreservationFunction;this.contextPreservationFunction=function(r){return e(t(r))}},e.prototype.registerMonkeyPatch=function(e,t){this.knownPatches[e]||(this.knownPatches[e]=[]),this.knownPatches[e].push(t)},e.prototype.getPatchesObject=function(){return this.knownPatches},e}();global.diagnosticsSource||(global.diagnosticsSource=new s,r(45).prototype.require=n.makePatchingRequire(global.diagnosticsSource.getPatchesObject()));t.channel=global.diagnosticsSource},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(0),i=r(2),o=r(38);function s(e){return e.forEach(e=>e.dispose()),[]}function a(e){return{dispose:e}}function c(e){return a(()=>s(e))}function u(e,t){return(r,n,i)=>e(e=>t(e)&&r.call(n,e),null,i)}function l(e){return(t,r,n)=>{const i=e(e=>(i.dispose(),t.call(r,e)),null,n);return i}}function h(e){return/^[a-zA-Z]:\\\\/.test(e)}t.log=function(...e){console.log.apply(console,[\"git:\",...e])},t.dispose=s,t.toDisposable=a,t.combinedDisposable=c,t.EmptyDisposable=a(()=>null),t.fireEvent=function(e){return(t,r,n)=>e(e=>t.call(r),null,n)},t.mapEvent=function(e,t){return(r,n,i)=>e(e=>r.call(n,t(e)),null,i)},t.filterEvent=u,t.latchEvent=function(e){let t,r=!0;return u(e,e=>{let n=r||e!==t;return r=!1,t=e,n})},t.anyEvent=function(...e){return(t,r,n)=>{const i=c(e.map(e=>e(e=>t.call(r,e))));return n&&n.push(i),i}},t.done=function(e){return e.then(()=>void 0)},t.onceEvent=l,t.debounceEvent=function(e,t){return(r,n,i)=>{let o;return e(e=>{clearTimeout(o),o=setTimeout(()=>r.call(n,e),t)},null,i)}},t.eventToPromise=function(e){return new Promise(t=>l(e)(t))},t.once=function(e){return(...t)=>e(...t)},t.assign=function(e,...t){for(const r of t)Object.keys(r).forEach(t=>e[t]=r[t]);return e},t.uniqBy=function(e,t){const r=Object.create(null);return e.filter(e=>{const n=t(e);return!r[n]&&(r[n]=!0,!0)})},t.groupBy=function(e,t){return e.reduce((e,r)=>{const n=t(r);return e[n]=[...e[n]||[],r],e},Object.create(null))},t.mkdirp=async function e(t,r){const o=async()=>{try{await i.promises.mkdir(t,r)}catch(e){if(\"EEXIST\"===e.code){if((await i.promises.stat(t)).isDirectory())return;throw new Error(`'${t}' exists and is not a directory.`)}throw e}};if(t===n.dirname(t))return!0;try{await o()}catch(i){if(\"ENOENT\"!==i.code)throw i;await e(n.dirname(t),r),await o()}return!0},t.uniqueFilter=function(e){const t=Object.create(null);return r=>{const n=e(r);return!t[n]&&(t[n]=!0,!0)}},t.firstIndex=function(e,t){for(let r=0;r<e.length;r++)if(t(e[r]))return r;return-1},t.find=function(e,t){let r=void 0;return e.some(e=>!!t(e)&&(r=e,!0)),r},t.grep=async function(e,t){return new Promise((r,n)=>{const s=i.createReadStream(e,{encoding:\"utf8\"}),a=o(s);a.on(\"data\",e=>{t.test(e)&&(s.close(),r(!0))}),a.on(\"error\",n),a.on(\"end\",()=>r(!1))})},t.readBytes=function(e,t){return new Promise((r,n)=>{let i=!1,o=Buffer.allocUnsafe(t),s=0;e.on(\"data\",r=>{let n=Math.min(t-s,r.length);r.copy(o,s,0,n),(s+=n)===t&&e.destroy()}),e.on(\"error\",e=>{i||(i=!0,n(e))}),e.on(\"close\",()=>{i||(i=!0,r(o.slice(0,s)))})})},t.detectUnicodeEncoding=function(e){if(e.length<2)return null;const t=e.readUInt8(0),r=e.readUInt8(1);if(254===t&&255===r)return\"utf16be\";if(255===t&&254===r)return\"utf16le\";if(e.length<3)return null;const n=e.readUInt8(2);return 239===t&&187===r&&191===n?\"utf8\":null},t.isDescendant=function(e,t){return e===t||(e.charAt(e.length-1)!==n.sep&&(e+=n.sep),h(e)&&(e=e.toLowerCase(),t=t.toLowerCase()),t.startsWith(e))},t.pathEquals=function(e,t){return h(e)&&(e=e.toLowerCase(),t=t.toLowerCase()),e===t},t.splitInChunks=function*(e,t){let r=[],n=0;for(const i of e){let e=n+i.length;e>t&&r.length>0&&(yield r,r=[],e=i.length),r.push(i),n=e}r.length>0&&(yield r)};t.Limiter=class{constructor(e){this.maxDegreeOfParalellism=e,this.outstandingPromises=[],this.runningPromises=0}queue(e){return new Promise((t,r)=>{this.outstandingPromises.push({factory:e,c:t,e:r}),this.consume()})}consume(){for(;this.outstandingPromises.length&&this.runningPromises<this.maxDegreeOfParalellism;){const e=this.outstandingPromises.shift();this.runningPromises++;const t=e.factory();t.then(e.c,e.e),t.then(()=>this.consumed(),()=>this.consumed())}}consumed(){this.runningPromises--,this.outstandingPromises.length>0&&this.consume()}}},function(e,t,r){\"use strict\";var n=function(){function e(){}return e.info=function(t){for(var r=[],n=1;n<arguments.length;n++)r[n-1]=arguments[n];e.enableDebug&&console.info(e.TAG+t,r)},e.warn=function(t){for(var r=[],n=1;n<arguments.length;n++)r[n-1]=arguments[n];e.disableWarnings||console.warn(e.TAG+t,r)},e.enableDebug=!1,e.disableWarnings=!1,e.TAG=\"ApplicationInsights:\",e}();e.exports=n},function(e,t,r){\"use strict\";function n(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,\"__esModule\",{value:!0}),n(r(149)),n(r(47)),n(r(164))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n,i,o,s,a,c=r(0),u=r(2),l=Object.prototype.toString;function h(e){return void 0!==e}function p(e){return\"[object String]\"===l.call(e)}function d(e){return JSON.parse(u.readFileSync(e,\"utf8\"))}function f(e,t){return a&&(e=\"［\"+e.replace(/[aouei]/g,\"$&$&\")+\"］\"),0===t.length?e:e.replace(/\\{(\\d+)\\}/g,function(e,r){var n=r[0],i=t[n],o=e;return\"string\"==typeof i?o=i:\"number\"!=typeof i&&\"boolean\"!=typeof i&&void 0!==i&&null!==i||(o=String(i)),o})}function g(e){return function(t,r){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];return function(e){return\"[object Number]\"===l.call(e)}(t)?t>=e.length?void console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \"+new Error(\"\").stack):f(e[t],n):p(r)?(console.warn(\"Message \"+r+\" didn't get externalized correctly.\"),f(r,n)):void console.error(\"Broken localize call found. Stacktrace is\\n: \"+new Error(\"\").stack)}}function m(e,t){for(var r=[],n=2;n<arguments.length;n++)r[n-2]=arguments[n];return f(t,r)}function y(e,t){return o[e]=t,t}function v(e,t){var r,n=c.join(s.cacheRoot,e.id+\"-\"+e.hash+\".json\"),i=!1,o=!1;try{return r=JSON.parse(u.readFileSync(n,{encoding:\"utf8\",flag:\"r\"})),function(e){var t=new Date;u.utimes(e,t,t,function(){})}(n),r}catch(e){if(\"ENOENT\"===e.code)o=!0;else{if(!(e instanceof SyntaxError))throw e;console.log(\"Syntax error parsing message bundle: \"+e.message+\".\"),u.unlink(n,function(e){e&&console.error(\"Deleting corrupted bundle \"+n+\" failed.\")}),i=!0}}if(!(r=function(e,t){var r=s.translationsConfig[e.id];if(r){var n=d(r).contents,i=d(c.join(t,\"nls.metadata.json\")),o=Object.create(null);for(var a in i){var u=i[a],l=n[e.outDir+\"/\"+a];if(l){for(var h=[],f=0;f<u.keys.length;f++){var g=u.keys[f],m=l[p(g)?g:g.key];void 0===m&&(m=u.messages[f]),h.push(m)}o[a]=h}else o[a]=u.messages}return o}}(e,t))||i)return r;if(o)try{u.writeFileSync(n,JSON.stringify(r),{encoding:\"utf8\",flag:\"wx\"})}catch(e){if(\"EEXIST\"===e.code)return r;throw e}return r}function w(e){try{return function(e){var t=d(c.join(e,\"nls.metadata.json\")),r=Object.create(null);for(var n in t){var i=t[n];r[n]=i.messages}return r}(e)}catch(e){return void console.log(\"Generating default bundle from meta data failed.\",e)}}function b(e,t){var r;if(!0===s.languagePackSupport&&void 0!==s.cacheRoot&&void 0!==s.languagePackId&&void 0!==s.translationsConfigFile&&void 0!==s.translationsConfig)try{r=v(e,t)}catch(e){console.log(\"Load or create bundle failed \",e)}if(!r){if(s.languagePackSupport)return w(t);var n=function(e){for(var t=s.locale;t;){var r=c.join(e,\"nls.bundle.\"+t+\".json\");if(u.existsSync(r))return r;var n=t.lastIndexOf(\"-\");t=n>0?t.substring(0,n):void 0}if(void 0===t&&(r=c.join(e,\"nls.bundle.json\"),u.existsSync(r)))return r}(t);if(n)try{return d(n)}catch(e){console.log(\"Loading in the box message bundle failed.\",e)}r=w(t)}return r}function C(e){if(!e)return m;var t=c.extname(e);if(t&&(e=e.substr(0,e.length-t.length)),s.messageFormat===n.both||s.messageFormat===n.bundle){var r=function(e){for(var t,r=c.dirname(e);t=c.join(r,\"nls.metadata.header.json\"),!u.existsSync(t);){var n=c.dirname(r);if(n===r){t=void 0;break}r=n}return t}(e);if(r){var i=c.dirname(r),l=o[i];if(void 0===l)try{var p=JSON.parse(u.readFileSync(r,\"utf8\"));try{var f=b(p,i);l=y(i,f?{header:p,nlsBundle:f}:null)}catch(e){console.error(\"Failed to load nls bundle\",e),l=y(i,null)}}catch(e){console.error(\"Failed to read header file\",e),l=y(i,null)}if(l){var v=e.substr(i.length+1).replace(/\\\\/g,\"/\"),w=l.nlsBundle[v];return void 0===w?(console.error(\"Messages for file \"+e+\" not found. See console for details.\"),function(){return\"Messages not found.\"}):g(w)}}}if(s.messageFormat===n.both||s.messageFormat===n.file)try{var C=d(function(e){var t;if(s.cacheLanguageResolution&&t)t=t;else{if(a||!s.locale)t=\".nls.json\";else for(var r=s.locale;r;){var n=\".nls.\"+r+\".json\";if(u.existsSync(e+n)){t=n;break}var i=r.lastIndexOf(\"-\");i>0?r=r.substring(0,i):(t=\".nls.json\",r=null)}s.cacheLanguageResolution&&(t=t)}return e+t}(e));return Array.isArray(C)?g(C):h(C.messages)&&h(C.keys)?g(C.messages):(console.error(\"String bundle '\"+e+\"' uses an unsupported format.\"),function(){return\"File bundle has unsupported format. See console for details\"})}catch(e){\"ENOENT\"!==e.code&&console.error(\"Failed to load single file bundle\",e)}return console.error(\"Failed to load message bundle for file \"+e),function(){return\"Failed to load message bundle. See console for details.\"}}!function(e){e.file=\"file\",e.bundle=\"bundle\",e.both=\"both\"}(n=t.MessageFormat||(t.MessageFormat={})),function(e){e.is=function(e){var t=e;return t&&h(t.key)&&h(t.comment)}}(i||(i={})),function(){if(s={locale:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:n.bundle},p(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG);if(p(e.locale)&&(s.locale=e.locale.toLowerCase()),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(s.languagePackSupport=e._languagePackSupport),p(e._cacheRoot)&&(s.cacheRoot=e._cacheRoot),p(e._languagePackId)&&(s.languagePackId=e._languagePackId),p(e._translationsConfigFile)){s.translationsConfigFile=e._translationsConfigFile;try{s.translationsConfig=d(s.translationsConfigFile)}catch(t){e._corruptedFile&&u.writeFile(e._corruptedFile,\"corrupted\",\"utf8\",function(e){console.error(e)})}}}catch(e){}a=\"pseudo\"===s.locale,void 0,o=Object.create(null)}(),t.loadMessageBundle=C,t.config=function(e){return e&&(p(e.locale)&&(s.locale=e.locale.toLowerCase(),void 0,o=Object.create(null)),void 0!==e.messageFormat&&(s.messageFormat=e.messageFormat)),a=\"pseudo\"===s.locale,C}},function(e,t,r){var n=r(1);e.exports=function(e){var t=this;this.reset=function(){this._mCurrentState=n.start},this.nextState=function(e){var t=this._mModel.classTable[e.charCodeAt(0)];return this._mCurrentState==n.start&&(this._mCurrentBytePos=0,this._mCurrentCharLen=this._mModel.charLenTable[t]),this._mCurrentState=this._mModel.stateTable[this._mCurrentState*this._mModel.classFactor+t],this._mCurrentBytePos++,this._mCurrentState},this.getCurrentCharLen=function(){return this._mCurrentCharLen},this.getCodingStateMachine=function(){return this._mModel.name},function(e){t._mModel=e,t._mCurrentBytePos=0,t._mCurrentCharLen=0,t.reset()}(e)}},function(e,t,r){\"use strict\";var n=function(){return function(){}}();e.exports=n},function(e,t,r){\"use strict\";var n=this&&this.__assign||Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},i=r(20),o=r(32),s=r(25),a=r(169),c=r(6),u=r(24),l=function(){function e(){}return e.getCookie=function(t,r){var n=\"\";if(t&&t.length&&\"string\"==typeof r)for(var i=t+\"=\",o=r.split(\";\"),s=0;s<o.length;s++){r=o[s];if((r=e.trim(r))&&0===r.indexOf(i)){n=r.substring(i.length,o[s].length);break}}return n},e.trim=function(e){return\"string\"==typeof e?e.replace(/^\\s+|\\s+$/g,\"\"):\"\"},e.int32ArrayToBase64=function(e){var t=function(e,t){return String.fromCharCode(e>>t&255)},r=e.map(function(e){return t(e,24)+t(e,16)+t(e,8)+t(e,0)}).join(\"\"),n=(Buffer.from?Buffer.from(r,\"binary\"):new Buffer(r,\"binary\")).toString(\"base64\");return n.substr(0,n.indexOf(\"=\"))},e.random32=function(){return 4294967296*Math.random()|0},e.randomu32=function(){return e.random32()+2147483648},e.w3cTraceId=function(){for(var t,r=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"],n=\"\",i=0;i<4;i++)n+=r[15&(t=e.random32())]+r[t>>4&15]+r[t>>8&15]+r[t>>12&15]+r[t>>16&15]+r[t>>20&15]+r[t>>24&15]+r[t>>28&15];var o=r[8+4*Math.random()|0];return n.substr(0,8)+n.substr(9,4)+\"4\"+n.substr(13,3)+o+n.substr(16,3)+n.substr(19,12)},e.isArray=function(e){return\"[object Array]\"===Object.prototype.toString.call(e)},e.isError=function(e){return e instanceof Error},e.isPrimitive=function(e){var t=typeof e;return\"string\"===t||\"number\"===t||\"boolean\"===t},e.isDate=function(e){return\"[object Date]\"===Object.prototype.toString.call(e)},e.msToTimeSpan=function(e){(isNaN(e)||e<0)&&(e=0);var t=(e/1e3%60).toFixed(7).replace(/0{0,4}$/,\"\"),r=\"\"+Math.floor(e/6e4)%60,n=\"\"+Math.floor(e/36e5)%24,i=Math.floor(e/864e5);return t=t.indexOf(\".\")<2?\"0\"+t:t,r=r.length<2?\"0\"+r:r,n=n.length<2?\"0\"+n:n,(i>0?i+\".\":\"\")+n+\":\"+r+\":\"+t},e.extractError=function(e){var t=e;return{message:e.message,code:t.code||t.id||\"\"}},e.extractObject=function(t){return t instanceof Error?e.extractError(t):\"function\"==typeof t.toJSON?t.toJSON():t},e.validateStringMap=function(t){if(\"object\"==typeof t){var r={};for(var n in t){var i=\"\",o=t[n],s=typeof o;if(e.isPrimitive(o))i=o.toString();else if(null===o||\"undefined\"===s)i=\"\";else{if(\"function\"===s){c.info(\"key: \"+n+\" was function; will not serialize\");continue}var a=e.isArray(o)?o:e.extractObject(o);try{i=e.isPrimitive(a)?a:JSON.stringify(a)}catch(e){i=o.constructor.name.toString()+\" (Error: \"+e.message+\")\",c.info(\"key: \"+n+\", could not be serialized\")}}r[n]=i.substring(0,e.MAX_PROPERTY_LENGTH)}return r}c.info(\"Invalid properties dropped from payload\")},e.canIncludeCorrelationHeader=function(e,t){var r=e&&e.config&&e.config.correlationHeaderExcludedDomains;if(!r||0==r.length||!t)return!0;for(var n=0;n<r.length;n++){if(new RegExp(r[n].replace(/\\./g,\".\").replace(/\\*/g,\".*\")).test(s.parse(t).hostname))return!1}return!0},e.getCorrelationContextTarget=function(e,t){var r=e.headers&&e.headers[u.requestContextHeader];if(r)for(var n=r.split(\",\"),i=0;i<n.length;++i){var o=n[i].split(\"=\");if(2==o.length&&o[0]==t)return o[1]}},e.makeRequest=function(t,r,a,u){r&&0===r.indexOf(\"//\")&&(r=\"https:\"+r);var l=s.parse(r),h=n({},a,{host:l.hostname,port:l.port,path:l.pathname}),p=void 0;if(\"https:\"===l.protocol&&(p=t.proxyHttpsUrl||void 0),\"http:\"===l.protocol&&(p=t.proxyHttpUrl||void 0),p){0===p.indexOf(\"//\")&&(p=\"http:\"+p);var d=s.parse(p);\"https:\"===d.protocol?(c.info(\"Proxies that use HTTPS are not supported\"),p=void 0):h=n({},h,{host:d.hostname,port:d.port||\"80\",path:r,headers:n({},h.headers,{Host:l.hostname})})}var f=\"https:\"===l.protocol&&!p;return f&&void 0!==t.httpsAgent?h.agent=t.httpsAgent:f||void 0===t.httpAgent?f&&(h.agent=e.tlsRestrictedAgent):h.agent=t.httpAgent,f?o.request(h,u):i.request(h,u)},e.MAX_PROPERTY_LENGTH=8192,e.tlsRestrictedAgent=new o.Agent({secureOptions:a.SSL_OP_NO_SSLv2|a.SSL_OP_NO_SSLv3|a.SSL_OP_NO_TLSv1|a.SSL_OP_NO_TLSv1_1}),e}();e.exports=l},function(e,t){e.exports=require(\"os\")},function(e,t,r){var n=r(1);e.exports=function(){this.reset=function(){this._mState=n.detecting},this.getCharsetName=function(){return null},this.feed=function(e){},this.getState=function(){return this._mState},this.getConfidence=function(){return 0},this.filterHighBitOnly=function(e){return e=e.replace(/[\\x00-\\x7F]+/g,\" \")},this.filterWithoutEnglishLetters=function(e){return e=e.replace(/[A-Za-z]+/g,\" \")},this.filterWithEnglishLetters=function(e){for(var t=\"\",r=!1,n=0,i=0;i<e.length;i++){var o=e[i];\">\"==o?r=!1:\"<\"==o&&(r=!0);var s=/[a-zA-Z]/.test(o);/^[\\x00-\\x7F]*$/.test(o)&&!s&&(i>n&&!r&&(t=t+e.substring(n,i)+\" \"),n=i+1)}return r||(t+=e.substring(n)),t}}},function(e,t){t.log=function(){},t.setLogger=function(e){t.enabled=!0,t.log=e}},function(e,t,r){\"use strict\";var n,i=r(21),o=i.Buffer,s={};for(n in i)i.hasOwnProperty(n)&&\"SlowBuffer\"!==n&&\"Buffer\"!==n&&(s[n]=i[n]);var a=s.Buffer={};for(n in o)o.hasOwnProperty(n)&&\"allocUnsafe\"!==n&&\"allocUnsafeSlow\"!==n&&(a[n]=o[n]);if(s.Buffer.prototype=o.prototype,a.from&&a.from!==Uint8Array.from||(a.from=function(e,t,r){if(\"number\"==typeof e)throw new TypeError('The \"value\" argument must not be of type number. Received type '+typeof e);if(e&&void 0===e.length)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e);return o(e,t,r)}),a.alloc||(a.alloc=function(e,t,r){if(\"number\"!=typeof e)throw new TypeError('The \"size\" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*(1<<30))throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"');var n=o(e);return t&&0!==t.length?\"string\"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n}),!s.kStringMaxLength)try{s.kStringMaxLength=process.binding(\"buffer\").kStringMaxLength}catch(e){}s.constants||(s.constants={MAX_LENGTH:s.kMaxLength},s.kStringMaxLength&&(s.constants.MAX_STRING_LENGTH=s.kStringMaxLength)),e.exports=s},function(e,t,r){var n=r(13),i=r(1),o=r(14);function s(){n.apply(this);this.reset=function(){s.prototype.reset.apply(this),this._mCodingSM&&this._mCodingSM.reset(),this._mDistributionAnalyzer&&this._mDistributionAnalyzer.reset(),this._mLastChar=\"\\0\\0\"},this.getCharsetName=function(){},this.feed=function(e){for(var t=e.length,r=0;r<t;r++){var n=this._mCodingSM.nextState(e[r]);if(n==i.error){o.log(this.getCharsetName()+\" prober hit error at byte \"+r+\"\\n\"),this._mState=i.notMe;break}if(n==i.itsMe){this._mState=i.foundIt;break}if(n==i.start){var s=this._mCodingSM.getCurrentCharLen();0==r?(this._mLastChar[1]=e[0],this._mDistributionAnalyzer.feed(this._mLastChar,s)):this._mDistributionAnalyzer.feed(e.slice(r-1,r+1),s)}}return this._mLastChar[0]=e[t-1],this.getState()==i.detecting&&this._mDistributionAnalyzer.gotEnoughData()&&this.getConfidence()>i.SHORTCUT_THRESHOLD&&(this._mState=i.foundIt),this.getState()},this.getConfidence=function(){return this._mDistributionAnalyzer.getConfidence()}}s.prototype=new n,e.exports=s},function(e,t,r){var n=r(87),i=r(88),o=r(89),s=r(90),a=r(91);function c(){var e=this;this.reset=function(){this._mDone=!1,this._mTotalChars=0,this._mFreqChars=0},this.feed=function(e,t){if(2==t)var r=this.getOrder(e);else r=-1;r>=0&&(this._mTotalChars++,r<this._mTableSize&&512>this._mCharToFreqOrder[r]&&this._mFreqChars++)},this.getConfidence=function(){if(this._mTotalChars<=0||this._mFreqChars<=3)return.01;if(this._mTotalChars!=this._mFreqChars){var e=this._mFreqChars/((this._mTotalChars-this._mFreqChars)*this._mTypicalDistributionRatio);if(e<.99)return e}return.99},this.gotEnoughData=function(){return this._mTotalChars>1024},this.getOrder=function(e){return-1},e._mCharToFreqOrder=null,e._mTableSize=null,e._mTypicalDistributionRatio=null,e.reset()}function u(){c.apply(this);var e=this;this.getOrder=function(e){return e.charCodeAt(0)>=196?94*(e.charCodeAt(0)-196)+e.charCodeAt(1)-161:-1},e._mCharToFreqOrder=i.EUCTWCharToFreqOrder,e._mTableSize=i.EUCTW_TABLE_SIZE,e._mTypicalDistributionRatio=i.EUCTW_TYPICAL_DISTRIBUTION_RATIO}function l(){c.apply(this);var e=this;this.getOrder=function(e){return e.charCodeAt(0)>=176?94*(e.charCodeAt(0)-176)+e.charCodeAt(1)-161:-1},e._mCharToFreqOrder=o.EUCKRCharToFreqOrder,e._mTableSize=o.EUCKR_TABLE_SIZE,e._mTypicalDistributionRatio=o.EUCKR_TYPICAL_DISTRIBUTION_RATIO}function h(){c.apply(this);var e=this;this.getOrder=function(e){return e.charCodeAt(0)>=176&&e.charCodeAt(1)>=161?94*(e.charCodeAt(0)-176)+e.charCodeAt(1)-161:-1},e._mCharToFreqOrder=s.GB2312CharToFreqOrder,e._mTableSize=s.GB2312_TABLE_SIZE,e._mTypicalDistributionRatio=s.GB2312_TYPICAL_DISTRIBUTION_RATIO}function p(){c.apply(this);var e=this;this.getOrder=function(e){return e.charCodeAt(0)>=164?e.charCodeAt(1)>=161?157*(e.charCodeAt(0)-164)+e.charCodeAt(1)-161+63:157*(e.charCodeAt(0)-164)+e.charCodeAt(1)-64:-1},e._mCharToFreqOrder=a.Big5CharToFreqOrder,e._mTableSize=a.BIG5_TABLE_SIZE,e._mTypicalDistributionRatio=a.BIG5_TYPICAL_DISTRIBUTION_RATIO}function d(){c.apply(this);var e=this;this.getOrder=function(e){if(e.charCodeAt(0)>=129&&e.charCodeAt(0)<=159)var t=188*(e.charCodeAt(0)-129);else{if(!(e.charCodeAt(0)>=224&&e.charCodeAt(0)<=239))return-1;t=188*(e.charCodeAt(0)-224+31)}return t+=e.charCodeAt(1)-64,(e.charCodeAt(1)<64||127===e.charCodeAt(1)||e.charCodeAt(1)>252)&&(t=-1),t},e._mCharToFreqOrder=n.JISCharToFreqOrder,e._mTableSize=n.JIS_TABLE_SIZE,e._mTypicalDistributionRatio=n.JIS_TYPICAL_DISTRIBUTION_RATIO}function f(){c.apply(this);var e=this;this.getOrder=function(e){return e[0]>=\" \"?94*(e.charCodeAt(0)-161)+e.charCodeAt(1)-161:-1},e._mCharToFreqOrder=n.JISCharToFreqOrder,e._mTableSize=n.JIS_TABLE_SIZE,e._mTypicalDistributionRatio=n.JIS_TYPICAL_DISTRIBUTION_RATIO}t.CharDistributionAnalysis=c,u.prototype=new c,t.EUCTWDistributionAnalysis=u,l.prototype=new c,t.EUCKRDistributionAnalysis=l,h.prototype=new c,t.GB2312DistributionAnalysis=h,p.prototype=new c,t.Big5DistributionAnalysis=p,d.prototype=new c,t.SJISDistributionAnalysis=d,f.prototype=new c,t.EUCJPDistributionAnalysis=f},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(5);function i(e){return(t,r,n)=>{let i=null,o=null;if(\"function\"==typeof n.value?(i=\"value\",o=n.value):\"function\"==typeof n.get&&(i=\"get\",o=n.get),!o||!i)throw new Error(\"not supported\");n[i]=e(o,r)}}t.memoize=i(function(e,t){const r=`$memoize$${t}`;return function(...t){return this.hasOwnProperty(r)||Object.defineProperty(this,r,{configurable:!1,enumerable:!1,writable:!1,value:e.apply(this,t)}),this[r]}}),t.throttle=i(function(e,t){const r=`$throttle$current$${t}`,i=`$throttle$next$${t}`,o=function(...t){if(this[i])return this[i];if(this[r])return this[i]=n.done(this[r]).then(()=>(this[i]=void 0,o.apply(this,t))),this[i];this[r]=e.apply(this,t);const s=()=>this[r]=void 0;return n.done(this[r]).then(s,s),this[r]};return o}),t.sequentialize=i(function(e,t){const r=`__$sequence$${t}`;return function(...t){const n=this[r]||Promise.resolve(null),i=async()=>await e.apply(this,t);return this[r]=n.then(i,i),this[r]}}),t.debounce=function(e){return i((t,r)=>{const n=`$debounce$${r}`;return function(...r){clearTimeout(this[n]),this[n]=setTimeout(()=>t.apply(this,r),e)}})}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.isGitUri=function(e){return/^git$/.test(e.scheme)},t.fromGitUri=function(e){return JSON.parse(e.query)},t.toGitUri=function(e,t,r={}){const n={path:e.fsPath,ref:t};r.submoduleOf&&(n.submoduleOf=r.submoduleOf);let i=e.path;return r.replaceFileExtension?i=`${i}.git`:r.submoduleOf&&(i=`${i}.diff`),e.with({scheme:\"git\",path:i,query:JSON.stringify(n)})}},function(e,t){e.exports=require(\"http\")},function(e,t){e.exports=require(\"buffer\")},function(e,t){e.exports=require(\"stream\")},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(6),i=r(30),o=function(){function e(){}return e.getCurrentContext=function(){return e.enabled?Zone.current.get(\"context\"):null},e.generateContextObject=function(e,t,r,n){return t=t||e,this.enabled?{operation:{name:r,id:e,parentId:t},customProperties:new s(n)}:null},e.runWithContext=function(t,r){e.enabled?Zone.current.fork({name:\"AI-\"+(t&&t.operation.parentId||\"Unknown\"),properties:{context:t}}).run(r):r()},e.wrapCallback=function(t){return e.enabled?Zone.current.wrap(t,\"User-wrapped method\"):t},e.enable=function(){if(!this.enabled)if(this.isNodeVersionCompatible()){if(!e.hasEverEnabled){this.hasEverEnabled=!0;try{\"undefined\"==typeof Zone&&r(145)}catch(e){n.warn(\"Failed to require zone.js\")}i.registerContextPreservation(function(e){return Zone.current.wrap(e,\"AI-ContextPreservation\")}),this.patchError(),this.patchTimers([\"setTimeout\",\"setInterval\"])}this.enabled=!0}else this.enabled=!1},e.disable=function(){this.enabled=!1},e.isNodeVersionCompatible=function(){var e=process.versions.node.split(\".\");return parseInt(e[0])>3||parseInt(e[0])>2&&parseInt(e[1])>2},e.patchTimers=function(e){e.forEach(function(e){var t=global[e];global[e]=function(){var e=t.apply(this,arguments);return e.toString=function(){return this.data&&void 0!==this.data.handleId?this.data.handleId.toString():Object.prototype.toString.call(this)},e}})},e.patchError=function(){var e=global.Error;function t(){if(!(this instanceof t))return t.apply(Object.create(t.prototype),arguments);var r=e.stackRewrite;if(e.prepareStackTrace){e.stackRewrite=!1;var n=e.prepareStackTrace;e.prepareStackTrace=function(e,t){for(var r=!1,i=0;i<t.length;i++){var o=t[i].getFileName();if(o)if(-1===o.indexOf(\"AutoCollection/CorrelationContextManager\")&&-1===o.indexOf(\"AutoCollection\\\\CorrelationContextManager\")){if(r)break}else r=!0}return i=Math.max(0,i-1),r&&t.splice(0,i),n(e,t)}}if(e.apply(this,arguments),e.stackRewrite=r,this.stack&&\"string\"==typeof this.stack){var i=this.stack.split(\"\\n\");i.length>3&&(0===i[2].trim().indexOf(\"at Error.AppInsightsAsyncCorrelatedErrorWrapper\")?i.splice(2,1):0===i[1].trim().indexOf(\"at AppInsightsAsyncCorrelatedErrorWrapper.ZoneAwareError\")&&0===i[2].trim().indexOf(\"at new AppInsightsAsyncCorrelatedErrorWrapper\")&&i.splice(1,2)),this.stack=i.map(function(e){var t=e.indexOf(\") [\");return t>-1&&(e=e.substr(0,t+1)),e}).join(\"\\n\")}for(var o=Object.getOwnPropertyNames(this).concat(Object.keys(this)),s=0;s<o.length;s++){var a=o[s],c=Zone.__symbol__(a);Object.defineProperty(this,a,{enumerable:!1}),Object.defineProperty(this,c,{enumerable:!1,writable:!0})}return this}t.prototype=e.prototype;for(var r=Object.getOwnPropertyNames(e),n=0;n<r.length;n++){var i=r[n];t[i]||Object.defineProperty(t,i,Object.getOwnPropertyDescriptor(e,i))}global.Error=t},e.enabled=!1,e.hasEverEnabled=!1,e}();t.CorrelationContextManager=o;var s=function(){function e(e){this.props=[],this.addHeaderData(e)}return e.prototype.addHeaderData=function(e){var t=e?e.split(\", \"):[];this.props=t.map(function(e){var t=e.split(\"=\");return{key:t[0],value:t[1]}}).concat(this.props)},e.prototype.serializeToHeader=function(){return this.props.map(function(e){return e.key+\"=\"+e.value}).join(\", \")},e.prototype.getProperty=function(e){for(var t=0;t<this.props.length;++t){var r=this.props[t];if(r.key===e)return r.value}},e.prototype.setProperty=function(t,r){if(e.bannedCharacters.test(t)||e.bannedCharacters.test(r))n.warn(\"Correlation context property keys and values must not contain ',' or '='. setProperty was called with key: \"+t+\" and value: \"+r);else{for(var i=0;i<this.props.length;++i){var o=this.props[i];if(o.key===t)return void(o.value=r)}this.props.push({key:t,value:r})}},e.bannedCharacters=/[,=]/,e}()},function(e,t,r){\"use strict\";e.exports={requestContextHeader:\"request-context\",requestContextSourceKey:\"appId\",requestContextTargetKey:\"appId\",requestIdHeader:\"request-id\",parentIdHeader:\"x-ms-request-id\",rootIdHeader:\"x-ms-request-root-id\",correlationContextHeader:\"correlation-context\"}},function(e,t){e.exports=require(\"url\")},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(2),i=r(0),o=r(12),s=r(34),a=r(55),c=r(27),u=r(59),l=r(77),h=r(5),p=r(79),d=r(80),f=r(38),g=r(35),m=3e4;function y(e){return e.replace(/^git version /,\"\")}function v(e,t){return new Promise((r,n)=>{t(e);const i=[],o=s.spawn(e,[\"--version\"]);o.stdout.on(\"data\",e=>i.push(e)),o.on(\"error\",C(n)),o.on(\"exit\",t=>t?n(new Error(\"Not found\")):r({path:e,version:y(Buffer.concat(i).toString(\"utf8\").trim())}))})}function w(e,t){return e?v(i.join(e,\"Git\",\"cmd\",\"git.exe\"),t):Promise.reject(\"Not found\")}function b(e){return w(process.env.ProgramW6432,e).then(void 0,()=>w(process.env[\"ProgramFiles(x86)\"],e)).then(void 0,()=>w(process.env.ProgramFiles,e)).then(void 0,()=>w(i.join(process.env.LocalAppData,\"Programs\"),e)).then(void 0,()=>(function(e){return new Promise((e,t)=>a(\"git.exe\",(r,n)=>r?t(r):e(n))).then(t=>v(t,e))})(e))}function C(e){return t=>{/ENOENT/.test(t.message)&&(t=new S({error:t,message:\"Failed to execute git (ENOENT)\",gitErrorCode:\"NotAGitRepository\"})),e(t)}}async function _(e,t){if(!e.stdout||!e.stderr)throw new S({message:\"Failed to get stdout or stderr from git process.\"});if(t&&t.isCancellationRequested)throw new S({message:\"Cancelled\"});const r=[],n=(e,t,n)=>{e.once(t,n),r.push(h.toDisposable(()=>e.removeListener(t,n)))},i=(e,t,n)=>{e.on(t,n),r.push(h.toDisposable(()=>e.removeListener(t,n)))};let o=Promise.all([new Promise((t,r)=>{n(e,\"error\",C(r)),n(e,\"exit\",t)}),new Promise(t=>{const r=[];i(e.stdout,\"data\",e=>r.push(e)),n(e.stdout,\"close\",()=>t(Buffer.concat(r)))}),new Promise(t=>{const r=[];i(e.stderr,\"data\",e=>r.push(e)),n(e.stderr,\"close\",()=>t(Buffer.concat(r).toString(\"utf8\")))})]);if(t){const r=new Promise((r,n)=>{h.onceEvent(t.onCancellationRequested)(()=>{try{e.kill()}catch(e){}n(new S({message:\"Cancelled\"}))})});o=Promise.race([o,r])}try{const[e,t,n]=await o;return{exitCode:e,stdout:t,stderr:n}}finally{h.dispose(r)}}t.findGit=function(e,t){return(e?v(e,t):Promise.reject(null)).then(void 0,()=>{switch(process.platform){case\"darwin\":return function(e){return new Promise((t,r)=>{s.exec(\"which git\",(n,i)=>{if(n)return r(\"git not found\");const o=i.toString().replace(/^\\s+|\\s+$/g,\"\");function a(n){e(n),s.exec(\"git --version\",(e,i)=>e?r(\"git not found\"):t({path:n,version:y(i.trim())}))}if(\"/usr/bin/git\"!==o)return a(o);s.exec(\"xcode-select -p\",e=>{if(e&&2===e.code)return r(\"git not found\");a(o)})})})}(t);case\"win32\":return b(t);default:return v(\"git\",t)}}).then(null,()=>Promise.reject(new Error(\"Git installation not found.\")))};class S{constructor(e){e.error?(this.error=e.error,this.message=e.error.message):(this.error=void 0,this.message=\"\"),this.message=this.message||e.message||\"Git error\",this.stdout=e.stdout,this.stderr=e.stderr,this.exitCode=e.exitCode,this.gitErrorCode=e.gitErrorCode,this.gitCommand=e.gitCommand}toString(){let e=this.message+\" \"+JSON.stringify({exitCode:this.exitCode,gitErrorCode:this.gitErrorCode,gitCommand:this.gitCommand,stdout:this.stdout,stderr:this.stderr},null,2);return this.error&&(e+=this.error.stack),e}}function k(e){return/Another git process seems to be running in this repository|If no other git process is currently running/.test(e)?\"RepositoryIsLocked\":/Authentication failed/.test(e)?\"AuthenticationFailed\":/Not a git repository/i.test(e)?\"NotAGitRepository\":/bad config file/.test(e)?\"BadConfigFile\":/cannot make pipe for command substitution|cannot create standard input pipe/.test(e)?\"CantCreatePipe\":/Repository not found/.test(e)?\"RepositoryNotFound\":/unable to access/.test(e)?\"CantAccessRemote\":/branch '.+' is not fully merged/.test(e)?\"BranchNotFullyMerged\":/Couldn\\'t find remote ref/.test(e)?\"NoRemoteReference\":/A branch named '.+' already exists/.test(e)?\"BranchAlreadyExists\":/'.+' is not a valid branch name/.test(e)?\"InvalidBranchName\":/Please,? commit your changes or stash them/.test(e)?\"DirtyWorkTree\":void 0}function T(e){return e.replace(/^([a-z]):\\\\/i,(e,t)=>`${t.toUpperCase()}:\\\\`)}t.GitError=S;const E=\"%H%n%aN%n%aE%n%at%n%ct%n%P%n%B\";t.Git=class{constructor(e){this._onOutput=new c.EventEmitter,this.path=e.gitPath,this.env=e.env||{}}get onOutput(){return this._onOutput}open(e,t){return new M(this,e,t)}async init(e){await this.exec(e,[\"init\"])}async clone(e,t,r,o){let s=decodeURI(e).replace(/[\\/]+$/,\"\").replace(/^.*[\\/\\\\]/,\"\").replace(/\\.git$/,\"\")||\"repository\",a=s,c=i.join(t,a),u=1;for(;u<20&&await new Promise(e=>n.exists(c,e));)a=`${s}-${u++}`,c=i.join(t,a);await h.mkdirp(t);const l=e=>{const t=new g.StringDecoder(\"utf8\"),n=new f.LineStream({encoding:\"utf8\"});e.stderr.on(\"data\",e=>n.write(t.write(e)));let i=0,o=0;n.on(\"data\",e=>{let t=null;(t=/Counting objects:\\s*(\\d+)%/i.exec(e))?i=Math.floor(.1*parseInt(t[1])):(t=/Compressing objects:\\s*(\\d+)%/i.exec(e))?i=10+Math.floor(.1*parseInt(t[1])):(t=/Receiving objects:\\s*(\\d+)%/i.exec(e))?i=20+Math.floor(.4*parseInt(t[1])):(t=/Resolving deltas:\\s*(\\d+)%/i.exec(e))&&(i=60+Math.floor(.4*parseInt(t[1]))),i!==o&&(r.report({increment:i-o}),o=i)})};try{await this.exec(t,[\"clone\",e.includes(\" \")?encodeURI(e):e,c,\"--progress\"],{cancellationToken:o,onSpawn:l})}catch(e){throw e.stderr&&(e.stderr=e.stderr.replace(/^Cloning.+$/m,\"\").trim(),e.stderr=e.stderr.replace(/^ERROR:\\s+/,\"\").trim()),e}return c}async getRepositoryRoot(e){const t=await this.exec(e,[\"rev-parse\",\"--show-toplevel\"]);return i.normalize(t.stdout.trimLeft().replace(/(\\r\\n|\\r|\\n)+$/,\"\"))}async getRepositoryDotGit(e){let t=(await this.exec(e,[\"rev-parse\",\"--git-dir\"])).stdout.trim();return i.isAbsolute(t)||(t=i.join(e,t)),i.normalize(t)}async exec(e,t,r={}){return r=h.assign({cwd:e},r||{}),await this._exec(t,r)}async exec2(e,t={}){return await this._exec(e,t)}stream(e,t,r={}){return r=h.assign({cwd:e},r||{}),this.spawn(t,r)}async _exec(e,t={}){const r=this.spawn(e,t);t.onSpawn&&t.onSpawn(r),t.input&&r.stdin.end(t.input,\"utf8\");const n=await _(r,t.cancellationToken);!1!==t.log&&n.stderr.length>0&&this.log(`${n.stderr}\\n`);let i=t.encoding||\"utf8\";i=u.encodingExists(i)?i:\"utf8\";const o={exitCode:n.exitCode,stdout:u.decode(n.stdout,i),stderr:n.stderr};return n.exitCode?Promise.reject(new S({message:\"Failed to execute git\",stdout:o.stdout,stderr:o.stderr,exitCode:o.exitCode,gitErrorCode:k(o.stderr),gitCommand:e[0]})):o}spawn(e,t={}){if(!this.path)throw new Error(\"git could not be found in the system.\");return t||(t={}),t.stdio||t.input||(t.stdio=[\"ignore\",null,null]),t.env=h.assign({},process.env,this.env,t.env||{},{VSCODE_GIT_COMMAND:e[0],LC_ALL:\"en_US.UTF-8\",LANG:\"en_US.UTF-8\"}),t.cwd&&(t.cwd=T(t.cwd)),!1!==t.log&&this.log(`> git ${e.join(\" \")}\\n`),s.spawn(this.path,e,t)}log(e){this._onOutput.emit(\"log\",e)}};class R{constructor(){this.lastRaw=\"\",this.result=[]}get status(){return this.result}update(e){let t,r=0;for(e=this.lastRaw+e;void 0!==(t=this.parseEntry(e,r));)r=t;this.lastRaw=e.substr(r)}parseEntry(e,t){if(t+4>=e.length)return;let r;const n={x:e.charAt(t++),y:e.charAt(t++),rename:void 0,path:\"\"};if(t++,\"R\"===n.x||\"C\"===n.x){if(-1===(r=e.indexOf(\"\\0\",t)))return;n.rename=e.substring(t,r),t=r+1}return-1!==(r=e.indexOf(\"\\0\",t))?(n.path=e.substring(t,r),\"/\"!==n.path[n.path.length-1]&&this.result.push(n),r+1):void 0}}function D(e){const t=/\\r?\\n/g;let r=0,n=null;const i=[];let o={};function s(e){const t=/^\\s*\\[submodule \"([^\"]+)\"\\]\\s*$/.exec(e);if(t){o.name&&o.path&&o.url&&i.push(o);const e=t[1];if(e)return void(o={name:e})}if(!o)return;const r=/^\\s*(\\w+)\\s+=\\s+(.*)$/.exec(e);if(!r)return;const[,n,s]=r;switch(n){case\"path\":o.path=s;break;case\"url\":o.url=s}}for(;n=t.exec(e);)s(e.substring(r,n.index)),r=n.index+n[0].length;return s(e.substring(r)),o.name&&o.path&&o.url&&i.push(o),i}t.GitStatusParser=R,t.parseGitmodules=D;const x=/([0-9a-f]{40})\\n(.*)\\n(.*)\\n(.*)\\n(.*)\\n(.*)(?:\\n([^]*?))?(?:\\x00)/gm;function I(e){let t,r,n,i,o,s,a,c,u=[];for(;;){if(null===(c=x.exec(e)))break;[,t,r,n,i,o,s,a]=c,\"\\n\"===a[a.length-1]&&(a=a.substr(0,a.length-1)),u.push({hash:` ${t}`.substr(1),message:` ${a}`.substr(1),parents:s?s.split(\" \"):[],authorDate:new Date(1e3*Number(i)),authorName:` ${r}`.substr(1),authorEmail:` ${n}`.substr(1),commitDate:new Date(1e3*Number(o))})}return u}function O(e){return e.split(\"\\n\").filter(e=>!!e).map(e=>/^(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(.*)$/.exec(e)).filter(e=>!!e).map(([,e,t,r,n,i])=>({mode:e,type:t,object:r,size:n,file:i}))}function P(e){return e.split(\"\\n\").filter(e=>!!e).map(e=>/^(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(.*)$/.exec(e)).filter(e=>!!e).map(([,e,t,r,n])=>({mode:e,object:t,stage:r,file:n}))}var A;t.parseGitCommits=I,t.parseLsTree=O,t.parseLsFiles=P,function(e){e[e.Force=0]=\"Force\",e[e.ForceWithLease=1]=\"ForceWithLease\"}(A=t.ForcePushMode||(t.ForcePushMode={}));class M{constructor(e,t,r){this._git=e,this.repositoryRoot=t,this.dotGit=r}get git(){return this._git}get root(){return this.repositoryRoot}async run(e,t={}){return await this.git.exec(this.repositoryRoot,e,t)}stream(e,t={}){return this.git.stream(this.repositoryRoot,e,t)}spawn(e,t={}){return this.git.spawn(e,t)}async config(e,t,r=null,n={}){const i=[\"config\"];return e&&i.push(\"--\"+e),i.push(t),r&&i.push(r),(await this.run(i,n)).stdout.trim()}async getConfigs(e){const t=[\"config\"];return e&&t.push(\"--\"+e),t.push(\"-l\"),(await this.run(t)).stdout.trim().split(/\\r|\\r\\n|\\n/).map(e=>{const t=e.indexOf(\"=\");return{key:e.substr(0,t),value:e.substr(t+1)}})}async log(e){var t;const r=[\"log\",`-n${null!==(t=null===e||void 0===e?void 0:e.maxEntries)&&void 0!==t?t:32}`,`--format=${E}`,\"-z\",\"--\"],n=await this.run(r);return n.exitCode?[]:I(n.stdout)}async logFile(e,t){const r=[\"log\",`--format=${E}`,\"-z\"];(null===t||void 0===t?void 0:t.maxEntries)&&!(null===t||void 0===t?void 0:t.reverse)&&r.push(`-n${t.maxEntries}`),(null===t||void 0===t?void 0:t.hash)&&((null===t||void 0===t?void 0:t.reverse)?r.push(\"--reverse\",\"--ancestry-path\",`${t.hash}..HEAD`):r.push(t.hash)),(null===t||void 0===t?void 0:t.sortByAuthorDate)&&r.push(\"--author-date-order\"),r.push(\"--\",e.fsPath);const n=await this.run(r);return n.exitCode?[]:I(n.stdout)}async bufferString(e,t=\"utf8\",r=!1){const n=await this.buffer(e);return r&&(t=d.detectEncoding(n)||t),t=u.encodingExists(t)?t:\"utf8\",u.decode(n,t)}async buffer(e){const t=this.stream([\"show\",e]);if(!t.stdout)return Promise.reject(\"Can't open file from git\");const{exitCode:r,stdout:n,stderr:i}=await _(t);if(r){const e=new S({message:\"Could not show object.\",exitCode:r});return/exists on disk, but not in/.test(i)&&(e.gitErrorCode=\"WrongCase\"),Promise.reject(e)}return n}async getObjectDetails(e,t){if(!e){const e=await this.lsfiles(t);if(0===e.length)throw new S({message:\"Path not known by git\",gitErrorCode:\"UnknownPath\"});const{mode:r,object:n}=e[0],i=await this.run([\"cat-file\",\"-s\",n]);return{mode:r,object:n,size:parseInt(i.stdout)}}const r=await this.lstree(e,t);if(0===r.length)throw new S({message:\"Path not known by git\",gitErrorCode:\"UnknownPath\"});const{mode:n,object:i,size:o}=r[0];return{mode:n,object:i,size:parseInt(o)}}async lstree(e,t){const{stdout:r}=await this.run([\"ls-tree\",\"-l\",e,\"--\",T(t)]);return O(r)}async lsfiles(e){const{stdout:t}=await this.run([\"ls-files\",\"--stage\",\"--\",T(e)]);return P(t)}async getGitRelativePath(e,t){const r=t.toLowerCase(),n=i.posix.dirname(t)+\"/\",o=(e?await this.lstree(e,n):await this.lsfiles(n)).filter(e=>e.file.toLowerCase()===r)[0];if(!o)throw new S({message:\"Git relative path not found.\"});return o.file}async detectObjectType(e){const t=await this.stream([\"show\",e]),r=await h.readBytes(t.stdout,4100);try{t.kill()}catch(e){}const n=h.detectUnicodeEncoding(r);let i=!0;if(\"utf16be\"!==n&&\"utf16le\"!==n)for(let e=0;e<r.length;e++)if(0===r.readInt8(e)){i=!1;break}if(!i){const e=l(r);return e?{mimetype:e.mime}:{mimetype:\"application/octet-stream\"}}return n?{mimetype:\"text/plain\",encoding:n}:{mimetype:\"text/plain\"}}async apply(e,t){const r=[\"apply\",e];t&&r.push(\"-R\");try{await this.run(r)}catch(e){throw/patch does not apply/.test(e.stderr)&&(e.gitErrorCode=\"PatchDoesNotApply\"),e}}async diff(e=!1){const t=[\"diff\"];return e&&t.push(\"--cached\"),(await this.run(t)).stdout}async diffWithHEAD(e){if(!e)return await this.diffFiles(!1);const t=[\"diff\",\"--\",T(e)];return(await this.run(t)).stdout}async diffWith(e,t){if(!t)return await this.diffFiles(!1,e);const r=[\"diff\",e,\"--\",T(t)];return(await this.run(r)).stdout}async diffIndexWithHEAD(e){if(!e)return await this.diffFiles(!0);const t=[\"diff\",\"--cached\",\"--\",T(e)];return(await this.run(t)).stdout}async diffIndexWith(e,t){if(!t)return await this.diffFiles(!0,e);const r=[\"diff\",\"--cached\",e,\"--\",T(t)];return(await this.run(r)).stdout}async diffBlobs(e,t){const r=[\"diff\",e,t];return(await this.run(r)).stdout}async diffBetween(e,t,r){const n=`${e}...${t}`;if(!r)return await this.diffFiles(!1,n);const i=[\"diff\",n,\"--\",T(r)];return(await this.run(i)).stdout.trim()}async diffFiles(e,t){const r=[\"diff\",\"--name-status\",\"-z\",\"--diff-filter=ADMR\"];e&&r.push(\"--cached\"),t&&r.push(t);const n=await this.run(r);if(n.exitCode)return[];const o=n.stdout.split(\"\\0\");let s=0;const a=[];e:for(;s<o.length-1;){const e=o[s++],t=o[s++];if(!e||!t)break;const r=p.URI.file(i.isAbsolute(t)?t:i.join(this.repositoryRoot,t));let n=7;switch(e[0]){case\"M\":n=5;break;case\"A\":n=1;break;case\"D\":n=6;break;case\"R\":if(s>=o.length)break;const t=o[s++];if(!t)break;const c=p.URI.file(i.isAbsolute(t)?t:i.join(this.repositoryRoot,t));a.push({uri:c,renameUri:c,originalUri:r,status:3});continue;default:break e}a.push({status:n,originalUri:r,uri:r,renameUri:r})}return a}async getMergeBase(e,t){const r=[\"merge-base\",e,t];return(await this.run(r)).stdout.trim()}async hashObject(e){return(await this.run([\"hash-object\",\"-w\",\"--stdin\"],{input:e})).stdout.trim()}async add(e,t){const r=[\"add\"];t&&t.update?r.push(\"-u\"):r.push(\"-A\"),r.push(\"--\"),e&&e.length?r.push.apply(r,e.map(T)):r.push(\".\"),await this.run(r)}async rm(e){const t=[\"rm\",\"--\"];e&&e.length&&(t.push(...e.map(T)),await this.run(t))}async stage(e,t){const r=this.stream([\"hash-object\",\"--stdin\",\"-w\",\"--path\",T(e)],{stdio:[null,null,null]});r.stdin.end(t,\"utf8\");const{exitCode:n,stdout:i}=await _(r),o=i.toString(\"utf8\");if(n)throw new S({message:\"Could not hash object.\",exitCode:n});const s=await this.getCommit(\"HEAD\").then(()=>\"HEAD\",()=>\"\");let a,c=\"\";try{a=(await this.getObjectDetails(s,e)).mode}catch(e){if(\"UnknownPath\"!==e.gitErrorCode)throw e;a=\"100644\",c=\"--add\"}await this.run([\"update-index\",c,\"--cacheinfo\",a,o,e])}async checkout(e,t,r=Object.create(null)){const n=[\"checkout\",\"-q\"];r.track&&n.push(\"--track\"),e&&n.push(e);try{if(t&&t.length>0)for(const e of h.splitInChunks(t.map(T),m))await this.run([...n,\"--\",...e]);else await this.run(n)}catch(e){throw/Please,? commit your changes or stash them/.test(e.stderr||\"\")&&(e.gitErrorCode=\"DirtyWorkTree\"),e}}async commit(e,t=Object.create(null)){const r=[\"commit\",\"--quiet\",\"--allow-empty-message\",\"--file\",\"-\"];t.all&&r.push(\"--all\"),t.amend&&r.push(\"--amend\"),t.signoff&&r.push(\"--signoff\"),t.signCommit&&r.push(\"-S\"),t.empty&&r.push(\"--allow-empty\");try{await this.run(r,{input:e||\"\"})}catch(e){await this.handleCommitError(e)}}async rebaseContinue(){const e=[\"rebase\",\"--continue\"];try{await this.run(e)}catch(e){await this.handleCommitError(e)}}async handleCommitError(e){if(/not possible because you have unmerged files/.test(e.stderr||\"\"))throw e.gitErrorCode=\"UnmergedChanges\",e;try{await this.run([\"config\",\"--get-all\",\"user.name\"])}catch(e){throw e.gitErrorCode=\"NoUserNameConfigured\",e}try{await this.run([\"config\",\"--get-all\",\"user.email\"])}catch(e){throw e.gitErrorCode=\"NoUserEmailConfigured\",e}throw e}async branch(e,t,r){const n=t?[\"checkout\",\"-q\",\"-b\",e,\"--no-track\"]:[\"branch\",\"-q\",e];r&&n.push(r),await this.run(n)}async deleteBranch(e,t){const r=[\"branch\",t?\"-D\":\"-d\",e];await this.run(r)}async renameBranch(e){const t=[\"branch\",\"-m\",e];await this.run(t)}async setBranchUpstream(e,t){const r=[\"branch\",\"--set-upstream-to\",t,e];await this.run(r)}async deleteRef(e){const t=[\"update-ref\",\"-d\",e];await this.run(t)}async merge(e){const t=[\"merge\",e];try{await this.run(t)}catch(e){throw/^CONFLICT /m.test(e.stdout||\"\")&&(e.gitErrorCode=\"Conflict\"),e}}async tag(e,t){let r=[\"tag\"];r=t?[...r,\"-a\",e,\"-m\",t]:[...r,e],await this.run(r)}async deleteTag(e){let t=[\"tag\",\"-d\",e];await this.run(t)}async clean(e){const t=h.groupBy(e.map(T),e=>i.dirname(e)),r=Object.keys(t).map(e=>t[e]),n=new h.Limiter(5),o=[];for(const e of r)for(const t of h.splitInChunks(e,m))o.push(n.queue(()=>this.run([\"clean\",\"-f\",\"-q\",\"--\",...t])));await Promise.all(o)}async undo(){await this.run([\"clean\",\"-fd\"]);try{await this.run([\"checkout\",\"--\",\".\"])}catch(e){if(/did not match any file\\(s\\) known to git\\./.test(e.stderr||\"\"))return;throw e}}async reset(e,t=!1){const r=[\"reset\",t?\"--hard\":\"--soft\",e];await this.run(r)}async revert(e,t){let r;r=(await this.run([\"branch\"])).stdout?[\"reset\",\"-q\",e,\"--\"]:[\"rm\",\"--cached\",\"-r\",\"--\"],t&&t.length?r.push.apply(r,t.map(T)):r.push(\".\");try{await this.run(r)}catch(e){if(/([^:]+: needs merge\\n)+/m.test(e.stdout||\"\"))return;throw e}}async addRemote(e,t){const r=[\"remote\",\"add\",e,t];await this.run(r)}async removeRemote(e){const t=[\"remote\",\"rm\",e];await this.run(t)}async fetch(e={}){const t=[\"fetch\"],r={};e.remote?(t.push(e.remote),e.ref&&t.push(e.ref)):e.all&&t.push(\"--all\"),e.prune&&t.push(\"--prune\"),\"number\"==typeof e.depth&&t.push(`--depth=${e.depth}`),e.silent&&(r.env={VSCODE_GIT_FETCH_SILENT:\"true\"});try{await this.run(t,r)}catch(e){throw/No remote repository specified\\./.test(e.stderr||\"\")?e.gitErrorCode=\"NoRemoteRepositorySpecified\":/Could not read from remote repository/.test(e.stderr||\"\")&&(e.gitErrorCode=\"RemoteConnectionError\"),e}}async pull(e,t,r,n={}){const i=[\"pull\"];n.tags&&i.push(\"--tags\"),n.unshallow&&i.push(\"--unshallow\"),e&&i.push(\"-r\"),t&&r&&(i.push(t),i.push(r));try{await this.run(i,n)}catch(e){throw/^CONFLICT \\([^)]+\\): \\b/m.test(e.stdout||\"\")?e.gitErrorCode=\"Conflict\":/Please tell me who you are\\./.test(e.stderr||\"\")?e.gitErrorCode=\"NoUserNameConfigured\":/Could not read from remote repository/.test(e.stderr||\"\")?e.gitErrorCode=\"RemoteConnectionError\":/Pull is not possible because you have unmerged files|Cannot pull with rebase: You have unstaged changes|Your local changes to the following files would be overwritten|Please, commit your changes before you can merge/i.test(e.stderr)?(e.stderr=e.stderr.replace(/Cannot pull with rebase: You have unstaged changes/i,\"Cannot pull with rebase, you have unstaged changes\"),e.gitErrorCode=\"DirtyWorkTree\"):/cannot lock ref|unable to update local ref/i.test(e.stderr||\"\")?e.gitErrorCode=\"CantLockRef\":/cannot rebase onto multiple branches/i.test(e.stderr||\"\")&&(e.gitErrorCode=\"CantRebaseMultipleBranches\"),e}}async push(e,t,r=!1,n=!1,i){const o=[\"push\"];i===A.ForceWithLease?o.push(\"--force-with-lease\"):i===A.Force&&o.push(\"--force\"),r&&o.push(\"-u\"),n&&o.push(\"--follow-tags\"),e&&o.push(e),t&&o.push(t);try{await this.run(o)}catch(e){throw/^error: failed to push some refs to\\b/m.test(e.stderr||\"\")?e.gitErrorCode=\"PushRejected\":/Could not read from remote repository/.test(e.stderr||\"\")?e.gitErrorCode=\"RemoteConnectionError\":/^fatal: The current branch .* has no upstream branch/.test(e.stderr||\"\")&&(e.gitErrorCode=\"NoUpstreamBranch\"),e}}async blame(e){try{const t=[\"blame\",T(e)];return(await this.run(t)).stdout.trim()}catch(e){throw/^fatal: no such path/.test(e.stderr||\"\")&&(e.gitErrorCode=\"NoPathFound\"),e}}async createStash(e,t){try{const r=[\"stash\",\"push\"];t&&r.push(\"-u\"),e&&r.push(\"-m\",e),await this.run(r)}catch(e){throw/No local changes to save/.test(e.stderr||\"\")&&(e.gitErrorCode=\"NoLocalChanges\"),e}}async popStash(e){await this.popOrApplyStash([\"stash\",\"pop\"],e)}async applyStash(e){await this.popOrApplyStash([\"stash\",\"apply\"],e)}async popOrApplyStash(e,t){try{\"number\"==typeof t&&e.push(`stash@{${t}}`),await this.run(e)}catch(e){throw/No stash found/.test(e.stderr||\"\")?e.gitErrorCode=\"NoStashFound\":/error: Your local changes to the following files would be overwritten/.test(e.stderr||\"\")?e.gitErrorCode=\"LocalChangesOverwritten\":/^CONFLICT/m.test(e.stdout||\"\")&&(e.gitErrorCode=\"StashConflict\"),e}}async dropStash(e){const t=[\"stash\",\"drop\"];\"number\"==typeof e&&t.push(`stash@{${e}}`);try{await this.run(t)}catch(e){throw/No stash found/.test(e.stderr||\"\")&&(e.gitErrorCode=\"NoStashFound\"),e}}getStatus(e=5e3){return new Promise((t,r)=>{const n=new R,i=this.stream([\"status\",\"-z\",\"-u\"],{env:{GIT_OPTIONAL_LOCKS:\"0\"}}),o=e=>{if(0!==e){const t=a.join(\"\");return r(new S({message:\"Failed to execute git\",stderr:t,exitCode:e,gitErrorCode:k(t),gitCommand:\"status\"}))}t({status:n.status,didHitLimit:!1})},s=r=>{n.update(r),n.status.length>e&&(i.removeListener(\"exit\",o),i.stdout.removeListener(\"data\",s),i.kill(),t({status:n.status.slice(0,e),didHitLimit:!0}))};i.stdout.setEncoding(\"utf8\"),i.stdout.on(\"data\",s);const a=[];i.stderr.setEncoding(\"utf8\"),i.stderr.on(\"data\",e=>a.push(e)),i.on(\"error\",C(r)),i.on(\"exit\",o)})}async getHEAD(){try{const e=await this.run([\"symbolic-ref\",\"--short\",\"HEAD\"]);if(!e.stdout)throw new Error(\"Not in a branch\");return{name:e.stdout.trim(),commit:void 0,type:0}}catch(e){const t=await this.run([\"rev-parse\",\"HEAD\"]);if(!t.stdout)throw new Error(\"Error parsing HEAD\");return{name:void 0,commit:t.stdout.trim(),type:0}}}async findTrackingBranches(e){return(await this.run([\"for-each-ref\",\"--format\",\"%(refname:short)%00%(upstream:short)\",\"refs/heads\"])).stdout.trim().split(\"\\n\").map(e=>e.trim().split(\"\\0\")).filter(([t,r])=>r===e).map(([e])=>({name:e,type:0}))}async getRefs(e){const t=[\"for-each-ref\",\"--format\",\"%(refname) %(objectname)\"];e&&e.sort&&\"alphabetically\"!==e.sort&&t.push(\"--sort\",`-${e.sort}`);return(await this.run(t)).stdout.trim().split(\"\\n\").filter(e=>!!e).map(e=>{let t;return(t=/^refs\\/heads\\/([^ ]+) ([0-9a-f]{40})$/.exec(e))?{name:t[1],commit:t[2],type:0}:(t=/^refs\\/remotes\\/([^/]+)\\/([^ ]+) ([0-9a-f]{40})$/.exec(e))?{name:`${t[1]}/${t[2]}`,commit:t[3],type:1,remote:t[1]}:(t=/^refs\\/tags\\/([^ ]+) ([0-9a-f]{40})$/.exec(e))?{name:t[1],commit:t[2],type:2}:null}).filter(e=>!!e)}async getStashes(){const e=/^stash@{(\\d+)}:(.+)$/;return(await this.run([\"stash\",\"list\"])).stdout.trim().split(\"\\n\").filter(e=>!!e).map(t=>e.exec(t)).filter(e=>!!e).map(([,e,t])=>({index:parseInt(e),description:t}))}async getRemotes(){const e=(await this.run([\"remote\",\"--verbose\"])).stdout.trim().split(\"\\n\").filter(e=>!!e),t=[];for(const r of e){const e=r.split(/\\s/),[n,i,o]=e;let s=t.find(e=>e.name===n);s||(s={name:n,isReadOnly:!1},t.push(s)),/fetch/i.test(o)?s.fetchUrl=i:/push/i.test(o)?s.pushUrl=i:(s.fetchUrl=i,s.pushUrl=i),s.isReadOnly=void 0===s.pushUrl||\"no_push\"===s.pushUrl}return t}async getBranch(e){if(\"HEAD\"===e)return this.getHEAD();let t=await this.run([\"rev-parse\",e]);if(!t.stdout&&/^@/.test(e)){e=(await this.run([\"rev-parse\",\"--symbolic-full-name\",e])).stdout.trim(),t=await this.run([\"rev-parse\",e])}if(!t.stdout)return Promise.reject(new Error(\"No such branch\"));const r=t.stdout.trim();try{const t=(await this.run([\"rev-parse\",\"--symbolic-full-name\",e+\"@{u}\"])).stdout.trim(),n=/^refs\\/remotes\\/([^/]+)\\/(.+)$/.exec(t);if(!n)throw new Error(`Could not parse upstream branch: ${t}`);const i={remote:n[1],name:n[2]},o=await this.run([\"rev-list\",\"--left-right\",e+\"...\"+t]);let s=0,a=0,c=0;for(;c<o.stdout.length;){switch(o.stdout.charAt(c)){case\"<\":s++;break;case\">\":a++;break;default:c++}for(;\"\\n\"!==o.stdout.charAt(c++););}return{name:e,type:0,commit:r,upstream:i,ahead:s,behind:a}}catch(t){return{name:e,type:0,commit:r}}}stripCommitMessageComments(e){return e.replace(/^\\s*#.*$\\n?/gm,\"\").trim()}async getMergeMessage(){const e=i.join(this.repositoryRoot,\".git\",\"MERGE_MSG\");try{const t=await n.promises.readFile(e,\"utf8\");return this.stripCommitMessageComments(t)}catch(e){return}}async getCommitTemplate(){try{const e=await this.run([\"config\",\"--get\",\"commit.template\"]);if(!e.stdout)return\"\";const t=o.homedir();let r=e.stdout.trim().replace(/^~([^\\/]*)\\//,(e,r)=>`${r?i.join(i.dirname(t),r):t}/`);i.isAbsolute(r)||(r=i.join(this.repositoryRoot,r));const s=await n.promises.readFile(r,\"utf8\");return this.stripCommitMessageComments(s)}catch(e){return\"\"}}async getCommit(e){const t=I((await this.run([\"show\",\"-s\",`--format=${E}`,\"-z\",e])).stdout);return 0===t.length?Promise.reject(\"bad commit format\"):t[0]}async updateSubmodules(e){const t=[\"submodule\",\"update\",\"--\"];for(const r of h.splitInChunks(e.map(T),m))await this.run([...t,...r])}async getSubmodules(){const e=i.join(this.root,\".gitmodules\");try{return D(await n.promises.readFile(e,\"utf8\"))}catch(e){if(/ENOENT/.test(e.message))return[];throw e}}}t.Repository=M},function(e,t){e.exports=require(\"events\")},function(e){e.exports=[[\"0\",\"\\0\",127,\"€\"],[\"8140\",\"丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪\",5,\"乲乴\",9,\"乿\",6,\"亇亊\"],[\"8180\",\"亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂\",6,\"伋伌伒\",4,\"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾\",4,\"佄佅佇\",5,\"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢\"],[\"8240\",\"侤侫侭侰\",4,\"侶\",8,\"俀俁係俆俇俈俉俋俌俍俒\",4,\"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿\",11],[\"8280\",\"個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯\",10,\"倻倽倿偀偁偂偄偅偆偉偊偋偍偐\",4,\"偖偗偘偙偛偝\",7,\"偦\",5,\"偭\",8,\"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎\",20,\"傤傦傪傫傭\",4,\"傳\",6,\"傼\"],[\"8340\",\"傽\",17,\"僐\",5,\"僗僘僙僛\",10,\"僨僩僪僫僯僰僱僲僴僶\",4,\"僼\",9,\"儈\"],[\"8380\",\"儉儊儌\",5,\"儓\",13,\"儢\",28,\"兂兇兊兌兎兏児兒兓兗兘兙兛兝\",4,\"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦\",4,\"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒\",5],[\"8440\",\"凘凙凚凜凞凟凢凣凥\",5,\"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄\",5,\"剋剎剏剒剓剕剗剘\"],[\"8480\",\"剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳\",9,\"剾劀劃\",4,\"劉\",6,\"劑劒劔\",6,\"劜劤劥劦劧劮劯劰労\",9,\"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務\",5,\"勠勡勢勣勥\",10,\"勱\",7,\"勻勼勽匁匂匃匄匇匉匊匋匌匎\"],[\"8540\",\"匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯\",9,\"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏\"],[\"8580\",\"厐\",4,\"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯\",6,\"厷厸厹厺厼厽厾叀參\",4,\"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝\",4,\"呣呥呧呩\",7,\"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡\"],[\"8640\",\"咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠\",4,\"哫哬哯哰哱哴\",5,\"哻哾唀唂唃唄唅唈唊\",4,\"唒唓唕\",5,\"唜唝唞唟唡唥唦\"],[\"8680\",\"唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋\",4,\"啑啒啓啔啗\",4,\"啝啞啟啠啢啣啨啩啫啯\",5,\"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠\",6,\"喨\",8,\"喲喴営喸喺喼喿\",4,\"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗\",4,\"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸\",4,\"嗿嘂嘃嘄嘅\"],[\"8740\",\"嘆嘇嘊嘋嘍嘐\",7,\"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀\",11,\"噏\",4,\"噕噖噚噛噝\",4],[\"8780\",\"噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽\",7,\"嚇\",6,\"嚐嚑嚒嚔\",14,\"嚤\",10,\"嚰\",6,\"嚸嚹嚺嚻嚽\",12,\"囋\",8,\"囕囖囘囙囜団囥\",5,\"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國\",6],[\"8840\",\"園\",9,\"圝圞圠圡圢圤圥圦圧圫圱圲圴\",4,\"圼圽圿坁坃坄坅坆坈坉坋坒\",4,\"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀\"],[\"8880\",\"垁垇垈垉垊垍\",4,\"垔\",6,\"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹\",8,\"埄\",6,\"埌埍埐埑埓埖埗埛埜埞埡埢埣埥\",7,\"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥\",4,\"堫\",4,\"報堲堳場堶\",7],[\"8940\",\"堾\",5,\"塅\",6,\"塎塏塐塒塓塕塖塗塙\",4,\"塟\",5,\"塦\",4,\"塭\",16,\"塿墂墄墆墇墈墊墋墌\"],[\"8980\",\"墍\",4,\"墔\",4,\"墛墜墝墠\",7,\"墪\",17,\"墽墾墿壀壂壃壄壆\",10,\"壒壓壔壖\",13,\"壥\",5,\"壭壯壱売壴壵壷壸壺\",7,\"夃夅夆夈\",4,\"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻\"],[\"8a40\",\"夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛\",4,\"奡奣奤奦\",12,\"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦\"],[\"8a80\",\"妧妬妭妰妱妳\",5,\"妺妼妽妿\",6,\"姇姈姉姌姍姎姏姕姖姙姛姞\",4,\"姤姦姧姩姪姫姭\",11,\"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪\",6,\"娳娵娷\",4,\"娽娾娿婁\",4,\"婇婈婋\",9,\"婖婗婘婙婛\",5],[\"8b40\",\"婡婣婤婥婦婨婩婫\",8,\"婸婹婻婼婽婾媀\",17,\"媓\",6,\"媜\",13,\"媫媬\"],[\"8b80\",\"媭\",4,\"媴媶媷媹\",4,\"媿嫀嫃\",5,\"嫊嫋嫍\",4,\"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬\",4,\"嫲\",22,\"嬊\",11,\"嬘\",25,\"嬳嬵嬶嬸\",7,\"孁\",6],[\"8c40\",\"孈\",7,\"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏\"],[\"8c80\",\"寑寔\",8,\"寠寢寣實寧審\",4,\"寯寱\",6,\"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧\",6,\"屰屲\",6,\"屻屼屽屾岀岃\",4,\"岉岊岋岎岏岒岓岕岝\",4,\"岤\",4],[\"8d40\",\"岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅\",5,\"峌\",5,\"峓\",5,\"峚\",6,\"峢峣峧峩峫峬峮峯峱\",9,\"峼\",4],[\"8d80\",\"崁崄崅崈\",5,\"崏\",4,\"崕崗崘崙崚崜崝崟\",4,\"崥崨崪崫崬崯\",4,\"崵\",7,\"崿\",7,\"嵈嵉嵍\",10,\"嵙嵚嵜嵞\",10,\"嵪嵭嵮嵰嵱嵲嵳嵵\",12,\"嶃\",21,\"嶚嶛嶜嶞嶟嶠\"],[\"8e40\",\"嶡\",21,\"嶸\",12,\"巆\",6,\"巎\",12,\"巜巟巠巣巤巪巬巭\"],[\"8e80\",\"巰巵巶巸\",4,\"巿帀帄帇帉帊帋帍帎帒帓帗帞\",7,\"帨\",4,\"帯帰帲\",4,\"帹帺帾帿幀幁幃幆\",5,\"幍\",6,\"幖\",4,\"幜幝幟幠幣\",14,\"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨\",4,\"庮\",4,\"庴庺庻庼庽庿\",6],[\"8f40\",\"廆廇廈廋\",5,\"廔廕廗廘廙廚廜\",11,\"廩廫\",8,\"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤\"],[\"8f80\",\"弨弫弬弮弰弲\",6,\"弻弽弾弿彁\",14,\"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢\",5,\"復徫徬徯\",5,\"徶徸徹徺徻徾\",4,\"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇\"],[\"9040\",\"怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰\",4,\"怶\",4,\"怽怾恀恄\",6,\"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀\"],[\"9080\",\"悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽\",7,\"惇惈惉惌\",4,\"惒惓惔惖惗惙惛惞惡\",4,\"惪惱惲惵惷惸惻\",4,\"愂愃愄愅愇愊愋愌愐\",4,\"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬\",18,\"慀\",6],[\"9140\",\"慇慉態慍慏慐慒慓慔慖\",6,\"慞慟慠慡慣慤慥慦慩\",6,\"慱慲慳慴慶慸\",18,\"憌憍憏\",4,\"憕\"],[\"9180\",\"憖\",6,\"憞\",8,\"憪憫憭\",9,\"憸\",5,\"憿懀懁懃\",4,\"應懌\",4,\"懓懕\",16,\"懧\",13,\"懶\",8,\"戀\",5,\"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸\",4,\"扂扄扅扆扊\"],[\"9240\",\"扏扐払扖扗扙扚扜\",6,\"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋\",5,\"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁\"],[\"9280\",\"拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳\",5,\"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖\",7,\"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙\",6,\"採掤掦掫掯掱掲掵掶掹掻掽掿揀\"],[\"9340\",\"揁揂揃揅揇揈揊揋揌揑揓揔揕揗\",6,\"揟揢揤\",4,\"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆\",4,\"損搎搑搒搕\",5,\"搝搟搢搣搤\"],[\"9380\",\"搥搧搨搩搫搮\",5,\"搵\",4,\"搻搼搾摀摂摃摉摋\",6,\"摓摕摖摗摙\",4,\"摟\",7,\"摨摪摫摬摮\",9,\"摻\",6,\"撃撆撈\",8,\"撓撔撗撘撚撛撜撝撟\",4,\"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆\",6,\"擏擑擓擔擕擖擙據\"],[\"9440\",\"擛擜擝擟擠擡擣擥擧\",24,\"攁\",7,\"攊\",7,\"攓\",4,\"攙\",8],[\"9480\",\"攢攣攤攦\",4,\"攬攭攰攱攲攳攷攺攼攽敀\",4,\"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數\",14,\"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱\",7,\"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘\",7,\"旡旣旤旪旫\"],[\"9540\",\"旲旳旴旵旸旹旻\",4,\"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷\",4,\"昽昿晀時晄\",6,\"晍晎晐晑晘\"],[\"9580\",\"晙晛晜晝晞晠晢晣晥晧晩\",4,\"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘\",4,\"暞\",8,\"暩\",4,\"暯\",4,\"暵暶暷暸暺暻暼暽暿\",25,\"曚曞\",7,\"曧曨曪\",5,\"曱曵曶書曺曻曽朁朂會\"],[\"9640\",\"朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠\",5,\"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗\",4,\"杝杢杣杤杦杧杫杬杮東杴杶\"],[\"9680\",\"杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹\",7,\"柂柅\",9,\"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵\",7,\"柾栁栂栃栄栆栍栐栒栔栕栘\",4,\"栞栟栠栢\",6,\"栫\",6,\"栴栵栶栺栻栿桇桋桍桏桒桖\",5],[\"9740\",\"桜桝桞桟桪桬\",7,\"桵桸\",8,\"梂梄梇\",7,\"梐梑梒梔梕梖梘\",9,\"梣梤梥梩梪梫梬梮梱梲梴梶梷梸\"],[\"9780\",\"梹\",6,\"棁棃\",5,\"棊棌棎棏棐棑棓棔棖棗棙棛\",4,\"棡棢棤\",9,\"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆\",4,\"椌椏椑椓\",11,\"椡椢椣椥\",7,\"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃\",16,\"楕楖楘楙楛楜楟\"],[\"9840\",\"楡楢楤楥楧楨楩楪楬業楯楰楲\",4,\"楺楻楽楾楿榁榃榅榊榋榌榎\",5,\"榖榗榙榚榝\",9,\"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽\"],[\"9880\",\"榾榿槀槂\",7,\"構槍槏槑槒槓槕\",5,\"槜槝槞槡\",11,\"槮槯槰槱槳\",9,\"槾樀\",9,\"樋\",11,\"標\",5,\"樠樢\",5,\"権樫樬樭樮樰樲樳樴樶\",6,\"樿\",4,\"橅橆橈\",7,\"橑\",6,\"橚\"],[\"9940\",\"橜\",4,\"橢橣橤橦\",10,\"橲\",6,\"橺橻橽橾橿檁檂檃檅\",8,\"檏檒\",4,\"檘\",7,\"檡\",5],[\"9980\",\"檧檨檪檭\",114,\"欥欦欨\",6],[\"9a40\",\"欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍\",11,\"歚\",7,\"歨歩歫\",13,\"歺歽歾歿殀殅殈\"],[\"9a80\",\"殌殎殏殐殑殔殕殗殘殙殜\",4,\"殢\",7,\"殫\",7,\"殶殸\",6,\"毀毃毄毆\",4,\"毌毎毐毑毘毚毜\",4,\"毢\",7,\"毬毭毮毰毱毲毴毶毷毸毺毻毼毾\",6,\"氈\",4,\"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋\",4,\"汑汒汓汖汘\"],[\"9b40\",\"汙汚汢汣汥汦汧汫\",4,\"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘\"],[\"9b80\",\"泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟\",5,\"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽\",4,\"涃涄涆涇涊涋涍涏涐涒涖\",4,\"涜涢涥涬涭涰涱涳涴涶涷涹\",5,\"淁淂淃淈淉淊\"],[\"9c40\",\"淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽\",7,\"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵\"],[\"9c80\",\"渶渷渹渻\",7,\"湅\",7,\"湏湐湑湒湕湗湙湚湜湝湞湠\",10,\"湬湭湯\",14,\"満溁溂溄溇溈溊\",4,\"溑\",6,\"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪\",5],[\"9d40\",\"滰滱滲滳滵滶滷滸滺\",7,\"漃漄漅漇漈漊\",4,\"漐漑漒漖\",9,\"漡漢漣漥漦漧漨漬漮漰漲漴漵漷\",6,\"漿潀潁潂\"],[\"9d80\",\"潃潄潅潈潉潊潌潎\",9,\"潙潚潛潝潟潠潡潣潤潥潧\",5,\"潯潰潱潳潵潶潷潹潻潽\",6,\"澅澆澇澊澋澏\",12,\"澝澞澟澠澢\",4,\"澨\",10,\"澴澵澷澸澺\",5,\"濁濃\",5,\"濊\",6,\"濓\",10,\"濟濢濣濤濥\"],[\"9e40\",\"濦\",7,\"濰\",32,\"瀒\",7,\"瀜\",6,\"瀤\",6],[\"9e80\",\"瀫\",9,\"瀶瀷瀸瀺\",17,\"灍灎灐\",13,\"灟\",11,\"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞\",12,\"炰炲炴炵炶為炾炿烄烅烆烇烉烋\",12,\"烚\"],[\"9f40\",\"烜烝烞烠烡烢烣烥烪烮烰\",6,\"烸烺烻烼烾\",10,\"焋\",4,\"焑焒焔焗焛\",10,\"焧\",7,\"焲焳焴\"],[\"9f80\",\"焵焷\",13,\"煆煇煈煉煋煍煏\",12,\"煝煟\",4,\"煥煩\",4,\"煯煰煱煴煵煶煷煹煻煼煾\",5,\"熅\",4,\"熋熌熍熎熐熑熒熓熕熖熗熚\",4,\"熡\",6,\"熩熪熫熭\",5,\"熴熶熷熸熺\",8,\"燄\",9,\"燏\",4],[\"a040\",\"燖\",9,\"燡燢燣燤燦燨\",5,\"燯\",9,\"燺\",11,\"爇\",19],[\"a080\",\"爛爜爞\",9,\"爩爫爭爮爯爲爳爴爺爼爾牀\",6,\"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅\",4,\"犌犎犐犑犓\",11,\"犠\",11,\"犮犱犲犳犵犺\",6,\"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛\"],[\"a1a1\",\"　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈\",7,\"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓\"],[\"a2a1\",\"ⅰ\",9],[\"a2b1\",\"⒈\",19,\"⑴\",19,\"①\",9],[\"a2e5\",\"㈠\",9],[\"a2f1\",\"Ⅰ\",11],[\"a3a1\",\"！＂＃￥％\",88,\"￣\"],[\"a4a1\",\"ぁ\",82],[\"a5a1\",\"ァ\",85],[\"a6a1\",\"Α\",16,\"Σ\",6],[\"a6c1\",\"α\",16,\"σ\",6],[\"a6e0\",\"︵︶︹︺︿﹀︽︾﹁﹂﹃﹄\"],[\"a6ee\",\"︻︼︷︸︱\"],[\"a6f4\",\"︳︴\"],[\"a7a1\",\"А\",5,\"ЁЖ\",25],[\"a7d1\",\"а\",5,\"ёж\",25],[\"a840\",\"ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═\",35,\"▁\",6],[\"a880\",\"█\",7,\"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞\"],[\"a8a1\",\"āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ\"],[\"a8bd\",\"ńň\"],[\"a8c0\",\"ɡ\"],[\"a8c5\",\"ㄅ\",36],[\"a940\",\"〡\",8,\"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤\"],[\"a959\",\"℡㈱\"],[\"a95c\",\"‐\"],[\"a960\",\"ー゛゜ヽヾ〆ゝゞ﹉\",9,\"﹔﹕﹖﹗﹙\",8],[\"a980\",\"﹢\",4,\"﹨﹩﹪﹫\"],[\"a996\",\"〇\"],[\"a9a4\",\"─\",75],[\"aa40\",\"狜狝狟狢\",5,\"狪狫狵狶狹狽狾狿猀猂猄\",5,\"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀\",8],[\"aa80\",\"獉獊獋獌獎獏獑獓獔獕獖獘\",7,\"獡\",10,\"獮獰獱\"],[\"ab40\",\"獲\",11,\"獿\",4,\"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣\",5,\"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃\",4],[\"ab80\",\"珋珌珎珒\",6,\"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳\",4],[\"ac40\",\"珸\",10,\"琄琇琈琋琌琍琎琑\",8,\"琜\",5,\"琣琤琧琩琫琭琯琱琲琷\",4,\"琽琾琿瑀瑂\",11],[\"ac80\",\"瑎\",6,\"瑖瑘瑝瑠\",12,\"瑮瑯瑱\",4,\"瑸瑹瑺\"],[\"ad40\",\"瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑\",10,\"璝璟\",7,\"璪\",15,\"璻\",12],[\"ad80\",\"瓈\",9,\"瓓\",8,\"瓝瓟瓡瓥瓧\",6,\"瓰瓱瓲\"],[\"ae40\",\"瓳瓵瓸\",6,\"甀甁甂甃甅\",7,\"甎甐甒甔甕甖甗甛甝甞甠\",4,\"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘\"],[\"ae80\",\"畝\",7,\"畧畨畩畫\",6,\"畳畵當畷畺\",4,\"疀疁疂疄疅疇\"],[\"af40\",\"疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦\",4,\"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇\"],[\"af80\",\"瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄\"],[\"b040\",\"癅\",6,\"癎\",5,\"癕癗\",4,\"癝癟癠癡癢癤\",6,\"癬癭癮癰\",7,\"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛\"],[\"b080\",\"皜\",7,\"皥\",8,\"皯皰皳皵\",9,\"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥\"],[\"b140\",\"盄盇盉盋盌盓盕盙盚盜盝盞盠\",4,\"盦\",7,\"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎\",10,\"眛眜眝眞眡眣眤眥眧眪眫\"],[\"b180\",\"眬眮眰\",4,\"眹眻眽眾眿睂睄睅睆睈\",7,\"睒\",7,\"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳\"],[\"b240\",\"睝睞睟睠睤睧睩睪睭\",11,\"睺睻睼瞁瞂瞃瞆\",5,\"瞏瞐瞓\",11,\"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶\",4],[\"b280\",\"瞼瞾矀\",12,\"矎\",8,\"矘矙矚矝\",4,\"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖\"],[\"b340\",\"矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃\",5,\"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚\"],[\"b380\",\"硛硜硞\",11,\"硯\",7,\"硸硹硺硻硽\",6,\"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚\"],[\"b440\",\"碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨\",7,\"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚\",9],[\"b480\",\"磤磥磦磧磩磪磫磭\",4,\"磳磵磶磸磹磻\",5,\"礂礃礄礆\",6,\"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮\"],[\"b540\",\"礍\",5,\"礔\",9,\"礟\",4,\"礥\",14,\"礵\",4,\"礽礿祂祃祄祅祇祊\",8,\"祔祕祘祙祡祣\"],[\"b580\",\"祤祦祩祪祫祬祮祰\",6,\"祹祻\",4,\"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠\"],[\"b640\",\"禓\",6,\"禛\",11,\"禨\",10,\"禴\",4,\"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙\",5,\"秠秡秢秥秨秪\"],[\"b680\",\"秬秮秱\",6,\"秹秺秼秾秿稁稄稅稇稈稉稊稌稏\",4,\"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二\"],[\"b740\",\"稝稟稡稢稤\",14,\"稴稵稶稸稺稾穀\",5,\"穇\",9,\"穒\",4,\"穘\",16],[\"b780\",\"穩\",6,\"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服\"],[\"b840\",\"窣窤窧窩窪窫窮\",4,\"窴\",10,\"竀\",10,\"竌\",9,\"竗竘竚竛竜竝竡竢竤竧\",5,\"竮竰竱竲竳\"],[\"b880\",\"竴\",4,\"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹\"],[\"b940\",\"笯笰笲笴笵笶笷笹笻笽笿\",5,\"筆筈筊筍筎筓筕筗筙筜筞筟筡筣\",10,\"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆\",6,\"箎箏\"],[\"b980\",\"箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹\",7,\"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈\"],[\"ba40\",\"篅篈築篊篋篍篎篏篐篒篔\",4,\"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲\",4,\"篸篹篺篻篽篿\",7,\"簈簉簊簍簎簐\",5,\"簗簘簙\"],[\"ba80\",\"簚\",4,\"簠\",5,\"簨簩簫\",12,\"簹\",5,\"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖\"],[\"bb40\",\"籃\",9,\"籎\",36,\"籵\",5,\"籾\",9],[\"bb80\",\"粈粊\",6,\"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴\",4,\"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕\"],[\"bc40\",\"粿糀糂糃糄糆糉糋糎\",6,\"糘糚糛糝糞糡\",6,\"糩\",5,\"糰\",7,\"糹糺糼\",13,\"紋\",5],[\"bc80\",\"紑\",14,\"紡紣紤紥紦紨紩紪紬紭紮細\",6,\"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件\"],[\"bd40\",\"紷\",54,\"絯\",7],[\"bd80\",\"絸\",32,\"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸\"],[\"be40\",\"継\",12,\"綧\",6,\"綯\",42],[\"be80\",\"線\",32,\"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻\"],[\"bf40\",\"緻\",62],[\"bf80\",\"縺縼\",4,\"繂\",4,\"繈\",21,\"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀\"],[\"c040\",\"繞\",35,\"纃\",23,\"纜纝纞\"],[\"c080\",\"纮纴纻纼绖绤绬绹缊缐缞缷缹缻\",6,\"罃罆\",9,\"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐\"],[\"c140\",\"罖罙罛罜罝罞罠罣\",4,\"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂\",7,\"羋羍羏\",4,\"羕\",4,\"羛羜羠羢羣羥羦羨\",6,\"羱\"],[\"c180\",\"羳\",4,\"羺羻羾翀翂翃翄翆翇翈翉翋翍翏\",4,\"翖翗翙\",5,\"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿\"],[\"c240\",\"翤翧翨翪翫翬翭翯翲翴\",6,\"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫\",5,\"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗\"],[\"c280\",\"聙聛\",13,\"聫\",5,\"聲\",11,\"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫\"],[\"c340\",\"聾肁肂肅肈肊肍\",5,\"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇\",4,\"胏\",6,\"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋\"],[\"c380\",\"脌脕脗脙脛脜脝脟\",12,\"脭脮脰脳脴脵脷脹\",4,\"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸\"],[\"c440\",\"腀\",5,\"腇腉腍腎腏腒腖腗腘腛\",4,\"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃\",4,\"膉膋膌膍膎膐膒\",5,\"膙膚膞\",4,\"膤膥\"],[\"c480\",\"膧膩膫\",7,\"膴\",5,\"膼膽膾膿臄臅臇臈臉臋臍\",6,\"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁\"],[\"c540\",\"臔\",14,\"臤臥臦臨臩臫臮\",4,\"臵\",5,\"臽臿舃與\",4,\"舎舏舑舓舕\",5,\"舝舠舤舥舦舧舩舮舲舺舼舽舿\"],[\"c580\",\"艀艁艂艃艅艆艈艊艌艍艎艐\",7,\"艙艛艜艝艞艠\",7,\"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗\"],[\"c640\",\"艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸\"],[\"c680\",\"苺苼\",4,\"茊茋茍茐茒茓茖茘茙茝\",9,\"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐\"],[\"c740\",\"茾茿荁荂荄荅荈荊\",4,\"荓荕\",4,\"荝荢荰\",6,\"荹荺荾\",6,\"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡\",6,\"莬莭莮\"],[\"c780\",\"莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠\"],[\"c840\",\"菮華菳\",4,\"菺菻菼菾菿萀萂萅萇萈萉萊萐萒\",5,\"萙萚萛萞\",5,\"萩\",7,\"萲\",5,\"萹萺萻萾\",7,\"葇葈葉\"],[\"c880\",\"葊\",6,\"葒\",4,\"葘葝葞葟葠葢葤\",4,\"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁\"],[\"c940\",\"葽\",4,\"蒃蒄蒅蒆蒊蒍蒏\",7,\"蒘蒚蒛蒝蒞蒟蒠蒢\",12,\"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗\"],[\"c980\",\"蓘\",4,\"蓞蓡蓢蓤蓧\",4,\"蓭蓮蓯蓱\",10,\"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳\"],[\"ca40\",\"蔃\",8,\"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢\",8,\"蔭\",9,\"蔾\",4,\"蕄蕅蕆蕇蕋\",10],[\"ca80\",\"蕗蕘蕚蕛蕜蕝蕟\",4,\"蕥蕦蕧蕩\",8,\"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱\"],[\"cb40\",\"薂薃薆薈\",6,\"薐\",10,\"薝\",6,\"薥薦薧薩薫薬薭薱\",5,\"薸薺\",6,\"藂\",6,\"藊\",4,\"藑藒\"],[\"cb80\",\"藔藖\",5,\"藝\",6,\"藥藦藧藨藪\",14,\"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔\"],[\"cc40\",\"藹藺藼藽藾蘀\",4,\"蘆\",10,\"蘒蘓蘔蘕蘗\",15,\"蘨蘪\",13,\"蘹蘺蘻蘽蘾蘿虀\"],[\"cc80\",\"虁\",11,\"虒虓處\",4,\"虛虜虝號虠虡虣\",7,\"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃\"],[\"cd40\",\"虭虯虰虲\",6,\"蚃\",6,\"蚎\",4,\"蚔蚖\",5,\"蚞\",4,\"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻\",4,\"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜\"],[\"cd80\",\"蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威\"],[\"ce40\",\"蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀\",6,\"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚\",5,\"蝡蝢蝦\",7,\"蝯蝱蝲蝳蝵\"],[\"ce80\",\"蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎\",4,\"螔螕螖螘\",6,\"螠\",4,\"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺\"],[\"cf40\",\"螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁\",4,\"蟇蟈蟉蟌\",4,\"蟔\",6,\"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯\",9],[\"cf80\",\"蟺蟻蟼蟽蟿蠀蠁蠂蠄\",5,\"蠋\",7,\"蠔蠗蠘蠙蠚蠜\",4,\"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓\"],[\"d040\",\"蠤\",13,\"蠳\",5,\"蠺蠻蠽蠾蠿衁衂衃衆\",5,\"衎\",5,\"衕衖衘衚\",6,\"衦衧衪衭衯衱衳衴衵衶衸衹衺\"],[\"d080\",\"衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗\",4,\"袝\",4,\"袣袥\",5,\"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄\"],[\"d140\",\"袬袮袯袰袲\",4,\"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚\",4,\"裠裡裦裧裩\",6,\"裲裵裶裷裺裻製裿褀褁褃\",5],[\"d180\",\"褉褋\",4,\"褑褔\",4,\"褜\",4,\"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶\"],[\"d240\",\"褸\",8,\"襂襃襅\",24,\"襠\",5,\"襧\",19,\"襼\"],[\"d280\",\"襽襾覀覂覄覅覇\",26,\"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐\"],[\"d340\",\"覢\",30,\"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴\",6],[\"d380\",\"觻\",4,\"訁\",5,\"計\",21,\"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉\"],[\"d440\",\"訞\",31,\"訿\",8,\"詉\",21],[\"d480\",\"詟\",25,\"詺\",6,\"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧\"],[\"d540\",\"誁\",7,\"誋\",7,\"誔\",46],[\"d580\",\"諃\",32,\"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政\"],[\"d640\",\"諤\",34,\"謈\",27],[\"d680\",\"謤謥謧\",30,\"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑\"],[\"d740\",\"譆\",31,\"譧\",4,\"譭\",25],[\"d780\",\"讇\",24,\"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座\"],[\"d840\",\"谸\",8,\"豂豃豄豅豈豊豋豍\",7,\"豖豗豘豙豛\",5,\"豣\",6,\"豬\",6,\"豴豵豶豷豻\",6,\"貃貄貆貇\"],[\"d880\",\"貈貋貍\",6,\"貕貖貗貙\",20,\"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝\"],[\"d940\",\"貮\",62],[\"d980\",\"賭\",32,\"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼\"],[\"da40\",\"贎\",14,\"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸\",8,\"趂趃趆趇趈趉趌\",4,\"趒趓趕\",9,\"趠趡\"],[\"da80\",\"趢趤\",12,\"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺\"],[\"db40\",\"跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾\",6,\"踆踇踈踋踍踎踐踑踒踓踕\",7,\"踠踡踤\",4,\"踫踭踰踲踳踴踶踷踸踻踼踾\"],[\"db80\",\"踿蹃蹅蹆蹌\",4,\"蹓\",5,\"蹚\",11,\"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝\"],[\"dc40\",\"蹳蹵蹷\",4,\"蹽蹾躀躂躃躄躆躈\",6,\"躑躒躓躕\",6,\"躝躟\",11,\"躭躮躰躱躳\",6,\"躻\",7],[\"dc80\",\"軃\",10,\"軏\",21,\"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥\"],[\"dd40\",\"軥\",62],[\"dd80\",\"輤\",32,\"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺\"],[\"de40\",\"轅\",32,\"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆\"],[\"de80\",\"迉\",4,\"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖\"],[\"df40\",\"這逜連逤逥逧\",5,\"逰\",4,\"逷逹逺逽逿遀遃遅遆遈\",4,\"過達違遖遙遚遜\",5,\"遤遦遧適遪遫遬遯\",4,\"遶\",6,\"遾邁\"],[\"df80\",\"還邅邆邇邉邊邌\",4,\"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼\"],[\"e040\",\"郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅\",19,\"鄚鄛鄜\"],[\"e080\",\"鄝鄟鄠鄡鄤\",10,\"鄰鄲\",6,\"鄺\",8,\"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼\"],[\"e140\",\"酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀\",4,\"醆醈醊醎醏醓\",6,\"醜\",5,\"醤\",5,\"醫醬醰醱醲醳醶醷醸醹醻\"],[\"e180\",\"醼\",10,\"釈釋釐釒\",9,\"針\",8,\"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺\"],[\"e240\",\"釦\",62],[\"e280\",\"鈥\",32,\"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧\",5,\"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂\"],[\"e340\",\"鉆\",45,\"鉵\",16],[\"e380\",\"銆\",7,\"銏\",24,\"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾\"],[\"e440\",\"銨\",5,\"銯\",24,\"鋉\",31],[\"e480\",\"鋩\",32,\"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑\"],[\"e540\",\"錊\",51,\"錿\",10],[\"e580\",\"鍊\",31,\"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣\"],[\"e640\",\"鍬\",34,\"鎐\",27],[\"e680\",\"鎬\",29,\"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩\"],[\"e740\",\"鏎\",7,\"鏗\",54],[\"e780\",\"鐎\",32,\"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡\",6,\"缪缫缬缭缯\",4,\"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬\"],[\"e840\",\"鐯\",14,\"鐿\",43,\"鑬鑭鑮鑯\"],[\"e880\",\"鑰\",20,\"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹\"],[\"e940\",\"锧锳锽镃镈镋镕镚镠镮镴镵長\",7,\"門\",42],[\"e980\",\"閫\",32,\"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋\"],[\"ea40\",\"闌\",27,\"闬闿阇阓阘阛阞阠阣\",6,\"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗\"],[\"ea80\",\"陘陙陚陜陝陞陠陣陥陦陫陭\",4,\"陳陸\",12,\"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰\"],[\"eb40\",\"隌階隑隒隓隕隖隚際隝\",9,\"隨\",7,\"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖\",9,\"雡\",6,\"雫\"],[\"eb80\",\"雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗\",4,\"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻\"],[\"ec40\",\"霡\",8,\"霫霬霮霯霱霳\",4,\"霺霻霼霽霿\",18,\"靔靕靗靘靚靜靝靟靣靤靦靧靨靪\",7],[\"ec80\",\"靲靵靷\",4,\"靽\",7,\"鞆\",4,\"鞌鞎鞏鞐鞓鞕鞖鞗鞙\",4,\"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐\"],[\"ed40\",\"鞞鞟鞡鞢鞤\",6,\"鞬鞮鞰鞱鞳鞵\",46],[\"ed80\",\"韤韥韨韮\",4,\"韴韷\",23,\"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨\"],[\"ee40\",\"頏\",62],[\"ee80\",\"顎\",32,\"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶\",4,\"钼钽钿铄铈\",6,\"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪\"],[\"ef40\",\"顯\",5,\"颋颎颒颕颙颣風\",37,\"飏飐飔飖飗飛飜飝飠\",4],[\"ef80\",\"飥飦飩\",30,\"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒\",4,\"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤\",8,\"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔\"],[\"f040\",\"餈\",4,\"餎餏餑\",28,\"餯\",26],[\"f080\",\"饊\",9,\"饖\",12,\"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨\",4,\"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦\",6,\"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙\"],[\"f140\",\"馌馎馚\",10,\"馦馧馩\",47],[\"f180\",\"駙\",32,\"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃\"],[\"f240\",\"駺\",62],[\"f280\",\"騹\",32,\"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒\"],[\"f340\",\"驚\",17,\"驲骃骉骍骎骔骕骙骦骩\",6,\"骲骳骴骵骹骻骽骾骿髃髄髆\",4,\"髍髎髏髐髒體髕髖髗髙髚髛髜\"],[\"f380\",\"髝髞髠髢髣髤髥髧髨髩髪髬髮髰\",8,\"髺髼\",6,\"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋\"],[\"f440\",\"鬇鬉\",5,\"鬐鬑鬒鬔\",10,\"鬠鬡鬢鬤\",10,\"鬰鬱鬳\",7,\"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕\",5],[\"f480\",\"魛\",32,\"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤\"],[\"f540\",\"魼\",62],[\"f580\",\"鮻\",32,\"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜\"],[\"f640\",\"鯜\",62],[\"f680\",\"鰛\",32,\"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅\",5,\"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞\",5,\"鲥\",4,\"鲫鲭鲮鲰\",7,\"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋\"],[\"f740\",\"鰼\",62],[\"f780\",\"鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾\",4,\"鳈鳉鳑鳒鳚鳛鳠鳡鳌\",4,\"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄\"],[\"f840\",\"鳣\",62],[\"f880\",\"鴢\",32],[\"f940\",\"鵃\",62],[\"f980\",\"鶂\",32],[\"fa40\",\"鶣\",62],[\"fa80\",\"鷢\",32],[\"fb40\",\"鸃\",27,\"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴\",9,\"麀\"],[\"fb80\",\"麁麃麄麅麆麉麊麌\",5,\"麔\",8,\"麞麠\",5,\"麧麨麩麪\"],[\"fc40\",\"麫\",8,\"麵麶麷麹麺麼麿\",4,\"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰\",8,\"黺黽黿\",6],[\"fc80\",\"鼆\",4,\"鼌鼏鼑鼒鼔鼕鼖鼘鼚\",5,\"鼡鼣\",8,\"鼭鼮鼰鼱\"],[\"fd40\",\"鼲\",4,\"鼸鼺鼼鼿\",4,\"齅\",10,\"齒\",38],[\"fd80\",\"齹\",5,\"龁龂龍\",11,\"龜龝龞龡\",4,\"郎凉秊裏隣\"],[\"fe40\",\"兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩\"]]},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(2),o=r(0),s=r(3),a=r(8),c=r(117),u=r(18),l=r(26),h=r(118),p=r(19),d=r(5),f=r(119),g=r(42),m=e=>new Promise(t=>setTimeout(t,e)),y=a.loadMessageBundle(r(0).join(__dirname,\"repository.ts\")),v=o.join(o.dirname(__dirname),\"resources\",\"icons\");function w(e,t){return s.Uri.file(o.join(v,t,`${e}.svg`))}class b{constructor(e,t,r,n,i){this._resourceGroupType=e,this._resourceUri=t,this._type=r,this._useIcons=n,this._renameResourceUri=i}static getStatusText(e){switch(e){case 0:return y(0,null);case 5:return y(1,null);case 1:return y(2,null);case 2:return y(3,null);case 6:return y(4,null);case 3:return y(5,null);case 4:return y(6,null);case 7:return y(7,null);case 8:return y(8,null);case 9:return y(9,null);case 15:return y(10,null);case 10:return y(11,null);case 13:return y(12,null);case 11:return y(13,null);case 12:return y(14,null);case 14:return y(15,null);case 16:return y(16,null);default:return\"\"}}get resourceUri(){return!this.renameResourceUri||5!==this._type&&6!==this._type&&3!==this._type&&4!==this._type?this._resourceUri:this.renameResourceUri}get command(){return{command:\"git.openResource\",title:y(17,null),arguments:[this]}}get resourceGroupType(){return this._resourceGroupType}get type(){return this._type}get original(){return this._resourceUri}get renameResourceUri(){return this._renameResourceUri}getIconPath(e){switch(this.type){case 0:case 5:return b.Icons[e].Modified;case 1:return b.Icons[e].Added;case 2:case 6:return b.Icons[e].Deleted;case 3:return b.Icons[e].Renamed;case 4:return b.Icons[e].Copied;case 7:return b.Icons[e].Untracked;case 8:return b.Icons[e].Ignored;case 9:return b.Icons[e].Added;case 15:case 10:case 13:case 11:case 12:case 14:case 16:return b.Icons[e].Conflict;default:throw new Error(\"Unknown git status: \"+this.type)}}get tooltip(){return b.getStatusText(this.type)}get strikeThrough(){switch(this.type){case 6:case 15:case 13:case 12:case 2:return!0;default:return!1}}get faded(){return!1}get decorations(){const e=this._useIcons?{iconPath:this.getIconPath(\"light\")}:void 0,t=this._useIcons?{iconPath:this.getIconPath(\"dark\")}:void 0,r=this.tooltip;return{strikeThrough:this.strikeThrough,faded:this.faded,tooltip:r,light:e,dark:t}}get letter(){switch(this.type){case 0:case 5:return\"M\";case 1:case 9:return\"A\";case 2:case 6:return\"D\";case 3:return\"R\";case 7:return\"U\";case 8:return\"I\";case 13:case 12:return\"D\";case 4:case 15:case 10:case 11:case 14:case 16:return\"C\";default:throw new Error(\"Unknown git status: \"+this.type)}}get color(){switch(this.type){case 0:case 5:return new s.ThemeColor(\"gitDecoration.modifiedResourceForeground\");case 2:case 6:return new s.ThemeColor(\"gitDecoration.deletedResourceForeground\");case 1:case 9:return new s.ThemeColor(\"gitDecoration.addedResourceForeground\");case 3:case 7:return new s.ThemeColor(\"gitDecoration.untrackedResourceForeground\");case 8:return new s.ThemeColor(\"gitDecoration.ignoredResourceForeground\");case 4:case 15:case 10:case 13:case 11:case 12:case 14:case 16:return new s.ThemeColor(\"gitDecoration.conflictingResourceForeground\");default:throw new Error(\"Unknown git status: \"+this.type)}}get priority(){switch(this.type){case 0:case 5:return 2;case 8:return 3;case 4:case 15:case 10:case 13:case 11:case 12:case 14:case 16:return 4;default:return 1}}get resourceDecoration(){return{bubble:!0,title:this.tooltip,letter:this.letter,color:this.color,priority:this.priority}}}function C(e){switch(e){case\"Blame\":case\"CheckIgnore\":case\"Diff\":case\"GetTracking\":case\"GetBranch\":case\"GetCommitTemplate\":case\"GetObjectDetails\":case\"Log\":case\"LogFile\":case\"MergeBase\":case\"Show\":return!0;default:return!1}}function _(e){switch(e){case\"Fetch\":case\"CheckIgnore\":case\"GetObjectDetails\":case\"Show\":return!1;default:return!0}}b.Icons={light:{Modified:w(\"status-modified\",\"light\"),Added:w(\"status-added\",\"light\"),Deleted:w(\"status-deleted\",\"light\"),Renamed:w(\"status-renamed\",\"light\"),Copied:w(\"status-copied\",\"light\"),Untracked:w(\"status-untracked\",\"light\"),Ignored:w(\"status-ignored\",\"light\"),Conflict:w(\"status-conflict\",\"light\")},dark:{Modified:w(\"status-modified\",\"dark\"),Added:w(\"status-added\",\"dark\"),Deleted:w(\"status-deleted\",\"dark\"),Renamed:w(\"status-renamed\",\"dark\"),Copied:w(\"status-copied\",\"dark\"),Untracked:w(\"status-untracked\",\"dark\"),Ignored:w(\"status-ignored\",\"dark\"),Conflict:w(\"status-conflict\",\"dark\")}},n([u.memoize],b.prototype,\"resourceUri\",null),n([u.memoize],b.prototype,\"command\",null),n([u.memoize],b.prototype,\"faded\",null),t.Resource=b;class S{constructor(){this.operations=new Map}start(e){this.operations.set(e,(this.operations.get(e)||0)+1)}end(e){const t=(this.operations.get(e)||0)-1;t<=0?this.operations.delete(e):this.operations.set(e,t)}isRunning(e){return this.operations.has(e)}isIdle(){const e=this.operations.keys();for(const t of e)if(!C(t))return!1;return!0}shouldShowProgress(){const e=this.operations.keys();for(const t of e)if(_(t))return!0;return!1}}class k{constructor(e){this.repository=e,this.enabled=!1,this.disposable=d.EmptyDisposable,d.filterEvent(s.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git\",s.Uri.file(this.repository.root)))(e=>this.updateEnablement()),this.updateEnablement()}updateEnablement(){s.workspace.getConfiguration(\"git\",s.Uri.file(this.repository.root)).get(\"showProgress\")?this.enable():this.disable()}enable(){if(this.enabled)return;const e=d.onceEvent(d.filterEvent(this.repository.onDidChangeOperations,()=>this.repository.operations.shouldShowProgress())),t=d.onceEvent(d.filterEvent(d.debounceEvent(this.repository.onDidChangeOperations,300),()=>!this.repository.operations.shouldShowProgress())),r=()=>{this.disposable=e(()=>{const e=d.eventToPromise(t).then(()=>r());s.window.withProgress({location:s.ProgressLocation.SourceControl},()=>e)})};r(),this.enabled=!0}disable(){this.enabled&&(this.disposable.dispose(),this.disposable=d.EmptyDisposable,this.enabled=!1)}dispose(){this.disable()}}class T{constructor(e,t,r){this.onWorkspaceWorkingTreeFileChange=e,this.onDotGitFileChange=t,this.outputChannel=r,this.eventDisposable=d.EmptyDisposable,this.logLevelDisposable=d.EmptyDisposable,this.logLevelDisposable=g.Log.onDidChangeLogLevel(this.onDidChangeLogLevel,this),this.onDidChangeLogLevel(g.Log.logLevel)}onDidChangeLogLevel(e){this.eventDisposable.dispose(),e>g.LogLevel.Debug||(this.eventDisposable=d.combinedDisposable([this.onWorkspaceWorkingTreeFileChange(e=>this.outputChannel.appendLine(`[debug] [wt] Change: ${e.fsPath}`)),this.onDotGitFileChange(e=>this.outputChannel.appendLine(`[debug] [.git] Change: ${e.fsPath}`))]))}dispose(){this.eventDisposable.dispose(),this.logLevelDisposable.dispose()}}class E{constructor(e,t){this.repository=e,this.outputChannel=t,this.emitter=new s.EventEmitter,this.transientDisposables=[],this.disposables=[];const r=f.watch(e.dotGit);this.disposables.push(r);const n=d.filterEvent(r.event,e=>!/\\/\\.git(\\/index\\.lock)?$/.test(e.path));this.event=d.anyEvent(n,this.emitter.event),e.onDidRunGitStatus(this.updateTransientWatchers,this,this.disposables),this.updateTransientWatchers()}updateTransientWatchers(){if(this.transientDisposables=d.dispose(this.transientDisposables),!this.repository.HEAD||!this.repository.HEAD.upstream)return;this.transientDisposables=d.dispose(this.transientDisposables);const{name:e,remote:t}=this.repository.HEAD.upstream,r=o.join(this.repository.dotGit,\"refs\",\"remotes\",t,e);try{const e=f.watch(r);this.transientDisposables.push(e),e.event(this.emitter.fire,this.emitter,this.transientDisposables)}catch(e){g.Log.logLevel<=g.LogLevel.Error&&this.outputChannel.appendLine(`Failed to watch ref '${r}', is most likely packed.\\n${e.stack||e}`)}}dispose(){this.emitter.dispose(),this.transientDisposables=d.dispose(this.transientDisposables),this.disposables=d.dispose(this.disposables)}}class R{constructor(e,t,r){this.repository=e,this._onDidChangeRepository=new s.EventEmitter,this.onDidChangeRepository=this._onDidChangeRepository.event,this._onDidChangeState=new s.EventEmitter,this.onDidChangeState=this._onDidChangeState.event,this._onDidChangeStatus=new s.EventEmitter,this.onDidRunGitStatus=this._onDidChangeStatus.event,this._onDidChangeOriginalResource=new s.EventEmitter,this.onDidChangeOriginalResource=this._onDidChangeOriginalResource.event,this._onRunOperation=new s.EventEmitter,this.onRunOperation=this._onRunOperation.event,this._onDidRunOperation=new s.EventEmitter,this.onDidRunOperation=this._onDidRunOperation.event,this._refs=[],this._remotes=[],this._submodules=[],this._rebaseCommit=void 0,this._operations=new S,this._state=0,this.isRepositoryHuge=!1,this.didWarnAboutLimit=!1,this.disposables=[];const n=s.workspace.createFileSystemWatcher(\"**\");this.disposables.push(n);const i=d.anyEvent(n.onDidChange,n.onDidCreate,n.onDidDelete),o=d.filterEvent(i,t=>d.isDescendant(e.root,t.fsPath)),a=d.filterEvent(o,e=>!/\\/\\.git($|\\/)/.test(e.path));let u;try{const e=new E(this,r);u=e.event,this.disposables.push(e)}catch(e){g.Log.logLevel<=g.LogLevel.Error&&r.appendLine(`Failed to watch '${this.dotGit}', reverting to legacy API file watched. Some events might be lost.\\n${e.stack||e}`),u=d.filterEvent(o,e=>/\\/\\.git($|\\/)/.test(e.path))}d.anyEvent(a,u)(this.onFileChange,this,this.disposables),u(this._onDidChangeRepository.fire,this._onDidChangeRepository,this.disposables),this.disposables.push(new T(a,u,r));const l=s.Uri.file(e.root);this._sourceControl=s.scm.createSourceControl(\"git\",\"Git\",l),this._sourceControl.acceptInputCommand={command:\"git.commit\",title:y(18,null),arguments:[this._sourceControl]},this._sourceControl.quickDiffProvider=this,this._sourceControl.inputBox.validateInput=this.validateInput.bind(this),this.disposables.push(this._sourceControl),this.updateInputBoxPlaceholder(),this.disposables.push(this.onDidRunGitStatus(()=>this.updateInputBoxPlaceholder())),this._mergeGroup=this._sourceControl.createResourceGroup(\"merge\",y(19,null)),this._indexGroup=this._sourceControl.createResourceGroup(\"index\",y(20,null)),this._workingTreeGroup=this._sourceControl.createResourceGroup(\"workingTree\",y(21,null)),this._untrackedGroup=this._sourceControl.createResourceGroup(\"untracked\",y(22,null));const p=()=>{const e=s.workspace.getConfiguration(\"git\",l);this.indexGroup.hideWhenEmpty=!e.get(\"alwaysShowStagedChangesResourceGroup\")};d.filterEvent(s.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git.alwaysShowStagedChangesResourceGroup\",l))(p,this,this.disposables),p(),d.filterEvent(s.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git.branchSortOrder\",l))(this.updateModelState,this,this.disposables),d.filterEvent(s.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git.untrackedChanges\",l))(this.updateModelState,this,this.disposables),this.mergeGroup.hideWhenEmpty=!0,this.untrackedGroup.hideWhenEmpty=!0,this.disposables.push(this.mergeGroup),this.disposables.push(this.indexGroup),this.disposables.push(this.workingTreeGroup),this.disposables.push(this.untrackedGroup),this.disposables.push(new c.AutoFetcher(this,t)),d.filterEvent(this.onDidRunOperation,e=>\"Push\"===e.operation&&!e.error)(()=>{s.workspace.getConfiguration(\"git\").get(\"showPushSuccessNotification\")&&s.window.showInformationMessage(y(23,null))},null,this.disposables);const f=new h.StatusBarCommands(this);this.disposables.push(f),f.onDidChange(()=>this._sourceControl.statusBarCommands=f.commands,null,this.disposables),this._sourceControl.statusBarCommands=f.commands;const m=new k(this);this.disposables.push(m),d.filterEvent(s.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git.countBadge\",l))(this.setCountBadge,this,this.disposables),this.setCountBadge()}get onDidChangeOperations(){return d.anyEvent(this.onRunOperation,this.onDidRunOperation)}get sourceControl(){return this._sourceControl}get inputBox(){return this._sourceControl.inputBox}get mergeGroup(){return this._mergeGroup}get indexGroup(){return this._indexGroup}get workingTreeGroup(){return this._workingTreeGroup}get untrackedGroup(){return this._untrackedGroup}get HEAD(){return this._HEAD}get refs(){return this._refs}get headShortName(){if(!this.HEAD)return;const e=this.HEAD;if(e.name)return e.name;const t=this.refs.filter(t=>2===t.type&&t.commit===e.commit)[0],r=t&&t.name;return r||(e.commit||\"\").substr(0,8)}get remotes(){return this._remotes}get submodules(){return this._submodules}set rebaseCommit(e){this._rebaseCommit&&!e?this.inputBox.value=\"\":!e||this._rebaseCommit&&this._rebaseCommit.hash===e.hash||(this.inputBox.value=e.message),this._rebaseCommit=e}get rebaseCommit(){return this._rebaseCommit}get operations(){return this._operations}get state(){return this._state}set state(e){this._state=e,this._onDidChangeState.fire(e),this._HEAD=void 0,this._refs=[],this._remotes=[],this.mergeGroup.resourceStates=[],this.indexGroup.resourceStates=[],this.workingTreeGroup.resourceStates=[],this.untrackedGroup.resourceStates=[],this._sourceControl.count=0}get root(){return this.repository.root}get dotGit(){return this.repository.dotGit}validateInput(e,t){if(this.rebaseCommit&&this.rebaseCommit.message!==e)return{message:y(24,null),type:s.SourceControlInputBoxValidationType.Warning};const r=s.workspace.getConfiguration(\"git\"),n=r.get(\"inputValidation\");if(\"off\"===n)return;if(/^\\s+$/.test(e))return{message:y(25,null),type:s.SourceControlInputBoxValidationType.Warning};let i,o,a=0,c=0;const u=/\\r?\\n/g;for(;(o=u.exec(e))&&t>o.index;)c=o.index+o[0].length,a++;i=o?o.index:e.length;const l=e.substring(c,i);let h=r.get(\"inputValidationLength\",50);if(0===a){const e=r.get(\"inputValidationSubjectLength\",null);null!==e&&(h=e)}if(l.length<=h){if(\"always\"!==n)return;return{message:y(26,null,h-l.length),type:s.SourceControlInputBoxValidationType.Information}}return{message:y(27,null,l.length-h,h),type:s.SourceControlInputBoxValidationType.Warning}}provideOriginalResource(e){if(\"file\"===e.scheme)return p.toGitUri(e,\"\",{replaceFileExtension:!0})}async getInputTemplate(){const e=await this.repository.getMergeMessage();return e||await this.repository.getCommitTemplate()}getConfigs(){return this.run(\"Config\",()=>this.repository.getConfigs(\"local\"))}getConfig(e){return this.run(\"Config\",()=>this.repository.config(\"local\",e))}getGlobalConfig(e){return this.run(\"Config\",()=>this.repository.config(\"global\",e))}setConfig(e,t){return this.run(\"Config\",()=>this.repository.config(\"local\",e,t))}log(e){return this.run(\"Log\",()=>this.repository.log(e))}logFile(e,t){return this.run(\"LogFile\",()=>this.repository.logFile(e,t))}async status(){await this.run(\"Status\")}diff(e){return this.run(\"Diff\",()=>this.repository.diff(e))}diffWithHEAD(e){return this.run(\"Diff\",()=>this.repository.diffWithHEAD(e))}diffWith(e,t){return this.run(\"Diff\",()=>this.repository.diffWith(e,t))}diffIndexWithHEAD(e){return this.run(\"Diff\",()=>this.repository.diffIndexWithHEAD(e))}diffIndexWith(e,t){return this.run(\"Diff\",()=>this.repository.diffIndexWith(e,t))}diffBlobs(e,t){return this.run(\"Diff\",()=>this.repository.diffBlobs(e,t))}diffBetween(e,t,r){return this.run(\"Diff\",()=>this.repository.diffBetween(e,t,r))}getMergeBase(e,t){return this.run(\"MergeBase\",()=>this.repository.getMergeBase(e,t))}async hashObject(e){return this.run(\"HashObject\",()=>this.repository.hashObject(e))}async add(e,t){await this.run(\"Add\",()=>this.repository.add(e.map(e=>e.fsPath),t))}async rm(e){await this.run(\"Remove\",()=>this.repository.rm(e.map(e=>e.fsPath)))}async stage(e,t){const r=o.relative(this.repository.root,e.fsPath).replace(/\\\\/g,\"/\");await this.run(\"Stage\",()=>this.repository.stage(r,t)),this._onDidChangeOriginalResource.fire(e)}async revert(e){await this.run(\"RevertFiles\",()=>this.repository.revert(\"HEAD\",e.map(e=>e.fsPath)))}async commit(e,t=Object.create(null)){this.rebaseCommit?await this.run(\"RebaseContinue\",async()=>{if(t.all){const e=\"tracked\"===t.all?{update:!0}:{};await this.repository.add([],e)}await this.repository.rebaseContinue()}):await this.run(\"Commit\",async()=>{if(t.all){const e=\"tracked\"===t.all?{update:!0}:{};await this.repository.add([],e)}delete t.all,await this.repository.commit(e,t)})}async clean(e){await this.run(\"Clean\",async()=>{const t=[],r=[],n=[],i=[...this.workingTreeGroup.resourceStates,...this.untrackedGroup.resourceStates];e.forEach(e=>{const s=e.fsPath;for(const e of this.submodules)if(o.join(this.root,e.path)===s)return void n.push(s);const a=e.toString(),c=d.find(i,e=>e.resourceUri.toString()===a);if(c)switch(c.type){case 7:case 8:t.push(s);break;default:r.push(s)}}),await this.repository.clean(t),await this.repository.checkout(\"\",r),await this.repository.updateSubmodules(n)})}async branch(e,t,r){await this.run(\"Branch\",()=>this.repository.branch(e,t,r))}async deleteBranch(e,t){await this.run(\"DeleteBranch\",()=>this.repository.deleteBranch(e,t))}async renameBranch(e){await this.run(\"RenameBranch\",()=>this.repository.renameBranch(e))}async getBranch(e){return await this.run(\"GetBranch\",()=>this.repository.getBranch(e))}async setBranchUpstream(e,t){await this.run(\"SetBranchUpstream\",()=>this.repository.setBranchUpstream(e,t))}async merge(e){await this.run(\"Merge\",()=>this.repository.merge(e))}async tag(e,t){await this.run(\"Tag\",()=>this.repository.tag(e,t))}async deleteTag(e){await this.run(\"DeleteTag\",()=>this.repository.deleteTag(e))}async checkout(e){await this.run(\"Checkout\",()=>this.repository.checkout(e,[]))}async checkoutTracking(e){await this.run(\"CheckoutTracking\",()=>this.repository.checkout(e,[],{track:!0}))}async findTrackingBranches(e){return await this.run(\"GetTracking\",()=>this.repository.findTrackingBranches(e))}async getCommit(e){return await this.repository.getCommit(e)}async reset(e,t){await this.run(\"Reset\",()=>this.repository.reset(e,t))}async deleteRef(e){await this.run(\"DeleteRef\",()=>this.repository.deleteRef(e))}async addRemote(e,t){await this.run(\"Remote\",()=>this.repository.addRemote(e,t))}async removeRemote(e){await this.run(\"Remote\",()=>this.repository.removeRemote(e))}async fetchDefault(e={}){await this.run(\"Fetch\",()=>this.repository.fetch(e))}async fetchPrune(){await this.run(\"Fetch\",()=>this.repository.fetch({prune:!0}))}async fetchAll(){await this.run(\"Fetch\",()=>this.repository.fetch({all:!0}))}async fetch(e,t,r){await this.run(\"Fetch\",()=>this.repository.fetch({remote:e,ref:t,depth:r}))}async pullWithRebase(e){let t,r;return e&&e.name&&e.upstream&&(t=e.upstream.remote,r=`${e.upstream.name}`),this.pullFrom(!0,t,r)}async pull(e,t){let r,n;return e&&e.name&&e.upstream&&(r=e.upstream.remote,n=`${e.upstream.name}`),this.pullFrom(!1,r,n,t)}async pullFrom(e,t,r,n){await this.run(\"Pull\",async()=>{await this.maybeAutoStash(async()=>{const i=s.workspace.getConfiguration(\"git\",s.Uri.file(this.root)),o=i.get(\"fetchOnPull\"),a=i.get(\"pullTags\");o?await this.repository.pull(e,void 0,void 0,{unshallow:n,tags:a}):await this.repository.pull(e,t,r,{unshallow:n,tags:a})})})}async push(e,t){let r,n;e&&e.name&&e.upstream&&(r=e.upstream.remote,n=`${e.name}:${e.upstream.name}`),await this.run(\"Push\",()=>this.repository.push(r,n,void 0,void 0,t))}async pushTo(e,t,r=!1,n){await this.run(\"Push\",()=>this.repository.push(e,t,r,void 0,n))}async pushFollowTags(e,t){await this.run(\"Push\",()=>this.repository.push(e,void 0,!1,!0,t))}async blame(e){return await this.run(\"Blame\",()=>this.repository.blame(e))}sync(e){return this._sync(e,!1)}async syncRebase(e){return this._sync(e,!0)}async _sync(e,t){let r,n,i;e.name&&e.upstream&&(r=e.upstream.remote,n=`${e.upstream.name}`,i=`${e.name}:${e.upstream.name}`),await this.run(\"Sync\",async()=>{await this.maybeAutoStash(async()=>{const e=s.workspace.getConfiguration(\"git\",s.Uri.file(this.root)),o=e.get(\"fetchOnPull\"),a=e.get(\"pullTags\"),c=e.get(\"supportCancellation\"),u=o?async e=>await this.repository.pull(t,void 0,void 0,{tags:a,cancellationToken:e}):async e=>await this.repository.pull(t,r,n,{tags:a,cancellationToken:e});if(c){const e={location:s.ProgressLocation.Notification,title:y(28,null),cancellable:!0};await s.window.withProgress(e,(e,t)=>u(t))}else await u();const l=this.remotes.find(e=>e.name===r);l&&l.isReadOnly||this.HEAD&&(\"number\"!=typeof this.HEAD.ahead||this.HEAD.ahead>0)&&await this.repository.push(r,i)})})}async show(e,t){return await this.run(\"Show\",async()=>{const r=o.relative(this.repository.root,t).replace(/\\\\/g,\"/\"),n=s.workspace.getConfiguration(\"files\",s.Uri.file(t)),i=n.get(\"encoding\"),a=n.get(\"autoGuessEncoding\");try{return await this.repository.bufferString(`${e}:${r}`,i,a)}catch(t){if(\"WrongCase\"===t.gitErrorCode){const t=await this.repository.getGitRelativePath(e,r);return await this.repository.bufferString(`${e}:${t}`,i,a)}throw t}})}async buffer(e,t){return this.run(\"Show\",()=>{const r=o.relative(this.repository.root,t).replace(/\\\\/g,\"/\");return this.repository.buffer(`${e}:${r}`)})}getObjectDetails(e,t){return this.run(\"GetObjectDetails\",()=>this.repository.getObjectDetails(e,t))}detectObjectType(e){return this.run(\"Show\",()=>this.repository.detectObjectType(e))}async apply(e,t){return await this.run(\"Apply\",()=>this.repository.apply(e,t))}async getStashes(){return await this.repository.getStashes()}async createStash(e,t){return await this.run(\"Stash\",()=>this.repository.createStash(e,t))}async popStash(e){return await this.run(\"Stash\",()=>this.repository.popStash(e))}async dropStash(e){return await this.run(\"Stash\",()=>this.repository.dropStash(e))}async applyStash(e){return await this.run(\"Stash\",()=>this.repository.applyStash(e))}async getCommitTemplate(){return await this.run(\"GetCommitTemplate\",async()=>this.repository.getCommitTemplate())}async ignore(e){return await this.run(\"Ignore\",async()=>{const t=`${this.repository.root}${o.sep}.gitignore`,r=e.map(e=>o.relative(this.repository.root,e.fsPath).replace(/\\\\/g,\"/\")).join(\"\\n\"),n=await new Promise(e=>i.exists(t,e))?await s.workspace.openTextDocument(t):await s.workspace.openTextDocument(s.Uri.file(t).with({scheme:\"untitled\"}));await s.window.showTextDocument(n);const a=new s.WorkspaceEdit,c=n.lineAt(n.lineCount-1),u=c.isEmptyOrWhitespace?`${r}\\n`:`\\n${r}\\n`;a.insert(n.uri,c.range.end,u),await s.workspace.applyEdit(a),await n.save()})}checkIgnore(e){return this.run(\"CheckIgnore\",()=>new Promise((t,r)=>{if(0===(e=e.filter(e=>d.isDescendant(this.root,e))).length)return t(new Set);const n=this.repository.stream([\"check-ignore\",\"-v\",\"-z\",\"--stdin\"],{stdio:[null,null,null]});n.stdin.end(e.join(\"\\0\"),\"utf8\");let i=\"\";n.stdout.setEncoding(\"utf8\"),n.stdout.on(\"data\",e=>{i+=e});let o=\"\";n.stderr.setEncoding(\"utf8\"),n.stderr.on(\"data\",e=>o+=e),n.on(\"error\",r),n.on(\"exit\",e=>{1===e?t(new Set):0===e?t(new Set(this.parseIgnoreCheck(i))):/ is in submodule /.test(o)?r(new l.GitError({stdout:i,stderr:o,exitCode:e,gitErrorCode:\"IsInSubmodule\"})):r(new l.GitError({stdout:i,stderr:o,exitCode:e}))})}))}parseIgnoreCheck(e){const t=[],r=e.split(\"\\0\");for(let e=0;e<r.length;e+=4){const n=r[e+2],i=r[e+3];n&&!n.startsWith(\"!\")&&t.push(i)}return t}async run(e,t=(()=>Promise.resolve(null))){if(0!==this.state)throw new Error(\"Repository not initialized\");let r=null;this._operations.start(e),this._onRunOperation.fire(e);try{const n=await this.retryRun(e,t);return C(e)||await this.updateModelState(),n}catch(e){throw r=e,\"NotAGitRepository\"===e.gitErrorCode&&(this.state=1),e}finally{this._operations.end(e),this._onDidRunOperation.fire({operation:e,error:r})}}async retryRun(e,t=(()=>Promise.resolve(null))){let r=0;for(;;)try{return r++,await t()}catch(t){if(!(r<=10&&(\"RepositoryIsLocked\"===t.gitErrorCode||(\"Pull\"===e||\"Sync\"===e||\"Fetch\"===e)&&(\"CantLockRef\"===t.gitErrorCode||\"CantRebaseMultipleBranches\"===t.gitErrorCode))))throw t;await m(50*Math.pow(r,2))}}async findKnownHugeFolderPathsToIgnore(){const e=[];for(const t of R.KnownHugeFolderNames){const r=o.join(this.repository.root,t);await new Promise(e=>i.exists(r,e))&&e.push(r)}const t=await this.checkIgnore(e);return e.filter(e=>!t.has(e))}async updateModelState(){const{status:e,didHitLimit:t}=await this.repository.getStatus(),r=s.workspace.getConfiguration(\"git\"),n=s.workspace.getConfiguration(\"git\",s.Uri.file(this.repository.root)),i=!0===r.get(\"ignoreLimitWarning\"),a=!r.get(\"decorations.enabled\",!0);if(this.isRepositoryHuge=t,t&&!i&&!this.didWarnAboutLimit){const e=await this.findKnownHugeFolderPathsToIgnore(),t=y(29,null,this.repository.root),n={title:y(30,null)};if(e.length>0){const i=e[0],a=o.basename(i),c=y(31,null,a),u={title:y(32,null)},l=await s.window.showWarningMessage(`${t} ${c}`,u,n);l===n?(r.update(\"ignoreLimitWarning\",!0,!1),this.didWarnAboutLimit=!0):l===u&&this.ignore([s.Uri.file(i)])}else{await s.window.showWarningMessage(t,n)===n&&r.update(\"ignoreLimitWarning\",!0,!1),this.didWarnAboutLimit=!0}}let c;try{if((c=await this.repository.getHEAD()).name)try{c=await this.repository.getBranch(c.name)}catch(e){}}catch(e){}const u=r.get(\"branchSortOrder\")||\"alphabetically\",[l,h,p,d]=await Promise.all([this.repository.getRefs({sort:u}),this.repository.getRemotes(),this.repository.getSubmodules(),this.getRebaseCommit()]);this._HEAD=c,this._refs=l,this._remotes=h,this._submodules=p,this.rebaseCommit=d;const f=n.get(\"untrackedChanges\"),g=[],m=[],v=[],w=[];e.forEach(e=>{const t=s.Uri.file(o.join(this.repository.root,e.path)),r=e.rename?s.Uri.file(o.join(this.repository.root,e.rename)):void 0;switch(e.x+e.y){case\"??\":switch(f){case\"mixed\":return m.push(new b(2,t,7,a));case\"separate\":return w.push(new b(3,t,7,a));default:return}case\"!!\":switch(f){case\"mixed\":return m.push(new b(2,t,8,a));case\"separate\":return w.push(new b(3,t,8,a));default:return}case\"DD\":return v.push(new b(0,t,15,a));case\"AU\":return v.push(new b(0,t,10,a));case\"UD\":return v.push(new b(0,t,13,a));case\"UA\":return v.push(new b(0,t,11,a));case\"DU\":return v.push(new b(0,t,12,a));case\"AA\":return v.push(new b(0,t,14,a));case\"UU\":return v.push(new b(0,t,16,a))}switch(e.x){case\"M\":g.push(new b(1,t,0,a));break;case\"A\":g.push(new b(1,t,1,a));break;case\"D\":g.push(new b(1,t,2,a));break;case\"R\":g.push(new b(1,t,3,a,r));break;case\"C\":g.push(new b(1,t,4,a,r))}switch(e.y){case\"M\":m.push(new b(2,t,5,a,r));break;case\"D\":m.push(new b(2,t,6,a,r));break;case\"A\":m.push(new b(2,t,9,a,r))}}),this.mergeGroup.resourceStates=v,this.indexGroup.resourceStates=g,this.workingTreeGroup.resourceStates=m,this.untrackedGroup.resourceStates=w,this.setCountBadge(),this._onDidChangeStatus.fire(),this._sourceControl.commitTemplate=await this.getInputTemplate()}setCountBadge(){const e=s.workspace.getConfiguration(\"git\",s.Uri.file(this.repository.root)),t=e.get(\"countBadge\"),r=e.get(\"untrackedChanges\");let n=this.mergeGroup.resourceStates.length+this.indexGroup.resourceStates.length+this.workingTreeGroup.resourceStates.length;switch(t){case\"off\":n=0;break;case\"tracked\":\"mixed\"===r&&(n-=this.workingTreeGroup.resourceStates.filter(e=>7===e.type||8===e.type).length);break;case\"all\":\"separate\"===r&&(n+=this.untrackedGroup.resourceStates.length)}this._sourceControl.count=n}async getRebaseCommit(){const e=o.join(this.repository.root,\".git\",\"REBASE_HEAD\"),t=o.join(this.repository.root,\".git\",\"rebase-apply\"),r=o.join(this.repository.root,\".git\",\"rebase-merge\");try{const[n,o,s]=await Promise.all([new Promise(e=>i.exists(t,e)),new Promise(e=>i.exists(r,e)),new Promise((t,r)=>i.readFile(e,\"utf8\",(e,n)=>e?r(e):t(n)))]);if(!n&&!o)return;return await this.getCommit(s.trim())}catch(e){return}}async maybeAutoStash(e){if(!(s.workspace.getConfiguration(\"git\",s.Uri.file(this.root)).get(\"autoStash\")&&this.workingTreeGroup.resourceStates.some(e=>7!==e.type&&8!==e.type)))return await e();await this.repository.createStash(void 0,!0);const t=await e();return await this.repository.popStash(),t}onFileChange(e){s.workspace.getConfiguration(\"git\").get(\"autorefresh\")&&(this.isRepositoryHuge||this.operations.isIdle()&&this.eventuallyUpdateWhenIdleAndWait())}eventuallyUpdateWhenIdleAndWait(){this.updateWhenIdleAndWait()}async updateWhenIdleAndWait(){await this.whenIdleAndFocused(),await this.status(),await m(5e3)}async whenIdleAndFocused(){for(;;)if(this.operations.isIdle()){if(s.window.state.focused)return;{const e=d.filterEvent(s.window.onDidChangeWindowState,e=>e.focused);await d.eventToPromise(e)}}else await d.eventToPromise(this.onDidRunOperation)}get headLabel(){const e=this.HEAD;if(!e)return\"\";const t=this.refs.filter(t=>2===t.type&&t.commit===e.commit)[0],r=t&&t.name;return(e.name||r||(e.commit||\"\").substr(0,8))+(this.workingTreeGroup.resourceStates.length+this.untrackedGroup.resourceStates.length>0?\"*\":\"\")+(this.indexGroup.resourceStates.length>0?\"+\":\"\")+(this.mergeGroup.resourceStates.length>0?\"!\":\"\")}get syncLabel(){if(!(this.HEAD&&this.HEAD.name&&this.HEAD.commit&&this.HEAD.upstream&&(this.HEAD.ahead||this.HEAD.behind)))return\"\";const e=this.HEAD&&this.HEAD.remote||this.HEAD.upstream.remote,t=this.remotes.find(t=>t.name===e);return t&&t.isReadOnly?`${this.HEAD.behind}↓`:`${this.HEAD.behind}↓ ${this.HEAD.ahead}↑`}updateInputBoxPlaceholder(){const e=this.headShortName;this._sourceControl.inputBox.placeholder=e?y(33,null,\"{0}\",e):y(34,null)}dispose(){this.disposables=d.dispose(this.disposables)}}R.KnownHugeFolderNames=[\"node_modules\"],n([u.memoize],R.prototype,\"onDidChangeOperations\",null),n([u.throttle],R.prototype,\"status\",null),n([u.throttle],R.prototype,\"fetchDefault\",null),n([u.throttle],R.prototype,\"fetchPrune\",null),n([u.throttle],R.prototype,\"fetchAll\",null),n([u.throttle],R.prototype,\"pullWithRebase\",null),n([u.throttle],R.prototype,\"pull\",null),n([u.throttle],R.prototype,\"push\",null),n([u.throttle],R.prototype,\"sync\",null),n([u.throttle],R.prototype,\"syncRebase\",null),n([u.throttle],R.prototype,\"updateModelState\",null),n([u.debounce(1e3)],R.prototype,\"eventuallyUpdateWhenIdleAndWait\",null),n([u.throttle],R.prototype,\"updateWhenIdleAndWait\",null),t.Repository=R},function(e,t,r){\"use strict\";if(Object.defineProperty(t,\"__esModule\",{value:!0}),t.IsInitialized=!process.env.APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL,t.IsInitialized){var n=r(130),i=(process.env.APPLICATION_INSIGHTS_NO_PATCH_MODULES||\"\").split(\",\"),o={bunyan:n.bunyan,console:n.console,mongodb:n.mongodb,mongodbCore:n.mongodbCore,mysql:n.mysql,redis:n.redis,pg:n.pg,pgPool:n.pgPool,winston:n.winston};for(var s in o)-1===i.indexOf(s)&&o[s].enable()}t.registerContextPreservation=function(e){t.IsInitialized&&r(4).channel.addContextPreservation(e)}},function(e,t,r){\"use strict\";var n=r(20),i=r(32),o=r(6),s=r(11),a=r(24),c=r(170),u=r(23),l=r(30),h=function(){function e(t){if(e.INSTANCE)throw new Error(\"Client request tracking should be configured from the applicationInsights object\");e.INSTANCE=this,this._client=t}return e.prototype.enable=function(e){this._isEnabled=e,this._isEnabled&&!this._isInitialized&&this._initialize(),l.IsInitialized&&(r(171).enable(e,this._client),r(172).enable(e,this._client),r(173).enable(e,this._client),r(174).enable(e,this._client))},e.prototype.isInitialized=function(){return this._isInitialized},e.prototype._initialize=function(){var t=this;this._isInitialized=!0;n.get;var r=n.request,o=i.request,s=function(r,n){var i=!n[e.disableCollectionRequestOption]&&!r[e.alreadyAutoCollectedFlag];r[e.alreadyAutoCollectedFlag]=!0,r&&n&&i&&e.trackRequest(t._client,{options:n,request:r})};n.request=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var o=r.call.apply(r,[n,e].concat(t));return s(o,e),o},i.request=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var n=o.call.apply(o,[i,e].concat(t));return s(n,e),n},n.get=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var i,o=(i=n.request).call.apply(i,[n,e].concat(t));return o.end(),o},i.get=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var n,o=(n=i.request).call.apply(n,[i,e].concat(t));return o.end(),o}},e.trackRequest=function(t,r){if(r.options&&r.request&&t){var n=new c(r.options,r.request),i=u.CorrelationContextManager.getCurrentContext(),l=i&&i.operation&&i.operation.parentId+e.requestNumber+++\".\";if(s.canIncludeCorrelationHeader(t,n.getUrl())&&r.request.getHeader&&r.request.setHeader){if(t.config&&t.config.correlationId){var h=r.request.getHeader(a.requestContextHeader);if(h){var p=h.split(\",\"),d=a.requestContextSourceKey+\"=\";p.some(function(e){return e.substring(0,d.length)===d})||r.request.setHeader(a.requestContextHeader,h+\",\"+a.requestContextSourceKey+\"=\"+t.config.correlationId)}else r.request.setHeader(a.requestContextHeader,a.requestContextSourceKey+\"=\"+t.config.correlationId)}if(i&&i.operation){r.request.setHeader(a.requestIdHeader,l),r.request.setHeader(a.parentIdHeader,i.operation.id),r.request.setHeader(a.rootIdHeader,l);var f=i.customProperties.serializeToHeader();f&&r.request.setHeader(a.correlationContextHeader,f)}}r.request.on&&(r.request.on(\"response\",function(e){n.onResponse(e);var i=n.getDependencyTelemetry(r,l);i.contextObjects=i.contextObjects||{},i.contextObjects[\"http.RequestOptions\"]=r.options,i.contextObjects[\"http.ClientRequest\"]=r.request,i.contextObjects[\"http.ClientResponse\"]=e,t.trackDependency(i)}),r.request.on(\"error\",function(e){n.onError(e);var i=n.getDependencyTelemetry(r,l);i.contextObjects=i.contextObjects||{},i.contextObjects[\"http.RequestOptions\"]=r.options,i.contextObjects[\"http.ClientRequest\"]=r.request,i.contextObjects.Error=e,t.trackDependency(i)}))}else o.info(\"AutoCollectHttpDependencies.trackRequest was called with invalid parameters: \",!r.options,!r.request,!t)},e.prototype.dispose=function(){e.INSTANCE=null,this.enable(!1),this._isInitialized=!1},e.disableCollectionRequestOption=\"disableAppInsightsAutoCollection\",e.requestNumber=1,e.alreadyAutoCollectedFlag=\"_appInsightsAutoCollected\",e}();e.exports=h},function(e,t){e.exports=require(\"https\")},function(e,t,r){\"use strict\";var n=r(11),i=r(6),o=function(){function e(){}return e.queryCorrelationId=function(t,r){var o=t.profileQueryEndpoint+\"/api/profiles/\"+t.instrumentationKey+\"/appId\";if(e.completedLookups.hasOwnProperty(o))r(e.completedLookups[o]);else if(e.pendingLookups[o])e.pendingLookups[o].push(r);else{e.pendingLookups[o]=[r];var s=function(){if(e.pendingLookups[o]){var r={method:\"GET\",disableAppInsightsAutoCollection:!0};i.info(e.TAG,r);var a=n.makeRequest(t,o,r,function(r){if(200===r.statusCode){var n=\"\";r.setEncoding(\"utf-8\"),r.on(\"data\",function(e){n+=e}),r.on(\"end\",function(){i.info(e.TAG,n);var t=e.correlationIdPrefix+n;e.completedLookups[o]=t,e.pendingLookups[o]&&e.pendingLookups[o].forEach(function(e){return e(t)}),delete e.pendingLookups[o]})}else r.statusCode>=400&&r.statusCode<500?(e.completedLookups[o]=void 0,delete e.pendingLookups[o]):setTimeout(s,t.correlationIdRetryIntervalMs)});a&&(a.on(\"error\",function(t){i.warn(e.TAG,t)}),a.end())}};setTimeout(s,0)}},e.cancelCorrelationIdQuery=function(t,r){var n=t.profileQueryEndpoint+\"/api/profiles/\"+t.instrumentationKey+\"/appId\",i=e.pendingLookups[n];i&&(e.pendingLookups[n]=i.filter(function(e){return e!=r}),0==e.pendingLookups[n].length&&delete e.pendingLookups[n])},e.generateRequestId=function(t){if(t){\".\"!==(t=\"|\"==t[0]?t:\"|\"+t)[t.length-1]&&(t+=\".\");var r=(e.currentRootId++).toString(16);return e.appendSuffix(t,r,\"_\")}return e.generateRootId()},e.getRootId=function(e){var t=e.indexOf(\".\");t<0&&(t=e.length);var r=\"|\"===e[0]?1:0;return e.substring(r,t)},e.generateRootId=function(){return\"|\"+n.w3cTraceId()+\".\"},e.appendSuffix=function(t,r,i){if(t.length+r.length<e.requestIdMaxLength)return t+r+i;var o=e.requestIdMaxLength-9;if(t.length>o)for(;o>1;--o){var s=t[o-1];if(\".\"===s||\"_\"===s)break}if(o<=1)return e.generateRootId();for(r=n.randomu32().toString(16);r.length<8;)r=\"0\"+r;return t.substring(0,o)+r+\"#\"},e.TAG=\"CorrelationIdManager\",e.correlationIdPrefix=\"cid-v1:\",e.pendingLookups={},e.completedLookups={},e.requestIdMaxLength=1024,e.currentRootId=n.randomu32(),e}();e.exports=o},function(e,t){e.exports=require(\"child_process\")},function(e,t){e.exports=require(\"string_decoder\")},function(e){e.exports=[[\"a140\",\"\",62],[\"a180\",\"\",32],[\"a240\",\"\",62],[\"a280\",\"\",32],[\"a2ab\",\"\",5],[\"a2e3\",\"€\"],[\"a2ef\",\"\"],[\"a2fd\",\"\"],[\"a340\",\"\",62],[\"a380\",\"\",31,\"　\"],[\"a440\",\"\",62],[\"a480\",\"\",32],[\"a4f4\",\"\",10],[\"a540\",\"\",62],[\"a580\",\"\",32],[\"a5f7\",\"\",7],[\"a640\",\"\",62],[\"a680\",\"\",32],[\"a6b9\",\"\",7],[\"a6d9\",\"\",6],[\"a6ec\",\"\"],[\"a6f3\",\"\"],[\"a6f6\",\"\",8],[\"a740\",\"\",62],[\"a780\",\"\",32],[\"a7c2\",\"\",14],[\"a7f2\",\"\",12],[\"a896\",\"\",10],[\"a8bc\",\"\"],[\"a8bf\",\"ǹ\"],[\"a8c1\",\"\"],[\"a8ea\",\"\",20],[\"a958\",\"\"],[\"a95b\",\"\"],[\"a95d\",\"\"],[\"a989\",\"〾⿰\",11],[\"a997\",\"\",12],[\"a9f0\",\"\",14],[\"aaa1\",\"\",93],[\"aba1\",\"\",93],[\"aca1\",\"\",93],[\"ada1\",\"\",93],[\"aea1\",\"\",93],[\"afa1\",\"\",93],[\"d7fa\",\"\",4],[\"f8a1\",\"\",93],[\"f9a1\",\"\",93],[\"faa1\",\"\",93],[\"fba1\",\"\",93],[\"fca1\",\"\",93],[\"fda1\",\"\",93],[\"fe50\",\"⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌\"],[\"fe80\",\"䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓\",6,\"䶮\",93]]},function(e){e.exports=[[\"0\",\"\\0\",127],[\"a140\",\"　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚\"],[\"a1a1\",\"﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢\",4,\"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／\"],[\"a240\",\"＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁\",7,\"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭\"],[\"a2a1\",\"╮╰╯═╞╪╡◢◣◥◤╱╲╳０\",9,\"Ⅰ\",9,\"〡\",8,\"十卄卅Ａ\",25,\"ａ\",21],[\"a340\",\"ｗｘｙｚΑ\",16,\"Σ\",6,\"α\",16,\"σ\",6,\"ㄅ\",10],[\"a3a1\",\"ㄐ\",25,\"˙ˉˊˇˋ\"],[\"a3e1\",\"€\"],[\"a440\",\"一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才\"],[\"a4a1\",\"丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙\"],[\"a540\",\"世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外\"],[\"a5a1\",\"央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全\"],[\"a640\",\"共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年\"],[\"a6a1\",\"式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣\"],[\"a740\",\"作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍\"],[\"a7a1\",\"均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠\"],[\"a840\",\"杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒\"],[\"a8a1\",\"芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵\"],[\"a940\",\"咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居\"],[\"a9a1\",\"屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊\"],[\"aa40\",\"昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠\"],[\"aaa1\",\"炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附\"],[\"ab40\",\"陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品\"],[\"aba1\",\"哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷\"],[\"ac40\",\"拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗\"],[\"aca1\",\"活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄\"],[\"ad40\",\"耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥\"],[\"ada1\",\"迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪\"],[\"ae40\",\"哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙\"],[\"aea1\",\"恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓\"],[\"af40\",\"浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷\"],[\"afa1\",\"砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃\"],[\"b040\",\"虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡\"],[\"b0a1\",\"陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀\"],[\"b140\",\"娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽\"],[\"b1a1\",\"情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺\"],[\"b240\",\"毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶\"],[\"b2a1\",\"瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼\"],[\"b340\",\"莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途\"],[\"b3a1\",\"部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠\"],[\"b440\",\"婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍\"],[\"b4a1\",\"插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋\"],[\"b540\",\"溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘\"],[\"b5a1\",\"窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁\"],[\"b640\",\"詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑\"],[\"b6a1\",\"間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼\"],[\"b740\",\"媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業\"],[\"b7a1\",\"楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督\"],[\"b840\",\"睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫\"],[\"b8a1\",\"腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊\"],[\"b940\",\"辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴\"],[\"b9a1\",\"飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇\"],[\"ba40\",\"愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢\"],[\"baa1\",\"滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬\"],[\"bb40\",\"罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤\"],[\"bba1\",\"說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜\"],[\"bc40\",\"劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂\"],[\"bca1\",\"慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃\"],[\"bd40\",\"瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯\"],[\"bda1\",\"翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞\"],[\"be40\",\"輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉\"],[\"bea1\",\"鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡\"],[\"bf40\",\"濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊\"],[\"bfa1\",\"縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚\"],[\"c040\",\"錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇\"],[\"c0a1\",\"嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬\"],[\"c140\",\"瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪\"],[\"c1a1\",\"薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁\"],[\"c240\",\"駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘\"],[\"c2a1\",\"癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦\"],[\"c340\",\"鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸\"],[\"c3a1\",\"獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類\"],[\"c440\",\"願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼\"],[\"c4a1\",\"纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴\"],[\"c540\",\"護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬\"],[\"c5a1\",\"禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒\"],[\"c640\",\"讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲\"],[\"c940\",\"乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕\"],[\"c9a1\",\"氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋\"],[\"ca40\",\"汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘\"],[\"caa1\",\"吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇\"],[\"cb40\",\"杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓\"],[\"cba1\",\"芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢\"],[\"cc40\",\"坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋\"],[\"cca1\",\"怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲\"],[\"cd40\",\"泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺\"],[\"cda1\",\"矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏\"],[\"ce40\",\"哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛\"],[\"cea1\",\"峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺\"],[\"cf40\",\"柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂\"],[\"cfa1\",\"洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀\"],[\"d040\",\"穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪\"],[\"d0a1\",\"苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱\"],[\"d140\",\"唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧\"],[\"d1a1\",\"恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤\"],[\"d240\",\"毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸\"],[\"d2a1\",\"牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐\"],[\"d340\",\"笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢\"],[\"d3a1\",\"荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐\"],[\"d440\",\"酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅\"],[\"d4a1\",\"唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏\"],[\"d540\",\"崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟\"],[\"d5a1\",\"捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉\"],[\"d640\",\"淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏\"],[\"d6a1\",\"痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟\"],[\"d740\",\"耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷\"],[\"d7a1\",\"蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪\"],[\"d840\",\"釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷\"],[\"d8a1\",\"堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔\"],[\"d940\",\"惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒\"],[\"d9a1\",\"晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞\"],[\"da40\",\"湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖\"],[\"daa1\",\"琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥\"],[\"db40\",\"罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳\"],[\"dba1\",\"菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺\"],[\"dc40\",\"軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈\"],[\"dca1\",\"隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆\"],[\"dd40\",\"媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤\"],[\"dda1\",\"搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼\"],[\"de40\",\"毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓\"],[\"dea1\",\"煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓\"],[\"df40\",\"稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯\"],[\"dfa1\",\"腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤\"],[\"e040\",\"觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿\"],[\"e0a1\",\"遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠\"],[\"e140\",\"凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠\"],[\"e1a1\",\"寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉\"],[\"e240\",\"榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊\"],[\"e2a1\",\"漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓\"],[\"e340\",\"禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞\"],[\"e3a1\",\"耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻\"],[\"e440\",\"裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍\"],[\"e4a1\",\"銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘\"],[\"e540\",\"噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉\"],[\"e5a1\",\"憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒\"],[\"e640\",\"澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙\"],[\"e6a1\",\"獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟\"],[\"e740\",\"膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢\"],[\"e7a1\",\"蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧\"],[\"e840\",\"踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓\"],[\"e8a1\",\"銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮\"],[\"e940\",\"噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺\"],[\"e9a1\",\"憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸\"],[\"ea40\",\"澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙\"],[\"eaa1\",\"瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘\"],[\"eb40\",\"蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠\"],[\"eba1\",\"諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌\"],[\"ec40\",\"錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕\"],[\"eca1\",\"魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎\"],[\"ed40\",\"檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶\"],[\"eda1\",\"瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞\"],[\"ee40\",\"蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞\"],[\"eea1\",\"謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜\"],[\"ef40\",\"鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰\"],[\"efa1\",\"鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶\"],[\"f040\",\"璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒\"],[\"f0a1\",\"臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧\"],[\"f140\",\"蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪\"],[\"f1a1\",\"鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰\"],[\"f240\",\"徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛\"],[\"f2a1\",\"礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕\"],[\"f340\",\"譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦\"],[\"f3a1\",\"鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲\"],[\"f440\",\"嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩\"],[\"f4a1\",\"禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿\"],[\"f540\",\"鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛\"],[\"f5a1\",\"鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥\"],[\"f640\",\"蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺\"],[\"f6a1\",\"騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚\"],[\"f740\",\"糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊\"],[\"f7a1\",\"驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾\"],[\"f840\",\"讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏\"],[\"f8a1\",\"齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚\"],[\"f940\",\"纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊\"],[\"f9a1\",\"龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓\"]]},function(e,t,r){var n=r(22),i=r(78),o=r(39);function s(e,t){if(!e)throw new Error(\"expected readStream\");if(!e.readable)throw new Error(\"readStream must be readable\");var r=new a(t);return e.pipe(r),r}function a(e){n.Transform.call(this,e),e=e||{},this._readableState.objectMode=!0,this._lineBuffer=[],this._keepEmptyLines=e.keepEmptyLines||!1,this._lastChunkEndedWithCR=!1;var t=this;this.on(\"pipe\",function(e){t.encoding||e instanceof n.Readable&&(t.encoding=e._readableState.encoding)})}e.exports=function(t,r){return e.exports.createStream(t,r)},e.exports.createStream=function(e,t){return e?s(e,t):new a(t)},e.exports.createLineStream=function(e){return console.log(\"WARNING: byline#createLineStream is deprecated and will be removed soon\"),s(e)},e.exports.LineStream=a,i.inherits(a,n.Transform),a.prototype._transform=function(e,t,r){t=t||\"utf8\",Buffer.isBuffer(e)&&(\"buffer\"==t?(e=e.toString(),t=\"utf8\"):e=e.toString(t)),this._chunkEncoding=t;var n=e.split(/\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g);this._lastChunkEndedWithCR&&\"\\n\"==e[0]&&n.shift(),this._lineBuffer.length>0&&(this._lineBuffer[this._lineBuffer.length-1]+=n[0],n.shift()),this._lastChunkEndedWithCR=\"\\r\"==e[e.length-1],this._lineBuffer=this._lineBuffer.concat(n),this._pushBuffer(t,1,r)},a.prototype._pushBuffer=function(e,t,r){for(;this._lineBuffer.length>t;){var n=this._lineBuffer.shift();if((this._keepEmptyLines||n.length>0)&&!this.push(this._reencode(n,e))){var i=this;return void o.setImmediate(function(){i._pushBuffer(e,t,r)})}}r()},a.prototype._flush=function(e){this._pushBuffer(this._chunkEncoding,0,e)},a.prototype._reencode=function(e,t){return this.encoding&&this.encoding!=t?new Buffer(e,t).toString(this.encoding):this.encoding?e:new Buffer(e,t)}},function(e,t){e.exports=require(\"timers\")},function(e,t,r){var n=r(1),i=r(13),o=r(14);function s(){i.apply(this);var e=this;this.reset=function(){s.prototype.reset.apply(this),this._mActiveNum=0;for(var e,t=0;e=this._mProbers[t];t++)e&&(e.reset(),e.active=!0,this._mActiveNum++);this._mBestGuessProber=null},this.getCharsetName=function(){return this._mBestGuessProber||(this.getConfidence(),this._mBestGuessProber)?this._mBestGuessProber.getCharsetName():null},this.feed=function(e){for(var t,r=0;t=this._mProbers[r];r++)if(t&&t.active){var i=t.feed(e);if(i){if(i==n.foundIt)return this._mBestGuessProber=t,this.getState();if(i==n.notMe&&(t.active=!1,this._mActiveNum--,this._mActiveNum<=0))return this._mState=n.notMe,this.getState()}}return this.getState()},this.getConfidence=function(){var e=this.getState();if(e==n.foundIt)return.99;if(e==n.notMe)return.01;var t=0;this._mBestGuessProber=null;for(var r,i=0;r=this._mProbers[i];i++)if(r)if(r.active){var s=r.getConfidence();o.log(r.getCharsetName()+\" confidence = \"+s+\"\\n\"),t<s&&(t=s,this._mBestGuessProber=r)}else o.log(r.getCharsetName()+\" not active\\n\");return this._mBestGuessProber?t:0},e._mActiveNum=0,e._mProbers=[],e._mBestGuessProber=null}s.prototype=new i,e.exports=s},function(e,t){function r(){var e=this;this.reset=function(){this._mTotalRel=0,this._mRelSample=[];for(var e=0;e<6;this._mRelSample[e++]=0);this._mNeedToSkipCharNum=0,this._mLastCharOrder=-1,this._mDone=!1},this.feed=function(e,r){if(!this._mDone)for(var n=this._mNeedToSkipCharNum;n<r;){var i=this.getOrder(e.slice(n,n+2)),o=i[0];if((n+=i[1])>r)this._mNeedToSkipCharNum=n-r,this._mLastCharOrder=-1;else{if(-1!=o&&-1!=this._mLastCharOrder){if(this._mTotalRel+=1,this._mTotalRel>1e3){this._mDone=!0;break}this._mRelSample[t.jp2CharContext[this._mLastCharOrder][o]]+=1}this._mLastCharOrder=o}}},this.gotEnoughData=function(){return this._mTotalRel>100},this.getConfidence=function(){return this._mTotalRel>4?(this._mTotalRel-this._mRelSample[0])/this._mTotalRel:-1},this.getOrder=function(e){return[-1,1]},e.reset()}function n(){this.getOrder=function(e){if(!e)return[-1,1];if(e.charCodeAt(0)>=129&&e.charCodeAt(0)<=159||e.charCodeAt(0)>=224&&e.charCodeAt(0)<=252)var t=2;else t=1;return e.length>1&&130==e.charCodeAt(0)&&e.charCodeAt(1)>=159&&e.charCodeAt(0)<=241?[e.charCodeAt(1)-159,t]:[-1,t]}}function i(){this.getOrder=function(e){if(!e)return[-1,1];if(e.charCodeAt(0)>=142||e.charCodeAt(0)>=161&&e.charCodeAt(0)<=254)var t=2;else t=143==e.charCodeAt(0)?3:1;return e.length>1&&164==e.charCodeAt(0)&&e.charCodeAt(1)>=161&&e.charCodeAt(1)<=243?[e.charCodeAt(1)-161,t]:[-1,t]}}t.jp2CharContext=[[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],[2,4,0,4,0,3,0,4,0,3,4,4,4,2,4,3,3,4,3,2,3,3,4,2,3,3,3,2,4,1,4,3,3,1,5,4,3,4,3,4,3,5,3,0,3,5,4,2,0,3,1,0,3,3,0,3,3,0,1,1,0,4,3,0,3,3,0,4,0,2,0,3,5,5,5,5,4,0,4,1,0,3,4],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[0,4,0,5,0,5,0,4,0,4,5,4,4,3,5,3,5,1,5,3,4,3,4,4,3,4,3,3,4,3,5,4,4,3,5,5,3,5,5,5,3,5,5,3,4,5,5,3,1,3,2,0,3,4,0,4,2,0,4,2,1,5,3,2,3,5,0,4,0,2,0,5,4,4,5,4,5,0,4,0,0,4,4],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,3,0,4,0,3,0,3,0,4,5,4,3,3,3,3,4,3,5,4,4,3,5,4,4,3,4,3,4,4,4,4,5,3,4,4,3,4,5,5,4,5,5,1,4,5,4,3,0,3,3,1,3,3,0,4,4,0,3,3,1,5,3,3,3,5,0,4,0,3,0,4,4,3,4,3,3,0,4,1,1,3,4],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,4,0,3,0,3,0,4,0,3,4,4,3,2,2,1,2,1,3,1,3,3,3,3,3,4,3,1,3,3,5,3,3,0,4,3,0,5,4,3,3,5,4,4,3,4,4,5,0,1,2,0,1,2,0,2,2,0,1,0,0,5,2,2,1,4,0,3,0,1,0,4,4,3,5,4,3,0,2,1,0,4,3],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,3,0,5,0,4,0,2,1,4,4,2,4,1,4,2,4,2,4,3,3,3,4,3,3,3,3,1,4,2,3,3,3,1,4,4,1,1,1,4,3,3,2,0,2,4,3,2,0,3,3,0,3,1,1,0,0,0,3,3,0,4,2,2,3,4,0,4,0,3,0,4,4,5,3,4,4,0,3,0,0,1,4],[1,4,0,4,0,4,0,4,0,3,5,4,4,3,4,3,5,4,3,3,4,3,5,4,4,4,4,3,4,2,4,3,3,1,5,4,3,2,4,5,4,5,5,4,4,5,4,4,0,3,2,2,3,3,0,4,3,1,3,2,1,4,3,3,4,5,0,3,0,2,0,4,5,5,4,5,4,0,4,0,0,5,4],[0,5,0,5,0,4,0,3,0,4,4,3,4,3,3,3,4,0,4,4,4,3,4,3,4,3,3,1,4,2,4,3,4,0,5,4,1,4,5,4,4,5,3,2,4,3,4,3,2,4,1,3,3,3,2,3,2,0,4,3,3,4,3,3,3,4,0,4,0,3,0,4,5,4,4,4,3,0,4,1,0,1,3],[0,3,1,4,0,3,0,2,0,3,4,4,3,1,4,2,3,3,4,3,4,3,4,3,4,4,3,2,3,1,5,4,4,1,4,4,3,5,4,4,3,5,5,4,3,4,4,3,1,2,3,1,2,2,0,3,2,0,3,1,0,5,3,3,3,4,3,3,3,3,4,4,4,4,5,4,2,0,3,3,2,4,3],[0,2,0,3,0,1,0,1,0,0,3,2,0,0,2,0,1,0,2,1,3,3,3,1,2,3,1,0,1,0,4,2,1,1,3,3,0,4,3,3,1,4,3,3,0,3,3,2,0,0,0,0,1,0,0,2,0,0,0,0,0,4,1,0,2,3,2,2,2,1,3,3,3,4,4,3,2,0,3,1,0,3,3],[0,4,0,4,0,3,0,3,0,4,4,4,3,3,3,3,3,3,4,3,4,2,4,3,4,3,3,2,4,3,4,5,4,1,4,5,3,5,4,5,3,5,4,0,3,5,5,3,1,3,3,2,2,3,0,3,4,1,3,3,2,4,3,3,3,4,0,4,0,3,0,4,5,4,4,5,3,0,4,1,0,3,4],[0,2,0,3,0,3,0,0,0,2,2,2,1,0,1,0,0,0,3,0,3,0,3,0,1,3,1,0,3,1,3,3,3,1,3,3,3,0,1,3,1,3,4,0,0,3,1,1,0,3,2,0,0,0,0,1,3,0,1,0,0,3,3,2,0,3,0,0,0,0,0,3,4,3,4,3,3,0,3,0,0,2,3],[2,3,0,3,0,2,0,1,0,3,3,4,3,1,3,1,1,1,3,1,4,3,4,3,3,3,0,0,3,1,5,4,3,1,4,3,2,5,5,4,4,4,4,3,3,4,4,4,0,2,1,1,3,2,0,1,2,0,0,1,0,4,1,3,3,3,0,3,0,1,0,4,4,4,5,5,3,0,2,0,0,4,4],[0,2,0,1,0,3,1,3,0,2,3,3,3,0,3,1,0,0,3,0,3,2,3,1,3,2,1,1,0,0,4,2,1,0,2,3,1,4,3,2,0,4,4,3,1,3,1,3,0,1,0,0,1,0,0,0,1,0,0,0,0,4,1,1,1,2,0,3,0,0,0,3,4,2,4,3,2,0,1,0,0,3,3],[0,1,0,4,0,5,0,4,0,2,4,4,2,3,3,2,3,3,5,3,3,3,4,3,4,2,3,0,4,3,3,3,4,1,4,3,2,1,5,5,3,4,5,1,3,5,4,2,0,3,3,0,1,3,0,4,2,0,1,3,1,4,3,3,3,3,0,3,0,1,0,3,4,4,4,5,5,0,3,0,1,4,5],[0,2,0,3,0,3,0,0,0,2,3,1,3,0,4,0,1,1,3,0,3,4,3,2,3,1,0,3,3,2,3,1,3,0,2,3,0,2,1,4,1,2,2,0,0,3,3,0,0,2,0,0,0,1,0,0,0,0,2,2,0,3,2,1,3,3,0,2,0,2,0,0,3,3,1,2,4,0,3,0,2,2,3],[2,4,0,5,0,4,0,4,0,2,4,4,4,3,4,3,3,3,1,2,4,3,4,3,4,4,5,0,3,3,3,3,2,0,4,3,1,4,3,4,1,4,4,3,3,4,4,3,1,2,3,0,4,2,0,4,1,0,3,3,0,4,3,3,3,4,0,4,0,2,0,3,5,3,4,5,2,0,3,0,0,4,5],[0,3,0,4,0,1,0,1,0,1,3,2,2,1,3,0,3,0,2,0,2,0,3,0,2,0,0,0,1,0,1,1,0,0,3,1,0,0,0,4,0,3,1,0,2,1,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,2,2,3,1,0,3,0,0,0,1,4,4,4,3,0,0,4,0,0,1,4],[1,4,1,5,0,3,0,3,0,4,5,4,4,3,5,3,3,4,4,3,4,1,3,3,3,3,2,1,4,1,5,4,3,1,4,4,3,5,4,4,3,5,4,3,3,4,4,4,0,3,3,1,2,3,0,3,1,0,3,3,0,5,4,4,4,4,4,4,3,3,5,4,4,3,3,5,4,0,3,2,0,4,4],[0,2,0,3,0,1,0,0,0,1,3,3,3,2,4,1,3,0,3,1,3,0,2,2,1,1,0,0,2,0,4,3,1,0,4,3,0,4,4,4,1,4,3,1,1,3,3,1,0,2,0,0,1,3,0,0,0,0,2,0,0,4,3,2,4,3,5,4,3,3,3,4,3,3,4,3,3,0,2,1,0,3,3],[0,2,0,4,0,3,0,2,0,2,5,5,3,4,4,4,4,1,4,3,3,0,4,3,4,3,1,3,3,2,4,3,0,3,4,3,0,3,4,4,2,4,4,0,4,5,3,3,2,2,1,1,1,2,0,1,5,0,3,3,2,4,3,3,3,4,0,3,0,2,0,4,4,3,5,5,0,0,3,0,2,3,3],[0,3,0,4,0,3,0,1,0,3,4,3,3,1,3,3,3,0,3,1,3,0,4,3,3,1,1,0,3,0,3,3,0,0,4,4,0,1,5,4,3,3,5,0,3,3,4,3,0,2,0,1,1,1,0,1,3,0,1,2,1,3,3,2,3,3,0,3,0,1,0,1,3,3,4,4,1,0,1,2,2,1,3],[0,1,0,4,0,4,0,3,0,1,3,3,3,2,3,1,1,0,3,0,3,3,4,3,2,4,2,0,1,0,4,3,2,0,4,3,0,5,3,3,2,4,4,4,3,3,3,4,0,1,3,0,0,1,0,0,1,0,0,0,0,4,2,3,3,3,0,3,0,0,0,4,4,4,5,3,2,0,3,3,0,3,5],[0,2,0,3,0,0,0,3,0,1,3,0,2,0,0,0,1,0,3,1,1,3,3,0,0,3,0,0,3,0,2,3,1,0,3,1,0,3,3,2,0,4,2,2,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,1,0,1,0,0,0,1,3,1,2,0,0,0,1,0,0,1,4],[0,3,0,3,0,5,0,1,0,2,4,3,1,3,3,2,1,1,5,2,1,0,5,1,2,0,0,0,3,3,2,2,3,2,4,3,0,0,3,3,1,3,3,0,2,5,3,4,0,3,3,0,1,2,0,2,2,0,3,2,0,2,2,3,3,3,0,2,0,1,0,3,4,4,2,5,4,0,3,0,0,3,5],[0,3,0,3,0,3,0,1,0,3,3,3,3,0,3,0,2,0,2,1,1,0,2,0,1,0,0,0,2,1,0,0,1,0,3,2,0,0,3,3,1,2,3,1,0,3,3,0,0,1,0,0,0,0,0,2,0,0,0,0,0,2,3,1,2,3,0,3,0,1,0,3,2,1,0,4,3,0,1,1,0,3,3],[0,4,0,5,0,3,0,3,0,4,5,5,4,3,5,3,4,3,5,3,3,2,5,3,4,4,4,3,4,3,4,5,5,3,4,4,3,4,4,5,4,4,4,3,4,5,5,4,2,3,4,2,3,4,0,3,3,1,4,3,2,4,3,3,5,5,0,3,0,3,0,5,5,5,5,4,4,0,4,0,1,4,4],[0,4,0,4,0,3,0,3,0,3,5,4,4,2,3,2,5,1,3,2,5,1,4,2,3,2,3,3,4,3,3,3,3,2,5,4,1,3,3,5,3,4,4,0,4,4,3,1,1,3,1,0,2,3,0,2,3,0,3,0,0,4,3,1,3,4,0,3,0,2,0,4,4,4,3,4,5,0,4,0,0,3,4],[0,3,0,3,0,3,1,2,0,3,4,4,3,3,3,0,2,2,4,3,3,1,3,3,3,1,1,0,3,1,4,3,2,3,4,4,2,4,4,4,3,4,4,3,2,4,4,3,1,3,3,1,3,3,0,4,1,0,2,2,1,4,3,2,3,3,5,4,3,3,5,4,4,3,3,0,4,0,3,2,2,4,4],[0,2,0,1,0,0,0,0,0,1,2,1,3,0,0,0,0,0,2,0,1,2,1,0,0,1,0,0,0,0,3,0,0,1,0,1,1,3,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,2,2,0,3,4,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1],[0,1,0,0,0,1,0,0,0,0,4,0,4,1,4,0,3,0,4,0,3,0,4,0,3,0,3,0,4,1,5,1,4,0,0,3,0,5,0,5,2,0,1,0,0,0,2,1,4,0,1,3,0,0,3,0,0,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,4,0,5,0,3,0,2,0,3,5,4,4,3,4,3,5,3,4,3,3,0,4,3,3,3,3,3,3,2,4,4,3,1,3,4,4,5,4,4,3,4,4,1,3,5,4,3,3,3,1,2,2,3,3,1,3,1,3,3,3,5,3,3,4,5,0,3,0,3,0,3,4,3,4,4,3,0,3,0,2,4,3],[0,1,0,4,0,0,0,0,0,1,4,0,4,1,4,2,4,0,3,0,1,0,1,0,0,0,0,0,2,0,3,1,1,1,0,3,0,0,0,1,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,3,0,0,0,0,3,2,0,2,2,0,1,0,0,0,2,3,2,3,3,0,0,0,0,2,1,0],[0,5,1,5,0,3,0,3,0,5,4,4,5,1,5,3,3,0,4,3,4,3,5,3,4,3,3,2,4,3,4,3,3,0,3,3,1,4,4,3,4,4,4,3,4,5,5,3,2,3,1,1,3,3,1,3,1,1,3,3,2,4,5,3,3,5,0,4,0,3,0,4,4,3,5,3,3,0,3,4,0,4,3],[0,5,0,5,0,3,0,2,0,4,4,3,5,2,4,3,3,3,4,4,4,3,5,3,5,3,3,1,4,0,4,3,3,0,3,3,0,4,4,4,4,5,4,3,3,5,5,3,2,3,1,2,3,2,0,1,0,0,3,2,2,4,4,3,1,5,0,4,0,3,0,4,3,1,3,2,1,0,3,3,0,3,3],[0,4,0,5,0,5,0,4,0,4,5,5,5,3,4,3,3,2,5,4,4,3,5,3,5,3,4,0,4,3,4,4,3,2,4,4,3,4,5,4,4,5,5,0,3,5,5,4,1,3,3,2,3,3,1,3,1,0,4,3,1,4,4,3,4,5,0,4,0,2,0,4,3,4,4,3,3,0,4,0,0,5,5],[0,4,0,4,0,5,0,1,1,3,3,4,4,3,4,1,3,0,5,1,3,0,3,1,3,1,1,0,3,0,3,3,4,0,4,3,0,4,4,4,3,4,4,0,3,5,4,1,0,3,0,0,2,3,0,3,1,0,3,1,0,3,2,1,3,5,0,3,0,1,0,3,2,3,3,4,4,0,2,2,0,4,4],[2,4,0,5,0,4,0,3,0,4,5,5,4,3,5,3,5,3,5,3,5,2,5,3,4,3,3,4,3,4,5,3,2,1,5,4,3,2,3,4,5,3,4,1,2,5,4,3,0,3,3,0,3,2,0,2,3,0,4,1,0,3,4,3,3,5,0,3,0,1,0,4,5,5,5,4,3,0,4,2,0,3,5],[0,5,0,4,0,4,0,2,0,5,4,3,4,3,4,3,3,3,4,3,4,2,5,3,5,3,4,1,4,3,4,4,4,0,3,5,0,4,4,4,4,5,3,1,3,4,5,3,3,3,3,3,3,3,0,2,2,0,3,3,2,4,3,3,3,5,3,4,1,3,3,5,3,2,0,0,0,0,4,3,1,3,3],[0,1,0,3,0,3,0,1,0,1,3,3,3,2,3,3,3,0,3,0,0,0,3,1,3,0,0,0,2,2,2,3,0,0,3,2,0,1,2,4,1,3,3,0,0,3,3,3,0,1,0,0,2,1,0,0,3,0,3,1,0,3,0,0,1,3,0,2,0,1,0,3,3,1,3,3,0,0,1,1,0,3,3],[0,2,0,3,0,2,1,4,0,2,2,3,1,1,3,1,1,0,2,0,3,1,2,3,1,3,0,0,1,0,4,3,2,3,3,3,1,4,2,3,3,3,3,1,0,3,1,4,0,1,1,0,1,2,0,1,1,0,1,1,0,3,1,3,2,2,0,1,0,0,0,2,3,3,3,1,0,0,0,0,0,2,3],[0,5,0,4,0,5,0,2,0,4,5,5,3,3,4,3,3,1,5,4,4,2,4,4,4,3,4,2,4,3,5,5,4,3,3,4,3,3,5,5,4,5,5,1,3,4,5,3,1,4,3,1,3,3,0,3,3,1,4,3,1,4,5,3,3,5,0,4,0,3,0,5,3,3,1,4,3,0,4,0,1,5,3],[0,5,0,5,0,4,0,2,0,4,4,3,4,3,3,3,3,3,5,4,4,4,4,4,4,5,3,3,5,2,4,4,4,3,4,4,3,3,4,4,5,5,3,3,4,3,4,3,3,4,3,3,3,3,1,2,2,1,4,3,3,5,4,4,3,4,0,4,0,3,0,4,4,4,4,4,1,0,4,2,0,2,4],[0,4,0,4,0,3,0,1,0,3,5,2,3,0,3,0,2,1,4,2,3,3,4,1,4,3,3,2,4,1,3,3,3,0,3,3,0,0,3,3,3,5,3,3,3,3,3,2,0,2,0,0,2,0,0,2,0,0,1,0,0,3,1,2,2,3,0,3,0,2,0,4,4,3,3,4,1,0,3,0,0,2,4],[0,0,0,4,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,1,0,2,0,1,0,0,0,0,0,3,1,3,0,3,2,0,0,0,1,0,3,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,2,0,0,0,0,0,0,2],[0,2,1,3,0,2,0,2,0,3,3,3,3,1,3,1,3,3,3,3,3,3,4,2,2,1,2,1,4,0,4,3,1,3,3,3,2,4,3,5,4,3,3,3,3,3,3,3,0,1,3,0,2,0,0,1,0,0,1,0,0,4,2,0,2,3,0,3,3,0,3,3,4,2,3,1,4,0,1,2,0,2,3],[0,3,0,3,0,1,0,3,0,2,3,3,3,0,3,1,2,0,3,3,2,3,3,2,3,2,3,1,3,0,4,3,2,0,3,3,1,4,3,3,2,3,4,3,1,3,3,1,1,0,1,1,0,1,0,1,0,1,0,0,0,4,1,1,0,3,0,3,1,0,2,3,3,3,3,3,1,0,0,2,0,3,3],[0,0,0,0,0,0,0,0,0,0,3,0,2,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,0,3,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,2,3,0,0,0,0,0,0,0,0,3],[0,2,0,3,1,3,0,3,0,2,3,3,3,1,3,1,3,1,3,1,3,3,3,1,3,0,2,3,1,1,4,3,3,2,3,3,1,2,2,4,1,3,3,0,1,4,2,3,0,1,3,0,3,0,0,1,3,0,2,0,0,3,3,2,1,3,0,3,0,2,0,3,4,4,4,3,1,0,3,0,0,3,3],[0,2,0,1,0,2,0,0,0,1,3,2,2,1,3,0,1,1,3,0,3,2,3,1,2,0,2,0,1,1,3,3,3,0,3,3,1,1,2,3,2,3,3,1,2,3,2,0,0,1,0,0,0,0,0,0,3,0,1,0,0,2,1,2,1,3,0,3,0,0,0,3,4,4,4,3,2,0,2,0,0,2,4],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3],[0,3,0,3,0,2,0,3,0,3,3,3,2,3,2,2,2,0,3,1,3,3,3,2,3,3,0,0,3,0,3,2,2,0,2,3,1,4,3,4,3,3,2,3,1,5,4,4,0,3,1,2,1,3,0,3,1,1,2,0,2,3,1,3,1,3,0,3,0,1,0,3,3,4,4,2,1,0,2,1,0,2,4],[0,1,0,3,0,1,0,2,0,1,4,2,5,1,4,0,2,0,2,1,3,1,4,0,2,1,0,0,2,1,4,1,1,0,3,3,0,5,1,3,2,3,3,1,0,3,2,3,0,1,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,3,0,2,0,1,0,3,3,3,4,3,3,0,0,0,0,2,3],[0,0,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,3],[0,1,0,3,0,4,0,3,0,2,4,3,1,0,3,2,2,1,3,1,2,2,3,1,1,1,2,1,3,0,1,2,0,1,3,2,1,3,0,5,5,1,0,0,1,3,2,1,0,3,0,0,1,0,0,0,0,0,3,4,0,1,1,1,3,2,0,2,0,1,0,2,3,3,1,2,3,0,1,0,1,0,4],[0,0,0,1,0,3,0,3,0,2,2,1,0,0,4,0,3,0,3,1,3,0,3,0,3,0,1,0,3,0,3,1,3,0,3,3,0,0,1,2,1,1,1,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,2,2,1,2,0,0,2,0,0,0,0,2,3,3,3,3,0,0,0,0,1,4],[0,0,0,3,0,3,0,0,0,0,3,1,1,0,3,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,3,0,2,0,2,3,0,0,2,2,3,1,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,3],[2,4,0,5,0,5,0,4,0,3,4,3,3,3,4,3,3,3,4,3,4,4,5,4,5,5,5,2,3,0,5,5,4,1,5,4,3,1,5,4,3,4,4,3,3,4,3,3,0,3,2,0,2,3,0,3,0,0,3,3,0,5,3,2,3,3,0,3,0,3,0,3,4,5,4,5,3,0,4,3,0,3,4],[0,3,0,3,0,3,0,3,0,3,3,4,3,2,3,2,3,0,4,3,3,3,3,3,3,3,3,0,3,2,4,3,3,1,3,4,3,4,4,4,3,4,4,3,2,4,4,1,0,2,0,0,1,1,0,2,0,0,3,1,0,5,3,2,1,3,0,3,0,1,2,4,3,2,4,3,3,0,3,2,0,4,4],[0,3,0,3,0,1,0,0,0,1,4,3,3,2,3,1,3,1,4,2,3,2,4,2,3,4,3,0,2,2,3,3,3,0,3,3,3,0,3,4,1,3,3,0,3,4,3,3,0,1,1,0,1,0,0,0,4,0,3,0,0,3,1,2,1,3,0,4,0,1,0,4,3,3,4,3,3,0,2,0,0,3,3],[0,3,0,4,0,1,0,3,0,3,4,3,3,0,3,3,3,1,3,1,3,3,4,3,3,3,0,0,3,1,5,3,3,1,3,3,2,5,4,3,3,4,5,3,2,5,3,4,0,1,0,0,0,0,0,2,0,0,1,1,0,4,2,2,1,3,0,3,0,2,0,4,4,3,5,3,2,0,1,1,0,3,4],[0,5,0,4,0,5,0,2,0,4,4,3,3,2,3,3,3,1,4,3,4,1,5,3,4,3,4,0,4,2,4,3,4,1,5,4,0,4,4,4,4,5,4,1,3,5,4,2,1,4,1,1,3,2,0,3,1,0,3,2,1,4,3,3,3,4,0,4,0,3,0,4,4,4,3,3,3,0,4,2,0,3,4],[1,4,0,4,0,3,0,1,0,3,3,3,1,1,3,3,2,2,3,3,1,0,3,2,2,1,2,0,3,1,2,1,2,0,3,2,0,2,2,3,3,4,3,0,3,3,1,2,0,1,1,3,1,2,0,0,3,0,1,1,0,3,2,2,3,3,0,3,0,0,0,2,3,3,4,3,3,0,1,0,0,1,4],[0,4,0,4,0,4,0,0,0,3,4,4,3,1,4,2,3,2,3,3,3,1,4,3,4,0,3,0,4,2,3,3,2,2,5,4,2,1,3,4,3,4,3,1,3,3,4,2,0,2,1,0,3,3,0,0,2,0,3,1,0,4,4,3,4,3,0,4,0,1,0,2,4,4,4,4,4,0,3,2,0,3,3],[0,0,0,1,0,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,3,2,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2],[0,2,0,3,0,4,0,4,0,1,3,3,3,0,4,0,2,1,2,1,1,1,2,0,3,1,1,0,1,0,3,1,0,0,3,3,2,0,1,1,0,0,0,0,0,1,0,2,0,2,2,0,3,1,0,0,1,0,1,1,0,1,2,0,3,0,0,0,0,1,0,0,3,3,4,3,1,0,1,0,3,0,2],[0,0,0,3,0,5,0,0,0,0,1,0,2,0,3,1,0,1,3,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,4,0,0,0,2,3,0,1,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,3],[0,2,0,5,0,5,0,1,0,2,4,3,3,2,5,1,3,2,3,3,3,0,4,1,2,0,3,0,4,0,2,2,1,1,5,3,0,0,1,4,2,3,2,0,3,3,3,2,0,2,4,1,1,2,0,1,1,0,3,1,0,1,3,1,2,3,0,2,0,0,0,1,3,5,4,4,4,0,3,0,0,1,3],[0,4,0,5,0,4,0,4,0,4,5,4,3,3,4,3,3,3,4,3,4,4,5,3,4,5,4,2,4,2,3,4,3,1,4,4,1,3,5,4,4,5,5,4,4,5,5,5,2,3,3,1,4,3,1,3,3,0,3,3,1,4,3,4,4,4,0,3,0,4,0,3,3,4,4,5,0,0,4,3,0,4,5],[0,4,0,4,0,3,0,3,0,3,4,4,4,3,3,2,4,3,4,3,4,3,5,3,4,3,2,1,4,2,4,4,3,1,3,4,2,4,5,5,3,4,5,4,1,5,4,3,0,3,2,2,3,2,1,3,1,0,3,3,3,5,3,3,3,5,4,4,2,3,3,4,3,3,3,2,1,0,3,2,1,4,3],[0,4,0,5,0,4,0,3,0,3,5,5,3,2,4,3,4,0,5,4,4,1,4,4,4,3,3,3,4,3,5,5,2,3,3,4,1,2,5,5,3,5,5,2,3,5,5,4,0,3,2,0,3,3,1,1,5,1,4,1,0,4,3,2,3,5,0,4,0,3,0,5,4,3,4,3,0,0,4,1,0,4,4],[1,3,0,4,0,2,0,2,0,2,5,5,3,3,3,3,3,0,4,2,3,4,4,4,3,4,0,0,3,4,5,4,3,3,3,3,2,5,5,4,5,5,5,4,3,5,5,5,1,3,1,0,1,0,0,3,2,0,4,2,0,5,2,3,2,4,1,3,0,3,0,4,5,4,5,4,3,0,4,2,0,5,4],[0,3,0,4,0,5,0,3,0,3,4,4,3,2,3,2,3,3,3,3,3,2,4,3,3,2,2,0,3,3,3,3,3,1,3,3,3,0,4,4,3,4,4,1,1,4,4,2,0,3,1,0,1,1,0,4,1,0,2,3,1,3,3,1,3,4,0,3,0,1,0,3,1,3,0,0,1,0,2,0,0,4,4],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,3,0,3,0,2,0,3,0,1,5,4,3,3,3,1,4,2,1,2,3,4,4,2,4,4,5,0,3,1,4,3,4,0,4,3,3,3,2,3,2,5,3,4,3,2,2,3,0,0,3,0,2,1,0,1,2,0,0,0,0,2,1,1,3,1,0,2,0,4,0,3,4,4,4,5,2,0,2,0,0,1,3],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,4,2,1,1,0,1,0,3,2,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,2,0,0,0,1,4,0,4,2,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,0,0,2,0,2,1,0,0,1,2,1,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,2],[0,4,0,4,0,4,0,3,0,4,4,3,4,2,4,3,2,0,4,4,4,3,5,3,5,3,3,2,4,2,4,3,4,3,1,4,0,2,3,4,4,4,3,3,3,4,4,4,3,4,1,3,4,3,2,1,2,1,3,3,3,4,4,3,3,5,0,4,0,3,0,4,3,3,3,2,1,0,3,0,0,3,3],[0,4,0,3,0,3,0,3,0,3,5,5,3,3,3,3,4,3,4,3,3,3,4,4,4,3,3,3,3,4,3,5,3,3,1,3,2,4,5,5,5,5,4,3,4,5,5,3,2,2,3,3,3,3,2,3,3,1,2,3,2,4,3,3,3,4,0,4,0,2,0,4,3,2,2,1,2,0,3,0,0,4,1]],n.prototype=new r,t.SJISContextAnalysis=n,i.prototype=new r,t.EUCJPContextAnalysis=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3);var i;!function(e){e[e.Trace=1]=\"Trace\",e[e.Debug=2]=\"Debug\",e[e.Info=3]=\"Info\",e[e.Warning=4]=\"Warning\",e[e.Error=5]=\"Error\",e[e.Critical=6]=\"Critical\",e[e.Off=7]=\"Off\"}(i=t.LogLevel||(t.LogLevel={}));let o=i.Info;const s=new n.EventEmitter;t.Log={get logLevel(){return o},set logLevel(e){o!==e&&(o=e,s.fire(e))},get onDidChangeLogLevel(){return s.event}}},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(8),o=r(122),s=r(123),a=r(3),c=r(29),u=r(18);o.extend(s);const l=i.loadMessageBundle(r(0).join(__dirname,\"timelineProvider.ts\"));class h extends a.TimelineItem{constructor(e,t,r,n,i,o){const s=r.indexOf(\"\\n\");super(-1!==s?`${r.substring(0,s)} …`:r,n),this.ref=e,this.previousRef=t,this.message=r,this.id=i,this.contextValue=o}static is(e){return e instanceof h}get shortRef(){return this.shortenRef(this.ref)}get shortPreviousRef(){return this.shortenRef(this.previousRef)}shortenRef(e){return\"\"===e||\"~\"===e||\"HEAD\"===e?e:e.endsWith(\"^\")?`${e.substr(0,8)}^`:e.substr(0,8)}}t.GitTimelineItem=h;class p{constructor(e){this._model=e,this._onDidChange=new a.EventEmitter,this.id=\"git-history\",this.label=l(0,null),this._disposable=a.Disposable.from(e.onDidOpenRepository(this.onRepositoriesChanged,this),a.workspace.registerTimelineProvider(\"*\",this))}get onDidChange(){return this._onDidChange.event}dispose(){this._disposable.dispose()}async provideTimeline(e,t,r){var n,i,s,u,p,d;const f=this._model.getRepository(e);if(!f)return null===(n=this._repoDisposable)||void 0===n||n.dispose(),this._repoStatusDate=void 0,this._repo=void 0,{items:[]};let g;if((null===(i=this._repo)||void 0===i?void 0:i.root)!==f.root&&(null===(s=this._repoDisposable)||void 0===s||s.dispose(),this._repo=f,this._repoStatusDate=new Date,this._repoDisposable=a.Disposable.from(f.onDidChangeRepository(e=>this.onRepositoryChanged(f,e)),f.onDidRunGitStatus(()=>this.onRepositoryStatusChanged(f)))),\"string\"==typeof t.limit)try{const r=await this._model.git.exec(f.root,[\"rev-list\",\"--count\",`${t.limit}..`,\"--\",e.fsPath]);r.exitCode||(g=Number(r.stdout)+1)}catch(e){g=void 0}else g=void 0===t.limit?void 0:t.limit+1;const m=await f.logFile(e,{maxEntries:g,hash:t.cursor,reverse:t.before}),y=void 0!==g&&!t.before&&m.length>=g,v=m.length?{more:y,cursors:{before:null===(u=m[0])||void 0===u?void 0:u.hash,after:null===(p=m[m.length-(y?1:2)])||void 0===p?void 0:p.hash}}:void 0;let w;void 0!==g&&m.length>=g&&m.splice(m.length-1,1);const b=m.map(t=>{var r;const n=t.commitDate;w=o(n);const i=new h(t.hash,`${t.hash}^`,t.message,null!==(r=null===n||void 0===n?void 0:n.getTime())&&void 0!==r?r:0,t.hash,\"git:file:commit\");return i.iconPath=new a.ThemeIcon(\"git-commit\"),i.description=t.authorName,i.detail=`${t.authorName} (${t.authorEmail}) — ${t.hash.substr(0,8)}\\n${w.format(\"MMMM Do, YYYY h:mma\")}\\n\\n${t.message}`,i.command={title:\"Open Comparison\",command:\"git.timeline.openDiff\",arguments:[i,e,this.id]},i});if(void 0===t.cursor||t.before){const t=l(1,null),r=f.indexGroup.resourceStates.find(t=>t.resourceUri.fsPath===e.fsPath);if(r){const n=null!==(d=this._repoStatusDate)&&void 0!==d?d:new Date;w=o(n);const i=new h(\"~\",\"HEAD\",l(2,null),n.getTime(),\"index\",\"git:file:index\");i.iconPath=new a.ThemeIcon(\"git-commit\"),i.description=t,i.detail=l(3,null,t,l(4,null),w.format(\"MMMM Do, YYYY h:mma\"),c.Resource.getStatusText(r.type)),i.command={title:\"Open Comparison\",command:\"git.timeline.openDiff\",arguments:[i,e,this.id]},b.splice(0,0,i)}const n=f.workingTreeGroup.resourceStates.find(t=>t.resourceUri.fsPath===e.fsPath);if(n){const i=new Date;w=o(i);const s=new h(\"\",r?\"~\":\"HEAD\",l(5,null),i.getTime(),\"working\",\"git:file:working\");s.iconPath=new a.ThemeIcon(\"git-commit\"),s.description=t,s.detail=l(6,null,t,l(7,null),w.format(\"MMMM Do, YYYY h:mma\"),c.Resource.getStatusText(n.type)),s.command={title:\"Open Comparison\",command:\"git.timeline.openDiff\",arguments:[s,e,this.id]},b.splice(0,0,s)}}return{items:b,paging:v}}onRepositoriesChanged(e){this.fireChanged()}onRepositoryChanged(e,t){this.fireChanged()}onRepositoryStatusChanged(e){this._repoStatusDate=new Date,this.fireChanged()}fireChanged(){this._onDidChange.fire({reset:!0})}}n([u.debounce(500)],p.prototype,\"fireChanged\",null),t.GitTimelineProvider=p},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0),i=r(132),o=r(45),s=Object.keys(process.binding(\"natives\")),a=o.prototype.require;t.makePatchingRequire=function(e){var t={};return function(r){var c=a.apply(this,arguments);if(e[r]){var u=o._resolveFilename(r,this);if(t.hasOwnProperty(u))return t[u];var l=void 0;if(s.indexOf(r)<0)try{l=a.call(this,n.join(r,\"package.json\")).version}catch(e){return c}else l=process.version.substring(1);var h=l.indexOf(\"-\");h>=0&&(l=l.substring(0,h));for(var p=c,d=0,f=e[r];d<f.length;d++){var g=f[d];i.satisfies(l,g.versionSpecifier)&&(p=g.patch(p,u))}return t[u]=p}return c}}},function(e,t){e.exports=require(\"module\")},function(e,t){e.exports=require(\"crypto\")},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.AvailabilityData=r(150),t.Base=r(48),t.ContextTagKeys=r(151),t.Data=r(152),t.DataPoint=r(153),t.DataPointType=r(49),t.Domain=r(10),t.Envelope=r(154),t.EventData=r(50),t.ExceptionData=r(155),t.ExceptionDetails=r(156),t.MessageData=r(157),t.MetricData=r(158),t.PageViewData=r(159),t.RemoteDependencyData=r(160),t.RequestData=r(161),t.SeverityLevel=r(162),t.StackFrame=r(163)},function(e,t,r){\"use strict\";var n=function(){return function(){}}();e.exports=n},function(e,t,r){\"use strict\";var n;!function(e){e[e.Measurement=0]=\"Measurement\",e[e.Aggregation=1]=\"Aggregation\"}(n||(n={})),e.exports=n},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.properties={},t.measurements={},t}return n(t,e),t}(r(10));e.exports=i},function(e,t,r){\"use strict\";var n=r(12),i=r(6),o=function(){function e(t){if(e.INSTANCE)throw new Error(\"Performance tracking should be configured from the applicationInsights object\");e.INSTANCE=this,this._isInitialized=!1,this._client=t}return e.prototype.enable=function(t){var r=this;this._isEnabled=t,this._isEnabled&&!this._isInitialized&&(this._isInitialized=!0),t?this._handle||(this._lastCpus=n.cpus(),this._lastRequests={totalRequestCount:e._totalRequestCount,totalFailedRequestCount:e._totalFailedRequestCount,time:+new Date},\"function\"==typeof process.cpuUsage&&(this._lastAppCpuUsage=process.cpuUsage()),this._lastHrtime=process.hrtime(),this._handle=setInterval(function(){return r.trackPerformance()},6e4),this._handle.unref()):this._handle&&(clearInterval(this._handle),this._handle=void 0)},e.countRequest=function(t,r){var n=this;if(e.isEnabled()){var o=+new Date;t&&r?\"function\"==typeof r.once&&r.once(\"finish\",function(){var t=+new Date;n._lastRequestExecutionTime=t-o,e._totalRequestCount++,r.statusCode>=400&&e._totalFailedRequestCount++}):i.warn(\"AutoCollectPerformance.countRequest was called with invalid parameters: \",!!t,!!r)}},e.prototype.isInitialized=function(){return this._isInitialized},e.isEnabled=function(){return e.INSTANCE&&e.INSTANCE._isEnabled},e.prototype.trackPerformance=function(){this._trackCpu(),this._trackMemory(),this._trackNetwork()},e.prototype._trackCpu=function(){var e=n.cpus();if(e&&e.length&&this._lastCpus&&e.length===this._lastCpus.length){for(var t=0,r=0,i=0,o=0,s=0,a=0;e&&a<e.length;a++){var c=e[a],u=this._lastCpus[a],l=(c.model,c.speed,c.times),h=u.times;t+=l.user-h.user||0,r+=l.sys-h.sys||0,i+=l.nice-h.nice||0,o+=l.idle-h.idle||0,s+=l.irq-h.irq||0}var p=void 0;if(\"function\"==typeof process.cpuUsage){var d=process.cpuUsage(),f=process.hrtime(),g=d.user-this._lastAppCpuUsage.user+(d.system-this._lastAppCpuUsage.system)||0;if(void 0!==this._lastHrtime&&2===this._lastHrtime.length)p=100*g/((1e6*(f[0]-this._lastHrtime[0])+(f[1]-this._lastHrtime[1])/1e3||0)*e.length);this._lastAppCpuUsage=d,this._lastHrtime=f}var m=t+r+i+o+s||1;this._client.trackMetric({name:\"\\\\Processor(_Total)\\\\% Processor Time\",value:(m-o)/m*100}),this._client.trackMetric({name:\"\\\\Process(??APP_WIN32_PROC??)\\\\% Processor Time\",value:p||t/m*100})}this._lastCpus=e},e.prototype._trackMemory=function(){var e=n.freemem(),t=process.memoryUsage().rss;this._client.trackMetric({name:\"\\\\Process(??APP_WIN32_PROC??)\\\\Private Bytes\",value:t}),this._client.trackMetric({name:\"\\\\Memory\\\\Available Bytes\",value:e})},e.prototype._trackNetwork=function(){var t=this._lastRequests,r={totalRequestCount:e._totalRequestCount,totalFailedRequestCount:e._totalFailedRequestCount,time:+new Date},n=r.totalRequestCount-t.totalRequestCount||0,i=(t.totalFailedRequestCount,r.time-t.time),o=i/1e3;if(i>0){var s=n/o;this._client.trackMetric({name:\"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Requests/Sec\",value:s}),this._client.trackMetric({name:\"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Request Execution Time\",value:e._lastRequestExecutionTime})}this._lastRequests=r},e.prototype.dispose=function(){e.INSTANCE=null,this.enable(!1),this._isInitialized=!1},e._totalRequestCount=0,e._totalFailedRequestCount=0,e._lastRequestExecutionTime=0,e}();e.exports=o},function(e,t,r){\"use strict\";var n=function(){function e(){}return e.prototype.getUrl=function(){return this.url},e.prototype.RequestParser=function(){this.startTime=+new Date},e.prototype._setStatus=function(e,t){var r=+new Date;this.duration=r-this.startTime,this.statusCode=e;var n=this.properties||{};if(t)if(\"string\"==typeof t)n.error=t;else if(t instanceof Error)n.error=t.message;else if(\"object\"==typeof t)for(var i in t)n[i]=t[i]&&t[i].toString&&t[i].toString();this.properties=n},e.prototype._isSuccess=function(){return 0<this.statusCode&&this.statusCode<400},e}();e.exports=n},function(e,t,r){\"use strict\";var n=r(20),i=r(32),o=r(6),s=r(11),a=r(24),c=r(175),u=r(23),l=r(51),h=function(){function e(t){if(e.INSTANCE)throw new Error(\"Server request tracking should be configured from the applicationInsights object\");e.INSTANCE=this,this._client=t}return e.prototype.enable=function(e){this._isEnabled=e,(this._isAutoCorrelating||this._isEnabled||l.isEnabled())&&!this._isInitialized&&(this.useAutoCorrelation(this._isAutoCorrelating),this._initialize())},e.prototype.useAutoCorrelation=function(e){e&&!this._isAutoCorrelating?u.CorrelationContextManager.enable():!e&&this._isAutoCorrelating&&u.CorrelationContextManager.disable(),this._isAutoCorrelating=e},e.prototype.isInitialized=function(){return this._isInitialized},e.prototype.isAutoCorrelating=function(){return this._isAutoCorrelating},e.prototype._generateCorrelationContext=function(e){if(this._isAutoCorrelating)return u.CorrelationContextManager.generateContextObject(e.getOperationId(this._client.context.tags),e.getRequestId(),e.getOperationName(this._client.context.tags),e.getCorrelationContextHeader())},e.prototype._initialize=function(){var t=this;this._isInitialized=!0;var r=function(r){if(r){if(\"function\"!=typeof r)throw new Error(\"onRequest handler must be a function\");return function(n,i){var o=n&&!n[e.alreadyAutoCollectedFlag];if(n&&o){var s=new c(n),a=t._generateCorrelationContext(s);u.CorrelationContextManager.runWithContext(a,function(){t._isEnabled&&(n[e.alreadyAutoCollectedFlag]=!0,e.trackRequest(t._client,{request:n,response:i},s)),l.countRequest(n,i),\"function\"==typeof r&&r(n,i)})}else\"function\"==typeof r&&r(n,i)}}},o=function(e){var t=e.addListener.bind(e);e.addListener=function(e,n){switch(e){case\"request\":case\"checkContinue\":return t(e,r(n));default:return t(e,n)}},e.on=e.addListener},s=n.createServer;n.createServer=function(e){var t=s(r(e));return o(t),t};var a=i.createServer;i.createServer=function(e,t){var n=a(e,r(t));return o(n),n}},e.trackRequestSync=function(t,r){if(r.request&&r.response&&t){e.addResponseCorrelationIdHeader(t,r.response);var n=u.CorrelationContextManager.getCurrentContext(),i=new c(r.request,n&&n.operation.parentId);n&&(n.operation.id=i.getOperationId(t.context.tags)||n.operation.id,n.operation.name=i.getOperationName(t.context.tags)||n.operation.name,n.operation.parentId=i.getRequestId()||n.operation.parentId,n.customProperties.addHeaderData(i.getCorrelationContextHeader())),e.endRequest(t,i,r,r.duration,r.error)}else o.info(\"AutoCollectHttpRequests.trackRequestSync was called with invalid parameters: \",!r.request,!r.response,!t)},e.trackRequest=function(t,r,n){if(r.request&&r.response&&t){var i=u.CorrelationContextManager.getCurrentContext(),a=n||new c(r.request,i&&i.operation.parentId);s.canIncludeCorrelationHeader(t,a.getUrl())&&e.addResponseCorrelationIdHeader(t,r.response),i&&!n&&(i.operation.id=a.getOperationId(t.context.tags)||i.operation.id,i.operation.name=a.getOperationName(t.context.tags)||i.operation.name,i.operation.parentId=a.getOperationParentId(t.context.tags)||i.operation.parentId,i.customProperties.addHeaderData(a.getCorrelationContextHeader())),r.response.once&&r.response.once(\"finish\",function(){e.endRequest(t,a,r,null,null)}),r.request.on&&r.request.on(\"error\",function(n){e.endRequest(t,a,r,null,n)})}else o.info(\"AutoCollectHttpRequests.trackRequest was called with invalid parameters: \",!r.request,!r.response,!t)},e.addResponseCorrelationIdHeader=function(e,t){if(e.config&&e.config.correlationId&&t.getHeader&&t.setHeader&&!t.headersSent){var r=t.getHeader(a.requestContextHeader);if(r){var n=r.split(\",\"),i=a.requestContextSourceKey+\"=\";n.some(function(e){return e.substring(0,i.length)===i})||t.setHeader(a.requestContextHeader,r+\",\"+a.requestContextSourceKey+\"=\"+e.config.correlationId)}else t.setHeader(a.requestContextHeader,a.requestContextSourceKey+\"=\"+e.config.correlationId)}},e.endRequest=function(e,t,r,n,i){i?t.onError(i,n):t.onResponse(r.response,n);var o=t.getRequestTelemetry(r);if(o.tagOverrides=t.getRequestTags(e.context.tags),r.tagOverrides)for(var s in r.tagOverrides)o.tagOverrides[s]=r.tagOverrides[s];o.contextObjects=o.contextObjects||{},o.contextObjects[\"http.ServerRequest\"]=r.request,o.contextObjects[\"http.ServerResponse\"]=r.response,e.trackRequest(o)},e.prototype.dispose=function(){e.INSTANCE=null,this.enable(!1),this._isInitialized=!1},e.alreadyAutoCollectedFlag=\"_appInsightsAutoCollected\",e}();e.exports=h},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(8).loadMessageBundle(r(0).join(__dirname,\"main.ts\")),i=r(3),o=r(26),s=r(116),a=r(120),c=r(124),u=r(125),l=r(126),h=r(127),p=r(5),d=r(128),f=r(186),g=r(188),m=r(0),y=r(2),v=r(190),w=r(43),b=[];async function C(e,t,r,d){const g=i.workspace.getConfiguration(\"git\").get(\"path\"),m=await o.findGit(g,e=>t.appendLine(n(0,null,e)));let y,b={};try{y=await v.createIPCServer(),d.push(y),b={...b,...y.getEnv()}}catch(e){}if(y){const e=new h.Askpass(y);d.push(e),b={...b,...e.getEnv()}}else b={...b,...h.Askpass.getDisabledEnv()};const C=new o.Git({gitPath:m.path,version:m.version,env:b}),_=new s.Model(C,e.globalState,t);d.push(_);const S=()=>i.commands.executeCommand(\"setContext\",\"gitOpenRepositoryCount\",`${_.repositories.length}`);_.onDidOpenRepository(S,null,d),_.onDidCloseRepository(S,null,d),S(),t.appendLine(n(1,null,m.version,m.path));const k=e=>{const r=e.split(/\\r?\\n/gm);for(;/^\\s*$/.test(r[r.length-1]);)r.pop();t.appendLine(r.join(\"\\n\"))};return C.onOutput.addListener(\"log\",k),d.push(p.toDisposable(()=>C.onOutput.removeListener(\"log\",k))),d.push(new a.CommandCenter(C,_,t,r),new c.GitContentProvider(_),new u.GitFileSystemProvider(_),new l.GitDecorations(_),new f.GitProtocolHandler,new w.GitTimelineProvider(_)),await async function(e){const t=i.workspace.getConfiguration(\"git\");if(!0===t.get(\"ignoreLegacyWarning\"))return;if(!/^[01]/.test(e.version))return;const r=n(5,null),o=n(6,null),s=await i.window.showWarningMessage(n(7,null,e.version),r,o);s===r?i.commands.executeCommand(\"vscode.open\",i.Uri.parse(\"https://git-scm.com/\")):s===o&&await t.update(\"ignoreLegacyWarning\",!0,!0)}(m),_}async function _(e){if(\"file\"!==e.uri.scheme)return!1;const t=m.join(e.uri.fsPath,\".git\");try{return(await new Promise((e,r)=>y.stat(t,(t,n)=>t?r(t):e(n)))).isDirectory()}catch(e){return!1}}t.deactivate=async function(){for(const e of b)await e()},t.activate=async function(e){const t=[];e.subscriptions.push(new i.Disposable(()=>i.Disposable.from(...t).dispose()));const o=i.window.createOutputChannel(\"Git\");i.commands.registerCommand(\"git.showOutput\",()=>o.show()),t.push(o);const{name:s,version:a,aiKey:c}=r(191),u=new d.default(s,a,c);if(b.push(()=>u.dispose()),!i.workspace.getConfiguration(\"git\",null).get(\"enabled\")){const r=p.filterEvent(i.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git\")),n=p.filterEvent(r,()=>!0===i.workspace.getConfiguration(\"git\",null).get(\"enabled\")),s=new g.GitExtensionImpl;return p.eventToPromise(n).then(async()=>s.model=await C(e,o,u,t)),s}try{const r=await C(e,o,u,t);return new g.GitExtensionImpl(r)}catch(e){if(!/Git installation not found/.test(e.message||\"\"))throw e;return console.warn(e.message),o.appendLine(e.message),i.commands.executeCommand(\"setContext\",\"git.missing\",!0),async function(){const e=i.workspace.getConfiguration(\"git\");if(!0===e.get(\"ignoreMissingGitWarning\"))return;if(!i.workspace.workspaceFolders)return;if((await Promise.all(i.workspace.workspaceFolders.map(_))).every(e=>!e))return;const t=n(2,null),r=n(3,null),o=await i.window.showWarningMessage(n(4,null),t,r);o===t?i.commands.executeCommand(\"vscode.open\",i.Uri.parse(\"https://git-scm.com/\")):o===r&&await e.update(\"ignoreMissingGitWarning\",!0,!0)}(),new g.GitExtensionImpl}}},function(e,t,r){e.exports=u,u.sync=function(e,t){for(var r=c(e,t=t||{}),n=r.env,o=r.ext,u=r.extExe,l=[],h=0,p=n.length;h<p;h++){var d=n[h];'\"'===d.charAt(0)&&'\"'===d.slice(-1)&&(d=d.slice(1,-1));var f=i.join(d,e);!d&&/^\\.[\\\\\\/]/.test(e)&&(f=e.slice(0,2)+f);for(var g=0,m=o.length;g<m;g++){var y=f+o[g];try{if(s.sync(y,{pathExt:u})){if(!t.all)return y;l.push(y)}}catch(e){}}}if(t.all&&l.length)return l;if(t.nothrow)return null;throw a(e)};var n=\"win32\"===process.platform||\"cygwin\"===process.env.OSTYPE||\"msys\"===process.env.OSTYPE,i=r(0),o=n?\";\":\":\",s=r(56);function a(e){var t=new Error(\"not found: \"+e);return t.code=\"ENOENT\",t}function c(e,t){var r=t.colon||o,i=t.path||process.env.PATH||\"\",s=[\"\"];i=i.split(r);var a=\"\";return n&&(i.unshift(process.cwd()),s=(a=t.pathExt||process.env.PATHEXT||\".EXE;.CMD;.BAT;.COM\").split(r),-1!==e.indexOf(\".\")&&\"\"!==s[0]&&s.unshift(\"\")),(e.match(/\\//)||n&&e.match(/\\\\/))&&(i=[\"\"]),{env:i,ext:s,extExe:a}}function u(e,t,r){\"function\"==typeof t&&(r=t,t={});var n=c(e,t),o=n.env,u=n.ext,l=n.extExe,h=[];!function n(c,p){if(c===p)return t.all&&h.length?r(null,h):r(a(e));var d=o[c];'\"'===d.charAt(0)&&'\"'===d.slice(-1)&&(d=d.slice(1,-1));var f=i.join(d,e);!d&&/^\\.[\\\\\\/]/.test(e)&&(f=e.slice(0,2)+f),function e(i,o){if(i===o)return n(c+1,p);var a=u[i];s(f+a,{pathExt:l},function(n,s){if(!n&&s){if(!t.all)return r(null,f+a);h.push(f+a)}return e(i+1,o)})}(0,u.length)}(0,o.length)}},function(e,t,r){var n;r(2);function i(e,t,r){if(\"function\"==typeof t&&(r=t,t={}),!r){if(\"function\"!=typeof Promise)throw new TypeError(\"callback not provided\");return new Promise(function(r,n){i(e,t||{},function(e,t){e?n(e):r(t)})})}n(e,t||{},function(e,n){e&&(\"EACCES\"===e.code||t&&t.ignoreErrors)&&(e=null,n=!1),r(e,n)})}n=\"win32\"===process.platform||global.TESTING_WINDOWS?r(57):r(58),e.exports=i,i.sync=function(e,t){try{return n.sync(e,t||{})}catch(e){if(t&&t.ignoreErrors||\"EACCES\"===e.code)return!1;throw e}}},function(e,t,r){e.exports=o,o.sync=function(e,t){return i(n.statSync(e),e,t)};var n=r(2);function i(e,t,r){return!(!e.isSymbolicLink()&&!e.isFile())&&function(e,t){var r=void 0!==t.pathExt?t.pathExt:process.env.PATHEXT;if(!r)return!0;if(-1!==(r=r.split(\";\")).indexOf(\"\"))return!0;for(var n=0;n<r.length;n++){var i=r[n].toLowerCase();if(i&&e.substr(-i.length).toLowerCase()===i)return!0}return!1}(t,r)}function o(e,t,r){n.stat(e,function(n,o){r(n,!n&&i(o,e,t))})}},function(e,t,r){e.exports=i,i.sync=function(e,t){return o(n.statSync(e),t)};var n=r(2);function i(e,t,r){n.stat(e,function(e,n){r(e,!e&&o(n,t))})}function o(e,t){return e.isFile()&&function(e,t){var r=e.mode,n=e.uid,i=e.gid,o=void 0!==t.uid?t.uid:process.getuid&&process.getuid(),s=void 0!==t.gid?t.gid:process.getgid&&process.getgid(),a=parseInt(\"100\",8),c=parseInt(\"010\",8),u=parseInt(\"001\",8);return r&u||r&c&&i===s||r&a&&n===o||r&(a|c)&&0===o}(e,t)}},function(e,t,r){\"use strict\";var n=r(15).Buffer,i=r(60),o=e.exports;o.encodings=null,o.defaultCharUnicode=\"�\",o.defaultCharSingleByte=\"?\",o.encode=function(e,t,r){e=\"\"+(e||\"\");var i=o.getEncoder(t,r),s=i.write(e),a=i.end();return a&&a.length>0?n.concat([s,a]):s},o.decode=function(e,t,r){\"string\"==typeof e&&(o.skipDecodeWarning||(console.error(\"Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding\"),o.skipDecodeWarning=!0),e=n.from(\"\"+(e||\"\"),\"binary\"));var i=o.getDecoder(t,r),s=i.write(e),a=i.end();return a?s+a:s},o.encodingExists=function(e){try{return o.getCodec(e),!0}catch(e){return!1}},o.toEncoding=o.encode,o.fromEncoding=o.decode,o._codecDataCache={},o.getCodec=function(e){o.encodings||(o.encodings=r(61));for(var t=o._canonicalizeEncoding(e),n={};;){var i=o._codecDataCache[t];if(i)return i;var s=o.encodings[t];switch(typeof s){case\"string\":t=s;break;case\"object\":for(var a in s)n[a]=s[a];n.encodingName||(n.encodingName=t),t=s.type;break;case\"function\":return n.encodingName||(n.encodingName=t),i=new s(n,o),o._codecDataCache[n.encodingName]=i,i;default:throw new Error(\"Encoding not recognized: '\"+e+\"' (searched as: '\"+t+\"')\")}}},o._canonicalizeEncoding=function(e){return(\"\"+e).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g,\"\")},o.getEncoder=function(e,t){var r=o.getCodec(e),n=new r.encoder(t,r);return r.bomAware&&t&&t.addBOM&&(n=new i.PrependBOM(n,t)),n},o.getDecoder=function(e,t){var r=o.getCodec(e),n=new r.decoder(t,r);return!r.bomAware||t&&!1===t.stripBOM||(n=new i.StripBOM(n,t)),n};var s=\"undefined\"!=typeof process&&process.versions&&process.versions.node;if(s){var a=s.split(\".\").map(Number);(a[0]>0||a[1]>=10)&&r(75)(o),r(76)(o)}},function(e,t,r){\"use strict\";function n(e,t){this.encoder=e,this.addBOM=!0}function i(e,t){this.decoder=e,this.pass=!1,this.options=t||{}}t.PrependBOM=n,n.prototype.write=function(e){return this.addBOM&&(e=\"\\ufeff\"+e,this.addBOM=!1),this.encoder.write(e)},n.prototype.end=function(){return this.encoder.end()},t.StripBOM=i,i.prototype.write=function(e){var t=this.decoder.write(e);return this.pass||!t?t:(\"\\ufeff\"===t[0]&&(t=t.slice(1),\"function\"==typeof this.options.stripBOM&&this.options.stripBOM()),this.pass=!0,t)},i.prototype.end=function(){return this.decoder.end()}},function(e,t,r){\"use strict\";for(var n=[r(62),r(63),r(64),r(65),r(66),r(67),r(68),r(69)],i=0;i<n.length;i++){e=n[i];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])}},function(e,t,r){\"use strict\";var n=r(15).Buffer;function i(e,t){this.enc=e.encodingName,this.bomAware=e.bomAware,\"base64\"===this.enc?this.encoder=c:\"cesu8\"===this.enc&&(this.enc=\"utf8\",this.encoder=u,\"💩\"!==n.from(\"eda0bdedb2a9\",\"hex\").toString()&&(this.decoder=l,this.defaultCharUnicode=t.defaultCharUnicode))}e.exports={utf8:{type:\"_internal\",bomAware:!0},cesu8:{type:\"_internal\",bomAware:!0},unicode11utf8:\"utf8\",ucs2:{type:\"_internal\",bomAware:!0},utf16le:\"ucs2\",binary:{type:\"_internal\"},base64:{type:\"_internal\"},hex:{type:\"_internal\"},_internal:i},i.prototype.encoder=a,i.prototype.decoder=s;var o=r(35).StringDecoder;function s(e,t){o.call(this,t.enc)}function a(e,t){this.enc=t.enc}function c(e,t){this.prevStr=\"\"}function u(e,t){}function l(e,t){this.acc=0,this.contBytes=0,this.accBytes=0,this.defaultCharUnicode=t.defaultCharUnicode}o.prototype.end||(o.prototype.end=function(){}),s.prototype=o.prototype,a.prototype.write=function(e){return n.from(e,this.enc)},a.prototype.end=function(){},c.prototype.write=function(e){var t=(e=this.prevStr+e).length-e.length%4;return this.prevStr=e.slice(t),e=e.slice(0,t),n.from(e,\"base64\")},c.prototype.end=function(){return n.from(this.prevStr,\"base64\")},u.prototype.write=function(e){for(var t=n.alloc(3*e.length),r=0,i=0;i<e.length;i++){var o=e.charCodeAt(i);o<128?t[r++]=o:o<2048?(t[r++]=192+(o>>>6),t[r++]=128+(63&o)):(t[r++]=224+(o>>>12),t[r++]=128+(o>>>6&63),t[r++]=128+(63&o))}return t.slice(0,r)},u.prototype.end=function(){},l.prototype.write=function(e){for(var t=this.acc,r=this.contBytes,n=this.accBytes,i=\"\",o=0;o<e.length;o++){var s=e[o];128!=(192&s)?(r>0&&(i+=this.defaultCharUnicode,r=0),s<128?i+=String.fromCharCode(s):s<224?(t=31&s,r=1,n=1):s<240?(t=15&s,r=2,n=1):i+=this.defaultCharUnicode):r>0?(t=t<<6|63&s,n++,0===--r&&(i+=2===n&&t<128&&t>0?this.defaultCharUnicode:3===n&&t<2048?this.defaultCharUnicode:String.fromCharCode(t))):i+=this.defaultCharUnicode}return this.acc=t,this.contBytes=r,this.accBytes=n,i},l.prototype.end=function(){var e=0;return this.contBytes>0&&(e+=this.defaultCharUnicode),e}},function(e,t,r){\"use strict\";var n=r(15).Buffer;function i(){}function o(){}function s(){this.overflowByte=-1}function a(e,t){this.iconv=t}function c(e,t){void 0===(e=e||{}).addBOM&&(e.addBOM=!0),this.encoder=t.iconv.getEncoder(\"utf-16le\",e)}function u(e,t){this.decoder=null,this.initialBytes=[],this.initialBytesLen=0,this.options=e||{},this.iconv=t.iconv}function l(e,t){var r=t||\"utf-16le\";if(e.length>=2)if(254==e[0]&&255==e[1])r=\"utf-16be\";else if(255==e[0]&&254==e[1])r=\"utf-16le\";else{for(var n=0,i=0,o=Math.min(e.length-e.length%2,64),s=0;s<o;s+=2)0===e[s]&&0!==e[s+1]&&i++,0!==e[s]&&0===e[s+1]&&n++;i>n?r=\"utf-16be\":i<n&&(r=\"utf-16le\")}return r}t.utf16be=i,i.prototype.encoder=o,i.prototype.decoder=s,i.prototype.bomAware=!0,o.prototype.write=function(e){for(var t=n.from(e,\"ucs2\"),r=0;r<t.length;r+=2){var i=t[r];t[r]=t[r+1],t[r+1]=i}return t},o.prototype.end=function(){},s.prototype.write=function(e){if(0==e.length)return\"\";var t=n.alloc(e.length+1),r=0,i=0;for(-1!==this.overflowByte&&(t[0]=e[0],t[1]=this.overflowByte,r=1,i=2);r<e.length-1;r+=2,i+=2)t[i]=e[r+1],t[i+1]=e[r];return this.overflowByte=r==e.length-1?e[e.length-1]:-1,t.slice(0,i).toString(\"ucs2\")},s.prototype.end=function(){},t.utf16=a,a.prototype.encoder=c,a.prototype.decoder=u,c.prototype.write=function(e){return this.encoder.write(e)},c.prototype.end=function(){return this.encoder.end()},u.prototype.write=function(e){if(!this.decoder){if(this.initialBytes.push(e),this.initialBytesLen+=e.length,this.initialBytesLen<16)return\"\";var t=l(e=n.concat(this.initialBytes),this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options),this.initialBytes.length=this.initialBytesLen=0}return this.decoder.write(e)},u.prototype.end=function(){if(!this.decoder){var e=n.concat(this.initialBytes),t=l(e,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options);var r=this.decoder.write(e),i=this.decoder.end();return i?r+i:r}return this.decoder.end()}},function(e,t,r){\"use strict\";var n=r(15).Buffer;function i(e,t){this.iconv=t}t.utf7=i,t.unicode11utf7=\"utf7\",i.prototype.encoder=s,i.prototype.decoder=a,i.prototype.bomAware=!0;var o=/[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;function s(e,t){this.iconv=t.iconv}function a(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=\"\"}s.prototype.write=function(e){return n.from(e.replace(o,function(e){return\"+\"+(\"+\"===e?\"\":this.iconv.encode(e,\"utf16-be\").toString(\"base64\").replace(/=+$/,\"\"))+\"-\"}.bind(this)))},s.prototype.end=function(){};for(var c=/[A-Za-z0-9\\/+]/,u=[],l=0;l<256;l++)u[l]=c.test(String.fromCharCode(l));var h=\"+\".charCodeAt(0),p=\"-\".charCodeAt(0),d=\"&\".charCodeAt(0);function f(e,t){this.iconv=t}function g(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=n.alloc(6),this.base64AccumIdx=0}function m(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=\"\"}a.prototype.write=function(e){for(var t=\"\",r=0,i=this.inBase64,o=this.base64Accum,s=0;s<e.length;s++)if(i){if(!u[e[s]]){if(s==r&&e[s]==p)t+=\"+\";else{var a=o+e.slice(r,s).toString();t+=this.iconv.decode(n.from(a,\"base64\"),\"utf16-be\")}e[s]!=p&&s--,r=s+1,i=!1,o=\"\"}}else e[s]==h&&(t+=this.iconv.decode(e.slice(r,s),\"ascii\"),r=s+1,i=!0);if(i){var c=(a=o+e.slice(r).toString()).length-a.length%8;o=a.slice(c),a=a.slice(0,c),t+=this.iconv.decode(n.from(a,\"base64\"),\"utf16-be\")}else t+=this.iconv.decode(e.slice(r),\"ascii\");return this.inBase64=i,this.base64Accum=o,t},a.prototype.end=function(){var e=\"\";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(n.from(this.base64Accum,\"base64\"),\"utf16-be\")),this.inBase64=!1,this.base64Accum=\"\",e},t.utf7imap=f,f.prototype.encoder=g,f.prototype.decoder=m,f.prototype.bomAware=!0,g.prototype.write=function(e){for(var t=this.inBase64,r=this.base64Accum,i=this.base64AccumIdx,o=n.alloc(5*e.length+10),s=0,a=0;a<e.length;a++){var c=e.charCodeAt(a);32<=c&&c<=126?(t&&(i>0&&(s+=o.write(r.slice(0,i).toString(\"base64\").replace(/\\//g,\",\").replace(/=+$/,\"\"),s),i=0),o[s++]=p,t=!1),t||(o[s++]=c,c===d&&(o[s++]=p))):(t||(o[s++]=d,t=!0),t&&(r[i++]=c>>8,r[i++]=255&c,i==r.length&&(s+=o.write(r.toString(\"base64\").replace(/\\//g,\",\"),s),i=0)))}return this.inBase64=t,this.base64AccumIdx=i,o.slice(0,s)},g.prototype.end=function(){var e=n.alloc(10),t=0;return this.inBase64&&(this.base64AccumIdx>0&&(t+=e.write(this.base64Accum.slice(0,this.base64AccumIdx).toString(\"base64\").replace(/\\//g,\",\").replace(/=+$/,\"\"),t),this.base64AccumIdx=0),e[t++]=p,this.inBase64=!1),e.slice(0,t)};var y=u.slice();y[\",\".charCodeAt(0)]=!0,m.prototype.write=function(e){for(var t=\"\",r=0,i=this.inBase64,o=this.base64Accum,s=0;s<e.length;s++)if(i){if(!y[e[s]]){if(s==r&&e[s]==p)t+=\"&\";else{var a=o+e.slice(r,s).toString().replace(/,/g,\"/\");t+=this.iconv.decode(n.from(a,\"base64\"),\"utf16-be\")}e[s]!=p&&s--,r=s+1,i=!1,o=\"\"}}else e[s]==d&&(t+=this.iconv.decode(e.slice(r,s),\"ascii\"),r=s+1,i=!0);if(i){var c=(a=o+e.slice(r).toString().replace(/,/g,\"/\")).length-a.length%8;o=a.slice(c),a=a.slice(0,c),t+=this.iconv.decode(n.from(a,\"base64\"),\"utf16-be\")}else t+=this.iconv.decode(e.slice(r),\"ascii\");return this.inBase64=i,this.base64Accum=o,t},m.prototype.end=function(){var e=\"\";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(n.from(this.base64Accum,\"base64\"),\"utf16-be\")),this.inBase64=!1,this.base64Accum=\"\",e}},function(e,t,r){\"use strict\";var n=r(15).Buffer;function i(e,t){if(!e)throw new Error(\"SBCS codec is called without the data.\");if(!e.chars||128!==e.chars.length&&256!==e.chars.length)throw new Error(\"Encoding '\"+e.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");if(128===e.chars.length){for(var r=\"\",i=0;i<128;i++)r+=String.fromCharCode(i);e.chars=r+e.chars}this.decodeBuf=n.from(e.chars,\"ucs2\");var o=n.alloc(65536,t.defaultCharSingleByte.charCodeAt(0));for(i=0;i<e.chars.length;i++)o[e.chars.charCodeAt(i)]=i;this.encodeBuf=o}function o(e,t){this.encodeBuf=t.encodeBuf}function s(e,t){this.decodeBuf=t.decodeBuf}t._sbcs=i,i.prototype.encoder=o,i.prototype.decoder=s,o.prototype.write=function(e){for(var t=n.alloc(e.length),r=0;r<e.length;r++)t[r]=this.encodeBuf[e.charCodeAt(r)];return t},o.prototype.end=function(){},s.prototype.write=function(e){for(var t=this.decodeBuf,r=n.alloc(2*e.length),i=0,o=0,s=0;s<e.length;s++)i=2*e[s],r[o=2*s]=t[i],r[o+1]=t[i+1];return r.toString(\"ucs2\")},s.prototype.end=function(){}},function(e,t,r){\"use strict\";e.exports={10029:\"maccenteuro\",maccenteuro:{type:\"_sbcs\",chars:\"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"},808:\"cp808\",ibm808:\"cp808\",cp808:{type:\"_sbcs\",chars:\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"},mik:{type:\"_sbcs\",chars:\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"},ascii8bit:\"ascii\",usascii:\"ascii\",ansix34:\"ascii\",ansix341968:\"ascii\",ansix341986:\"ascii\",csascii:\"ascii\",cp367:\"ascii\",ibm367:\"ascii\",isoir6:\"ascii\",iso646us:\"ascii\",iso646irv:\"ascii\",us:\"ascii\",latin1:\"iso88591\",latin2:\"iso88592\",latin3:\"iso88593\",latin4:\"iso88594\",latin5:\"iso88599\",latin6:\"iso885910\",latin7:\"iso885913\",latin8:\"iso885914\",latin9:\"iso885915\",latin10:\"iso885916\",csisolatin1:\"iso88591\",csisolatin2:\"iso88592\",csisolatin3:\"iso88593\",csisolatin4:\"iso88594\",csisolatincyrillic:\"iso88595\",csisolatinarabic:\"iso88596\",csisolatingreek:\"iso88597\",csisolatinhebrew:\"iso88598\",csisolatin5:\"iso88599\",csisolatin6:\"iso885910\",l1:\"iso88591\",l2:\"iso88592\",l3:\"iso88593\",l4:\"iso88594\",l5:\"iso88599\",l6:\"iso885910\",l7:\"iso885913\",l8:\"iso885914\",l9:\"iso885915\",l10:\"iso885916\",isoir14:\"iso646jp\",isoir57:\"iso646cn\",isoir100:\"iso88591\",isoir101:\"iso88592\",isoir109:\"iso88593\",isoir110:\"iso88594\",isoir144:\"iso88595\",isoir127:\"iso88596\",isoir126:\"iso88597\",isoir138:\"iso88598\",isoir148:\"iso88599\",isoir157:\"iso885910\",isoir166:\"tis620\",isoir179:\"iso885913\",isoir199:\"iso885914\",isoir203:\"iso885915\",isoir226:\"iso885916\",cp819:\"iso88591\",ibm819:\"iso88591\",cyrillic:\"iso88595\",arabic:\"iso88596\",arabic8:\"iso88596\",ecma114:\"iso88596\",asmo708:\"iso88596\",greek:\"iso88597\",greek8:\"iso88597\",ecma118:\"iso88597\",elot928:\"iso88597\",hebrew:\"iso88598\",hebrew8:\"iso88598\",turkish:\"iso88599\",turkish8:\"iso88599\",thai:\"iso885911\",thai8:\"iso885911\",celtic:\"iso885914\",celtic8:\"iso885914\",isoceltic:\"iso885914\",tis6200:\"tis620\",tis62025291:\"tis620\",tis62025330:\"tis620\",10000:\"macroman\",10006:\"macgreek\",10007:\"maccyrillic\",10079:\"maciceland\",10081:\"macturkish\",cspc8codepage437:\"cp437\",cspc775baltic:\"cp775\",cspc850multilingual:\"cp850\",cspcp852:\"cp852\",cspc862latinhebrew:\"cp862\",cpgr:\"cp869\",msee:\"cp1250\",mscyrl:\"cp1251\",msansi:\"cp1252\",msgreek:\"cp1253\",msturk:\"cp1254\",mshebr:\"cp1255\",msarab:\"cp1256\",winbaltrim:\"cp1257\",cp20866:\"koi8r\",20866:\"koi8r\",ibm878:\"koi8r\",cskoi8r:\"koi8r\",cp21866:\"koi8u\",21866:\"koi8u\",ibm1168:\"koi8u\",strk10482002:\"rk1048\",tcvn5712:\"tcvn\",tcvn57121:\"tcvn\",gb198880:\"iso646cn\",cn:\"iso646cn\",csiso14jisc6220ro:\"iso646jp\",jisc62201969ro:\"iso646jp\",jp:\"iso646jp\",cshproman8:\"hproman8\",r8:\"hproman8\",roman8:\"hproman8\",xroman8:\"hproman8\",ibm1051:\"hproman8\",mac:\"macintosh\",csmacintosh:\"macintosh\"}},function(e,t,r){\"use strict\";e.exports={437:\"cp437\",737:\"cp737\",775:\"cp775\",850:\"cp850\",852:\"cp852\",855:\"cp855\",856:\"cp856\",857:\"cp857\",858:\"cp858\",860:\"cp860\",861:\"cp861\",862:\"cp862\",863:\"cp863\",864:\"cp864\",865:\"cp865\",866:\"cp866\",869:\"cp869\",874:\"windows874\",922:\"cp922\",1046:\"cp1046\",1124:\"cp1124\",1125:\"cp1125\",1129:\"cp1129\",1133:\"cp1133\",1161:\"cp1161\",1162:\"cp1162\",1163:\"cp1163\",1250:\"windows1250\",1251:\"windows1251\",1252:\"windows1252\",1253:\"windows1253\",1254:\"windows1254\",1255:\"windows1255\",1256:\"windows1256\",1257:\"windows1257\",1258:\"windows1258\",28591:\"iso88591\",28592:\"iso88592\",28593:\"iso88593\",28594:\"iso88594\",28595:\"iso88595\",28596:\"iso88596\",28597:\"iso88597\",28598:\"iso88598\",28599:\"iso88599\",28600:\"iso885910\",28601:\"iso885911\",28603:\"iso885913\",28604:\"iso885914\",28605:\"iso885915\",28606:\"iso885916\",windows874:{type:\"_sbcs\",chars:\"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"},win874:\"windows874\",cp874:\"windows874\",windows1250:{type:\"_sbcs\",chars:\"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"},win1250:\"windows1250\",cp1250:\"windows1250\",windows1251:{type:\"_sbcs\",chars:\"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"},win1251:\"windows1251\",cp1251:\"windows1251\",windows1252:{type:\"_sbcs\",chars:\"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"},win1252:\"windows1252\",cp1252:\"windows1252\",windows1253:{type:\"_sbcs\",chars:\"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"},win1253:\"windows1253\",cp1253:\"windows1253\",windows1254:{type:\"_sbcs\",chars:\"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"},win1254:\"windows1254\",cp1254:\"windows1254\",windows1255:{type:\"_sbcs\",chars:\"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"},win1255:\"windows1255\",cp1255:\"windows1255\",windows1256:{type:\"_sbcs\",chars:\"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"},win1256:\"windows1256\",cp1256:\"windows1256\",windows1257:{type:\"_sbcs\",chars:\"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"},win1257:\"windows1257\",cp1257:\"windows1257\",windows1258:{type:\"_sbcs\",chars:\"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"},win1258:\"windows1258\",cp1258:\"windows1258\",iso88591:{type:\"_sbcs\",chars:\" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"},cp28591:\"iso88591\",iso88592:{type:\"_sbcs\",chars:\" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"},cp28592:\"iso88592\",iso88593:{type:\"_sbcs\",chars:\" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"},cp28593:\"iso88593\",iso88594:{type:\"_sbcs\",chars:\" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"},cp28594:\"iso88594\",iso88595:{type:\"_sbcs\",chars:\" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"},cp28595:\"iso88595\",iso88596:{type:\"_sbcs\",chars:\" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"},cp28596:\"iso88596\",iso88597:{type:\"_sbcs\",chars:\" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"},cp28597:\"iso88597\",iso88598:{type:\"_sbcs\",chars:\" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"},cp28598:\"iso88598\",iso88599:{type:\"_sbcs\",chars:\" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"},cp28599:\"iso88599\",iso885910:{type:\"_sbcs\",chars:\" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"},cp28600:\"iso885910\",iso885911:{type:\"_sbcs\",chars:\" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"},cp28601:\"iso885911\",iso885913:{type:\"_sbcs\",chars:\" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"},cp28603:\"iso885913\",iso885914:{type:\"_sbcs\",chars:\" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"},cp28604:\"iso885914\",iso885915:{type:\"_sbcs\",chars:\" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"},cp28605:\"iso885915\",iso885916:{type:\"_sbcs\",chars:\" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"},cp28606:\"iso885916\",cp437:{type:\"_sbcs\",chars:\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"},ibm437:\"cp437\",csibm437:\"cp437\",cp737:{type:\"_sbcs\",chars:\"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"},ibm737:\"cp737\",csibm737:\"cp737\",cp775:{type:\"_sbcs\",chars:\"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"},ibm775:\"cp775\",csibm775:\"cp775\",cp850:{type:\"_sbcs\",chars:\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"},ibm850:\"cp850\",csibm850:\"cp850\",cp852:{type:\"_sbcs\",chars:\"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"},ibm852:\"cp852\",csibm852:\"cp852\",cp855:{type:\"_sbcs\",chars:\"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"},ibm855:\"cp855\",csibm855:\"cp855\",cp856:{type:\"_sbcs\",chars:\"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"},ibm856:\"cp856\",csibm856:\"cp856\",cp857:{type:\"_sbcs\",chars:\"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"},ibm857:\"cp857\",csibm857:\"cp857\",cp858:{type:\"_sbcs\",chars:\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"},ibm858:\"cp858\",csibm858:\"cp858\",cp860:{type:\"_sbcs\",chars:\"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"},ibm860:\"cp860\",csibm860:\"cp860\",cp861:{type:\"_sbcs\",chars:\"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"},ibm861:\"cp861\",csibm861:\"cp861\",cp862:{type:\"_sbcs\",chars:\"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"},ibm862:\"cp862\",csibm862:\"cp862\",cp863:{type:\"_sbcs\",chars:\"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"},ibm863:\"cp863\",csibm863:\"cp863\",cp864:{type:\"_sbcs\",chars:\"\\0\u0001\u0002\u0003\u0004\u0005\u0006\u0007\\b\\t\\n\\v\\f\\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"},ibm864:\"cp864\",csibm864:\"cp864\",cp865:{type:\"_sbcs\",chars:\"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"},ibm865:\"cp865\",csibm865:\"cp865\",cp866:{type:\"_sbcs\",chars:\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"},ibm866:\"cp866\",csibm866:\"cp866\",cp869:{type:\"_sbcs\",chars:\"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"},ibm869:\"cp869\",csibm869:\"cp869\",cp922:{type:\"_sbcs\",chars:\" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"},ibm922:\"cp922\",csibm922:\"cp922\",cp1046:{type:\"_sbcs\",chars:\"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"},ibm1046:\"cp1046\",csibm1046:\"cp1046\",cp1124:{type:\"_sbcs\",chars:\" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"},ibm1124:\"cp1124\",csibm1124:\"cp1124\",cp1125:{type:\"_sbcs\",chars:\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"},ibm1125:\"cp1125\",csibm1125:\"cp1125\",cp1129:{type:\"_sbcs\",chars:\" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"},ibm1129:\"cp1129\",csibm1129:\"cp1129\",cp1133:{type:\"_sbcs\",chars:\" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"},ibm1133:\"cp1133\",csibm1133:\"cp1133\",cp1161:{type:\"_sbcs\",chars:\"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"},ibm1161:\"cp1161\",csibm1161:\"cp1161\",cp1162:{type:\"_sbcs\",chars:\"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"},ibm1162:\"cp1162\",csibm1162:\"cp1162\",cp1163:{type:\"_sbcs\",chars:\" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"},ibm1163:\"cp1163\",csibm1163:\"cp1163\",maccroatian:{type:\"_sbcs\",chars:\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"},maccyrillic:{type:\"_sbcs\",chars:\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"},macgreek:{type:\"_sbcs\",chars:\"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"},maciceland:{type:\"_sbcs\",chars:\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"},macroman:{type:\"_sbcs\",chars:\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"},macromania:{type:\"_sbcs\",chars:\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"},macthai:{type:\"_sbcs\",chars:\"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู\\ufeff​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"},macturkish:{type:\"_sbcs\",chars:\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"},macukraine:{type:\"_sbcs\",chars:\"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"},koi8r:{type:\"_sbcs\",chars:\"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"},koi8u:{type:\"_sbcs\",chars:\"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"},koi8ru:{type:\"_sbcs\",chars:\"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"},koi8t:{type:\"_sbcs\",chars:\"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"},armscii8:{type:\"_sbcs\",chars:\" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"},rk1048:{type:\"_sbcs\",chars:\"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"},tcvn:{type:\"_sbcs\",chars:\"\\0ÚỤ\u0003ỪỬỮ\u0007\\b\\t\\n\\v\\f\\r\u000e\u000f\u0010ỨỰỲỶỸÝỴ\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"},georgianacademy:{type:\"_sbcs\",chars:\"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"},georgianps:{type:\"_sbcs\",chars:\"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"},pt154:{type:\"_sbcs\",chars:\"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"},viscii:{type:\"_sbcs\",chars:\"\\0\u0001Ẳ\u0003\u0004ẴẪ\u0007\\b\\t\\n\\v\\f\\r\u000e\u000f\u0010\u0011\u0012\u0013Ỷ\u0015\u0016\u0017\u0018Ỹ\u001a\u001b\u001c\u001dỴ\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"},iso646cn:{type:\"_sbcs\",chars:\"\\0\u0001\u0002\u0003\u0004\u0005\u0006\u0007\\b\\t\\n\\v\\f\\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"},iso646jp:{type:\"_sbcs\",chars:\"\\0\u0001\u0002\u0003\u0004\u0005\u0006\u0007\\b\\t\\n\\v\\f\\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"},hproman8:{type:\"_sbcs\",chars:\" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"},macintosh:{type:\"_sbcs\",chars:\"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"},ascii:{type:\"_sbcs\",chars:\"��������������������������������������������������������������������������������������������������������������������������������\"},tis620:{type:\"_sbcs\",chars:\"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"}}},function(e,t,r){\"use strict\";var n=r(15).Buffer;t._dbcs=u;for(var i=-1,o=-2,s=-1e3,a=new Array(256),c=0;c<256;c++)a[c]=i;function u(e,t){if(this.encodingName=e.encodingName,!e)throw new Error(\"DBCS codec is called without the data.\");if(!e.table)throw new Error(\"Encoding '\"+this.encodingName+\"' has no data.\");var r=e.table();this.decodeTables=[],this.decodeTables[0]=a.slice(0),this.decodeTableSeq=[];for(var n=0;n<r.length;n++)this._addDecodeChunk(r[n]);this.defaultCharUnicode=t.defaultCharUnicode,this.encodeTable=[],this.encodeTableSeq=[];var c={};if(e.encodeSkipVals)for(n=0;n<e.encodeSkipVals.length;n++){var u=e.encodeSkipVals[n];if(\"number\"==typeof u)c[u]=!0;else for(var l=u.from;l<=u.to;l++)c[l]=!0}if(this._fillEncodeTable(0,0,c),e.encodeAdd)for(var h in e.encodeAdd)Object.prototype.hasOwnProperty.call(e.encodeAdd,h)&&this._setEncodeChar(h.charCodeAt(0),e.encodeAdd[h]);if(this.defCharSB=this.encodeTable[0][t.defaultCharSingleByte.charCodeAt(0)],this.defCharSB===i&&(this.defCharSB=this.encodeTable[0][\"?\"]),this.defCharSB===i&&(this.defCharSB=\"?\".charCodeAt(0)),\"function\"==typeof e.gb18030){this.gb18030=e.gb18030();var p=this.decodeTables.length,d=this.decodeTables[p]=a.slice(0),f=this.decodeTables.length,g=this.decodeTables[f]=a.slice(0);for(n=129;n<=254;n++){var m=s-this.decodeTables[0][n],y=this.decodeTables[m];for(l=48;l<=57;l++)y[l]=s-p}for(n=129;n<=254;n++)d[n]=s-f;for(n=48;n<=57;n++)g[n]=o}}function l(e,t){this.leadSurrogate=-1,this.seqObj=void 0,this.encodeTable=t.encodeTable,this.encodeTableSeq=t.encodeTableSeq,this.defaultCharSingleByte=t.defCharSB,this.gb18030=t.gb18030}function h(e,t){this.nodeIdx=0,this.prevBuf=n.alloc(0),this.decodeTables=t.decodeTables,this.decodeTableSeq=t.decodeTableSeq,this.defaultCharUnicode=t.defaultCharUnicode,this.gb18030=t.gb18030}function p(e,t){if(e[0]>t)return-1;for(var r=0,n=e.length;r<n-1;){var i=r+Math.floor((n-r+1)/2);e[i]<=t?r=i:n=i}return r}u.prototype.encoder=l,u.prototype.decoder=h,u.prototype._getDecodeTrieNode=function(e){for(var t=[];e>0;e>>=8)t.push(255&e);0==t.length&&t.push(0);for(var r=this.decodeTables[0],n=t.length-1;n>0;n--){var o=r[t[n]];if(o==i)r[t[n]]=s-this.decodeTables.length,this.decodeTables.push(r=a.slice(0));else{if(!(o<=s))throw new Error(\"Overwrite byte in \"+this.encodingName+\", addr: \"+e.toString(16));r=this.decodeTables[s-o]}}return r},u.prototype._addDecodeChunk=function(e){var t=parseInt(e[0],16),r=this._getDecodeTrieNode(t);t&=255;for(var n=1;n<e.length;n++){var i=e[n];if(\"string\"==typeof i)for(var o=0;o<i.length;){var s=i.charCodeAt(o++);if(55296<=s&&s<56320){var a=i.charCodeAt(o++);if(!(56320<=a&&a<57344))throw new Error(\"Incorrect surrogate pair in \"+this.encodingName+\" at chunk \"+e[0]);r[t++]=65536+1024*(s-55296)+(a-56320)}else if(4080<s&&s<=4095){for(var c=4095-s+2,u=[],l=0;l<c;l++)u.push(i.charCodeAt(o++));r[t++]=-10-this.decodeTableSeq.length,this.decodeTableSeq.push(u)}else r[t++]=s}else{if(\"number\"!=typeof i)throw new Error(\"Incorrect type '\"+typeof i+\"' given in \"+this.encodingName+\" at chunk \"+e[0]);var h=r[t-1]+1;for(o=0;o<i;o++)r[t++]=h++}}if(t>255)throw new Error(\"Incorrect chunk in \"+this.encodingName+\" at addr \"+e[0]+\": too long\"+t)},u.prototype._getEncodeBucket=function(e){var t=e>>8;return void 0===this.encodeTable[t]&&(this.encodeTable[t]=a.slice(0)),this.encodeTable[t]},u.prototype._setEncodeChar=function(e,t){var r=this._getEncodeBucket(e),n=255&e;r[n]<=-10?this.encodeTableSeq[-10-r[n]][-1]=t:r[n]==i&&(r[n]=t)},u.prototype._setEncodeSequence=function(e,t){var r,n=e[0],o=this._getEncodeBucket(n),s=255&n;o[s]<=-10?r=this.encodeTableSeq[-10-o[s]]:(r={},o[s]!==i&&(r[-1]=o[s]),o[s]=-10-this.encodeTableSeq.length,this.encodeTableSeq.push(r));for(var a=1;a<e.length-1;a++){var c=r[n];\"object\"==typeof c?r=c:(r=r[n]={},void 0!==c&&(r[-1]=c))}r[n=e[e.length-1]]=t},u.prototype._fillEncodeTable=function(e,t,r){for(var n=this.decodeTables[e],i=0;i<256;i++){var o=n[i],a=t+i;r[a]||(o>=0?this._setEncodeChar(o,a):o<=s?this._fillEncodeTable(s-o,a<<8,r):o<=-10&&this._setEncodeSequence(this.decodeTableSeq[-10-o],a))}},l.prototype.write=function(e){for(var t=n.alloc(e.length*(this.gb18030?4:3)),r=this.leadSurrogate,o=this.seqObj,s=-1,a=0,c=0;;){if(-1===s){if(a==e.length)break;var u=e.charCodeAt(a++)}else{u=s;s=-1}if(55296<=u&&u<57344)if(u<56320){if(-1===r){r=u;continue}r=u,u=i}else-1!==r?(u=65536+1024*(r-55296)+(u-56320),r=-1):u=i;else-1!==r&&(s=u,u=i,r=-1);var l=i;if(void 0!==o&&u!=i){var h=o[u];if(\"object\"==typeof h){o=h;continue}\"number\"==typeof h?l=h:void 0==h&&void 0!==(h=o[-1])&&(l=h,s=u),o=void 0}else if(u>=0){var d=this.encodeTable[u>>8];if(void 0!==d&&(l=d[255&u]),l<=-10){o=this.encodeTableSeq[-10-l];continue}if(l==i&&this.gb18030){var f=p(this.gb18030.uChars,u);if(-1!=f){l=this.gb18030.gbChars[f]+(u-this.gb18030.uChars[f]);t[c++]=129+Math.floor(l/12600),l%=12600,t[c++]=48+Math.floor(l/1260),l%=1260,t[c++]=129+Math.floor(l/10),l%=10,t[c++]=48+l;continue}}}l===i&&(l=this.defaultCharSingleByte),l<256?t[c++]=l:l<65536?(t[c++]=l>>8,t[c++]=255&l):(t[c++]=l>>16,t[c++]=l>>8&255,t[c++]=255&l)}return this.seqObj=o,this.leadSurrogate=r,t.slice(0,c)},l.prototype.end=function(){if(-1!==this.leadSurrogate||void 0!==this.seqObj){var e=n.alloc(10),t=0;if(this.seqObj){var r=this.seqObj[-1];void 0!==r&&(r<256?e[t++]=r:(e[t++]=r>>8,e[t++]=255&r)),this.seqObj=void 0}return-1!==this.leadSurrogate&&(e[t++]=this.defaultCharSingleByte,this.leadSurrogate=-1),e.slice(0,t)}},l.prototype.findIdx=p,h.prototype.write=function(e){var t=n.alloc(2*e.length),r=this.nodeIdx,a=this.prevBuf,c=this.prevBuf.length,u=-this.prevBuf.length;c>0&&(a=n.concat([a,e.slice(0,10)]));for(var l=0,h=0;l<e.length;l++){var d,f=l>=0?e[l]:a[l+c];if((d=this.decodeTables[r][f])>=0);else if(d===i)l=u,d=this.defaultCharUnicode.charCodeAt(0);else if(d===o){var g=u>=0?e.slice(u,l+1):a.slice(u+c,l+1+c),m=12600*(g[0]-129)+1260*(g[1]-48)+10*(g[2]-129)+(g[3]-48),y=p(this.gb18030.gbChars,m);d=this.gb18030.uChars[y]+m-this.gb18030.gbChars[y]}else{if(d<=s){r=s-d;continue}if(!(d<=-10))throw new Error(\"iconv-lite internal error: invalid decoding table value \"+d+\" at \"+r+\"/\"+f);for(var v=this.decodeTableSeq[-10-d],w=0;w<v.length-1;w++)d=v[w],t[h++]=255&d,t[h++]=d>>8;d=v[v.length-1]}if(d>65535){d-=65536;var b=55296+Math.floor(d/1024);t[h++]=255&b,t[h++]=b>>8,d=56320+d%1024}t[h++]=255&d,t[h++]=d>>8,r=0,u=l+1}return this.nodeIdx=r,this.prevBuf=u>=0?e.slice(u):a.slice(u+c),t.slice(0,h).toString(\"ucs2\")},h.prototype.end=function(){for(var e=\"\";this.prevBuf.length>0;){e+=this.defaultCharUnicode;var t=this.prevBuf.slice(1);this.prevBuf=n.alloc(0),this.nodeIdx=0,t.length>0&&(e+=this.write(t))}return this.nodeIdx=0,e}},function(e,t,r){\"use strict\";e.exports={shiftjis:{type:\"_dbcs\",table:function(){return r(70)},encodeAdd:{\"¥\":92,\"‾\":126},encodeSkipVals:[{from:60736,to:63808}]},csshiftjis:\"shiftjis\",mskanji:\"shiftjis\",sjis:\"shiftjis\",windows31j:\"shiftjis\",ms31j:\"shiftjis\",xsjis:\"shiftjis\",windows932:\"shiftjis\",ms932:\"shiftjis\",932:\"shiftjis\",cp932:\"shiftjis\",eucjp:{type:\"_dbcs\",table:function(){return r(71)},encodeAdd:{\"¥\":92,\"‾\":126}},gb2312:\"cp936\",gb231280:\"cp936\",gb23121980:\"cp936\",csgb2312:\"cp936\",csiso58gb231280:\"cp936\",euccn:\"cp936\",windows936:\"cp936\",ms936:\"cp936\",936:\"cp936\",cp936:{type:\"_dbcs\",table:function(){return r(28)}},gbk:{type:\"_dbcs\",table:function(){return r(28).concat(r(36))}},xgbk:\"gbk\",isoir58:\"gbk\",gb18030:{type:\"_dbcs\",table:function(){return r(28).concat(r(36))},gb18030:function(){return r(72)},encodeSkipVals:[128],encodeAdd:{\"€\":41699}},chinese:\"gb18030\",windows949:\"cp949\",ms949:\"cp949\",949:\"cp949\",cp949:{type:\"_dbcs\",table:function(){return r(73)}},cseuckr:\"cp949\",csksc56011987:\"cp949\",euckr:\"cp949\",isoir149:\"cp949\",korean:\"cp949\",ksc56011987:\"cp949\",ksc56011989:\"cp949\",ksc5601:\"cp949\",windows950:\"cp950\",ms950:\"cp950\",950:\"cp950\",cp950:{type:\"_dbcs\",table:function(){return r(37)}},big5:\"big5hkscs\",big5hkscs:{type:\"_dbcs\",table:function(){return r(37).concat(r(74))},encodeSkipVals:[41676]},cnbig5:\"big5hkscs\",csbig5:\"big5hkscs\",xxbig5:\"big5hkscs\"}},function(e){e.exports=[[\"0\",\"\\0\",128],[\"a1\",\"｡\",62],[\"8140\",\"　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈\",9,\"＋－±×\"],[\"8180\",\"÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓\"],[\"81b8\",\"∈∋⊆⊇⊂⊃∪∩\"],[\"81c8\",\"∧∨￢⇒⇔∀∃\"],[\"81da\",\"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬\"],[\"81f0\",\"Å‰♯♭♪†‡¶\"],[\"81fc\",\"◯\"],[\"824f\",\"０\",9],[\"8260\",\"Ａ\",25],[\"8281\",\"ａ\",25],[\"829f\",\"ぁ\",82],[\"8340\",\"ァ\",62],[\"8380\",\"ム\",22],[\"839f\",\"Α\",16,\"Σ\",6],[\"83bf\",\"α\",16,\"σ\",6],[\"8440\",\"А\",5,\"ЁЖ\",25],[\"8470\",\"а\",5,\"ёж\",7],[\"8480\",\"о\",17],[\"849f\",\"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂\"],[\"8740\",\"①\",19,\"Ⅰ\",9],[\"875f\",\"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡\"],[\"877e\",\"㍻\"],[\"8780\",\"〝〟№㏍℡㊤\",4,\"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪\"],[\"889f\",\"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭\"],[\"8940\",\"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円\"],[\"8980\",\"園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改\"],[\"8a40\",\"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫\"],[\"8a80\",\"橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄\"],[\"8b40\",\"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救\"],[\"8b80\",\"朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈\"],[\"8c40\",\"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨\"],[\"8c80\",\"劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向\"],[\"8d40\",\"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降\"],[\"8d80\",\"項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷\"],[\"8e40\",\"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止\"],[\"8e80\",\"死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周\"],[\"8f40\",\"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳\"],[\"8f80\",\"準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾\"],[\"9040\",\"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨\"],[\"9080\",\"逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線\"],[\"9140\",\"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻\"],[\"9180\",\"操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只\"],[\"9240\",\"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄\"],[\"9280\",\"逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓\"],[\"9340\",\"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬\"],[\"9380\",\"凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入\"],[\"9440\",\"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅\"],[\"9480\",\"楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美\"],[\"9540\",\"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷\"],[\"9580\",\"斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋\"],[\"9640\",\"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆\"],[\"9680\",\"摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒\"],[\"9740\",\"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲\"],[\"9780\",\"沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯\"],[\"9840\",\"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕\"],[\"989f\",\"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲\"],[\"9940\",\"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭\"],[\"9980\",\"凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨\"],[\"9a40\",\"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸\"],[\"9a80\",\"噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩\"],[\"9b40\",\"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀\"],[\"9b80\",\"它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏\"],[\"9c40\",\"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠\"],[\"9c80\",\"怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛\"],[\"9d40\",\"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫\"],[\"9d80\",\"捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼\"],[\"9e40\",\"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎\"],[\"9e80\",\"梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣\"],[\"9f40\",\"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯\"],[\"9f80\",\"麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌\"],[\"e040\",\"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝\"],[\"e080\",\"烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱\"],[\"e140\",\"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿\"],[\"e180\",\"痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬\"],[\"e240\",\"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰\"],[\"e280\",\"窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆\"],[\"e340\",\"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷\"],[\"e380\",\"縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋\"],[\"e440\",\"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤\"],[\"e480\",\"艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈\"],[\"e540\",\"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬\"],[\"e580\",\"蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞\"],[\"e640\",\"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧\"],[\"e680\",\"諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊\"],[\"e740\",\"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜\"],[\"e780\",\"轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮\"],[\"e840\",\"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙\"],[\"e880\",\"閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰\"],[\"e940\",\"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃\"],[\"e980\",\"騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈\"],[\"ea40\",\"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯\"],[\"ea80\",\"黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙\"],[\"ed40\",\"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏\"],[\"ed80\",\"塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱\"],[\"ee40\",\"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙\"],[\"ee80\",\"蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"],[\"eeef\",\"ⅰ\",9,\"￢￤＇＂\"],[\"f040\",\"\",62],[\"f080\",\"\",124],[\"f140\",\"\",62],[\"f180\",\"\",124],[\"f240\",\"\",62],[\"f280\",\"\",124],[\"f340\",\"\",62],[\"f380\",\"\",124],[\"f440\",\"\",62],[\"f480\",\"\",124],[\"f540\",\"\",62],[\"f580\",\"\",124],[\"f640\",\"\",62],[\"f680\",\"\",124],[\"f740\",\"\",62],[\"f780\",\"\",124],[\"f840\",\"\",62],[\"f880\",\"\",124],[\"f940\",\"\"],[\"fa40\",\"ⅰ\",9,\"Ⅰ\",9,\"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊\"],[\"fa80\",\"兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯\"],[\"fb40\",\"涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神\"],[\"fb80\",\"祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙\"],[\"fc40\",\"髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"]]},function(e){e.exports=[[\"0\",\"\\0\",127],[\"8ea1\",\"｡\",62],[\"a1a1\",\"　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈\",9,\"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇\"],[\"a2a1\",\"◆□■△▲▽▼※〒→←↑↓〓\"],[\"a2ba\",\"∈∋⊆⊇⊂⊃∪∩\"],[\"a2ca\",\"∧∨￢⇒⇔∀∃\"],[\"a2dc\",\"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬\"],[\"a2f2\",\"Å‰♯♭♪†‡¶\"],[\"a2fe\",\"◯\"],[\"a3b0\",\"０\",9],[\"a3c1\",\"Ａ\",25],[\"a3e1\",\"ａ\",25],[\"a4a1\",\"ぁ\",82],[\"a5a1\",\"ァ\",85],[\"a6a1\",\"Α\",16,\"Σ\",6],[\"a6c1\",\"α\",16,\"σ\",6],[\"a7a1\",\"А\",5,\"ЁЖ\",25],[\"a7d1\",\"а\",5,\"ёж\",25],[\"a8a1\",\"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂\"],[\"ada1\",\"①\",19,\"Ⅰ\",9],[\"adc0\",\"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡\"],[\"addf\",\"㍻〝〟№㏍℡㊤\",4,\"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪\"],[\"b0a1\",\"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭\"],[\"b1a1\",\"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応\"],[\"b2a1\",\"押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改\"],[\"b3a1\",\"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱\"],[\"b4a1\",\"粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄\"],[\"b5a1\",\"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京\"],[\"b6a1\",\"供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈\"],[\"b7a1\",\"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲\"],[\"b8a1\",\"検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向\"],[\"b9a1\",\"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込\"],[\"baa1\",\"此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷\"],[\"bba1\",\"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時\"],[\"bca1\",\"次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周\"],[\"bda1\",\"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償\"],[\"bea1\",\"勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾\"],[\"bfa1\",\"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾\"],[\"c0a1\",\"澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線\"],[\"c1a1\",\"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎\"],[\"c2a1\",\"臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只\"],[\"c3a1\",\"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵\"],[\"c4a1\",\"帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓\"],[\"c5a1\",\"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到\"],[\"c6a1\",\"董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入\"],[\"c7a1\",\"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦\"],[\"c8a1\",\"函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美\"],[\"c9a1\",\"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服\"],[\"caa1\",\"福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋\"],[\"cba1\",\"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満\"],[\"cca1\",\"漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒\"],[\"cda1\",\"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃\"],[\"cea1\",\"痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯\"],[\"cfa1\",\"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕\"],[\"d0a1\",\"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲\"],[\"d1a1\",\"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨\"],[\"d2a1\",\"辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨\"],[\"d3a1\",\"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉\"],[\"d4a1\",\"圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩\"],[\"d5a1\",\"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓\"],[\"d6a1\",\"屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏\"],[\"d7a1\",\"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚\"],[\"d8a1\",\"悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛\"],[\"d9a1\",\"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼\"],[\"daa1\",\"據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼\"],[\"dba1\",\"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍\"],[\"dca1\",\"棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣\"],[\"dda1\",\"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾\"],[\"dea1\",\"沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌\"],[\"dfa1\",\"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼\"],[\"e0a1\",\"燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱\"],[\"e1a1\",\"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰\"],[\"e2a1\",\"癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬\"],[\"e3a1\",\"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐\"],[\"e4a1\",\"筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆\"],[\"e5a1\",\"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺\"],[\"e6a1\",\"罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋\"],[\"e7a1\",\"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙\"],[\"e8a1\",\"茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈\"],[\"e9a1\",\"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙\"],[\"eaa1\",\"蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞\"],[\"eba1\",\"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫\"],[\"eca1\",\"譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊\"],[\"eda1\",\"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸\"],[\"eea1\",\"遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮\"],[\"efa1\",\"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞\"],[\"f0a1\",\"陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰\"],[\"f1a1\",\"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷\"],[\"f2a1\",\"髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈\"],[\"f3a1\",\"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠\"],[\"f4a1\",\"堯槇遙瑤凜熙\"],[\"f9a1\",\"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德\"],[\"faa1\",\"忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱\"],[\"fba1\",\"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚\"],[\"fca1\",\"釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"],[\"fcf1\",\"ⅰ\",9,\"￢￤＇＂\"],[\"8fa2af\",\"˘ˇ¸˙˝¯˛˚～΄΅\"],[\"8fa2c2\",\"¡¦¿\"],[\"8fa2eb\",\"ºª©®™¤№\"],[\"8fa6e1\",\"ΆΈΉΊΪ\"],[\"8fa6e7\",\"Ό\"],[\"8fa6e9\",\"ΎΫ\"],[\"8fa6ec\",\"Ώ\"],[\"8fa6f1\",\"άέήίϊΐόςύϋΰώ\"],[\"8fa7c2\",\"Ђ\",10,\"ЎЏ\"],[\"8fa7f2\",\"ђ\",10,\"ўџ\"],[\"8fa9a1\",\"ÆĐ\"],[\"8fa9a4\",\"Ħ\"],[\"8fa9a6\",\"Ĳ\"],[\"8fa9a8\",\"ŁĿ\"],[\"8fa9ab\",\"ŊØŒ\"],[\"8fa9af\",\"ŦÞ\"],[\"8fa9c1\",\"æđðħıĳĸłŀŉŋøœßŧþ\"],[\"8faaa1\",\"ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ\"],[\"8faaba\",\"ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ\"],[\"8faba1\",\"áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ\"],[\"8fabbd\",\"ġĥíìïîǐ\"],[\"8fabc5\",\"īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż\"],[\"8fb0a1\",\"丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄\"],[\"8fb1a1\",\"侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐\"],[\"8fb2a1\",\"傒傓傔傖傛傜傞\",4,\"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂\"],[\"8fb3a1\",\"凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋\"],[\"8fb4a1\",\"匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿\"],[\"8fb5a1\",\"咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒\"],[\"8fb6a1\",\"嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍\",5,\"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤\",4,\"囱囫园\"],[\"8fb7a1\",\"囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭\",4,\"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡\"],[\"8fb8a1\",\"堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭\"],[\"8fb9a1\",\"奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿\"],[\"8fbaa1\",\"嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖\",4,\"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩\"],[\"8fbba1\",\"屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤\"],[\"8fbca1\",\"巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪\",4,\"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧\"],[\"8fbda1\",\"彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐\",4,\"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷\"],[\"8fbea1\",\"悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐\",4,\"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥\"],[\"8fbfa1\",\"懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵\"],[\"8fc0a1\",\"捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿\"],[\"8fc1a1\",\"擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝\"],[\"8fc2a1\",\"昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝\"],[\"8fc3a1\",\"杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮\",4,\"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏\"],[\"8fc4a1\",\"棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲\"],[\"8fc5a1\",\"樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽\"],[\"8fc6a1\",\"歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖\"],[\"8fc7a1\",\"泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞\"],[\"8fc8a1\",\"湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊\"],[\"8fc9a1\",\"濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔\",4,\"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃\",4,\"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠\"],[\"8fcaa1\",\"煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻\"],[\"8fcba1\",\"狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽\"],[\"8fcca1\",\"珿琀琁琄琇琊琑琚琛琤琦琨\",9,\"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆\"],[\"8fcda1\",\"甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹\",5,\"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹\"],[\"8fcea1\",\"瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢\",6,\"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢\"],[\"8fcfa1\",\"睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳\"],[\"8fd0a1\",\"碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞\"],[\"8fd1a1\",\"秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰\"],[\"8fd2a1\",\"笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙\",5],[\"8fd3a1\",\"籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝\"],[\"8fd4a1\",\"綞綦綧綪綳綶綷綹緂\",4,\"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭\"],[\"8fd5a1\",\"罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮\"],[\"8fd6a1\",\"胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆\"],[\"8fd7a1\",\"艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸\"],[\"8fd8a1\",\"荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓\"],[\"8fd9a1\",\"蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏\",4,\"蕖蕙蕜\",6,\"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼\"],[\"8fdaa1\",\"藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠\",4,\"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣\"],[\"8fdba1\",\"蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃\",6,\"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵\"],[\"8fdca1\",\"蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊\",4,\"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺\"],[\"8fdda1\",\"襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔\",4,\"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳\"],[\"8fdea1\",\"誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂\",4,\"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆\"],[\"8fdfa1\",\"貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢\"],[\"8fe0a1\",\"踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁\"],[\"8fe1a1\",\"轃轇轏轑\",4,\"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃\"],[\"8fe2a1\",\"郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿\"],[\"8fe3a1\",\"釂釃釅釓釔釗釙釚釞釤釥釩釪釬\",5,\"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵\",4,\"鉻鉼鉽鉿銈銉銊銍銎銒銗\"],[\"8fe4a1\",\"銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿\",4,\"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶\"],[\"8fe5a1\",\"鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉\",4,\"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹\"],[\"8fe6a1\",\"镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂\"],[\"8fe7a1\",\"霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦\"],[\"8fe8a1\",\"頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱\",4,\"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵\"],[\"8fe9a1\",\"馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿\",4],[\"8feaa1\",\"鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪\",4,\"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸\"],[\"8feba1\",\"鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦\",4,\"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻\"],[\"8feca1\",\"鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵\"],[\"8feda1\",\"黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃\",4,\"齓齕齖齗齘齚齝齞齨齩齭\",4,\"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥\"]]},function(e){e.exports={uChars:[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],gbChars:[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189e3]}},function(e){e.exports=[[\"0\",\"\\0\",127],[\"8141\",\"갂갃갅갆갋\",4,\"갘갞갟갡갢갣갥\",6,\"갮갲갳갴\"],[\"8161\",\"갵갶갷갺갻갽갾갿걁\",9,\"걌걎\",5,\"걕\"],[\"8181\",\"걖걗걙걚걛걝\",18,\"걲걳걵걶걹걻\",4,\"겂겇겈겍겎겏겑겒겓겕\",6,\"겞겢\",5,\"겫겭겮겱\",6,\"겺겾겿곀곂곃곅곆곇곉곊곋곍\",7,\"곖곘\",7,\"곢곣곥곦곩곫곭곮곲곴곷\",4,\"곾곿괁괂괃괅괇\",4,\"괎괐괒괓\"],[\"8241\",\"괔괕괖괗괙괚괛괝괞괟괡\",7,\"괪괫괮\",5],[\"8261\",\"괶괷괹괺괻괽\",6,\"굆굈굊\",5,\"굑굒굓굕굖굗\"],[\"8281\",\"굙\",7,\"굢굤\",7,\"굮굯굱굲굷굸굹굺굾궀궃\",4,\"궊궋궍궎궏궑\",10,\"궞\",5,\"궥\",17,\"궸\",7,\"귂귃귅귆귇귉\",6,\"귒귔\",7,\"귝귞귟귡귢귣귥\",18],[\"8341\",\"귺귻귽귾긂\",5,\"긊긌긎\",5,\"긕\",7],[\"8361\",\"긝\",18,\"긲긳긵긶긹긻긼\"],[\"8381\",\"긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗\",4,\"깞깢깣깤깦깧깪깫깭깮깯깱\",6,\"깺깾\",5,\"꺆\",5,\"꺍\",46,\"꺿껁껂껃껅\",6,\"껎껒\",5,\"껚껛껝\",8],[\"8441\",\"껦껧껩껪껬껮\",5,\"껵껶껷껹껺껻껽\",8],[\"8461\",\"꼆꼉꼊꼋꼌꼎꼏꼑\",18],[\"8481\",\"꼤\",7,\"꼮꼯꼱꼳꼵\",6,\"꼾꽀꽄꽅꽆꽇꽊\",5,\"꽑\",10,\"꽞\",5,\"꽦\",18,\"꽺\",5,\"꾁꾂꾃꾅꾆꾇꾉\",6,\"꾒꾓꾔꾖\",5,\"꾝\",26,\"꾺꾻꾽꾾\"],[\"8541\",\"꾿꿁\",5,\"꿊꿌꿏\",4,\"꿕\",6,\"꿝\",4],[\"8561\",\"꿢\",5,\"꿪\",5,\"꿲꿳꿵꿶꿷꿹\",6,\"뀂뀃\"],[\"8581\",\"뀅\",6,\"뀍뀎뀏뀑뀒뀓뀕\",6,\"뀞\",9,\"뀩\",26,\"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞\",29,\"끾끿낁낂낃낅\",6,\"낎낐낒\",5,\"낛낝낞낣낤\"],[\"8641\",\"낥낦낧낪낰낲낶낷낹낺낻낽\",6,\"냆냊\",5,\"냒\"],[\"8661\",\"냓냕냖냗냙\",6,\"냡냢냣냤냦\",10],[\"8681\",\"냱\",22,\"넊넍넎넏넑넔넕넖넗넚넞\",4,\"넦넧넩넪넫넭\",6,\"넶넺\",5,\"녂녃녅녆녇녉\",6,\"녒녓녖녗녙녚녛녝녞녟녡\",22,\"녺녻녽녾녿놁놃\",4,\"놊놌놎놏놐놑놕놖놗놙놚놛놝\"],[\"8741\",\"놞\",9,\"놩\",15],[\"8761\",\"놹\",18,\"뇍뇎뇏뇑뇒뇓뇕\"],[\"8781\",\"뇖\",5,\"뇞뇠\",7,\"뇪뇫뇭뇮뇯뇱\",7,\"뇺뇼뇾\",5,\"눆눇눉눊눍\",6,\"눖눘눚\",5,\"눡\",18,\"눵\",6,\"눽\",26,\"뉙뉚뉛뉝뉞뉟뉡\",6,\"뉪\",4],[\"8841\",\"뉯\",4,\"뉶\",5,\"뉽\",6,\"늆늇늈늊\",4],[\"8861\",\"늏늒늓늕늖늗늛\",4,\"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷\"],[\"8881\",\"늸\",15,\"닊닋닍닎닏닑닓\",4,\"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉\",6,\"댒댖\",5,\"댝\",54,\"덗덙덚덝덠덡덢덣\"],[\"8941\",\"덦덨덪덬덭덯덲덳덵덶덷덹\",6,\"뎂뎆\",5,\"뎍\"],[\"8961\",\"뎎뎏뎑뎒뎓뎕\",10,\"뎢\",5,\"뎩뎪뎫뎭\"],[\"8981\",\"뎮\",21,\"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩\",18,\"돽\",18,\"됑\",6,\"됙됚됛됝됞됟됡\",6,\"됪됬\",7,\"됵\",15],[\"8a41\",\"둅\",10,\"둒둓둕둖둗둙\",6,\"둢둤둦\"],[\"8a61\",\"둧\",4,\"둭\",18,\"뒁뒂\"],[\"8a81\",\"뒃\",4,\"뒉\",19,\"뒞\",5,\"뒥뒦뒧뒩뒪뒫뒭\",7,\"뒶뒸뒺\",5,\"듁듂듃듅듆듇듉\",6,\"듑듒듓듔듖\",5,\"듞듟듡듢듥듧\",4,\"듮듰듲\",5,\"듹\",26,\"딖딗딙딚딝\"],[\"8b41\",\"딞\",5,\"딦딫\",4,\"딲딳딵딶딷딹\",6,\"땂땆\"],[\"8b61\",\"땇땈땉땊땎땏땑땒땓땕\",6,\"땞땢\",8],[\"8b81\",\"땫\",52,\"떢떣떥떦떧떩떬떭떮떯떲떶\",4,\"떾떿뗁뗂뗃뗅\",6,\"뗎뗒\",5,\"뗙\",18,\"뗭\",18],[\"8c41\",\"똀\",15,\"똒똓똕똖똗똙\",4],[\"8c61\",\"똞\",6,\"똦\",5,\"똭\",6,\"똵\",5],[\"8c81\",\"똻\",12,\"뙉\",26,\"뙥뙦뙧뙩\",50,\"뚞뚟뚡뚢뚣뚥\",5,\"뚭뚮뚯뚰뚲\",16],[\"8d41\",\"뛃\",16,\"뛕\",8],[\"8d61\",\"뛞\",17,\"뛱뛲뛳뛵뛶뛷뛹뛺\"],[\"8d81\",\"뛻\",4,\"뜂뜃뜄뜆\",33,\"뜪뜫뜭뜮뜱\",6,\"뜺뜼\",7,\"띅띆띇띉띊띋띍\",6,\"띖\",9,\"띡띢띣띥띦띧띩\",6,\"띲띴띶\",5,\"띾띿랁랂랃랅\",6,\"랎랓랔랕랚랛랝랞\"],[\"8e41\",\"랟랡\",6,\"랪랮\",5,\"랶랷랹\",8],[\"8e61\",\"럂\",4,\"럈럊\",19],[\"8e81\",\"럞\",13,\"럮럯럱럲럳럵\",6,\"럾렂\",4,\"렊렋렍렎렏렑\",6,\"렚렜렞\",5,\"렦렧렩렪렫렭\",6,\"렶렺\",5,\"롁롂롃롅\",11,\"롒롔\",7,\"롞롟롡롢롣롥\",6,\"롮롰롲\",5,\"롹롺롻롽\",7],[\"8f41\",\"뢅\",7,\"뢎\",17],[\"8f61\",\"뢠\",7,\"뢩\",6,\"뢱뢲뢳뢵뢶뢷뢹\",4],[\"8f81\",\"뢾뢿룂룄룆\",5,\"룍룎룏룑룒룓룕\",7,\"룞룠룢\",5,\"룪룫룭룮룯룱\",6,\"룺룼룾\",5,\"뤅\",18,\"뤙\",6,\"뤡\",26,\"뤾뤿륁륂륃륅\",6,\"륍륎륐륒\",5],[\"9041\",\"륚륛륝륞륟륡\",6,\"륪륬륮\",5,\"륶륷륹륺륻륽\"],[\"9061\",\"륾\",5,\"릆릈릋릌릏\",15],[\"9081\",\"릟\",12,\"릮릯릱릲릳릵\",6,\"릾맀맂\",5,\"맊맋맍맓\",4,\"맚맜맟맠맢맦맧맩맪맫맭\",6,\"맶맻\",4,\"먂\",5,\"먉\",11,\"먖\",33,\"먺먻먽먾먿멁멃멄멅멆\"],[\"9141\",\"멇멊멌멏멐멑멒멖멗멙멚멛멝\",6,\"멦멪\",5],[\"9161\",\"멲멳멵멶멷멹\",9,\"몆몈몉몊몋몍\",5],[\"9181\",\"몓\",20,\"몪몭몮몯몱몳\",4,\"몺몼몾\",5,\"뫅뫆뫇뫉\",14,\"뫚\",33,\"뫽뫾뫿묁묂묃묅\",7,\"묎묐묒\",5,\"묙묚묛묝묞묟묡\",6],[\"9241\",\"묨묪묬\",7,\"묷묹묺묿\",4,\"뭆뭈뭊뭋뭌뭎뭑뭒\"],[\"9261\",\"뭓뭕뭖뭗뭙\",7,\"뭢뭤\",7,\"뭭\",4],[\"9281\",\"뭲\",21,\"뮉뮊뮋뮍뮎뮏뮑\",18,\"뮥뮦뮧뮩뮪뮫뮭\",6,\"뮵뮶뮸\",7,\"믁믂믃믅믆믇믉\",6,\"믑믒믔\",35,\"믺믻믽믾밁\"],[\"9341\",\"밃\",4,\"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵\"],[\"9361\",\"밶밷밹\",6,\"뱂뱆뱇뱈뱊뱋뱎뱏뱑\",8],[\"9381\",\"뱚뱛뱜뱞\",37,\"벆벇벉벊벍벏\",4,\"벖벘벛\",4,\"벢벣벥벦벩\",6,\"벲벶\",5,\"벾벿볁볂볃볅\",7,\"볎볒볓볔볖볗볙볚볛볝\",22,\"볷볹볺볻볽\"],[\"9441\",\"볾\",5,\"봆봈봊\",5,\"봑봒봓봕\",8],[\"9461\",\"봞\",5,\"봥\",6,\"봭\",12],[\"9481\",\"봺\",5,\"뵁\",6,\"뵊뵋뵍뵎뵏뵑\",6,\"뵚\",9,\"뵥뵦뵧뵩\",22,\"붂붃붅붆붋\",4,\"붒붔붖붗붘붛붝\",6,\"붥\",10,\"붱\",6,\"붹\",24],[\"9541\",\"뷒뷓뷖뷗뷙뷚뷛뷝\",11,\"뷪\",5,\"뷱\"],[\"9561\",\"뷲뷳뷵뷶뷷뷹\",6,\"븁븂븄븆\",5,\"븎븏븑븒븓\"],[\"9581\",\"븕\",6,\"븞븠\",35,\"빆빇빉빊빋빍빏\",4,\"빖빘빜빝빞빟빢빣빥빦빧빩빫\",4,\"빲빶\",4,\"빾빿뺁뺂뺃뺅\",6,\"뺎뺒\",5,\"뺚\",13,\"뺩\",14],[\"9641\",\"뺸\",23,\"뻒뻓\"],[\"9661\",\"뻕뻖뻙\",6,\"뻡뻢뻦\",5,\"뻭\",8],[\"9681\",\"뻶\",10,\"뼂\",5,\"뼊\",13,\"뼚뼞\",33,\"뽂뽃뽅뽆뽇뽉\",6,\"뽒뽓뽔뽖\",44],[\"9741\",\"뾃\",16,\"뾕\",8],[\"9761\",\"뾞\",17,\"뾱\",7],[\"9781\",\"뾹\",11,\"뿆\",5,\"뿎뿏뿑뿒뿓뿕\",6,\"뿝뿞뿠뿢\",89,\"쀽쀾쀿\"],[\"9841\",\"쁀\",16,\"쁒\",5,\"쁙쁚쁛\"],[\"9861\",\"쁝쁞쁟쁡\",6,\"쁪\",15],[\"9881\",\"쁺\",21,\"삒삓삕삖삗삙\",6,\"삢삤삦\",5,\"삮삱삲삷\",4,\"삾샂샃샄샆샇샊샋샍샎샏샑\",6,\"샚샞\",5,\"샦샧샩샪샫샭\",6,\"샶샸샺\",5,\"섁섂섃섅섆섇섉\",6,\"섑섒섓섔섖\",5,\"섡섢섥섨섩섪섫섮\"],[\"9941\",\"섲섳섴섵섷섺섻섽섾섿셁\",6,\"셊셎\",5,\"셖셗\"],[\"9961\",\"셙셚셛셝\",6,\"셦셪\",5,\"셱셲셳셵셶셷셹셺셻\"],[\"9981\",\"셼\",8,\"솆\",5,\"솏솑솒솓솕솗\",4,\"솞솠솢솣솤솦솧솪솫솭솮솯솱\",11,\"솾\",5,\"쇅쇆쇇쇉쇊쇋쇍\",6,\"쇕쇖쇙\",6,\"쇡쇢쇣쇥쇦쇧쇩\",6,\"쇲쇴\",7,\"쇾쇿숁숂숃숅\",6,\"숎숐숒\",5,\"숚숛숝숞숡숢숣\"],[\"9a41\",\"숤숥숦숧숪숬숮숰숳숵\",16],[\"9a61\",\"쉆쉇쉉\",6,\"쉒쉓쉕쉖쉗쉙\",6,\"쉡쉢쉣쉤쉦\"],[\"9a81\",\"쉧\",4,\"쉮쉯쉱쉲쉳쉵\",6,\"쉾슀슂\",5,\"슊\",5,\"슑\",6,\"슙슚슜슞\",5,\"슦슧슩슪슫슮\",5,\"슶슸슺\",33,\"싞싟싡싢싥\",5,\"싮싰싲싳싴싵싷싺싽싾싿쌁\",6,\"쌊쌋쌎쌏\"],[\"9b41\",\"쌐쌑쌒쌖쌗쌙쌚쌛쌝\",6,\"쌦쌧쌪\",8],[\"9b61\",\"쌳\",17,\"썆\",7],[\"9b81\",\"썎\",25,\"썪썫썭썮썯썱썳\",4,\"썺썻썾\",5,\"쎅쎆쎇쎉쎊쎋쎍\",50,\"쏁\",22,\"쏚\"],[\"9c41\",\"쏛쏝쏞쏡쏣\",4,\"쏪쏫쏬쏮\",5,\"쏶쏷쏹\",5],[\"9c61\",\"쏿\",8,\"쐉\",6,\"쐑\",9],[\"9c81\",\"쐛\",8,\"쐥\",6,\"쐭쐮쐯쐱쐲쐳쐵\",6,\"쐾\",9,\"쑉\",26,\"쑦쑧쑩쑪쑫쑭\",6,\"쑶쑷쑸쑺\",5,\"쒁\",18,\"쒕\",6,\"쒝\",12],[\"9d41\",\"쒪\",13,\"쒹쒺쒻쒽\",8],[\"9d61\",\"쓆\",25],[\"9d81\",\"쓠\",8,\"쓪\",5,\"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂\",9,\"씍씎씏씑씒씓씕\",6,\"씝\",10,\"씪씫씭씮씯씱\",6,\"씺씼씾\",5,\"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩\",6,\"앲앶\",5,\"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔\"],[\"9e41\",\"얖얙얚얛얝얞얟얡\",7,\"얪\",9,\"얶\"],[\"9e61\",\"얷얺얿\",4,\"엋엍엏엒엓엕엖엗엙\",6,\"엢엤엦엧\"],[\"9e81\",\"엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑\",6,\"옚옝\",6,\"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉\",6,\"왒왖\",5,\"왞왟왡\",10,\"왭왮왰왲\",5,\"왺왻왽왾왿욁\",6,\"욊욌욎\",5,\"욖욗욙욚욛욝\",6,\"욦\"],[\"9f41\",\"욨욪\",5,\"욲욳욵욶욷욻\",4,\"웂웄웆\",5,\"웎\"],[\"9f61\",\"웏웑웒웓웕\",6,\"웞웟웢\",5,\"웪웫웭웮웯웱웲\"],[\"9f81\",\"웳\",4,\"웺웻웼웾\",5,\"윆윇윉윊윋윍\",6,\"윖윘윚\",5,\"윢윣윥윦윧윩\",6,\"윲윴윶윸윹윺윻윾윿읁읂읃읅\",4,\"읋읎읐읙읚읛읝읞읟읡\",6,\"읩읪읬\",7,\"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛\",4,\"잢잧\",4,\"잮잯잱잲잳잵잶잷\"],[\"a041\",\"잸잹잺잻잾쟂\",5,\"쟊쟋쟍쟏쟑\",6,\"쟙쟚쟛쟜\"],[\"a061\",\"쟞\",5,\"쟥쟦쟧쟩쟪쟫쟭\",13],[\"a081\",\"쟻\",4,\"젂젃젅젆젇젉젋\",4,\"젒젔젗\",4,\"젞젟젡젢젣젥\",6,\"젮젰젲\",5,\"젹젺젻젽젾젿졁\",6,\"졊졋졎\",5,\"졕\",26,\"졲졳졵졶졷졹졻\",4,\"좂좄좈좉좊좎\",5,\"좕\",7,\"좞좠좢좣좤\"],[\"a141\",\"좥좦좧좩\",18,\"좾좿죀죁\"],[\"a161\",\"죂죃죅죆죇죉죊죋죍\",6,\"죖죘죚\",5,\"죢죣죥\"],[\"a181\",\"죦\",14,\"죶\",5,\"죾죿줁줂줃줇\",4,\"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈\",9,\"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢\"],[\"a241\",\"줐줒\",5,\"줙\",18],[\"a261\",\"줭\",6,\"줵\",18],[\"a281\",\"쥈\",7,\"쥒쥓쥕쥖쥗쥙\",6,\"쥢쥤\",7,\"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®\"],[\"a341\",\"쥱쥲쥳쥵\",6,\"쥽\",10,\"즊즋즍즎즏\"],[\"a361\",\"즑\",6,\"즚즜즞\",16],[\"a381\",\"즯\",16,\"짂짃짅짆짉짋\",4,\"짒짔짗짘짛！\",58,\"￦］\",32,\"￣\"],[\"a441\",\"짞짟짡짣짥짦짨짩짪짫짮짲\",5,\"짺짻짽짾짿쨁쨂쨃쨄\"],[\"a461\",\"쨅쨆쨇쨊쨎\",5,\"쨕쨖쨗쨙\",12],[\"a481\",\"쨦쨧쨨쨪\",28,\"ㄱ\",93],[\"a541\",\"쩇\",4,\"쩎쩏쩑쩒쩓쩕\",6,\"쩞쩢\",5,\"쩩쩪\"],[\"a561\",\"쩫\",17,\"쩾\",5,\"쪅쪆\"],[\"a581\",\"쪇\",16,\"쪙\",14,\"ⅰ\",9],[\"a5b0\",\"Ⅰ\",9],[\"a5c1\",\"Α\",16,\"Σ\",6],[\"a5e1\",\"α\",16,\"σ\",6],[\"a641\",\"쪨\",19,\"쪾쪿쫁쫂쫃쫅\"],[\"a661\",\"쫆\",5,\"쫎쫐쫒쫔쫕쫖쫗쫚\",5,\"쫡\",6],[\"a681\",\"쫨쫩쫪쫫쫭\",6,\"쫵\",18,\"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃\",7],[\"a741\",\"쬋\",4,\"쬑쬒쬓쬕쬖쬗쬙\",6,\"쬢\",7],[\"a761\",\"쬪\",22,\"쭂쭃쭄\"],[\"a781\",\"쭅쭆쭇쭊쭋쭍쭎쭏쭑\",6,\"쭚쭛쭜쭞\",5,\"쭥\",7,\"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙\",9,\"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰\",9,\"㎀\",4,\"㎺\",5,\"㎐\",4,\"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆\"],[\"a841\",\"쭭\",10,\"쭺\",14],[\"a861\",\"쮉\",18,\"쮝\",6],[\"a881\",\"쮤\",19,\"쮹\",11,\"ÆÐªĦ\"],[\"a8a6\",\"Ĳ\"],[\"a8a8\",\"ĿŁØŒºÞŦŊ\"],[\"a8b1\",\"㉠\",27,\"ⓐ\",25,\"①\",14,\"½⅓⅔¼¾⅛⅜⅝⅞\"],[\"a941\",\"쯅\",14,\"쯕\",10],[\"a961\",\"쯠쯡쯢쯣쯥쯦쯨쯪\",18],[\"a981\",\"쯽\",14,\"찎찏찑찒찓찕\",6,\"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀\",27,\"⒜\",25,\"⑴\",14,\"¹²³⁴ⁿ₁₂₃₄\"],[\"aa41\",\"찥찦찪찫찭찯찱\",6,\"찺찿\",4,\"챆챇챉챊챋챍챎\"],[\"aa61\",\"챏\",4,\"챖챚\",5,\"챡챢챣챥챧챩\",6,\"챱챲\"],[\"aa81\",\"챳챴챶\",29,\"ぁ\",82],[\"ab41\",\"첔첕첖첗첚첛첝첞첟첡\",6,\"첪첮\",5,\"첶첷첹\"],[\"ab61\",\"첺첻첽\",6,\"쳆쳈쳊\",5,\"쳑쳒쳓쳕\",5],[\"ab81\",\"쳛\",8,\"쳥\",6,\"쳭쳮쳯쳱\",12,\"ァ\",85],[\"ac41\",\"쳾쳿촀촂\",5,\"촊촋촍촎촏촑\",6,\"촚촜촞촟촠\"],[\"ac61\",\"촡촢촣촥촦촧촩촪촫촭\",11,\"촺\",4],[\"ac81\",\"촿\",28,\"쵝쵞쵟А\",5,\"ЁЖ\",25],[\"acd1\",\"а\",5,\"ёж\",25],[\"ad41\",\"쵡쵢쵣쵥\",6,\"쵮쵰쵲\",5,\"쵹\",7],[\"ad61\",\"춁\",6,\"춉\",10,\"춖춗춙춚춛춝춞춟\"],[\"ad81\",\"춠춡춢춣춦춨춪\",5,\"춱\",18,\"췅\"],[\"ae41\",\"췆\",5,\"췍췎췏췑\",16],[\"ae61\",\"췢\",5,\"췩췪췫췭췮췯췱\",6,\"췺췼췾\",4],[\"ae81\",\"츃츅츆츇츉츊츋츍\",6,\"츕츖츗츘츚\",5,\"츢츣츥츦츧츩츪츫\"],[\"af41\",\"츬츭츮츯츲츴츶\",19],[\"af61\",\"칊\",13,\"칚칛칝칞칢\",5,\"칪칬\"],[\"af81\",\"칮\",5,\"칶칷칹칺칻칽\",6,\"캆캈캊\",5,\"캒캓캕캖캗캙\"],[\"b041\",\"캚\",5,\"캢캦\",5,\"캮\",12],[\"b061\",\"캻\",5,\"컂\",19],[\"b081\",\"컖\",13,\"컦컧컩컪컭\",6,\"컶컺\",5,\"가각간갇갈갉갊감\",7,\"같\",4,\"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆\"],[\"b141\",\"켂켃켅켆켇켉\",6,\"켒켔켖\",5,\"켝켞켟켡켢켣\"],[\"b161\",\"켥\",6,\"켮켲\",5,\"켹\",11],[\"b181\",\"콅\",14,\"콖콗콙콚콛콝\",6,\"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸\"],[\"b241\",\"콭콮콯콲콳콵콶콷콹\",6,\"쾁쾂쾃쾄쾆\",5,\"쾍\"],[\"b261\",\"쾎\",18,\"쾢\",5,\"쾩\"],[\"b281\",\"쾪\",5,\"쾱\",18,\"쿅\",6,\"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙\"],[\"b341\",\"쿌\",19,\"쿢쿣쿥쿦쿧쿩\"],[\"b361\",\"쿪\",5,\"쿲쿴쿶\",5,\"쿽쿾쿿퀁퀂퀃퀅\",5],[\"b381\",\"퀋\",5,\"퀒\",5,\"퀙\",19,\"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫\",4,\"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝\"],[\"b441\",\"퀮\",5,\"퀶퀷퀹퀺퀻퀽\",6,\"큆큈큊\",5],[\"b461\",\"큑큒큓큕큖큗큙\",6,\"큡\",10,\"큮큯\"],[\"b481\",\"큱큲큳큵\",6,\"큾큿킀킂\",18,\"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫\",4,\"닳담답닷\",4,\"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥\"],[\"b541\",\"킕\",14,\"킦킧킩킪킫킭\",5],[\"b561\",\"킳킶킸킺\",5,\"탂탃탅탆탇탊\",5,\"탒탖\",4],[\"b581\",\"탛탞탟탡탢탣탥\",6,\"탮탲\",5,\"탹\",11,\"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸\"],[\"b641\",\"턅\",7,\"턎\",17],[\"b661\",\"턠\",15,\"턲턳턵턶턷턹턻턼턽턾\"],[\"b681\",\"턿텂텆\",5,\"텎텏텑텒텓텕\",6,\"텞텠텢\",5,\"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗\"],[\"b741\",\"텮\",13,\"텽\",6,\"톅톆톇톉톊\"],[\"b761\",\"톋\",20,\"톢톣톥톦톧\"],[\"b781\",\"톩\",6,\"톲톴톶톷톸톹톻톽톾톿퇁\",14,\"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩\"],[\"b841\",\"퇐\",7,\"퇙\",17],[\"b861\",\"퇫\",8,\"퇵퇶퇷퇹\",13],[\"b881\",\"툈툊\",5,\"툑\",24,\"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많\",4,\"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼\"],[\"b941\",\"툪툫툮툯툱툲툳툵\",6,\"툾퉀퉂\",5,\"퉉퉊퉋퉌\"],[\"b961\",\"퉍\",14,\"퉝\",6,\"퉥퉦퉧퉨\"],[\"b981\",\"퉩\",22,\"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바\",4,\"받\",4,\"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗\"],[\"ba41\",\"튍튎튏튒튓튔튖\",5,\"튝튞튟튡튢튣튥\",6,\"튭\"],[\"ba61\",\"튮튯튰튲\",5,\"튺튻튽튾틁틃\",4,\"틊틌\",5],[\"ba81\",\"틒틓틕틖틗틙틚틛틝\",6,\"틦\",9,\"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤\"],[\"bb41\",\"틻\",4,\"팂팄팆\",5,\"팏팑팒팓팕팗\",4,\"팞팢팣\"],[\"bb61\",\"팤팦팧팪팫팭팮팯팱\",6,\"팺팾\",5,\"퍆퍇퍈퍉\"],[\"bb81\",\"퍊\",31,\"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤\"],[\"bc41\",\"퍪\",17,\"퍾퍿펁펂펃펅펆펇\"],[\"bc61\",\"펈펉펊펋펎펒\",5,\"펚펛펝펞펟펡\",6,\"펪펬펮\"],[\"bc81\",\"펯\",4,\"펵펶펷펹펺펻펽\",6,\"폆폇폊\",5,\"폑\",5,\"샥샨샬샴샵샷샹섀섄섈섐섕서\",4,\"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭\"],[\"bd41\",\"폗폙\",7,\"폢폤\",7,\"폮폯폱폲폳폵폶폷\"],[\"bd61\",\"폸폹폺폻폾퐀퐂\",5,\"퐉\",13],[\"bd81\",\"퐗\",5,\"퐞\",25,\"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰\"],[\"be41\",\"퐸\",7,\"푁푂푃푅\",14],[\"be61\",\"푔\",7,\"푝푞푟푡푢푣푥\",7,\"푮푰푱푲\"],[\"be81\",\"푳\",4,\"푺푻푽푾풁풃\",4,\"풊풌풎\",5,\"풕\",8,\"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄\",6,\"엌엎\"],[\"bf41\",\"풞\",10,\"풪\",14],[\"bf61\",\"풹\",18,\"퓍퓎퓏퓑퓒퓓퓕\"],[\"bf81\",\"퓖\",5,\"퓝퓞퓠\",7,\"퓩퓪퓫퓭퓮퓯퓱\",6,\"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염\",5,\"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨\"],[\"c041\",\"퓾\",5,\"픅픆픇픉픊픋픍\",6,\"픖픘\",5],[\"c061\",\"픞\",25],[\"c081\",\"픸픹픺픻픾픿핁핂핃핅\",6,\"핎핐핒\",5,\"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응\",7,\"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊\"],[\"c141\",\"핤핦핧핪핬핮\",5,\"핶핷핹핺핻핽\",6,\"햆햊햋\"],[\"c161\",\"햌햍햎햏햑\",19,\"햦햧\"],[\"c181\",\"햨\",31,\"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓\"],[\"c241\",\"헊헋헍헎헏헑헓\",4,\"헚헜헞\",5,\"헦헧헩헪헫헭헮\"],[\"c261\",\"헯\",4,\"헶헸헺\",5,\"혂혃혅혆혇혉\",6,\"혒\"],[\"c281\",\"혖\",5,\"혝혞혟혡혢혣혥\",7,\"혮\",9,\"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻\"],[\"c341\",\"혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝\",4],[\"c361\",\"홢\",4,\"홨홪\",5,\"홲홳홵\",11],[\"c381\",\"횁횂횄횆\",5,\"횎횏횑횒횓횕\",7,\"횞횠횢\",5,\"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층\"],[\"c441\",\"횫횭횮횯횱\",7,\"횺횼\",7,\"훆훇훉훊훋\"],[\"c461\",\"훍훎훏훐훒훓훕훖훘훚\",5,\"훡훢훣훥훦훧훩\",4],[\"c481\",\"훮훯훱훲훳훴훶\",5,\"훾훿휁휂휃휅\",11,\"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼\"],[\"c541\",\"휕휖휗휚휛휝휞휟휡\",6,\"휪휬휮\",5,\"휶휷휹\"],[\"c561\",\"휺휻휽\",6,\"흅흆흈흊\",5,\"흒흓흕흚\",4],[\"c581\",\"흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵\",6,\"흾흿힀힂\",5,\"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜\"],[\"c641\",\"힍힎힏힑\",6,\"힚힜힞\",5],[\"c6a1\",\"퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁\"],[\"c7a1\",\"퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠\"],[\"c8a1\",\"혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝\"],[\"caa1\",\"伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕\"],[\"cba1\",\"匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢\"],[\"cca1\",\"瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械\"],[\"cda1\",\"棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜\"],[\"cea1\",\"科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾\"],[\"cfa1\",\"區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴\"],[\"d0a1\",\"鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣\"],[\"d1a1\",\"朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩\",5,\"那樂\",4,\"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉\"],[\"d2a1\",\"納臘蠟衲囊娘廊\",4,\"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧\",5,\"駑魯\",10,\"濃籠聾膿農惱牢磊腦賂雷尿壘\",7,\"嫩訥杻紐勒\",5,\"能菱陵尼泥匿溺多茶\"],[\"d3a1\",\"丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃\"],[\"d4a1\",\"棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅\"],[\"d5a1\",\"蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣\"],[\"d6a1\",\"煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼\"],[\"d7a1\",\"遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬\"],[\"d8a1\",\"立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅\"],[\"d9a1\",\"蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文\"],[\"daa1\",\"汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑\"],[\"dba1\",\"發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖\"],[\"dca1\",\"碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦\"],[\"dda1\",\"孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥\"],[\"dea1\",\"脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索\"],[\"dfa1\",\"傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署\"],[\"e0a1\",\"胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬\"],[\"e1a1\",\"聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁\"],[\"e2a1\",\"戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧\"],[\"e3a1\",\"嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁\"],[\"e4a1\",\"沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額\"],[\"e5a1\",\"櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬\"],[\"e6a1\",\"旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒\"],[\"e7a1\",\"簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳\"],[\"e8a1\",\"烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療\"],[\"e9a1\",\"窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓\"],[\"eaa1\",\"運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜\"],[\"eba1\",\"濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼\"],[\"eca1\",\"議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄\"],[\"eda1\",\"立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長\"],[\"eea1\",\"障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱\"],[\"efa1\",\"煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖\"],[\"f0a1\",\"靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫\"],[\"f1a1\",\"踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只\"],[\"f2a1\",\"咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯\"],[\"f3a1\",\"鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策\"],[\"f4a1\",\"責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢\"],[\"f5a1\",\"椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃\"],[\"f6a1\",\"贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託\"],[\"f7a1\",\"鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑\"],[\"f8a1\",\"阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃\"],[\"f9a1\",\"品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航\"],[\"faa1\",\"行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型\"],[\"fba1\",\"形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵\"],[\"fca1\",\"禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆\"],[\"fda1\",\"爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰\"]]},function(e){e.exports=[[\"8740\",\"䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻\"],[\"8767\",\"綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬\"],[\"87a1\",\"𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋\"],[\"8840\",\"㇀\",4,\"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ\"],[\"88a1\",\"ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛\"],[\"8940\",\"𪎩𡅅\"],[\"8943\",\"攊\"],[\"8946\",\"丽滝鵎釟\"],[\"894c\",\"𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮\"],[\"89a1\",\"琑糼緍楆竉刧\"],[\"89ab\",\"醌碸酞肼\"],[\"89b0\",\"贋胶𠧧\"],[\"89b5\",\"肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁\"],[\"89c1\",\"溚舾甙\"],[\"89c5\",\"䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅\"],[\"8a40\",\"𧶄唥\"],[\"8a43\",\"𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓\"],[\"8a64\",\"𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕\"],[\"8a76\",\"䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯\"],[\"8aa1\",\"𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱\"],[\"8aac\",\"䠋𠆩㿺塳𢶍\"],[\"8ab2\",\"𤗈𠓼𦂗𠽌𠶖啹䂻䎺\"],[\"8abb\",\"䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃\"],[\"8ac9\",\"𪘁𠸉𢫏𢳉\"],[\"8ace\",\"𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻\"],[\"8adf\",\"𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌\"],[\"8af6\",\"𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭\"],[\"8b40\",\"𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹\"],[\"8b55\",\"𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑\"],[\"8ba1\",\"𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁\"],[\"8bde\",\"𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢\"],[\"8c40\",\"倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋\"],[\"8ca1\",\"𣏹椙橃𣱣泿\"],[\"8ca7\",\"爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚\"],[\"8cc9\",\"顨杫䉶圽\"],[\"8cce\",\"藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶\"],[\"8ce6\",\"峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻\"],[\"8d40\",\"𠮟\"],[\"8d42\",\"𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱\"],[\"8da1\",\"㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘\"],[\"8e40\",\"𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎\"],[\"8ea1\",\"繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛\"],[\"8f40\",\"蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖\"],[\"8fa1\",\"𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起\"],[\"9040\",\"趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛\"],[\"90a1\",\"𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜\"],[\"9140\",\"𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈\"],[\"91a1\",\"鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨\"],[\"9240\",\"𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘\"],[\"92a1\",\"働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃\"],[\"9340\",\"媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍\"],[\"93a1\",\"摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋\"],[\"9440\",\"銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻\"],[\"94a1\",\"㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡\"],[\"9540\",\"𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂\"],[\"95a1\",\"衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰\"],[\"9640\",\"桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸\"],[\"96a1\",\"𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉\"],[\"9740\",\"愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫\"],[\"97a1\",\"𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎\"],[\"9840\",\"𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦\"],[\"98a1\",\"咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃\"],[\"9940\",\"䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚\"],[\"99a1\",\"䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿\"],[\"9a40\",\"鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺\"],[\"9aa1\",\"黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪\"],[\"9b40\",\"𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌\"],[\"9b62\",\"𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎\"],[\"9ba1\",\"椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊\"],[\"9c40\",\"嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶\"],[\"9ca1\",\"㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏\"],[\"9d40\",\"𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁\"],[\"9da1\",\"辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢\"],[\"9e40\",\"𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺\"],[\"9ea1\",\"鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭\"],[\"9ead\",\"𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹\"],[\"9ec5\",\"㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲\"],[\"9ef5\",\"噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼\"],[\"9f40\",\"籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱\"],[\"9f4f\",\"凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰\"],[\"9fa1\",\"椬叚鰊鴂䰻陁榀傦畆𡝭駚剳\"],[\"9fae\",\"酙隁酜\"],[\"9fb2\",\"酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽\"],[\"9fc1\",\"𤤙盖鮝个𠳔莾衂\"],[\"9fc9\",\"届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳\"],[\"9fdb\",\"歒酼龥鮗頮颴骺麨麄煺笔\"],[\"9fe7\",\"毺蠘罸\"],[\"9feb\",\"嘠𪙊蹷齓\"],[\"9ff0\",\"跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇\"],[\"a040\",\"𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷\"],[\"a055\",\"𡠻𦸅\"],[\"a058\",\"詾𢔛\"],[\"a05b\",\"惽癧髗鵄鍮鮏蟵\"],[\"a063\",\"蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽\"],[\"a073\",\"坟慯抦戹拎㩜懢厪𣏵捤栂㗒\"],[\"a0a1\",\"嵗𨯂迚𨸹\"],[\"a0a6\",\"僙𡵆礆匲阸𠼻䁥\"],[\"a0ae\",\"矾\"],[\"a0b0\",\"糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦\"],[\"a0d4\",\"覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷\"],[\"a0e2\",\"罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫\"],[\"a3c0\",\"␀\",31,\"␡\"],[\"c6a1\",\"①\",9,\"⑴\",9,\"ⅰ\",9,\"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ\",23],[\"c740\",\"す\",58,\"ァアィイ\"],[\"c7a1\",\"ゥ\",81,\"А\",5,\"ЁЖ\",4],[\"c840\",\"Л\",26,\"ёж\",25,\"⇧↸↹㇏𠃌乚𠂊刂䒑\"],[\"c8a1\",\"龰冈龱𧘇\"],[\"c8cd\",\"￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣\"],[\"c8f5\",\"ʃɐɛɔɵœøŋʊɪ\"],[\"f9fe\",\"￭\"],[\"fa40\",\"𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸\"],[\"faa1\",\"鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍\"],[\"fb40\",\"𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙\"],[\"fba1\",\"𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂\"],[\"fc40\",\"廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷\"],[\"fca1\",\"𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝\"],[\"fd40\",\"𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀\"],[\"fda1\",\"𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎\"],[\"fe40\",\"鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌\"],[\"fea1\",\"𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔\"]]},function(e,t,r){\"use strict\";var n=r(21).Buffer,i=r(22).Transform;function o(e,t){this.conv=e,(t=t||{}).decodeStrings=!1,i.call(this,t)}function s(e,t){this.conv=e,(t=t||{}).encoding=this.encoding=\"utf8\",i.call(this,t)}e.exports=function(e){e.encodeStream=function(t,r){return new o(e.getEncoder(t,r),r)},e.decodeStream=function(t,r){return new s(e.getDecoder(t,r),r)},e.supportsStreams=!0,e.IconvLiteEncoderStream=o,e.IconvLiteDecoderStream=s,e._collect=s.prototype.collect},o.prototype=Object.create(i.prototype,{constructor:{value:o}}),o.prototype._transform=function(e,t,r){if(\"string\"!=typeof e)return r(new Error(\"Iconv encoding stream needs strings as its input.\"));try{var n=this.conv.write(e);n&&n.length&&this.push(n),r()}catch(e){r(e)}},o.prototype._flush=function(e){try{var t=this.conv.end();t&&t.length&&this.push(t),e()}catch(t){e(t)}},o.prototype.collect=function(e){var t=[];return this.on(\"error\",e),this.on(\"data\",function(e){t.push(e)}),this.on(\"end\",function(){e(null,n.concat(t))}),this},s.prototype=Object.create(i.prototype,{constructor:{value:s}}),s.prototype._transform=function(e,t,r){if(!n.isBuffer(e))return r(new Error(\"Iconv decoding stream needs buffers as its input.\"));try{var i=this.conv.write(e);i&&i.length&&this.push(i,this.encoding),r()}catch(e){r(e)}},s.prototype._flush=function(e){try{var t=this.conv.end();t&&t.length&&this.push(t,this.encoding),e()}catch(t){e(t)}},s.prototype.collect=function(e){var t=\"\";return this.on(\"error\",e),this.on(\"data\",function(e){t+=e}),this.on(\"end\",function(){e(null,t)}),this}},function(e,t,r){\"use strict\";var n=r(21).Buffer;e.exports=function(e){var t=void 0;e.supportsNodeEncodingsExtension=!(n.from||new n(0)instanceof Uint8Array),e.extendNodeEncodings=function(){if(!t){if(t={},!e.supportsNodeEncodingsExtension)return console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\"),void console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");var i={hex:!0,utf8:!0,\"utf-8\":!0,ascii:!0,binary:!0,base64:!0,ucs2:!0,\"ucs-2\":!0,utf16le:!0,\"utf-16le\":!0};n.isNativeEncoding=function(e){return e&&i[e.toLowerCase()]};var o=r(21).SlowBuffer;if(t.SlowBufferToString=o.prototype.toString,o.prototype.toString=function(r,i,o){return r=String(r||\"utf8\").toLowerCase(),n.isNativeEncoding(r)?t.SlowBufferToString.call(this,r,i,o):(void 0===i&&(i=0),void 0===o&&(o=this.length),e.decode(this.slice(i,o),r))},t.SlowBufferWrite=o.prototype.write,o.prototype.write=function(r,i,o,s){if(isFinite(i))isFinite(o)||(s=o,o=void 0);else{var a=s;s=i,i=o,o=a}i=+i||0;var c=this.length-i;if(o?(o=+o)>c&&(o=c):o=c,s=String(s||\"utf8\").toLowerCase(),n.isNativeEncoding(s))return t.SlowBufferWrite.call(this,r,i,o,s);if(r.length>0&&(o<0||i<0))throw new RangeError(\"attempt to write beyond buffer bounds\");var u=e.encode(r,s);return u.length<o&&(o=u.length),u.copy(this,i,0,o),o},t.BufferIsEncoding=n.isEncoding,n.isEncoding=function(t){return n.isNativeEncoding(t)||e.encodingExists(t)},t.BufferByteLength=n.byteLength,n.byteLength=o.byteLength=function(r,i){return i=String(i||\"utf8\").toLowerCase(),n.isNativeEncoding(i)?t.BufferByteLength.call(this,r,i):e.encode(r,i).length},t.BufferToString=n.prototype.toString,n.prototype.toString=function(r,i,o){return r=String(r||\"utf8\").toLowerCase(),n.isNativeEncoding(r)?t.BufferToString.call(this,r,i,o):(void 0===i&&(i=0),void 0===o&&(o=this.length),e.decode(this.slice(i,o),r))},t.BufferWrite=n.prototype.write,n.prototype.write=function(r,i,o,s){var a=i,c=o,u=s;if(isFinite(i))isFinite(o)||(s=o,o=void 0);else{var l=s;s=i,i=o,o=l}if(s=String(s||\"utf8\").toLowerCase(),n.isNativeEncoding(s))return t.BufferWrite.call(this,r,a,c,u);i=+i||0;var h=this.length-i;if(o?(o=+o)>h&&(o=h):o=h,r.length>0&&(o<0||i<0))throw new RangeError(\"attempt to write beyond buffer bounds\");var p=e.encode(r,s);return p.length<o&&(o=p.length),p.copy(this,i,0,o),o},e.supportsStreams){var s=r(22).Readable;t.ReadableSetEncoding=s.prototype.setEncoding,s.prototype.setEncoding=function(t,r){this._readableState.decoder=e.getDecoder(t,r),this._readableState.encoding=t},s.prototype.collect=e._collect}}},e.undoExtendNodeEncodings=function(){if(e.supportsNodeEncodingsExtension){if(!t)throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\");delete n.isNativeEncoding;var i=r(21).SlowBuffer;if(i.prototype.toString=t.SlowBufferToString,i.prototype.write=t.SlowBufferWrite,n.isEncoding=t.BufferIsEncoding,n.byteLength=t.BufferByteLength,n.prototype.toString=t.BufferToString,n.prototype.write=t.BufferWrite,e.supportsStreams){var o=r(22).Readable;o.prototype.setEncoding=t.ReadableSetEncoding,delete o.prototype.collect}t=void 0}}}},function(e,t,r){\"use strict\";const n=e=>Array.from(e).map(e=>e.charCodeAt(0)),i=n(\"META-INF/mozilla.rsa\"),o=n(\"[Content_Types].xml\"),s=n(\"_rels/.rels\");e.exports=(e=>{const t=e instanceof Uint8Array?e:new Uint8Array(e);if(!(t&&t.length>1))return null;const r=(e,r)=>{r=Object.assign({offset:0},r);for(let n=0;n<e.length;n++)if(r.mask){if(e[n]!==(r.mask[n]&t[n+r.offset]))return!1}else if(e[n]!==t[n+r.offset])return!1;return!0};if(r([255,216,255]))return{ext:\"jpg\",mime:\"image/jpeg\"};if(r([137,80,78,71,13,10,26,10]))return{ext:\"png\",mime:\"image/png\"};if(r([71,73,70]))return{ext:\"gif\",mime:\"image/gif\"};if(r([87,69,66,80],{offset:8}))return{ext:\"webp\",mime:\"image/webp\"};if(r([70,76,73,70]))return{ext:\"flif\",mime:\"image/flif\"};if((r([73,73,42,0])||r([77,77,0,42]))&&r([67,82],{offset:8}))return{ext:\"cr2\",mime:\"image/x-canon-cr2\"};if(r([73,73,42,0])||r([77,77,0,42]))return{ext:\"tif\",mime:\"image/tiff\"};if(r([66,77]))return{ext:\"bmp\",mime:\"image/bmp\"};if(r([73,73,188]))return{ext:\"jxr\",mime:\"image/vnd.ms-photo\"};if(r([56,66,80,83]))return{ext:\"psd\",mime:\"image/vnd.adobe.photoshop\"};if(r([80,75,3,4])){if(r([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:\"epub\",mime:\"application/epub+zip\"};if(r(i,{offset:30}))return{ext:\"xpi\",mime:\"application/x-xpinstall\"};if(r(o,{offset:30})||r(s,{offset:30})){const e=e=>e.findIndex((e,t,r)=>80===r[t]&&75===r[t+1]&&3===r[t+2]&&4===r[t+3]),i=e(t.subarray(4,2004));if(-1!==i){const o=e(t.subarray(i+8,i+8+1e3));if(-1!==o){const e=8+i+o+30;if(r(n(\"word/\"),{offset:e}))return{ext:\"docx\",mime:\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"};if(r(n(\"ppt/\"),{offset:e}))return{ext:\"pptx\",mime:\"application/vnd.openxmlformats-officedocument.presentationml.presentation\"};if(r(n(\"xl/\"),{offset:e}))return{ext:\"xlsx\",mime:\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}}}}}if(r([80,75])&&(3===t[2]||5===t[2]||7===t[2])&&(4===t[3]||6===t[3]||8===t[3]))return{ext:\"zip\",mime:\"application/zip\"};if(r([117,115,116,97,114],{offset:257}))return{ext:\"tar\",mime:\"application/x-tar\"};if(r([82,97,114,33,26,7])&&(0===t[6]||1===t[6]))return{ext:\"rar\",mime:\"application/x-rar-compressed\"};if(r([31,139,8]))return{ext:\"gz\",mime:\"application/gzip\"};if(r([66,90,104]))return{ext:\"bz2\",mime:\"application/x-bzip2\"};if(r([55,122,188,175,39,28]))return{ext:\"7z\",mime:\"application/x-7z-compressed\"};if(r([120,1]))return{ext:\"dmg\",mime:\"application/x-apple-diskimage\"};if(r([51,103,112,53])||r([0,0,0])&&r([102,116,121,112],{offset:4})&&(r([109,112,52,49],{offset:8})||r([109,112,52,50],{offset:8})||r([105,115,111,109],{offset:8})||r([105,115,111,50],{offset:8})||r([109,109,112,52],{offset:8})||r([77,52,86],{offset:8})||r([100,97,115,104],{offset:8})))return{ext:\"mp4\",mime:\"video/mp4\"};if(r([77,84,104,100]))return{ext:\"mid\",mime:\"audio/midi\"};if(r([26,69,223,163])){const e=t.subarray(4,4100),r=e.findIndex((e,t,r)=>66===r[t]&&130===r[t+1]);if(-1!==r){const t=r+3,n=r=>Array.from(r).every((r,n)=>e[t+n]===r.charCodeAt(0));if(n(\"matroska\"))return{ext:\"mkv\",mime:\"video/x-matroska\"};if(n(\"webm\"))return{ext:\"webm\",mime:\"video/webm\"}}}if(r([0,0,0,20,102,116,121,112,113,116,32,32])||r([102,114,101,101],{offset:4})||r([102,116,121,112,113,116,32,32],{offset:4})||r([109,100,97,116],{offset:4})||r([119,105,100,101],{offset:4}))return{ext:\"mov\",mime:\"video/quicktime\"};if(r([82,73,70,70])&&r([65,86,73],{offset:8}))return{ext:\"avi\",mime:\"video/x-msvideo\"};if(r([48,38,178,117,142,102,207,17,166,217]))return{ext:\"wmv\",mime:\"video/x-ms-wmv\"};if(r([0,0,1,186]))return{ext:\"mpg\",mime:\"video/mpeg\"};if(r([0,0,0,28,102,116,121,112,51,103,112,52]))return{ext:\"3gp\",mime:\"video/3gpp\"};for(let e=0;e<2&&e<t.length-16;e++)if(r([73,68,51],{offset:e})||r([255,226],{offset:e,mask:[255,226]}))return{ext:\"mp3\",mime:\"audio/mpeg\"};if(r([102,116,121,112,77,52,65],{offset:4})||r([77,52,65,32]))return{ext:\"m4a\",mime:\"audio/m4a\"};if(r([79,112,117,115,72,101,97,100],{offset:28}))return{ext:\"opus\",mime:\"audio/opus\"};if(r([79,103,103,83]))return r([128,116,104,101,111,114,97],{offset:28})?{ext:\"ogv\",mime:\"video/ogg\"}:r([1,118,105,100,101,111,0],{offset:28})?{ext:\"ogm\",mime:\"video/ogg\"}:r([127,70,76,65,67],{offset:28})?{ext:\"oga\",mime:\"audio/ogg\"}:r([83,112,101,101,120,32,32],{offset:28})?{ext:\"spx\",mime:\"audio/ogg\"}:r([1,118,111,114,98,105,115],{offset:28})?{ext:\"ogg\",mime:\"audio/ogg\"}:{ext:\"ogx\",mime:\"application/ogg\"};if(r([102,76,97,67]))return{ext:\"flac\",mime:\"audio/x-flac\"};if(r([82,73,70,70])&&r([87,65,86,69],{offset:8}))return{ext:\"wav\",mime:\"audio/x-wav\"};if(r([35,33,65,77,82,10]))return{ext:\"amr\",mime:\"audio/amr\"};if(r([37,80,68,70]))return{ext:\"pdf\",mime:\"application/pdf\"};if(r([77,90]))return{ext:\"exe\",mime:\"application/x-msdownload\"};if((67===t[0]||70===t[0])&&r([87,83],{offset:1}))return{ext:\"swf\",mime:\"application/x-shockwave-flash\"};if(r([123,92,114,116,102]))return{ext:\"rtf\",mime:\"application/rtf\"};if(r([0,97,115,109]))return{ext:\"wasm\",mime:\"application/wasm\"};if(r([119,79,70,70])&&(r([0,1,0,0],{offset:4})||r([79,84,84,79],{offset:4})))return{ext:\"woff\",mime:\"font/woff\"};if(r([119,79,70,50])&&(r([0,1,0,0],{offset:4})||r([79,84,84,79],{offset:4})))return{ext:\"woff2\",mime:\"font/woff2\"};if(r([76,80],{offset:34})&&(r([0,0,1],{offset:8})||r([1,0,2],{offset:8})||r([2,0,2],{offset:8})))return{ext:\"eot\",mime:\"application/octet-stream\"};if(r([0,1,0,0,0]))return{ext:\"ttf\",mime:\"font/ttf\"};if(r([79,84,84,79,0]))return{ext:\"otf\",mime:\"font/otf\"};if(r([0,0,1,0]))return{ext:\"ico\",mime:\"image/x-icon\"};if(r([70,76,86,1]))return{ext:\"flv\",mime:\"video/x-flv\"};if(r([37,33]))return{ext:\"ps\",mime:\"application/postscript\"};if(r([253,55,122,88,90,0]))return{ext:\"xz\",mime:\"application/x-xz\"};if(r([83,81,76,105]))return{ext:\"sqlite\",mime:\"application/x-sqlite3\"};if(r([78,69,83,26]))return{ext:\"nes\",mime:\"application/x-nintendo-nes-rom\"};if(r([67,114,50,52]))return{ext:\"crx\",mime:\"application/x-google-chrome-extension\"};if(r([77,83,67,70])||r([73,83,99,40]))return{ext:\"cab\",mime:\"application/vnd.ms-cab-compressed\"};if(r([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:\"deb\",mime:\"application/x-deb\"};if(r([33,60,97,114,99,104,62]))return{ext:\"ar\",mime:\"application/x-unix-archive\"};if(r([237,171,238,219]))return{ext:\"rpm\",mime:\"application/x-rpm\"};if(r([31,160])||r([31,157]))return{ext:\"Z\",mime:\"application/x-compress\"};if(r([76,90,73,80]))return{ext:\"lz\",mime:\"application/x-lzip\"};if(r([208,207,17,224,161,177,26,225]))return{ext:\"msi\",mime:\"application/x-msi\"};if(r([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:\"mxf\",mime:\"application/mxf\"};if(r([71],{offset:4})&&(r([71],{offset:192})||r([71],{offset:196})))return{ext:\"mts\",mime:\"video/mp2t\"};if(r([66,76,69,78,68,69,82]))return{ext:\"blend\",mime:\"application/x-blender\"};if(r([66,80,71,251]))return{ext:\"bpg\",mime:\"image/bpg\"};if(r([0,0,0,12,106,80,32,32,13,10,135,10])){if(r([106,112,50,32],{offset:20}))return{ext:\"jp2\",mime:\"image/jp2\"};if(r([106,112,120,32],{offset:20}))return{ext:\"jpx\",mime:\"image/jpx\"};if(r([106,112,109,32],{offset:20}))return{ext:\"jpm\",mime:\"image/jpm\"};if(r([109,106,112,50],{offset:20}))return{ext:\"mj2\",mime:\"image/mj2\"}}return r([70,79,82,77,0])?{ext:\"aif\",mime:\"audio/aiff\"}:null})},function(e,t){e.exports=require(\"util\")},function(e,t,r){\"use strict\";r.r(t),r.d(t,\"setUriThrowOnMissingScheme\",function(){return l}),r.d(t,\"URI\",function(){return g});var n,i=function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();if(\"object\"==typeof process)n=\"win32\"===process.platform;else if(\"object\"==typeof navigator){var o=navigator.userAgent;n=o.indexOf(\"Windows\")>=0}var s=/^\\w[\\w\\d+.-]*$/,a=/^\\//,c=/^\\/\\//,u=!0;function l(e){var t=u;return u=e,t}var h,p=\"\",d=\"/\",f=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/,g=function(){function e(e,t,r,n,i,o){void 0===o&&(o=!1),\"object\"==typeof e?(this.scheme=e.scheme||p,this.authority=e.authority||p,this.path=e.path||p,this.query=e.query||p,this.fragment=e.fragment||p):(this.scheme=function(e,t){return t||u?e||p:(e||(e=\"file\"),e)}(e,o),this.authority=t||p,this.path=function(e,t){switch(e){case\"https\":case\"http\":case\"file\":t?t[0]!==d&&(t=d+t):t=d}return t}(this.scheme,r||p),this.query=n||p,this.fragment=i||p,function(e,t){if(!e.scheme&&(t||u))throw new Error('[UriError]: Scheme is missing: {scheme: \"\", authority: \"'+e.authority+'\", path: \"'+e.path+'\", query: \"'+e.query+'\", fragment: \"'+e.fragment+'\"}');if(e.scheme&&!s.test(e.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(e.path)if(e.authority){if(!a.test(e.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(c.test(e.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}(this,o))}return e.isUri=function(t){return t instanceof e||!!t&&(\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"function\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString)},Object.defineProperty(e.prototype,\"fsPath\",{get:function(){return C(this)},enumerable:!0,configurable:!0}),e.prototype.with=function(e){if(!e)return this;var t=e.scheme,r=e.authority,n=e.path,i=e.query,o=e.fragment;return void 0===t?t=this.scheme:null===t&&(t=p),void 0===r?r=this.authority:null===r&&(r=p),void 0===n?n=this.path:null===n&&(n=p),void 0===i?i=this.query:null===i&&(i=p),void 0===o?o=this.fragment:null===o&&(o=p),t===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new y(t,r,n,i,o)},e.parse=function(e,t){void 0===t&&(t=!1);var r=f.exec(e);return r?new y(r[2]||p,decodeURIComponent(r[4]||p),decodeURIComponent(r[5]||p),decodeURIComponent(r[7]||p),decodeURIComponent(r[9]||p),t):new y(p,p,p,p,p)},e.file=function(e){var t=p;if(n&&(e=e.replace(/\\\\/g,d)),e[0]===d&&e[1]===d){var r=e.indexOf(d,2);-1===r?(t=e.substring(2),e=d):(t=e.substring(2,r),e=e.substring(r)||d)}return new y(\"file\",t,e,p,p)},e.from=function(e){return new y(e.scheme,e.authority,e.path,e.query,e.fragment)},e.prototype.toString=function(e){return void 0===e&&(e=!1),_(this,e)},e.prototype.toJSON=function(){return this},e.revive=function(t){if(t){if(t instanceof e)return t;var r=new y(t);return r._formatted=t.external,r._fsPath=t._sep===m?t.fsPath:null,r}return t},e}(),m=n?1:void 0,y=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._formatted=null,t._fsPath=null,t}return i(t,e),Object.defineProperty(t.prototype,\"fsPath\",{get:function(){return this._fsPath||(this._fsPath=C(this)),this._fsPath},enumerable:!0,configurable:!0}),t.prototype.toString=function(e){return void 0===e&&(e=!1),e?_(this,!0):(this._formatted||(this._formatted=_(this,!1)),this._formatted)},t.prototype.toJSON=function(){var e={$mid:1};return this._fsPath&&(e.fsPath=this._fsPath,e._sep=m),this._formatted&&(e.external=this._formatted),this.path&&(e.path=this.path),this.scheme&&(e.scheme=this.scheme),this.authority&&(e.authority=this.authority),this.query&&(e.query=this.query),this.fragment&&(e.fragment=this.fragment),e},t}(g),v=((h={})[58]=\"%3A\",h[47]=\"%2F\",h[63]=\"%3F\",h[35]=\"%23\",h[91]=\"%5B\",h[93]=\"%5D\",h[64]=\"%40\",h[33]=\"%21\",h[36]=\"%24\",h[38]=\"%26\",h[39]=\"%27\",h[40]=\"%28\",h[41]=\"%29\",h[42]=\"%2A\",h[43]=\"%2B\",h[44]=\"%2C\",h[59]=\"%3B\",h[61]=\"%3D\",h[32]=\"%20\",h);function w(e,t){for(var r=void 0,n=-1,i=0;i<e.length;i++){var o=e.charCodeAt(i);if(o>=97&&o<=122||o>=65&&o<=90||o>=48&&o<=57||45===o||46===o||95===o||126===o||t&&47===o)-1!==n&&(r+=encodeURIComponent(e.substring(n,i)),n=-1),void 0!==r&&(r+=e.charAt(i));else{void 0===r&&(r=e.substr(0,i));var s=v[o];void 0!==s?(-1!==n&&(r+=encodeURIComponent(e.substring(n,i)),n=-1),r+=s):-1===n&&(n=i)}}return-1!==n&&(r+=encodeURIComponent(e.substring(n))),void 0!==r?r:e}function b(e){for(var t=void 0,r=0;r<e.length;r++){var n=e.charCodeAt(r);35===n||63===n?(void 0===t&&(t=e.substr(0,r)),t+=v[n]):void 0!==t&&(t+=e[r])}return void 0!==t?t:e}function C(e){var t;return t=e.authority&&e.path.length>1&&\"file\"===e.scheme?\"//\"+e.authority+e.path:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?e.path[1].toLowerCase()+e.path.substr(2):e.path,n&&(t=t.replace(/\\//g,\"\\\\\")),t}function _(e,t){var r=t?b:w,n=\"\",i=e.scheme,o=e.authority,s=e.path,a=e.query,c=e.fragment;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=d,n+=d),o){var u=o.indexOf(\"@\");if(-1!==u){var l=o.substr(0,u);o=o.substr(u+1),-1===(u=l.indexOf(\":\"))?n+=r(l,!1):(n+=r(l.substr(0,u),!1),n+=\":\",n+=r(l.substr(u+1),!1)),n+=\"@\"}-1===(u=(o=o.toLowerCase()).indexOf(\":\"))?n+=r(o,!1):(n+=r(o.substr(0,u),!1),n+=o.substr(u))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2))(h=s.charCodeAt(1))>=65&&h<=90&&(s=\"/\"+String.fromCharCode(h+32)+\":\"+s.substr(3));else if(s.length>=2&&58===s.charCodeAt(1)){var h;(h=s.charCodeAt(0))>=65&&h<=90&&(s=String.fromCharCode(h+32)+\":\"+s.substr(2))}n+=r(s,!0)}return a&&(n+=\"?\",n+=r(a,!1)),c&&(n+=\"#\",n+=t?c:w(c,!1)),n}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(81);const i=[\"ascii\",\"utf-8\",\"utf-16\",\"utf-32\"],o={ibm866:\"cp866\",big5:\"cp950\"};t.detectEncoding=function(e){let t=function(e){if(!e||e.length<2)return null;const t=e.readUInt8(0),r=e.readUInt8(1);if(254===t&&255===r)return\"utf16be\";if(255===t&&254===r)return\"utf16le\";if(e.length<3)return null;const n=e.readUInt8(2);return 239===t&&187===r&&191===n?\"utf8\":null}(e);if(t)return t;const r=n.detect(e);if(!r||!r.encoding)return null;const s=r.encoding;if(0<=i.indexOf(s.toLowerCase()))return null;const a=s.replace(/[^a-zA-Z0-9]/g,\"\").toLowerCase();return o[a]||a}},function(e,t,r){e.exports=r(82)},function(e,t,r){var n=r(83),i=r(14).setLogger;t.detect=function(e,t){var r=new n(t);return r.reset(),\"function\"==typeof Buffer&&e instanceof Buffer?r.feed(e.toString(\"binary\")):r.feed(e),r.close(),r.result},t.UniversalDetector=n,t.enableDebug=function(){i(console.log.bind(console))}},function(e,t,r){var n=r(1),i=r(84),o=r(104),s=r(113),a=r(114),c=r(14);e.exports=function(e){e||(e={}),e.minimumThreshold||(e.minimumThreshold=.2);var t=0,r=1,u=2,l=this;this.reset=function(){this.result={encoding:null,confidence:0},this.done=!1,this._mStart=!0,this._mGotData=!1,this._mInputState=t,this._mLastChar=\"\",this._mBOM=\"\",this._mEscCharsetProber&&this._mEscCharsetProber.reset();for(var e,r=0;e=this._mCharsetProbers[r];r++)e.reset()},this.feed=function(e){if(!this.done&&e.length)if(this._mGotData||(this._mBOM+=e,\"ï»¿\"==this._mBOM.slice(0,3)?this.result={encoding:\"UTF-8\",confidence:1}:\"ÿþ\\0\\0\"==this._mBOM.slice(0,4)?this.result={encoding:\"UTF-32LE\",confidence:1}:\"\\0\\0þÿ\"==this._mBOM.slice(0,4)?this.result={encoding:\"UTF-32BE\",confidence:1}:\"þÿ\\0\\0\"==this._mBOM.slice(0,4)?this.result={encoding:\"X-ISO-10646-UCS-4-3412\",confidence:1}:\"\\0\\0ÿþ\"==this._mBOM.slice(0,4)?this.result={encoding:\"X-ISO-10646-UCS-4-2143\",confidence:1}:\"ÿþ\"==this._mBOM.slice(0,2)?this.result={encoding:\"UTF-16LE\",confidence:1}:\"þÿ\"==this._mBOM.slice(0,2)&&(this.result={encoding:\"UTF-16BE\",confidence:1}),this._mBOM.length>3&&(this._mGotData=!0)),this.result.encoding&&this.result.confidence>0)this.done=!0;else if(this._mInputState==t&&(this._highBitDetector.test(e)?this._mInputState=u:this._escDetector.test(this._mLastChar+e)&&(this._mInputState=r)),this._mLastChar=e.slice(-1),this._mInputState==r)this._mEscCharsetProber||(this._mEscCharsetProber=new a),this._mEscCharsetProber.feed(e)==n.foundIt&&(this.result={encoding:this._mEscCharsetProber.getCharsetName(),confidence:this._mEscCharsetProber.getConfidence()},this.done=!0);else if(this._mInputState==u){0==this._mCharsetProbers.length&&(this._mCharsetProbers=[new i,new o,new s]);for(var c,l=0;c=this._mCharsetProbers[l];l++)if(c.feed(e)==n.foundIt){this.result={encoding:c.getCharsetName(),confidence:c.getConfidence()},this.done=!0;break}}},this.close=function(){if(!this.done)if(0!==this._mBOM.length){if(this.done=!0,this._mInputState==t)return c.log(\"pure ascii\"),this.result={encoding:\"ascii\",confidence:1},this.result;if(this._mInputState==u){for(var r=null,n=0,i=null,o=0;s=this._mCharsetProbers[o];o++)s&&((r=s.getConfidence())>n&&(n=r,i=s),c.log(s.getCharsetName()+\" confidence \"+s.getConfidence()));if(i&&n>e.minimumThreshold)return this.result={encoding:i.getCharsetName(),confidence:i.getConfidence()},this.result}var s;if(c.enabled)for(c.log(\"no probers hit minimum threshhold\\n\"),o=0;s=this._mCharsetProbers[o];o++)s&&c.log(s.getCharsetName()+\" confidence = \"+s.getConfidence()+\"\\n\")}else c.log(\"no data received!\\n\")},l._highBitDetector=/[\\x80-\\xFF]/,l._escDetector=/(\\x1B|~\\{)/,l._mEscCharsetProber=null,l._mCharsetProbers=[],l.reset()}},function(e,t,r){var n=r(40),i=r(85),o=r(92),s=r(94),a=r(96),c=r(98),u=r(100),l=r(102);function h(){n.apply(this),this._mProbers=[new o,new s,new a,new c,new u,new i,new l],this.reset()}h.prototype=new n,e.exports=h},function(e,t,r){var n=r(9),i=r(16),o=r(86),s=r(17).Big5DistributionAnalysis;function a(){i.apply(this);var e=this;this.getCharsetName=function(){return\"Big5\"},e._mCodingSM=new n(o),e._mDistributionAnalyzer=new s,e.reset()}a.prototype=new i,e.exports=a},function(e,t,r){var n=r(1),i=[n.error,n.start,n.start,3,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.start,n.start,n.start,n.start,n.start,n.start,n.start];e.exports={classTable:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0],classFactor:5,stateTable:i,charLenTable:[0,1,1,2,0],name:\"Big5\"}},function(e,t){t.JIS_TYPICAL_DISTRIBUTION_RATIO=3,t.JIS_TABLE_SIZE=4368,t.JISCharToFreqOrder=[40,1,6,182,152,180,295,2127,285,381,3295,4304,3068,4606,3165,3510,3511,1822,2785,4607,1193,2226,5070,4608,171,2996,1247,18,179,5071,856,1661,1262,5072,619,127,3431,3512,3230,1899,1700,232,228,1294,1298,284,283,2041,2042,1061,1062,48,49,44,45,433,434,1040,1041,996,787,2997,1255,4305,2108,4609,1684,1648,5073,5074,5075,5076,5077,5078,3687,5079,4610,5080,3927,3928,5081,3296,3432,290,2285,1471,2187,5082,2580,2825,1303,2140,1739,1445,2691,3375,1691,3297,4306,4307,4611,452,3376,1182,2713,3688,3069,4308,5083,5084,5085,5086,5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,5104,5105,5106,5107,5108,5109,5110,5111,5112,4097,5113,5114,5115,5116,5117,5118,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,5130,5131,5132,5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149,5150,5151,5152,4612,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,1472,598,618,820,1205,1309,1412,1858,1307,1692,5176,5177,5178,5179,5180,5181,5182,1142,1452,1234,1172,1875,2043,2149,1793,1382,2973,925,2404,1067,1241,960,1377,2935,1491,919,1217,1865,2030,1406,1499,2749,4098,5183,5184,5185,5186,5187,5188,2561,4099,3117,1804,2049,3689,4309,3513,1663,5189,3166,3118,3298,1587,1561,3433,5190,3119,1625,2998,3299,4613,1766,3690,2786,4614,5191,5192,5193,5194,2161,26,3377,2,3929,20,3691,47,4100,50,17,16,35,268,27,243,42,155,24,154,29,184,4,91,14,92,53,396,33,289,9,37,64,620,21,39,321,5,12,11,52,13,3,208,138,0,7,60,526,141,151,1069,181,275,1591,83,132,1475,126,331,829,15,69,160,59,22,157,55,1079,312,109,38,23,25,10,19,79,5195,61,382,1124,8,30,5196,5197,5198,5199,5200,5201,5202,5203,5204,5205,5206,89,62,74,34,2416,112,139,196,271,149,84,607,131,765,46,88,153,683,76,874,101,258,57,80,32,364,121,1508,169,1547,68,235,145,2999,41,360,3027,70,63,31,43,259,262,1383,99,533,194,66,93,846,217,192,56,106,58,565,280,272,311,256,146,82,308,71,100,128,214,655,110,261,104,1140,54,51,36,87,67,3070,185,2618,2936,2020,28,1066,2390,2059,5207,5208,5209,5210,5211,5212,5213,5214,5215,5216,4615,5217,5218,5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,3514,5237,5238,5239,5240,5241,5242,5243,5244,2297,2031,4616,4310,3692,5245,3071,5246,3598,5247,4617,3231,3515,5248,4101,4311,4618,3808,4312,4102,5249,4103,4104,3599,5250,5251,5252,5253,5254,5255,5256,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299,5300,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,363,642,2787,2878,2788,2789,2316,3232,2317,3434,2011,165,1942,3930,3931,3932,3933,5382,4619,5383,4620,5384,5385,5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408,5409,5410,5411,5412,5413,5414,5415,5416,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,5439,5440,5441,5442,5443,5444,5445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488,5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,5586,5587,5588,5589,5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600,5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,5615,5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632,5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5647,5648,5649,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,5661,5662,5663,5664,5665,5666,5667,5668,5669,5670,5671,5672,5673,5674,5675,5676,5677,5678,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696,5697,5698,5699,5700,5701,5702,5703,5704,5705,5706,5707,5708,5709,5710,5711,5712,5713,5714,5715,5716,5717,5718,5719,5720,5721,5722,5723,5724,5725,5726,5727,5728,5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5740,5741,5742,5743,5744,5745,5746,5747,5748,5749,5750,5751,5752,5753,5754,5755,5756,5757,5758,5759,5760,5761,5762,5763,5764,5765,5766,5767,5768,5769,5770,5771,5772,5773,5774,5775,5776,5777,5778,5779,5780,5781,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,5801,5802,5803,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956,5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6e3,6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,2044,2060,4621,997,1235,473,1186,4622,920,3378,6115,6116,379,1108,4313,2657,2735,3934,6117,3809,636,3233,573,1026,3693,3435,2974,3300,2298,4105,854,2937,2463,393,2581,2417,539,752,1280,2750,2480,140,1161,440,708,1569,665,2497,1746,1291,1523,3e3,164,1603,847,1331,537,1997,486,508,1693,2418,1970,2227,878,1220,299,1030,969,652,2751,624,1137,3301,2619,65,3302,2045,1761,1859,3120,1930,3694,3516,663,1767,852,835,3695,269,767,2826,2339,1305,896,1150,770,1616,6118,506,1502,2075,1012,2519,775,2520,2975,2340,2938,4314,3028,2086,1224,1943,2286,6119,3072,4315,2240,1273,1987,3935,1557,175,597,985,3517,2419,2521,1416,3029,585,938,1931,1007,1052,1932,1685,6120,3379,4316,4623,804,599,3121,1333,2128,2539,1159,1554,2032,3810,687,2033,2904,952,675,1467,3436,6121,2241,1096,1786,2440,1543,1924,980,1813,2228,781,2692,1879,728,1918,3696,4624,548,1950,4625,1809,1088,1356,3303,2522,1944,502,972,373,513,2827,586,2377,2391,1003,1976,1631,6122,2464,1084,648,1776,4626,2141,324,962,2012,2177,2076,1384,742,2178,1448,1173,1810,222,102,301,445,125,2420,662,2498,277,200,1476,1165,1068,224,2562,1378,1446,450,1880,659,791,582,4627,2939,3936,1516,1274,555,2099,3697,1020,1389,1526,3380,1762,1723,1787,2229,412,2114,1900,2392,3518,512,2597,427,1925,2341,3122,1653,1686,2465,2499,697,330,273,380,2162,951,832,780,991,1301,3073,965,2270,3519,668,2523,2636,1286,535,1407,518,671,957,2658,2378,267,611,2197,3030,6123,248,2299,967,1799,2356,850,1418,3437,1876,1256,1480,2828,1718,6124,6125,1755,1664,2405,6126,4628,2879,2829,499,2179,676,4629,557,2329,2214,2090,325,3234,464,811,3001,992,2342,2481,1232,1469,303,2242,466,1070,2163,603,1777,2091,4630,2752,4631,2714,322,2659,1964,1768,481,2188,1463,2330,2857,3600,2092,3031,2421,4632,2318,2070,1849,2598,4633,1302,2254,1668,1701,2422,3811,2905,3032,3123,2046,4106,1763,1694,4634,1604,943,1724,1454,917,868,2215,1169,2940,552,1145,1800,1228,1823,1955,316,1080,2510,361,1807,2830,4107,2660,3381,1346,1423,1134,4108,6127,541,1263,1229,1148,2540,545,465,1833,2880,3438,1901,3074,2482,816,3937,713,1788,2500,122,1575,195,1451,2501,1111,6128,859,374,1225,2243,2483,4317,390,1033,3439,3075,2524,1687,266,793,1440,2599,946,779,802,507,897,1081,528,2189,1292,711,1866,1725,1167,1640,753,398,2661,1053,246,348,4318,137,1024,3440,1600,2077,2129,825,4319,698,238,521,187,2300,1157,2423,1641,1605,1464,1610,1097,2541,1260,1436,759,2255,1814,2150,705,3235,409,2563,3304,561,3033,2005,2564,726,1956,2343,3698,4109,949,3812,3813,3520,1669,653,1379,2525,881,2198,632,2256,1027,778,1074,733,1957,514,1481,2466,554,2180,702,3938,1606,1017,1398,6129,1380,3521,921,993,1313,594,449,1489,1617,1166,768,1426,1360,495,1794,3601,1177,3602,1170,4320,2344,476,425,3167,4635,3168,1424,401,2662,1171,3382,1998,1089,4110,477,3169,474,6130,1909,596,2831,1842,494,693,1051,1028,1207,3076,606,2115,727,2790,1473,1115,743,3522,630,805,1532,4321,2021,366,1057,838,684,1114,2142,4322,2050,1492,1892,1808,2271,3814,2424,1971,1447,1373,3305,1090,1536,3939,3523,3306,1455,2199,336,369,2331,1035,584,2393,902,718,2600,6131,2753,463,2151,1149,1611,2467,715,1308,3124,1268,343,1413,3236,1517,1347,2663,2093,3940,2022,1131,1553,2100,2941,1427,3441,2942,1323,2484,6132,1980,872,2368,2441,2943,320,2369,2116,1082,679,1933,3941,2791,3815,625,1143,2023,422,2200,3816,6133,730,1695,356,2257,1626,2301,2858,2637,1627,1778,937,883,2906,2693,3002,1769,1086,400,1063,1325,3307,2792,4111,3077,456,2345,1046,747,6134,1524,884,1094,3383,1474,2164,1059,974,1688,2181,2258,1047,345,1665,1187,358,875,3170,305,660,3524,2190,1334,1135,3171,1540,1649,2542,1527,927,968,2793,885,1972,1850,482,500,2638,1218,1109,1085,2543,1654,2034,876,78,2287,1482,1277,861,1675,1083,1779,724,2754,454,397,1132,1612,2332,893,672,1237,257,2259,2370,135,3384,337,2244,547,352,340,709,2485,1400,788,1138,2511,540,772,1682,2260,2272,2544,2013,1843,1902,4636,1999,1562,2288,4637,2201,1403,1533,407,576,3308,1254,2071,978,3385,170,136,1201,3125,2664,3172,2394,213,912,873,3603,1713,2202,699,3604,3699,813,3442,493,531,1054,468,2907,1483,304,281,4112,1726,1252,2094,339,2319,2130,2639,756,1563,2944,748,571,2976,1588,2425,2715,1851,1460,2426,1528,1392,1973,3237,288,3309,685,3386,296,892,2716,2216,1570,2245,722,1747,2217,905,3238,1103,6135,1893,1441,1965,251,1805,2371,3700,2601,1919,1078,75,2182,1509,1592,1270,2640,4638,2152,6136,3310,3817,524,706,1075,292,3818,1756,2602,317,98,3173,3605,3525,1844,2218,3819,2502,814,567,385,2908,1534,6137,534,1642,3239,797,6138,1670,1529,953,4323,188,1071,538,178,729,3240,2109,1226,1374,2e3,2357,2977,731,2468,1116,2014,2051,6139,1261,1593,803,2859,2736,3443,556,682,823,1541,6140,1369,2289,1706,2794,845,462,2603,2665,1361,387,162,2358,1740,739,1770,1720,1304,1401,3241,1049,627,1571,2427,3526,1877,3942,1852,1500,431,1910,1503,677,297,2795,286,1433,1038,1198,2290,1133,1596,4113,4639,2469,1510,1484,3943,6141,2442,108,712,4640,2372,866,3701,2755,3242,1348,834,1945,1408,3527,2395,3243,1811,824,994,1179,2110,1548,1453,790,3003,690,4324,4325,2832,2909,3820,1860,3821,225,1748,310,346,1780,2470,821,1993,2717,2796,828,877,3528,2860,2471,1702,2165,2910,2486,1789,453,359,2291,1676,73,1164,1461,1127,3311,421,604,314,1037,589,116,2487,737,837,1180,111,244,735,6142,2261,1861,1362,986,523,418,581,2666,3822,103,855,503,1414,1867,2488,1091,657,1597,979,605,1316,4641,1021,2443,2078,2001,1209,96,587,2166,1032,260,1072,2153,173,94,226,3244,819,2006,4642,4114,2203,231,1744,782,97,2667,786,3387,887,391,442,2219,4326,1425,6143,2694,633,1544,1202,483,2015,592,2052,1958,2472,1655,419,129,4327,3444,3312,1714,1257,3078,4328,1518,1098,865,1310,1019,1885,1512,1734,469,2444,148,773,436,1815,1868,1128,1055,4329,1245,2756,3445,2154,1934,1039,4643,579,1238,932,2320,353,205,801,115,2428,944,2321,1881,399,2565,1211,678,766,3944,335,2101,1459,1781,1402,3945,2737,2131,1010,844,981,1326,1013,550,1816,1545,2620,1335,1008,371,2881,936,1419,1613,3529,1456,1395,2273,1834,2604,1317,2738,2503,416,1643,4330,806,1126,229,591,3946,1314,1981,1576,1837,1666,347,1790,977,3313,764,2861,1853,688,2429,1920,1462,77,595,415,2002,3034,798,1192,4115,6144,2978,4331,3035,2695,2582,2072,2566,430,2430,1727,842,1396,3947,3702,613,377,278,236,1417,3388,3314,3174,757,1869,107,3530,6145,1194,623,2262,207,1253,2167,3446,3948,492,1117,1935,536,1838,2757,1246,4332,696,2095,2406,1393,1572,3175,1782,583,190,253,1390,2230,830,3126,3389,934,3245,1703,1749,2979,1870,2545,1656,2204,869,2346,4116,3176,1817,496,1764,4644,942,1504,404,1903,1122,1580,3606,2945,1022,515,372,1735,955,2431,3036,6146,2797,1110,2302,2798,617,6147,441,762,1771,3447,3607,3608,1904,840,3037,86,939,1385,572,1370,2445,1336,114,3703,898,294,203,3315,703,1583,2274,429,961,4333,1854,1951,3390,2373,3704,4334,1318,1381,966,1911,2322,1006,1155,309,989,458,2718,1795,1372,1203,252,1689,1363,3177,517,1936,168,1490,562,193,3823,1042,4117,1835,551,470,4645,395,489,3448,1871,1465,2583,2641,417,1493,279,1295,511,1236,1119,72,1231,1982,1812,3004,871,1564,984,3449,1667,2696,2096,4646,2347,2833,1673,3609,695,3246,2668,807,1183,4647,890,388,2333,1801,1457,2911,1765,1477,1031,3316,3317,1278,3391,2799,2292,2526,163,3450,4335,2669,1404,1802,6148,2323,2407,1584,1728,1494,1824,1269,298,909,3318,1034,1632,375,776,1683,2061,291,210,1123,809,1249,1002,2642,3038,206,1011,2132,144,975,882,1565,342,667,754,1442,2143,1299,2303,2062,447,626,2205,1221,2739,2912,1144,1214,2206,2584,760,1715,614,950,1281,2670,2621,810,577,1287,2546,4648,242,2168,250,2643,691,123,2644,647,313,1029,689,1357,2946,1650,216,771,1339,1306,808,2063,549,913,1371,2913,2914,6149,1466,1092,1174,1196,1311,2605,2396,1783,1796,3079,406,2671,2117,3949,4649,487,1825,2220,6150,2915,448,2348,1073,6151,2397,1707,130,900,1598,329,176,1959,2527,1620,6152,2275,4336,3319,1983,2191,3705,3610,2155,3706,1912,1513,1614,6153,1988,646,392,2304,1589,3320,3039,1826,1239,1352,1340,2916,505,2567,1709,1437,2408,2547,906,6154,2672,384,1458,1594,1100,1329,710,423,3531,2064,2231,2622,1989,2673,1087,1882,333,841,3005,1296,2882,2379,580,1937,1827,1293,2585,601,574,249,1772,4118,2079,1120,645,901,1176,1690,795,2207,478,1434,516,1190,1530,761,2080,930,1264,355,435,1552,644,1791,987,220,1364,1163,1121,1538,306,2169,1327,1222,546,2645,218,241,610,1704,3321,1984,1839,1966,2528,451,6155,2586,3707,2568,907,3178,254,2947,186,1845,4650,745,432,1757,428,1633,888,2246,2221,2489,3611,2118,1258,1265,956,3127,1784,4337,2490,319,510,119,457,3612,274,2035,2007,4651,1409,3128,970,2758,590,2800,661,2247,4652,2008,3950,1420,1549,3080,3322,3951,1651,1375,2111,485,2491,1429,1156,6156,2548,2183,1495,831,1840,2529,2446,501,1657,307,1894,3247,1341,666,899,2156,1539,2549,1559,886,349,2208,3081,2305,1736,3824,2170,2759,1014,1913,1386,542,1397,2948,490,368,716,362,159,282,2569,1129,1658,1288,1750,2674,276,649,2016,751,1496,658,1818,1284,1862,2209,2087,2512,3451,622,2834,376,117,1060,2053,1208,1721,1101,1443,247,1250,3179,1792,3952,2760,2398,3953,6157,2144,3708,446,2432,1151,2570,3452,2447,2761,2835,1210,2448,3082,424,2222,1251,2449,2119,2836,504,1581,4338,602,817,857,3825,2349,2306,357,3826,1470,1883,2883,255,958,929,2917,3248,302,4653,1050,1271,1751,2307,1952,1430,2697,2719,2359,354,3180,777,158,2036,4339,1659,4340,4654,2308,2949,2248,1146,2232,3532,2720,1696,2623,3827,6158,3129,1550,2698,1485,1297,1428,637,931,2721,2145,914,2550,2587,81,2450,612,827,2646,1242,4655,1118,2884,472,1855,3181,3533,3534,569,1353,2699,1244,1758,2588,4119,2009,2762,2171,3709,1312,1531,6159,1152,1938,134,1830,471,3710,2276,1112,1535,3323,3453,3535,982,1337,2950,488,826,674,1058,1628,4120,2017,522,2399,211,568,1367,3454,350,293,1872,1139,3249,1399,1946,3006,1300,2360,3324,588,736,6160,2606,744,669,3536,3828,6161,1358,199,723,848,933,851,1939,1505,1514,1338,1618,1831,4656,1634,3613,443,2740,3829,717,1947,491,1914,6162,2551,1542,4121,1025,6163,1099,1223,198,3040,2722,370,410,1905,2589,998,1248,3182,2380,519,1449,4122,1710,947,928,1153,4341,2277,344,2624,1511,615,105,161,1212,1076,1960,3130,2054,1926,1175,1906,2473,414,1873,2801,6164,2309,315,1319,3325,318,2018,2146,2157,963,631,223,4342,4343,2675,479,3711,1197,2625,3712,2676,2361,6165,4344,4123,6166,2451,3183,1886,2184,1674,1330,1711,1635,1506,799,219,3250,3083,3954,1677,3713,3326,2081,3614,1652,2073,4657,1147,3041,1752,643,1961,147,1974,3955,6167,1716,2037,918,3007,1994,120,1537,118,609,3184,4345,740,3455,1219,332,1615,3830,6168,1621,2980,1582,783,212,553,2350,3714,1349,2433,2082,4124,889,6169,2310,1275,1410,973,166,1320,3456,1797,1215,3185,2885,1846,2590,2763,4658,629,822,3008,763,940,1990,2862,439,2409,1566,1240,1622,926,1282,1907,2764,654,2210,1607,327,1130,3956,1678,1623,6170,2434,2192,686,608,3831,3715,903,3957,3042,6171,2741,1522,1915,1105,1555,2552,1359,323,3251,4346,3457,738,1354,2553,2311,2334,1828,2003,3832,1753,2351,1227,6172,1887,4125,1478,6173,2410,1874,1712,1847,520,1204,2607,264,4659,836,2677,2102,600,4660,3833,2278,3084,6174,4347,3615,1342,640,532,543,2608,1888,2400,2591,1009,4348,1497,341,1737,3616,2723,1394,529,3252,1321,983,4661,1515,2120,971,2592,924,287,1662,3186,4349,2700,4350,1519,908,1948,2452,156,796,1629,1486,2223,2055,694,4126,1259,1036,3392,1213,2249,2742,1889,1230,3958,1015,910,408,559,3617,4662,746,725,935,4663,3959,3009,1289,563,867,4664,3960,1567,2981,2038,2626,988,2263,2381,4351,143,2374,704,1895,6175,1188,3716,2088,673,3085,2362,4352,484,1608,1921,2765,2918,215,904,3618,3537,894,509,976,3043,2701,3961,4353,2837,2982,498,6176,6177,1102,3538,1332,3393,1487,1636,1637,233,245,3962,383,650,995,3044,460,1520,1206,2352,749,3327,530,700,389,1438,1560,1773,3963,2264,719,2951,2724,3834,870,1832,1644,1e3,839,2474,3717,197,1630,3394,365,2886,3964,1285,2133,734,922,818,1106,732,480,2083,1774,3458,923,2279,1350,221,3086,85,2233,2234,3835,1585,3010,2147,1387,1705,2382,1619,2475,133,239,2802,1991,1016,2084,2383,411,2838,1113,651,1985,1160,3328,990,1863,3087,1048,1276,2647,265,2627,1599,3253,2056,150,638,2019,656,853,326,1479,680,1439,4354,1001,1759,413,3459,3395,2492,1431,459,4355,1125,3329,2265,1953,1450,2065,2863,849,351,2678,3131,3254,3255,1104,1577,227,1351,1645,2453,2193,1421,2887,812,2121,634,95,2435,201,2312,4665,1646,1671,2743,1601,2554,2702,2648,2280,1315,1366,2089,3132,1573,3718,3965,1729,1189,328,2679,1077,1940,1136,558,1283,964,1195,621,2074,1199,1743,3460,3619,1896,1916,1890,3836,2952,1154,2112,1064,862,378,3011,2066,2113,2803,1568,2839,6178,3088,2919,1941,1660,2004,1992,2194,142,707,1590,1708,1624,1922,1023,1836,1233,1004,2313,789,741,3620,6179,1609,2411,1200,4127,3719,3720,4666,2057,3721,593,2840,367,2920,1878,6180,3461,1521,628,1168,692,2211,2649,300,720,2067,2571,2953,3396,959,2504,3966,3539,3462,1977,701,6181,954,1043,800,681,183,3722,1803,1730,3540,4128,2103,815,2314,174,467,230,2454,1093,2134,755,3541,3397,1141,1162,6182,1738,2039,270,3256,2513,1005,1647,2185,3837,858,1679,1897,1719,2954,2324,1806,402,670,167,4129,1498,2158,2104,750,6183,915,189,1680,1551,455,4356,1501,2455,405,1095,2955,338,1586,1266,1819,570,641,1324,237,1556,2650,1388,3723,6184,1368,2384,1343,1978,3089,2436,879,3724,792,1191,758,3012,1411,2135,1322,4357,240,4667,1848,3725,1574,6185,420,3045,1546,1391,714,4358,1967,941,1864,863,664,426,560,1731,2680,1785,2864,1949,2363,403,3330,1415,1279,2136,1697,2335,204,721,2097,3838,90,6186,2085,2505,191,3967,124,2148,1376,1798,1178,1107,1898,1405,860,4359,1243,1272,2375,2983,1558,2456,1638,113,3621,578,1923,2609,880,386,4130,784,2186,2266,1422,2956,2172,1722,497,263,2514,1267,2412,2610,177,2703,3542,774,1927,1344,616,1432,1595,1018,172,4360,2325,911,4361,438,1468,3622,794,3968,2024,2173,1681,1829,2957,945,895,3090,575,2212,2476,475,2401,2681,785,2744,1745,2293,2555,1975,3133,2865,394,4668,3839,635,4131,639,202,1507,2195,2766,1345,1435,2572,3726,1908,1184,1181,2457,3727,3134,4362,843,2611,437,916,4669,234,769,1884,3046,3047,3623,833,6187,1639,2250,2402,1355,1185,2010,2047,999,525,1732,1290,1488,2612,948,1578,3728,2413,2477,1216,2725,2159,334,3840,1328,3624,2921,1525,4132,564,1056,891,4363,1444,1698,2385,2251,3729,1365,2281,2235,1717,6188,864,3841,2515,444,527,2767,2922,3625,544,461,6189,566,209,2437,3398,2098,1065,2068,3331,3626,3257,2137,2138,2122,3730,2888,1995,1820,1044,6190,6191,6192,6193,6194,6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,4670,6206,6207,6208,6209,6210,6211,6212,6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,3187,6238,6239,3969,6240,6241,6242,6243,6244,4671,6245,6246,4672,6247,6248,4133,6249,6250,4364,6251,2923,2556,2613,4673,4365,3970,6252,6253,6254,6255,4674,6256,6257,6258,2768,2353,4366,4675,4676,3188,4367,3463,6259,4134,4677,4678,6260,2267,6261,3842,3332,4368,3543,6262,6263,6264,3013,1954,1928,4135,4679,6265,6266,2478,3091,6267,4680,4369,6268,6269,1699,6270,3544,4136,4681,6271,4137,6272,4370,2804,6273,6274,2593,3971,3972,4682,6275,2236,4683,6276,6277,4684,6278,6279,4138,3973,4685,6280,6281,3258,6282,6283,6284,6285,3974,4686,2841,3975,6286,6287,3545,6288,6289,4139,4687,4140,6290,4141,6291,4142,6292,6293,3333,6294,6295,6296,4371,6297,3399,6298,6299,4372,3976,6300,6301,6302,4373,6303,6304,3843,3731,6305,4688,4374,6306,6307,3259,2294,6308,3732,2530,4143,6309,4689,6310,6311,6312,3048,6313,6314,4690,3733,2237,6315,6316,2282,3334,6317,6318,3844,6319,6320,4691,6321,3400,4692,6322,4693,6323,3049,6324,4375,6325,3977,6326,6327,6328,3546,6329,4694,3335,6330,4695,4696,6331,6332,6333,6334,4376,3978,6335,4697,3979,4144,6336,3980,4698,6337,6338,6339,6340,6341,4699,4700,4701,6342,6343,4702,6344,6345,4703,6346,6347,4704,6348,4705,4706,3135,6349,4707,6350,4708,6351,4377,6352,4709,3734,4145,6353,2506,4710,3189,6354,3050,4711,3981,6355,3547,3014,4146,4378,3735,2651,3845,3260,3136,2224,1986,6356,3401,6357,4712,2594,3627,3137,2573,3736,3982,4713,3628,4714,4715,2682,3629,4716,6358,3630,4379,3631,6359,6360,6361,3983,6362,6363,6364,6365,4147,3846,4717,6366,6367,3737,2842,6368,4718,2628,6369,3261,6370,2386,6371,6372,3738,3984,4719,3464,4720,3402,6373,2924,3336,4148,2866,6374,2805,3262,4380,2704,2069,2531,3138,2806,2984,6375,2769,6376,4721,4722,3403,6377,6378,3548,6379,6380,2705,3092,1979,4149,2629,3337,2889,6381,3338,4150,2557,3339,4381,6382,3190,3263,3739,6383,4151,4723,4152,2558,2574,3404,3191,6384,6385,4153,6386,4724,4382,6387,6388,4383,6389,6390,4154,6391,4725,3985,6392,3847,4155,6393,6394,6395,6396,6397,3465,6398,4384,6399,6400,6401,6402,6403,6404,4156,6405,6406,6407,6408,2123,6409,6410,2326,3192,4726,6411,6412,6413,6414,4385,4157,6415,6416,4158,6417,3093,3848,6418,3986,6419,6420,3849,6421,6422,6423,4159,6424,6425,4160,6426,3740,6427,6428,6429,6430,3987,6431,4727,6432,2238,6433,6434,4386,3988,6435,6436,3632,6437,6438,2843,6439,6440,6441,6442,3633,6443,2958,6444,6445,3466,6446,2364,4387,3850,6447,4388,2959,3340,6448,3851,6449,4728,6450,6451,3264,4729,6452,3193,6453,4389,4390,2706,3341,4730,6454,3139,6455,3194,6456,3051,2124,3852,1602,4391,4161,3853,1158,3854,4162,3989,4392,3990,4731,4732,4393,2040,4163,4394,3265,6457,2807,3467,3855,6458,6459,6460,3991,3468,4733,4734,6461,3140,2960,6462,4735,6463,6464,6465,6466,4736,4737,4738,4739,6467,6468,4164,2403,3856,6469,6470,2770,2844,6471,4740,6472,6473,6474,6475,6476,6477,6478,3195,6479,4741,4395,6480,2867,6481,4742,2808,6482,2493,4165,6483,6484,6485,6486,2295,4743,6487,6488,6489,3634,6490,6491,6492,6493,6494,6495,6496,2985,4744,6497,6498,4745,6499,6500,2925,3141,4166,6501,6502,4746,6503,6504,4747,6505,6506,6507,2890,6508,6509,6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,3469,4167,6520,6521,6522,4748,4396,3741,4397,4749,4398,3342,2125,4750,6523,4751,4752,4753,3052,6524,2961,4168,6525,4754,6526,4755,4399,2926,4169,6527,3857,6528,4400,4170,6529,4171,6530,6531,2595,6532,6533,6534,6535,3635,6536,6537,6538,6539,6540,6541,6542,4756,6543,6544,6545,6546,6547,6548,4401,6549,6550,6551,6552,4402,3405,4757,4403,6553,6554,6555,4172,3742,6556,6557,6558,3992,3636,6559,6560,3053,2726,6561,3549,4173,3054,4404,6562,6563,3993,4405,3266,3550,2809,4406,6564,6565,6566,4758,4759,6567,3743,6568,4760,3744,4761,3470,6569,6570,6571,4407,6572,3745,4174,6573,4175,2810,4176,3196,4762,6574,4177,6575,6576,2494,2891,3551,6577,6578,3471,6579,4408,6580,3015,3197,6581,3343,2532,3994,3858,6582,3094,3406,4409,6583,2892,4178,4763,4410,3016,4411,6584,3995,3142,3017,2683,6585,4179,6586,6587,4764,4412,6588,6589,4413,6590,2986,6591,2962,3552,6592,2963,3472,6593,6594,4180,4765,6595,6596,2225,3267,4414,6597,3407,3637,4766,6598,6599,3198,6600,4415,6601,3859,3199,6602,3473,4767,2811,4416,1856,3268,3200,2575,3996,3997,3201,4417,6603,3095,2927,6604,3143,6605,2268,6606,3998,3860,3096,2771,6607,6608,3638,2495,4768,6609,3861,6610,3269,2745,4769,4181,3553,6611,2845,3270,6612,6613,6614,3862,6615,6616,4770,4771,6617,3474,3999,4418,4419,6618,3639,3344,6619,4772,4182,6620,2126,6621,6622,6623,4420,4773,6624,3018,6625,4774,3554,6626,4183,2025,3746,6627,4184,2707,6628,4421,4422,3097,1775,4185,3555,6629,6630,2868,6631,6632,4423,6633,6634,4424,2414,2533,2928,6635,4186,2387,6636,4775,6637,4187,6638,1891,4425,3202,3203,6639,6640,4776,6641,3345,6642,6643,3640,6644,3475,3346,3641,4e3,6645,3144,6646,3098,2812,4188,3642,3204,6647,3863,3476,6648,3864,6649,4426,4001,6650,6651,6652,2576,6653,4189,4777,6654,6655,6656,2846,6657,3477,3205,4002,6658,4003,6659,3347,2252,6660,6661,6662,4778,6663,6664,6665,6666,6667,6668,6669,4779,4780,2048,6670,3478,3099,6671,3556,3747,4004,6672,6673,6674,3145,4005,3748,6675,6676,6677,6678,6679,3408,6680,6681,6682,6683,3206,3207,6684,6685,4781,4427,6686,4782,4783,4784,6687,6688,6689,4190,6690,6691,3479,6692,2746,6693,4428,6694,6695,6696,6697,6698,6699,4785,6700,6701,3208,2727,6702,3146,6703,6704,3409,2196,6705,4429,6706,6707,6708,2534,1996,6709,6710,6711,2747,6712,6713,6714,4786,3643,6715,4430,4431,6716,3557,6717,4432,4433,6718,6719,6720,6721,3749,6722,4006,4787,6723,6724,3644,4788,4434,6725,6726,4789,2772,6727,6728,6729,6730,6731,2708,3865,2813,4435,6732,6733,4790,4791,3480,6734,6735,6736,6737,4436,3348,6738,3410,4007,6739,6740,4008,6741,6742,4792,3411,4191,6743,6744,6745,6746,6747,3866,6748,3750,6749,6750,6751,6752,6753,6754,6755,3867,6756,4009,6757,4793,4794,6758,2814,2987,6759,6760,6761,4437,6762,6763,6764,6765,3645,6766,6767,3481,4192,6768,3751,6769,6770,2174,6771,3868,3752,6772,6773,6774,4193,4795,4438,3558,4796,4439,6775,4797,6776,6777,4798,6778,4799,3559,4800,6779,6780,6781,3482,6782,2893,6783,6784,4194,4801,4010,6785,6786,4440,6787,4011,6788,6789,6790,6791,6792,6793,4802,6794,6795,6796,4012,6797,6798,6799,6800,3349,4803,3483,6801,4804,4195,6802,4013,6803,6804,4196,6805,4014,4015,6806,2847,3271,2848,6807,3484,6808,6809,6810,4441,6811,4442,4197,4443,3272,4805,6812,3412,4016,1579,6813,6814,4017,6815,3869,6816,2964,6817,4806,6818,6819,4018,3646,6820,6821,4807,4019,4020,6822,6823,3560,6824,6825,4021,4444,6826,4198,6827,6828,4445,6829,6830,4199,4808,6831,6832,6833,3870,3019,2458,6834,3753,3413,3350,6835,4809,3871,4810,3561,4446,6836,6837,4447,4811,4812,6838,2459,4448,6839,4449,6840,6841,4022,3872,6842,4813,4814,6843,6844,4815,4200,4201,4202,6845,4023,6846,6847,4450,3562,3873,6848,6849,4816,4817,6850,4451,4818,2139,6851,3563,6852,6853,3351,6854,6855,3352,4024,2709,3414,4203,4452,6856,4204,6857,6858,3874,3875,6859,6860,4819,6861,6862,6863,6864,4453,3647,6865,6866,4820,6867,6868,6869,6870,4454,6871,2869,6872,6873,4821,6874,3754,6875,4822,4205,6876,6877,6878,3648,4206,4455,6879,4823,6880,4824,3876,6881,3055,4207,6882,3415,6883,6884,6885,4208,4209,6886,4210,3353,6887,3354,3564,3209,3485,2652,6888,2728,6889,3210,3755,6890,4025,4456,6891,4825,6892,6893,6894,6895,4211,6896,6897,6898,4826,6899,6900,4212,6901,4827,6902,2773,3565,6903,4828,6904,6905,6906,6907,3649,3650,6908,2849,3566,6909,3567,3100,6910,6911,6912,6913,6914,6915,4026,6916,3355,4829,3056,4457,3756,6917,3651,6918,4213,3652,2870,6919,4458,6920,2438,6921,6922,3757,2774,4830,6923,3356,4831,4832,6924,4833,4459,3653,2507,6925,4834,2535,6926,6927,3273,4027,3147,6928,3568,6929,6930,6931,4460,6932,3877,4461,2729,3654,6933,6934,6935,6936,2175,4835,2630,4214,4028,4462,4836,4215,6937,3148,4216,4463,4837,4838,4217,6938,6939,2850,4839,6940,4464,6941,6942,6943,4840,6944,4218,3274,4465,6945,6946,2710,6947,4841,4466,6948,6949,2894,6950,6951,4842,6952,4219,3057,2871,6953,6954,6955,6956,4467,6957,2711,6958,6959,6960,3275,3101,4843,6961,3357,3569,6962,4844,6963,6964,4468,4845,3570,6965,3102,4846,3758,6966,4847,3878,4848,4849,4029,6967,2929,3879,4850,4851,6968,6969,1733,6970,4220,6971,6972,6973,6974,6975,6976,4852,6977,6978,6979,6980,6981,6982,3759,6983,6984,6985,3486,3487,6986,3488,3416,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,4853,6998,6999,4030,7ee3,7530,7531,5001,4275,3794,7532,7533,7534,3066,5002,4566,3161,7535,7536,4080,7537,3162,7538,7539,4567,7540,7541,7542,7543,7544,7545,5003,7546,4568,7547,7548,7549,7550,7551,7552,7553,7554,7555,7556,5004,7557,7558,7559,5005,7560,3795,7561,4569,7562,7563,7564,2821,3796,4276,4277,4081,7565,2876,7566,5006,7567,7568,2900,7569,3797,3912,7570,7571,7572,4278,7573,7574,7575,5007,7576,7577,5008,7578,7579,4279,2934,7580,7581,5009,7582,4570,7583,4280,7584,7585,7586,4571,4572,3913,7587,4573,3505,7588,5010,7589,7590,7591,7592,3798,4574,7593,7594,5011,7595,4281,7596,7597,7598,4282,5012,7599,7600,5013,3163,7601,5014,7602,3914,7603,7604,2734,4575,4576,4577,7605,7606,7607,7608,7609,3506,5015,4578,7610,4082,7611,2822,2901,2579,3683,3024,4579,3507,7612,4580,7613,3226,3799,5016,7614,7615,7616,7617,7618,7619,7620,2995,3290,7621,4083,7622,5017,7623,7624,7625,7626,7627,4581,3915,7628,3291,7629,5018,7630,7631,7632,7633,4084,7634,7635,3427,3800,7636,7637,4582,7638,5019,4583,5020,7639,3916,7640,3801,5021,4584,4283,7641,7642,3428,3591,2269,7643,2617,7644,4585,3592,7645,4586,2902,7646,7647,3227,5022,7648,4587,7649,4284,7650,7651,7652,4588,2284,7653,5023,7654,7655,7656,4589,5024,3802,7657,7658,5025,3508,4590,7659,7660,7661,1969,5026,7662,7663,3684,1821,2688,7664,2028,2509,4285,7665,2823,1841,7666,2689,3114,7667,3917,4085,2160,5027,5028,2972,7668,5029,7669,7670,7671,3593,4086,7672,4591,4087,5030,3803,7673,7674,7675,7676,7677,7678,7679,4286,2366,4592,4593,3067,2328,7680,7681,4594,3594,3918,2029,4287,7682,5031,3919,3370,4288,4595,2856,7683,3509,7684,7685,5032,5033,7686,7687,3804,2784,7688,7689,7690,7691,3371,7692,7693,2877,5034,7694,7695,3920,4289,4088,7696,7697,7698,5035,7699,5036,4290,5037,5038,5039,7700,7701,7702,5040,5041,3228,7703,1760,7704,5042,3229,4596,2106,4089,7705,4597,2824,5043,2107,3372,7706,4291,4090,5044,7707,4091,7708,5045,3025,3805,4598,4292,4293,4294,3373,7709,4599,7710,5046,7711,7712,5047,5048,3806,7713,7714,7715,5049,7716,7717,7718,7719,4600,5050,7720,7721,7722,5051,7723,4295,3429,7724,7725,7726,7727,3921,7728,3292,5052,4092,7729,7730,7731,7732,7733,7734,7735,5053,5054,7736,7737,7738,7739,3922,3685,7740,7741,7742,7743,2635,5055,7744,5056,4601,7745,7746,2560,7747,7748,7749,7750,3923,7751,7752,7753,7754,7755,4296,2903,7756,7757,7758,7759,7760,3924,7761,5057,4297,7762,7763,5058,4298,7764,4093,7765,7766,5059,3925,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,3595,7777,4299,5060,4094,7778,3293,5061,7779,7780,4300,7781,7782,4602,7783,3596,7784,7785,3430,2367,7786,3164,5062,5063,4301,7787,7788,4095,5064,5065,7789,3374,3115,7790,7791,7792,7793,7794,7795,7796,3597,4603,7797,7798,3686,3116,3807,5066,7799,7800,5067,7801,7802,4604,4302,5068,4303,4096,7803,7804,3294,7805,7806,5069,4605,2690,7807,3026,7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,3926,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,8e},function(e,t){t.EUCTW_TYPICAL_DISTRIBUTION_RATIO=.75,t.EUCTW_TABLE_SIZE=8102,t.EUCTWCharToFreqOrder=[1,1800,1506,255,1431,198,9,82,6,7310,177,202,3615,1256,2808,110,3735,33,3241,261,76,44,2113,16,2931,2184,1176,659,3868,26,3404,2643,1198,3869,3313,4060,410,2211,302,590,361,1963,8,204,58,4296,7311,1931,63,7312,7313,317,1614,75,222,159,4061,2412,1480,7314,3500,3068,224,2809,3616,3,10,3870,1471,29,2774,1135,2852,1939,873,130,3242,1123,312,7315,4297,2051,507,252,682,7316,142,1914,124,206,2932,34,3501,3173,64,604,7317,2494,1976,1977,155,1990,645,641,1606,7318,3405,337,72,406,7319,80,630,238,3174,1509,263,939,1092,2644,756,1440,1094,3406,449,69,2969,591,179,2095,471,115,2034,1843,60,50,2970,134,806,1868,734,2035,3407,180,995,1607,156,537,2893,688,7320,319,1305,779,2144,514,2374,298,4298,359,2495,90,2707,1338,663,11,906,1099,2545,20,2436,182,532,1716,7321,732,1376,4062,1311,1420,3175,25,2312,1056,113,399,382,1949,242,3408,2467,529,3243,475,1447,3617,7322,117,21,656,810,1297,2295,2329,3502,7323,126,4063,706,456,150,613,4299,71,1118,2036,4064,145,3069,85,835,486,2114,1246,1426,428,727,1285,1015,800,106,623,303,1281,7324,2127,2354,347,3736,221,3503,3110,7325,1955,1153,4065,83,296,1199,3070,192,624,93,7326,822,1897,2810,3111,795,2064,991,1554,1542,1592,27,43,2853,859,139,1456,860,4300,437,712,3871,164,2392,3112,695,211,3017,2096,195,3872,1608,3504,3505,3618,3873,234,811,2971,2097,3874,2229,1441,3506,1615,2375,668,2076,1638,305,228,1664,4301,467,415,7327,262,2098,1593,239,108,300,200,1033,512,1247,2077,7328,7329,2173,3176,3619,2673,593,845,1062,3244,88,1723,2037,3875,1950,212,266,152,149,468,1898,4066,4302,77,187,7330,3018,37,5,2972,7331,3876,7332,7333,39,2517,4303,2894,3177,2078,55,148,74,4304,545,483,1474,1029,1665,217,1869,1531,3113,1104,2645,4067,24,172,3507,900,3877,3508,3509,4305,32,1408,2811,1312,329,487,2355,2247,2708,784,2674,4,3019,3314,1427,1788,188,109,499,7334,3620,1717,1789,888,1217,3020,4306,7335,3510,7336,3315,1520,3621,3878,196,1034,775,7337,7338,929,1815,249,439,38,7339,1063,7340,794,3879,1435,2296,46,178,3245,2065,7341,2376,7342,214,1709,4307,804,35,707,324,3622,1601,2546,140,459,4068,7343,7344,1365,839,272,978,2257,2572,3409,2128,1363,3623,1423,697,100,3071,48,70,1231,495,3114,2193,7345,1294,7346,2079,462,586,1042,3246,853,256,988,185,2377,3410,1698,434,1084,7347,3411,314,2615,2775,4308,2330,2331,569,2280,637,1816,2518,757,1162,1878,1616,3412,287,1577,2115,768,4309,1671,2854,3511,2519,1321,3737,909,2413,7348,4069,933,3738,7349,2052,2356,1222,4310,765,2414,1322,786,4311,7350,1919,1462,1677,2895,1699,7351,4312,1424,2437,3115,3624,2590,3316,1774,1940,3413,3880,4070,309,1369,1130,2812,364,2230,1653,1299,3881,3512,3882,3883,2646,525,1085,3021,902,2e3,1475,964,4313,421,1844,1415,1057,2281,940,1364,3116,376,4314,4315,1381,7,2520,983,2378,336,1710,2675,1845,321,3414,559,1131,3022,2742,1808,1132,1313,265,1481,1857,7352,352,1203,2813,3247,167,1089,420,2814,776,792,1724,3513,4071,2438,3248,7353,4072,7354,446,229,333,2743,901,3739,1200,1557,4316,2647,1920,395,2744,2676,3740,4073,1835,125,916,3178,2616,4317,7355,7356,3741,7357,7358,7359,4318,3117,3625,1133,2547,1757,3415,1510,2313,1409,3514,7360,2145,438,2591,2896,2379,3317,1068,958,3023,461,311,2855,2677,4074,1915,3179,4075,1978,383,750,2745,2617,4076,274,539,385,1278,1442,7361,1154,1964,384,561,210,98,1295,2548,3515,7362,1711,2415,1482,3416,3884,2897,1257,129,7363,3742,642,523,2776,2777,2648,7364,141,2231,1333,68,176,441,876,907,4077,603,2592,710,171,3417,404,549,18,3118,2393,1410,3626,1666,7365,3516,4319,2898,4320,7366,2973,368,7367,146,366,99,871,3627,1543,748,807,1586,1185,22,2258,379,3743,3180,7368,3181,505,1941,2618,1991,1382,2314,7369,380,2357,218,702,1817,1248,3418,3024,3517,3318,3249,7370,2974,3628,930,3250,3744,7371,59,7372,585,601,4078,497,3419,1112,1314,4321,1801,7373,1223,1472,2174,7374,749,1836,690,1899,3745,1772,3885,1476,429,1043,1790,2232,2116,917,4079,447,1086,1629,7375,556,7376,7377,2020,1654,844,1090,105,550,966,1758,2815,1008,1782,686,1095,7378,2282,793,1602,7379,3518,2593,4322,4080,2933,2297,4323,3746,980,2496,544,353,527,4324,908,2678,2899,7380,381,2619,1942,1348,7381,1341,1252,560,3072,7382,3420,2856,7383,2053,973,886,2080,143,4325,7384,7385,157,3886,496,4081,57,840,540,2038,4326,4327,3421,2117,1445,970,2259,1748,1965,2081,4082,3119,1234,1775,3251,2816,3629,773,1206,2129,1066,2039,1326,3887,1738,1725,4083,279,3120,51,1544,2594,423,1578,2130,2066,173,4328,1879,7386,7387,1583,264,610,3630,4329,2439,280,154,7388,7389,7390,1739,338,1282,3073,693,2857,1411,1074,3747,2440,7391,4330,7392,7393,1240,952,2394,7394,2900,1538,2679,685,1483,4084,2468,1436,953,4085,2054,4331,671,2395,79,4086,2441,3252,608,567,2680,3422,4087,4088,1691,393,1261,1791,2396,7395,4332,7396,7397,7398,7399,1383,1672,3748,3182,1464,522,1119,661,1150,216,675,4333,3888,1432,3519,609,4334,2681,2397,7400,7401,7402,4089,3025,0,7403,2469,315,231,2442,301,3319,4335,2380,7404,233,4090,3631,1818,4336,4337,7405,96,1776,1315,2082,7406,257,7407,1809,3632,2709,1139,1819,4091,2021,1124,2163,2778,1777,2649,7408,3074,363,1655,3183,7409,2975,7410,7411,7412,3889,1567,3890,718,103,3184,849,1443,341,3320,2934,1484,7413,1712,127,67,339,4092,2398,679,1412,821,7414,7415,834,738,351,2976,2146,846,235,1497,1880,418,1992,3749,2710,186,1100,2147,2746,3520,1545,1355,2935,2858,1377,583,3891,4093,2573,2977,7416,1298,3633,1078,2549,3634,2358,78,3750,3751,267,1289,2099,2001,1594,4094,348,369,1274,2194,2175,1837,4338,1820,2817,3635,2747,2283,2002,4339,2936,2748,144,3321,882,4340,3892,2749,3423,4341,2901,7417,4095,1726,320,7418,3893,3026,788,2978,7419,2818,1773,1327,2859,3894,2819,7420,1306,4342,2003,1700,3752,3521,2359,2650,787,2022,506,824,3636,534,323,4343,1044,3322,2023,1900,946,3424,7421,1778,1500,1678,7422,1881,4344,165,243,4345,3637,2521,123,683,4096,764,4346,36,3895,1792,589,2902,816,626,1667,3027,2233,1639,1555,1622,3753,3896,7423,3897,2860,1370,1228,1932,891,2083,2903,304,4097,7424,292,2979,2711,3522,691,2100,4098,1115,4347,118,662,7425,611,1156,854,2381,1316,2861,2,386,515,2904,7426,7427,3253,868,2234,1486,855,2651,785,2212,3028,7428,1040,3185,3523,7429,3121,448,7430,1525,7431,2164,4348,7432,3754,7433,4099,2820,3524,3122,503,818,3898,3123,1568,814,676,1444,306,1749,7434,3755,1416,1030,197,1428,805,2821,1501,4349,7435,7436,7437,1993,7438,4350,7439,7440,2195,13,2779,3638,2980,3124,1229,1916,7441,3756,2131,7442,4100,4351,2399,3525,7443,2213,1511,1727,1120,7444,7445,646,3757,2443,307,7446,7447,1595,3186,7448,7449,7450,3639,1113,1356,3899,1465,2522,2523,7451,519,7452,128,2132,92,2284,1979,7453,3900,1512,342,3125,2196,7454,2780,2214,1980,3323,7455,290,1656,1317,789,827,2360,7456,3758,4352,562,581,3901,7457,401,4353,2248,94,4354,1399,2781,7458,1463,2024,4355,3187,1943,7459,828,1105,4101,1262,1394,7460,4102,605,4356,7461,1783,2862,7462,2822,819,2101,578,2197,2937,7463,1502,436,3254,4103,3255,2823,3902,2905,3425,3426,7464,2712,2315,7465,7466,2332,2067,23,4357,193,826,3759,2102,699,1630,4104,3075,390,1793,1064,3526,7467,1579,3076,3077,1400,7468,4105,1838,1640,2863,7469,4358,4359,137,4106,598,3078,1966,780,104,974,2938,7470,278,899,253,402,572,504,493,1339,7471,3903,1275,4360,2574,2550,7472,3640,3029,3079,2249,565,1334,2713,863,41,7473,7474,4361,7475,1657,2333,19,463,2750,4107,606,7476,2981,3256,1087,2084,1323,2652,2982,7477,1631,1623,1750,4108,2682,7478,2864,791,2714,2653,2334,232,2416,7479,2983,1498,7480,2654,2620,755,1366,3641,3257,3126,2025,1609,119,1917,3427,862,1026,4109,7481,3904,3760,4362,3905,4363,2260,1951,2470,7482,1125,817,4110,4111,3906,1513,1766,2040,1487,4112,3030,3258,2824,3761,3127,7483,7484,1507,7485,2683,733,40,1632,1106,2865,345,4113,841,2524,230,4364,2984,1846,3259,3428,7486,1263,986,3429,7487,735,879,254,1137,857,622,1300,1180,1388,1562,3907,3908,2939,967,2751,2655,1349,592,2133,1692,3324,2985,1994,4114,1679,3909,1901,2185,7488,739,3642,2715,1296,1290,7489,4115,2198,2199,1921,1563,2595,2551,1870,2752,2986,7490,435,7491,343,1108,596,17,1751,4365,2235,3430,3643,7492,4366,294,3527,2940,1693,477,979,281,2041,3528,643,2042,3644,2621,2782,2261,1031,2335,2134,2298,3529,4367,367,1249,2552,7493,3530,7494,4368,1283,3325,2004,240,1762,3326,4369,4370,836,1069,3128,474,7495,2148,2525,268,3531,7496,3188,1521,1284,7497,1658,1546,4116,7498,3532,3533,7499,4117,3327,2684,1685,4118,961,1673,2622,190,2005,2200,3762,4371,4372,7500,570,2497,3645,1490,7501,4373,2623,3260,1956,4374,584,1514,396,1045,1944,7502,4375,1967,2444,7503,7504,4376,3910,619,7505,3129,3261,215,2006,2783,2553,3189,4377,3190,4378,763,4119,3763,4379,7506,7507,1957,1767,2941,3328,3646,1174,452,1477,4380,3329,3130,7508,2825,1253,2382,2186,1091,2285,4120,492,7509,638,1169,1824,2135,1752,3911,648,926,1021,1324,4381,520,4382,997,847,1007,892,4383,3764,2262,1871,3647,7510,2400,1784,4384,1952,2942,3080,3191,1728,4121,2043,3648,4385,2007,1701,3131,1551,30,2263,4122,7511,2026,4386,3534,7512,501,7513,4123,594,3431,2165,1821,3535,3432,3536,3192,829,2826,4124,7514,1680,3132,1225,4125,7515,3262,4387,4126,3133,2336,7516,4388,4127,7517,3912,3913,7518,1847,2383,2596,3330,7519,4389,374,3914,652,4128,4129,375,1140,798,7520,7521,7522,2361,4390,2264,546,1659,138,3031,2445,4391,7523,2250,612,1848,910,796,3765,1740,1371,825,3766,3767,7524,2906,2554,7525,692,444,3032,2624,801,4392,4130,7526,1491,244,1053,3033,4131,4132,340,7527,3915,1041,2987,293,1168,87,1357,7528,1539,959,7529,2236,721,694,4133,3768,219,1478,644,1417,3331,2656,1413,1401,1335,1389,3916,7530,7531,2988,2362,3134,1825,730,1515,184,2827,66,4393,7532,1660,2943,246,3332,378,1457,226,3433,975,3917,2944,1264,3537,674,696,7533,163,7534,1141,2417,2166,713,3538,3333,4394,3918,7535,7536,1186,15,7537,1079,1070,7538,1522,3193,3539,276,1050,2716,758,1126,653,2945,3263,7539,2337,889,3540,3919,3081,2989,903,1250,4395,3920,3434,3541,1342,1681,1718,766,3264,286,89,2946,3649,7540,1713,7541,2597,3334,2990,7542,2947,2215,3194,2866,7543,4396,2498,2526,181,387,1075,3921,731,2187,3335,7544,3265,310,313,3435,2299,770,4134,54,3034,189,4397,3082,3769,3922,7545,1230,1617,1849,355,3542,4135,4398,3336,111,4136,3650,1350,3135,3436,3035,4137,2149,3266,3543,7546,2784,3923,3924,2991,722,2008,7547,1071,247,1207,2338,2471,1378,4399,2009,864,1437,1214,4400,373,3770,1142,2216,667,4401,442,2753,2555,3771,3925,1968,4138,3267,1839,837,170,1107,934,1336,1882,7548,7549,2118,4139,2828,743,1569,7550,4402,4140,582,2384,1418,3437,7551,1802,7552,357,1395,1729,3651,3268,2418,1564,2237,7553,3083,3772,1633,4403,1114,2085,4141,1532,7554,482,2446,4404,7555,7556,1492,833,1466,7557,2717,3544,1641,2829,7558,1526,1272,3652,4142,1686,1794,416,2556,1902,1953,1803,7559,3773,2785,3774,1159,2316,7560,2867,4405,1610,1584,3036,2419,2754,443,3269,1163,3136,7561,7562,3926,7563,4143,2499,3037,4406,3927,3137,2103,1647,3545,2010,1872,4144,7564,4145,431,3438,7565,250,97,81,4146,7566,1648,1850,1558,160,848,7567,866,740,1694,7568,2201,2830,3195,4147,4407,3653,1687,950,2472,426,469,3196,3654,3655,3928,7569,7570,1188,424,1995,861,3546,4148,3775,2202,2685,168,1235,3547,4149,7571,2086,1674,4408,3337,3270,220,2557,1009,7572,3776,670,2992,332,1208,717,7573,7574,3548,2447,3929,3338,7575,513,7576,1209,2868,3339,3138,4409,1080,7577,7578,7579,7580,2527,3656,3549,815,1587,3930,3931,7581,3550,3439,3777,1254,4410,1328,3038,1390,3932,1741,3933,3778,3934,7582,236,3779,2448,3271,7583,7584,3657,3780,1273,3781,4411,7585,308,7586,4412,245,4413,1851,2473,1307,2575,430,715,2136,2449,7587,270,199,2869,3935,7588,3551,2718,1753,761,1754,725,1661,1840,4414,3440,3658,7589,7590,587,14,3272,227,2598,326,480,2265,943,2755,3552,291,650,1883,7591,1702,1226,102,1547,62,3441,904,4415,3442,1164,4150,7592,7593,1224,1548,2756,391,498,1493,7594,1386,1419,7595,2055,1177,4416,813,880,1081,2363,566,1145,4417,2286,1001,1035,2558,2599,2238,394,1286,7596,7597,2068,7598,86,1494,1730,3936,491,1588,745,897,2948,843,3340,3937,2757,2870,3273,1768,998,2217,2069,397,1826,1195,1969,3659,2993,3341,284,7599,3782,2500,2137,2119,1903,7600,3938,2150,3939,4151,1036,3443,1904,114,2559,4152,209,1527,7601,7602,2949,2831,2625,2385,2719,3139,812,2560,7603,3274,7604,1559,737,1884,3660,1210,885,28,2686,3553,3783,7605,4153,1004,1779,4418,7606,346,1981,2218,2687,4419,3784,1742,797,1642,3940,1933,1072,1384,2151,896,3941,3275,3661,3197,2871,3554,7607,2561,1958,4420,2450,1785,7608,7609,7610,3942,4154,1005,1308,3662,4155,2720,4421,4422,1528,2600,161,1178,4156,1982,987,4423,1101,4157,631,3943,1157,3198,2420,1343,1241,1016,2239,2562,372,877,2339,2501,1160,555,1934,911,3944,7611,466,1170,169,1051,2907,2688,3663,2474,2994,1182,2011,2563,1251,2626,7612,992,2340,3444,1540,2721,1201,2070,2401,1996,2475,7613,4424,528,1922,2188,1503,1873,1570,2364,3342,3276,7614,557,1073,7615,1827,3445,2087,2266,3140,3039,3084,767,3085,2786,4425,1006,4158,4426,2341,1267,2176,3664,3199,778,3945,3200,2722,1597,2657,7616,4427,7617,3446,7618,7619,7620,3277,2689,1433,3278,131,95,1504,3946,723,4159,3141,1841,3555,2758,2189,3947,2027,2104,3665,7621,2995,3948,1218,7622,3343,3201,3949,4160,2576,248,1634,3785,912,7623,2832,3666,3040,3786,654,53,7624,2996,7625,1688,4428,777,3447,1032,3950,1425,7626,191,820,2120,2833,971,4429,931,3202,135,664,783,3787,1997,772,2908,1935,3951,3788,4430,2909,3203,282,2723,640,1372,3448,1127,922,325,3344,7627,7628,711,2044,7629,7630,3952,2219,2787,1936,3953,3345,2220,2251,3789,2300,7631,4431,3790,1258,3279,3954,3204,2138,2950,3955,3956,7632,2221,258,3205,4432,101,1227,7633,3280,1755,7634,1391,3281,7635,2910,2056,893,7636,7637,7638,1402,4161,2342,7639,7640,3206,3556,7641,7642,878,1325,1780,2788,4433,259,1385,2577,744,1183,2267,4434,7643,3957,2502,7644,684,1024,4162,7645,472,3557,3449,1165,3282,3958,3959,322,2152,881,455,1695,1152,1340,660,554,2153,4435,1058,4436,4163,830,1065,3346,3960,4437,1923,7646,1703,1918,7647,932,2268,122,7648,4438,947,677,7649,3791,2627,297,1905,1924,2269,4439,2317,3283,7650,7651,4164,7652,4165,84,4166,112,989,7653,547,1059,3961,701,3558,1019,7654,4167,7655,3450,942,639,457,2301,2451,993,2951,407,851,494,4440,3347,927,7656,1237,7657,2421,3348,573,4168,680,921,2911,1279,1874,285,790,1448,1983,719,2167,7658,7659,4441,3962,3963,1649,7660,1541,563,7661,1077,7662,3349,3041,3451,511,2997,3964,3965,3667,3966,1268,2564,3350,3207,4442,4443,7663,535,1048,1276,1189,2912,2028,3142,1438,1373,2834,2952,1134,2012,7664,4169,1238,2578,3086,1259,7665,700,7666,2953,3143,3668,4170,7667,4171,1146,1875,1906,4444,2601,3967,781,2422,132,1589,203,147,273,2789,2402,898,1786,2154,3968,3969,7668,3792,2790,7669,7670,4445,4446,7671,3208,7672,1635,3793,965,7673,1804,2690,1516,3559,1121,1082,1329,3284,3970,1449,3794,65,1128,2835,2913,2759,1590,3795,7674,7675,12,2658,45,976,2579,3144,4447,517,2528,1013,1037,3209,7676,3796,2836,7677,3797,7678,3452,7679,2602,614,1998,2318,3798,3087,2724,2628,7680,2580,4172,599,1269,7681,1810,3669,7682,2691,3088,759,1060,489,1805,3351,3285,1358,7683,7684,2386,1387,1215,2629,2252,490,7685,7686,4173,1759,2387,2343,7687,4448,3799,1907,3971,2630,1806,3210,4449,3453,3286,2760,2344,874,7688,7689,3454,3670,1858,91,2914,3671,3042,3800,4450,7690,3145,3972,2659,7691,3455,1202,1403,3801,2954,2529,1517,2503,4451,3456,2504,7692,4452,7693,2692,1885,1495,1731,3973,2365,4453,7694,2029,7695,7696,3974,2693,1216,237,2581,4174,2319,3975,3802,4454,4455,2694,3560,3457,445,4456,7697,7698,7699,7700,2761,61,3976,3672,1822,3977,7701,687,2045,935,925,405,2660,703,1096,1859,2725,4457,3978,1876,1367,2695,3352,918,2105,1781,2476,334,3287,1611,1093,4458,564,3146,3458,3673,3353,945,2631,2057,4459,7702,1925,872,4175,7703,3459,2696,3089,349,4176,3674,3979,4460,3803,4177,3675,2155,3980,4461,4462,4178,4463,2403,2046,782,3981,400,251,4179,1624,7704,7705,277,3676,299,1265,476,1191,3804,2121,4180,4181,1109,205,7706,2582,1e3,2156,3561,1860,7707,7708,7709,4464,7710,4465,2565,107,2477,2157,3982,3460,3147,7711,1533,541,1301,158,753,4182,2872,3562,7712,1696,370,1088,4183,4466,3563,579,327,440,162,2240,269,1937,1374,3461,968,3043,56,1396,3090,2106,3288,3354,7713,1926,2158,4467,2998,7714,3564,7715,7716,3677,4468,2478,7717,2791,7718,1650,4469,7719,2603,7720,7721,3983,2661,3355,1149,3356,3984,3805,3985,7722,1076,49,7723,951,3211,3289,3290,450,2837,920,7724,1811,2792,2366,4184,1908,1138,2367,3806,3462,7725,3212,4470,1909,1147,1518,2423,4471,3807,7726,4472,2388,2604,260,1795,3213,7727,7728,3808,3291,708,7729,3565,1704,7730,3566,1351,1618,3357,2999,1886,944,4185,3358,4186,3044,3359,4187,7731,3678,422,413,1714,3292,500,2058,2345,4188,2479,7732,1344,1910,954,7733,1668,7734,7735,3986,2404,4189,3567,3809,4190,7736,2302,1318,2505,3091,133,3092,2873,4473,629,31,2838,2697,3810,4474,850,949,4475,3987,2955,1732,2088,4191,1496,1852,7737,3988,620,3214,981,1242,3679,3360,1619,3680,1643,3293,2139,2452,1970,1719,3463,2168,7738,3215,7739,7740,3361,1828,7741,1277,4476,1565,2047,7742,1636,3568,3093,7743,869,2839,655,3811,3812,3094,3989,3e3,3813,1310,3569,4477,7744,7745,7746,1733,558,4478,3681,335,1549,3045,1756,4192,3682,1945,3464,1829,1291,1192,470,2726,2107,2793,913,1054,3990,7747,1027,7748,3046,3991,4479,982,2662,3362,3148,3465,3216,3217,1946,2794,7749,571,4480,7750,1830,7751,3570,2583,1523,2424,7752,2089,984,4481,3683,1959,7753,3684,852,923,2795,3466,3685,969,1519,999,2048,2320,1705,7754,3095,615,1662,151,597,3992,2405,2321,1049,275,4482,3686,4193,568,3687,3571,2480,4194,3688,7755,2425,2270,409,3218,7756,1566,2874,3467,1002,769,2840,194,2090,3149,3689,2222,3294,4195,628,1505,7757,7758,1763,2177,3001,3993,521,1161,2584,1787,2203,2406,4483,3994,1625,4196,4197,412,42,3096,464,7759,2632,4484,3363,1760,1571,2875,3468,2530,1219,2204,3814,2633,2140,2368,4485,4486,3295,1651,3364,3572,7760,7761,3573,2481,3469,7762,3690,7763,7764,2271,2091,460,7765,4487,7766,3002,962,588,3574,289,3219,2634,1116,52,7767,3047,1796,7768,7769,7770,1467,7771,1598,1143,3691,4198,1984,1734,1067,4488,1280,3365,465,4489,1572,510,7772,1927,2241,1812,1644,3575,7773,4490,3692,7774,7775,2663,1573,1534,7776,7777,4199,536,1807,1761,3470,3815,3150,2635,7778,7779,7780,4491,3471,2915,1911,2796,7781,3296,1122,377,3220,7782,360,7783,7784,4200,1529,551,7785,2059,3693,1769,2426,7786,2916,4201,3297,3097,2322,2108,2030,4492,1404,136,1468,1479,672,1171,3221,2303,271,3151,7787,2762,7788,2049,678,2727,865,1947,4493,7789,2013,3995,2956,7790,2728,2223,1397,3048,3694,4494,4495,1735,2917,3366,3576,7791,3816,509,2841,2453,2876,3817,7792,7793,3152,3153,4496,4202,2531,4497,2304,1166,1010,552,681,1887,7794,7795,2957,2958,3996,1287,1596,1861,3154,358,453,736,175,478,1117,905,1167,1097,7796,1853,1530,7797,1706,7798,2178,3472,2287,3695,3473,3577,4203,2092,4204,7799,3367,1193,2482,4205,1458,2190,2205,1862,1888,1421,3298,2918,3049,2179,3474,595,2122,7800,3997,7801,7802,4206,1707,2636,223,3696,1359,751,3098,183,3475,7803,2797,3003,419,2369,633,704,3818,2389,241,7804,7805,7806,838,3004,3697,2272,2763,2454,3819,1938,2050,3998,1309,3099,2242,1181,7807,1136,2206,3820,2370,1446,4207,2305,4498,7808,7809,4208,1055,2605,484,3698,7810,3999,625,4209,2273,3368,1499,4210,4e3,7811,4001,4211,3222,2274,2275,3476,7812,7813,2764,808,2606,3699,3369,4002,4212,3100,2532,526,3370,3821,4213,955,7814,1620,4214,2637,2427,7815,1429,3700,1669,1831,994,928,7816,3578,1260,7817,7818,7819,1948,2288,741,2919,1626,4215,2729,2455,867,1184,362,3371,1392,7820,7821,4003,4216,1770,1736,3223,2920,4499,4500,1928,2698,1459,1158,7822,3050,3372,2877,1292,1929,2506,2842,3701,1985,1187,2071,2014,2607,4217,7823,2566,2507,2169,3702,2483,3299,7824,3703,4501,7825,7826,666,1003,3005,1022,3579,4218,7827,4502,1813,2253,574,3822,1603,295,1535,705,3823,4219,283,858,417,7828,7829,3224,4503,4504,3051,1220,1889,1046,2276,2456,4004,1393,1599,689,2567,388,4220,7830,2484,802,7831,2798,3824,2060,1405,2254,7832,4505,3825,2109,1052,1345,3225,1585,7833,809,7834,7835,7836,575,2730,3477,956,1552,1469,1144,2323,7837,2324,1560,2457,3580,3226,4005,616,2207,3155,2180,2289,7838,1832,7839,3478,4506,7840,1319,3704,3705,1211,3581,1023,3227,1293,2799,7841,7842,7843,3826,607,2306,3827,762,2878,1439,4221,1360,7844,1485,3052,7845,4507,1038,4222,1450,2061,2638,4223,1379,4508,2585,7846,7847,4224,1352,1414,2325,2921,1172,7848,7849,3828,3829,7850,1797,1451,7851,7852,7853,7854,2922,4006,4007,2485,2346,411,4008,4009,3582,3300,3101,4509,1561,2664,1452,4010,1375,7855,7856,47,2959,316,7857,1406,1591,2923,3156,7858,1025,2141,3102,3157,354,2731,884,2224,4225,2407,508,3706,726,3583,996,2428,3584,729,7859,392,2191,1453,4011,4510,3707,7860,7861,2458,3585,2608,1675,2800,919,2347,2960,2348,1270,4511,4012,73,7862,7863,647,7864,3228,2843,2255,1550,1346,3006,7865,1332,883,3479,7866,7867,7868,7869,3301,2765,7870,1212,831,1347,4226,4512,2326,3830,1863,3053,720,3831,4513,4514,3832,7871,4227,7872,7873,4515,7874,7875,1798,4516,3708,2609,4517,3586,1645,2371,7876,7877,2924,669,2208,2665,2429,7878,2879,7879,7880,1028,3229,7881,4228,2408,7882,2256,1353,7883,7884,4518,3158,518,7885,4013,7886,4229,1960,7887,2142,4230,7888,7889,3007,2349,2350,3833,516,1833,1454,4014,2699,4231,4519,2225,2610,1971,1129,3587,7890,2766,7891,2961,1422,577,1470,3008,1524,3373,7892,7893,432,4232,3054,3480,7894,2586,1455,2508,2226,1972,1175,7895,1020,2732,4015,3481,4520,7896,2733,7897,1743,1361,3055,3482,2639,4016,4233,4521,2290,895,924,4234,2170,331,2243,3056,166,1627,3057,1098,7898,1232,2880,2227,3374,4522,657,403,1196,2372,542,3709,3375,1600,4235,3483,7899,4523,2767,3230,576,530,1362,7900,4524,2533,2666,3710,4017,7901,842,3834,7902,2801,2031,1014,4018,213,2700,3376,665,621,4236,7903,3711,2925,2430,7904,2431,3302,3588,3377,7905,4237,2534,4238,4525,3589,1682,4239,3484,1380,7906,724,2277,600,1670,7907,1337,1233,4526,3103,2244,7908,1621,4527,7909,651,4240,7910,1612,4241,2611,7911,2844,7912,2734,2307,3058,7913,716,2459,3059,174,1255,2701,4019,3590,548,1320,1398,728,4020,1574,7914,1890,1197,3060,4021,7915,3061,3062,3712,3591,3713,747,7916,635,4242,4528,7917,7918,7919,4243,7920,7921,4529,7922,3378,4530,2432,451,7923,3714,2535,2072,4244,2735,4245,4022,7924,1764,4531,7925,4246,350,7926,2278,2390,2486,7927,4247,4023,2245,1434,4024,488,4532,458,4248,4025,3715,771,1330,2391,3835,2568,3159,2159,2409,1553,2667,3160,4249,7928,2487,2881,2612,1720,2702,4250,3379,4533,7929,2536,4251,7930,3231,4252,2768,7931,2015,2736,7932,1155,1017,3716,3836,7933,3303,2308,201,1864,4253,1430,7934,4026,7935,7936,7937,7938,7939,4254,1604,7940,414,1865,371,2587,4534,4535,3485,2016,3104,4536,1708,960,4255,887,389,2171,1536,1663,1721,7941,2228,4027,2351,2926,1580,7942,7943,7944,1744,7945,2537,4537,4538,7946,4539,7947,2073,7948,7949,3592,3380,2882,4256,7950,4257,2640,3381,2802,673,2703,2460,709,3486,4028,3593,4258,7951,1148,502,634,7952,7953,1204,4540,3594,1575,4541,2613,3717,7954,3718,3105,948,3232,121,1745,3837,1110,7955,4259,3063,2509,3009,4029,3719,1151,1771,3838,1488,4030,1986,7956,2433,3487,7957,7958,2093,7959,4260,3839,1213,1407,2803,531,2737,2538,3233,1011,1537,7960,2769,4261,3106,1061,7961,3720,3721,1866,2883,7962,2017,120,4262,4263,2062,3595,3234,2309,3840,2668,3382,1954,4542,7963,7964,3488,1047,2704,1266,7965,1368,4543,2845,649,3383,3841,2539,2738,1102,2846,2669,7966,7967,1999,7968,1111,3596,2962,7969,2488,3842,3597,2804,1854,3384,3722,7970,7971,3385,2410,2884,3304,3235,3598,7972,2569,7973,3599,2805,4031,1460,856,7974,3600,7975,2885,2963,7976,2886,3843,7977,4264,632,2510,875,3844,1697,3845,2291,7978,7979,4544,3010,1239,580,4545,4265,7980,914,936,2074,1190,4032,1039,2123,7981,7982,7983,3386,1473,7984,1354,4266,3846,7985,2172,3064,4033,915,3305,4267,4268,3306,1605,1834,7986,2739,398,3601,4269,3847,4034,328,1912,2847,4035,3848,1331,4270,3011,937,4271,7987,3602,4036,4037,3387,2160,4546,3388,524,742,538,3065,1012,7988,7989,3849,2461,7990,658,1103,225,3850,7991,7992,4547,7993,4548,7994,3236,1243,7995,4038,963,2246,4549,7996,2705,3603,3161,7997,7998,2588,2327,7999,4550,8e},function(e,t){t.EUCKR_TYPICAL_DISTRIBUTION_RATIO=6,t.EUCKR_TABLE_SIZE=2352,t.EUCKRCharToFreqOrder=[13,130,120,1396,481,1719,1720,328,609,212,1721,707,400,299,1722,87,1397,1723,104,536,1117,1203,1724,1267,685,1268,508,1725,1726,1727,1728,1398,1399,1729,1730,1731,141,621,326,1057,368,1732,267,488,20,1733,1269,1734,945,1400,1735,47,904,1270,1736,1737,773,248,1738,409,313,786,429,1739,116,987,813,1401,683,75,1204,145,1740,1741,1742,1743,16,847,667,622,708,1744,1745,1746,966,787,304,129,1747,60,820,123,676,1748,1749,1750,1751,617,1752,626,1753,1754,1755,1756,653,1757,1758,1759,1760,1761,1762,856,344,1763,1764,1765,1766,89,401,418,806,905,848,1767,1768,1769,946,1205,709,1770,1118,1771,241,1772,1773,1774,1271,1775,569,1776,999,1777,1778,1779,1780,337,751,1058,28,628,254,1781,177,906,270,349,891,1079,1782,19,1783,379,1784,315,1785,629,754,1402,559,1786,636,203,1206,1787,710,567,1788,935,814,1789,1790,1207,766,528,1791,1792,1208,1793,1794,1795,1796,1797,1403,1798,1799,533,1059,1404,1405,1156,1406,936,884,1080,1800,351,1801,1802,1803,1804,1805,801,1806,1807,1808,1119,1809,1157,714,474,1407,1810,298,899,885,1811,1120,802,1158,1812,892,1813,1814,1408,659,1815,1816,1121,1817,1818,1819,1820,1821,1822,319,1823,594,545,1824,815,937,1209,1825,1826,573,1409,1022,1827,1210,1828,1829,1830,1831,1832,1833,556,722,807,1122,1060,1834,697,1835,900,557,715,1836,1410,540,1411,752,1159,294,597,1211,976,803,770,1412,1837,1838,39,794,1413,358,1839,371,925,1840,453,661,788,531,723,544,1023,1081,869,91,1841,392,430,790,602,1414,677,1082,457,1415,1416,1842,1843,475,327,1024,1417,795,121,1844,733,403,1418,1845,1846,1847,300,119,711,1212,627,1848,1272,207,1849,1850,796,1213,382,1851,519,1852,1083,893,1853,1854,1855,367,809,487,671,1856,663,1857,1858,956,471,306,857,1859,1860,1160,1084,1861,1862,1863,1864,1865,1061,1866,1867,1868,1869,1870,1871,282,96,574,1872,502,1085,1873,1214,1874,907,1875,1876,827,977,1419,1420,1421,268,1877,1422,1878,1879,1880,308,1881,2,537,1882,1883,1215,1884,1885,127,791,1886,1273,1423,1887,34,336,404,643,1888,571,654,894,840,1889,0,886,1274,122,575,260,908,938,1890,1275,410,316,1891,1892,100,1893,1894,1123,48,1161,1124,1025,1895,633,901,1276,1896,1897,115,816,1898,317,1899,694,1900,909,734,1424,572,866,1425,691,85,524,1010,543,394,841,1901,1902,1903,1026,1904,1905,1906,1907,1908,1909,30,451,651,988,310,1910,1911,1426,810,1216,93,1912,1913,1277,1217,1914,858,759,45,58,181,610,269,1915,1916,131,1062,551,443,1e3,821,1427,957,895,1086,1917,1918,375,1919,359,1920,687,1921,822,1922,293,1923,1924,40,662,118,692,29,939,887,640,482,174,1925,69,1162,728,1428,910,1926,1278,1218,1279,386,870,217,854,1163,823,1927,1928,1929,1930,834,1931,78,1932,859,1933,1063,1934,1935,1936,1937,438,1164,208,595,1938,1939,1940,1941,1219,1125,1942,280,888,1429,1430,1220,1431,1943,1944,1945,1946,1947,1280,150,510,1432,1948,1949,1950,1951,1952,1953,1954,1011,1087,1955,1433,1043,1956,881,1957,614,958,1064,1065,1221,1958,638,1001,860,967,896,1434,989,492,553,1281,1165,1959,1282,1002,1283,1222,1960,1961,1962,1963,36,383,228,753,247,454,1964,876,678,1965,1966,1284,126,464,490,835,136,672,529,940,1088,1435,473,1967,1968,467,50,390,227,587,279,378,598,792,968,240,151,160,849,882,1126,1285,639,1044,133,140,288,360,811,563,1027,561,142,523,1969,1970,1971,7,103,296,439,407,506,634,990,1972,1973,1974,1975,645,1976,1977,1978,1979,1980,1981,236,1982,1436,1983,1984,1089,192,828,618,518,1166,333,1127,1985,818,1223,1986,1987,1988,1989,1990,1991,1992,1993,342,1128,1286,746,842,1994,1995,560,223,1287,98,8,189,650,978,1288,1996,1437,1997,17,345,250,423,277,234,512,226,97,289,42,167,1998,201,1999,2e3,843,836,824,532,338,783,1090,182,576,436,1438,1439,527,500,2001,947,889,2002,2003,2004,2005,262,600,314,447,2006,547,2007,693,738,1129,2008,71,1440,745,619,688,2009,829,2010,2011,147,2012,33,948,2013,2014,74,224,2015,61,191,918,399,637,2016,1028,1130,257,902,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,837,2027,2028,2029,2030,179,874,591,52,724,246,2031,2032,2033,2034,1167,969,2035,1289,630,605,911,1091,1168,2036,2037,2038,1441,912,2039,623,2040,2041,253,1169,1290,2042,1442,146,620,611,577,433,2043,1224,719,1170,959,440,437,534,84,388,480,1131,159,220,198,679,2044,1012,819,1066,1443,113,1225,194,318,1003,1029,2045,2046,2047,2048,1067,2049,2050,2051,2052,2053,59,913,112,2054,632,2055,455,144,739,1291,2056,273,681,499,2057,448,2058,2059,760,2060,2061,970,384,169,245,1132,2062,2063,414,1444,2064,2065,41,235,2066,157,252,877,568,919,789,580,2067,725,2068,2069,1292,2070,2071,1445,2072,1446,2073,2074,55,588,66,1447,271,1092,2075,1226,2076,960,1013,372,2077,2078,2079,2080,2081,1293,2082,2083,2084,2085,850,2086,2087,2088,2089,2090,186,2091,1068,180,2092,2093,2094,109,1227,522,606,2095,867,1448,1093,991,1171,926,353,1133,2096,581,2097,2098,2099,1294,1449,1450,2100,596,1172,1014,1228,2101,1451,1295,1173,1229,2102,2103,1296,1134,1452,949,1135,2104,2105,1094,1453,1454,1455,2106,1095,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,804,2118,2119,1230,1231,805,1456,405,1136,2120,2121,2122,2123,2124,720,701,1297,992,1457,927,1004,2125,2126,2127,2128,2129,2130,22,417,2131,303,2132,385,2133,971,520,513,2134,1174,73,1096,231,274,962,1458,673,2135,1459,2136,152,1137,2137,2138,2139,2140,1005,1138,1460,1139,2141,2142,2143,2144,11,374,844,2145,154,1232,46,1461,2146,838,830,721,1233,106,2147,90,428,462,578,566,1175,352,2148,2149,538,1234,124,1298,2150,1462,761,565,2151,686,2152,649,2153,72,173,2154,460,415,2155,1463,2156,1235,305,2157,2158,2159,2160,2161,2162,579,2163,2164,2165,2166,2167,747,2168,2169,2170,2171,1464,669,2172,2173,2174,2175,2176,1465,2177,23,530,285,2178,335,729,2179,397,2180,2181,2182,1030,2183,2184,698,2185,2186,325,2187,2188,369,2189,799,1097,1015,348,2190,1069,680,2191,851,1466,2192,2193,10,2194,613,424,2195,979,108,449,589,27,172,81,1031,80,774,281,350,1032,525,301,582,1176,2196,674,1045,2197,2198,1467,730,762,2199,2200,2201,2202,1468,2203,993,2204,2205,266,1070,963,1140,2206,2207,2208,664,1098,972,2209,2210,2211,1177,1469,1470,871,2212,2213,2214,2215,2216,1471,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,1472,1236,2228,2229,2230,2231,2232,2233,2234,2235,1299,2236,2237,200,2238,477,373,2239,2240,731,825,777,2241,2242,2243,521,486,548,2244,2245,2246,1473,1300,53,549,137,875,76,158,2247,1301,1474,469,396,1016,278,712,2248,321,442,503,767,744,941,1237,1178,1475,2249,82,178,1141,1179,973,2250,1302,2251,297,2252,2253,570,2254,2255,2256,18,450,206,2257,290,292,1142,2258,511,162,99,346,164,735,2259,1476,1477,4,554,343,798,1099,2260,1100,2261,43,171,1303,139,215,2262,2263,717,775,2264,1033,322,216,2265,831,2266,149,2267,1304,2268,2269,702,1238,135,845,347,309,2270,484,2271,878,655,238,1006,1478,2272,67,2273,295,2274,2275,461,2276,478,942,412,2277,1034,2278,2279,2280,265,2281,541,2282,2283,2284,2285,2286,70,852,1071,2287,2288,2289,2290,21,56,509,117,432,2291,2292,331,980,552,1101,148,284,105,393,1180,1239,755,2293,187,2294,1046,1479,2295,340,2296,63,1047,230,2297,2298,1305,763,1306,101,800,808,494,2299,2300,2301,903,2302,37,1072,14,5,2303,79,675,2304,312,2305,2306,2307,2308,2309,1480,6,1307,2310,2311,2312,1,470,35,24,229,2313,695,210,86,778,15,784,592,779,32,77,855,964,2314,259,2315,501,380,2316,2317,83,981,153,689,1308,1481,1482,1483,2318,2319,716,1484,2320,2321,2322,2323,2324,2325,1485,2326,2327,128,57,68,261,1048,211,170,1240,31,2328,51,435,742,2329,2330,2331,635,2332,264,456,2333,2334,2335,425,2336,1486,143,507,263,943,2337,363,920,1487,256,1488,1102,243,601,1489,2338,2339,2340,2341,2342,2343,2344,861,2345,2346,2347,2348,2349,2350,395,2351,1490,1491,62,535,166,225,2352,2353,668,419,1241,138,604,928,2354,1181,2355,1492,1493,2356,2357,2358,1143,2359,696,2360,387,307,1309,682,476,2361,2362,332,12,222,156,2363,232,2364,641,276,656,517,1494,1495,1035,416,736,1496,2365,1017,586,2366,2367,2368,1497,2369,242,2370,2371,2372,1498,2373,965,713,2374,2375,2376,2377,740,982,1499,944,1500,1007,2378,2379,1310,1501,2380,2381,2382,785,329,2383,2384,1502,2385,2386,2387,932,2388,1503,2389,2390,2391,2392,1242,2393,2394,2395,2396,2397,994,950,2398,2399,2400,2401,1504,1311,2402,2403,2404,2405,1049,749,2406,2407,853,718,1144,1312,2408,1182,1505,2409,2410,255,516,479,564,550,214,1506,1507,1313,413,239,444,339,1145,1036,1508,1509,1314,1037,1510,1315,2411,1511,2412,2413,2414,176,703,497,624,593,921,302,2415,341,165,1103,1512,2416,1513,2417,2418,2419,376,2420,700,2421,2422,2423,258,768,1316,2424,1183,2425,995,608,2426,2427,2428,2429,221,2430,2431,2432,2433,2434,2435,2436,2437,195,323,726,188,897,983,1317,377,644,1050,879,2438,452,2439,2440,2441,2442,2443,2444,914,2445,2446,2447,2448,915,489,2449,1514,1184,2450,2451,515,64,427,495,2452,583,2453,483,485,1038,562,213,1515,748,666,2454,2455,2456,2457,334,2458,780,996,1008,705,1243,2459,2460,2461,2462,2463,114,2464,493,1146,366,163,1516,961,1104,2465,291,2466,1318,1105,2467,1517,365,2468,355,951,1244,2469,1319,2470,631,2471,2472,218,1320,364,320,756,1518,1519,1321,1520,1322,2473,2474,2475,2476,997,2477,2478,2479,2480,665,1185,2481,916,1521,2482,2483,2484,584,684,2485,2486,797,2487,1051,1186,2488,2489,2490,1522,2491,2492,370,2493,1039,1187,65,2494,434,205,463,1188,2495,125,812,391,402,826,699,286,398,155,781,771,585,2496,590,505,1073,2497,599,244,219,917,1018,952,646,1523,2498,1323,2499,2500,49,984,354,741,2501,625,2502,1324,2503,1019,190,357,757,491,95,782,868,2504,2505,2506,2507,2508,2509,134,1524,1074,422,1525,898,2510,161,2511,2512,2513,2514,769,2515,1526,2516,2517,411,1325,2518,472,1527,2519,2520,2521,2522,2523,2524,985,2525,2526,2527,2528,2529,2530,764,2531,1245,2532,2533,25,204,311,2534,496,2535,1052,2536,2537,2538,2539,2540,2541,2542,199,704,504,468,758,657,1528,196,44,839,1246,272,750,2543,765,862,2544,2545,1326,2546,132,615,933,2547,732,2548,2549,2550,1189,1529,2551,283,1247,1053,607,929,2552,2553,2554,930,183,872,616,1040,1147,2555,1148,1020,441,249,1075,2556,2557,2558,466,743,2559,2560,2561,92,514,426,420,526,2562,2563,2564,2565,2566,2567,2568,185,2569,2570,2571,2572,776,1530,658,2573,362,2574,361,922,1076,793,2575,2576,2577,2578,2579,2580,1531,251,2581,2582,2583,2584,1532,54,612,237,1327,2585,2586,275,408,647,111,2587,1533,1106,465,3,458,9,38,2588,107,110,890,209,26,737,498,2589,1534,2590,431,202,88,1535,356,287,1107,660,1149,2591,381,1536,986,1150,445,1248,1151,974,2592,2593,846,2594,446,953,184,1249,1250,727,2595,923,193,883,2596,2597,2598,102,324,539,817,2599,421,1041,2600,832,2601,94,175,197,406,2602,459,2603,2604,2605,2606,2607,330,555,2608,2609,2610,706,1108,389,2611,2612,2613,2614,233,2615,833,558,931,954,1251,2616,2617,1537,546,2618,2619,1009,2620,2621,2622,1538,690,1328,2623,955,2624,1539,2625,2626,772,2627,2628,2629,2630,2631,924,648,863,603,2632,2633,934,1540,864,865,2634,642,1042,670,1190,2635,2636,2637,2638,168,2639,652,873,542,1054,1541,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,1542,880,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,1543,2726,2727,2728,2729,2730,2731,2732,1544,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,1545,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,1546,2767,1547,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,1548,2787,2788,2789,1109,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,1329,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,1549,2857,2858,2859,2860,1550,2861,2862,1551,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,1110,1330,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,1331,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,1552,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,1252,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3e3,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,1553,3013,3014,3015,3016,3017,1554,3018,1332,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,1555,3051,3052,3053,1556,1557,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,1558,3068,3069,3070,3071,3072,3073,3074,3075,3076,1559,3077,3078,3079,3080,3081,3082,3083,1253,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,1152,3109,3110,3111,3112,3113,1560,3114,3115,3116,3117,1111,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,1333,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,1561,3190,3191,1334,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,1562,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,1563,3278,3279,3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,1335,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,1336,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,1337,3415,3416,3417,3418,3419,1338,3420,3421,3422,1564,1565,3423,3424,3425,3426,3427,3428,3429,3430,3431,1254,3432,3433,3434,1339,3435,3436,3437,3438,3439,1566,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,1255,3455,3456,3457,3458,3459,1567,1191,3460,1568,1569,3461,3462,3463,1570,3464,3465,3466,3467,3468,1571,3469,3470,3471,3472,3473,1572,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,1340,3487,3488,3489,3490,3491,3492,1021,3493,3494,3495,3496,3497,3498,1573,3499,1341,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,1342,3512,3513,3514,3515,3516,1574,1343,3517,3518,3519,1575,3520,1576,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,1577,3581,3582,1578,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,1579,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,1580,3630,3631,1581,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,1582,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,1192,3701,3702,3703,3704,1256,3705,3706,3707,3708,1583,1257,3709,3710,3711,3712,3713,3714,3715,3716,1584,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,1344,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,1585,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,1586,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,1345,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,1346,1587,3796,3797,1588,3798,3799,3800,3801,3802,3803,3804,3805,3806,1347,3807,3808,3809,3810,3811,1589,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,1590,3822,3823,1591,1348,3824,3825,3826,3827,3828,3829,3830,1592,3831,3832,1593,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,1349,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,1594,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,1595,3870,3871,3872,3873,1596,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,1597,3887,3888,3889,3890,3891,3892,3893,3894,3895,1598,3896,3897,3898,1599,1600,3899,1350,3900,1351,3901,3902,1352,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,1258,3925,3926,3927,3928,3929,3930,3931,1193,3932,1601,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,1602,3944,3945,3946,3947,3948,1603,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,1604,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,1353,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,1354,3992,3993,3994,3995,3996,3997,3998,3999,4ee3,5001,5002,5003,5004,5005,1647,5006,1648,5007,5008,5009,5010,5011,5012,1078,5013,5014,5015,5016,5017,5018,5019,5020,5021,5022,5023,5024,5025,5026,5027,5028,1365,5029,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,1649,5040,5041,5042,5043,5044,5045,1366,5046,5047,5048,5049,5050,5051,5052,5053,5054,5055,1650,5056,5057,5058,5059,5060,5061,5062,5063,5064,5065,5066,5067,5068,5069,5070,5071,5072,5073,5074,5075,5076,5077,1651,5078,5079,5080,5081,5082,5083,5084,5085,5086,5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,5104,5105,5106,5107,5108,5109,5110,1652,5111,5112,5113,5114,5115,5116,5117,5118,1367,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,1653,5130,5131,5132,5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149,1368,5150,1654,5151,1369,5152,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,5176,5177,5178,1370,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,5193,5194,5195,5196,5197,5198,1655,5199,5200,5201,5202,1656,5203,5204,5205,5206,1371,5207,1372,5208,5209,5210,5211,1373,5212,5213,1374,5214,5215,5216,5217,5218,5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,1657,5248,5249,5250,5251,1658,1263,5252,5253,5254,5255,5256,1375,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283,1659,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299,5300,1660,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,1376,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,1198,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,1661,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,5382,5383,5384,5385,5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,1264,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408,5409,5410,5411,5412,1662,5413,5414,5415,5416,1663,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,1664,5439,5440,5441,5442,5443,5444,5445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,5478,1154,5479,5480,5481,5482,5483,5484,5485,1665,5486,5487,5488,5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,1377,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,1114,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,5586,5587,5588,5589,5590,5591,5592,1378,5593,5594,5595,5596,5597,5598,5599,5600,5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,1379,5615,5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632,5633,5634,1380,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5647,5648,5649,1381,1056,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,1666,5661,5662,5663,5664,5665,5666,5667,5668,1667,5669,1668,5670,5671,5672,5673,5674,5675,5676,5677,5678,1155,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696,5697,5698,1669,5699,5700,5701,5702,5703,5704,5705,1670,5706,5707,5708,5709,5710,1671,5711,5712,5713,5714,1382,5715,5716,5717,5718,5719,5720,5721,5722,5723,5724,5725,1672,5726,5727,1673,1674,5728,5729,5730,5731,5732,5733,5734,5735,5736,1675,5737,5738,5739,5740,5741,5742,5743,5744,1676,5745,5746,5747,5748,5749,5750,5751,1383,5752,5753,5754,5755,5756,5757,5758,5759,5760,5761,5762,5763,5764,5765,5766,5767,5768,1677,5769,5770,5771,5772,5773,1678,5774,5775,5776,998,5777,5778,5779,5780,5781,5782,5783,5784,5785,1384,5786,5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,1679,5801,5802,5803,1115,1116,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,1680,5856,5857,5858,5859,5860,5861,5862,5863,5864,1681,5865,5866,5867,1682,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,1683,5880,1684,5881,5882,5883,5884,1685,5885,5886,5887,5888,5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,1686,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,1687,5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,1688,1689,5953,1199,5954,5955,5956,5957,5958,5959,5960,5961,1690,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,1385,5982,1386,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6eee3,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111,8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642,8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672,8673,8674,8675,8676,8677,8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,8736,8737,8738,8739,8740,8741]},function(e,t){t.GB2312_TYPICAL_DISTRIBUTION_RATIO=.9,t.GB2312_TABLE_SIZE=3760,t.GB2312CharToFreqOrder=[1671,749,1443,2364,3924,3807,2330,3921,1704,3463,2691,1511,1515,572,3191,2205,2361,224,2558,479,1711,963,3162,440,4060,1905,2966,2947,3580,2647,3961,3842,2204,869,4207,970,2678,5626,2944,2956,1479,4048,514,3595,588,1346,2820,3409,249,4088,1746,1873,2047,1774,581,1813,358,1174,3590,1014,1561,4844,2245,670,1636,3112,889,1286,953,556,2327,3060,1290,3141,613,185,3477,1367,850,3820,1715,2428,2642,2303,2732,3041,2562,2648,3566,3946,1349,388,3098,2091,1360,3585,152,1687,1539,738,1559,59,1232,2925,2267,1388,1249,1741,1679,2960,151,1566,1125,1352,4271,924,4296,385,3166,4459,310,1245,2850,70,3285,2729,3534,3575,2398,3298,3466,1960,2265,217,3647,864,1909,2084,4401,2773,1010,3269,5152,853,3051,3121,1244,4251,1895,364,1499,1540,2313,1180,3655,2268,562,715,2417,3061,544,336,3768,2380,1752,4075,950,280,2425,4382,183,2759,3272,333,4297,2155,1688,2356,1444,1039,4540,736,1177,3349,2443,2368,2144,2225,565,196,1482,3406,927,1335,4147,692,878,1311,1653,3911,3622,1378,4200,1840,2969,3149,2126,1816,2534,1546,2393,2760,737,2494,13,447,245,2747,38,2765,2129,2589,1079,606,360,471,3755,2890,404,848,699,1785,1236,370,2221,1023,3746,2074,2026,2023,2388,1581,2119,812,1141,3091,2536,1519,804,2053,406,1596,1090,784,548,4414,1806,2264,2936,1100,343,4114,5096,622,3358,743,3668,1510,1626,5020,3567,2513,3195,4115,5627,2489,2991,24,2065,2697,1087,2719,48,1634,315,68,985,2052,198,2239,1347,1107,1439,597,2366,2172,871,3307,919,2487,2790,1867,236,2570,1413,3794,906,3365,3381,1701,1982,1818,1524,2924,1205,616,2586,2072,2004,575,253,3099,32,1365,1182,197,1714,2454,1201,554,3388,3224,2748,756,2587,250,2567,1507,1517,3529,1922,2761,2337,3416,1961,1677,2452,2238,3153,615,911,1506,1474,2495,1265,1906,2749,3756,3280,2161,898,2714,1759,3450,2243,2444,563,26,3286,2266,3769,3344,2707,3677,611,1402,531,1028,2871,4548,1375,261,2948,835,1190,4134,353,840,2684,1900,3082,1435,2109,1207,1674,329,1872,2781,4055,2686,2104,608,3318,2423,2957,2768,1108,3739,3512,3271,3985,2203,1771,3520,1418,2054,1681,1153,225,1627,2929,162,2050,2511,3687,1954,124,1859,2431,1684,3032,2894,585,4805,3969,2869,2704,2088,2032,2095,3656,2635,4362,2209,256,518,2042,2105,3777,3657,643,2298,1148,1779,190,989,3544,414,11,2135,2063,2979,1471,403,3678,126,770,1563,671,2499,3216,2877,600,1179,307,2805,4937,1268,1297,2694,252,4032,1448,1494,1331,1394,127,2256,222,1647,1035,1481,3056,1915,1048,873,3651,210,33,1608,2516,200,1520,415,102,0,3389,1287,817,91,3299,2940,836,1814,549,2197,1396,1669,2987,3582,2297,2848,4528,1070,687,20,1819,121,1552,1364,1461,1968,2617,3540,2824,2083,177,948,4938,2291,110,4549,2066,648,3359,1755,2110,2114,4642,4845,1693,3937,3308,1257,1869,2123,208,1804,3159,2992,2531,2549,3361,2418,1350,2347,2800,2568,1291,2036,2680,72,842,1990,212,1233,1154,1586,75,2027,3410,4900,1823,1337,2710,2676,728,2810,1522,3026,4995,157,755,1050,4022,710,785,1936,2194,2085,1406,2777,2400,150,1250,4049,1206,807,1910,534,529,3309,1721,1660,274,39,2827,661,2670,1578,925,3248,3815,1094,4278,4901,4252,41,1150,3747,2572,2227,4501,3658,4902,3813,3357,3617,2884,2258,887,538,4187,3199,1294,2439,3042,2329,2343,2497,1255,107,543,1527,521,3478,3568,194,5062,15,961,3870,1241,1192,2664,66,5215,3260,2111,1295,1127,2152,3805,4135,901,1164,1976,398,1278,530,1460,748,904,1054,1966,1426,53,2909,509,523,2279,1534,536,1019,239,1685,460,2353,673,1065,2401,3600,4298,2272,1272,2363,284,1753,3679,4064,1695,81,815,2677,2757,2731,1386,859,500,4221,2190,2566,757,1006,2519,2068,1166,1455,337,2654,3203,1863,1682,1914,3025,1252,1409,1366,847,714,2834,2038,3209,964,2970,1901,885,2553,1078,1756,3049,301,1572,3326,688,2130,1996,2429,1805,1648,2930,3421,2750,3652,3088,262,1158,1254,389,1641,1812,526,1719,923,2073,1073,1902,468,489,4625,1140,857,2375,3070,3319,2863,380,116,1328,2693,1161,2244,273,1212,1884,2769,3011,1775,1142,461,3066,1200,2147,2212,790,702,2695,4222,1601,1058,434,2338,5153,3640,67,2360,4099,2502,618,3472,1329,416,1132,830,2782,1807,2653,3211,3510,1662,192,2124,296,3979,1739,1611,3684,23,118,324,446,1239,1225,293,2520,3814,3795,2535,3116,17,1074,467,2692,2201,387,2922,45,1326,3055,1645,3659,2817,958,243,1903,2320,1339,2825,1784,3289,356,576,865,2315,2381,3377,3916,1088,3122,1713,1655,935,628,4689,1034,1327,441,800,720,894,1979,2183,1528,5289,2702,1071,4046,3572,2399,1571,3281,79,761,1103,327,134,758,1899,1371,1615,879,442,215,2605,2579,173,2048,2485,1057,2975,3317,1097,2253,3801,4263,1403,1650,2946,814,4968,3487,1548,2644,1567,1285,2,295,2636,97,946,3576,832,141,4257,3273,760,3821,3521,3156,2607,949,1024,1733,1516,1803,1920,2125,2283,2665,3180,1501,2064,3560,2171,1592,803,3518,1416,732,3897,4258,1363,1362,2458,119,1427,602,1525,2608,1605,1639,3175,694,3064,10,465,76,2e3,4846,4208,444,3781,1619,3353,2206,1273,3796,740,2483,320,1723,2377,3660,2619,1359,1137,1762,1724,2345,2842,1850,1862,912,821,1866,612,2625,1735,2573,3369,1093,844,89,937,930,1424,3564,2413,2972,1004,3046,3019,2011,711,3171,1452,4178,428,801,1943,432,445,2811,206,4136,1472,730,349,73,397,2802,2547,998,1637,1167,789,396,3217,154,1218,716,1120,1780,2819,4826,1931,3334,3762,2139,1215,2627,552,3664,3628,3232,1405,2383,3111,1356,2652,3577,3320,3101,1703,640,1045,1370,1246,4996,371,1575,2436,1621,2210,984,4033,1734,2638,16,4529,663,2755,3255,1451,3917,2257,1253,1955,2234,1263,2951,214,1229,617,485,359,1831,1969,473,2310,750,2058,165,80,2864,2419,361,4344,2416,2479,1134,796,3726,1266,2943,860,2715,938,390,2734,1313,1384,248,202,877,1064,2854,522,3907,279,1602,297,2357,395,3740,137,2075,944,4089,2584,1267,3802,62,1533,2285,178,176,780,2440,201,3707,590,478,1560,4354,2117,1075,30,74,4643,4004,1635,1441,2745,776,2596,238,1077,1692,1912,2844,605,499,1742,3947,241,3053,980,1749,936,2640,4511,2582,515,1543,2162,5322,2892,2993,890,2148,1924,665,1827,3581,1032,968,3163,339,1044,1896,270,583,1791,1720,4367,1194,3488,3669,43,2523,1657,163,2167,290,1209,1622,3378,550,634,2508,2510,695,2634,2384,2512,1476,1414,220,1469,2341,2138,2852,3183,2900,4939,2865,3502,1211,3680,854,3227,1299,2976,3172,186,2998,1459,443,1067,3251,1495,321,1932,3054,909,753,1410,1828,436,2441,1119,1587,3164,2186,1258,227,231,1425,1890,3200,3942,247,959,725,5254,2741,577,2158,2079,929,120,174,838,2813,591,1115,417,2024,40,3240,1536,1037,291,4151,2354,632,1298,2406,2500,3535,1825,1846,3451,205,1171,345,4238,18,1163,811,685,2208,1217,425,1312,1508,1175,4308,2552,1033,587,1381,3059,2984,3482,340,1316,4023,3972,792,3176,519,777,4690,918,933,4130,2981,3741,90,3360,2911,2200,5184,4550,609,3079,2030,272,3379,2736,363,3881,1130,1447,286,779,357,1169,3350,3137,1630,1220,2687,2391,747,1277,3688,2618,2682,2601,1156,3196,5290,4034,3102,1689,3596,3128,874,219,2783,798,508,1843,2461,269,1658,1776,1392,1913,2983,3287,2866,2159,2372,829,4076,46,4253,2873,1889,1894,915,1834,1631,2181,2318,298,664,2818,3555,2735,954,3228,3117,527,3511,2173,681,2712,3033,2247,2346,3467,1652,155,2164,3382,113,1994,450,899,494,994,1237,2958,1875,2336,1926,3727,545,1577,1550,633,3473,204,1305,3072,2410,1956,2471,707,2134,841,2195,2196,2663,3843,1026,4940,990,3252,4997,368,1092,437,3212,3258,1933,1829,675,2977,2893,412,943,3723,4644,3294,3283,2230,2373,5154,2389,2241,2661,2323,1404,2524,593,787,677,3008,1275,2059,438,2709,2609,2240,2269,2246,1446,36,1568,1373,3892,1574,2301,1456,3962,693,2276,5216,2035,1143,2720,1919,1797,1811,2763,4137,2597,1830,1699,1488,1198,2090,424,1694,312,3634,3390,4179,3335,2252,1214,561,1059,3243,2295,2561,975,5155,2321,2751,3772,472,1537,3282,3398,1047,2077,2348,2878,1323,3340,3076,690,2906,51,369,170,3541,1060,2187,2688,3670,2541,1083,1683,928,3918,459,109,4427,599,3744,4286,143,2101,2730,2490,82,1588,3036,2121,281,1860,477,4035,1238,2812,3020,2716,3312,1530,2188,2055,1317,843,636,1808,1173,3495,649,181,1002,147,3641,1159,2414,3750,2289,2795,813,3123,2610,1136,4368,5,3391,4541,2174,420,429,1728,754,1228,2115,2219,347,2223,2733,735,1518,3003,2355,3134,1764,3948,3329,1888,2424,1001,1234,1972,3321,3363,1672,1021,1450,1584,226,765,655,2526,3404,3244,2302,3665,731,594,2184,319,1576,621,658,2656,4299,2099,3864,1279,2071,2598,2739,795,3086,3699,3908,1707,2352,2402,1382,3136,2475,1465,4847,3496,3865,1085,3004,2591,1084,213,2287,1963,3565,2250,822,793,4574,3187,1772,1789,3050,595,1484,1959,2770,1080,2650,456,422,2996,940,3322,4328,4345,3092,2742,965,2784,739,4124,952,1358,2498,2949,2565,332,2698,2378,660,2260,2473,4194,3856,2919,535,1260,2651,1208,1428,1300,1949,1303,2942,433,2455,2450,1251,1946,614,1269,641,1306,1810,2737,3078,2912,564,2365,1419,1415,1497,4460,2367,2185,1379,3005,1307,3218,2175,1897,3063,682,1157,4040,4005,1712,1160,1941,1399,394,402,2952,1573,1151,2986,2404,862,299,2033,1489,3006,346,171,2886,3401,1726,2932,168,2533,47,2507,1030,3735,1145,3370,1395,1318,1579,3609,4560,2857,4116,1457,2529,1965,504,1036,2690,2988,2405,745,5871,849,2397,2056,3081,863,2359,3857,2096,99,1397,1769,2300,4428,1643,3455,1978,1757,3718,1440,35,4879,3742,1296,4228,2280,160,5063,1599,2013,166,520,3479,1646,3345,3012,490,1937,1545,1264,2182,2505,1096,1188,1369,1436,2421,1667,2792,2460,1270,2122,727,3167,2143,806,1706,1012,1800,3037,960,2218,1882,805,139,2456,1139,1521,851,1052,3093,3089,342,2039,744,5097,1468,1502,1585,2087,223,939,326,2140,2577,892,2481,1623,4077,982,3708,135,2131,87,2503,3114,2326,1106,876,1616,547,2997,2831,2093,3441,4530,4314,9,3256,4229,4148,659,1462,1986,1710,2046,2913,2231,4090,4880,5255,3392,3274,1368,3689,4645,1477,705,3384,3635,1068,1529,2941,1458,3782,1509,100,1656,2548,718,2339,408,1590,2780,3548,1838,4117,3719,1345,3530,717,3442,2778,3220,2898,1892,4590,3614,3371,2043,1998,1224,3483,891,635,584,2559,3355,733,1766,1729,1172,3789,1891,2307,781,2982,2271,1957,1580,5773,2633,2005,4195,3097,1535,3213,1189,1934,5693,3262,586,3118,1324,1598,517,1564,2217,1868,1893,4445,3728,2703,3139,1526,1787,1992,3882,2875,1549,1199,1056,2224,1904,2711,5098,4287,338,1993,3129,3489,2689,1809,2815,1997,957,1855,3898,2550,3275,3057,1105,1319,627,1505,1911,1883,3526,698,3629,3456,1833,1431,746,77,1261,2017,2296,1977,1885,125,1334,1600,525,1798,1109,2222,1470,1945,559,2236,1186,3443,2476,1929,1411,2411,3135,1777,3372,2621,1841,1613,3229,668,1430,1839,2643,2916,195,1989,2671,2358,1387,629,3205,2293,5256,4439,123,1310,888,1879,4300,3021,3605,1003,1162,3192,2910,2010,140,2395,2859,55,1082,2012,2901,662,419,2081,1438,680,2774,4654,3912,1620,1731,1625,5035,4065,2328,512,1344,802,5443,2163,2311,2537,524,3399,98,1155,2103,1918,2606,3925,2816,1393,2465,1504,3773,2177,3963,1478,4346,180,1113,4655,3461,2028,1698,833,2696,1235,1322,1594,4408,3623,3013,3225,2040,3022,541,2881,607,3632,2029,1665,1219,639,1385,1686,1099,2803,3231,1938,3188,2858,427,676,2772,1168,2025,454,3253,2486,3556,230,1950,580,791,1991,1280,1086,1974,2034,630,257,3338,2788,4903,1017,86,4790,966,2789,1995,1696,1131,259,3095,4188,1308,179,1463,5257,289,4107,1248,42,3413,1725,2288,896,1947,774,4474,4254,604,3430,4264,392,2514,2588,452,237,1408,3018,988,4531,1970,3034,3310,540,2370,1562,1288,2990,502,4765,1147,4,1853,2708,207,294,2814,4078,2902,2509,684,34,3105,3532,2551,644,709,2801,2344,573,1727,3573,3557,2021,1081,3100,4315,2100,3681,199,2263,1837,2385,146,3484,1195,2776,3949,997,1939,3973,1008,1091,1202,1962,1847,1149,4209,5444,1076,493,117,5400,2521,972,1490,2934,1796,4542,2374,1512,2933,2657,413,2888,1135,2762,2314,2156,1355,2369,766,2007,2527,2170,3124,2491,2593,2632,4757,2437,234,3125,3591,1898,1750,1376,1942,3468,3138,570,2127,2145,3276,4131,962,132,1445,4196,19,941,3624,3480,3366,1973,1374,4461,3431,2629,283,2415,2275,808,2887,3620,2112,2563,1353,3610,955,1089,3103,1053,96,88,4097,823,3808,1583,399,292,4091,3313,421,1128,642,4006,903,2539,1877,2082,596,29,4066,1790,722,2157,130,995,1569,769,1485,464,513,2213,288,1923,1101,2453,4316,133,486,2445,50,625,487,2207,57,423,481,2962,159,3729,1558,491,303,482,501,240,2837,112,3648,2392,1783,362,8,3433,3422,610,2793,3277,1390,1284,1654,21,3823,734,367,623,193,287,374,1009,1483,816,476,313,2255,2340,1262,2150,2899,1146,2581,782,2116,1659,2018,1880,255,3586,3314,1110,2867,2137,2564,986,2767,5185,2006,650,158,926,762,881,3157,2717,2362,3587,306,3690,3245,1542,3077,2427,1691,2478,2118,2985,3490,2438,539,2305,983,129,1754,355,4201,2386,827,2923,104,1773,2838,2771,411,2905,3919,376,767,122,1114,828,2422,1817,3506,266,3460,1007,1609,4998,945,2612,4429,2274,726,1247,1964,2914,2199,2070,4002,4108,657,3323,1422,579,455,2764,4737,1222,2895,1670,824,1223,1487,2525,558,861,3080,598,2659,2515,1967,752,2583,2376,2214,4180,977,704,2464,4999,2622,4109,1210,2961,819,1541,142,2284,44,418,457,1126,3730,4347,4626,1644,1876,3671,1864,302,1063,5694,624,723,1984,3745,1314,1676,2488,1610,1449,3558,3569,2166,2098,409,1011,2325,3704,2306,818,1732,1383,1824,1844,3757,999,2705,3497,1216,1423,2683,2426,2954,2501,2726,2229,1475,2554,5064,1971,1794,1666,2014,1343,783,724,191,2434,1354,2220,5065,1763,2752,2472,4152,131,175,2885,3434,92,1466,4920,2616,3871,3872,3866,128,1551,1632,669,1854,3682,4691,4125,1230,188,2973,3290,1302,1213,560,3266,917,763,3909,3249,1760,868,1958,764,1782,2097,145,2277,3774,4462,64,1491,3062,971,2132,3606,2442,221,1226,1617,218,323,1185,3207,3147,571,619,1473,1005,1744,2281,449,1887,2396,3685,275,375,3816,1743,3844,3731,845,1983,2350,4210,1377,773,967,3499,3052,3743,2725,4007,1697,1022,3943,1464,3264,2855,2722,1952,1029,2839,2467,84,4383,2215,820,1391,2015,2448,3672,377,1948,2168,797,2545,3536,2578,2645,94,2874,1678,405,1259,3071,771,546,1315,470,1243,3083,895,2468,981,969,2037,846,4181,653,1276,2928,14,2594,557,3007,2474,156,902,1338,1740,2574,537,2518,973,2282,2216,2433,1928,138,2903,1293,2631,1612,646,3457,839,2935,111,496,2191,2847,589,3186,149,3994,2060,4031,2641,4067,3145,1870,37,3597,2136,1025,2051,3009,3383,3549,1121,1016,3261,1301,251,2446,2599,2153,872,3246,637,334,3705,831,884,921,3065,3140,4092,2198,1944,246,2964,108,2045,1152,1921,2308,1031,203,3173,4170,1907,3890,810,1401,2003,1690,506,647,1242,2828,1761,1649,3208,2249,1589,3709,2931,5156,1708,498,666,2613,834,3817,1231,184,2851,1124,883,3197,2261,3710,1765,1553,2658,1178,2639,2351,93,1193,942,2538,2141,4402,235,1821,870,1591,2192,1709,1871,3341,1618,4126,2595,2334,603,651,69,701,268,2662,3411,2555,1380,1606,503,448,254,2371,2646,574,1187,2309,1770,322,2235,1292,1801,305,566,1133,229,2067,2057,706,167,483,2002,2672,3295,1820,3561,3067,316,378,2746,3452,1112,136,1981,507,1651,2917,1117,285,4591,182,2580,3522,1304,335,3303,1835,2504,1795,1792,2248,674,1018,2106,2449,1857,2292,2845,976,3047,1781,2600,2727,1389,1281,52,3152,153,265,3950,672,3485,3951,4463,430,1183,365,278,2169,27,1407,1336,2304,209,1340,1730,2202,1852,2403,2883,979,1737,1062,631,2829,2542,3876,2592,825,2086,2226,3048,3625,352,1417,3724,542,991,431,1351,3938,1861,2294,826,1361,2927,3142,3503,1738,463,2462,2723,582,1916,1595,2808,400,3845,3891,2868,3621,2254,58,2492,1123,910,2160,2614,1372,1603,1196,1072,3385,1700,3267,1980,696,480,2430,920,799,1570,2920,1951,2041,4047,2540,1321,4223,2469,3562,2228,1271,2602,401,2833,3351,2575,5157,907,2312,1256,410,263,3507,1582,996,678,1849,2316,1480,908,3545,2237,703,2322,667,1826,2849,1531,2604,2999,2407,3146,2151,2630,1786,3711,469,3542,497,3899,2409,858,837,4446,3393,1274,786,620,1845,2001,3311,484,308,3367,1204,1815,3691,2332,1532,2557,1842,2020,2724,1927,2333,4440,567,22,1673,2728,4475,1987,1858,1144,1597,101,1832,3601,12,974,3783,4391,951,1412,1,3720,453,4608,4041,528,1041,1027,3230,2628,1129,875,1051,3291,1203,2262,1069,2860,2799,2149,2615,3278,144,1758,3040,31,475,1680,366,2685,3184,311,1642,4008,2466,5036,1593,1493,2809,216,1420,1668,233,304,2128,3284,232,1429,1768,1040,2008,3407,2740,2967,2543,242,2133,778,1565,2022,2620,505,2189,2756,1098,2273,372,1614,708,553,2846,2094,2278,169,3626,2835,4161,228,2674,3165,809,1454,1309,466,1705,1095,900,3423,880,2667,3751,5258,2317,3109,2571,4317,2766,1503,1342,866,4447,1118,63,2076,314,1881,1348,1061,172,978,3515,1747,532,511,3970,6,601,905,2699,3300,1751,276,1467,3725,2668,65,4239,2544,2779,2556,1604,578,2451,1802,992,2331,2624,1320,3446,713,1513,1013,103,2786,2447,1661,886,1702,916,654,3574,2031,1556,751,2178,2821,2179,1498,1538,2176,271,914,2251,2080,1325,638,1953,2937,3877,2432,2754,95,3265,1716,260,1227,4083,775,106,1357,3254,426,1607,555,2480,772,1985,244,2546,474,495,1046,2611,1851,2061,71,2089,1675,2590,742,3758,2843,3222,1433,267,2180,2576,2826,2233,2092,3913,2435,956,1745,3075,856,2113,1116,451,3,1988,2896,1398,993,2463,1878,2049,1341,2718,2721,2870,2108,712,2904,4363,2753,2324,277,2872,2349,2649,384,987,435,691,3e3,922,164,3939,652,1500,1184,4153,2482,3373,2165,4848,2335,3775,3508,3154,2806,2830,1554,2102,1664,2530,1434,2408,893,1547,2623,3447,2832,2242,2532,3169,2856,3223,2078,49,3770,3469,462,318,656,2259,3250,3069,679,1629,2758,344,1138,1104,3120,1836,1283,3115,2154,1437,4448,934,759,1999,794,2862,1038,533,2560,1722,2342,855,2626,1197,1663,4476,3127,85,4240,2528,25,1111,1181,3673,407,3470,4561,2679,2713,768,1925,2841,3986,1544,1165,932,373,1240,2146,1930,2673,721,4766,354,4333,391,2963,187,61,3364,1442,1102,330,1940,1767,341,3809,4118,393,2496,2062,2211,105,331,300,439,913,1332,626,379,3304,1557,328,689,3952,309,1555,931,317,2517,3027,325,569,686,2107,3084,60,1042,1333,2794,264,3177,4014,1628,258,3712,7,4464,1176,1043,1778,683,114,1975,78,1492,383,1886,510,386,645,5291,2891,2069,3305,4138,3867,2939,2603,2493,1935,1066,1848,3588,1015,1282,1289,4609,697,1453,3044,2666,3611,1856,2412,54,719,1330,568,3778,2459,1748,788,492,551,1191,1e3,488,3394,3763,282,1799,348,2016,1523,3155,2390,1049,382,2019,1788,1170,729,2968,3523,897,3926,2785,2938,3292,350,2319,3238,1718,1717,2655,3453,3143,4465,161,2889,2980,2009,1421,56,1908,1640,2387,2232,1917,1874,2477,4921,148,83,3438,592,4245,2882,1822,1055,741,115,1496,1624,381,1638,4592,1020,516,3214,458,947,4575,1432,211,1514,2926,1865,2142,189,852,1221,1400,1486,882,2299,4036,351,28,1122,700,6479,6480,6481,6482,6483,5508,6484,3900,3414,3974,4441,4024,3537,4037,5628,5099,3633,6485,3148,6486,3636,5509,3257,5510,5973,5445,5872,4941,4403,3174,4627,5873,6276,2286,4230,5446,5874,5122,6102,6103,4162,5447,5123,5323,4849,6277,3980,3851,5066,4246,5774,5067,6278,3001,2807,5695,3346,5775,5974,5158,5448,6487,5975,5976,5776,3598,6279,5696,4806,4211,4154,6280,6488,6489,6490,6281,4212,5037,3374,4171,6491,4562,4807,4722,4827,5977,6104,4532,4079,5159,5324,5160,4404,3858,5359,5875,3975,4288,4610,3486,4512,5325,3893,5360,6282,6283,5560,2522,4231,5978,5186,5449,2569,3878,6284,5401,3578,4415,6285,4656,5124,5979,2506,4247,4449,3219,3417,4334,4969,4329,6492,4576,4828,4172,4416,4829,5402,6286,3927,3852,5361,4369,4830,4477,4867,5876,4173,6493,6105,4657,6287,6106,5877,5450,6494,4155,4868,5451,3700,5629,4384,6288,6289,5878,3189,4881,6107,6290,6495,4513,6496,4692,4515,4723,5100,3356,6497,6291,3810,4080,5561,3570,4430,5980,6498,4355,5697,6499,4724,6108,6109,3764,4050,5038,5879,4093,3226,6292,5068,5217,4693,3342,5630,3504,4831,4377,4466,4309,5698,4431,5777,6293,5778,4272,3706,6110,5326,3752,4676,5327,4273,5403,4767,5631,6500,5699,5880,3475,5039,6294,5562,5125,4348,4301,4482,4068,5126,4593,5700,3380,3462,5981,5563,3824,5404,4970,5511,3825,4738,6295,6501,5452,4516,6111,5881,5564,6502,6296,5982,6503,4213,4163,3454,6504,6112,4009,4450,6113,4658,6297,6114,3035,6505,6115,3995,4904,4739,4563,4942,4110,5040,3661,3928,5362,3674,6506,5292,3612,4791,5565,4149,5983,5328,5259,5021,4725,4577,4564,4517,4364,6298,5405,4578,5260,4594,4156,4157,5453,3592,3491,6507,5127,5512,4709,4922,5984,5701,4726,4289,6508,4015,6116,5128,4628,3424,4241,5779,6299,4905,6509,6510,5454,5702,5780,6300,4365,4923,3971,6511,5161,3270,3158,5985,4100,867,5129,5703,6117,5363,3695,3301,5513,4467,6118,6512,5455,4232,4242,4629,6513,3959,4478,6514,5514,5329,5986,4850,5162,5566,3846,4694,6119,5456,4869,5781,3779,6301,5704,5987,5515,4710,6302,5882,6120,4392,5364,5705,6515,6121,6516,6517,3736,5988,5457,5989,4695,2457,5883,4551,5782,6303,6304,6305,5130,4971,6122,5163,6123,4870,3263,5365,3150,4871,6518,6306,5783,5069,5706,3513,3498,4409,5330,5632,5366,5458,5459,3991,5990,4502,3324,5991,5784,3696,4518,5633,4119,6519,4630,5634,4417,5707,4832,5992,3418,6124,5993,5567,4768,5218,6520,4595,3458,5367,6125,5635,6126,4202,6521,4740,4924,6307,3981,4069,4385,6308,3883,2675,4051,3834,4302,4483,5568,5994,4972,4101,5368,6309,5164,5884,3922,6127,6522,6523,5261,5460,5187,4164,5219,3538,5516,4111,3524,5995,6310,6311,5369,3181,3386,2484,5188,3464,5569,3627,5708,6524,5406,5165,4677,4492,6312,4872,4851,5885,4468,5996,6313,5709,5710,6128,2470,5886,6314,5293,4882,5785,3325,5461,5101,6129,5711,5786,6525,4906,6526,6527,4418,5887,5712,4808,2907,3701,5713,5888,6528,3765,5636,5331,6529,6530,3593,5889,3637,4943,3692,5714,5787,4925,6315,6130,5462,4405,6131,6132,6316,5262,6531,6532,5715,3859,5716,5070,4696,5102,3929,5788,3987,4792,5997,6533,6534,3920,4809,5e3,5998,6535,2974,5370,6317,5189,5263,5717,3826,6536,3953,5001,4883,3190,5463,5890,4973,5999,4741,6133,6134,3607,5570,6e3,4711,3362,3630,4552,5041,6318,6001,2950,2953,5637,4646,5371,4944,6002,2044,4120,3429,6319,6537,5103,4833,6538,6539,4884,4647,3884,6003,6004,4758,3835,5220,5789,4565,5407,6540,6135,5294,4697,4852,6320,6321,3206,4907,6541,6322,4945,6542,6136,6543,6323,6005,4631,3519,6544,5891,6545,5464,3784,5221,6546,5571,4659,6547,6324,6137,5190,6548,3853,6549,4016,4834,3954,6138,5332,3827,4017,3210,3546,4469,5408,5718,3505,4648,5790,5131,5638,5791,5465,4727,4318,6325,6326,5792,4553,4010,4698,3439,4974,3638,4335,3085,6006,5104,5042,5166,5892,5572,6327,4356,4519,5222,5573,5333,5793,5043,6550,5639,5071,4503,6328,6139,6551,6140,3914,3901,5372,6007,5640,4728,4793,3976,3836,4885,6552,4127,6553,4451,4102,5002,6554,3686,5105,6555,5191,5072,5295,4611,5794,5296,6556,5893,5264,5894,4975,5466,5265,4699,4976,4370,4056,3492,5044,4886,6557,5795,4432,4769,4357,5467,3940,4660,4290,6141,4484,4770,4661,3992,6329,4025,4662,5022,4632,4835,4070,5297,4663,4596,5574,5132,5409,5895,6142,4504,5192,4664,5796,5896,3885,5575,5797,5023,4810,5798,3732,5223,4712,5298,4084,5334,5468,6143,4052,4053,4336,4977,4794,6558,5335,4908,5576,5224,4233,5024,4128,5469,5225,4873,6008,5045,4729,4742,4633,3675,4597,6559,5897,5133,5577,5003,5641,5719,6330,6560,3017,2382,3854,4406,4811,6331,4393,3964,4946,6561,2420,3722,6562,4926,4378,3247,1736,4442,6332,5134,6333,5226,3996,2918,5470,4319,4003,4598,4743,4744,4485,3785,3902,5167,5004,5373,4394,5898,6144,4874,1793,3997,6334,4085,4214,5106,5642,4909,5799,6009,4419,4189,3330,5899,4165,4420,5299,5720,5227,3347,6145,4081,6335,2876,3930,6146,3293,3786,3910,3998,5900,5300,5578,2840,6563,5901,5579,6147,3531,5374,6564,6565,5580,4759,5375,6566,6148,3559,5643,6336,6010,5517,6337,6338,5721,5902,3873,6011,6339,6567,5518,3868,3649,5722,6568,4771,4947,6569,6149,4812,6570,2853,5471,6340,6341,5644,4795,6342,6012,5723,6343,5724,6013,4349,6344,3160,6150,5193,4599,4514,4493,5168,4320,6345,4927,3666,4745,5169,5903,5005,4928,6346,5725,6014,4730,4203,5046,4948,3395,5170,6015,4150,6016,5726,5519,6347,5047,3550,6151,6348,4197,4310,5904,6571,5581,2965,6152,4978,3960,4291,5135,6572,5301,5727,4129,4026,5905,4853,5728,5472,6153,6349,4533,2700,4505,5336,4678,3583,5073,2994,4486,3043,4554,5520,6350,6017,5800,4487,6351,3931,4103,5376,6352,4011,4321,4311,4190,5136,6018,3988,3233,4350,5906,5645,4198,6573,5107,3432,4191,3435,5582,6574,4139,5410,6353,5411,3944,5583,5074,3198,6575,6354,4358,6576,5302,4600,5584,5194,5412,6577,6578,5585,5413,5303,4248,5414,3879,4433,6579,4479,5025,4854,5415,6355,4760,4772,3683,2978,4700,3797,4452,3965,3932,3721,4910,5801,6580,5195,3551,5907,3221,3471,3029,6019,3999,5908,5909,5266,5267,3444,3023,3828,3170,4796,5646,4979,4259,6356,5647,5337,3694,6357,5648,5338,4520,4322,5802,3031,3759,4071,6020,5586,4836,4386,5048,6581,3571,4679,4174,4949,6154,4813,3787,3402,3822,3958,3215,3552,5268,4387,3933,4950,4359,6021,5910,5075,3579,6358,4234,4566,5521,6359,3613,5049,6022,5911,3375,3702,3178,4911,5339,4521,6582,6583,4395,3087,3811,5377,6023,6360,6155,4027,5171,5649,4421,4249,2804,6584,2270,6585,4e},function(e,t){t.BIG5_TYPICAL_DISTRIBUTION_RATIO=.75,t.BIG5_TABLE_SIZE=5376,t.Big5CharToFreqOrder=[1,1801,1506,255,1431,198,9,82,6,5008,177,202,3681,1256,2821,110,3814,33,3274,261,76,44,2114,16,2946,2187,1176,659,3971,26,3451,2653,1198,3972,3350,4202,410,2215,302,590,361,1964,8,204,58,4510,5009,1932,63,5010,5011,317,1614,75,222,159,4203,2417,1480,5012,3555,3091,224,2822,3682,3,10,3973,1471,29,2787,1135,2866,1940,873,130,3275,1123,312,5013,4511,2052,507,252,682,5014,142,1915,124,206,2947,34,3556,3204,64,604,5015,2501,1977,1978,155,1991,645,641,1606,5016,3452,337,72,406,5017,80,630,238,3205,1509,263,939,1092,2654,756,1440,1094,3453,449,69,2987,591,179,2096,471,115,2035,1844,60,50,2988,134,806,1869,734,2036,3454,180,995,1607,156,537,2907,688,5018,319,1305,779,2145,514,2379,298,4512,359,2502,90,2716,1338,663,11,906,1099,2553,20,2441,182,532,1716,5019,732,1376,4204,1311,1420,3206,25,2317,1056,113,399,382,1950,242,3455,2474,529,3276,475,1447,3683,5020,117,21,656,810,1297,2300,2334,3557,5021,126,4205,706,456,150,613,4513,71,1118,2037,4206,145,3092,85,835,486,2115,1246,1426,428,727,1285,1015,800,106,623,303,1281,5022,2128,2359,347,3815,221,3558,3135,5023,1956,1153,4207,83,296,1199,3093,192,624,93,5024,822,1898,2823,3136,795,2065,991,1554,1542,1592,27,43,2867,859,139,1456,860,4514,437,712,3974,164,2397,3137,695,211,3037,2097,195,3975,1608,3559,3560,3684,3976,234,811,2989,2098,3977,2233,1441,3561,1615,2380,668,2077,1638,305,228,1664,4515,467,415,5025,262,2099,1593,239,108,300,200,1033,512,1247,2078,5026,5027,2176,3207,3685,2682,593,845,1062,3277,88,1723,2038,3978,1951,212,266,152,149,468,1899,4208,4516,77,187,5028,3038,37,5,2990,5029,3979,5030,5031,39,2524,4517,2908,3208,2079,55,148,74,4518,545,483,1474,1029,1665,217,1870,1531,3138,1104,2655,4209,24,172,3562,900,3980,3563,3564,4519,32,1408,2824,1312,329,487,2360,2251,2717,784,2683,4,3039,3351,1427,1789,188,109,499,5032,3686,1717,1790,888,1217,3040,4520,5033,3565,5034,3352,1520,3687,3981,196,1034,775,5035,5036,929,1816,249,439,38,5037,1063,5038,794,3982,1435,2301,46,178,3278,2066,5039,2381,5040,214,1709,4521,804,35,707,324,3688,1601,2554,140,459,4210,5041,5042,1365,839,272,978,2262,2580,3456,2129,1363,3689,1423,697,100,3094,48,70,1231,495,3139,2196,5043,1294,5044,2080,462,586,1042,3279,853,256,988,185,2382,3457,1698,434,1084,5045,3458,314,2625,2788,4522,2335,2336,569,2285,637,1817,2525,757,1162,1879,1616,3459,287,1577,2116,768,4523,1671,2868,3566,2526,1321,3816,909,2418,5046,4211,933,3817,4212,2053,2361,1222,4524,765,2419,1322,786,4525,5047,1920,1462,1677,2909,1699,5048,4526,1424,2442,3140,3690,2600,3353,1775,1941,3460,3983,4213,309,1369,1130,2825,364,2234,1653,1299,3984,3567,3985,3986,2656,525,1085,3041,902,2001,1475,964,4527,421,1845,1415,1057,2286,940,1364,3141,376,4528,4529,1381,7,2527,983,2383,336,1710,2684,1846,321,3461,559,1131,3042,2752,1809,1132,1313,265,1481,1858,5049,352,1203,2826,3280,167,1089,420,2827,776,792,1724,3568,4214,2443,3281,5050,4215,5051,446,229,333,2753,901,3818,1200,1557,4530,2657,1921,395,2754,2685,3819,4216,1836,125,916,3209,2626,4531,5052,5053,3820,5054,5055,5056,4532,3142,3691,1133,2555,1757,3462,1510,2318,1409,3569,5057,2146,438,2601,2910,2384,3354,1068,958,3043,461,311,2869,2686,4217,1916,3210,4218,1979,383,750,2755,2627,4219,274,539,385,1278,1442,5058,1154,1965,384,561,210,98,1295,2556,3570,5059,1711,2420,1482,3463,3987,2911,1257,129,5060,3821,642,523,2789,2790,2658,5061,141,2235,1333,68,176,441,876,907,4220,603,2602,710,171,3464,404,549,18,3143,2398,1410,3692,1666,5062,3571,4533,2912,4534,5063,2991,368,5064,146,366,99,871,3693,1543,748,807,1586,1185,22,2263,379,3822,3211,5065,3212,505,1942,2628,1992,1382,2319,5066,380,2362,218,702,1818,1248,3465,3044,3572,3355,3282,5067,2992,3694,930,3283,3823,5068,59,5069,585,601,4221,497,3466,1112,1314,4535,1802,5070,1223,1472,2177,5071,749,1837,690,1900,3824,1773,3988,1476,429,1043,1791,2236,2117,917,4222,447,1086,1629,5072,556,5073,5074,2021,1654,844,1090,105,550,966,1758,2828,1008,1783,686,1095,5075,2287,793,1602,5076,3573,2603,4536,4223,2948,2302,4537,3825,980,2503,544,353,527,4538,908,2687,2913,5077,381,2629,1943,1348,5078,1341,1252,560,3095,5079,3467,2870,5080,2054,973,886,2081,143,4539,5081,5082,157,3989,496,4224,57,840,540,2039,4540,4541,3468,2118,1445,970,2264,1748,1966,2082,4225,3144,1234,1776,3284,2829,3695,773,1206,2130,1066,2040,1326,3990,1738,1725,4226,279,3145,51,1544,2604,423,1578,2131,2067,173,4542,1880,5083,5084,1583,264,610,3696,4543,2444,280,154,5085,5086,5087,1739,338,1282,3096,693,2871,1411,1074,3826,2445,5088,4544,5089,5090,1240,952,2399,5091,2914,1538,2688,685,1483,4227,2475,1436,953,4228,2055,4545,671,2400,79,4229,2446,3285,608,567,2689,3469,4230,4231,1691,393,1261,1792,2401,5092,4546,5093,5094,5095,5096,1383,1672,3827,3213,1464,522,1119,661,1150,216,675,4547,3991,1432,3574,609,4548,2690,2402,5097,5098,5099,4232,3045,0,5100,2476,315,231,2447,301,3356,4549,2385,5101,233,4233,3697,1819,4550,4551,5102,96,1777,1315,2083,5103,257,5104,1810,3698,2718,1139,1820,4234,2022,1124,2164,2791,1778,2659,5105,3097,363,1655,3214,5106,2993,5107,5108,5109,3992,1567,3993,718,103,3215,849,1443,341,3357,2949,1484,5110,1712,127,67,339,4235,2403,679,1412,821,5111,5112,834,738,351,2994,2147,846,235,1497,1881,418,1993,3828,2719,186,1100,2148,2756,3575,1545,1355,2950,2872,1377,583,3994,4236,2581,2995,5113,1298,3699,1078,2557,3700,2363,78,3829,3830,267,1289,2100,2002,1594,4237,348,369,1274,2197,2178,1838,4552,1821,2830,3701,2757,2288,2003,4553,2951,2758,144,3358,882,4554,3995,2759,3470,4555,2915,5114,4238,1726,320,5115,3996,3046,788,2996,5116,2831,1774,1327,2873,3997,2832,5117,1306,4556,2004,1700,3831,3576,2364,2660,787,2023,506,824,3702,534,323,4557,1044,3359,2024,1901,946,3471,5118,1779,1500,1678,5119,1882,4558,165,243,4559,3703,2528,123,683,4239,764,4560,36,3998,1793,589,2916,816,626,1667,3047,2237,1639,1555,1622,3832,3999,5120,4e3,2874,1370,1228,1933,891,2084,2917,304,4240,5121,292,2997,2720,3577,691,2101,4241,1115,4561,118,662,5122,611,1156,854,2386,1316,2875,2,386,515,2918,5123,5124,3286,868,2238,1486,855,2661,785,2216,3048,5125,1040,3216,3578,5126,3146,448,5127,1525,5128,2165,4562,5129,3833,5130,4242,2833,3579,3147,503,818,4001,3148,1568,814,676,1444,306,1749,5131,3834,1416,1030,197,1428,805,2834,1501,4563,5132,5133,5134,1994,5135,4564,5136,5137,2198,13,2792,3704,2998,3149,1229,1917,5138,3835,2132,5139,4243,4565,2404,3580,5140,2217,1511,1727,1120,5141,5142,646,3836,2448,307,5143,5144,1595,3217,5145,5146,5147,3705,1113,1356,4002,1465,2529,2530,5148,519,5149,128,2133,92,2289,1980,5150,4003,1512,342,3150,2199,5151,2793,2218,1981,3360,4244,290,1656,1317,789,827,2365,5152,3837,4566,562,581,4004,5153,401,4567,2252,94,4568,5154,1399,2794,5155,1463,2025,4569,3218,1944,5156,828,1105,4245,1262,1394,5157,4246,605,4570,5158,1784,2876,5159,2835,819,2102,578,2200,2952,5160,1502,436,3287,4247,3288,2836,4005,2919,3472,3473,5161,2721,2320,5162,5163,2337,2068,23,4571,193,826,3838,2103,699,1630,4248,3098,390,1794,1064,3581,5164,1579,3099,3100,1400,5165,4249,1839,1640,2877,5166,4572,4573,137,4250,598,3101,1967,780,104,974,2953,5167,278,899,253,402,572,504,493,1339,5168,4006,1275,4574,2582,2558,5169,3706,3049,3102,2253,565,1334,2722,863,41,5170,5171,4575,5172,1657,2338,19,463,2760,4251,606,5173,2999,3289,1087,2085,1323,2662,3e3,5174,1631,1623,1750,4252,2691,5175,2878,791,2723,2663,2339,232,2421,5176,3001,1498,5177,2664,2630,755,1366,3707,3290,3151,2026,1609,119,1918,3474,862,1026,4253,5178,4007,3839,4576,4008,4577,2265,1952,2477,5179,1125,817,4254,4255,4009,1513,1766,2041,1487,4256,3050,3291,2837,3840,3152,5180,5181,1507,5182,2692,733,40,1632,1106,2879,345,4257,841,2531,230,4578,3002,1847,3292,3475,5183,1263,986,3476,5184,735,879,254,1137,857,622,1300,1180,1388,1562,4010,4011,2954,967,2761,2665,1349,592,2134,1692,3361,3003,1995,4258,1679,4012,1902,2188,5185,739,3708,2724,1296,1290,5186,4259,2201,2202,1922,1563,2605,2559,1871,2762,3004,5187,435,5188,343,1108,596,17,1751,4579,2239,3477,3709,5189,4580,294,3582,2955,1693,477,979,281,2042,3583,643,2043,3710,2631,2795,2266,1031,2340,2135,2303,3584,4581,367,1249,2560,5190,3585,5191,4582,1283,3362,2005,240,1762,3363,4583,4584,836,1069,3153,474,5192,2149,2532,268,3586,5193,3219,1521,1284,5194,1658,1546,4260,5195,3587,3588,5196,4261,3364,2693,1685,4262,961,1673,2632,190,2006,2203,3841,4585,4586,5197,570,2504,3711,1490,5198,4587,2633,3293,1957,4588,584,1514,396,1045,1945,5199,4589,1968,2449,5200,5201,4590,4013,619,5202,3154,3294,215,2007,2796,2561,3220,4591,3221,4592,763,4263,3842,4593,5203,5204,1958,1767,2956,3365,3712,1174,452,1477,4594,3366,3155,5205,2838,1253,2387,2189,1091,2290,4264,492,5206,638,1169,1825,2136,1752,4014,648,926,1021,1324,4595,520,4596,997,847,1007,892,4597,3843,2267,1872,3713,2405,1785,4598,1953,2957,3103,3222,1728,4265,2044,3714,4599,2008,1701,3156,1551,30,2268,4266,5207,2027,4600,3589,5208,501,5209,4267,594,3478,2166,1822,3590,3479,3591,3223,829,2839,4268,5210,1680,3157,1225,4269,5211,3295,4601,4270,3158,2341,5212,4602,4271,5213,4015,4016,5214,1848,2388,2606,3367,5215,4603,374,4017,652,4272,4273,375,1140,798,5216,5217,5218,2366,4604,2269,546,1659,138,3051,2450,4605,5219,2254,612,1849,910,796,3844,1740,1371,825,3845,3846,5220,2920,2562,5221,692,444,3052,2634,801,4606,4274,5222,1491,244,1053,3053,4275,4276,340,5223,4018,1041,3005,293,1168,87,1357,5224,1539,959,5225,2240,721,694,4277,3847,219,1478,644,1417,3368,2666,1413,1401,1335,1389,4019,5226,5227,3006,2367,3159,1826,730,1515,184,2840,66,4607,5228,1660,2958,246,3369,378,1457,226,3480,975,4020,2959,1264,3592,674,696,5229,163,5230,1141,2422,2167,713,3593,3370,4608,4021,5231,5232,1186,15,5233,1079,1070,5234,1522,3224,3594,276,1050,2725,758,1126,653,2960,3296,5235,2342,889,3595,4022,3104,3007,903,1250,4609,4023,3481,3596,1342,1681,1718,766,3297,286,89,2961,3715,5236,1713,5237,2607,3371,3008,5238,2962,2219,3225,2880,5239,4610,2505,2533,181,387,1075,4024,731,2190,3372,5240,3298,310,313,3482,2304,770,4278,54,3054,189,4611,3105,3848,4025,5241,1230,1617,1850,355,3597,4279,4612,3373,111,4280,3716,1350,3160,3483,3055,4281,2150,3299,3598,5242,2797,4026,4027,3009,722,2009,5243,1071,247,1207,2343,2478,1378,4613,2010,864,1437,1214,4614,373,3849,1142,2220,667,4615,442,2763,2563,3850,4028,1969,4282,3300,1840,837,170,1107,934,1336,1883,5244,5245,2119,4283,2841,743,1569,5246,4616,4284,582,2389,1418,3484,5247,1803,5248,357,1395,1729,3717,3301,2423,1564,2241,5249,3106,3851,1633,4617,1114,2086,4285,1532,5250,482,2451,4618,5251,5252,1492,833,1466,5253,2726,3599,1641,2842,5254,1526,1272,3718,4286,1686,1795,416,2564,1903,1954,1804,5255,3852,2798,3853,1159,2321,5256,2881,4619,1610,1584,3056,2424,2764,443,3302,1163,3161,5257,5258,4029,5259,4287,2506,3057,4620,4030,3162,2104,1647,3600,2011,1873,4288,5260,4289,431,3485,5261,250,97,81,4290,5262,1648,1851,1558,160,848,5263,866,740,1694,5264,2204,2843,3226,4291,4621,3719,1687,950,2479,426,469,3227,3720,3721,4031,5265,5266,1188,424,1996,861,3601,4292,3854,2205,2694,168,1235,3602,4293,5267,2087,1674,4622,3374,3303,220,2565,1009,5268,3855,670,3010,332,1208,717,5269,5270,3603,2452,4032,3375,5271,513,5272,1209,2882,3376,3163,4623,1080,5273,5274,5275,5276,2534,3722,3604,815,1587,4033,4034,5277,3605,3486,3856,1254,4624,1328,3058,1390,4035,1741,4036,3857,4037,5278,236,3858,2453,3304,5279,5280,3723,3859,1273,3860,4625,5281,308,5282,4626,245,4627,1852,2480,1307,2583,430,715,2137,2454,5283,270,199,2883,4038,5284,3606,2727,1753,761,1754,725,1661,1841,4628,3487,3724,5285,5286,587,14,3305,227,2608,326,480,2270,943,2765,3607,291,650,1884,5287,1702,1226,102,1547,62,3488,904,4629,3489,1164,4294,5288,5289,1224,1548,2766,391,498,1493,5290,1386,1419,5291,2056,1177,4630,813,880,1081,2368,566,1145,4631,2291,1001,1035,2566,2609,2242,394,1286,5292,5293,2069,5294,86,1494,1730,4039,491,1588,745,897,2963,843,3377,4040,2767,2884,3306,1768,998,2221,2070,397,1827,1195,1970,3725,3011,3378,284,5295,3861,2507,2138,2120,1904,5296,4041,2151,4042,4295,1036,3490,1905,114,2567,4296,209,1527,5297,5298,2964,2844,2635,2390,2728,3164,812,2568,5299,3307,5300,1559,737,1885,3726,1210,885,28,2695,3608,3862,5301,4297,1004,1780,4632,5302,346,1982,2222,2696,4633,3863,1742,797,1642,4043,1934,1072,1384,2152,896,4044,3308,3727,3228,2885,3609,5303,2569,1959,4634,2455,1786,5304,5305,5306,4045,4298,1005,1308,3728,4299,2729,4635,4636,1528,2610,161,1178,4300,1983,987,4637,1101,4301,631,4046,1157,3229,2425,1343,1241,1016,2243,2570,372,877,2344,2508,1160,555,1935,911,4047,5307,466,1170,169,1051,2921,2697,3729,2481,3012,1182,2012,2571,1251,2636,5308,992,2345,3491,1540,2730,1201,2071,2406,1997,2482,5309,4638,528,1923,2191,1503,1874,1570,2369,3379,3309,5310,557,1073,5311,1828,3492,2088,2271,3165,3059,3107,767,3108,2799,4639,1006,4302,4640,2346,1267,2179,3730,3230,778,4048,3231,2731,1597,2667,5312,4641,5313,3493,5314,5315,5316,3310,2698,1433,3311,131,95,1504,4049,723,4303,3166,1842,3610,2768,2192,4050,2028,2105,3731,5317,3013,4051,1218,5318,3380,3232,4052,4304,2584,248,1634,3864,912,5319,2845,3732,3060,3865,654,53,5320,3014,5321,1688,4642,777,3494,1032,4053,1425,5322,191,820,2121,2846,971,4643,931,3233,135,664,783,3866,1998,772,2922,1936,4054,3867,4644,2923,3234,282,2732,640,1372,3495,1127,922,325,3381,5323,5324,711,2045,5325,5326,4055,2223,2800,1937,4056,3382,2224,2255,3868,2305,5327,4645,3869,1258,3312,4057,3235,2139,2965,4058,4059,5328,2225,258,3236,4646,101,1227,5329,3313,1755,5330,1391,3314,5331,2924,2057,893,5332,5333,5334,1402,4305,2347,5335,5336,3237,3611,5337,5338,878,1325,1781,2801,4647,259,1385,2585,744,1183,2272,4648,5339,4060,2509,5340,684,1024,4306,5341,472,3612,3496,1165,3315,4061,4062,322,2153,881,455,1695,1152,1340,660,554,2154,4649,1058,4650,4307,830,1065,3383,4063,4651,1924,5342,1703,1919,5343,932,2273,122,5344,4652,947,677,5345,3870,2637,297,1906,1925,2274,4653,2322,3316,5346,5347,4308,5348,4309,84,4310,112,989,5349,547,1059,4064,701,3613,1019,5350,4311,5351,3497,942,639,457,2306,2456,993,2966,407,851,494,4654,3384,927,5352,1237,5353,2426,3385,573,4312,680,921,2925,1279,1875,285,790,1448,1984,719,2168,5354,5355,4655,4065,4066,1649,5356,1541,563,5357,1077,5358,3386,3061,3498,511,3015,4067,4068,3733,4069,1268,2572,3387,3238,4656,4657,5359,535,1048,1276,1189,2926,2029,3167,1438,1373,2847,2967,1134,2013,5360,4313,1238,2586,3109,1259,5361,700,5362,2968,3168,3734,4314,5363,4315,1146,1876,1907,4658,2611,4070,781,2427,132,1589,203,147,273,2802,2407,898,1787,2155,4071,4072,5364,3871,2803,5365,5366,4659,4660,5367,3239,5368,1635,3872,965,5369,1805,2699,1516,3614,1121,1082,1329,3317,4073,1449,3873,65,1128,2848,2927,2769,1590,3874,5370,5371,12,2668,45,976,2587,3169,4661,517,2535,1013,1037,3240,5372,3875,2849,5373,3876,5374,3499,5375,2612,614,1999,2323,3877,3110,2733,2638,5376,2588,4316,599,1269,5377,1811,3735,5378,2700,3111,759,1060,489,1806,3388,3318,1358,5379,5380,2391,1387,1215,2639,2256,490,5381,5382,4317,1759,2392,2348,5383,4662,3878,1908,4074,2640,1807,3241,4663,3500,3319,2770,2349,874,5384,5385,3501,3736,1859,91,2928,3737,3062,3879,4664,5386,3170,4075,2669,5387,3502,1202,1403,3880,2969,2536,1517,2510,4665,3503,2511,5388,4666,5389,2701,1886,1495,1731,4076,2370,4667,5390,2030,5391,5392,4077,2702,1216,237,2589,4318,2324,4078,3881,4668,4669,2703,3615,3504,445,4670,5393,5394,5395,5396,2771,61,4079,3738,1823,4080,5397,687,2046,935,925,405,2670,703,1096,1860,2734,4671,4081,1877,1367,2704,3389,918,2106,1782,2483,334,3320,1611,1093,4672,564,3171,3505,3739,3390,945,2641,2058,4673,5398,1926,872,4319,5399,3506,2705,3112,349,4320,3740,4082,4674,3882,4321,3741,2156,4083,4675,4676,4322,4677,2408,2047,782,4084,400,251,4323,1624,5400,5401,277,3742,299,1265,476,1191,3883,2122,4324,4325,1109,205,5402,2590,1e3,2157,3616,1861,5403,5404,5405,4678,5406,4679,2573,107,2484,2158,4085,3507,3172,5407,1533,541,1301,158,753,4326,2886,3617,5408,1696,370,1088,4327,4680,3618,579,327,440,162,2244,269,1938,1374,3508,968,3063,56,1396,3113,2107,3321,3391,5409,1927,2159,4681,3016,5410,3619,5411,5412,3743,4682,2485,5413,2804,5414,1650,4683,5415,2613,5416,5417,4086,2671,3392,1149,3393,4087,3884,4088,5418,1076,49,5419,951,3242,3322,3323,450,2850,920,5420,1812,2805,2371,4328,1909,1138,2372,3885,3509,5421,3243,4684,1910,1147,1518,2428,4685,3886,5422,4686,2393,2614,260,1796,3244,5423,5424,3887,3324,708,5425,3620,1704,5426,3621,1351,1618,3394,3017,1887,944,4329,3395,4330,3064,3396,4331,5427,3744,422,413,1714,3325,500,2059,2350,4332,2486,5428,1344,1911,954,5429,1668,5430,5431,4089,2409,4333,3622,3888,4334,5432,2307,1318,2512,3114,133,3115,2887,4687,629,31,2851,2706,3889,4688,850,949,4689,4090,2970,1732,2089,4335,1496,1853,5433,4091,620,3245,981,1242,3745,3397,1619,3746,1643,3326,2140,2457,1971,1719,3510,2169,5434,3246,5435,5436,3398,1829,5437,1277,4690,1565,2048,5438,1636,3623,3116,5439,869,2852,655,3890,3891,3117,4092,3018,3892,1310,3624,4691,5440,5441,5442,1733,558,4692,3747,335,1549,3065,1756,4336,3748,1946,3511,1830,1291,1192,470,2735,2108,2806,913,1054,4093,5443,1027,5444,3066,4094,4693,982,2672,3399,3173,3512,3247,3248,1947,2807,5445,571,4694,5446,1831,5447,3625,2591,1523,2429,5448,2090,984,4695,3749,1960,5449,3750,852,923,2808,3513,3751,969,1519,999,2049,2325,1705,5450,3118,615,1662,151,597,4095,2410,2326,1049,275,4696,3752,4337,568,3753,3626,2487,4338,3754,5451,2430,2275,409,3249,5452,1566,2888,3514,1002,769,2853,194,2091,3174,3755,2226,3327,4339,628,1505,5453,5454,1763,2180,3019,4096,521,1161,2592,1788,2206,2411,4697,4097,1625,4340,4341,412,42,3119,464,5455,2642,4698,3400,1760,1571,2889,3515,2537,1219,2207,3893,2643,2141,2373,4699,4700,3328,1651,3401,3627,5456,5457,3628,2488,3516,5458,3756,5459,5460,2276,2092,460,5461,4701,5462,3020,962,588,3629,289,3250,2644,1116,52,5463,3067,1797,5464,5465,5466,1467,5467,1598,1143,3757,4342,1985,1734,1067,4702,1280,3402,465,4703,1572,510,5468,1928,2245,1813,1644,3630,5469,4704,3758,5470,5471,2673,1573,1534,5472,5473,536,1808,1761,3517,3894,3175,2645,5474,5475,5476,4705,3518,2929,1912,2809,5477,3329,1122,377,3251,5478,360,5479,5480,4343,1529,551,5481,2060,3759,1769,2431,5482,2930,4344,3330,3120,2327,2109,2031,4706,1404,136,1468,1479,672,1171,3252,2308,271,3176,5483,2772,5484,2050,678,2736,865,1948,4707,5485,2014,4098,2971,5486,2737,2227,1397,3068,3760,4708,4709,1735,2931,3403,3631,5487,3895,509,2854,2458,2890,3896,5488,5489,3177,3178,4710,4345,2538,4711,2309,1166,1010,552,681,1888,5490,5491,2972,2973,4099,1287,1596,1862,3179,358,453,736,175,478,1117,905,1167,1097,5492,1854,1530,5493,1706,5494,2181,3519,2292,3761,3520,3632,4346,2093,4347,5495,3404,1193,2489,4348,1458,2193,2208,1863,1889,1421,3331,2932,3069,2182,3521,595,2123,5496,4100,5497,5498,4349,1707,2646,223,3762,1359,751,3121,183,3522,5499,2810,3021,419,2374,633,704,3897,2394,241,5500,5501,5502,838,3022,3763,2277,2773,2459,3898,1939,2051,4101,1309,3122,2246,1181,5503,1136,2209,3899,2375,1446,4350,2310,4712,5504,5505,4351,1055,2615,484,3764,5506,4102,625,4352,2278,3405,1499,4353,4103,5507,4104,4354,3253,2279,2280,3523,5508,5509,2774,808,2616,3765,3406,4105,4355,3123,2539,526,3407,3900,4356,955,5510,1620,4357,2647,2432,5511,1429,3766,1669,1832,994,928,5512,3633,1260,5513,5514,5515,1949,2293,741,2933,1626,4358,2738,2460,867,1184,362,3408,1392,5516,5517,4106,4359,1770,1736,3254,2934,4713,4714,1929,2707,1459,1158,5518,3070,3409,2891,1292,1930,2513,2855,3767,1986,1187,2072,2015,2617,4360,5519,2574,2514,2170,3768,2490,3332,5520,3769,4715,5521,5522,666,1003,3023,1022,3634,4361,5523,4716,1814,2257,574,3901,1603,295,1535,705,3902,4362,283,858,417,5524,5525,3255,4717,4718,3071,1220,1890,1046,2281,2461,4107,1393,1599,689,2575,388,4363,5526,2491,802,5527,2811,3903,2061,1405,2258,5528,4719,3904,2110,1052,1345,3256,1585,5529,809,5530,5531,5532,575,2739,3524,956,1552,1469,1144,2328,5533,2329,1560,2462,3635,3257,4108,616,2210,4364,3180,2183,2294,5534,1833,5535,3525,4720,5536,1319,3770,3771,1211,3636,1023,3258,1293,2812,5537,5538,5539,3905,607,2311,3906,762,2892,1439,4365,1360,4721,1485,3072,5540,4722,1038,4366,1450,2062,2648,4367,1379,4723,2593,5541,5542,4368,1352,1414,2330,2935,1172,5543,5544,3907,3908,4724,1798,1451,5545,5546,5547,5548,2936,4109,4110,2492,2351,411,4111,4112,3637,3333,3124,4725,1561,2674,1452,4113,1375,5549,5550,47,2974,316,5551,1406,1591,2937,3181,5552,1025,2142,3125,3182,354,2740,884,2228,4369,2412,508,3772,726,3638,996,2433,3639,729,5553,392,2194,1453,4114,4726,3773,5554,5555,2463,3640,2618,1675,2813,919,2352,2975,2353,1270,4727,4115,73,5556,5557,647,5558,3259,2856,2259,1550,1346,3024,5559,1332,883,3526,5560,5561,5562,5563,3334,2775,5564,1212,831,1347,4370,4728,2331,3909,1864,3073,720,3910,4729,4730,3911,5565,4371,5566,5567,4731,5568,5569,1799,4732,3774,2619,4733,3641,1645,2376,4734,5570,2938,669,2211,2675,2434,5571,2893,5572,5573,1028,3260,5574,4372,2413,5575,2260,1353,5576,5577,4735,3183,518,5578,4116,5579,4373,1961,5580,2143,4374,5581,5582,3025,2354,2355,3912,516,1834,1454,4117,2708,4375,4736,2229,2620,1972,1129,3642,5583,2776,5584,2976,1422,577,1470,3026,1524,3410,5585,5586,432,4376,3074,3527,5587,2594,1455,2515,2230,1973,1175,5588,1020,2741,4118,3528,4737,5589,2742,5590,1743,1361,3075,3529,2649,4119,4377,4738,2295,895,924,4378,2171,331,2247,3076,166,1627,3077,1098,5591,1232,2894,2231,3411,4739,657,403,1196,2377,542,3775,3412,1600,4379,3530,5592,4740,2777,3261,576,530,1362,4741,4742,2540,2676,3776,4120,5593,842,3913,5594,2814,2032,1014,4121,213,2709,3413,665,621,4380,5595,3777,2939,2435,5596,2436,3335,3643,3414,4743,4381,2541,4382,4744,3644,1682,4383,3531,1380,5597,724,2282,600,1670,5598,1337,1233,4745,3126,2248,5599,1621,4746,5600,651,4384,5601,1612,4385,2621,5602,2857,5603,2743,2312,3078,5604,716,2464,3079,174,1255,2710,4122,3645,548,1320,1398,728,4123,1574,5605,1891,1197,3080,4124,5606,3081,3082,3778,3646,3779,747,5607,635,4386,4747,5608,5609,5610,4387,5611,5612,4748,5613,3415,4749,2437,451,5614,3780,2542,2073,4388,2744,4389,4125,5615,1764,4750,5616,4390,350,4751,2283,2395,2493,5617,4391,4126,2249,1434,4127,488,4752,458,4392,4128,3781,771,1330,2396,3914,2576,3184,2160,2414,1553,2677,3185,4393,5618,2494,2895,2622,1720,2711,4394,3416,4753,5619,2543,4395,5620,3262,4396,2778,5621,2016,2745,5622,1155,1017,3782,3915,5623,3336,2313,201,1865,4397,1430,5624,4129,5625,5626,5627,5628,5629,4398,1604,5630,414,1866,371,2595,4754,4755,3532,2017,3127,4756,1708,960,4399,887,389,2172,1536,1663,1721,5631,2232,4130,2356,2940,1580,5632,5633,1744,4757,2544,4758,4759,5634,4760,5635,2074,5636,4761,3647,3417,2896,4400,5637,4401,2650,3418,2815,673,2712,2465,709,3533,4131,3648,4402,5638,1148,502,634,5639,5640,1204,4762,3649,1575,4763,2623,3783,5641,3784,3128,948,3263,121,1745,3916,1110,5642,4403,3083,2516,3027,4132,3785,1151,1771,3917,1488,4133,1987,5643,2438,3534,5644,5645,2094,5646,4404,3918,1213,1407,2816,531,2746,2545,3264,1011,1537,4764,2779,4405,3129,1061,5647,3786,3787,1867,2897,5648,2018,120,4406,4407,2063,3650,3265,2314,3919,2678,3419,1955,4765,4134,5649,3535,1047,2713,1266,5650,1368,4766,2858,649,3420,3920,2546,2747,1102,2859,2679,5651,5652,2e3,5653,1111,3651,2977,5654,2495,3921,3652,2817,1855,3421,3788,5655,5656,3422,2415,2898,3337,3266,3653,5657,2577,5658,3654,2818,4135,1460,856,5659,3655,5660,2899,2978,5661,2900,3922,5662,4408,632,2517,875,3923,1697,3924,2296,5663,5664,4767,3028,1239,580,4768,4409,5665,914,936,2075,1190,4136,1039,2124,5666,5667,5668,5669,3423,1473,5670,1354,4410,3925,4769,2173,3084,4137,915,3338,4411,4412,3339,1605,1835,5671,2748,398,3656,4413,3926,4138,328,1913,2860,4139,3927,1331,4414,3029,937,4415,5672,3657,4140,4141,3424,2161,4770,3425,524,742,538,3085,1012,5673,5674,3928,2466,5675,658,1103,225,3929,5676,5677,4771,5678,4772,5679,3267,1243,5680,4142,963,2250,4773,5681,2714,3658,3186,5682,5683,2596,2332,5684,4774,5685,5686,5687,3536,957,3426,2547,2033,1931,2941,2467,870,2019,3659,1746,2780,2781,2439,2468,5688,3930,5689,3789,3130,3790,3537,3427,3791,5690,1179,3086,5691,3187,2378,4416,3792,2548,3188,3131,2749,4143,5692,3428,1556,2549,2297,977,2901,2034,4144,1205,3429,5693,1765,3430,3189,2125,1271,714,1689,4775,3538,5694,2333,3931,533,4417,3660,2184,617,5695,2469,3340,3539,2315,5696,5697,3190,5698,5699,3932,1988,618,427,2651,3540,3431,5700,5701,1244,1690,5702,2819,4418,4776,5703,3541,4777,5704,2284,1576,473,3661,4419,3432,972,5705,3662,5706,3087,5707,5708,4778,4779,5709,3793,4145,4146,5710,153,4780,356,5711,1892,2902,4420,2144,408,803,2357,5712,3933,5713,4421,1646,2578,2518,4781,4782,3934,5714,3935,4422,5715,2416,3433,752,5716,5717,1962,3341,2979,5718,746,3030,2470,4783,4423,3794,698,4784,1893,4424,3663,2550,4785,3664,3936,5719,3191,3434,5720,1824,1302,4147,2715,3937,1974,4425,5721,4426,3192,823,1303,1288,1236,2861,3542,4148,3435,774,3938,5722,1581,4786,1304,2862,3939,4787,5723,2440,2162,1083,3268,4427,4149,4428,344,1173,288,2316,454,1683,5724,5725,1461,4788,4150,2597,5726,5727,4789,985,894,5728,3436,3193,5729,1914,2942,3795,1989,5730,2111,1975,5731,4151,5732,2579,1194,425,5733,4790,3194,1245,3796,4429,5734,5735,2863,5736,636,4791,1856,3940,760,1800,5737,4430,2212,1508,4792,4152,1894,1684,2298,5738,5739,4793,4431,4432,2213,479,5740,5741,832,5742,4153,2496,5743,2980,2497,3797,990,3132,627,1815,2652,4433,1582,4434,2126,2112,3543,4794,5744,799,4435,3195,5745,4795,2113,1737,3031,1018,543,754,4436,3342,1676,4796,4797,4154,4798,1489,5746,3544,5747,2624,2903,4155,5748,5749,2981,5750,5751,5752,5753,3196,4799,4800,2185,1722,5754,3269,3270,1843,3665,1715,481,365,1976,1857,5755,5756,1963,2498,4801,5757,2127,3666,3271,433,1895,2064,2076,5758,602,2750,5759,5760,5761,5762,5763,3032,1628,3437,5764,3197,4802,4156,2904,4803,2519,5765,2551,2782,5766,5767,5768,3343,4804,2905,5769,4805,5770,2864,4806,4807,1221,2982,4157,2520,5771,5772,5773,1868,1990,5774,5775,5776,1896,5777,5778,4808,1897,4158,318,5779,2095,4159,4437,5780,5781,485,5782,938,3941,553,2680,116,5783,3942,3667,5784,3545,2681,2783,3438,3344,2820,5785,3668,2943,4160,1747,2944,2983,5786,5787,207,5788,4809,5789,4810,2521,5790,3033,890,3669,3943,5791,1878,3798,3439,5792,2186,2358,3440,1652,5793,5794,5795,941,2299,208,3546,4161,2020,330,4438,3944,2906,2499,3799,4439,4811,5796,5797,5798,2522,1613,4812,5799,3345,3945,2523,5800,4162,5801,1637,4163,2471,4813,3946,5802,2500,3034,3800,5803,5804,2195,4814,5805,2163,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956,5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6eeeee4,10001,10002,10003,10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,4922,10022,4923,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,4924,10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064,10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080,10081,10082,10083,10084,10085,10086,10087,4475,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,4476,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,2174,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,3807,4186,4925,10141,10142,10143,10144,10145,10146,10147,4477,4187,10148,10149,10150,10151,10152,10153,4188,10154,10155,10156,10157,10158,10159,10160,10161,4926,10162,10163,10164,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182,10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,3203,10193,10194,10195,10196,10197,10198,10199,10200,4478,10201,10202,10203,10204,4479,10205,10206,10207,10208,10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,4927,10235,10236,10237,10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,4480,4928,4929,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287,10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319,10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,4930,10335,10336,10337,10338,10339,10340,10341,10342,4931,10343,10344,10345,10346,10347,10348,10349,10350,10351,10352,10353,10354,10355,3088,10356,2786,10357,10358,10359,10360,4189,10361,10362,10363,10364,10365,10366,10367,10368,10369,10370,10371,10372,10373,10374,10375,4932,10376,10377,10378,10379,10380,10381,10382,10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,4933,10393,10394,10395,4934,10396,10397,10398,10399,10400,10401,10402,10403,10404,10405,10406,10407,10408,10409,10410,10411,10412,3446,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422,10423,4935,10424,10425,10426,10427,10428,10429,10430,4936,10431,10432,10433,10434,10435,10436,10437,10438,10439,10440,10441,10442,10443,4937,10444,10445,10446,10447,4481,10448,10449,10450,10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466,10467,10468,10469,10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482,10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493,10494,10495,10496,10497,10498,10499,10500,10501,10502,10503,10504,10505,4938,10506,10507,10508,10509,10510,2552,10511,10512,10513,10514,10515,10516,3447,10517,10518,10519,10520,10521,10522,10523,10524,10525,10526,10527,10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543,4482,10544,4939,10545,10546,10547,10548,10549,10550,10551,10552,10553,10554,10555,10556,10557,10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,3676,4483,10568,10569,10570,10571,10572,3448,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583,10584,10585,10586,10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602,10603,10604,10605,10606,10607,10608,10609,10610,10611,10612,10613,10614,10615,10616,10617,10618,10619,10620,10621,10622,10623,10624,10625,10626,10627,4484,10628,10629,10630,10631,10632,4940,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10649,10650,10651,10652,10653,10654,10655,10656,4941,10657,10658,10659,2599,10660,10661,10662,10663,10664,10665,10666,3089,10667,10668,10669,10670,10671,10672,10673,10674,10675,10676,10677,10678,10679,10680,4942,10681,10682,10683,10684,10685,10686,10687,10688,10689,10690,10691,10692,10693,10694,10695,10696,10697,4485,10698,10699,10700,10701,10702,10703,10704,4943,10705,3677,10706,10707,10708,10709,10710,10711,10712,4944,10713,10714,10715,10716,10717,10718,10719,10720,10721,10722,10723,10724,10725,10726,10727,10728,4945,10729,10730,10731,10732,10733,10734,10735,10736,10737,10738,10739,10740,10741,10742,10743,10744,10745,10746,10747,10748,10749,10750,10751,10752,10753,10754,10755,10756,10757,10758,10759,10760,10761,4946,10762,10763,10764,10765,10766,10767,4947,4948,10768,10769,10770,10771,10772,10773,10774,10775,10776,10777,10778,10779,10780,10781,10782,10783,10784,10785,10786,10787,10788,10789,10790,10791,10792,10793,10794,10795,10796,10797,10798,10799,10800,10801,10802,10803,10804,10805,10806,10807,10808,10809,10810,10811,10812,10813,10814,10815,10816,10817,10818,10819,10820,10821,10822,10823,10824,10825,10826,10827,10828,10829,10830,10831,10832,10833,10834,10835,10836,10837,10838,10839,10840,10841,10842,10843,10844,10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10856,10857,10858,10859,10860,10861,10862,10863,10864,10865,10866,10867,10868,10869,10870,10871,10872,10873,10874,10875,10876,10877,10878,4486,10879,10880,10881,10882,10883,10884,10885,4949,10886,10887,10888,10889,10890,10891,10892,10893,10894,10895,10896,10897,10898,10899,10900,10901,10902,10903,10904,10905,10906,10907,10908,10909,10910,10911,10912,10913,10914,10915,10916,10917,10918,10919,4487,10920,10921,10922,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,4950,10933,10934,10935,10936,10937,10938,10939,10940,10941,10942,10943,10944,10945,10946,10947,10948,10949,4488,10950,10951,10952,10953,10954,10955,10956,10957,10958,10959,4190,10960,10961,10962,10963,10964,10965,10966,10967,10968,10969,10970,10971,10972,10973,10974,10975,10976,10977,10978,10979,10980,10981,10982,10983,10984,10985,10986,10987,10988,10989,10990,10991,10992,10993,10994,10995,10996,10997,10998,10999,11e3,11001,11002,11003,11004,11005,11006,3960,11007,11008,11009,11010,11011,11012,11013,11014,11015,11016,11017,11018,11019,11020,11021,11022,11023,11024,11025,11026,11027,11028,11029,11030,11031,11032,4951,11033,11034,11035,11036,11037,11038,11039,11040,11041,11042,11043,11044,11045,11046,11047,4489,11048,11049,11050,11051,4952,11052,11053,11054,11055,11056,11057,11058,4953,11059,11060,11061,11062,11063,11064,11065,11066,11067,11068,11069,11070,11071,4954,11072,11073,11074,11075,11076,11077,11078,11079,11080,11081,11082,11083,11084,11085,11086,11087,11088,11089,11090,11091,11092,11093,11094,11095,11096,11097,11098,11099,11100,11101,11102,11103,11104,11105,11106,11107,11108,11109,11110,11111,11112,11113,11114,11115,3808,11116,11117,11118,11119,11120,11121,11122,11123,11124,11125,11126,11127,11128,11129,11130,11131,11132,11133,11134,4955,11135,11136,11137,11138,11139,11140,11141,11142,11143,11144,11145,11146,11147,11148,11149,11150,11151,11152,11153,11154,11155,11156,11157,11158,11159,11160,11161,4956,11162,11163,11164,11165,11166,11167,11168,11169,11170,11171,11172,11173,11174,11175,11176,11177,11178,11179,11180,4957,11181,11182,11183,11184,11185,11186,4958,11187,11188,11189,11190,11191,11192,11193,11194,11195,11196,11197,11198,11199,11200,3678,11201,11202,11203,11204,11205,11206,4191,11207,11208,11209,11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225,11226,11227,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11240,11241,11242,11243,11244,11245,11246,11247,11248,11249,11250,11251,4959,11252,11253,11254,11255,11256,11257,11258,11259,11260,11261,11262,11263,11264,11265,11266,11267,11268,11269,11270,11271,11272,11273,11274,11275,11276,11277,11278,11279,11280,11281,11282,11283,11284,11285,11286,11287,11288,11289,11290,11291,11292,11293,11294,11295,11296,11297,11298,11299,11300,11301,11302,11303,11304,11305,11306,11307,11308,11309,11310,11311,11312,11313,11314,3679,11315,11316,11317,11318,4490,11319,11320,11321,11322,11323,11324,11325,11326,11327,11328,11329,11330,11331,11332,11333,11334,11335,11336,11337,11338,11339,11340,11341,11342,11343,11344,11345,11346,11347,4960,11348,11349,11350,11351,11352,11353,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,3961,4961,11378,11379,11380,11381,11382,11383,11384,11385,11386,11387,11388,11389,11390,11391,11392,11393,11394,11395,11396,11397,4192,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,4962,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,4963,11470,11471,4491,11472,11473,11474,11475,4964,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,4965,11493,11494,11495,11496,11497,11498,11499,11500,11501,11502,11503,11504,11505,11506,11507,11508,11509,11510,11511,11512,11513,11514,11515,11516,11517,11518,11519,11520,11521,11522,11523,11524,11525,11526,11527,11528,11529,3962,11530,11531,11532,11533,11534,11535,11536,11537,11538,11539,11540,11541,11542,11543,11544,11545,11546,11547,11548,11549,11550,11551,11552,11553,11554,11555,11556,11557,11558,11559,11560,11561,11562,11563,11564,4193,4194,11565,11566,11567,11568,11569,11570,11571,11572,11573,11574,11575,11576,11577,11578,11579,11580,11581,11582,11583,11584,11585,11586,11587,11588,11589,11590,11591,4966,4195,11592,11593,11594,11595,11596,11597,11598,11599,11600,11601,11602,11603,11604,3090,11605,11606,11607,11608,11609,11610,4967,11611,11612,11613,11614,11615,11616,11617,11618,11619,11620,11621,11622,11623,11624,11625,11626,11627,11628,11629,11630,11631,11632,11633,11634,11635,11636,11637,11638,11639,11640,11641,11642,11643,11644,11645,11646,11647,11648,11649,11650,11651,11652,11653,11654,11655,11656,11657,11658,11659,11660,11661,11662,11663,11664,11665,11666,11667,11668,11669,11670,11671,11672,11673,11674,4968,11675,11676,11677,11678,11679,11680,11681,11682,11683,11684,11685,11686,11687,11688,11689,11690,11691,11692,11693,3809,11694,11695,11696,11697,11698,11699,11700,11701,11702,11703,11704,11705,11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716,11717,11718,3553,11719,11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,4969,11731,11732,11733,11734,11735,11736,11737,11738,11739,11740,4492,11741,11742,11743,11744,11745,11746,11747,11748,11749,11750,11751,11752,4970,11753,11754,11755,11756,11757,11758,11759,11760,11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776,11777,11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790,4971,11791,11792,11793,11794,11795,11796,11797,4972,11798,11799,11800,11801,11802,11803,11804,11805,11806,11807,11808,11809,11810,4973,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821,11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,11834,3680,3810,11835,11836,4974,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848,11849,11850,11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862,11863,11864,11865,11866,11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877,11878,11879,11880,11881,11882,11883,11884,4493,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897,11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,11913,11914,11915,4975,11916,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928,11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,11941,11942,11943,11944,11945,11946,11947,11948,11949,4976,11950,11951,11952,11953,11954,11955,11956,11957,11958,11959,11960,11961,11962,11963,11964,11965,11966,11967,11968,11969,11970,11971,11972,11973,11974,11975,11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,11987,4196,11988,11989,11990,11991,11992,4977,11993,11994,11995,11996,11997,11998,11999,12e3,12001,12002,12003,12004,12005,12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,12020,12021,12022,12023,12024,12025,12026,12027,12028,12029,12030,12031,12032,12033,12034,12035,12036,12037,12038,12039,12040,12041,12042,12043,12044,12045,12046,12047,12048,12049,12050,12051,12052,12053,12054,12055,12056,12057,12058,12059,12060,12061,4978,12062,12063,12064,12065,12066,12067,12068,12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080,12081,12082,12083,12084,12085,12086,12087,12088,12089,12090,12091,12092,12093,12094,12095,12096,12097,12098,12099,12100,12101,12102,12103,12104,12105,12106,12107,12108,12109,12110,12111,12112,12113,12114,12115,12116,12117,12118,12119,12120,12121,12122,12123,4979,12124,12125,12126,12127,12128,4197,12129,12130,12131,12132,12133,12134,12135,12136,12137,12138,12139,12140,12141,12142,12143,12144,12145,12146,12147,12148,12149,12150,12151,12152,12153,12154,4980,12155,12156,12157,12158,12159,12160,4494,12161,12162,12163,12164,3811,12165,12166,12167,12168,12169,4495,12170,12171,4496,12172,12173,12174,12175,12176,3812,12177,12178,12179,12180,12181,12182,12183,12184,12185,12186,12187,12188,12189,12190,12191,12192,12193,12194,12195,12196,12197,12198,12199,12200,12201,12202,12203,12204,12205,12206,12207,12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220,12221,4981,12222,12223,12224,12225,12226,12227,12228,12229,12230,12231,12232,12233,12234,12235,4982,12236,12237,12238,12239,12240,12241,12242,12243,12244,12245,4983,12246,12247,12248,12249,4984,12250,12251,12252,12253,12254,12255,12256,12257,12258,12259,12260,12261,12262,12263,12264,4985,12265,4497,12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12284,12285,12286,12287,4986,12288,12289,12290,12291,12292,12293,12294,12295,12296,2473,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12319,3963,12320,12321,12322,12323,12324,12325,12326,12327,12328,12329,12330,12331,12332,4987,12333,12334,12335,12336,12337,12338,12339,12340,12341,12342,12343,12344,12345,12346,12347,12348,12349,12350,12351,12352,12353,12354,12355,12356,12357,12358,12359,3964,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,3965,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,4988,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12436,12437,12438,3554,12439,12440,12441,12442,12443,12444,12445,12446,12447,12448,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,4989,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,4990,12481,12482,12483,12484,12485,12486,12487,12488,12489,4498,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,12535,12536,12537,12538,12539,12540,12541,12542,12543,12544,12545,12546,12547,12548,12549,12550,12551,4991,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,3036,12579,12580,12581,12582,12583,3966,12584,12585,12586,12587,12588,12589,12590,12591,12592,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,4499,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,12687,12688,12689,12690,12691,12692,12693,12694,12695,12696,12697,12698,4992,12699,12700,12701,12702,12703,12704,12705,12706,12707,12708,12709,12710,12711,12712,12713,12714,12715,12716,12717,12718,12719,12720,12721,12722,12723,12724,12725,12726,12727,12728,12729,12730,12731,12732,12733,12734,12735,12736,12737,12738,12739,12740,12741,12742,12743,12744,12745,12746,12747,12748,12749,12750,12751,12752,12753,12754,12755,12756,12757,12758,12759,12760,12761,12762,12763,12764,12765,12766,12767,12768,12769,12770,12771,12772,12773,12774,12775,12776,12777,12778,4993,2175,12779,12780,12781,12782,12783,12784,12785,12786,4500,12787,12788,12789,12790,12791,12792,12793,12794,12795,12796,12797,12798,12799,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,4198,3967,12827,12828,12829,12830,12831,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12847,12848,12849,12850,12851,12852,12853,12854,12855,12856,12857,12858,12859,12860,12861,4199,12862,12863,12864,12865,12866,12867,12868,12869,12870,12871,12872,12873,12874,12875,12876,12877,12878,12879,12880,12881,12882,12883,12884,12885,12886,12887,4501,12888,12889,12890,12891,12892,12893,12894,12895,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,4994,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,12924,12925,12926,12927,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942,12943,12944,12945,12946,12947,12948,12949,12950,12951,12952,12953,12954,12955,12956,1772,12957,12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973,12974,12975,12976,12977,12978,12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989,12990,12991,12992,12993,12994,12995,12996,12997,4502,12998,4503,12999,13e3,13001,13002,13003,4504,13004,13005,13006,13007,13008,13009,13010,13011,13012,13013,13014,13015,13016,13017,13018,13019,13020,13021,13022,13023,13024,13025,13026,13027,13028,13029,3449,13030,13031,13032,13033,13034,13035,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,13047,13048,13049,13050,13051,13052,13053,13054,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065,13066,13067,13068,13069,13070,13071,13072,13073,13074,13075,13076,13077,13078,13079,13080,13081,13082,13083,13084,13085,13086,13087,13088,13089,13090,13091,13092,13093,13094,13095,13096,13097,13098,13099,13100,13101,13102,13103,13104,13105,13106,13107,13108,13109,13110,13111,13112,13113,13114,13115,13116,13117,13118,3968,13119,4995,13120,13121,13122,13123,13124,13125,13126,13127,4505,13128,13129,13130,13131,13132,13133,13134,4996,4506,13135,13136,13137,13138,13139,4997,13140,13141,13142,13143,13144,13145,13146,13147,13148,13149,13150,13151,13152,13153,13154,13155,13156,13157,13158,13159,4998,13160,13161,13162,13163,13164,13165,13166,13167,13168,13169,13170,13171,13172,13173,13174,13175,13176,4999,13177,13178,13179,13180,13181,13182,13183,13184,13185,13186,13187,13188,13189,13190,13191,13192,13193,13194,13195,13196,13197,13198,13199,13200,13201,13202,13203,13204,13205,13206,5e3,13207,13208,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13219,13220,13221,13222,13223,13224,13225,13226,13227,4200,5001,13228,13229,13230,13231,13232,13233,13234,13235,13236,13237,13238,13239,13240,3969,13241,13242,13243,13244,3970,13245,13246,13247,13248,13249,13250,13251,13252,13253,13254,13255,13256,13257,13258,13259,13260,13261,13262,13263,13264,13265,13266,13267,13268,3450,13269,13270,13271,13272,13273,13274,13275,13276,5002,13277,13278,13279,13280,13281,13282,13283,13284,13285,13286,13287,13288,13289,13290,13291,13292,13293,13294,13295,13296,13297,13298,13299,13300,13301,13302,3813,13303,13304,13305,13306,13307,13308,13309,13310,13311,13312,13313,13314,13315,13316,13317,13318,13319,13320,13321,13322,13323,13324,13325,13326,13327,13328,4507,13329,13330,13331,13332,13333,13334,13335,13336,13337,13338,13339,13340,13341,5003,13342,13343,13344,13345,13346,13347,13348,13349,13350,13351,13352,13353,13354,13355,13356,13357,13358,13359,13360,13361,13362,13363,13364,13365,13366,13367,5004,13368,13369,13370,13371,13372,13373,13374,13375,13376,13377,13378,13379,13380,13381,13382,13383,13384,13385,13386,13387,13388,13389,13390,13391,13392,13393,13394,13395,13396,13397,13398,13399,13400,13401,13402,13403,13404,13405,13406,13407,13408,13409,13410,13411,13412,13413,13414,13415,13416,13417,13418,13419,13420,13421,13422,13423,13424,13425,13426,13427,13428,13429,13430,13431,13432,4508,13433,13434,13435,4201,13436,13437,13438,13439,13440,13441,13442,13443,13444,13445,13446,13447,13448,13449,13450,13451,13452,13453,13454,13455,13456,13457,5005,13458,13459,13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,13470,4509,13471,13472,13473,13474,13475,13476,13477,13478,13479,13480,13481,13482,13483,13484,13485,13486,13487,13488,13489,13490,13491,13492,13493,13494,13495,13496,13497,13498,13499,13500,13501,13502,13503,13504,13505,13506,13507,13508,13509,13510,13511,13512,13513,13514,13515,13516,13517,13518,13519,13520,13521,13522,13523,13524,13525,13526,13527,13528,13529,13530,13531,13532,13533,13534,13535,13536,13537,13538,13539,13540,13541,13542,13543,13544,13545,13546,13547,13548,13549,13550,13551,13552,13553,13554,13555,13556,13557,13558,13559,13560,13561,13562,13563,13564,13565,13566,13567,13568,13569,13570,13571,13572,13573,13574,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586,13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,13599,13600,13601,13602,13603,13604,13605,13606,13607,13608,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618,13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13629,13630,13631,13632,13633,13634,13635,13636,13637,13638,13639,13640,13641,13642,5006,13643,13644,13645,13646,13647,13648,13649,13650,13651,5007,13652,13653,13654,13655,13656,13657,13658,13659,13660,13661,13662,13663,13664,13665,13666,13667,13668,13669,13670,13671,13672,13673,13674,13675,13676,13677,13678,13679,13680,13681,13682,13683,13684,13685,13686,13687,13688,13689,13690,13691,13692,13693,13694,13695,13696,13697,13698,13699,13700,13701,13702,13703,13704,13705,13706,13707,13708,13709,13710,13711,13712,13713,13714,13715,13716,13717,13718,13719,13720,13721,13722,13723,13724,13725,13726,13727,13728,13729,13730,13731,13732,13733,13734,13735,13736,13737,13738,13739,13740,13741,13742,13743,13744,13745,13746,13747,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760,13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,3273,13775,13776,13777,13778,13779,13780,13781,13782,13783,13784,13785,13786,13787,13788,13789,13790,13791,13792,13793,13794,13795,13796,13797,13798,13799,13800,13801,13802,13803,13804,13805,13806,13807,13808,13809,13810,13811,13812,13813,13814,13815,13816,13817,13818,13819,13820,13821,13822,13823,13824,13825,13826,13827,13828,13829,13830,13831,13832,13833,13834,13835,13836,13837,13838,13839,13840,13841,13842,13843,13844,13845,13846,13847,13848,13849,13850,13851,13852,13853,13854,13855,13856,13857,13858,13859,13860,13861,13862,13863,13864,13865,13866,13867,13868,13869,13870,13871,13872,13873,13874,13875,13876,13877,13878,13879,13880,13881,13882,13883,13884,13885,13886,13887,13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13900,13901,13902,13903,13904,13905,13906,13907,13908,13909,13910,13911,13912,13913,13914,13915,13916,13917,13918,13919,13920,13921,13922,13923,13924,13925,13926,13927,13928,13929,13930,13931,13932,13933,13934,13935,13936,13937,13938,13939,13940,13941,13942,13943,13944,13945,13946,13947,13948,13949,13950,13951,13952,13953,13954,13955,13956,13957,13958,13959,13960,13961,13962,13963,13964,13965,13966,13967,13968,13969,13970,13971,13972]},function(e,t,r){var n=r(9),i=r(13),o=r(1),s=r(93);function a(){i.apply(this);var e=this;this.reset=function(){a.prototype.reset.apply(this),this._mCodingSM.reset(),this._mNumOfMBChar=0},this.getCharsetName=function(){return\"UTF-8\"},this.feed=function(e){for(var t,r=0;r<e.length;r++){t=e[r];var n=this._mCodingSM.nextState(t);if(n==o.error){this._mState=o.notMe;break}if(n==o.itsMe){this._mState=o.foundIt;break}n==o.start&&this._mCodingSM.getCurrentCharLen()>=2&&this._mNumOfMBChar++}return this.getState()==o.detecting&&this.getConfidence()>o.SHORTCUT_THRESHOLD&&(this._mState=o.foundIt),this.getState()},this.getConfidence=function(){var e=.99;if(this._mNumOfMBChar<6){for(var t=0;t<this._mNumOfMBChar;t++)e*=.5;return 1-e}return e},e._mCodingSM=new n(s),e.reset()}a.prototype=new i,e.exports=a},function(e,t,r){var n=r(1),i=[n.error,n.start,n.error,n.error,n.error,n.error,12,10,9,11,8,7,6,5,4,3,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,5,5,5,5,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,5,5,5,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,7,7,7,7,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,7,7,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,9,9,9,9,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,9,9,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,12,12,12,12,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,12,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,12,12,12,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.start,n.start,n.start,n.start,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error];e.exports={classTable:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,10,11,11,11,11,11,11,11,12,13,13,13,14,15,0,0],classFactor:16,stateTable:i,charLenTable:[0,1,0,0,0,0,2,3,3,3,4,4,5,5,6,6],name:\"UTF-8\"}},function(e,t,r){var n=r(9),i=r(16),o=r(95),s=r(17).SJISDistributionAnalysis,a=r(41).SJISContextAnalysis,c=r(1),u=r(14);function l(){i.apply(this);var e=this;this.reset=function(){l.prototype.reset.apply(this),this._mContextAnalyzer.reset()},this.getCharsetName=function(){return\"SHIFT_JIS\"},this.feed=function(e){for(var t=e.length,r=0;r<t;r++){var n=this._mCodingSM.nextState(e[r]);if(n==c.error){u.log(this.getCharsetName()+\" prober hit error at byte \"+r+\"\\n\"),this._mState=c.notMe;break}if(n==c.itsMe){this._mState=c.foundIt;break}if(n==c.start){var i=this._mCodingSM.getCurrentCharLen();0==r?(this._mLastChar[1]=e[0],this._mContextAnalyzer.feed(this._mLastChar.slice(2-i),i),this._mDistributionAnalyzer.feed(this._mLastChar,i)):(this._mContextAnalyzer.feed(e.slice(r+1-i,r+3-i),i),this._mDistributionAnalyzer.feed(e.slice(r-1,r+1),i))}}return this._mLastChar[0]=e[t-1],this.getState()==c.detecting&&this._mContextAnalyzer.gotEnoughData()&&this.getConfidence()>c.SHORTCUT_THRESHOLD&&(this._mState=c.foundIt),this.getState()},this.getConfidence=function(){var e=this._mContextAnalyzer.getConfidence(),t=this._mDistributionAnalyzer.getConfidence();return Math.max(e,t)},e._mCodingSM=new n(o),e._mDistributionAnalyzer=new s,e._mContextAnalyzer=new a,e.reset()}l.prototype=new i,e.exports=l},function(e,t,r){var n=r(1),i=[n.error,n.start,n.start,3,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.start,n.start,n.start,n.start];e.exports={classTable:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0],classFactor:6,stateTable:i,charLenTable:[0,1,1,2,0,0],name:\"Shift_JIS\"}},function(e,t,r){var n=r(9),i=r(16),o=r(17).EUCJPDistributionAnalysis,s=r(41).EUCJPContextAnalysis,a=r(97),c=r(1),u=r(14);function l(){i.apply(this);var e=this;this.reset=function(){l.prototype.reset.apply(this),this._mContextAnalyzer.reset()},this.getCharsetName=function(){return\"EUC-JP\"},this.feed=function(e){for(var t=e.length,r=0;r<t;r++){var n=this._mCodingSM.nextState(e[r]);if(n==c.error){u.log(this.getCharsetName()+\" prober hit error at byte \"+r+\"\\n\"),this._mState=c.notMe;break}if(n==c.itsMe){this._mState=c.foundIt;break}if(n==c.start){var i=this._mCodingSM.getCurrentCharLen();0==r?(this._mLastChar[1]=e[0],this._mContextAnalyzer.feed(this._mLastChar,i),this._mDistributionAnalyzer.feed(this._mLastChar,i)):(this._mContextAnalyzer.feed(e.slice(r-1,r+1),i),this._mDistributionAnalyzer.feed(e.slice(r-1,r+1),i))}}return this._mLastChar[0]=e[t-1],this.getState()==c.detecting&&this._mContextAnalyzer.gotEnoughData()&&this.getConfidence()>c.SHORTCUT_THRESHOLD&&(this._mState=c.foundIt),this.getState()},this.getConfidence=function(){var e=this._mContextAnalyzer.getConfidence(),t=this._mDistributionAnalyzer.getConfidence();return Math.max(e,t)},e._mCodingSM=new n(a),e._mDistributionAnalyzer=new o,e._mContextAnalyzer=new s,e.reset()}l.prototype=new i,e.exports=l},function(e,t,r){var n=r(1),i=[3,4,3,5,n.start,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.start,n.error,n.start,n.error,n.error,n.error,n.error,n.error,n.start,n.error,n.error,n.error,3,n.error,3,n.error,n.error,n.error,n.start,n.start,n.start,n.start];e.exports={classTable:[4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5],classFactor:6,stateTable:i,charLenTable:[2,2,2,3,1,0],name:\"EUC-JP\"}},function(e,t,r){var n=r(16),i=r(9),o=r(99),s=r(17).GB2312DistributionAnalysis;function a(){n.apply(this);var e=this;this.getCharsetName=function(){return\"GB2312\"},e._mCodingSM=new i(o),e._mDistributionAnalyzer=new s,e.reset()}a.prototype=new n,e.exports=a},function(e,t,r){var n=r(1),i=[n.error,n.start,n.start,n.start,n.start,n.start,3,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.start,4,n.error,n.start,n.start,n.error,n.error,n.error,n.error,n.error,n.error,5,n.error,n.error,n.error,n.itsMe,n.error,n.error,n.error,n.start,n.start,n.start,n.start,n.start,n.start];e.exports={classTable:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0],classFactor:7,stateTable:i,charLenTable:[0,1,1,1,1,1,2],name:\"GB2312\"}},function(e,t,r){var n=r(9),i=r(16),o=r(17).EUCKRDistributionAnalysis,s=r(101);function a(){i.apply(this);var e=this;this.getCharsetName=function(){return\"EUC-KR\"},e._mCodingSM=new n(s),e._mDistributionAnalyzer=new o,e.reset()}a.prototype=new i,e.exports=a},function(e,t,r){var n=r(1),i=[n.error,n.start,3,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.start,n.start];e.exports={classTable:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0],classFactor:4,stateTable:i,charLenTable:[0,1,2,0],name:\"EUC-KR\"}},function(e,t,r){var n=r(9),i=r(16),o=r(17).EUCTWDistributionAnalysis,s=r(103);function a(){i.apply(this);var e=this;this.getCharsetName=function(){return\"EUC-TW\"},e._mCodingSM=new n(s),e._mDistributionAnalyzer=new o,e.reset()}a.prototype=new i,e.exports=a},function(e,t,r){var n=r(1),i=[n.error,n.error,n.start,3,3,3,4,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.start,n.error,n.start,n.start,n.start,n.error,n.error,n.error,n.error,n.error,5,n.error,n.error,n.error,n.start,n.error,n.start,n.start,n.start,n.error,n.start,n.start,n.start,n.start,n.start,n.start];e.exports={classTable:[2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,4,4,4,4,4,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0],classFactor:7,stateTable:i,charLenTable:[0,0,1,2,2,2,3],name:\"x-euc-tw\"}},function(e,t,r){var n=r(105),i=r(40),o=r(106).Win1255HebrewModel,s=r(107),a=r(108),c=r(109),u=r(110).TIS620ThaiModel,l=r(111),h=r(112);function p(){i.apply(this);var e=this;!function(){e._mProbers=[new n(a.Win1251CyrillicModel),new n(a.Koi8rModel),new n(a.Latin5CyrillicModel),new n(a.MacCyrillicModel),new n(a.Ibm866Model),new n(a.Ibm855Model),new n(c.Latin7GreekModel),new n(c.Win1253GreekModel),new n(h.Latin5BulgarianModel),new n(h.Win1251BulgarianModel),new n(l.Latin2HungarianModel),new n(l.Win1250HungarianModel),new n(u)];var t=new s,r=new n(o,!1,t),i=new n(o,!0,t);t.setModelProbers(r,i),e._mProbers.push(t,r,i),e.reset()}()}p.prototype=new i,e.exports=p},function(e,t,r){var n=r(13),i=r(1),o=r(14);function s(e,t,r){n.apply(this);var a=this;this.reset=function(){s.prototype.reset.apply(this),this._mLastOrder=255,this._mSeqCounters=[];for(var e=0;e<4;this._mSeqCounters[e++]=0);this._mTotalSeqs=0,this._mTotalChar=0,this._mFreqChar=0},this.getCharsetName=function(){return this._mNameProber?this._mNameProber.getCharsetName():this._mModel.charsetName},this.feed=function(e){this._mModel.keepEnglishLetter||(e=this.filterWithoutEnglishLetters(e));var t=e.length;if(!t)return this.getState();for(var r,n=0;n<t;n++){r=e.charCodeAt(n);var s=this._mModel.charToOrderMap[r];s<250&&this._mTotalChar++,s<64&&(this._mFreqChar++,this._mLastOrder<64&&(this._mTotalSeqs++,this._mReversed?this._mSeqCounters[this._mModel.precedenceMatrix[64*s+this._mLastOrder]]++:this._mSeqCounters[this._mModel.precedenceMatrix[64*this._mLastOrder+s]]++)),this._mLastOrder=s}if(this.getState()==i.detecting&&a._mTotalSeqs>1024){var c=this.getConfidence();c>.95?o.log(this._mModel.charsetName+\" confidence = \"+c+\", we have a winner\\n\"):c<.05&&(o.log(this._mModel.charsetName+\" confidence = \"+c+\", below negative shortcut threshhold 0.05\\n\"),this._mState=i.notMe)}return this.getState()},this.getConfidence=function(){var e=.01;return this._mTotalSeqs>0&&(e=1*this._mSeqCounters[3]/this._mTotalSeqs/this._mModel.mTypicalPositiveRatio,(e*=this._mFreqChar/this._mTotalChar)>=1&&(e=.99)),e},function(e,t,r){a._mModel=e,a._mReversed=t,a._mNameProber=r,a.reset()}(e,t=void 0!==t&&t,r=void 0!==r?r:null)}s.prototype=new n,e.exports=s},function(e,t){t.win1255_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,69,91,79,80,92,89,97,90,68,111,112,82,73,95,85,78,121,86,71,67,102,107,84,114,103,115,253,253,253,253,253,253,50,74,60,61,42,76,70,64,53,105,93,56,65,54,49,66,110,51,43,44,63,81,77,98,75,108,253,253,253,253,253,124,202,203,204,205,40,58,206,207,208,209,210,211,212,213,214,215,83,52,47,46,72,32,94,216,113,217,109,218,219,220,221,34,116,222,118,100,223,224,117,119,104,125,225,226,87,99,227,106,122,123,228,55,229,230,101,231,232,120,233,48,39,57,234,30,59,41,88,33,37,36,31,29,35,235,62,28,236,126,237,238,38,45,239,240,241,242,243,127,244,245,246,247,248,249,250,9,8,20,16,3,2,24,14,22,1,25,15,4,11,6,23,12,19,13,26,18,27,21,17,7,10,5,251,252,128,96,253],t.HebrewLangModel=[0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,2,0,1,0,0,3,0,3,1,0,0,1,3,2,0,1,1,2,0,2,2,2,1,1,1,1,2,1,1,1,2,0,0,2,2,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,1,2,1,2,1,2,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,2,1,3,1,1,0,0,2,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,1,2,2,1,3,1,2,1,1,2,2,0,0,2,2,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,3,2,1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,2,3,2,2,2,1,2,2,2,2,1,2,1,1,2,2,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,2,2,2,2,2,0,2,0,2,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,0,2,2,2,0,2,1,2,2,2,0,0,2,1,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,3,2,2,2,1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,0,2,0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,2,1,2,1,1,1,0,1,1,1,1,1,3,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,2,3,3,3,2,1,2,3,3,2,3,3,3,3,2,3,2,1,2,0,2,1,2,0,2,0,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,3,3,3,3,3,3,3,2,3,3,3,1,2,2,3,3,2,3,2,3,2,2,3,1,2,2,0,2,2,2,0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,2,2,3,3,3,3,1,3,2,2,2,0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,2,2,2,1,2,2,0,2,2,2,2,0,2,0,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,1,3,2,3,3,2,3,3,2,2,1,2,2,2,2,2,2,0,2,1,2,1,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,1,0,2,0,1,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,2,1,2,3,3,3,3,3,3,3,2,3,2,3,2,1,2,3,0,2,1,2,2,0,2,1,1,2,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,1,3,1,2,2,2,1,2,3,3,1,2,1,2,2,2,2,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,2,3,3,3,1,3,3,3,1,2,2,2,2,1,1,2,2,2,2,2,2,0,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,3,3,2,2,3,3,3,2,1,2,3,2,3,2,2,2,2,1,2,1,1,1,2,2,0,2,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,3,2,3,1,2,2,2,2,3,2,3,1,1,2,2,1,2,2,1,1,0,2,2,2,2,0,1,0,1,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,1,1,1,1,1,1,1,1,2,1,1,0,3,3,3,0,3,0,2,2,2,2,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,1,1,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,0,2,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,1,2,2,2,2,2,1,2,2,2,1,1,2,2,2,2,2,2,2,1,2,2,1,0,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,1,2,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,2,1,2,2,2,0,2,0,2,0,1,1,2,1,1,1,1,2,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,2,2,0,1,0,0,1,1,2,2,1,2,0,2,0,0,0,1,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,1,2,0,2,0,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,1,2,2,0,0,1,0,0,0,1,0,0,1,1,1,2,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,2,1,0,2,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,2,1,1,2,0,1,0,0,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,0,0,2,1,1,2,0,2,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,2,2,1,2,1,1,0,1,0,0,0,1,1,0,1,2,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,2,1,1,1,0,2,1,1,0,0,0,2,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,0,2,1,1,0,1,0,0,0,1,1,0,1,2,2,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,0,1,2,1,0,2,0,0,0,1,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,2,0,2,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,0,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,0,0],t.Win1255HebrewModel={charToOrderMap:t.win1255_CharToOrderMap,precedenceMatrix:t.HebrewLangModel,mTypicalPositiveRatio:.984004,keepEnglishLetter:!1,charsetName:\"windows-1255\"}},function(e,t,r){var n=r(13),i=r(1);function o(){n.apply(this);var e=\"ê\",t=\"ë\",r=\"í\",o=\"î\",s=\"ï\",a=\"ð\",c=\"ó\",u=\"ô\",l=\"õ\",h=this;this.reset=function(){this._mFinalCharLogicalScore=0,this._mFinalCharVisualScore=0,this._mPrev=\" \",this._mBeforePrev=\" \"},this.setModelProbers=function(e,t){this._mLogicalProber=e,this._mVisualProber=t},this.isFinal=function(t){return-1!=[e,r,s,c,l].indexOf(t)},this.isNonFinal=function(e){return-1!=[t,o,a,u].indexOf(e)},this.feed=function(e){if(this.getState()==i.notMe)return i.notMe;e=this.filterHighBitOnly(e);for(var t,r=0;r<e.length;r++)\" \"==(t=e[r])?\" \"!=this._mBeforePrev&&(this.isFinal(this._mPrev)?this._mFinalCharLogicalScore++:this.isNonFinal(this._mPrev)&&this._mFinalCharVisualScore++):\" \"==this._mBeforePrev&&this.isFinal(this._mPrev)&&\" \"!=t&&this._mFinalCharVisualScore++,this._mBeforePrev=this._mPrev,this._mPrev=t;return i.detecting},this.getCharsetName=function(){var e=this._mFinalCharLogicalScore-this._mFinalCharVisualScore;if(e>=5)return\"windows-1255\";if(e<=-5)return\"ISO-8859-8\";var t=this._mLogicalProber.getConfidence()-this._mVisualProber.getConfidence();return t>.01?\"windows-1255\":t<-.01?\"ISO-8859-8\":e<0?\"ISO-8859-8\":\"windows-1255\"},this.getState=function(){return this._mLogicalProber.getState()==i.notMe&&this._mVisualProber.getState()==i.notMe?i.notMe:i.detecting},h._mLogicalProber=null,h._mVisualProber=null,h.reset()}Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var t=this.length>>>0,r=Number(arguments[1])||0;for((r=r<0?Math.ceil(r):Math.floor(r))<0&&(r+=t);r<t;r++)if(r in this&&this[r]===e)return r;return-1}),o.prototype=new n,e.exports=o},function(e,t){t.KOI8R_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,68,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,27,3,21,28,13,2,39,19,26,4,23,11,8,12,5,1,15,16,9,7,6,14,24,10,17,18,20,25,30,29,22,54,59,37,44,58,41,48,53,46,55,42,60,36,49,38,31,34,35,43,45,32,40,52,56,33,61,62,51,57,47,63,50,70],t.win1251_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,68,247,248,249,250,251,252,253,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,16],t.latin5_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,16,239,68,240,241,242,243,244,245,246,247,248,249,250,251,252,255],t.macCyrillic_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,68,16,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,255],t.IBM855_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,68,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,27,59,54,70,3,37,21,44,28,58,13,41,2,48,39,53,19,46,218,219,220,221,222,223,224,26,55,4,42,225,226,227,228,23,60,229,230,231,232,233,234,235,11,36,236,237,238,239,240,241,242,243,8,49,12,38,5,31,1,34,15,244,245,246,247,35,16,248,43,9,45,7,32,6,40,14,52,24,56,10,33,17,61,249,250,18,62,20,51,25,57,30,47,29,63,22,50,251,252,255],t.IBM866_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,16,239,68,240,241,242,243,244,245,246,247,248,249,250,251,252,255],t.RussianLangModel=[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,1,3,3,3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,2,0,0,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,2,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,2,3,3,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,2,2,2,3,1,3,3,1,3,3,3,3,2,2,3,0,2,2,2,3,3,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,2,3,3,3,2,1,2,2,0,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,0,2,2,3,3,2,1,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,1,2,3,2,2,3,2,3,3,3,3,2,2,3,0,3,2,2,3,1,1,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,2,2,2,0,3,3,3,2,2,2,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,2,3,2,2,0,1,3,2,1,2,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,0,1,1,1,1,2,1,1,0,2,2,2,1,2,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,2,2,2,2,1,3,2,3,2,3,2,1,2,2,0,1,1,2,1,2,1,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,3,3,2,2,2,2,0,2,2,2,2,3,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,2,3,2,2,3,3,3,3,3,3,3,3,3,1,3,2,0,0,3,3,3,3,2,3,3,3,3,2,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,3,2,2,3,3,0,2,1,0,3,2,3,2,3,0,0,1,2,0,0,1,0,1,2,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,0,2,3,3,3,3,2,3,3,3,3,1,2,2,0,0,2,3,2,2,2,3,2,3,2,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,0,2,3,2,3,0,1,2,3,3,2,0,2,3,0,0,2,3,2,2,0,1,3,1,3,2,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,3,0,2,3,3,3,3,3,3,3,3,2,1,3,2,0,0,2,2,3,3,3,2,3,3,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,3,3,2,2,2,3,3,0,0,1,1,1,1,1,2,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,0,3,2,3,3,2,3,2,0,2,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,3,2,2,2,2,3,1,3,2,3,1,1,2,1,0,2,2,2,2,1,3,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,2,3,3,3,3,3,1,2,2,1,3,1,0,3,0,0,3,0,0,0,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,1,1,3,3,3,2,2,1,2,2,3,1,1,2,0,0,2,2,1,3,0,0,2,1,1,2,1,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,3,3,3,1,2,2,2,1,2,1,3,3,1,1,2,1,2,1,2,2,0,2,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,3,2,1,3,2,2,3,2,0,3,2,0,3,0,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,3,3,3,2,2,2,3,3,1,2,1,2,1,0,1,0,1,1,0,1,0,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,1,1,2,1,2,3,3,2,2,1,2,2,3,0,2,1,0,0,2,2,3,2,1,2,2,2,2,2,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1,1,0,1,1,2,2,1,1,3,0,0,1,3,1,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,3,3,2,0,0,0,2,1,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,3,2,2,2,1,2,2,2,1,2,1,0,0,1,1,1,0,2,0,1,1,1,0,0,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,0,0,0,0,1,0,0,0,0,3,0,1,2,1,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,1,0,1,2,0,0,1,1,2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,2,2,3,2,2,2,3,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,1,0,1,1,1,0,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,3,3,3,2,2,2,2,3,2,2,1,1,2,2,2,2,1,1,3,1,2,1,2,0,0,1,1,0,1,0,2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,1,0,2,0,0,1,0,3,2,2,2,2,1,2,1,2,1,2,0,0,0,2,1,2,2,1,1,2,2,0,1,1,0,2,1,1,1,1,1,0,1,1,1,2,1,1,1,2,1,0,1,2,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,3,2,2,2,1,1,1,2,3,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,2,3,2,3,2,1,2,2,2,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,2,1,1,1,2,1,0,2,0,0,1,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,0,0,0,2,1,2,1,1,1,2,2,0,0,0,1,2,1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,2,3,2,3,3,2,0,1,1,1,0,0,1,0,2,0,1,1,3,1,0,0,0,0,0,0,0,1,0,0,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,2,3,3,3,3,1,2,2,2,2,0,1,1,0,2,1,1,1,2,1,0,1,1,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,2,0,0,1,1,2,2,1,0,0,2,0,1,1,3,0,0,1,0,0,0,0,0,1,0,1,2,1,1,1,2,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,1,3,2,3,2,1,0,0,2,2,2,0,1,0,2,0,1,1,1,0,1,0,0,0,3,0,1,1,0,0,2,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,2,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,3,1,2,1,1,2,2,2,2,2,2,1,2,2,1,1,0,0,0,2,2,2,0,0,0,1,2,1,0,1,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,3,0,0,0,0,2,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,3,3,2,2,0,0,0,2,2,0,0,0,1,2,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,2,3,2,3,2,0,0,0,0,1,1,0,0,0,2,0,2,0,2,0,0,0,0,0,1,0,0,1,0,0,1,1,1,1,2,0,1,2,1,0,1,1,2,1,1,1,1,1,2,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,1,3,2,2,2,1,0,0,2,2,1,0,1,2,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,3,1,2,2,2,2,2,2,1,1,0,0,0,1,0,1,0,2,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,2,0,0,1,0,3,2,1,2,1,2,2,0,1,0,0,0,2,1,0,0,2,1,1,1,1,0,2,0,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,1,2,2,2,2,1,0,0,1,0,0,0,0,0,2,0,1,1,1,1,0,0,0,0,1,0,1,2,0,0,2,0,1,0,1,1,1,2,1,0,1,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,2,1,2,2,2,0,3,0,1,1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,2,2,3,2,2,0,0,1,1,2,0,1,2,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,2,2,1,1,2,1,2,2,2,2,2,1,2,2,0,1,0,0,0,1,2,2,2,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,1,2,2,2,2,0,1,0,2,2,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,0,0,2,2,2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,0,0,0,1,0,0,1,1,2,0,0,0,0,1,0,1,0,0,1,0,0,2,0,0,0,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,1,1,2,0,2,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,1,2,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,2,0,1,2,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],t.Koi8rModel={charToOrderMap:t.KOI8R_CharToOrderMap,precedenceMatrix:t.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:\"KOI8-R\"},t.Win1251CyrillicModel={charToOrderMap:t.win1251_CharToOrderMap,precedenceMatrix:t.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:\"windows-1251\"},t.Latin5CyrillicModel={charToOrderMap:t.latin5_CharToOrderMap,precedenceMatrix:t.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:\"ISO-8859-5\"},t.MacCyrillicModel={charToOrderMap:t.macCyrillic_CharToOrderMap,precedenceMatrix:t.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:\"MacCyrillic\"},t.Ibm866Model={charToOrderMap:t.IBM866_CharToOrderMap,precedenceMatrix:t.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:\"IBM866\"},t.Ibm855Model={charToOrderMap:t.IBM855_CharToOrderMap,precedenceMatrix:t.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:\"IBM855\"}},function(e,t){t.Latin7_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,82,100,104,94,98,101,116,102,111,187,117,92,88,113,85,79,118,105,83,67,114,119,95,99,109,188,253,253,253,253,253,253,72,70,80,81,60,96,93,89,68,120,97,77,86,69,55,78,115,65,66,58,76,106,103,87,107,112,253,253,253,253,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,233,90,253,253,253,253,253,253,253,253,253,253,74,253,253,253,253,253,253,247,248,61,36,46,71,73,253,54,253,108,123,110,31,51,43,41,34,91,40,52,47,44,53,38,49,59,39,35,48,250,37,33,45,56,50,84,57,120,121,17,18,22,15,124,1,29,20,21,3,32,13,25,5,11,16,10,6,30,4,9,8,14,7,2,12,28,23,42,24,64,75,19,26,27,253],t.win1253_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,82,100,104,94,98,101,116,102,111,187,117,92,88,113,85,79,118,105,83,67,114,119,95,99,109,188,253,253,253,253,253,253,72,70,80,81,60,96,93,89,68,120,97,77,86,69,55,78,115,65,66,58,76,106,103,87,107,112,253,253,253,253,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,233,61,253,253,253,253,253,253,253,253,253,253,74,253,253,253,253,253,253,247,253,253,36,46,71,73,253,54,253,108,123,110,31,51,43,41,34,91,40,52,47,44,53,38,49,59,39,35,48,250,37,33,45,56,50,84,57,120,121,17,18,22,15,124,1,29,20,21,3,32,13,25,5,11,16,10,6,30,4,9,8,14,7,2,12,28,23,42,24,64,75,19,26,27,253],t.GreekLangModel=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,3,3,3,3,3,3,3,3,1,3,3,3,0,2,2,3,3,0,3,0,3,2,0,3,3,3,0,3,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,3,3,0,3,2,3,3,0,3,2,3,3,3,0,0,3,0,3,0,3,3,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,3,2,2,3,3,3,3,3,3,3,3,0,3,3,3,3,0,2,3,3,0,3,3,3,3,2,3,3,3,0,2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,2,1,3,3,3,3,2,3,3,2,3,3,2,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,2,0,1,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,0,0,0,0,3,3,0,3,1,3,3,3,0,3,3,0,3,3,3,3,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,2,2,3,0,2,3,3,3,3,3,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,2,3,3,3,3,0,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,0,3,0,0,0,3,3,2,3,3,3,3,3,0,0,3,2,3,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,3,0,0,3,3,0,2,3,0,3,0,3,3,3,0,0,3,0,3,0,2,2,3,3,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,0,3,2,3,3,3,3,0,3,3,3,3,3,0,3,3,2,3,2,3,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,3,2,3,3,3,3,3,3,0,2,3,2,3,2,2,2,3,2,3,3,2,3,0,2,2,2,3,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,3,3,2,3,3,0,0,3,0,3,0,0,0,3,2,0,3,0,3,0,0,2,0,2,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,0,0,0,3,3,0,3,3,3,0,0,1,2,3,0,3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,0,0,3,2,2,3,3,0,3,3,3,3,3,2,1,3,0,3,2,3,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,2,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,3,0,3,2,3,0,0,3,3,3,0,3,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,2,0,3,2,3,0,0,3,2,3,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,2,3,3,3,3,3,3,0,2,3,0,3,0,0,0,3,3,0,3,0,2,0,0,2,3,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,3,0,3,0,3,3,2,3,0,3,3,3,3,3,3,0,3,3,3,0,2,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,0,0,3,0,0,0,3,3,0,3,0,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,0,2,0,0,0,3,3,0,3,0,3,0,0,2,0,2,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,3,0,2,0,3,2,0,3,2,3,2,3,0,0,3,2,3,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,3,3,3,3,3,0,0,0,3,0,2,1,0,0,3,2,2,2,0,3,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,2,0,3,0,3,0,3,3,0,2,1,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,0,3,3,3,3,3,3,0,2,3,0,3,0,0,0,2,1,0,2,2,3,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,3,3,3,2,3,0,0,1,3,0,2,0,0,0,0,3,0,1,0,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1,0,3,0,0,0,3,2,0,3,2,3,3,3,0,0,3,0,3,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,0,0,3,0,0,0,0,2,0,2,3,3,2,2,2,2,3,0,2,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,2,0,2,3,2,0,0,3,0,3,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,3,2,2,3,0,2,0,3,0,0,0,2,0,0,0,0,1,2,0,2,0,2,0,0,2,0,2,0,2,2,0,0,1,0,2,2,2,0,2,2,2,0,2,2,2,0,0,2,0,0,1,0,0,0,0,0,2,0,3,3,2,0,0,0,0,0,0,1,3,0,2,0,2,2,2,0,0,2,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,3,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,0,0,0,0,0,0,2,3,0,0,0,2,0,1,2,0,0,0,0,2,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,2,1,0,2,3,2,2,3,2,3,2,0,0,3,3,3,0,0,3,2,0,0,0,1,1,0,2,0,2,2,0,2,0,2,0,2,2,0,0,2,0,2,2,2,0,2,2,2,2,0,0,2,0,0,0,2,0,1,0,0,0,0,0,3,0,3,3,2,2,0,3,0,0,0,2,2,0,2,2,2,1,2,0,0,1,2,2,0,0,3,0,0,0,2,0,1,2,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,1,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,2,2,0,0,0,2,0,2,3,3,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,2,0,2,0,2,2,0,0,2,2,2,2,1,0,0,2,2,0,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,3,2,3,0,0,0,3,0,0,2,2,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,2,2,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,3,2,0,2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,1,0,0,2,0,1,0,0,0,0,2,2,2,0,2,2,0,1,2,0,2,2,2,0,2,2,2,2,1,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,2,0,2,2,0,0,0,0,1,2,1,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,0,0,2,0,0,0,2,2,0,2,0,0,0,1,0,0,2,0,2,0,2,2,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,3,2,2,0,0,0,0,0,0,1,3,0,2,0,2,2,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,3,2,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,1,1,0,0,2,1,2,0,2,2,0,1,0,0,1,0,0,0,2,0,0,0,0,0,0,0,3,0,2,2,2,0,0,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,0,0,0,2,2,0,0,0,2,0,1,2,0,0,0,1,2,2,1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,2,2,0,2,0,0,2,0,0,0,0,1,2,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,1,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,3,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,2,0,2,2,0,0,2,2,2,2,2,0,1,2,0,0,0,2,2,0,1,0,2,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,1,2,0,0,0,0,2,2,1,0,1,0,1,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,1,0,0,0,0,0,0,2,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,2,2,2,2,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,2,0,0,0,0,1,2,0,0,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,0,0,0,0,2,2,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,2,0,0,2,0,2,2,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,0,0,2,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,3,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t.Latin7GreekModel={charToOrderMap:t.Latin7_CharToOrderMap,precedenceMatrix:t.GreekLangModel,mTypicalPositiveRatio:.982851,keepEnglishLetter:!1,charsetName:\"ISO-8859-7\"},t.Win1253GreekModel={charToOrderMap:t.win1253_CharToOrderMap,precedenceMatrix:t.GreekLangModel,mTypicalPositiveRatio:.982851,keepEnglishLetter:!1,charsetName:\"windows-1253\"}},function(e,t){t.TIS620CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,182,106,107,100,183,184,185,101,94,186,187,108,109,110,111,188,189,190,89,95,112,113,191,192,193,194,253,253,253,253,253,253,64,72,73,114,74,115,116,102,81,201,117,90,103,78,82,96,202,91,79,84,104,105,97,98,92,203,253,253,253,253,253,209,210,211,212,213,88,214,215,216,217,218,219,220,118,221,222,223,224,99,85,83,225,226,227,228,229,230,231,232,233,234,235,236,5,30,237,24,238,75,8,26,52,34,51,119,47,58,57,49,53,55,43,20,19,44,14,48,3,17,25,39,62,31,54,45,9,16,2,61,15,239,12,42,46,18,21,76,4,66,63,22,10,1,36,23,13,40,27,32,35,86,240,241,242,243,244,11,28,41,29,33,245,50,37,6,7,67,77,38,93,246,247,68,56,59,65,69,60,70,80,71,87,248,249,250,251,252,253],t.ThaiLangModel=[0,1,3,3,3,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,0,3,3,0,0,0,1,3,0,3,3,2,3,3,0,1,2,3,3,3,3,0,2,0,2,0,0,3,2,1,2,2,3,0,3,3,2,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,3,0,2,2,2,3,0,2,3,0,0,0,0,1,0,1,2,3,1,1,3,2,2,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,3,2,3,2,3,3,2,2,2,3,1,2,3,0,3,3,2,2,1,2,3,3,1,2,0,1,3,0,1,0,0,1,0,0,0,0,0,0,0,1,1,3,3,2,2,3,3,3,3,1,2,3,3,3,3,3,2,2,2,2,3,3,2,2,3,3,2,2,3,2,3,2,2,3,3,1,2,3,1,2,2,3,3,1,0,2,1,0,0,3,1,2,1,0,0,1,0,0,0,0,0,0,1,0,1,3,3,3,3,3,3,2,2,3,3,3,3,2,3,2,2,3,3,2,2,3,2,2,2,2,1,1,3,1,2,1,1,3,2,1,0,2,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,3,3,3,2,3,2,3,3,2,2,3,2,3,3,2,3,1,1,2,3,2,2,2,3,2,2,2,2,2,1,2,1,2,2,1,1,3,3,2,1,0,1,2,2,0,1,3,0,0,0,1,1,0,0,0,0,0,2,3,0,0,2,1,1,3,3,2,3,3,2,0,0,3,3,0,3,3,0,2,2,3,1,2,2,1,1,1,0,2,2,2,0,2,2,1,1,0,2,1,0,2,0,0,2,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,3,3,2,3,3,2,0,0,3,3,0,2,3,0,2,1,2,2,2,2,1,2,0,0,2,2,2,0,2,2,1,1,0,2,1,0,2,0,0,2,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,3,3,2,3,2,3,2,0,2,2,1,3,2,1,3,2,1,2,3,2,2,3,0,2,3,2,2,1,2,2,2,2,1,2,2,0,0,0,0,2,0,1,2,0,1,1,1,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,1,0,3,3,2,3,3,2,3,2,2,2,3,2,2,3,2,2,1,2,3,2,2,3,1,3,2,2,2,3,2,2,2,3,3,2,1,3,0,1,1,1,0,2,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,3,0,3,3,3,3,3,0,0,3,0,2,2,3,3,3,3,3,0,0,0,1,1,3,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,2,3,0,0,0,3,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,2,0,3,3,3,3,0,0,2,3,0,0,3,0,3,3,2,3,3,3,3,3,0,0,3,3,3,0,0,0,3,3,0,0,3,0,0,0,0,2,0,0,2,1,1,3,0,0,1,0,0,2,3,0,1,0,0,0,0,0,0,0,1,0,3,3,3,3,2,3,3,3,3,3,3,3,1,2,1,3,3,2,2,1,2,2,2,3,1,1,2,0,2,1,2,1,2,2,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,3,0,2,1,2,3,3,3,0,2,0,2,2,0,2,1,3,2,2,1,2,1,0,0,2,2,1,0,2,1,2,2,0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,1,3,3,1,1,3,0,2,3,1,1,3,2,1,1,2,0,2,2,3,2,1,1,1,1,1,2,3,0,0,1,3,1,2,1,2,0,3,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,3,3,1,1,3,2,3,3,3,1,3,2,1,3,2,1,3,2,2,2,2,1,3,3,1,2,1,3,1,2,3,0,2,1,1,3,2,2,2,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,2,3,2,3,3,2,3,2,3,2,3,3,2,1,0,3,2,2,2,1,2,2,2,1,2,2,1,2,1,1,2,2,2,3,0,1,3,1,1,1,1,0,1,1,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,3,2,2,1,1,3,2,3,2,3,2,0,3,2,2,1,2,0,2,2,2,1,2,2,2,2,1,3,2,1,2,2,1,0,2,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,3,3,3,3,3,2,3,1,2,3,3,2,2,3,0,1,1,2,0,3,3,2,2,3,0,1,1,3,0,0,0,0,3,1,0,3,3,0,2,0,2,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2,3,2,3,3,0,1,3,1,1,2,1,2,1,1,3,1,1,0,2,3,1,1,1,1,1,1,1,1,3,1,1,2,2,2,2,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,2,2,1,1,2,1,3,3,2,3,2,2,3,2,2,3,1,2,2,1,2,0,3,2,1,2,2,2,2,2,1,3,2,1,2,2,2,1,1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,1,3,3,0,2,1,0,3,2,0,0,3,1,0,1,1,0,1,0,0,0,0,0,1,1,0,0,1,0,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,2,2,3,0,0,1,3,0,3,2,0,3,2,2,3,3,3,3,3,1,0,2,2,2,0,2,2,1,2,0,2,3,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,2,3,1,3,3,2,3,3,0,3,3,0,3,2,2,3,2,3,3,3,0,0,2,2,3,0,1,1,1,3,0,0,3,0,0,0,2,2,0,1,3,0,1,2,2,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,3,2,3,3,2,0,3,3,2,2,3,1,3,2,1,3,2,0,1,2,2,0,2,3,2,1,0,3,0,0,0,0,3,0,0,2,3,1,3,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,3,2,2,2,1,2,0,1,3,1,1,3,1,3,0,0,2,1,1,1,1,2,1,1,1,0,2,1,0,1,1,2,0,0,0,3,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,3,1,0,0,0,1,0,3,3,3,3,2,2,2,2,2,1,3,1,1,1,2,0,1,1,2,1,2,1,3,2,0,0,3,1,1,1,1,1,3,1,0,2,3,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,3,3,0,2,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,1,3,0,0,1,2,0,0,2,0,3,3,2,3,3,3,2,3,0,0,2,2,2,0,0,0,2,2,0,0,1,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,1,2,3,1,3,3,0,0,1,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,2,3,1,2,3,1,0,3,0,2,2,1,0,2,1,1,2,0,1,0,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,1,0,1,1,1,3,1,2,2,2,2,2,2,1,1,1,1,0,3,1,0,1,3,1,1,1,1,1,1,0,2,0,1,3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,3,0,2,2,1,3,3,2,3,3,0,1,1,0,2,2,1,2,1,3,3,1,0,0,3,2,0,0,0,0,2,1,0,1,0,0,0,0,1,2,0,1,1,3,1,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,3,0,0,3,0,3,1,0,1,1,1,3,2,0,0,0,3,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,3,3,1,3,2,1,3,3,1,2,2,0,1,2,1,0,1,2,0,0,0,0,0,3,0,0,0,3,0,0,0,0,3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,2,0,3,3,3,2,2,0,1,1,0,1,3,0,0,0,2,2,0,0,0,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,3,1,2,0,0,2,1,0,3,1,0,1,2,0,1,1,1,1,3,0,0,3,1,1,0,2,2,1,1,0,2,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,1,2,0,0,2,2,0,1,2,0,1,0,1,3,1,2,1,0,0,0,2,0,3,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,1,2,2,0,0,0,2,0,2,1,0,1,1,0,1,1,1,2,1,0,0,1,1,1,0,2,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,2,0,1,3,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,1,2,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,3,2,2,0,0,0,1,0,0,0,0,2,3,2,1,2,2,3,0,0,0,2,3,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,3,3,2,2,0,1,0,0,0,0,2,0,2,0,1,0,0,0,1,1,0,0,0,2,1,0,1,0,1,1,0,0,0,1,0,2,0,0,1,0,3,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,0,0,1,0,0,0,0,0,1,1,2,0,0,0,0,1,0,0,1,3,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,3,3,1,1,1,1,2,3,0,0,2,1,1,1,1,1,0,2,1,1,0,0,0,2,1,0,1,2,1,1,0,1,2,1,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,3,0,1,0,0,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,3,3,0,0,1,1,2,0,0,1,2,1,0,1,1,1,0,1,1,0,0,2,1,1,0,1,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,2,0,1,2,0,0,1,1,0,2,0,1,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,1,0,0,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,2,1,3,0,0,0,0,1,1,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,0,0,2,0,0,2,0,0,1,1,2,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t.TIS620ThaiModel={charToOrderMap:t.TIS620CharToOrderMap,precedenceMatrix:t.ThaiLangModel,mTypicalPositiveRatio:.926386,keepEnglishLetter:!1,charsetName:\"TIS-620\"}},function(e,t){t.Latin2_HungarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,28,40,54,45,32,50,49,38,39,53,36,41,34,35,47,46,71,43,33,37,57,48,64,68,55,52,253,253,253,253,253,253,2,18,26,17,1,27,12,20,9,22,7,6,13,4,8,23,67,10,5,3,21,19,65,62,16,11,253,253,253,253,253,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,75,198,199,200,201,202,203,204,205,79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,51,81,222,78,223,224,225,226,44,227,228,229,61,230,231,232,233,234,58,235,66,59,236,237,238,60,69,63,239,240,241,82,14,74,242,70,80,243,72,244,15,83,77,84,30,76,85,245,246,247,25,73,42,24,248,249,250,31,56,29,251,252,253],t.win1250HungarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,28,40,54,45,32,50,49,38,39,53,36,41,34,35,47,46,72,43,33,37,57,48,64,68,55,52,253,253,253,253,253,253,2,18,26,17,1,27,12,20,9,22,7,6,13,4,8,23,67,10,5,3,21,19,65,62,16,11,253,253,253,253,253,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,78,181,69,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,76,198,199,200,201,202,203,204,205,81,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,51,83,222,80,223,224,225,226,44,227,228,229,61,230,231,232,233,234,58,235,66,59,236,237,238,60,70,63,239,240,241,84,14,75,242,71,82,243,73,244,15,85,79,86,30,77,87,245,246,247,25,74,42,24,248,249,250,31,56,29,251,252,253],t.HungarianLangModel=[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,1,1,2,2,2,2,2,1,2,3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,1,2,3,3,3,3,2,3,3,1,1,3,3,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,3,2,1,3,3,3,3,3,2,3,3,3,3,3,1,1,2,3,3,3,3,3,3,3,1,1,3,2,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,3,1,3,3,3,3,3,1,3,3,2,2,0,3,2,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,2,3,3,2,2,3,2,3,2,0,3,2,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,1,2,3,2,2,3,1,2,3,3,2,2,0,3,3,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,0,2,3,2,0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3,2,1,3,2,2,3,2,1,3,2,2,1,0,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,2,2,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,3,2,2,3,1,1,3,2,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,1,3,3,3,3,3,2,2,1,3,3,3,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,2,0,3,2,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,1,3,2,2,2,3,1,1,3,3,1,1,0,3,3,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,3,3,3,3,1,2,3,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,2,2,2,3,1,3,3,2,2,1,3,3,3,1,1,3,1,2,3,2,3,2,2,2,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,2,2,3,2,1,0,3,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,1,0,3,3,3,3,0,2,3,0,0,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,3,3,2,2,2,2,3,3,0,1,2,3,2,3,2,2,3,2,1,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,3,3,3,3,3,1,2,3,3,3,2,1,2,3,3,2,2,2,3,2,3,3,1,3,3,1,1,0,2,3,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,1,2,2,2,2,3,3,3,1,1,1,3,3,1,1,3,1,1,3,2,1,2,3,1,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,2,1,2,1,1,3,3,1,1,1,1,3,3,1,1,2,2,1,2,1,1,2,2,1,1,0,2,2,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,1,1,2,1,1,3,3,1,0,1,1,3,3,2,0,1,1,2,3,1,0,2,2,1,0,0,1,3,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,2,1,3,3,3,3,3,1,2,3,2,3,3,2,1,1,3,2,3,2,1,2,2,0,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,2,2,2,2,3,1,2,2,1,1,3,3,0,3,2,1,2,3,2,1,3,3,1,1,0,2,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,2,2,2,3,2,3,3,3,2,1,1,3,3,1,1,1,2,2,3,2,3,2,2,2,1,0,2,2,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,3,3,3,3,3,0,0,3,3,2,3,0,0,0,2,3,3,1,0,1,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,3,3,3,3,3,1,2,3,3,2,2,1,1,0,3,3,2,2,1,2,2,1,0,2,2,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,2,1,3,1,2,3,3,2,2,1,1,2,2,1,1,1,1,3,2,1,1,1,1,2,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,3,3,1,1,1,1,1,3,3,3,0,1,1,3,3,1,1,1,1,1,2,2,0,3,1,1,2,0,2,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,1,0,1,2,1,2,2,0,1,2,3,1,2,0,0,0,2,1,1,1,1,1,2,0,0,1,1,0,0,0,0,1,2,1,2,2,2,1,2,1,2,0,2,0,2,2,1,1,2,1,1,2,1,1,1,0,1,0,0,0,1,1,0,1,1,1,2,3,2,3,3,0,1,2,2,3,1,0,1,0,2,1,2,2,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,3,3,2,2,1,0,0,3,2,3,2,0,0,0,1,1,3,0,0,1,1,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,2,2,3,3,1,0,1,3,2,3,1,1,1,0,1,1,1,1,1,3,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,2,2,2,1,0,1,2,3,3,2,0,0,0,2,1,1,1,2,1,1,1,0,1,1,1,0,0,0,1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,2,1,1,1,1,1,1,0,1,1,1,0,0,1,1,3,2,2,1,0,0,1,1,2,2,0,3,0,1,2,1,1,0,0,1,1,1,0,1,1,1,1,0,2,1,1,1,2,2,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,2,3,1,1,1,1,1,1,1,1,1,0,1,2,3,3,0,1,0,0,0,3,3,1,0,0,1,2,2,1,0,0,0,0,2,0,0,1,1,1,0,2,1,1,1,2,1,1,1,1,1,1,2,1,1,0,1,1,0,1,1,1,0,1,2,1,1,0,1,1,1,1,1,1,1,0,1,2,3,3,0,1,0,0,0,2,2,0,0,0,0,1,2,2,0,0,0,0,1,0,0,1,1,0,0,2,0,1,0,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,3,2,2,0,1,0,1,0,2,3,2,0,0,1,2,2,1,0,0,1,1,1,0,0,2,1,0,1,2,2,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,2,1,0,1,1,0,1,1,1,0,1,1,2,1,1,0,1,2,2,2,0,0,1,0,0,2,2,1,1,0,0,2,1,1,0,0,0,1,2,0,0,2,1,0,0,2,1,1,1,2,1,1,1,1,2,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,1,2,3,0,0,0,1,0,3,2,1,0,0,1,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,2,1,1,1,0,0,0,1,0,1,1,1,1,1,2,0,0,1,0,0,0,2,0,0,1,1,1,1,1,1,1,1,0,1,3,0,0,2,1,2,2,1,0,0,2,1,2,2,0,0,0,2,1,1,1,0,1,1,0,0,1,1,2,0,0,0,1,2,1,2,2,1,1,2,1,2,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,0,0,1,1,3,2,0,0,0,1,0,2,2,2,0,0,0,2,2,1,0,0,0,0,3,1,1,1,1,0,0,2,1,1,1,2,1,0,1,1,1,0,1,1,1,1,1,1,1,0,2,1,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,2,3,2,0,0,0,1,0,2,2,0,0,0,0,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,1,0,2,1,1,1,1,2,1,2,1,2,0,1,1,1,0,2,1,1,1,2,1,1,1,1,0,1,1,1,1,1,0,1,3,1,1,2,2,2,3,2,1,1,2,2,1,1,0,1,0,2,2,1,1,1,1,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,2,2,0,0,0,0,2,2,1,0,0,0,1,1,0,0,1,2,0,0,2,1,1,1,2,2,1,1,1,2,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,1,1,0,1,2,1,1,1,0,1,1,0,0,1,2,3,2,1,0,0,2,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,1,2,1,2,1,2,1,1,1,2,0,2,1,1,1,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,3,2,0,0,0,0,0,1,1,2,1,0,0,1,1,1,0,0,0,0,2,0,0,1,1,0,0,2,1,1,1,2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,2,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,2,2,0,1,1,1,0,2,2,2,0,0,0,3,2,1,0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,0,0,1,1,1,0,1,0,1,2,1,0,2,1,1,2,2,1,1,2,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,1,2,3,0,0,0,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,1,0,0,1,0,0,0,2,0,1,0,2,1,1,1,1,1,0,2,0,0,0,1,2,1,1,1,1,0,1,2,0,1,0,1,0,1,1,1,0,1,0,1,2,2,2,0,0,0,1,0,2,1,2,0,0,0,1,1,2,0,0,0,0,1,0,0,1,1,0,0,2,1,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,1,2,2,0,0,0,1,0,2,2,2,0,0,0,1,1,0,0,0,0,0,1,1,0,2,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,1,0,0,1,0,1,2,1,0,0,1,1,1,2,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,2,1,2,1,1,1,1,1,2,0,2,0,1,1,0,1,2,1,0,1,1,1,0,0,0,0,0,0,1,0,0,2,1,1,0,1,2,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,2,1,0,1,2,2,1,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,1,2,2,0,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,1,2,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,2,0,0,3,1,0,2,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,1,2,1,0,1,1,1,2,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,2,0,0,0,2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,1,0,1,2,1,1,1,2,1,1,1,0,1,1,2,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,1,1,2,1,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,1,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,2,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,2,0,0,1,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,2,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0],t.Latin2HungarianModel={charToOrderMap:t.Latin2_HungarianCharToOrderMap,precedenceMatrix:t.HungarianLangModel,mTypicalPositiveRatio:.947368,keepEnglishLetter:!0,charsetName:\"ISO-8859-2\"},t.Win1250HungarianModel={charToOrderMap:t.win1250HungarianCharToOrderMap,precedenceMatrix:t.HungarianLangModel,mTypicalPositiveRatio:.947368,keepEnglishLetter:!0,charsetName:\"windows-1250\"}},function(e,t){t.Latin5_BulgarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,77,90,99,100,72,109,107,101,79,185,81,102,76,94,82,110,186,108,91,74,119,84,96,111,187,115,253,253,253,253,253,253,65,69,70,66,63,68,112,103,92,194,104,95,86,87,71,116,195,85,93,97,113,196,197,198,199,200,253,253,253,253,253,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,81,226,227,228,229,230,105,231,232,233,234,235,236,45,237,238,31,32,35,43,37,44,55,47,40,59,33,46,38,36,41,30,39,28,34,51,48,49,53,50,54,57,61,239,67,240,60,56,1,18,9,20,11,3,23,15,2,26,12,10,14,6,4,13,7,8,5,19,29,25,22,21,27,24,17,75,52,241,42,16,62,242,243,244,58,245,98,246,247,248,249,250,251,91,252,253],t.win1251BulgarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,77,90,99,100,72,109,107,101,79,185,81,102,76,94,82,110,186,108,91,74,119,84,96,111,187,115,253,253,253,253,253,253,65,69,70,66,63,68,112,103,92,194,104,95,86,87,71,116,195,85,93,97,113,196,197,198,199,200,253,253,253,253,253,206,207,208,209,210,211,212,213,120,214,215,216,217,218,219,220,221,78,64,83,121,98,117,105,222,223,224,225,226,227,228,229,88,230,231,232,233,122,89,106,234,235,236,237,238,45,239,240,73,80,118,114,241,242,243,244,245,62,58,246,247,248,249,250,31,32,35,43,37,44,55,47,40,59,33,46,38,36,41,30,39,28,34,51,48,49,53,50,54,57,61,251,67,252,60,56,1,18,9,20,11,3,23,15,2,26,12,10,14,6,4,13,7,8,5,19,29,25,22,21,27,24,17,75,52,253,42,16],t.BulgarianLangModel=[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,2,2,1,2,2,3,1,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,3,0,3,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,3,3,3,3,2,2,2,1,1,2,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,2,3,2,2,3,3,1,1,2,3,3,2,3,3,3,3,2,1,2,0,2,0,3,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,1,3,3,3,3,3,2,3,2,3,3,3,3,3,2,3,3,1,3,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,1,3,3,2,3,3,3,1,3,3,2,3,2,2,2,0,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,3,1,2,2,3,2,1,1,2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,2,3,3,1,2,3,2,2,2,3,3,3,3,3,2,2,3,1,2,0,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,1,3,3,3,3,3,2,3,3,3,2,3,3,2,3,2,2,2,3,1,2,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,2,1,3,1,3,2,2,3,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,2,2,3,2,2,3,1,2,1,1,1,2,3,1,3,1,2,2,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,1,3,2,2,3,3,1,2,3,1,1,3,3,3,3,1,2,2,1,1,1,0,2,0,2,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,3,3,3,2,2,1,1,2,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,0,1,2,1,3,3,2,3,3,3,3,3,2,3,2,1,0,3,1,2,1,2,1,2,3,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,1,3,3,2,3,3,2,2,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,0,3,3,3,3,3,2,1,1,2,1,3,3,0,3,1,1,1,1,3,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,3,2,3,2,2,2,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,3,2,2,3,2,1,1,1,1,1,3,1,3,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,2,0,3,2,0,3,0,2,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,2,1,1,1,1,2,1,1,2,1,1,1,2,2,1,2,1,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,2,1,3,1,1,2,1,3,2,1,1,0,1,2,3,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,2,2,1,0,1,0,0,1,0,0,0,2,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,2,3,2,3,3,1,3,2,1,1,1,2,1,1,2,1,3,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,2,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,1,1,2,2,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,1,3,1,0,2,2,1,3,2,1,0,0,2,0,2,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,1,2,0,2,3,1,2,3,2,0,1,3,1,2,1,1,1,0,0,1,0,0,2,2,2,3,2,2,2,2,1,2,1,1,2,2,1,1,2,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,3,3,3,3,3,2,1,2,2,1,2,0,2,0,1,0,1,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,2,3,3,1,1,3,1,0,3,2,1,0,0,0,1,2,0,2,0,1,0,0,0,1,0,1,2,1,2,2,1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,3,1,0,1,0,2,3,2,2,2,3,2,2,2,2,2,1,0,2,1,2,1,1,1,0,1,2,1,2,2,2,1,1,1,2,2,2,2,1,2,1,1,0,1,2,1,2,2,2,1,1,1,0,1,1,1,1,2,0,1,0,0,0,0,2,3,2,3,3,0,0,2,1,0,2,1,0,0,0,0,2,3,0,2,0,0,0,0,0,1,0,0,2,0,1,2,2,1,2,1,2,2,1,1,1,2,1,1,1,0,1,2,2,1,1,1,1,1,0,1,1,1,0,0,1,2,0,0,3,3,2,2,3,0,2,3,1,1,2,0,0,0,1,0,0,2,0,2,0,0,0,1,0,1,0,1,2,0,2,2,1,1,1,1,2,1,0,1,2,2,2,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,2,3,2,3,3,0,0,3,0,1,1,0,1,0,0,0,2,2,1,2,0,0,0,0,0,0,0,0,2,0,1,2,2,2,1,1,1,1,1,2,2,2,1,0,2,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,3,3,3,3,2,2,2,2,2,0,2,1,1,1,1,2,1,2,1,1,0,2,0,1,0,1,0,0,2,0,1,2,1,1,1,1,1,1,1,2,2,1,1,0,2,0,1,0,2,0,0,1,1,1,0,0,2,0,0,0,1,1,0,0,2,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,1,2,0,1,2,2,2,2,1,1,2,1,1,2,2,2,1,2,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,2,3,3,3,3,0,2,2,0,2,1,0,0,0,1,1,1,2,0,2,0,0,0,3,0,0,0,0,2,0,2,2,1,1,1,2,1,2,1,1,2,2,2,1,2,0,1,1,1,0,1,1,1,1,0,2,1,0,0,0,1,1,0,0,2,3,3,3,3,0,2,1,0,0,2,0,0,0,0,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,1,1,1,2,1,1,1,1,2,2,2,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,3,3,2,2,3,0,1,0,1,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,0,0,0,1,0,2,2,1,1,1,1,1,2,1,1,2,2,1,2,2,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,3,1,0,1,0,2,2,2,2,3,2,1,1,1,2,3,0,0,1,0,2,1,1,0,1,1,1,1,2,1,1,1,1,2,2,1,2,1,2,2,1,1,0,1,2,1,2,2,1,1,1,0,0,1,1,1,2,1,0,1,0,0,0,0,2,1,0,1,0,3,1,2,2,2,2,1,2,2,1,1,1,0,2,1,2,2,1,1,2,1,1,0,2,1,1,1,1,2,2,2,2,2,2,2,1,2,0,1,1,0,2,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,2,1,1,1,1,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,2,3,2,2,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,2,0,1,2,0,1,2,1,1,0,1,0,1,2,1,2,0,0,0,1,1,0,0,0,1,0,0,2,1,1,0,0,1,1,0,1,1,1,1,0,2,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,2,0,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,2,1,1,1,1,2,2,2,2,1,1,2,1,2,1,1,1,0,2,1,2,1,1,1,0,2,1,1,1,1,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,2,0,0,0,0,1,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,0,0,0,1,0,1,2,1,1,1,1,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,2,3,1,2,1,0,1,1,0,2,2,2,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,2,1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,2,2,2,2,2,0,0,2,0,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,2,1,1,1,1,1,0,0,1,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,0,2,0,1,1,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,2,0,0,1,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,0,2,1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,1,2,2,2,1,2,1,2,2,1,1,2,1,1,1,0,1,1,1,1,2,0,1,0,1,1,1,1,0,1,1,1,1,2,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,1,0,0,1,0,2,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,2,0,1,0,0,1,1,2,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,1,1,0,2,1,0,1,1,1,0,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,1,2,1,1,1,1,1,1,2,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,2,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,2,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,2,0,0,2,0,1,0,0,1,0,0,1,1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,2,0,0,0,0,0,0,2,1,0,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],t.Latin5BulgarianModel={charToOrderMap:t.Latin5_BulgarianCharToOrderMap,precedenceMatrix:t.BulgarianLangModel,mTypicalPositiveRatio:.969392,keepEnglishLetter:!1,charsetName:\"ISO-8859-5\"},t.Win1251BulgarianModel={charToOrderMap:t.win1251BulgarianCharToOrderMap,precedenceMatrix:t.BulgarianLangModel,mTypicalPositiveRatio:.969392,keepEnglishLetter:!1,charsetName:\"windows-1251\"}},function(e,t,r){var n=r(13),i=r(1),o=1,s=[o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,o,o,o,o,o,o,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,o,o,o,o,o,o,0,o,7,o,o,o,o,o,o,5,o,5,0,5,0,0,o,o,o,o,o,o,o,o,o,7,o,7,0,7,5,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,o,4,4,4,4,4,4,5,5,4,4,4,4,4,4,4,4,5,5,4,4,4,4,4,o,4,4,4,4,4,5,5,5,6,6,6,6,6,6,7,7,6,6,6,6,6,6,6,6,7,7,6,6,6,6,6,o,6,6,6,6,6,7,7,7],a=[0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,3,3,3,1,1,3,3,0,3,3,3,1,2,1,2,0,3,3,3,3,3,3,3,0,3,1,3,1,1,1,3,0,3,1,3,1,1,3,3];function c(){n.apply(this);var e=this;this.reset=function(){this._mLastCharClass=o,this._mFreqCounter=[];for(var e=0;e<4;this._mFreqCounter[e++]=0);c.prototype.reset.apply(this)},this.getCharsetName=function(){return\"windows-1252\"},this.feed=function(e){e=this.filterWithEnglishLetters(e);for(var t=0;t<e.length;t++){var r=e.charCodeAt(t),n=s[r],o=a[8*this._mLastCharClass+n];if(0==o){this._mState=i.notMe;break}this._mFreqCounter[o]++,this._mLastCharClass=n}return this.getState()},this.getConfidence=function(){var e;if(this.getState()==i.notMe)return.01;for(var t=0,r=0;r<this._mFreqCounter.length;r++)t+=this._mFreqCounter[r];return t<.01?0:e=this._mFreqCounter[3]/t-20*this._mFreqCounter[1]/t,e<0&&(e=0),e*=.95},e.reset()}c.prototype=new n,e.exports=c},function(e,t,r){var n=r(13),i=r(9),o=r(115),s=r(1);function a(){n.apply(this);var e=this;this.reset=function(){a.prototype.reset.apply(this);for(var t,r=0;t=this._mCodingSM[r];r++)t&&(t.active=!0,t.reset());this._mActiveSM=e._mCodingSM.length,this._mDetectedCharset=null},this.getCharsetName=function(){return this._mDetectedCharset},this.getConfidence=function(){return this._mDetectedCharset?.99:0},this.feed=function(e){for(var t,r=0;r<e.length;r++){t=e[r];for(var n,i=0;n=this._mCodingSM[i];i++)if(n&&n.active){var o=n.nextState(t);if(o==s.error){if(n.active=!1,this._mActiveSM--,this._mActiveSM<=0)return this._mState=s.notMe,this.getState()}else if(o==s.itsMe)return this._mState=s.foundIt,this._mDetectedCharset=n.getCodingStateMachine(),this.getState()}}return this.getState()},e._mCodingSM=[new i(o.HZSMModel),new i(o.ISO2022CNSMModel),new i(o.ISO2022JPSMModel),new i(o.ISO2022KRSMModel)],e.reset()}a.prototype=new n,e.exports=a},function(e,t,r){var n=r(1),i=[n.start,n.error,3,n.start,n.start,n.start,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.start,n.start,4,n.error,5,n.error,6,n.error,5,5,4,n.error,4,n.error,4,4,4,n.error,4,n.error,4,n.itsMe,n.start,n.start,n.start,n.start,n.start,n.start];t.HZSMModel={classTable:[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,5,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],classFactor:6,stateTable:i,charLenTable:[0,0,0,0,0,0],name:\"HZ-GB-2312\"};var o=[n.start,3,n.error,n.start,n.start,n.start,n.start,n.start,n.start,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.error,4,n.error,n.error,n.error,n.error,n.itsMe,n.error,n.error,n.error,n.error,5,6,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.error,n.start];t.ISO2022CNSMModel={classTable:[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],classFactor:9,stateTable:o,charLenTable:[0,0,0,0,0,0,0,0,0],name:\"ISO-2022-CN\"};var s=[n.start,3,n.error,n.start,n.start,n.start,n.start,n.start,n.start,n.start,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.error,5,n.error,n.error,n.error,4,n.error,n.error,n.error,n.error,n.error,6,n.itsMe,n.error,n.itsMe,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.error,n.error,n.error,n.itsMe,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.error,n.start,n.start];t.ISO2022JPSMModel={classTable:[2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,7,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,4,0,8,0,0,0,0,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],classFactor:10,stateTable:s,charLenTable:[0,0,0,0,0,0,0,0,0,0],name:\"ISO-2022-JP\"};var a=[n.start,3,n.error,n.start,n.start,n.start,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.itsMe,n.error,n.error,n.error,4,n.error,n.error,n.error,n.error,n.error,n.error,5,n.error,n.error,n.error,n.error,n.error,n.error,n.itsMe,n.start,n.start,n.start,n.start];t.ISO2022KRSMModel={classTable:[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],classFactor:6,stateTable:a,charLenTable:[0,0,0,0,0,0],name:\"ISO-2022-KR\"}},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(3),o=r(29),s=r(18),a=r(5),c=r(0),u=r(2),l=r(8),h=r(19),p=l.loadMessageBundle(r(0).join(__dirname,\"model.ts\"));class d{constructor(e,t){this.repository=e,this.index=t}get label(){return c.basename(this.repository.root)}get description(){return[this.repository.headLabel,this.repository.syncLabel].filter(e=>!!e).join(\" \")}}n([s.memoize],d.prototype,\"label\",null),n([s.memoize],d.prototype,\"description\",null);class f{constructor(e,t,r){this.git=e,this.globalState=t,this.outputChannel=r,this._onDidOpenRepository=new i.EventEmitter,this.onDidOpenRepository=this._onDidOpenRepository.event,this._onDidCloseRepository=new i.EventEmitter,this.onDidCloseRepository=this._onDidCloseRepository.event,this._onDidChangeRepository=new i.EventEmitter,this.onDidChangeRepository=this._onDidChangeRepository.event,this._onDidChangeOriginalResource=new i.EventEmitter,this.onDidChangeOriginalResource=this._onDidChangeOriginalResource.event,this.openRepositories=[],this.possibleGitRepositoryPaths=new Set,this._onDidChangeState=new i.EventEmitter,this.onDidChangeState=this._onDidChangeState.event,this._state=\"uninitialized\",this.disposables=[],i.workspace.onDidChangeWorkspaceFolders(this.onDidChangeWorkspaceFolders,this,this.disposables),i.window.onDidChangeVisibleTextEditors(this.onDidChangeVisibleTextEditors,this,this.disposables),i.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration,this,this.disposables);const n=i.workspace.createFileSystemWatcher(\"**\");this.disposables.push(n);const o=a.anyEvent(n.onDidChange,n.onDidCreate,n.onDidDelete),s=a.filterEvent(o,e=>/\\/\\.git/.test(e.path));a.filterEvent(s,e=>!this.getRepository(e))(this.onPossibleGitRepositoryChange,this,this.disposables),this.doInitialScan().finally(()=>this.setState(\"initialized\"))}get repositories(){return this.openRepositories.map(e=>e.repository)}get state(){return this._state}setState(e){this._state=e,this._onDidChangeState.fire(e)}async doInitialScan(){await Promise.all([this.onDidChangeWorkspaceFolders({added:i.workspace.workspaceFolders||[],removed:[]}),this.onDidChangeVisibleTextEditors(i.window.visibleTextEditors),this.scanWorkspaceFolders()])}async scanWorkspaceFolders(){const e=i.workspace.getConfiguration(\"git\").get(\"autoRepositoryDetection\");if(!0===e||\"subFolders\"===e)for(const e of i.workspace.workspaceFolders||[]){const t=e.uri.fsPath;try{(await new Promise((e,r)=>u.readdir(t,(t,n)=>t?r(t):e(n)))).filter(e=>\".git\"!==e).forEach(e=>this.openRepository(c.join(t,e)));const r=i.workspace.getConfiguration(\"git\",e.uri).get(\"scanRepositories\")||[];for(const e of r)c.isAbsolute(e)?console.warn(p(0,null)):this.openRepository(c.join(t,e))}catch(e){}}}onPossibleGitRepositoryChange(e){this.eventuallyScanPossibleGitRepository(e.fsPath.replace(/\\.git.*$/,\"\"))}eventuallyScanPossibleGitRepository(e){this.possibleGitRepositoryPaths.add(e),this.eventuallyScanPossibleGitRepositories()}eventuallyScanPossibleGitRepositories(){for(const e of this.possibleGitRepositoryPaths)this.openRepository(e);this.possibleGitRepositoryPaths.clear()}async onDidChangeWorkspaceFolders({added:e,removed:t}){const r=e.filter(e=>!this.getOpenRepository(e.uri)),n=i.window.visibleTextEditors.map(e=>this.getRepository(e.document.uri)).filter(e=>!!e),o=new Set(n);t.map(e=>this.getOpenRepository(e.uri)).filter(e=>!!e).filter(e=>!o.has(e.repository)).filter(e=>!(i.workspace.workspaceFolders||[]).some(t=>a.isDescendant(t.uri.fsPath,e.repository.root))).forEach(e=>e.dispose()),await Promise.all(r.map(e=>this.openRepository(e.uri.fsPath)))}onDidChangeConfiguration(){const e=(i.workspace.workspaceFolders||[]).filter(e=>!0===i.workspace.getConfiguration(\"git\",e.uri).get(\"enabled\")).filter(e=>!this.getOpenRepository(e.uri)),t=this.openRepositories.map(e=>({repository:e,root:i.Uri.file(e.repository.root)})).filter(({root:e})=>!0!==i.workspace.getConfiguration(\"git\",e).get(\"enabled\")).map(({repository:e})=>e);e.forEach(e=>this.openRepository(e.uri.fsPath)),t.forEach(e=>e.dispose())}async onDidChangeVisibleTextEditors(e){const t=i.workspace.getConfiguration(\"git\").get(\"autoRepositoryDetection\");!0!==t&&\"openEditors\"!==t||await Promise.all(e.map(async e=>{const t=e.document.uri;\"file\"===t.scheme&&(this.getRepository(t)||await this.openRepository(c.dirname(t.fsPath)))}))}async openRepository(e){if(this.getRepository(e))return;if(!0===i.workspace.getConfiguration(\"git\",i.Uri.file(e)).get(\"enabled\"))try{const t=await this.git.getRepositoryRoot(e),r=i.Uri.file(t).fsPath;if(this.getRepository(r))return;if(this.shouldRepositoryBeIgnored(t))return;const n=await this.git.getRepositoryDotGit(r),s=new o.Repository(this.git.open(r,n),this.globalState,this.outputChannel);this.open(s),await s.status()}catch(e){if(\"NotAGitRepository\"===e.gitErrorCode)return}}shouldRepositoryBeIgnored(e){const t=i.workspace.getConfiguration(\"git\").get(\"ignoredRepositories\")||[];for(const r of t)if(c.isAbsolute(r)){if(a.pathEquals(r,e))return!0}else for(const t of i.workspace.workspaceFolders||[])if(a.pathEquals(c.join(t.uri.fsPath,r),e))return!0;return!1}open(e){this.outputChannel.appendLine(`Open repository: ${e.root}`);const t=a.filterEvent(e.onDidChangeState,e=>1===e)(()=>h()),r=e.onDidChangeRepository(t=>this._onDidChangeRepository.fire({repository:e,uri:t})),n=e.onDidChangeOriginalResource(t=>this._onDidChangeOriginalResource.fire({repository:e,uri:t})),o=i.workspace.getConfiguration(\"git\",i.Uri.file(e.root)).get(\"detectSubmodules\"),s=i.workspace.getConfiguration(\"git\",i.Uri.file(e.root)).get(\"detectSubmodulesLimit\"),u=()=>{o&&(e.submodules.length>s&&(i.window.showWarningMessage(p(1,null,c.basename(e.root),e.submodules.length)),l.dispose()),e.submodules.slice(0,s).map(t=>c.join(e.root,t.path)).forEach(e=>this.eventuallyScanPossibleGitRepository(e)))},l=e.onDidRunGitStatus(u);u();const h=()=>{t.dispose(),r.dispose(),n.dispose(),l.dispose(),e.dispose(),this.openRepositories=this.openRepositories.filter(e=>e!==d),this._onDidCloseRepository.fire(e)},d={repository:e,dispose:h};this.openRepositories.push(d),this._onDidOpenRepository.fire(e)}close(e){const t=this.getOpenRepository(e);t&&(this.outputChannel.appendLine(`Close repository: ${e.root}`),t.dispose())}async pickRepository(){if(0===this.openRepositories.length)throw new Error(p(2,null));const e=this.openRepositories.map((e,t)=>new d(e.repository,t)),t=i.window.activeTextEditor,r=t&&this.getRepository(t.document.fileName),n=a.firstIndex(e,e=>e.repository===r);n>-1&&e.unshift(...e.splice(n,1));const o=p(3,null),s=await i.window.showQuickPick(e,{placeHolder:o});return s&&s.repository}getRepository(e){const t=this.getOpenRepository(e);return t&&t.repository}getOpenRepository(e){if(e){if(e instanceof o.Repository)return this.openRepositories.filter(t=>t.repository===e)[0];if(\"string\"==typeof e&&(e=i.Uri.file(e)),e instanceof i.Uri){let t;t=\"git\"===e.scheme?h.fromGitUri(e).path:e.fsPath;e:for(const e of this.openRepositories.sort((e,t)=>t.repository.root.length-e.repository.root.length))if(a.isDescendant(e.repository.root,t)){for(const r of e.repository.submodules){const n=c.join(e.repository.root,r.path);if(a.isDescendant(n,t))continue e}return e}}else for(const t of this.openRepositories){const r=t.repository;if(e===r.sourceControl)return t;if(e===r.mergeGroup||e===r.indexGroup||e===r.workingTreeGroup)return t}}}getRepositoryForSubmodule(e){for(const t of this.repositories)for(const r of t.submodules){if(c.join(t.root,r.path)===e.fsPath)return t}}dispose(){[...this.openRepositories].forEach(e=>e.dispose()),this.openRepositories=[],this.possibleGitRepositoryPaths.clear(),this.disposables=a.dispose(this.disposables)}}n([s.debounce(500)],f.prototype,\"eventuallyScanPossibleGitRepositories\",null),n([s.sequentialize],f.prototype,\"openRepository\",null),t.Model=f},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3),i=r(5),o=r(8).loadMessageBundle(r(0).join(__dirname,\"autofetch.ts\"));class s{constructor(e,t){this.repository=e,this.globalState=t,this._onDidChange=new n.EventEmitter,this.onDidChange=this._onDidChange.event,this._enabled=!1,this.disposables=[],n.workspace.onDidChangeConfiguration(this.onConfiguration,this,this.disposables),this.onConfiguration();const r=i.filterEvent(e.onDidRunOperation,({operation:e,error:t})=>!t&&function(e){return\"Pull\"===e||\"Push\"===e||\"Sync\"===e||\"Fetch\"===e}(e));i.onceEvent(r)(this.onFirstGoodRemoteOperation,this,this.disposables)}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._onDidChange.fire(e)}async onFirstGoodRemoteOperation(){const e=!this.globalState.get(s.DidInformUser);if(this.enabled&&!e&&this.globalState.update(s.DidInformUser,!0),!(!this.enabled&&e))return;const t={title:o(0,null)},r={isCloseAffordance:!0,title:o(1,null)},i={title:o(2,null)},a=await n.window.showInformationMessage(o(3,null,\"https://go.microsoft.com/fwlink/?linkid=865294\"),t,r,i);if(a!==i){if(a===t){n.workspace.getConfiguration(\"git\",n.Uri.file(this.repository.root)).update(\"autofetch\",!0,n.ConfigurationTarget.Global)}this.globalState.update(s.DidInformUser,!0)}}onConfiguration(){!1===n.workspace.getConfiguration(\"git\",n.Uri.file(this.repository.root)).get(\"autofetch\")?this.disable():this.enable()}enable(){this.enabled||(this.enabled=!0,this.run())}disable(){this.enabled=!1}async run(){for(;this.enabled;){if(await this.repository.whenIdleAndFocused(),!this.enabled)return;try{await this.repository.fetchDefault({silent:!0})}catch(e){\"AuthenticationFailed\"===e.gitErrorCode&&this.disable()}if(!this.enabled)return;const e=1e3*n.workspace.getConfiguration(\"git\",n.Uri.file(this.repository.root)).get(\"autofetchPeriod\",180),t=new Promise(t=>setTimeout(t,e)),r=i.eventToPromise(i.filterEvent(this.onDidChange,e=>!e));await Promise.race([t,r])}}dispose(){this.disable(),this.disposables.forEach(e=>e.dispose())}}t.AutoFetcher=s,s.DidInformUser=\"autofetch.didInformUser\"},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3),i=r(5),o=r(8).loadMessageBundle(r(0).join(__dirname,\"statusbar.ts\"));class s{constructor(e){this.repository=e,this._onDidChange=new n.EventEmitter,this.disposables=[],e.onDidRunGitStatus(this._onDidChange.fire,this._onDidChange,this.disposables)}get onDidChange(){return this._onDidChange.event}get command(){const e=!!this.repository.rebaseCommit,t=`$(git-branch) ${this.repository.headLabel}${e?` (${o(0,null)})`:\"\"}`;return{command:\"git.checkout\",tooltip:`${this.repository.headLabel}`,title:t,arguments:[this.repository.sourceControl]}}dispose(){this.disposables.forEach(e=>e.dispose())}}class a{constructor(e){this.repository=e,this._onDidChange=new n.EventEmitter,this.disposables=[],this._state=a.StartState,e.onDidRunGitStatus(this.onModelChange,this,this.disposables),e.onDidChangeOperations(this.onOperationsChange,this,this.disposables),i.filterEvent(n.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git.enableStatusBarSync\"))(this.updateEnablement,this,this.disposables),this.updateEnablement(),this._onDidChange.fire()}get onDidChange(){return this._onDidChange.event}get state(){return this._state}set state(e){this._state=e,this._onDidChange.fire()}updateEnablement(){const e=n.workspace.getConfiguration(\"git\",n.Uri.file(this.repository.root)).get(\"enableStatusBarSync\",!0);this.state={...this.state,enabled:e}}onOperationsChange(){const e=this.repository.operations.isRunning(\"Sync\")||this.repository.operations.isRunning(\"Push\")||this.repository.operations.isRunning(\"Pull\");this.state={...this.state,isSyncRunning:e}}onModelChange(){this.state={...this.state,hasRemotes:this.repository.remotes.length>0,HEAD:this.repository.HEAD}}get command(){if(!this.state.enabled||!this.state.hasRemotes)return;const e=this.state.HEAD;let t=\"$(sync)\",r=\"\",i=\"\",s=\"\";if(e&&e.name&&e.commit)if(e.upstream){(e.ahead||e.behind)&&(r+=this.repository.syncLabel),i=n.workspace.getConfiguration(\"git\",n.Uri.file(this.repository.root)).get(\"rebaseWhenSync\")?\"git.syncRebase\":\"git.sync\",s=o(1,null)}else t=\"$(cloud-upload)\",i=\"git.publish\",s=o(2,null);else i=\"\",s=\"\";return this.state.isSyncRunning&&(t=\"$(sync~spin)\",i=\"\",s=o(3,null)),{command:i,title:[t,r].join(\" \").trim(),tooltip:s,arguments:[this.repository.sourceControl]}}dispose(){this.disposables.forEach(e=>e.dispose())}}a.StartState={enabled:!0,isSyncRunning:!1,hasRemotes:!1,HEAD:void 0};t.StatusBarCommands=class{constructor(e){this.disposables=[],this.syncStatusBar=new a(e),this.checkoutStatusBar=new s(e)}get onDidChange(){return i.anyEvent(this.syncStatusBar.onDidChange,this.checkoutStatusBar.onDidChange)}get commands(){const e=[],t=this.checkoutStatusBar.command;t&&e.push(t);const r=this.syncStatusBar.command;return r&&e.push(r),e}dispose(){this.syncStatusBar.dispose(),this.checkoutStatusBar.dispose(),this.disposables=i.dispose(this.disposables)}}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3),i=r(0),o=r(2);t.watch=function(e){const t=o.watch(e),r=new n.EventEmitter;return t.on(\"change\",(t,o)=>r.fire(n.Uri.file(i.join(e,o)))),t.on(\"error\",e=>console.error(e)),new class{constructor(){this.event=r.event}dispose(){t.close()}}}},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(2),o=r(12),s=r(0),a=r(3),c=r(8),u=r(26),l=r(29),h=r(121),p=r(19),d=r(5),f=r(42),g=r(43),m=c.loadMessageBundle(r(0).join(__dirname,\"commands.ts\"));class y{constructor(e){this.ref=e}get shortCommit(){return(this.ref.commit||\"\").substr(0,8)}get label(){return this.ref.name||this.shortCommit}get description(){return this.shortCommit}async run(e){const t=this.ref.name;t&&await e.checkout(t)}}class v extends y{get description(){return m(0,null,this.shortCommit)}}class w extends y{get description(){return m(1,null,this.shortCommit)}async run(e){if(!this.ref.name)return;const t=await e.findTrackingBranches(this.ref.name);t.length>0?await e.checkout(t[0].name):await e.checkoutTracking(this.ref.name)}}class b{constructor(e){this.ref=e}get shortCommit(){return(this.ref.commit||\"\").substr(0,8)}get branchName(){return this.ref.name}get label(){return this.branchName||\"\"}get description(){return this.shortCommit}async run(e,t){this.branchName&&await e.deleteBranch(this.branchName,t)}}class C{constructor(e){this.ref=e}get label(){return this.ref.name||\"\"}get description(){return this.ref.name||\"\"}async run(e){await e.merge(this.ref.name||this.ref.commit)}}class _{constructor(e){this.cc=e}get label(){return\"$(plus) \"+m(2,null)}get description(){return\"\"}get alwaysShow(){return!0}async run(e){await this.cc.branch(e)}}class S{constructor(e){this.cc=e}get label(){return\"$(plus) \"+m(3,null)}get description(){return\"\"}get alwaysShow(){return!0}async run(e){await this.cc.branch(e)}}class k{constructor(e){this.repository=e}get label(){return\"HEAD\"}get description(){return(this.repository.HEAD&&this.repository.HEAD.commit||\"\").substr(0,8)}get alwaysShow(){return!0}}class T{constructor(e){this.cc=e}get label(){return\"$(plus) \"+m(4,null)}get description(){return\"\"}get alwaysShow(){return!0}async run(e){await this.cc.addRemote(e)}}const E=[];function R(e,t={}){return(r,n,i)=>{if(\"function\"!=typeof i.value)throw new Error(\"not supported\");E.push({commandId:e,key:n,method:i.value,options:t})}}async function D(e){const t=e.filter(e=>e instanceof l.Resource).filter(e=>0===e.resourceGroupType),r=e=>16===e.type||14===e.type,n=e=>13===e.type||12===e.type,i=t.filter(r),o=i.map(e=>d.grep(e.resourceUri.fsPath,/^<{7}|^={7}|^>{7}/)),s=await Promise.all(o),a=i.filter((e,t)=>!s[t]),c=t.filter(e=>n(e));return{merge:t,resolved:a,unresolved:[...t.filter(e=>!r(e)&&!n(e)),...i.filter((e,t)=>s[t])],deletionConflicts:c}}function x(e){const t=a.workspace.getConfiguration(\"git\").get(\"checkoutType\")||\"all\",r=\"all\"===t||\"tags\"===t,n=\"all\"===t||\"remote\"===t,i=e.refs.filter(e=>0===e.type).map(e=>new y(e)),o=(r?e.refs.filter(e=>2===e.type):[]).map(e=>new v(e)),s=(n?e.refs.filter(e=>1===e.type):[]).map(e=>new w(e));return[...i,...o,...s]}class I{constructor(e){this.ref=e}get label(){var e;return null!==(e=this.ref.name)&&void 0!==e?e:\"\"}get description(){var e,t;return null!==(t=null===(e=this.ref.commit)||void 0===e?void 0:e.substr(0,8))&&void 0!==t?t:\"\"}}var O;!function(e){e[e.Push=0]=\"Push\",e[e.PushTo=1]=\"PushTo\",e[e.PushFollowTags=2]=\"PushFollowTags\"}(O||(O={}));class P{constructor(e,t,r,n){this.git=e,this.model=t,this.outputChannel=r,this.telemetryReporter=n,this.disposables=E.map(({commandId:e,key:t,method:r,options:n})=>{const i=this.createCommand(e,t,r,n);return n.diff?a.commands.registerDiffInformationCommand(e,i):a.commands.registerCommand(e,i)})}async setLogLevel(){const e=e=>({label:f.LogLevel[e],logLevel:e,description:f.Log.logLevel===e?m(5,null):void 0}),t=[e(f.LogLevel.Trace),e(f.LogLevel.Debug),e(f.LogLevel.Info),e(f.LogLevel.Warning),e(f.LogLevel.Error),e(f.LogLevel.Critical),e(f.LogLevel.Off)],r=await a.window.showQuickPick(t,{placeHolder:m(6,null)});r&&(f.Log.logLevel=r.logLevel,this.outputChannel.appendLine(m(7,null,f.LogLevel[f.Log.logLevel])))}async refresh(e){await e.status()}async openResource(e){const t=this.model.getRepository(e.resourceUri);t&&(a.workspace.getConfiguration(\"git\",a.Uri.file(t.root)).get(\"openDiffOnClick\")?await this._openResource(e,void 0,!0,!1):await this.openFile(e))}async _openResource(e,t,r,n){let o,s,c;try{o=await new Promise((t,r)=>i.lstat(e.resourceUri.fsPath,(e,n)=>e?r(e):t(n)))}catch(e){}if(o&&o.isDirectory()){const t=this.model.getRepositoryForSubmodule(e.resourceUri);t&&(c=p.toGitUri(e.resourceUri,1===e.resourceGroupType?\"index\":\"wt\",{submoduleOf:t.root}))}else 13!==e.type&&(s=this.getLeftResource(e)),c=this.getRightResource(e);const u=this.getTitle(e);if(!c)return void console.error(\"oh no\");const l={preserveFocus:r,preview:t,viewColumn:a.ViewColumn.Active},h=a.window.activeTextEditor;n&&h&&h.document.uri.path===c.path&&(l.selection=h.selection),s?await a.commands.executeCommand(\"vscode.diff\",s,c,u,l):await a.commands.executeCommand(\"vscode.open\",c,l,u)}getLeftResource(e){switch(e.type){case 0:case 3:case 1:return p.toGitUri(e.original,\"HEAD\");case 5:case 7:return p.toGitUri(e.resourceUri,\"~\");case 13:return p.toGitUri(e.resourceUri,\"\")}}getRightResource(e){switch(e.type){case 0:case 1:case 4:case 3:return p.toGitUri(e.resourceUri,\"\");case 2:case 6:return p.toGitUri(e.resourceUri,\"HEAD\");case 12:return p.toGitUri(e.resourceUri,\"~3\");case 13:return p.toGitUri(e.resourceUri,\"~2\");case 5:case 7:case 8:case 9:const t=this.model.getRepository(e.resourceUri);if(!t)return;const r=e.resourceUri.toString(),[n]=t.indexGroup.resourceStates.filter(e=>e.resourceUri.toString()===r);return n&&n.renameResourceUri?n.renameResourceUri:e.resourceUri;case 14:case 16:return e.resourceUri}}getTitle(e){const t=s.basename(e.resourceUri.fsPath);switch(e.type){case 0:case 3:case 1:return m(8,null,t);case 5:case 14:case 16:return m(9,null,t);case 12:return m(10,null,t);case 13:return m(11,null,t);case 7:return m(12,null,t);default:return\"\"}}async clone(e,t){if(e||(e=await a.window.showInputBox({prompt:m(13,null),ignoreFocusOut:!0})),e){if(e=e.trim().replace(/^git\\s+clone\\s+/,\"\"),!t){let e=a.workspace.getConfiguration(\"git\").get(\"defaultCloneDirectory\")||o.homedir();e=e.replace(/^~/,o.homedir());const r=await a.window.showOpenDialog({canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1,defaultUri:a.Uri.file(e),openLabel:m(14,null)});if(!r||0===r.length)return void this.telemetryReporter.sendTelemetryEvent(\"clone\",{outcome:\"no_directory\"});const n=r[0];t=n.fsPath}try{const r={location:a.ProgressLocation.Notification,title:m(15,null,e),cancellable:!0},n=await a.window.withProgress(r,(r,n)=>this.git.clone(e,t,r,n));let i=m(16,null);const o=m(17,null),s=m(18,null),c=[o,s],u=m(19,null);a.workspace.workspaceFolders&&(i=m(20,null),c.push(u));const l=await a.window.showInformationMessage(i,...c),h=l===o;this.telemetryReporter.sendTelemetryEvent(\"clone\",{outcome:\"success\"},{openFolder:h?1:0});const p=a.Uri.file(n);h?a.commands.executeCommand(\"vscode.openFolder\",p):l===u?a.workspace.updateWorkspaceFolders(a.workspace.workspaceFolders.length,0,{uri:p}):l===s&&a.commands.executeCommand(\"vscode.openFolder\",p,!0)}catch(e){if(/already exists and is not an empty directory/.test(e&&e.stderr||\"\"))this.telemetryReporter.sendTelemetryEvent(\"clone\",{outcome:\"directory_not_empty\"});else{if(/Cancelled/i.test(e&&(e.message||e.stderr||\"\")))return;this.telemetryReporter.sendTelemetryEvent(\"clone\",{outcome:\"error\"})}throw e}}else this.telemetryReporter.sendTelemetryEvent(\"clone\",{outcome:\"no_URL\"})}async init(e=!1){let t=void 0,r=!0;if(a.workspace.workspaceFolders)if(e&&1===a.workspace.workspaceFolders.length)t=a.workspace.workspaceFolders[0].uri.fsPath,r=!1;else{const e=m(21,null),n={label:m(22,null)},i=[...a.workspace.workspaceFolders.map(e=>({label:e.name,description:e.uri.fsPath,folder:e})),n],o=await a.window.showQuickPick(i,{placeHolder:e,ignoreFocusOut:!0});if(!o)return;o.folder&&(t=o.folder.uri.fsPath,r=!1)}if(!t){const e=a.Uri.file(o.homedir()),n=a.workspace.workspaceFolders&&a.workspace.workspaceFolders.length>0?a.Uri.file(a.workspace.workspaceFolders[0].uri.fsPath):e,i=await a.window.showOpenDialog({canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1,defaultUri:n,openLabel:m(23,null)});if(!i||0===i.length)return;const s=i[0];if(e.toString().startsWith(s.toString())){const e=m(24,null);if(await a.window.showWarningMessage(m(25,null,s.fsPath),e)!==e)return}t=s.fsPath,a.workspace.workspaceFolders&&a.workspace.workspaceFolders.some(e=>e.uri.toString()===s.toString())&&(r=!1)}await this.git.init(t);let n=m(26,null);const i=m(27,null),s=m(28,null),c=[i,s];if(!r)return;const u=m(29,null);a.workspace.workspaceFolders&&(n=m(30,null),c.push(u));const l=await a.window.showInformationMessage(n,...c),h=a.Uri.file(t);l===i?a.commands.executeCommand(\"vscode.openFolder\",h):l===u?a.workspace.updateWorkspaceFolders(a.workspace.workspaceFolders.length,0,{uri:h}):l===s?a.commands.executeCommand(\"vscode.openFolder\",h,!0):await this.model.openRepository(t)}async openRepository(e){if(!e){const t=await a.window.showOpenDialog({canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1,defaultUri:a.Uri.file(o.homedir()),openLabel:m(31,null)});if(!t||0===t.length)return;e=t[0].fsPath}await this.model.openRepository(e)}async close(e){this.model.close(e)}async openFile(e,...t){const r=e instanceof l.Resource;let n;if(e instanceof a.Uri)p.isGitUri(e)?n=[a.Uri.file(p.fromGitUri(e).path)]:\"file\"===e.scheme&&(n=[e]);else{let r=e;r instanceof l.Resource||(r=this.getSCMResource()),r?n=[r,...t].filter(e=>6!==e.type&&2!==e.type).map(e=>e.resourceUri):a.window.activeTextEditor&&(n=[a.window.activeTextEditor.document.uri])}if(!n)return;const i=a.window.activeTextEditor;for(const e of n){const t={preserveFocus:r,preview:!1,viewColumn:a.ViewColumn.Active};let n;try{n=await a.workspace.openTextDocument(e)}catch(r){await a.commands.executeCommand(\"vscode.open\",e,t);continue}if(i&&i.document.uri.path===e.path){t.selection=i.selection;const e=i.visibleRanges;(await a.window.showTextDocument(n,t)).revealRange(e[0])}else await a.window.showTextDocument(n,t)}}async openFile2(e,...t){this.openFile(e,...t)}async openHEADFile(e){let t=void 0;const r=!(e instanceof l.Resource);if(!(t=e instanceof l.Resource?e:e instanceof a.Uri?this.getSCMResource(e):this.getSCMResource()))return;const n=this.getLeftResource(t),i=`${s.basename(t.resourceUri.fsPath)} (HEAD)`;if(!n)return void a.window.showWarningMessage(m(32,null,s.basename(t.resourceUri.fsPath)));const o={preview:r};return await a.commands.executeCommand(\"vscode.open\",n,o,i)}async openChange(e,...t){const r=e instanceof l.Resource,n=!(e instanceof l.Resource),i=e instanceof a.Uri||!e;let o=void 0;if(e instanceof a.Uri){const t=this.getSCMResource(e);void 0!==t&&(o=[t])}else{let r=void 0;(r=e instanceof l.Resource?e:this.getSCMResource())&&(o=[...t,r])}if(o)for(const e of o)await this._openResource(e,n,r,i)}async stage(...e){if(this.outputChannel.appendLine(`git.stage ${e.length}`),0===(e=e.filter(e=>!!e)).length||e[0]&&!(e[0].resourceUri instanceof a.Uri)){const t=this.getSCMResource();if(this.outputChannel.appendLine(`git.stage.getSCMResource ${t?t.resourceUri.toString():null}`),!t)return;e=[t]}const t=e.filter(e=>e instanceof l.Resource),{resolved:r,unresolved:n,deletionConflicts:i}=await D(t);if(n.length>0){const e=n.length>1?m(33,null,n.length):m(34,null,s.basename(n[0].resourceUri.fsPath)),t=m(35,null);if(await a.window.showWarningMessage(e,{modal:!0},t)!==t)return}try{await this.runByRepository(i.map(e=>e.resourceUri),async(e,t)=>{for(const r of t)await this._stageDeletionConflict(e,r)})}catch(e){if(/Cancelled/.test(e.message))return;throw e}const o=t.filter(e=>2===e.resourceGroupType),c=t.filter(e=>3===e.resourceGroupType),u=[...o,...c,...r,...n];if(this.outputChannel.appendLine(`git.stage.scmResources ${u.length}`),!u.length)return;const h=u.map(e=>e.resourceUri);await this.runByRepository(h,async(e,t)=>e.add(t))}async stageAll(e){const t=e.mergeGroup.resourceStates.filter(e=>e instanceof l.Resource),{merge:r,unresolved:n,deletionConflicts:i}=await D(t);try{for(const t of i)await this._stageDeletionConflict(e,t.resourceUri)}catch(e){if(/Cancelled/.test(e.message))return;throw e}if(n.length>0){const e=n.length>1?m(36,null,r.length):m(37,null,s.basename(r[0].resourceUri.fsPath)),t=m(38,null);if(await a.window.showWarningMessage(e,{modal:!0},t)!==t)return}const o=a.workspace.getConfiguration(\"git\",a.Uri.file(e.root)).get(\"untrackedChanges\");await e.add([],\"mixed\"===o?void 0:{update:!0})}async _stageDeletionConflict(e,t){const r=t.toString(),n=e.mergeGroup.resourceStates.filter(e=>e.resourceUri.toString()===r)[0];if(n)if(13===n.type){const r=m(39,null),n=m(40,null),i=await a.window.showInformationMessage(m(41,null,s.basename(t.fsPath)),{modal:!0},r,n);if(i===r)await e.add([t]);else{if(i!==n)throw new Error(\"Cancelled\");await e.rm([t])}}else if(12===n.type){const r=m(42,null),n=m(43,null),i=await a.window.showInformationMessage(m(44,null,s.basename(t.fsPath)),{modal:!0},r,n);if(i===r)await e.add([t]);else{if(i!==n)throw new Error(\"Cancelled\");await e.rm([t])}}}async stageAllTracked(e){const t=e.workingTreeGroup.resourceStates.filter(e=>7!==e.type&&8!==e.type).map(e=>e.resourceUri);await e.add(t)}async stageAllUntracked(e){const t=[...e.workingTreeGroup.resourceStates,...e.untrackedGroup.resourceStates].filter(e=>7===e.type||8===e.type).map(e=>e.resourceUri);await e.add(t)}async stageChange(e,t,r){const n=a.window.visibleTextEditors.filter(t=>t.document.uri.toString()===e.toString())[0];n&&await this._stageChanges(n,[t[r]])}async stageSelectedChanges(e){const t=a.window.activeTextEditor;if(!t)return;const r=t.document,n=h.toLineRanges(t.selections,r),i=e.map(e=>n.reduce((t,n)=>t||h.intersectDiffWithRange(r,e,n),null)).filter(e=>!!e);i.length&&await this._stageChanges(t,i)}async _stageChanges(e,t){const r=e.document,n=r.uri;if(\"file\"!==n.scheme)return;const i=p.toGitUri(n,\"~\"),o=await a.workspace.openTextDocument(i),s=h.applyLineChanges(o,r,t);await this.runByRepository(n,async(e,t)=>await e.stage(t,s))}async revertChange(e,t,r){const n=a.window.visibleTextEditors.filter(t=>t.document.uri.toString()===e.toString())[0];n&&await this._revertChanges(n,[...t.slice(0,r),...t.slice(r+1)])}async revertSelectedRanges(e){const t=a.window.activeTextEditor;if(!t)return;const r=t.document,n=t.selections,i=e.filter(e=>{const t=h.getModifiedRange(r,e);return n.every(e=>!e.intersection(t))});i.length!==e.length&&await this._revertChanges(t,i)}async _revertChanges(e,t){const r=e.document,n=r.uri;if(\"file\"!==n.scheme)return;const i=p.toGitUri(n,\"~\"),o=await a.workspace.openTextDocument(i),s=e.selections,c=e.visibleRanges,u=h.applyLineChanges(o,r,t),l=new a.WorkspaceEdit;l.replace(n,new a.Range(new a.Position(0,0),r.lineAt(r.lineCount-1).range.end),u),a.workspace.applyEdit(l),await r.save(),e.selections=s,e.revealRange(c[0])}async unstage(...e){if(0===(e=e.filter(e=>!!e)).length||e[0]&&!(e[0].resourceUri instanceof a.Uri)){const t=this.getSCMResource();if(!t)return;e=[t]}const t=e.filter(e=>e instanceof l.Resource&&1===e.resourceGroupType);if(!t.length)return;const r=t.map(e=>e.resourceUri);await this.runByRepository(r,async(e,t)=>e.revert(t))}async unstageAll(e){await e.revert([])}async unstageSelectedRanges(e){const t=a.window.activeTextEditor;if(!t)return;const r=t.document,n=r.uri;if(!p.isGitUri(n))return;const{ref:i}=p.fromGitUri(n);if(\"\"!==i)return;const o=p.toGitUri(n,\"HEAD\"),s=await a.workspace.openTextDocument(o),c=h.toLineRanges(t.selections,r),u=e.map(e=>c.reduce((t,n)=>t||h.intersectDiffWithRange(r,e,n),null)).filter(e=>!!e);if(!u.length)return;const l=u.map(h.invertLineChange),d=h.applyLineChanges(r,s,l);await this.runByRepository(n,async(e,t)=>await e.stage(t,d))}async clean(...e){if(0===(e=e.filter(e=>!!e)).length||e[0]&&!(e[0].resourceUri instanceof a.Uri)){const t=this.getSCMResource();if(!t)return;e=[t]}const t=e.filter(e=>e instanceof l.Resource&&(2===e.resourceGroupType||3===e.resourceGroupType));if(!t.length)return;const r=t.reduce((e,t)=>e+(7===t.type?1:0),0);let n,i=m(45,null);if(1===t.length?r>0?(n=m(46,null,s.basename(t[0].resourceUri.fsPath)),i=m(47,null)):6===t[0].type?(i=m(48,null),n=m(49,null,s.basename(t[0].resourceUri.fsPath))):n=m(50,null,s.basename(t[0].resourceUri.fsPath)):(t.every(e=>6===e.type)?(i=m(51,null),n=m(52,null,t.length)):n=m(53,null,t.length),r>0&&(n=`${n}\\n\\n${m(54,null,r)}`)),await a.window.showWarningMessage(n,{modal:!0},i)!==i)return;const o=t.map(e=>e.resourceUri);await this.runByRepository(o,async(e,t)=>e.clean(t))}async cleanAll(e){let t=e.workingTreeGroup.resourceStates;if(0===t.length)return;const r=t.filter(e=>7!==e.type&&8!==e.type),n=t.filter(e=>7===e.type||8===e.type);if(0===n.length)await this._cleanTrackedChanges(e,t);else if(1===t.length)await this._cleanUntrackedChange(e,t[0]);else if(0===r.length)await this._cleanUntrackedChanges(e,t);else{const i=1===n.length?m(55,null,s.basename(n[0].resourceUri.fsPath)):m(56,null,n.length),o=m(57,null,i,t.length),c=1===r.length?m(58,null,r.length):m(59,null,r.length),u=m(60,null,t.length),l=await a.window.showWarningMessage(o,{modal:!0},c,u);if(l===c)t=r;else if(l!==u)return;await e.clean(t.map(e=>e.resourceUri))}}async cleanAllTracked(e){const t=e.workingTreeGroup.resourceStates.filter(e=>7!==e.type&&8!==e.type);0!==t.length&&await this._cleanTrackedChanges(e,t)}async cleanAllUntracked(e){const t=[...e.workingTreeGroup.resourceStates,...e.untrackedGroup.resourceStates].filter(e=>7===e.type||8===e.type);0!==t.length&&(1===t.length?await this._cleanUntrackedChange(e,t[0]):await this._cleanUntrackedChanges(e,t))}async _cleanTrackedChanges(e,t){const r=1===t.length?m(61,null,s.basename(t[0].resourceUri.fsPath)):m(62,null,t.length),n=1===t.length?m(63,null):m(64,null,t.length);await a.window.showWarningMessage(r,{modal:!0},n)===n&&await e.clean(t.map(e=>e.resourceUri))}async _cleanUntrackedChange(e,t){const r=m(65,null,s.basename(t.resourceUri.fsPath)),n=m(66,null);await a.window.showWarningMessage(r,{modal:!0},n)===n&&await e.clean([t.resourceUri])}async _cleanUntrackedChanges(e,t){const r=m(67,null,t.length),n=m(68,null);await a.window.showWarningMessage(r,{modal:!0},n)===n&&await e.clean(t.map(e=>e.resourceUri))}async smartCommit(e,t,r){const n=a.workspace.getConfiguration(\"git\",a.Uri.file(e.root));let i=n.get(\"promptToSaveFilesBeforeCommit\");!0===i?i=\"always\":!1===i&&(i=\"never\");const o=!0===n.get(\"enableSmartCommit\"),c=!0===n.get(\"enableCommitSigning\"),u=0===e.indexGroup.resourceStates.length,l=0===e.workingTreeGroup.resourceStates.length;if(\"never\"!==i){let t=a.workspace.textDocuments.filter(t=>!t.isUntitled&&t.isDirty&&d.isDescendant(e.root,t.uri.fsPath));if((\"staged\"===i||e.indexGroup.resourceStates.length>0)&&(t=t.filter(t=>e.indexGroup.resourceStates.some(e=>d.pathEquals(e.resourceUri.fsPath,t.uri.fsPath)))),t.length>0){const r=1===t.length?m(69,null,s.basename(t[0].uri.fsPath)):m(70,null,t.length),n=m(71,null),i=m(72,null),o=await a.window.showWarningMessage(r,{modal:!0},n,i);if(o===n)await Promise.all(t.map(e=>e.save())),await e.add(t.map(e=>e.uri));else if(o!==i)return!1}}if(!l&&u&&!o){if(!(!0===n.get(\"suggestSmartCommit\")))return!1;const e=m(73,null),t=m(74,null),r=m(75,null),i=m(76,null),o=await a.window.showWarningMessage(e,{modal:!0},t,r,i);if(o===r)n.update(\"enableSmartCommit\",!0,!0);else{if(o===i)return n.update(\"suggestSmartCommit\",!1,!0),!1;if(o!==t)return!1}}r?!r.all&&u&&(r={...r,all:!0}):r={all:u},r.signCommit=c,n.get(\"alwaysSignOff\")&&(r.signoff=!0);const h=n.get(\"smartCommitChanges\");if((u&&l||!r.all&&u||u&&\"tracked\"===h&&e.workingTreeGroup.resourceStates.every(e=>7===e.type))&&!r.empty)return a.window.showInformationMessage(m(77,null)),!1;const p=await t();if(!p)return!1;switch(r.all&&\"tracked\"===h&&(r.all=\"tracked\"),r.all&&\"mixed\"!==n.get(\"untrackedChanges\")&&(r.all=\"tracked\"),await e.commit(p,r),n.get(\"postCommitCommand\")){case\"push\":await this._push(e,{pushType:O.Push,silent:!0});break;case\"sync\":await this.sync(e)}return!0}async commitWithAnyInput(e,t){const r=e.inputBox.value,n=await this.smartCommit(e,async()=>{let n=r;if(!n){let r=void 0;t&&t.amend&&e.HEAD&&e.HEAD.commit&&(r=(await e.getCommit(e.HEAD.commit)).message);const i=e.headShortName;let o;o=i?m(78,null,i):m(79,null),n=await a.window.showInputBox({value:r,placeHolder:o,prompt:m(80,null),ignoreFocusOut:!0})}return n},t);r&&n&&(e.inputBox.value=await e.getInputTemplate())}async commit(e){await this.commitWithAnyInput(e)}async commitStaged(e){await this.commitWithAnyInput(e,{all:!1})}async commitStagedSigned(e){await this.commitWithAnyInput(e,{all:!1,signoff:!0})}async commitStagedAmend(e){await this.commitWithAnyInput(e,{all:!1,amend:!0})}async commitAll(e){await this.commitWithAnyInput(e,{all:!0})}async commitAllSigned(e){await this.commitWithAnyInput(e,{all:!0,signoff:!0})}async commitAllAmend(e){await this.commitWithAnyInput(e,{all:!0,amend:!0})}async commitEmpty(e){const t=a.Uri.file(e.root),r=a.workspace.getConfiguration(\"git\",t);if(!0===r.get(\"confirmEmptyCommits\")){const e=m(81,null),t=m(82,null),n=m(83,null),i=await a.window.showWarningMessage(e,{modal:!0},t,n);if(i===n)await r.update(\"confirmEmptyCommits\",!1,!0);else if(i!==t)return}await this.commitWithAnyInput(e,{empty:!0})}async restoreCommitTemplate(e){e.inputBox.value=await e.getCommitTemplate()}async undoCommit(e){const t=e.HEAD;if(!t||!t.commit)return void a.window.showWarningMessage(m(84,null));const r=await e.getCommit(\"HEAD\");if(r.parents.length>1){const e=m(85,null);if(await a.window.showWarningMessage(m(86,null),{modal:!0},e)!==e)return}r.parents.length>0?await e.reset(\"HEAD~\"):(await e.deleteRef(\"HEAD\"),await this.unstageAll(e)),e.inputBox.value=r.message}async checkout(e,t){if(\"string\"==typeof t)return await e.checkout(t),!0;const r=new _(this),n=new S(this),i=[r,n,...x(e)],o=m(87,null),s=a.window.createQuickPick();s.items=i,s.placeholder=o,s.show();const c=await new Promise(e=>s.onDidAccept(()=>e(s.activeItems[0])));return s.hide(),!!c&&(c===r?await this._branch(e,s.value):c===n?await this._branch(e,s.value,!0):await c.run(e),!0)}async branch(e){await this._branch(e)}async branchFrom(e){await this._branch(e,void 0,!0)}async promptForBranchName(e,t){const r=a.workspace.getConfiguration(\"git\"),n=r.get(\"branchWhitespaceChar\"),i=r.get(\"branchValidationRegex\"),o=e=>e?e.trim().replace(/^-+/,\"\").replace(/^\\.|\\/\\.|\\.\\.|~|\\^|:|\\/$|\\.lock$|\\.lock\\/|\\\\|\\*|\\s|^\\s*$|\\.$|\\[|\\]$/g,n):e,s=e||await a.window.showInputBox({placeHolder:m(88,null),prompt:m(89,null),value:t,ignoreFocusOut:!0,validateInput:e=>{return new RegExp(i).test(o(e))?null:m(90,null,i)}});return o(s||\"\")}async _branch(e,t,r=!1){const n=await this.promptForBranchName(t);if(!n)return;let i=\"HEAD\";if(r){const t=[new k(e),...x(e)],r=m(91,null,n),o=await a.window.showQuickPick(t,{placeHolder:r});if(!o)return;i=o.label}await e.branch(n,!0,i)}async deleteBranch(e,t,r){let n;if(\"string\"==typeof t)n=(r=>e.deleteBranch(t,r));else{const r=e.HEAD&&e.HEAD.name,i=e.refs.filter(e=>0===e.type&&e.name!==r).map(e=>new b(e)),o=m(92,null),s=await a.window.showQuickPick(i,{placeHolder:o});if(!s||!s.branchName)return;t=s.branchName,n=(t=>s.run(e,t))}try{await n(r)}catch(e){if(\"BranchNotFullyMerged\"!==e.gitErrorCode)throw e;const r=m(93,null,t),i=m(94,null);await a.window.showWarningMessage(r,{modal:!0},i)===i&&await n(!0)}}async renameBranch(e){const t=e.HEAD&&e.HEAD.name,r=await this.promptForBranchName(void 0,t);if(r)try{await e.renameBranch(r)}catch(e){switch(e.gitErrorCode){case\"InvalidBranchName\":return void a.window.showErrorMessage(m(95,null));case\"BranchAlreadyExists\":return void a.window.showErrorMessage(m(96,null,r));default:throw e}}}async merge(e){const t=a.workspace.getConfiguration(\"git\").get(\"checkoutType\")||\"all\",r=\"all\"===t||\"remote\"===t,n=e.refs.filter(e=>0===e.type).filter(e=>e.name||e.commit).map(e=>new C(e)),i=(r?e.refs.filter(e=>1===e.type):[]).filter(e=>e.name||e.commit).map(e=>new C(e)),o=[...n,...i],s=m(97,null),c=await a.window.showQuickPick(o,{placeHolder:s});c&&await c.run(e)}async createTag(e){const t=await a.window.showInputBox({placeHolder:m(98,null),prompt:m(99,null),ignoreFocusOut:!0});if(!t)return;const r=await a.window.showInputBox({placeHolder:m(100,null),prompt:m(101,null),ignoreFocusOut:!0}),n=t.replace(/^\\.|\\/\\.|\\.\\.|~|\\^|:|\\/$|\\.lock$|\\.lock\\/|\\\\|\\*|\\s|^\\s*$|\\.$/g,\"-\"),i=r||n;await e.tag(n,i)}async deleteTag(e){const t=e.refs.filter(e=>2===e.type).map(e=>new I(e));if(0===t.length)return void a.window.showWarningMessage(m(102,null));const r=m(103,null),n=await a.window.showQuickPick(t,{placeHolder:r});n&&await e.deleteTag(n.label)}async fetch(e){0!==e.remotes.length?await e.fetchDefault():a.window.showWarningMessage(m(104,null))}async fetchPrune(e){0!==e.remotes.length?await e.fetchPrune():a.window.showWarningMessage(m(105,null))}async fetchAll(e){0!==e.remotes.length?await e.fetchAll():a.window.showWarningMessage(m(106,null))}async pullFrom(e){const t=e.remotes;if(0===t.length)return void a.window.showWarningMessage(m(107,null));const r=t.filter(e=>void 0!==e.fetchUrl).map(e=>({label:e.name,description:e.fetchUrl})),n=m(108,null),i=await a.window.showQuickPick(r,{placeHolder:n});if(!i)return;const o=e.refs.filter(e=>e.remote===i.label).map(e=>({label:e.name})),s=m(109,null),c=await a.window.showQuickPick(o,{placeHolder:s});if(!c)return;const u=i.label.length;await e.pullFrom(!1,i.label,c.label.slice(u+1))}async pull(e){0!==e.remotes.length?await e.pull(e.HEAD):a.window.showWarningMessage(m(110,null))}async pullRebase(e){0!==e.remotes.length?await e.pullWithRebase(e.HEAD):a.window.showWarningMessage(m(111,null))}async _push(e,t){const r=e.remotes;if(0===r.length)return void(t.silent||a.window.showWarningMessage(m(112,null)));const n=a.workspace.getConfiguration(\"git\",a.Uri.file(e.root));let i=void 0;if(t.forcePush){if(!n.get(\"allowForcePush\"))return void await a.window.showErrorMessage(m(113,null));if(i=!0===n.get(\"useForcePushWithLease\")?u.ForcePushMode.ForceWithLease:u.ForcePushMode.Force,n.get(\"confirmForcePush\")){const e=m(114,null),t=m(115,null),r=m(116,null),i=await a.window.showWarningMessage(e,{modal:!0},t,r);if(i===r)n.update(\"confirmForcePush\",!1,!0);else if(i!==t)return}}if(t.pushType!==O.PushFollowTags)if(e.HEAD&&e.HEAD.name)if(t.pushType===O.Push)try{await e.push(e.HEAD,i)}catch(r){if(\"NoUpstreamBranch\"!==r.gitErrorCode)throw r;if(t.silent)return;const n=e.HEAD.name,i=m(118,null,n),o=m(119,null);await a.window.showWarningMessage(i,{modal:!0},o)===o&&await this.publish(e)}else{const t=e.HEAD.name,n=new T(this),o=[...r.filter(e=>void 0!==e.pushUrl).map(e=>({label:e.name,description:e.pushUrl})),n],s=m(120,null,t),c=await a.window.showQuickPick(o,{placeHolder:s});if(!c)return;if(c===n){const r=await this.addRemote(e);r&&await e.pushTo(r,t,void 0,i)}else await e.pushTo(c.label,t,void 0,i)}else t.silent||a.window.showWarningMessage(m(117,null));else await e.pushFollowTags(void 0,i)}async push(e){await this._push(e,{pushType:O.Push})}async pushForce(e){await this._push(e,{pushType:O.Push,forcePush:!0})}async pushFollowTags(e){await this._push(e,{pushType:O.PushFollowTags})}async pushFollowTagsForce(e){await this._push(e,{pushType:O.PushFollowTags,forcePush:!0})}async pushTo(e){await this._push(e,{pushType:O.PushTo})}async pushToForce(e){await this._push(e,{pushType:O.PushTo,forcePush:!0})}async addRemote(e){const t=e.remotes,r=e=>(e=e.trim())&&e.replace(/^\\.|\\/\\.|\\.\\.|~|\\^|:|\\/$|\\.lock$|\\.lock\\/|\\\\|\\*|\\s|^\\s*$|\\.$|\\[|\\]$/g,\"-\"),n=await a.window.showInputBox({placeHolder:m(121,null),prompt:m(122,null),ignoreFocusOut:!0,validateInput:e=>r(e)?null:m(123,null)}),i=r(n||\"\");if(!i)return;if(t.find(e=>e.name===i))return void a.window.showErrorMessage(m(124,null,i));const o=await a.window.showInputBox({placeHolder:m(125,null),prompt:m(126,null,i),ignoreFocusOut:!0});return o?(await e.addRemote(i,o),i):void 0}async removeRemote(e){const t=e.remotes;if(0===t.length)return void a.window.showErrorMessage(m(127,null));const r=t.map(e=>e.name),n=m(128,null),i=await a.window.showQuickPick(r,{placeHolder:n});i&&await e.removeRemote(i)}async _sync(e,t){const r=e.HEAD;if(!r)return;if(!r.upstream){const t=r.name,n=m(129,null,t),i=m(130,null);return void(await a.window.showWarningMessage(n,{modal:!0},i)===i&&await this.publish(e))}const n=r.remote||r.upstream.remote,i=e.remotes.find(e=>e.name===n),o=i&&i.isReadOnly,s=a.workspace.getConfiguration(\"git\");if(!o&&!0===s.get(\"confirmSync\")){const e=m(131,null,r.upstream.remote,r.upstream.name),t=m(132,null),n=m(133,null),i=await a.window.showWarningMessage(e,{modal:!0},t,n);if(i===n)await s.update(\"confirmSync\",!1,!0);else if(i!==t)return}t?await e.syncRebase(r):await e.sync(r)}async sync(e){try{await this._sync(e,!1)}catch(e){if(/Cancelled/i.test(e&&(e.message||e.stderr||\"\")))return;throw e}}async syncAll(){await Promise.all(this.model.repositories.map(async e=>{const t=e.HEAD;t&&t.upstream&&await e.sync(t)}))}async syncRebase(e){try{await this._sync(e,!0)}catch(e){if(/Cancelled/i.test(e&&(e.message||e.stderr||\"\")))return;throw e}}async publish(e){const t=e.remotes;if(0===t.length)return void a.window.showWarningMessage(m(134,null));const r=e.HEAD&&e.HEAD.name||\"\";if(1===t.length)return await e.pushTo(t[0].name,r,!0);const n=new T(this),i=[...e.remotes.map(e=>({label:e.name,description:e.pushUrl})),n],o=m(135,null,r),s=await a.window.showQuickPick(i,{placeHolder:o});if(s)if(s===n){const t=await this.addRemote(e);t&&await e.pushTo(t,r,!0)}else await e.pushTo(s.label,r,!0)}async ignore(...e){if(0===(e=e.filter(e=>!!e)).length||e[0]&&!(e[0].resourceUri instanceof a.Uri)){const t=this.getSCMResource();if(!t)return;e=[t]}const t=e.filter(e=>e instanceof l.Resource).map(e=>e.resourceUri);t.length&&await this.runByRepository(t,async(e,t)=>e.ignore(t))}async revealInExplorer(e){e&&e.resourceUri instanceof a.Uri&&await a.commands.executeCommand(\"revealInExplorer\",e.resourceUri)}async _stash(e,t=!1){const r=0===e.workingTreeGroup.resourceStates.length&&(!t||0===e.untrackedGroup.resourceStates.length),n=0===e.indexGroup.resourceStates.length;if(r&&n)return void a.window.showInformationMessage(m(136,null));const i=await this.getStashMessage();void 0!==i&&await e.createStash(i,t)}async getStashMessage(){return await a.window.showInputBox({prompt:m(137,null),placeHolder:m(138,null)})}stash(e){return this._stash(e)}stashIncludeUntracked(e){return this._stash(e,!0)}async stashPop(e){const t=m(139,null),r=await this.pickStash(e,t);r&&await e.popStash(r.index)}async stashPopLatest(e){0!==(await e.getStashes()).length?await e.popStash():a.window.showInformationMessage(m(140,null))}async stashApply(e){const t=m(141,null),r=await this.pickStash(e,t);r&&await e.applyStash(r.index)}async stashApplyLatest(e){0!==(await e.getStashes()).length?await e.applyStash():a.window.showInformationMessage(m(142,null))}async stashDrop(e){const t=m(143,null),r=await this.pickStash(e,t);r&&await e.dropStash(r.index)}async pickStash(e,t){const r=await e.getStashes();if(0===r.length)return void a.window.showInformationMessage(m(144,null));const n=r.map(e=>({label:`#${e.index}:  ${e.description}`,description:\"\",details:\"\",stash:e})),i=await a.window.showQuickPick(n,{placeHolder:t});return i&&i.stash}async timelineOpenDiff(e,t,r){if(null==t||!g.GitTimelineItem.is(e))return;const n=s.basename(t.fsPath);let i;return i=\"HEAD\"!==e.previousRef&&\"~\"!==e.previousRef||\"\"!==e.ref?\"HEAD\"===e.previousRef&&\"~\"===e.ref?m(146,null,n):m(147,null,n,e.shortPreviousRef,e.shortRef):m(145,null,n),a.commands.executeCommand(\"vscode.diff\",p.toGitUri(t,e.previousRef),\"\"===e.ref?t:p.toGitUri(t,e.ref),i)}async timelineCopyCommitId(e,t,r){g.GitTimelineItem.is(e)&&a.env.clipboard.writeText(e.ref)}async timelineCopyCommitMessage(e,t,r){g.GitTimelineItem.is(e)&&a.env.clipboard.writeText(e.message)}createCommand(e,t,r,n){const i=(...t)=>{let i;if(n.repository){const e=this.model.getRepository(t[0]);let n;i=(n=e?Promise.resolve(e):1===this.model.repositories.length?Promise.resolve(this.model.repositories[0]):this.model.pickRepository()).then(e=>e?Promise.resolve(r.apply(this,[e,...t])):Promise.resolve())}else i=Promise.resolve(r.apply(this,t));return this.telemetryReporter.sendTelemetryEvent(\"git.command\",{command:e}),i.catch(async e=>{const t={modal:!0};let r,n=\"error\";const i=new Map,o=m(148,null),s=this.outputChannel;switch(i.set(o,()=>s.show()),e.gitErrorCode){case\"DirtyWorkTree\":r=m(149,null);break;case\"PushRejected\":r=m(150,null);break;case\"Conflict\":r=m(151,null),n=\"warning\",t.modal=!1;break;case\"StashConflict\":r=m(152,null),n=\"warning\",t.modal=!1;break;case\"NoUserNameConfigured\":case\"NoUserEmailConfigured\":r=m(153,null),i.set(m(154,null),()=>a.commands.executeCommand(\"vscode.open\",a.Uri.parse(\"https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup\")));break;default:const c=(e.stderr||e.message||String(e)).replace(/^error: /im,\"\").replace(/^> husky.*$/im,\"\").split(/[\\r\\n]/).filter(e=>!!e)[0];r=c?m(155,null,c):m(156,null)}if(!r)return void console.error(e);const c=Array.from(i.keys()),u=\"error\"===n?await a.window.showErrorMessage(r,t,...c):await a.window.showWarningMessage(r,t,...c);if(u){const e=i.get(u);e&&e()}})};return this[t]=i,i}getSCMResource(e){e=e||a.window.activeTextEditor&&a.window.activeTextEditor.document.uri,this.outputChannel.appendLine(`git.getSCMResource.uri ${e&&e.toString()}`);for(const e of this.model.repositories.map(e=>e.root))this.outputChannel.appendLine(`repo root ${e}`);if(e){if(p.isGitUri(e)){const{path:t}=p.fromGitUri(e);e=a.Uri.file(t)}if(\"file\"===e.scheme){const t=e.toString(),r=this.model.getRepository(e);if(!r)return;return r.workingTreeGroup.resourceStates.filter(e=>e.resourceUri.toString()===t)[0]||r.indexGroup.resourceStates.filter(e=>e.resourceUri.toString()===t)[0]}}}async runByRepository(e,t){const r=e instanceof a.Uri?[e]:e,n=e instanceof a.Uri,i=r.reduce((e,t)=>{let r=this.model.getRepository(t);if(!r)return console.warn(\"Could not find git repository for \",t),e;d.pathEquals(t.fsPath,r.root)&&(r=this.model.getRepositoryForSubmodule(t)||r);const n=e.filter(e=>e.repository===r)[0];return n?n.resources.push(t):e.push({repository:r,resources:[t]}),e},[]).map(({repository:e,resources:r})=>t(e,n?r[0]:r));return Promise.all(i)}dispose(){this.disposables.forEach(e=>e.dispose())}}n([R(\"git.setLogLevel\")],P.prototype,\"setLogLevel\",null),n([R(\"git.refresh\",{repository:!0})],P.prototype,\"refresh\",null),n([R(\"git.openResource\")],P.prototype,\"openResource\",null),n([R(\"git.clone\")],P.prototype,\"clone\",null),n([R(\"git.init\")],P.prototype,\"init\",null),n([R(\"git.openRepository\",{repository:!1})],P.prototype,\"openRepository\",null),n([R(\"git.close\",{repository:!0})],P.prototype,\"close\",null),n([R(\"git.openFile\")],P.prototype,\"openFile\",null),n([R(\"git.openFile2\")],P.prototype,\"openFile2\",null),n([R(\"git.openHEADFile\")],P.prototype,\"openHEADFile\",null),n([R(\"git.openChange\")],P.prototype,\"openChange\",null),n([R(\"git.stage\")],P.prototype,\"stage\",null),n([R(\"git.stageAll\",{repository:!0})],P.prototype,\"stageAll\",null),n([R(\"git.stageAllTracked\",{repository:!0})],P.prototype,\"stageAllTracked\",null),n([R(\"git.stageAllUntracked\",{repository:!0})],P.prototype,\"stageAllUntracked\",null),n([R(\"git.stageChange\")],P.prototype,\"stageChange\",null),n([R(\"git.stageSelectedRanges\",{diff:!0})],P.prototype,\"stageSelectedChanges\",null),n([R(\"git.revertChange\")],P.prototype,\"revertChange\",null),n([R(\"git.revertSelectedRanges\",{diff:!0})],P.prototype,\"revertSelectedRanges\",null),n([R(\"git.unstage\")],P.prototype,\"unstage\",null),n([R(\"git.unstageAll\",{repository:!0})],P.prototype,\"unstageAll\",null),n([R(\"git.unstageSelectedRanges\",{diff:!0})],P.prototype,\"unstageSelectedRanges\",null),n([R(\"git.clean\")],P.prototype,\"clean\",null),n([R(\"git.cleanAll\",{repository:!0})],P.prototype,\"cleanAll\",null),n([R(\"git.cleanAllTracked\",{repository:!0})],P.prototype,\"cleanAllTracked\",null),n([R(\"git.cleanAllUntracked\",{repository:!0})],P.prototype,\"cleanAllUntracked\",null),n([R(\"git.commit\",{repository:!0})],P.prototype,\"commit\",null),n([R(\"git.commitStaged\",{repository:!0})],P.prototype,\"commitStaged\",null),n([R(\"git.commitStagedSigned\",{repository:!0})],P.prototype,\"commitStagedSigned\",null),n([R(\"git.commitStagedAmend\",{repository:!0})],P.prototype,\"commitStagedAmend\",null),n([R(\"git.commitAll\",{repository:!0})],P.prototype,\"commitAll\",null),n([R(\"git.commitAllSigned\",{repository:!0})],P.prototype,\"commitAllSigned\",null),n([R(\"git.commitAllAmend\",{repository:!0})],P.prototype,\"commitAllAmend\",null),n([R(\"git.commitEmpty\",{repository:!0})],P.prototype,\"commitEmpty\",null),n([R(\"git.restoreCommitTemplate\",{repository:!0})],P.prototype,\"restoreCommitTemplate\",null),n([R(\"git.undoCommit\",{repository:!0})],P.prototype,\"undoCommit\",null),n([R(\"git.checkout\",{repository:!0})],P.prototype,\"checkout\",null),n([R(\"git.branch\",{repository:!0})],P.prototype,\"branch\",null),n([R(\"git.branchFrom\",{repository:!0})],P.prototype,\"branchFrom\",null),n([R(\"git.deleteBranch\",{repository:!0})],P.prototype,\"deleteBranch\",null),n([R(\"git.renameBranch\",{repository:!0})],P.prototype,\"renameBranch\",null),n([R(\"git.merge\",{repository:!0})],P.prototype,\"merge\",null),n([R(\"git.createTag\",{repository:!0})],P.prototype,\"createTag\",null),n([R(\"git.deleteTag\",{repository:!0})],P.prototype,\"deleteTag\",null),n([R(\"git.fetch\",{repository:!0})],P.prototype,\"fetch\",null),n([R(\"git.fetchPrune\",{repository:!0})],P.prototype,\"fetchPrune\",null),n([R(\"git.fetchAll\",{repository:!0})],P.prototype,\"fetchAll\",null),n([R(\"git.pullFrom\",{repository:!0})],P.prototype,\"pullFrom\",null),n([R(\"git.pull\",{repository:!0})],P.prototype,\"pull\",null),n([R(\"git.pullRebase\",{repository:!0})],P.prototype,\"pullRebase\",null),n([R(\"git.push\",{repository:!0})],P.prototype,\"push\",null),n([R(\"git.pushForce\",{repository:!0})],P.prototype,\"pushForce\",null),n([R(\"git.pushWithTags\",{repository:!0})],P.prototype,\"pushFollowTags\",null),n([R(\"git.pushWithTagsForce\",{repository:!0})],P.prototype,\"pushFollowTagsForce\",null),n([R(\"git.pushTo\",{repository:!0})],P.prototype,\"pushTo\",null),n([R(\"git.pushToForce\",{repository:!0})],P.prototype,\"pushToForce\",null),n([R(\"git.addRemote\",{repository:!0})],P.prototype,\"addRemote\",null),n([R(\"git.removeRemote\",{repository:!0})],P.prototype,\"removeRemote\",null),n([R(\"git.sync\",{repository:!0})],P.prototype,\"sync\",null),n([R(\"git._syncAll\")],P.prototype,\"syncAll\",null),n([R(\"git.syncRebase\",{repository:!0})],P.prototype,\"syncRebase\",null),n([R(\"git.publish\",{repository:!0})],P.prototype,\"publish\",null),n([R(\"git.ignore\")],P.prototype,\"ignore\",null),n([R(\"git.revealInExplorer\")],P.prototype,\"revealInExplorer\",null),n([R(\"git.stash\",{repository:!0})],P.prototype,\"stash\",null),n([R(\"git.stashIncludeUntracked\",{repository:!0})],P.prototype,\"stashIncludeUntracked\",null),n([R(\"git.stashPop\",{repository:!0})],P.prototype,\"stashPop\",null),n([R(\"git.stashPopLatest\",{repository:!0})],P.prototype,\"stashPopLatest\",null),n([R(\"git.stashApply\",{repository:!0})],P.prototype,\"stashApply\",null),n([R(\"git.stashApplyLatest\",{repository:!0})],P.prototype,\"stashApplyLatest\",null),n([R(\"git.stashDrop\",{repository:!0})],P.prototype,\"stashDrop\",null),n([R(\"git.timeline.openDiff\",{repository:!1})],P.prototype,\"timelineOpenDiff\",null),n([R(\"git.timeline.copyCommitId\",{repository:!1})],P.prototype,\"timelineCopyCommitId\",null),n([R(\"git.timeline.copyCommitMessage\",{repository:!1})],P.prototype,\"timelineCopyCommitMessage\",null),t.CommandCenter=P},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3);function i(e,t){return 0===t.modifiedEndLineNumber?0===t.modifiedStartLineNumber?new n.Range(e.lineAt(t.modifiedStartLineNumber).range.end,e.lineAt(t.modifiedStartLineNumber).range.start):e.lineCount===t.modifiedStartLineNumber?new n.Range(e.lineAt(t.modifiedStartLineNumber-1).range.end,e.lineAt(t.modifiedStartLineNumber-1).range.end):new n.Range(e.lineAt(t.modifiedStartLineNumber-1).range.end,e.lineAt(t.modifiedStartLineNumber).range.start):new n.Range(e.lineAt(t.modifiedStartLineNumber-1).range.start,e.lineAt(t.modifiedEndLineNumber-1).range.end)}t.applyLineChanges=function(e,t,r){const i=[];let o=0;for(let s of r){const r=0===s.originalEndLineNumber,a=0===s.modifiedEndLineNumber;let c=r?s.originalStartLineNumber:s.originalStartLineNumber-1,u=0;if(a&&s.originalStartLineNumber===e.lineCount&&(c-=1,u=e.lineAt(c).range.end.character),i.push(e.getText(new n.Range(o,0,c,u))),!a){let o=s.modifiedStartLineNumber-1,a=0;r&&s.originalStartLineNumber===e.lineCount&&(o-=1,a=t.lineAt(o).range.end.character),i.push(t.getText(new n.Range(o,a,s.modifiedEndLineNumber,0)))}o=r?s.originalStartLineNumber:s.originalEndLineNumber}return i.push(e.getText(new n.Range(o,0,e.lineCount,0))),i.join(\"\")},t.toLineRanges=function(e,t){const r=e.map(e=>{const r=t.lineAt(e.start.line),i=t.lineAt(e.end.line);return new n.Range(r.range.start,i.range.end)});r.sort((e,t)=>e.start.line-t.start.line);const i=r.reduce((e,t)=>{if(0===e.length)return e.push(t),e;const[r,...i]=e,o=t.intersection(r);return o?[o,...i]:t.start.line===r.end.line+1?[new n.Range(r.start,t.end),...i]:[t,...e]},[]);return i.reverse(),i},t.getModifiedRange=i,t.intersectDiffWithRange=function(e,t,r){const n=i(e,t),o=r.intersection(n);return o?0===t.modifiedEndLineNumber?t:{originalStartLineNumber:t.originalStartLineNumber,originalEndLineNumber:t.originalEndLineNumber,modifiedStartLineNumber:o.start.line+1,modifiedEndLineNumber:o.end.line+1}:null},t.invertLineChange=function(e){return{modifiedStartLineNumber:e.originalStartLineNumber,modifiedEndLineNumber:e.originalEndLineNumber,originalStartLineNumber:e.modifiedStartLineNumber,originalEndLineNumber:e.modifiedEndLineNumber}}},function(e,t,r){e.exports=function(){\"use strict\";var e=\"millisecond\",t=\"second\",r=\"minute\",n=\"hour\",i=\"day\",o=\"week\",s=\"month\",a=\"quarter\",c=\"year\",u=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,l=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,h=function(e,t,r){var n=String(e);return!n||n.length>=t?e:\"\"+Array(t+1-n.length).join(r)+e},p={s:h,z:function(e){var t=-e.utcOffset(),r=Math.abs(t),n=Math.floor(r/60),i=r%60;return(t<=0?\"+\":\"-\")+h(n,2,\"0\")+\":\"+h(i,2,\"0\")},m:function(e,t){var r=12*(t.year()-e.year())+(t.month()-e.month()),n=e.clone().add(r,s),i=t-n<0,o=e.clone().add(r+(i?-1:1),s);return Number(-(r+(t-n)/(i?n-o:o-n))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(u){return{M:s,y:c,w:o,d:i,h:n,m:r,s:t,ms:e,Q:a}[u]||String(u||\"\").toLowerCase().replace(/s$/,\"\")},u:function(e){return void 0===e}},d={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},f=\"en\",g={};g[f]=d;var m=function(e){return e instanceof b},y=function(e,t,r){var n;if(!e)return f;if(\"string\"==typeof e)g[e]&&(n=e),t&&(g[e]=t,n=e);else{var i=e.name;g[i]=e,n=i}return r||(f=n),n},v=function(e,t,r){if(m(e))return e.clone();var n=t?\"string\"==typeof t?{format:t,pl:r}:t:{};return n.date=e,new b(n)},w=p;w.l=y,w.i=m,w.w=function(e,t){return v(e,{locale:t.$L,utc:t.$u,$offset:t.$offset})};var b=function(){function h(e){this.$L=this.$L||y(e.locale,null,!0),this.parse(e)}var p=h.prototype;return p.parse=function(e){this.$d=function(e){var t=e.date,r=e.utc;if(null===t)return new Date(NaN);if(w.u(t))return new Date;if(t instanceof Date)return new Date(t);if(\"string\"==typeof t&&!/Z$/i.test(t)){var n=t.match(u);if(n)return r?new Date(Date.UTC(n[1],n[2]-1,n[3]||1,n[4]||0,n[5]||0,n[6]||0,n[7]||0)):new Date(n[1],n[2]-1,n[3]||1,n[4]||0,n[5]||0,n[6]||0,n[7]||0)}return new Date(t)}(e),this.init()},p.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},p.$utils=function(){return w},p.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},p.isSame=function(e,t){var r=v(e);return this.startOf(t)<=r&&r<=this.endOf(t)},p.isAfter=function(e,t){return v(e)<this.startOf(t)},p.isBefore=function(e,t){return this.endOf(t)<v(e)},p.$g=function(e,t,r){return w.u(e)?this[t]:this.set(r,e)},p.year=function(e){return this.$g(e,\"$y\",c)},p.month=function(e){return this.$g(e,\"$M\",s)},p.day=function(e){return this.$g(e,\"$W\",i)},p.date=function(e){return this.$g(e,\"$D\",\"date\")},p.hour=function(e){return this.$g(e,\"$H\",n)},p.minute=function(e){return this.$g(e,\"$m\",r)},p.second=function(e){return this.$g(e,\"$s\",t)},p.millisecond=function(t){return this.$g(t,\"$ms\",e)},p.unix=function(){return Math.floor(this.valueOf()/1e3)},p.valueOf=function(){return this.$d.getTime()},p.startOf=function(e,a){var u=this,l=!!w.u(a)||a,h=w.p(e),p=function(e,t){var r=w.w(u.$u?Date.UTC(u.$y,t,e):new Date(u.$y,t,e),u);return l?r:r.endOf(i)},d=function(e,t){return w.w(u.toDate()[e].apply(u.toDate(),(l?[0,0,0,0]:[23,59,59,999]).slice(t)),u)},f=this.$W,g=this.$M,m=this.$D,y=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return l?p(1,0):p(31,11);case s:return l?p(1,g):p(0,g+1);case o:var v=this.$locale().weekStart||0,b=(f<v?f+7:f)-v;return p(l?m-b:m+(6-b),g);case i:case\"date\":return d(y+\"Hours\",0);case n:return d(y+\"Minutes\",1);case r:return d(y+\"Seconds\",2);case t:return d(y+\"Milliseconds\",3);default:return this.clone()}},p.endOf=function(e){return this.startOf(e,!1)},p.$set=function(o,a){var u,l=w.p(o),h=\"set\"+(this.$u?\"UTC\":\"\"),p=(u={},u[i]=h+\"Date\",u.date=h+\"Date\",u[s]=h+\"Month\",u[c]=h+\"FullYear\",u[n]=h+\"Hours\",u[r]=h+\"Minutes\",u[t]=h+\"Seconds\",u[e]=h+\"Milliseconds\",u)[l],d=l===i?this.$D+(a-this.$W):a;if(l===s||l===c){var f=this.clone().set(\"date\",1);f.$d[p](d),f.init(),this.$d=f.set(\"date\",Math.min(this.$D,f.daysInMonth())).toDate()}else p&&this.$d[p](d);return this.init(),this},p.set=function(e,t){return this.clone().$set(e,t)},p.get=function(e){return this[w.p(e)]()},p.add=function(e,a){var u,l=this;e=Number(e);var h=w.p(a),p=function(t){var r=v(l);return w.w(r.date(r.date()+Math.round(t*e)),l)};if(h===s)return this.set(s,this.$M+e);if(h===c)return this.set(c,this.$y+e);if(h===i)return p(1);if(h===o)return p(7);var d=(u={},u[r]=6e4,u[n]=36e5,u[t]=1e3,u)[h]||1,f=this.$d.getTime()+e*d;return w.w(f,this)},p.subtract=function(e,t){return this.add(-1*e,t)},p.format=function(e){var t=this;if(!this.isValid())return\"Invalid Date\";var r=e||\"YYYY-MM-DDTHH:mm:ssZ\",n=w.z(this),i=this.$locale(),o=this.$H,s=this.$m,a=this.$M,c=i.weekdays,u=i.months,h=function(e,n,i,o){return e&&(e[n]||e(t,r))||i[n].substr(0,o)},p=function(e){return w.s(o%12||12,e,\"0\")},d=i.meridiem||function(e,t,r){var n=e<12?\"AM\":\"PM\";return r?n.toLowerCase():n},f={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:w.s(a+1,2,\"0\"),MMM:h(i.monthsShort,a,u,3),MMMM:u[a]||u(this,r),D:this.$D,DD:w.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,c,2),ddd:h(i.weekdaysShort,this.$W,c,3),dddd:c[this.$W],H:String(o),HH:w.s(o,2,\"0\"),h:p(1),hh:p(2),a:d(o,s,!0),A:d(o,s,!1),m:String(s),mm:w.s(s,2,\"0\"),s:String(this.$s),ss:w.s(this.$s,2,\"0\"),SSS:w.s(this.$ms,3,\"0\"),Z:n};return r.replace(l,function(e,t){return t||f[e]||n.replace(\":\",\"\")})},p.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},p.diff=function(e,u,l){var h,p=w.p(u),d=v(e),f=6e4*(d.utcOffset()-this.utcOffset()),g=this-d,m=w.m(this,d);return m=(h={},h[c]=m/12,h[s]=m,h[a]=m/3,h[o]=(g-f)/6048e5,h[i]=(g-f)/864e5,h[n]=g/36e5,h[r]=g/6e4,h[t]=g/1e3,h)[p]||g,l?m:w.a(m)},p.daysInMonth=function(){return this.endOf(s).$D},p.$locale=function(){return g[this.$L]},p.locale=function(e,t){if(!e)return this.$L;var r=this.clone(),n=y(e,t,!0);return n&&(r.$L=n),r},p.clone=function(){return w.w(this.$d,this)},p.toDate=function(){return new Date(this.valueOf())},p.toJSON=function(){return this.isValid()?this.toISOString():null},p.toISOString=function(){return this.$d.toISOString()},p.toString=function(){return this.$d.toUTCString()},h}();return v.prototype=b.prototype,v.extend=function(e,t){return e(t,b,v),v},v.locale=y,v.isDayjs=m,v.unix=function(e){return v(1e3*e)},v.en=g[f],v.Ls=g,v}()},function(e,t,r){e.exports=function(){\"use strict\";return function(e,t,r){var n=t.prototype,i=n.format;r.en.ordinal=function(e){var t=[\"th\",\"st\",\"nd\",\"rd\"],r=e%100;return\"[\"+e+(t[(r-20)%10]||t[r]||t[0])+\"]\"},n.format=function(e){var t=this,r=this.$locale(),n=this.$utils(),o=(e||\"YYYY-MM-DDTHH:mm:ssZ\").replace(/\\[([^\\]]+)]|Q|wo|ww|w|gggg|Do|X|x|k{1,2}|S/g,function(e){switch(e){case\"Q\":return Math.ceil((t.$M+1)/3);case\"Do\":return r.ordinal(t.$D);case\"gggg\":return t.weekYear();case\"wo\":return r.ordinal(t.week(),\"W\");case\"w\":case\"ww\":return n.s(t.week(),\"w\"===e?1:2,\"0\");case\"k\":case\"kk\":return n.s(String(0===t.$H?24:t.$H),\"k\"===e?1:2,\"0\");case\"X\":return Math.floor(t.$d.getTime()/1e3);case\"x\":return t.$d.getTime();default:return e}});return i.bind(this)(o)}}}()},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(3),o=r(18),s=r(19),a=r(5),c=18e4,u=3e5;class l{constructor(e){this.model=e,this._onDidChange=new i.EventEmitter,this.changedRepositoryRoots=new Set,this.cache=Object.create(null),this.disposables=[],this.disposables.push(e.onDidChangeRepository(this.onDidChangeRepository,this),e.onDidChangeOriginalResource(this.onDidChangeOriginalResource,this),i.workspace.registerTextDocumentContentProvider(\"git\",this)),setInterval(()=>this.cleanup(),u)}get onDidChange(){return this._onDidChange.event}onDidChangeRepository({repository:e}){this.changedRepositoryRoots.add(e.root),this.eventuallyFireChangeEvents()}onDidChangeOriginalResource({uri:e}){\"file\"===e.scheme&&this._onDidChange.fire(s.toGitUri(e,\"\",{replaceFileExtension:!0}))}eventuallyFireChangeEvents(){this.fireChangeEvents()}async fireChangeEvents(){if(!i.window.state.focused){const e=a.filterEvent(i.window.onDidChangeWindowState,e=>e.focused);await a.eventToPromise(e)}Object.keys(this.cache).forEach(e=>{const t=this.cache[e].uri,r=t.fsPath;for(const e of this.changedRepositoryRoots)if(a.isDescendant(e,r))return void this._onDidChange.fire(t)}),this.changedRepositoryRoots.clear()}async provideTextDocumentContent(e){let{path:t,ref:r,submoduleOf:n}=s.fromGitUri(e);if(n){const e=this.model.getRepository(n);return e?\"index\"===r?await e.diffIndexWithHEAD(t):await e.diffWithHEAD(t):\"\"}const o=this.model.getRepository(e);if(!o)return\"\";const a=e.toString(),c={uri:e,timestamp:(new Date).getTime()};if(this.cache[a]=c,\"~\"===r){const e=i.Uri.file(t).toString(),[n]=o.indexGroup.resourceStates.filter(t=>t.resourceUri.toString()===e);r=n?\"\":\"HEAD\"}else/^~\\d$/.test(r)&&(r=`:${r[1]}`);try{return await o.show(r,t)}catch(e){return\"\"}}cleanup(){const e=(new Date).getTime(),t=Object.create(null);Object.keys(this.cache).forEach(r=>{const n=this.cache[r],{path:o}=s.fromGitUri(n.uri);(i.workspace.textDocuments.filter(e=>\"file\"===e.uri.scheme).some(e=>a.pathEquals(e.uri.fsPath,o))||e-n.timestamp<c)&&(t[n.uri.toString()]=n)}),this.cache=t}dispose(){this.disposables.forEach(e=>e.dispose())}}n([o.debounce(1100)],l.prototype,\"eventuallyFireChangeEvents\",null),n([o.throttle],l.prototype,\"fireChangeEvents\",null),t.GitContentProvider=l},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(3),o=r(18),s=r(19),a=r(5),c=18e4,u=3e5;function l(e,t,r){if(\"~\"===e){const e=i.Uri.file(t).toString(),[n]=r.indexGroup.resourceStates.filter(t=>t.resourceUri.toString()===e);return n?\"\":\"HEAD\"}return/^~\\d$/.test(e)?`:${e[1]}`:e}class h{constructor(e){this.model=e,this._onDidChangeFile=new i.EventEmitter,this.onDidChangeFile=this._onDidChangeFile.event,this.changedRepositoryRoots=new Set,this.cache=new Map,this.mtime=(new Date).getTime(),this.disposables=[],this.disposables.push(e.onDidChangeRepository(this.onDidChangeRepository,this),e.onDidChangeOriginalResource(this.onDidChangeOriginalResource,this),i.workspace.registerFileSystemProvider(\"git\",this,{isReadonly:!0,isCaseSensitive:!0}),i.workspace.registerResourceLabelFormatter({scheme:\"git\",formatting:{label:\"${path} (git)\",separator:\"/\"}})),setInterval(()=>this.cleanup(),u)}onDidChangeRepository({repository:e}){this.changedRepositoryRoots.add(e.root),this.eventuallyFireChangeEvents()}onDidChangeOriginalResource({uri:e}){if(\"file\"!==e.scheme)return;const t=s.toGitUri(e,\"\",{replaceFileExtension:!0});this.mtime=(new Date).getTime(),this._onDidChangeFile.fire([{type:i.FileChangeType.Changed,uri:t}])}eventuallyFireChangeEvents(){this.fireChangeEvents()}async fireChangeEvents(){if(!i.window.state.focused){const e=a.filterEvent(i.window.onDidChangeWindowState,e=>e.focused);await a.eventToPromise(e)}const e=[];for(const{uri:t}of this.cache.values()){const r=t.fsPath;for(const n of this.changedRepositoryRoots)if(a.isDescendant(n,r)){e.push({type:i.FileChangeType.Changed,uri:t});break}}e.length>0&&(this.mtime=(new Date).getTime(),this._onDidChangeFile.fire(e)),this.changedRepositoryRoots.clear()}cleanup(){const e=(new Date).getTime(),t=new Map;for(const r of this.cache.values()){const{path:n}=s.fromGitUri(r.uri);(i.workspace.textDocuments.filter(e=>\"file\"===e.uri.scheme).some(e=>a.pathEquals(e.uri.fsPath,n))||e-r.timestamp<c)&&t.set(r.uri.toString(),r)}this.cache=t}watch(){return a.EmptyDisposable}async stat(e){const{submoduleOf:t,path:r,ref:n}=s.fromGitUri(e),o=t?this.model.getRepository(t):this.model.getRepository(e);if(!o)throw i.FileSystemError.FileNotFound();let a=0;try{a=(await o.getObjectDetails(l(n,r,o),r)).size}catch(e){}return{type:i.FileType.File,size:a,mtime:this.mtime,ctime:0}}readDirectory(){throw new Error(\"Method not implemented.\")}createDirectory(){throw new Error(\"Method not implemented.\")}async readFile(e){const{path:t,ref:r,submoduleOf:n}=s.fromGitUri(e);if(n){const e=this.model.getRepository(n);if(!e)throw i.FileSystemError.FileNotFound();const o=new TextEncoder;return\"index\"===r?o.encode(await e.diffIndexWithHEAD(t)):o.encode(await e.diffWithHEAD(t))}const o=this.model.getRepository(e);if(!o)throw i.FileSystemError.FileNotFound();const a={uri:e,timestamp:(new Date).getTime()};this.cache.set(e.toString(),a);try{return await o.buffer(l(r,t,o),t)}catch(e){return new Uint8Array(0)}}writeFile(){throw new Error(\"Method not implemented.\")}delete(){throw new Error(\"Method not implemented.\")}rename(){throw new Error(\"Method not implemented.\")}dispose(){this.disposables.forEach(e=>e.dispose())}}n([o.debounce(1100)],h.prototype,\"eventuallyFireChangeEvents\",null),n([o.throttle],h.prototype,\"fireChangeEvents\",null),t.GitFileSystemProvider=h},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(3),o=r(0),s=r(18),a=r(5);class c{constructor(e){this.model=e,this.queue=new Map,this.disposables=[],this.onDidChangeDecorations=a.fireEvent(a.anyEvent(a.filterEvent(i.workspace.onDidSaveTextDocument,e=>e.fileName.endsWith(\".gitignore\")),e.onDidOpenRepository,e.onDidCloseRepository)),this.disposables.push(i.window.registerDecorationProvider(this))}provideDecoration(e){const t=this.model.getRepository(e);if(!t)return Promise.resolve(void 0);let r=this.queue.get(t.root);return r||(r={repository:t,queue:new Map},this.queue.set(t.root,r)),new Promise((t,n)=>{r.queue.set(e.fsPath,{resolve:t,reject:n}),this.checkIgnoreSoon()}).then(e=>{if(e)return{priority:3,color:new i.ThemeColor(\"gitDecoration.ignoredResourceForeground\")}})}checkIgnoreSoon(){const e=new Map(this.queue.entries());this.queue.clear();for(const[,t]of e){const e=[...t.queue.keys()];t.repository.checkIgnore(e).then(e=>{for(const[r,n]of t.queue.entries())n.resolve(e.has(r))},e=>{\"IsInSubmodule\"!==e.gitErrorCode&&console.error(e);for(const[,r]of t.queue.entries())r.reject(e)})}}dispose(){this.disposables.forEach(e=>e.dispose()),this.queue.clear()}}n([s.debounce(500)],c.prototype,\"checkIgnoreSoon\",null);class u{constructor(e){this.repository=e,this._onDidChangeDecorations=new i.EventEmitter,this.onDidChangeDecorations=this._onDidChangeDecorations.event,this.disposables=[],this.decorations=new Map,this.disposables.push(i.window.registerDecorationProvider(this),e.onDidRunGitStatus(this.onDidRunGitStatus,this))}onDidRunGitStatus(){let e=new Map;this.collectSubmoduleDecorationData(e),this.collectDecorationData(this.repository.indexGroup,e),this.collectDecorationData(this.repository.untrackedGroup,e),this.collectDecorationData(this.repository.workingTreeGroup,e),this.collectDecorationData(this.repository.mergeGroup,e);const t=new Set([...this.decorations.keys()].concat([...e.keys()]));this.decorations=e,this._onDidChangeDecorations.fire([...t.values()].map(e=>i.Uri.parse(e,!0)))}collectDecorationData(e,t){for(const r of e.resourceStates){const e=r.resourceDecoration;e&&(t.set(r.original.toString(),e),3===r.type&&t.set(r.resourceUri.toString(),e))}}collectSubmoduleDecorationData(e){for(const t of this.repository.submodules)e.set(i.Uri.file(o.join(this.repository.root,t.path)).toString(),u.SubmoduleDecorationData)}provideDecoration(e){return this.decorations.get(e.toString())}dispose(){this.disposables.forEach(e=>e.dispose())}}u.SubmoduleDecorationData={title:\"Submodule\",letter:\"S\",color:new i.ThemeColor(\"gitDecoration.submoduleResourceForeground\")};t.GitDecorations=class{constructor(e){this.model=e,this.disposables=[],this.modelDisposables=[],this.providers=new Map,this.disposables.push(new c(e)),a.filterEvent(i.workspace.onDidChangeConfiguration,e=>e.affectsConfiguration(\"git.decorations.enabled\"))(this.update,this,this.disposables),this.update()}update(){i.workspace.getConfiguration(\"git\").get(\"decorations.enabled\")?this.enable():this.disable()}enable(){this.model.onDidOpenRepository(this.onDidOpenRepository,this,this.modelDisposables),this.model.onDidCloseRepository(this.onDidCloseRepository,this,this.modelDisposables),this.model.repositories.forEach(this.onDidOpenRepository,this)}disable(){this.modelDisposables=a.dispose(this.modelDisposables),this.providers.forEach(e=>e.dispose()),this.providers.clear()}onDidOpenRepository(e){const t=new u(e);this.providers.set(e,t)}onDidCloseRepository(e){const t=this.providers.get(e);t&&(t.dispose(),this.providers.delete(e))}dispose(){this.disable(),this.disposables=a.dispose(this.disposables)}}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3),i=r(0);t.Askpass=class{constructor(e){this.disposable=e.registerHandler(\"askpass\",this)}static getDisabledEnv(){return{GIT_ASKPASS:i.join(__dirname,\"askpass-empty.sh\")}}async handle({request:e,host:t}){const r={password:/password/i.test(e),placeHolder:e,prompt:`Git: ${t}`,ignoreFocusOut:!0};return await n.window.showInputBox(r)||\"\"}getEnv(){return{ELECTRON_RUN_AS_NODE:\"1\",GIT_ASKPASS:i.join(__dirname,\"askpass.sh\"),VSCODE_GIT_ASKPASS_NODE:process.execPath,VSCODE_GIT_ASKPASS_MAIN:i.join(__dirname,\"askpass-main.js\")}}dispose(){this.disposable.dispose()}}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),process.env.APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=!0;var n=r(2),i=r(12),o=r(0),s=r(3),a=r(129),c=function(){function e(e,t,r){var i=this;this.extensionId=e,this.extensionVersion=t,this.userOptIn=!1;var a=process.env.VSCODE_LOGS||\"\";a&&e&&\"trace\"===process.env.VSCODE_LOG_LEVEL&&(a=o.join(a,e+\".txt\"),this.logStream=n.createWriteStream(a,{flags:\"a\",encoding:\"utf8\",autoClose:!0})),this.updateUserOptIn(r),this.configListener=s.workspace.onDidChangeConfiguration(function(){return i.updateUserOptIn(r)})}return e.prototype.updateUserOptIn=function(t){var r=s.workspace.getConfiguration(e.TELEMETRY_CONFIG_ID);this.userOptIn!==r.get(e.TELEMETRY_CONFIG_ENABLED_ID,!0)&&(this.userOptIn=r.get(e.TELEMETRY_CONFIG_ENABLED_ID,!0),this.userOptIn?this.createAppInsightsClient(t):this.dispose())},e.prototype.createAppInsightsClient=function(e){a.defaultClient?(this.appInsightsClient=new a.TelemetryClient(e),this.appInsightsClient.channel.setUseDiskRetryCaching(!0)):(a.setup(e).setAutoCollectRequests(!1).setAutoCollectPerformance(!1).setAutoCollectExceptions(!1).setAutoCollectDependencies(!1).setAutoDependencyCorrelation(!1).setAutoCollectConsole(!1).setUseDiskRetryCaching(!0).start(),this.appInsightsClient=a.defaultClient),this.appInsightsClient.commonProperties=this.getCommonProperties(),s&&s.env&&(this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.userId]=s.env.machineId,this.appInsightsClient.context.tags[this.appInsightsClient.context.keys.sessionId]=s.env.sessionId),e&&0===e.indexOf(\"AIF-\")&&(this.appInsightsClient.config.endpointUrl=\"https://vortex.data.microsoft.com/collect/v1\")},e.prototype.getCommonProperties=function(){var e=Object.create(null);return e[\"common.os\"]=i.platform(),e[\"common.platformversion\"]=(i.release()||\"\").replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/,\"$1$2$3\"),e[\"common.extname\"]=this.extensionId,e[\"common.extversion\"]=this.extensionVersion,s&&s.env&&(e[\"common.vscodemachineid\"]=s.env.machineId,e[\"common.vscodesessionid\"]=s.env.sessionId,e[\"common.vscodeversion\"]=s.version),e},e.prototype.sendTelemetryEvent=function(e,t,r){this.userOptIn&&e&&this.appInsightsClient&&(this.appInsightsClient.trackEvent({name:this.extensionId+\"/\"+e,properties:t,measurements:r}),this.logStream&&this.logStream.write(\"telemetry/\"+e+\" \"+JSON.stringify({properties:t,measurements:r})+\"\\n\"))},e.prototype.dispose=function(){var e=this;this.configListener.dispose();var t=new Promise(function(t){if(!e.logStream)return t(void 0);e.logStream.on(\"finish\",t),e.logStream.end()}),r=new Promise(function(t){e.appInsightsClient?e.appInsightsClient.flush({callback:function(){e.appInsightsClient=void 0,t(void 0)}}):t(void 0)});return Promise.all([r,t])},e.TELEMETRY_CONFIG_ID=\"telemetry\",e.TELEMETRY_CONFIG_ENABLED_ID=\"enableTelemetry\",e}();t.default=c},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(23),i=r(147),o=r(168),s=r(51),a=r(31),c=r(53),u=r(6);t.TelemetryClient=r(176),t.Contracts=r(7);var l,h,p,d,f,g=!0,m=!1,y=!0,v=!0,w=!0,b=!0,C=!0,_=!0,S=void 0,k=void 0,T=!1;function E(){return t.defaultClient?(T=!0,l.enable(g,m),h.enable(y),p.enable(v),d.useAutoCorrelation(_),d.enable(w),f.enable(b)):u.warn(\"Start cannot be called before setup\"),R}t.setup=function(e){return t.defaultClient?u.info(\"The default client is already setup\"):(t.defaultClient=new t.TelemetryClient(e),l=new i(t.defaultClient),h=new o(t.defaultClient),p=new s(t.defaultClient),d=new c(t.defaultClient),f=new a(t.defaultClient)),t.defaultClient&&t.defaultClient.channel&&t.defaultClient.channel.setUseDiskRetryCaching(C,S,k),R},t.start=E,t.getCorrelationContext=function(){return _?n.CorrelationContextManager.getCurrentContext():null},t.wrapWithCorrelationContext=function(e){return n.CorrelationContextManager.wrapCallback(e)};var R=function(){function e(){}return e.setAutoCollectConsole=function(t,r){return void 0===r&&(r=!1),g=t,m=r,T&&l.enable(t,r),e},e.setAutoCollectExceptions=function(t){return y=t,T&&h.enable(t),e},e.setAutoCollectPerformance=function(t){return v=t,T&&p.enable(t),e},e.setAutoCollectRequests=function(t){return w=t,T&&d.enable(t),e},e.setAutoCollectDependencies=function(t){return b=t,T&&f.enable(t),e},e.setAutoDependencyCorrelation=function(t){return _=t,T&&d.useAutoCorrelation(t),e},e.setUseDiskRetryCaching=function(r,n,i){return C=r,S=n,k=i,t.defaultClient&&t.defaultClient.channel&&t.defaultClient.channel.setUseDiskRetryCaching(r,n,i),e},e.setInternalLogging=function(t,r){return void 0===t&&(t=!1),void 0===r&&(r=!0),u.enableDebug=t,u.disableWarnings=!r,e},e.start=E,e}();t.Configuration=R,t.dispose=function(){t.defaultClient=null,T=!1,l&&l.dispose(),h&&h.dispose(),p&&p.dispose(),d&&d.dispose(),f&&f.dispose()}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(131);t.bunyan=n;var i=r(134);t.console=i;var o=r(136);t.mongodbCore=o;var s=r(137);t.mongodb=s;var a=r(138);t.mysql=a;var c=r(141);t.pgPool=c;var u=r(142);t.pg=u;var l=r(143);t.redis=l;var h=r(144);t.winston=h,t.enable=function(){n.enable(),i.enable(),o.enable(),s.enable(),a.enable(),u.enable(),c.enable(),l.enable(),h.enable()}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4);t.bunyan={versionSpecifier:\">= 1.0.0 < 2.0.0\",patch:function(e){var t=e.prototype._emit;return e.prototype._emit=function(e,r){var i=t.apply(this,arguments);if(!r){var o=i;o||(o=t.call(this,e,!0)),n.channel.publish(\"bunyan\",{level:e.level,result:o})}return i},e}},t.enable=function(){n.channel.registerMonkeyPatch(\"bunyan\",t.bunyan)}},function(e,t){var r;t=e.exports=V,r=\"object\"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},t.SEMVER_SPEC_VERSION=\"2.0.0\";var n=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,o=t.re=[],s=t.src=[],a=0,c=a++;s[c]=\"0|[1-9]\\\\d*\";var u=a++;s[u]=\"[0-9]+\";var l=a++;s[l]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\";var h=a++;s[h]=\"(\"+s[c]+\")\\\\.(\"+s[c]+\")\\\\.(\"+s[c]+\")\";var p=a++;s[p]=\"(\"+s[u]+\")\\\\.(\"+s[u]+\")\\\\.(\"+s[u]+\")\";var d=a++;s[d]=\"(?:\"+s[c]+\"|\"+s[l]+\")\";var f=a++;s[f]=\"(?:\"+s[u]+\"|\"+s[l]+\")\";var g=a++;s[g]=\"(?:-(\"+s[d]+\"(?:\\\\.\"+s[d]+\")*))\";var m=a++;s[m]=\"(?:-?(\"+s[f]+\"(?:\\\\.\"+s[f]+\")*))\";var y=a++;s[y]=\"[0-9A-Za-z-]+\";var v=a++;s[v]=\"(?:\\\\+(\"+s[y]+\"(?:\\\\.\"+s[y]+\")*))\";var w=a++,b=\"v?\"+s[h]+s[g]+\"?\"+s[v]+\"?\";s[w]=\"^\"+b+\"$\";var C=\"[v=\\\\s]*\"+s[p]+s[m]+\"?\"+s[v]+\"?\",_=a++;s[_]=\"^\"+C+\"$\";var S=a++;s[S]=\"((?:<|>)?=?)\";var k=a++;s[k]=s[u]+\"|x|X|\\\\*\";var T=a++;s[T]=s[c]+\"|x|X|\\\\*\";var E=a++;s[E]=\"[v=\\\\s]*(\"+s[T]+\")(?:\\\\.(\"+s[T]+\")(?:\\\\.(\"+s[T]+\")(?:\"+s[g]+\")?\"+s[v]+\"?)?)?\";var R=a++;s[R]=\"[v=\\\\s]*(\"+s[k]+\")(?:\\\\.(\"+s[k]+\")(?:\\\\.(\"+s[k]+\")(?:\"+s[m]+\")?\"+s[v]+\"?)?)?\";var D=a++;s[D]=\"^\"+s[S]+\"\\\\s*\"+s[E]+\"$\";var x=a++;s[x]=\"^\"+s[S]+\"\\\\s*\"+s[R]+\"$\";var I=a++;s[I]=\"(?:^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\";var O=a++;s[O]=\"(?:~>?)\";var P=a++;s[P]=\"(\\\\s*)\"+s[O]+\"\\\\s+\",o[P]=new RegExp(s[P],\"g\");var A=a++;s[A]=\"^\"+s[O]+s[E]+\"$\";var M=a++;s[M]=\"^\"+s[O]+s[R]+\"$\";var L=a++;s[L]=\"(?:\\\\^)\";var N=a++;s[N]=\"(\\\\s*)\"+s[L]+\"\\\\s+\",o[N]=new RegExp(s[N],\"g\");var F=a++;s[F]=\"^\"+s[L]+s[E]+\"$\";var j=a++;s[j]=\"^\"+s[L]+s[R]+\"$\";var G=a++;s[G]=\"^\"+s[S]+\"\\\\s*(\"+C+\")$|^$\";var B=a++;s[B]=\"^\"+s[S]+\"\\\\s*(\"+b+\")$|^$\";var U=a++;s[U]=\"(\\\\s*)\"+s[S]+\"\\\\s*(\"+C+\"|\"+s[E]+\")\",o[U]=new RegExp(s[U],\"g\");var q=a++;s[q]=\"^\\\\s*(\"+s[E]+\")\\\\s+-\\\\s+(\"+s[E]+\")\\\\s*$\";var H=a++;s[H]=\"^\\\\s*(\"+s[R]+\")\\\\s+-\\\\s+(\"+s[R]+\")\\\\s*$\";var $=a++;s[$]=\"(<|>)?=?\\\\s*\\\\*\";for(var W=0;W<a;W++)r(W,s[W]),o[W]||(o[W]=new RegExp(s[W]));function z(e,t){if(e instanceof V)return e;if(\"string\"!=typeof e)return null;if(e.length>n)return null;if(!(t?o[_]:o[w]).test(e))return null;try{return new V(e,t)}catch(e){return null}}function V(e,t){if(e instanceof V){if(e.loose===t)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>n)throw new TypeError(\"version is longer than \"+n+\" characters\");if(!(this instanceof V))return new V(e,t);r(\"SemVer\",e,t),this.loose=t;var s=e.trim().match(t?o[_]:o[w]);if(!s)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+s[1],this.minor=+s[2],this.patch=+s[3],this.major>i||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>i||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>i||this.patch<0)throw new TypeError(\"Invalid patch version\");s[4]?this.prerelease=s[4].split(\".\").map(function(e){if(/^[0-9]+$/.test(e)){var t=+e;if(t>=0&&t<i)return t}return e}):this.prerelease=[],this.build=s[5]?s[5].split(\".\"):[],this.format()}t.parse=z,t.valid=function(e,t){var r=z(e,t);return r?r.version:null},t.clean=function(e,t){var r=z(e.trim().replace(/^[=v]+/,\"\"),t);return r?r.version:null},t.SemVer=V,V.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},V.prototype.toString=function(){return this.version},V.prototype.compare=function(e){return r(\"SemVer.compare\",this.version,this.loose,e),e instanceof V||(e=new V(e,this.loose)),this.compareMain(e)||this.comparePre(e)},V.prototype.compareMain=function(e){return e instanceof V||(e=new V(e,this.loose)),Y(this.major,e.major)||Y(this.minor,e.minor)||Y(this.patch,e.patch)},V.prototype.comparePre=function(e){if(e instanceof V||(e=new V(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var t=0;do{var n=this.prerelease[t],i=e.prerelease[t];if(r(\"prerelease compare\",t,n,i),void 0===n&&void 0===i)return 0;if(void 0===i)return 1;if(void 0===n)return-1;if(n!==i)return Y(n,i)}while(++t)},V.prototype.inc=function(e,t){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",t);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",t);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",t),this.inc(\"pre\",t);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",t),this.inc(\"pre\",t);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var r=this.prerelease.length;--r>=0;)\"number\"==typeof this.prerelease[r]&&(this.prerelease[r]++,r=-2);-1===r&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},t.inc=function(e,t,r,n){\"string\"==typeof r&&(n=r,r=void 0);try{return new V(e,r).inc(t,n).version}catch(e){return null}},t.diff=function(e,t){if(Q(e,t))return null;var r=z(e),n=z(t);if(r.prerelease.length||n.prerelease.length){for(var i in r)if((\"major\"===i||\"minor\"===i||\"patch\"===i)&&r[i]!==n[i])return\"pre\"+i;return\"prerelease\"}for(var i in r)if((\"major\"===i||\"minor\"===i||\"patch\"===i)&&r[i]!==n[i])return i},t.compareIdentifiers=Y;var Z=/^[0-9]+$/;function Y(e,t){var r=Z.test(e),n=Z.test(t);return r&&n&&(e=+e,t=+t),r&&!n?-1:n&&!r?1:e<t?-1:e>t?1:0}function K(e,t,r){return new V(e,r).compare(new V(t,r))}function J(e,t,r){return K(e,t,r)>0}function X(e,t,r){return K(e,t,r)<0}function Q(e,t,r){return 0===K(e,t,r)}function ee(e,t,r){return 0!==K(e,t,r)}function te(e,t,r){return K(e,t,r)>=0}function re(e,t,r){return K(e,t,r)<=0}function ne(e,t,r,n){var i;switch(t){case\"===\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof r&&(r=r.version),i=e===r;break;case\"!==\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof r&&(r=r.version),i=e!==r;break;case\"\":case\"=\":case\"==\":i=Q(e,r,n);break;case\"!=\":i=ee(e,r,n);break;case\">\":i=J(e,r,n);break;case\">=\":i=te(e,r,n);break;case\"<\":i=X(e,r,n);break;case\"<=\":i=re(e,r,n);break;default:throw new TypeError(\"Invalid operator: \"+t)}return i}function ie(e,t){if(e instanceof ie){if(e.loose===t)return e;e=e.value}if(!(this instanceof ie))return new ie(e,t);r(\"comparator\",e,t),this.loose=t,this.parse(e),this.semver===oe?this.value=\"\":this.value=this.operator+this.semver.version,r(\"comp\",this)}t.rcompareIdentifiers=function(e,t){return Y(t,e)},t.major=function(e,t){return new V(e,t).major},t.minor=function(e,t){return new V(e,t).minor},t.patch=function(e,t){return new V(e,t).patch},t.compare=K,t.compareLoose=function(e,t){return K(e,t,!0)},t.rcompare=function(e,t,r){return K(t,e,r)},t.sort=function(e,r){return e.sort(function(e,n){return t.compare(e,n,r)})},t.rsort=function(e,r){return e.sort(function(e,n){return t.rcompare(e,n,r)})},t.gt=J,t.lt=X,t.eq=Q,t.neq=ee,t.gte=te,t.lte=re,t.cmp=ne,t.Comparator=ie;var oe={};function se(e,t){if(e instanceof se)return e.loose===t?e:new se(e.raw,t);if(e instanceof ie)return new se(e.value,t);if(!(this instanceof se))return new se(e,t);if(this.loose=t,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length}),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function ae(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function ce(e,t,r,n,i,o,s,a,c,u,l,h,p){return((t=ae(r)?\"\":ae(n)?\">=\"+r+\".0.0\":ae(i)?\">=\"+r+\".\"+n+\".0\":\">=\"+t)+\" \"+(a=ae(c)?\"\":ae(u)?\"<\"+(+c+1)+\".0.0\":ae(l)?\"<\"+c+\".\"+(+u+1)+\".0\":h?\"<=\"+c+\".\"+u+\".\"+l+\"-\"+h:\"<=\"+a)).trim()}function ue(e,t){for(var n=0;n<e.length;n++)if(!e[n].test(t))return!1;if(t.prerelease.length){for(n=0;n<e.length;n++)if(r(e[n].semver),e[n].semver!==oe&&e[n].semver.prerelease.length>0){var i=e[n].semver;if(i.major===t.major&&i.minor===t.minor&&i.patch===t.patch)return!0}return!1}return!0}function le(e,t,r){try{t=new se(t,r)}catch(e){return!1}return t.test(e)}function he(e,t,r,n){var i,o,s,a,c;switch(e=new V(e,n),t=new se(t,n),r){case\">\":i=J,o=re,s=X,a=\">\",c=\">=\";break;case\"<\":i=X,o=te,s=J,a=\"<\",c=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(le(e,t,n))return!1;for(var u=0;u<t.set.length;++u){var l=null,h=null;if(t.set[u].forEach(function(e){e.semver===oe&&(e=new ie(\">=0.0.0\")),l=l||e,h=h||e,i(e.semver,l.semver,n)?l=e:s(e.semver,h.semver,n)&&(h=e)}),l.operator===a||l.operator===c)return!1;if((!h.operator||h.operator===a)&&o(e,h.semver))return!1;if(h.operator===c&&s(e,h.semver))return!1}return!0}ie.prototype.parse=function(e){var t=this.loose?o[G]:o[B],r=e.match(t);if(!r)throw new TypeError(\"Invalid comparator: \"+e);this.operator=r[1],\"=\"===this.operator&&(this.operator=\"\"),r[2]?this.semver=new V(r[2],this.loose):this.semver=oe},ie.prototype.toString=function(){return this.value},ie.prototype.test=function(e){return r(\"Comparator.test\",e,this.loose),this.semver===oe||(\"string\"==typeof e&&(e=new V(e,this.loose)),ne(e,this.operator,this.semver,this.loose))},ie.prototype.intersects=function(e,t){if(!(e instanceof ie))throw new TypeError(\"a Comparator is required\");var r;if(\"\"===this.operator)return r=new se(e.value,t),le(this.value,r,t);if(\"\"===e.operator)return r=new se(this.value,t),le(e.semver,r,t);var n=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),i=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),o=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=ne(this.semver,\"<\",e.semver,t)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),c=ne(this.semver,\">\",e.semver,t)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return n||i||o&&s||a||c},t.Range=se,se.prototype.format=function(){return this.range=this.set.map(function(e){return e.join(\" \").trim()}).join(\"||\").trim(),this.range},se.prototype.toString=function(){return this.range},se.prototype.parseRange=function(e){var t=this.loose;e=e.trim(),r(\"range\",e,t);var n=t?o[H]:o[q];e=e.replace(n,ce),r(\"hyphen replace\",e),e=e.replace(o[U],\"$1$2$3\"),r(\"comparator trim\",e,o[U]),e=(e=(e=e.replace(o[P],\"$1~\")).replace(o[N],\"$1^\")).split(/\\s+/).join(\" \");var i=t?o[G]:o[B],s=e.split(\" \").map(function(e){return function(e,t){return r(\"comp\",e),e=function(e,t){return e.trim().split(/\\s+/).map(function(e){return function(e,t){r(\"caret\",e,t);var n=t?o[j]:o[F];return e.replace(n,function(t,n,i,o,s){var a;return r(\"caret\",e,t,n,i,o,s),ae(n)?a=\"\":ae(i)?a=\">=\"+n+\".0.0 <\"+(+n+1)+\".0.0\":ae(o)?a=\"0\"===n?\">=\"+n+\".\"+i+\".0 <\"+n+\".\"+(+i+1)+\".0\":\">=\"+n+\".\"+i+\".0 <\"+(+n+1)+\".0.0\":s?(r(\"replaceCaret pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\"0\"===n?\"0\"===i?\">=\"+n+\".\"+i+\".\"+o+s+\" <\"+n+\".\"+i+\".\"+(+o+1):\">=\"+n+\".\"+i+\".\"+o+s+\" <\"+n+\".\"+(+i+1)+\".0\":\">=\"+n+\".\"+i+\".\"+o+s+\" <\"+(+n+1)+\".0.0\"):(r(\"no pr\"),a=\"0\"===n?\"0\"===i?\">=\"+n+\".\"+i+\".\"+o+\" <\"+n+\".\"+i+\".\"+(+o+1):\">=\"+n+\".\"+i+\".\"+o+\" <\"+n+\".\"+(+i+1)+\".0\":\">=\"+n+\".\"+i+\".\"+o+\" <\"+(+n+1)+\".0.0\"),r(\"caret return\",a),a})}(e,t)}).join(\" \")}(e,t),r(\"caret\",e),e=function(e,t){return e.trim().split(/\\s+/).map(function(e){return function(e,t){var n=t?o[M]:o[A];return e.replace(n,function(t,n,i,o,s){var a;return r(\"tilde\",e,t,n,i,o,s),ae(n)?a=\"\":ae(i)?a=\">=\"+n+\".0.0 <\"+(+n+1)+\".0.0\":ae(o)?a=\">=\"+n+\".\"+i+\".0 <\"+n+\".\"+(+i+1)+\".0\":s?(r(\"replaceTilde pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\">=\"+n+\".\"+i+\".\"+o+s+\" <\"+n+\".\"+(+i+1)+\".0\"):a=\">=\"+n+\".\"+i+\".\"+o+\" <\"+n+\".\"+(+i+1)+\".0\",r(\"tilde return\",a),a})}(e,t)}).join(\" \")}(e,t),r(\"tildes\",e),e=function(e,t){return r(\"replaceXRanges\",e,t),e.split(/\\s+/).map(function(e){return function(e,t){e=e.trim();var n=t?o[x]:o[D];return e.replace(n,function(t,n,i,o,s,a){r(\"xRange\",e,t,n,i,o,s,a);var c=ae(i),u=c||ae(o),l=u||ae(s),h=l;return\"=\"===n&&h&&(n=\"\"),c?t=\">\"===n||\"<\"===n?\"<0.0.0\":\"*\":n&&h?(u&&(o=0),l&&(s=0),\">\"===n?(n=\">=\",u?(i=+i+1,o=0,s=0):l&&(o=+o+1,s=0)):\"<=\"===n&&(n=\"<\",u?i=+i+1:o=+o+1),t=n+i+\".\"+o+\".\"+s):u?t=\">=\"+i+\".0.0 <\"+(+i+1)+\".0.0\":l&&(t=\">=\"+i+\".\"+o+\".0 <\"+i+\".\"+(+o+1)+\".0\"),r(\"xRange return\",t),t})}(e,t)}).join(\" \")}(e,t),r(\"xrange\",e),e=function(e,t){return r(\"replaceStars\",e,t),e.trim().replace(o[$],\"\")}(e,t),r(\"stars\",e),e}(e,t)}).join(\" \").split(/\\s+/);return this.loose&&(s=s.filter(function(e){return!!e.match(i)})),s=s.map(function(e){return new ie(e,t)})},se.prototype.intersects=function(e,t){if(!(e instanceof se))throw new TypeError(\"a Range is required\");return this.set.some(function(r){return r.every(function(r){return e.set.some(function(e){return e.every(function(e){return r.intersects(e,t)})})})})},t.toComparators=function(e,t){return new se(e,t).set.map(function(e){return e.map(function(e){return e.value}).join(\" \").trim().split(\" \")})},se.prototype.test=function(e){if(!e)return!1;\"string\"==typeof e&&(e=new V(e,this.loose));for(var t=0;t<this.set.length;t++)if(ue(this.set[t],e))return!0;return!1},t.satisfies=le,t.maxSatisfying=function(e,t,r){var n=null,i=null;try{var o=new se(t,r)}catch(e){return null}return e.forEach(function(e){o.test(e)&&(n&&-1!==i.compare(e)||(i=new V(n=e,r)))}),n},t.minSatisfying=function(e,t,r){var n=null,i=null;try{var o=new se(t,r)}catch(e){return null}return e.forEach(function(e){o.test(e)&&(n&&1!==i.compare(e)||(i=new V(n=e,r)))}),n},t.validRange=function(e,t){try{return new se(e,t).range||\"*\"}catch(e){return null}},t.ltr=function(e,t,r){return he(e,t,\"<\",r)},t.gtr=function(e,t,r){return he(e,t,\">\",r)},t.outside=he,t.prerelease=function(e,t){var r=z(e,t);return r&&r.prerelease.length?r.prerelease:null},t.intersects=function(e,t,r){return e=new se(e,r),t=new se(t,r),e.intersects(t)},t.coerce=function(e){if(e instanceof V)return e;if(\"string\"!=typeof e)return null;var t=e.match(o[I]);return null==t?null:z((t[1]||\"0\")+\".\"+(t[2]||\"0\")+\".\"+(t[3]||\"0\"))}},function(e){e.exports={name:\"diagnostic-channel\",version:\"0.2.0\",main:\"./dist/src/channel.js\",types:\"./dist/src/channel.d.ts\",scripts:{build:\"tsc\",lint:\"tslint -c tslint.json -p tsconfig.json\",clean:\"rimraf ./dist\",test:\"mocha ./dist/tests/**/*.js\"},homepage:\"https://github.com/Microsoft/node-diagnostic-channel\",bugs:{url:\"https://github.com/Microsoft/node-diagnostic-channel/issues\"},repository:{type:\"git\",url:\"https://github.com/Microsoft/node-diagnostic-channel.git\"},description:\"Provides a context-saving pub/sub channel to connect diagnostic event publishers and subscribers\",dependencies:{semver:\"^5.3.0\"},devDependencies:{\"@types/mocha\":\"^2.2.40\",\"@types/node\":\"^7.0.12\",mocha:\"^3.2.0\",rimraf:\"^2.6.1\",tslint:\"^5.0.0\",typescript:\"^2.2.1\"},files:[\"dist/src/**/*.d.ts\",\"dist/src/**/*.js\",\"LICENSE\",\"README.md\",\"package.json\"],license:\"MIT\"}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4),i=r(22);t.console={versionSpecifier:\">= 4.0.0\",patch:function(e){var t=new i.Writable,r=new i.Writable;t.write=function(e){if(!e)return!0;var t=e.toString();return n.channel.publish(\"console\",{message:t}),!0},r.write=function(e){if(!e)return!0;var t=e.toString();return n.channel.publish(\"console\",{message:t,stderr:!0}),!0};for(var o=new e.Console(t,r),s=function(t){var r=e[t];r&&(e[t]=function(){if(o[t])try{o[t].apply(o,arguments)}catch(e){}return r.apply(e,arguments)})},a=0,c=[\"log\",\"info\",\"warn\",\"error\",\"dir\",\"time\",\"timeEnd\",\"trace\",\"assert\"];a<c.length;a++)s(c[a]);return e}},t.enable=function(){n.channel.registerMonkeyPatch(\"console\",t.console),r(135)}},function(e,t){e.exports=require(\"console\")},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4);t.mongoCore2={versionSpecifier:\">= 2.0.0 < 2.2.0\",patch:function(e){var t=e.Server.prototype.connect;return e.Server.prototype.connect=function(){var e=t.apply(this,arguments),r=this.s.pool.write;this.s.pool.write=function(){var e=\"function\"==typeof arguments[1]?1:2;return\"function\"==typeof arguments[e]&&(arguments[e]=n.channel.bindToContext(arguments[e])),r.apply(this,arguments)};var i=this.s.pool.logout;return this.s.pool.logout=function(){return\"function\"==typeof arguments[1]&&(arguments[1]=n.channel.bindToContext(arguments[1])),i.apply(this,arguments)},e},e}},t.enable=function(){n.channel.registerMonkeyPatch(\"mongodb-core\",t.mongoCore2)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4);t.mongo2={versionSpecifier:\">= 2.0.0 <= 2.2.x\",patch:function(e){var t=e.instrument({operationIdGenerator:{next:function(){return n.channel.bindToContext(function(e){return e()})}}}),r={};return t.on(\"started\",function(e){r[e.requestId]||(r[e.requestId]=e)}),t.on(\"succeeded\",function(e){var t=r[e.requestId];t&&delete r[e.requestId],e.operationId(function(){return n.channel.publish(\"mongodb\",{startedData:t,event:e,succeeded:!0})})}),t.on(\"failed\",function(e){var t=r[e.requestId];t&&delete r[e.requestId],e.operationId(function(){return n.channel.publish(\"mongodb\",{startedData:t,event:e,succeeded:!1})})}),e}},t.enable=function(){n.channel.registerMonkeyPatch(\"mongodb\",t.mongo2)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4),i=r(0);t.mysql={versionSpecifier:\">= 2.0.0 <= 2.14.x\",patch:function(e,t){var o=function(e,t){return function(t,r){var i=e[t];i&&(e[t]=function(){for(var e=arguments.length-1,t=arguments.length-1;t>=0;--t){if(\"function\"==typeof arguments[t]){e=t;break}if(void 0!==arguments[t])break}var o=arguments[e],s={result:null,startTime:null};\"function\"==typeof o&&(r?(s.startTime=process.hrtime(),arguments[e]=n.channel.bindToContext(r(s,o))):arguments[e]=n.channel.bindToContext(o));var a=i.apply(this,arguments);return s.result=a,a})}},s=function(e,t){return o(e.prototype)},a=r(139)(i.dirname(t)+\"/lib/Connection\");[\"connect\",\"changeUser\",\"ping\",\"statistics\",\"end\"].forEach(function(e){return s(a)(e)}),o(a)(\"createQuery\",function(e,t){return function(r){var i=process.hrtime(e.startTime),o=1e3*i[0]+i[1]/1e6|0;n.channel.publish(\"mysql\",{query:e.result,callbackArgs:arguments,err:r,duration:o}),t.apply(this,arguments)}});var c=r(140)(i.dirname(t)+\"/lib/Pool\");return[\"_enqueueCallback\"].forEach(function(e){return s(c)(e)}),e}},t.enable=function(){n.channel.registerMonkeyPatch(\"mysql\",t.mysql)}},function(e,t){function r(e){var t=new Error(\"Cannot find module '\"+e+\"'\");throw t.code=\"MODULE_NOT_FOUND\",t}r.keys=function(){return[]},r.resolve=r,e.exports=r,r.id=139},function(e,t){function r(e){var t=new Error(\"Cannot find module '\"+e+\"'\");throw t.code=\"MODULE_NOT_FOUND\",t}r.keys=function(){return[]},r.resolve=r,e.exports=r,r.id=140},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4);t.postgresPool1={versionSpecifier:\"1.x\",patch:function(e){var t=e.prototype.connect;return e.prototype.connect=function(e){e&&(arguments[0]=n.channel.bindToContext(e)),t.apply(this,arguments)},e}},t.enable=function(){n.channel.registerMonkeyPatch(\"pg-pool\",t.postgresPool1)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4),i=r(27);t.postgres6={versionSpecifier:\"6.x\",patch:function(e,t){var r=e.Client.prototype.query,o=\"__diagnosticOriginalFunc\";return e.Client.prototype.query=function(e,t,s){var a,c={query:{},database:{host:this.connectionParameters.host,port:this.connectionParameters.port},result:null,error:null,duration:0},u=process.hrtime();function l(e){e&&e[o]&&(e=e[o]);var t=n.channel.bindToContext(function(t,r){var o=process.hrtime(u);if(c.result=r&&{rowCount:r.rowCount,command:r.command},c.error=t,c.duration=Math.ceil(1e3*o[0]+o[1]/1e6),n.channel.publish(\"postgres\",c),t){if(e)return e.apply(this,arguments);a&&a instanceof i.EventEmitter&&a.emit(\"error\",t)}else e&&e.apply(this,arguments)});try{return Object.defineProperty(t,o,{value:e}),t}catch(t){return e}}try{\"string\"==typeof e?t instanceof Array?(c.query.preparable={text:e,args:t},s=l(s)):(c.query.text=e,s?s=l(s):t=l(t)):(\"string\"==typeof e.name?c.query.plan=e.name:e.values instanceof Array?c.query.preparable={text:e.text,args:e.values}:c.query.text=e.text,s?s=l(s):t?t=l(t):e.callback=l(e.callback))}catch(e){return r.apply(this,arguments)}return arguments[0]=e,arguments[1]=t,arguments[2]=s,arguments.length=arguments.length>3?arguments.length:3,a=r.apply(this,arguments)},e}},t.enable=function(){n.channel.registerMonkeyPatch(\"pg\",t.postgres6)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4);t.redis={versionSpecifier:\">= 2.0.0 < 3.0.0\",patch:function(e){var t=e.RedisClient.prototype.internal_send_command;return e.RedisClient.prototype.internal_send_command=function(e){if(e){var r=e.callback;if(!r||!r.pubsubBound){var i=this.address,o=process.hrtime();e.callback=n.channel.bindToContext(function(t,s){var a=process.hrtime(o),c=1e3*a[0]+a[1]/1e6|0;n.channel.publish(\"redis\",{duration:c,address:i,commandObj:e,err:t,result:s}),\"function\"==typeof r&&r.apply(this,arguments)}),e.callback.pubsubBound=!0}}return t.call(this,e)},e}},t.enable=function(){n.channel.registerMonkeyPatch(\"redis\",t.redis)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4);t.winston={versionSpecifier:\"2.x\",patch:function(e){var t,r=e.Logger.prototype.log,i=function(r,i,o){var s;return s=t===e.config.npm.levels?\"npm\":t===e.config.syslog.levels?\"syslog\":\"unknown\",n.channel.publish(\"winston\",{level:r,message:i,meta:o,levelKind:s}),i};return e.Logger.prototype.log=function(){return t=this.levels,this.filters&&0!==this.filters.length?this.filters[this.filters.length-1]!==i&&(this.filters=this.filters.filter(function(e){return e!==i}),this.filters.push(i)):this.filters=[i],r.apply(this,arguments)},e}},t.enable=function(){n.channel.registerMonkeyPatch(\"winston\",t.winston)}},function(e,t,r){\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n!function(e,t){t()}(0,function(){\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */!function(e){if(e.Zone)throw new Error(\"Zone already loaded.\");var t=function(){function t(e,t){this._properties=null,this._parent=e,this._name=t?t.name||\"unnamed\":\"<root>\",this._properties=t&&t.properties||{},this._zoneDelegate=new r(this,this._parent&&this._parent._zoneDelegate,t)}return t.assertZonePatched=function(){if(e.Promise!==P)throw new Error(\"Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)\")},Object.defineProperty(t,\"current\",{get:function(){return u.zone},enumerable:!0,configurable:!0}),Object.defineProperty(t,\"currentTask\",{get:function(){return l},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"parent\",{get:function(){return this._parent},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"name\",{get:function(){return this._name},enumerable:!0,configurable:!0}),t.prototype.get=function(e){var t=this.getZoneWith(e);if(t)return t._properties[e]},t.prototype.getZoneWith=function(e){for(var t=this;t;){if(t._properties.hasOwnProperty(e))return t;t=t._parent}return null},t.prototype.fork=function(e){if(!e)throw new Error(\"ZoneSpec required!\");return this._zoneDelegate.fork(this,e)},t.prototype.wrap=function(e,t){if(\"function\"!=typeof e)throw new Error(\"Expecting function got: \"+e);var r=this._zoneDelegate.intercept(this,e,t),n=this;return function(){return n.runGuarded(r,this,arguments,t)}},t.prototype.run=function(e,t,r,n){void 0===t&&(t=null),void 0===r&&(r=null),void 0===n&&(n=null),u=new i(u,this);try{return this._zoneDelegate.invoke(this,e,t,r,n)}finally{u=u.parent}},t.prototype.runGuarded=function(e,t,r,n){void 0===t&&(t=null),void 0===r&&(r=null),void 0===n&&(n=null),u=new i(u,this);try{try{return this._zoneDelegate.invoke(this,e,t,r,n)}catch(e){if(this._zoneDelegate.handleError(this,e))throw e}}finally{u=u.parent}},t.prototype.runTask=function(e,t,r){if(e.runCount++,e.zone!=this)throw new Error(\"A task can only be run in the zone which created it! (Creation: \"+e.zone.name+\"; Execution: \"+this.name+\")\");var n=l;l=e,u=new i(u,this);try{\"macroTask\"==e.type&&e.data&&!e.data.isPeriodic&&(e.cancelFn=null);try{return this._zoneDelegate.invokeTask(this,e,t,r)}catch(e){if(this._zoneDelegate.handleError(this,e))throw e}}finally{u=u.parent,l=n}},t.prototype.scheduleMicroTask=function(e,t,r,i){return this._zoneDelegate.scheduleTask(this,new n(\"microTask\",this,e,t,r,i,null))},t.prototype.scheduleMacroTask=function(e,t,r,i,o){return this._zoneDelegate.scheduleTask(this,new n(\"macroTask\",this,e,t,r,i,o))},t.prototype.scheduleEventTask=function(e,t,r,i,o){return this._zoneDelegate.scheduleTask(this,new n(\"eventTask\",this,e,t,r,i,o))},t.prototype.cancelTask=function(e){var t=this._zoneDelegate.cancelTask(this,e);return e.runCount=-1,e.cancelFn=null,t},t}();t.__symbol__=o;var r=function(){function e(e,t,r){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=e,this._parentDelegate=t,this._forkZS=r&&(r&&r.onFork?r:t._forkZS),this._forkDlgt=r&&(r.onFork?t:t._forkDlgt),this._forkCurrZone=r&&(r.onFork?this.zone:t.zone),this._interceptZS=r&&(r.onIntercept?r:t._interceptZS),this._interceptDlgt=r&&(r.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=r&&(r.onIntercept?this.zone:t.zone),this._invokeZS=r&&(r.onInvoke?r:t._invokeZS),this._invokeDlgt=r&&(r.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=r&&(r.onInvoke?this.zone:t.zone),this._handleErrorZS=r&&(r.onHandleError?r:t._handleErrorZS),this._handleErrorDlgt=r&&(r.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=r&&(r.onHandleError?this.zone:t.zone),this._scheduleTaskZS=r&&(r.onScheduleTask?r:t._scheduleTaskZS),this._scheduleTaskDlgt=r&&(r.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=r&&(r.onScheduleTask?this.zone:t.zone),this._invokeTaskZS=r&&(r.onInvokeTask?r:t._invokeTaskZS),this._invokeTaskDlgt=r&&(r.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=r&&(r.onInvokeTask?this.zone:t.zone),this._cancelTaskZS=r&&(r.onCancelTask?r:t._cancelTaskZS),this._cancelTaskDlgt=r&&(r.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=r&&(r.onCancelTask?this.zone:t.zone),this._hasTaskZS=r&&(r.onHasTask?r:t._hasTaskZS),this._hasTaskDlgt=r&&(r.onHasTask?t:t._hasTaskDlgt),this._hasTaskCurrZone=r&&(r.onHasTask?this.zone:t.zone)}return e.prototype.fork=function(e,r){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,e,r):new t(e,r)},e.prototype.intercept=function(e,t,r){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,e,t,r):t},e.prototype.invoke=function(e,t,r,n,i){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,e,t,r,n,i):t.apply(r,n)},e.prototype.handleError=function(e,t){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,e,t)},e.prototype.scheduleTask=function(e,t){try{if(this._scheduleTaskZS)return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,e,t);if(t.scheduleFn)t.scheduleFn(t);else{if(\"microTask\"!=t.type)throw new Error(\"Task is missing scheduleFn.\");!function(e){g(),h.push(e)}(t)}return t}finally{e==this.zone&&this._updateTaskCount(t.type,1)}},e.prototype.invokeTask=function(e,t,r,n){try{return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,e,t,r,n):t.callback.apply(r,n)}finally{e!=this.zone||\"eventTask\"==t.type||t.data&&t.data.isPeriodic||this._updateTaskCount(t.type,-1)}},e.prototype.cancelTask=function(e,t){var r;if(this._cancelTaskZS)r=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,e,t);else{if(!t.cancelFn)throw new Error(\"Task does not support cancellation, or is already canceled.\");r=t.cancelFn(t)}return e==this.zone&&this._updateTaskCount(t.type,-1),r},e.prototype.hasTask=function(e,t){return this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,e,t)},e.prototype._updateTaskCount=function(e,t){var r=this._taskCounts,n=r[e],i=r[e]=n+t;if(i<0)throw new Error(\"More tasks executed then were scheduled.\");if(0==n||0==i){var o={microTask:r.microTask>0,macroTask:r.macroTask>0,eventTask:r.eventTask>0,change:e};try{this.hasTask(this.zone,o)}finally{this._parentDelegate&&this._parentDelegate._updateTaskCount(e,t)}}},e}(),n=function(){function e(e,t,r,n,i,o,s){this.runCount=0,this.type=e,this.zone=t,this.source=r,this.data=i,this.scheduleFn=o,this.cancelFn=s,this.callback=n;var a=this;this.invoke=function(){f++;try{return t.runTask(a,this,arguments)}finally{1==f&&y(),f--}}}return e.prototype.toString=function(){return this.data&&void 0!==this.data.handleId?this.data.handleId:Object.prototype.toString.call(this)},e.prototype.toJSON=function(){return{type:this.type,source:this.source,data:this.data,zone:this.zone.name,invoke:this.invoke,scheduleFn:this.scheduleFn,cancelFn:this.cancelFn,runCount:this.runCount,callback:this.callback}},e}(),i=function(){return function(e,t){this.parent=e,this.zone=t}}();function o(e){return\"__zone_symbol__\"+e}var s=o(\"setTimeout\"),a=o(\"Promise\"),c=o(\"then\"),u=new i(null,new t(null,null)),l=null,h=[],p=!1,d=[],f=0;function g(){0===f&&0===h.length&&(e[a]?e[a].resolve(0)[c](y):e[s](y,0))}function m(e){var t=e&&e.rejection;t&&console.error(\"Unhandled Promise rejection:\",t instanceof Error?t.message:t,\"; Zone:\",e.zone.name,\"; Task:\",e.task&&e.task.source,\"; Value:\",t,t instanceof Error?t.stack:void 0),console.error(e)}function y(){if(!p){for(p=!0;h.length;){var e=h;h=[];for(var t=0;t<e.length;t++){var r=e[t];try{r.zone.runTask(r,null,null)}catch(e){m(e)}}}for(;d.length;)for(var n=function(){var e=d.shift();try{e.zone.runGuarded(function(){throw e})}catch(e){m(e)}};d.length;)n();p=!1}}function v(e){return e&&e.then}function w(e){return e}function b(e){return P.reject(e)}var C=o(\"state\"),_=o(\"value\"),S=\"Promise.then\",k=null,T=!0,E=!1,R=0;function D(e,t){return function(r){x(e,t,r)}}function x(e,r,n){if(e[C]===k)if(n instanceof P&&n.hasOwnProperty(C)&&n.hasOwnProperty(_)&&n[C]!==k)I(n),x(e,n[C],n[_]);else if(v(n))n.then(D(e,r),D(e,!1));else{e[C]=r;var i=e[_];e[_]=n;for(var o=0;o<i.length;)O(e,i[o++],i[o++],i[o++],i[o++]);if(0==i.length&&r==E){e[C]=R;try{throw new Error(\"Uncaught (in promise): \"+n+(n&&n.stack?\"\\n\"+n.stack:\"\"))}catch(r){var s=r;s.rejection=n,s.promise=e,s.zone=t.current,s.task=t.currentTask,d.push(s),g()}}}return e}function I(e){if(e[C]===R){e[C]=E;for(var t=0;t<d.length;t++)if(e===d[t].promise){d.splice(t,1);break}}}function O(e,t,r,n,i){I(e);var o=e[C]?n||w:i||b;t.scheduleMicroTask(S,function(){try{x(r,!0,t.run(o,null,[e[_]]))}catch(e){x(r,!1,e)}})}var P=function(){function e(t){if(!(this instanceof e))throw new Error(\"Must be an instanceof Promise.\");this[C]=k,this[_]=[];try{t&&t(D(this,T),D(this,E))}catch(e){x(this,!1,e)}}return e.toString=function(){return\"function ZoneAwarePromise() { [native code] }\"},e.resolve=function(e){return x(new this(null),T,e)},e.reject=function(e){return x(new this(null),E,e)},e.race=function(e){var t,r,n=new this(function(e,n){var i;t=(i=[e,n])[0],r=i[1]});function i(e){n&&(n=t(e))}function o(e){n&&(n=r(e))}for(var s=0,a=e;s<a.length;s++){var c=a[s];v(c)||(c=this.resolve(c)),c.then(i,o)}return n},e.all=function(e){for(var t,r,n=new this(function(e,n){t=e,r=n}),i=0,o=[],s=0,a=e;s<a.length;s++){var c=a[s];v(c)||(c=this.resolve(c)),c.then(function(e){return function(r){o[e]=r,--i||t(o)}}(i),r),i++}return i||t(o),n},e.prototype.then=function(e,r){var n=new this.constructor(null),i=t.current;return this[C]==k?this[_].push(i,n,e,r):O(this,i,n,e,r),n},e.prototype.catch=function(e){return this.then(null,e)},e}();P.resolve=P.resolve,P.reject=P.reject,P.race=P.race,P.all=P.all;var A,M=e[o(\"Promise\")]=e.Promise;function L(e){var t=e.prototype,r=t[o(\"then\")]=t.then;t.then=function(e,t){var n=this;return new P(function(e,t){r.call(n,e,t)}).then(e,t)}}if(e.Promise=P,M&&(L(M),void 0!==e.fetch)){var N=void 0;try{N=e.fetch()}catch(t){N=e.fetch(\"about:blank\")}N.then(function(){return null},function(){return null}),N.constructor!=M&&N.constructor!=P&&L(N.constructor)}Promise[t.__symbol__(\"uncaughtPromiseErrors\")]=d,function(e){e[e.blackList=0]=\"blackList\",e[e.transition=1]=\"transition\"}(A||(A={}));var F,j=e[o(\"Error\")]=e.Error,G={};e.Error=W;var B=\"stackRewrite\",U=function(e,t){if(!e[t]){var r=o(t);e[t]={configurable:!0,enumerable:!0,get:function(){if(!this[r]){var e=this[o(\"error\")];e&&(this[r]=e[t])}return this[r]},set:function(e){this[r]=e}}}},q=function(e,t){e[t]||(e[t]={configurable:!0,enumerable:!0,writable:!0,value:function(){var e=this[o(\"error\")],r=e&&e[t]||this[t];if(r)return r.apply(e,arguments)}})},H=function(){for(var e=Object.create(null),t=new j,r=Object.getOwnPropertyNames(t),n=0;n<r.length;n++){var i=r[n];Object.prototype.hasOwnProperty.call(t,i)&&U(e,i)}var o=j.prototype;if(o){var s=Object.getOwnPropertyNames(o);for(n=0;n<s.length;n++)\"constructor\"!==(i=s[n])&&\"toString\"!==i&&\"toSource\"!==i&&U(e,i)}return U(e,\"originalStack\"),U(e,\"zoneAwareStack\"),q(e,\"toString\"),q(e,\"toSource\"),e}(),$=function(e){if(e===W.prototype)return H;var t=Object.create(null),r=Object.getOwnPropertyNames(H),n=Object.getOwnPropertyNames(e);return r.forEach(function(e){0===n.filter(function(t){return t===e}).length&&(t[e]=H[e])}),t};function W(){if(!(this instanceof W))return W.apply(Object.create(W.prototype),arguments);var e=j.apply(this,arguments);if(this[o(\"error\")]=e,e.originalStack=e.stack,W[B]&&e.originalStack){for(var t=e.originalStack.split(\"\\n\"),r=u,n=0;t[n]!==F&&n<t.length;)n++;for(;n<t.length&&r;n++){var i=t[n];if(i.trim()){var s=G.hasOwnProperty(i)&&G[i];s===A.blackList?(t.splice(n,1),n--):s===A.transition?r.parent?(t[n]+=\" [\"+r.parent.zone.name+\" => \"+r.zone.name+\"]\",r=r.parent):r=null:t[n]+=\" [\"+r.zone.name+\"]\"}}e.stack=e.zoneAwareStack=t.join(\"\\n\")}return Object.defineProperties(this,$(Object.getPrototypeOf(this))),this}W.prototype=j.prototype,W[t.__symbol__(\"blacklistedStackFrames\")]=G,W[B]=!1,j.hasOwnProperty(\"stackTraceLimit\")&&(j.stackTraceLimit=Math.max(j.stackTraceLimit,15),Object.defineProperty(W,\"stackTraceLimit\",{get:function(){return j.stackTraceLimit},set:function(e){return j.stackTraceLimit=e}})),j.hasOwnProperty(\"captureStackTrace\")&&Object.defineProperty(W,\"captureStackTrace\",{value:function(e,t){j.captureStackTrace(e,t)}}),Object.defineProperty(W,\"prepareStackTrace\",{get:function(){return j.prepareStackTrace},set:function(e){return j.prepareStackTrace=e&&\"function\"==typeof e?function(t,r){if(r)for(var n=0;n<r.length;n++){if(\"zoneCaptureStackTrace\"===r[n].getFunctionName()){r.splice(n,1);break}}return e.apply(this,[t,r])}:e}});var z=t.current.fork({name:\"detect\",onInvoke:function(e,t,r,n,i,o,s){return e.invoke(r,n,i,o,s)},onHandleError:function(e,t,r,n){if(n.originalStack&&Error===W)for(var i=n.originalStack.split(/\\n/),o=!1,s=!1,a=!1;i.length;){var c=i.shift();if(/:\\d+:\\d+/.test(c)){var u=c.split(\"(\")[0].split(\"@\")[0],l=A.transition;if(-1!==u.indexOf(\"ZoneAwareError\")&&(F=c),-1!==u.indexOf(\"runGuarded\")?s=!0:-1!==u.indexOf(\"runTask\")?a=!0:-1!==u.indexOf(\"run\")?o=!0:l=A.blackList,G[c]=l,o&&s&&a){W[B]=!0;break}}}return!1}});z.runTask(z.scheduleMacroTask(\"detect\",function(){z.run(function(){z.runGuarded(function(){throw new Error(\"blacklistStackFrames\")})})},null,function(){return null},null)),e.Zone=t}(\"object\"==typeof window&&window||\"object\"==typeof self&&self||global);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */var e=function(e){return\"__zone_symbol__\"+e},t=\"object\"==typeof window&&window||\"object\"==typeof self&&self||global;!(\"nw\"in t)&&\"undefined\"!=typeof process&&{}.toString.call(process);var n=e(\"eventTasks\");function i(e,t,r,i,o){var s=e[n];if(s)for(var a=0;a<s.length;a++){var c=s[a],u=c.data,l=u.handler;if((u.handler===t||l.listener===t)&&u.useCapturing===i&&u.eventName===r)return o&&s.splice(a,1),c}return null}var o=function(e,r){return{useCapturing:r[2],eventName:r[0],handler:r[1],target:e||t,name:r[0],invokeAddFunc:function(e,t){return t&&t.invoke?this.target[e](this.eventName,t.invoke,this.useCapturing):this.target[e](this.eventName,t,this.useCapturing)},invokeRemoveFunc:function(e,t){return t&&t.invoke?this.target[e](this.eventName,t.invoke,this.useCapturing):this.target[e](this.eventName,t,this.useCapturing)}}};function s(t,r,s,a,c,u){void 0===s&&(s=!0),void 0===a&&(a=!1),void 0===c&&(c=!1),void 0===u&&(u=o);var l=e(t),h=e(r),p=!s&&void 0;function d(e){var t=e.data;return function(e,t,r){var i=e[n];i||(i=e[n]=[]),r?i.unshift(t):i.push(t)}(t.target,e,c),t.invokeAddFunc(l,e)}function f(e){var t=e.data;return i(t.target,e.invoke,t.eventName,t.useCapturing,!0),t.invokeRemoveFunc(h,e)}return function(e,r){var n=u(e,r);n.useCapturing=n.useCapturing||p;var o=null;\"function\"==typeof n.handler?o=n.handler:n.handler&&n.handler.handleEvent&&(o=function(e){return n.handler.handleEvent(e)});var s=!1;try{s=n.handler&&\"[object FunctionWrapper]\"===n.handler.toString()}catch(e){return}if(!o||s)return n.invokeAddFunc(l,n.handler);if(!a){var c=i(n.target,n.handler,n.eventName,n.useCapturing,!1);if(c)return n.invokeAddFunc(l,c)}var h=Zone.current,g=n.target.constructor.name+\".\"+t+\":\"+n.eventName;h.scheduleEventTask(g,o,n,d,f)}}function a(t,r,n){void 0===r&&(r=!0),void 0===n&&(n=o);var s=e(t),a=!r&&void 0;return function(e,t){var r=n(e,t);r.useCapturing=r.useCapturing||a;var o=i(r.target,r.handler,r.eventName,r.useCapturing,!0);o?o.zone.cancelTask(o):r.invokeRemoveFunc(s,r.handler)}}s(\"addEventListener\",\"removeEventListener\"),a(\"removeEventListener\"),e(\"originalInstance\");function c(t,r,n){for(var i=t;i&&-1===Object.getOwnPropertyNames(i).indexOf(r);)i=Object.getPrototypeOf(i);!i&&t[r]&&(i=t);var o,s=e(r);return i&&!(o=i[s])&&(o=i[s]=i[r],i[r]=function(e,t){try{return Function(\"f\",\"return function \"+e+\"(){return f(this, arguments)}\")(t)}catch(e){return function(){return t(this,arguments)}}}(r,n(o,s,r))),o}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar u,l,h=function(e){return function(t,r){return e(t,r),t}},p=\"addListener\",d=\"prependListener\",f=\"removeListener\",g=\"removeAllListeners\",m=\"listeners\",y=\"on\",v=h(s(p,f,!1,!0,!1)),w=h(s(d,f,!1,!0,!0)),b=h(a(f,!1)),C=h(function(r,i){void 0===i&&(i=!0);var o=e(r),s=!i&&void 0;return function(e,r){var i=e||t;if(0===r.length)return i[n]=[],void i[o]();var a=r[0];!function(e,t,r,i){var o=e[n];if(o){for(var s=[],a=o.length-1;a>=0;a--){var c=o[a],u=c.data;u.eventName===t&&u.useCapturing===r&&(s.push(c),i&&o.splice(a,1))}}}(i,a,r[1]||s,!0),i[o](a)}}(g,!1)),_=function(r){return e(r),function(e,r){var i=r[0],o=e||t;return o[n]?o[n].filter(function(e){return e.data.eventName===i}).map(function(e){return e.data.handler}):[]}}(m);try{u=r(27)}catch(e){}u&&u.EventEmitter&&function(e){!e||!e.addListener||(c(e,p,function(){return v}),c(e,d,function(){return w}),c(e,f,function(){return b}),c(e,g,function(){return C}),c(e,m,function(){return _}),e[y]=e[p])}(u.EventEmitter.prototype)\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */;try{l=r(2)}catch(e){}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction S(e,t,r,n){var i=null,o=null;r+=n;var s={};function a(t){var r=t.data;return r.args[0]=function(){t.invoke.apply(this,arguments),delete s[r.handleId]},r.handleId=i.apply(e,r.args),s[r.handleId]=t,t}function u(e){return delete s[e.data.handleId],o(e.data.handleId)}i=c(e,t+=n,function(r){return function(i,o){if(\"function\"==typeof o[0]){var s=Zone.current,c={handleId:null,isPeriodic:\"Interval\"===n,delay:\"Timeout\"===n||\"Interval\"===n?o[1]||0:null,args:o},l=s.scheduleMacroTask(t,o[0],c,a,u);if(!l)return l;var h=l.data.handleId;return h.ref&&h.unref&&(l.ref=h.ref.bind(h),l.unref=h.unref.bind(h)),l}return r.apply(e,o)}}),o=c(e,r,function(t){return function(r,n){var i=\"number\"==typeof n[0]?s[n[0]]:n[0];i&&\"string\"==typeof i.type?(i.cancelFn&&i.data.isPeriodic||0===i.runCount)&&i.zone.cancelTask(i):t.apply(e,n)}})}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */l&&[\"access\",\"appendFile\",\"chmod\",\"chown\",\"close\",\"exists\",\"fchmod\",\"fchown\",\"fdatasync\",\"fstat\",\"fsync\",\"ftruncate\",\"futimes\",\"lchmod\",\"lchown\",\"link\",\"lstat\",\"mkdir\",\"mkdtemp\",\"open\",\"read\",\"readdir\",\"readFile\",\"readlink\",\"realpath\",\"rename\",\"rmdir\",\"stat\",\"symlink\",\"truncate\",\"unlink\",\"utimes\",\"write\",\"writeFile\"].filter(function(e){return!!l[e]&&\"function\"==typeof l[e]}).forEach(function(e){!function(e,t,r){var n=null;function i(e){var t=e.data;return t.args[t.callbackIndex]=function(){e.invoke.apply(this,arguments)},n.apply(t.target,t.args),e}n=c(e,t,function(e){return function(t,n){var o=r(t,n);return o.callbackIndex>=0&&\"function\"==typeof n[o.callbackIndex]?Zone.current.scheduleMacroTask(o.name,n[o.callbackIndex],o,i,null):e.apply(t,n)}})}(l,e,function(t,r){return{name:\"fs.\"+e,args:r,callbackIndex:r.length>0?r.length-1:-1,target:t}})});var k,T,E=\"set\",R=\"object\"==typeof window&&window||\"object\"==typeof self&&self||global,D=r(39);S(D,E,\"clear\",\"Timeout\"),S(D,E,\"clear\",\"Interval\"),S(D,E,\"clear\",\"Immediate\"),global.setTimeout!==D.setTimeout&&(S(R,E,\"clear\",\"Timeout\"),S(R,E,\"clear\",\"Interval\"),S(R,E,\"clear\",\"Immediate\")),function(){var e=null;function t(t){var r=t.data;return r[0]=function(){t.invoke.apply(this,arguments)},e.apply(process,r),t}e=c(process,\"nextTick\",function(e){return function(r,n){if(\"function\"==typeof n[0]){var i=Zone.current,o=i.scheduleMicroTask(\"nextTick\",n[0],n,t);return o}return e.apply(process,n)}})}();try{k=r(46)}catch(e){}if(k){var x=k.randomBytes;k.randomBytes=function(e,t){if(t){var r=Zone.current,n=k.constructor.name+\".randomBytes\";return x(e,r.wrap(t,n))}return x(e)}.bind(k);var I=k.pbkdf2;k.pbkdf2=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=e[e.length-1];if(\"function\"==typeof r){var n=Zone.current,i=k.constructor.name+\".pbkdf2\";return e[e.length-1]=n.wrap(r,i),I.apply(void 0,e)}return I.apply(void 0,e)}.bind(k)}try{T=r(146)}catch(e){}if(T&&T.ClientRequest){var O=T.ClientRequest.bind(T);T.ClientRequest=function(e,t){if(t){var r=Zone.current;return new O(e,r.wrap(t,\"http.ClientRequest\"))}return new O(e)}}})},function(e,t){e.exports=require(\"_http_client\")},function(e,t,r){\"use strict\";var n=r(30),i=function(){function e(t){if(e.INSTANCE)throw new Error(\"Console logging adapter tracking should be configured from the applicationInsights object\");this._client=t,e.INSTANCE=this}return e.prototype.enable=function(e,t){n.IsInitialized&&(r(148).enable(e&&t,this._client),r(166).enable(e,this._client),r(167).enable(e,this._client))},e.prototype.isInitialized=function(){return this._isInitialized},e.prototype.dispose=function(){e.INSTANCE=null,this.enable(!1,!1)},e._methodNames=[\"debug\",\"info\",\"log\",\"warn\",\"error\"],e}();e.exports=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(7),i=r(4),o=[],s=function(e){o.forEach(function(t){var r=e.data.message;r.lastIndexOf(\"\\n\")==r.length-1&&(r=r.substring(0,r.length-1)),t.trackTrace({message:r,severity:e.data.stderr?n.SeverityLevel.Warning:n.SeverityLevel.Information})})};t.enable=function(e,t){e?(0===o.length&&i.channel.subscribe(\"console\",s),o.push(t)):0===(o=o.filter(function(e){return e!=t})).length&&i.channel.unsubscribe(\"console\",s)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(47),i=function(){function e(){}return e.TYPE_HTTP=\"Http\",e.TYPE_AI=\"Http (tracked component)\",e}();t.RemoteDependencyDataConstants=i,t.domainSupportsProperties=function(e){return\"properties\"in e||e instanceof n.EventData||e instanceof n.ExceptionData||e instanceof n.MessageData||e instanceof n.MetricData||e instanceof n.PageViewData||e instanceof n.RemoteDependencyData||e instanceof n.RequestData}},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.properties={},t.measurements={},t}return n(t,e),t}(r(10));e.exports=i},function(e,t,r){\"use strict\";var n=function(){return function(){this.applicationVersion=\"ai.application.ver\",this.deviceId=\"ai.device.id\",this.deviceLocale=\"ai.device.locale\",this.deviceModel=\"ai.device.model\",this.deviceOEMName=\"ai.device.oemName\",this.deviceOSVersion=\"ai.device.osVersion\",this.deviceType=\"ai.device.type\",this.locationIp=\"ai.location.ip\",this.operationId=\"ai.operation.id\",this.operationName=\"ai.operation.name\",this.operationParentId=\"ai.operation.parentId\",this.operationSyntheticSource=\"ai.operation.syntheticSource\",this.operationCorrelationVector=\"ai.operation.correlationVector\",this.sessionId=\"ai.session.id\",this.sessionIsFirst=\"ai.session.isFirst\",this.userAccountId=\"ai.user.accountId\",this.userId=\"ai.user.id\",this.userAuthUserId=\"ai.user.authUserId\",this.cloudRole=\"ai.cloud.role\",this.cloudRoleInstance=\"ai.cloud.roleInstance\",this.internalSdkVersion=\"ai.internal.sdkVersion\",this.internalAgentVersion=\"ai.internal.agentVersion\",this.internalNodeName=\"ai.internal.nodeName\"}}();e.exports=n},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){return e.call(this)||this}return n(t,e),t}(r(48));e.exports=i},function(e,t,r){\"use strict\";var n=r(49),i=function(){return function(){this.kind=n.Measurement}}();e.exports=i},function(e,t,r){\"use strict\";var n=function(){return function(){this.ver=1,this.sampleRate=100,this.tags={}}}();e.exports=n},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.exceptions=[],t.properties={},t.measurements={},t}return n(t,e),t}(r(10));e.exports=i},function(e,t,r){\"use strict\";var n=function(){return function(){this.hasFullStack=!0,this.parsedStack=[]}}();e.exports=n},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.properties={},t}return n(t,e),t}(r(10));e.exports=i},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.metrics=[],t.properties={},t}return n(t,e),t}(r(10));e.exports=i},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.properties={},t.measurements={},t}return n(t,e),t}(r(50));e.exports=i},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.success=!0,t.properties={},t.measurements={},t}return n(t,e),t}(r(10));e.exports=i},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=function(e){function t(){var t=e.call(this)||this;return t.ver=2,t.properties={},t.measurements={},t}return n(t,e),t}(r(10));e.exports=i},function(e,t,r){\"use strict\";var n;!function(e){e[e.Verbose=0]=\"Verbose\",e[e.Information=1]=\"Information\",e[e.Warning=2]=\"Warning\",e[e.Error=3]=\"Error\",e[e.Critical=4]=\"Critical\"}(n||(n={})),e.exports=n},function(e,t,r){\"use strict\";var n=function(){return function(){}}();e.exports=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r(165))},function(e,t,r){\"use strict\";var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.telemetryTypeToBaseType=function(e){switch(e){case n.Event:return\"EventData\";case n.Exception:return\"ExceptionData\";case n.Trace:return\"MessageData\";case n.Metric:return\"MetricData\";case n.Request:return\"RequestData\";case n.Dependency:return\"RemoteDependencyData\"}},t.baseTypeToTelemetryType=function(e){switch(e){case\"EventData\":return n.Event;case\"ExceptionData\":return n.Exception;case\"MessageData\":return n.Trace;case\"MetricData\":return n.Metric;case\"RequestData\":return n.Request;case\"RemoteDependencyData\":return n.Dependency}},function(e){e[e.Event=0]=\"Event\",e[e.Exception=1]=\"Exception\",e[e.Trace=2]=\"Trace\",e[e.Metric=3]=\"Metric\",e[e.Request=4]=\"Request\",e[e.Dependency=5]=\"Dependency\"}(n=t.TelemetryType||(t.TelemetryType={}))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(7),i=r(4),o=[],s={10:n.SeverityLevel.Verbose,20:n.SeverityLevel.Verbose,30:n.SeverityLevel.Information,40:n.SeverityLevel.Warning,50:n.SeverityLevel.Error,60:n.SeverityLevel.Critical},a=function(e){o.forEach(function(t){var r=s[e.data.level];t.trackTrace({message:e.data.result,severity:r})})};t.enable=function(e,t){e?(0===o.length&&i.channel.subscribe(\"bunyan\",a),o.push(t)):0===(o=o.filter(function(e){return e!=t})).length&&i.channel.unsubscribe(\"bunyan\",a)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(7),i=r(4),o=[],s={syslog:function(e){var t={emerg:n.SeverityLevel.Critical,alert:n.SeverityLevel.Critical,crit:n.SeverityLevel.Critical,error:n.SeverityLevel.Error,warning:n.SeverityLevel.Warning,notice:n.SeverityLevel.Information,info:n.SeverityLevel.Information,debug:n.SeverityLevel.Verbose};return void 0===t[e]?n.SeverityLevel.Information:t[e]},npm:function(e){var t={error:n.SeverityLevel.Error,warn:n.SeverityLevel.Warning,info:n.SeverityLevel.Information,verbose:n.SeverityLevel.Verbose,debug:n.SeverityLevel.Verbose,silly:n.SeverityLevel.Verbose};return void 0===t[e]?n.SeverityLevel.Information:t[e]},unknown:function(e){return n.SeverityLevel.Information}},a=function(e){o.forEach(function(t){var r=s[e.data.levelKind](e.data.level);t.trackTrace({message:e.data.message,severity:r,properties:e.data.meta})})};t.enable=function(e,t){e?(0===o.length&&i.channel.subscribe(\"winston\",a),o.push(t)):0===(o=o.filter(function(e){return e!=t})).length&&i.channel.unsubscribe(\"winston\",a)}},function(e,t,r){\"use strict\";var n=function(){function e(t){if(e.INSTANCE)throw new Error(\"Exception tracking should be configured from the applicationInsights object\");e.INSTANCE=this,this._client=t}return Object.defineProperty(e,\"UNCAUGHT_EXCEPTION_HANDLER_NAME\",{get:function(){return\"uncaughtException\"},enumerable:!0,configurable:!0}),Object.defineProperty(e,\"UNHANDLED_REJECTION_HANDLER_NAME\",{get:function(){return\"unhandledRejection\"},enumerable:!0,configurable:!0}),e.prototype.isInitialized=function(){return this._isInitialized},e.prototype.enable=function(t){var r=this;if(t){this._isInitialized=!0;if(!this._exceptionListenerHandle){var n=function(e,t){if(r._client.trackException({exception:t}),r._client.flush({isAppCrashing:!0}),e)throw t};this._exceptionListenerHandle=n.bind(this,!0),this._rejectionListenerHandle=n.bind(this,!1),process.on(e.UNCAUGHT_EXCEPTION_HANDLER_NAME,this._exceptionListenerHandle),process.on(e.UNHANDLED_REJECTION_HANDLER_NAME,this._rejectionListenerHandle)}}else this._exceptionListenerHandle&&(process.removeListener(e.UNCAUGHT_EXCEPTION_HANDLER_NAME,this._exceptionListenerHandle),process.removeListener(e.UNHANDLED_REJECTION_HANDLER_NAME,this._rejectionListenerHandle),this._exceptionListenerHandle=void 0,this._rejectionListenerHandle=void 0,delete this._exceptionListenerHandle,delete this._rejectionListenerHandle)},e.prototype.dispose=function(){e.INSTANCE=null,this.enable(!1),this._isInitialized=!1},e.INSTANCE=null,e}();e.exports=n},function(e,t){e.exports=require(\"constants\")},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=r(25),o=r(7),s=r(11),a=r(24),c=r(52),u=r(33),l=function(e){function t(r,n){var i=e.call(this)||this;return n&&n.method&&r&&(i.method=n.method,i.url=t._getUrlFromRequestOptions(r,n),i.startTime=+new Date),i}return n(t,e),t.prototype.onError=function(e){this._setStatus(void 0,e)},t.prototype.onResponse=function(e){this._setStatus(e.statusCode,void 0),this.correlationId=s.getCorrelationContextTarget(e,a.requestContextTargetKey)},t.prototype.getDependencyTelemetry=function(e,t){var r=i.parse(this.url);r.search=void 0,r.hash=void 0;var n=this.method.toUpperCase()+\" \"+r.pathname,s=o.RemoteDependencyDataConstants.TYPE_HTTP,a=r.hostname;this.correlationId?(s=o.RemoteDependencyDataConstants.TYPE_AI,this.correlationId!==u.correlationIdPrefix&&(a=r.hostname+\" | \"+this.correlationId)):s=o.RemoteDependencyDataConstants.TYPE_HTTP;var c={id:t,name:n,data:this.url,duration:this.duration,success:this._isSuccess(),resultCode:this.statusCode?this.statusCode.toString():null,properties:this.properties||{},dependencyTypeName:s,target:a};if(e){for(var l in e)c[l]||(c[l]=e[l]);if(e.properties)for(var l in e.properties)c.properties[l]=e.properties[l]}return c},t._getUrlFromRequestOptions=function(e,t){if(\"string\"==typeof e)e=i.parse(e);else{var r=e;e={},r&&Object.keys(r).forEach(function(t){e[t]=r[t]})}if(e.path){var n=i.parse(e.path);e.pathname=n.pathname,e.search=n.search}e.host&&e.port&&(!i.parse(\"http://\"+e.host).port&&e.port&&(e.hostname=e.host,delete e.host));return e.protocol=e.protocol||t.agent&&t.agent.protocol||void 0,e.hostname=e.hostname||\"localhost\",i.format(e)},t}(c);e.exports=l},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4),i=[];t.subscriber=function(e){i.forEach(function(t){var r=e.data.startedData&&e.data.startedData.databaseName||\"Unknown database\";t.trackDependency({target:r,data:e.data.event.commandName,name:e.data.event.commandName,duration:e.data.event.duration,success:e.data.succeeded,resultCode:e.data.succeeded?\"0\":\"1\",dependencyTypeName:\"mongodb\"})})},t.enable=function(e,r){e?(0===i.length&&n.channel.subscribe(\"mongodb\",t.subscriber),i.push(r)):0===(i=i.filter(function(e){return e!=r})).length&&n.channel.unsubscribe(\"mongodb\",t.subscriber)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4),i=[];t.subscriber=function(e){i.forEach(function(t){var r=e.data.query||{},n=r.sql||\"Unknown query\",i=!e.data.err,o=(r._connection||{}).config||{},s=o.socketPath?o.socketPath:(o.host||\"localhost\")+\":\"+o.port;t.trackDependency({target:s,data:n,name:n,duration:e.data.duration,success:i,resultCode:i?\"0\":\"1\",dependencyTypeName:\"mysql\"})})},t.enable=function(e,r){e?(0===i.length&&n.channel.subscribe(\"mysql\",t.subscriber),i.push(r)):0===(i=i.filter(function(e){return e!=r})).length&&n.channel.unsubscribe(\"mysql\",t.subscriber)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4),i=[];t.subscriber=function(e){i.forEach(function(t){\"info\"!==e.data.commandObj.command&&t.trackDependency({target:e.data.address,name:e.data.commandObj.command,data:e.data.commandObj.command,duration:e.data.duration,success:!e.data.err,resultCode:e.data.err?\"1\":\"0\",dependencyTypeName:\"redis\"})})},t.enable=function(e,r){e?(0===i.length&&n.channel.subscribe(\"redis\",t.subscriber),i.push(r)):0===(i=i.filter(function(e){return e!=r})).length&&n.channel.unsubscribe(\"redis\",t.subscriber)}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(4),i=[];t.subscriber=function(e){i.forEach(function(t){var r=e.data.query,n=r.preparable&&r.preparable.text||r.plan||r.text||\"unknown query\",i=!e.data.error,o=e.data.database.host+\":\"+e.data.database.port;t.trackDependency({target:o,data:n,name:n,duration:e.data.duration,success:i,resultCode:i?\"0\":\"1\",dependencyTypeName:\"postgres\"})})},t.enable=function(e,r){e?(0===i.length&&n.channel.subscribe(\"postgres\",t.subscriber),i.push(r)):0===(i=i.filter(function(e){return e!=r})).length&&n.channel.unsubscribe(\"postgres\",t.subscriber)}},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=r(25),o=r(7),s=r(11),a=r(24),c=r(52),u=r(33),l=function(e){function t(t,r){var n=e.call(this)||this;return t&&(n.method=t.method,n.url=n._getAbsoluteUrl(t),n.startTime=+new Date,n.socketRemoteAddress=t.socket&&t.socket.remoteAddress,n.parseHeaders(t,r),t.connection&&(n.connectionRemoteAddress=t.connection.remoteAddress,n.legacySocketRemoteAddress=t.connection.socket&&t.connection.socket.remoteAddress)),n}return n(t,e),t.prototype.onError=function(e,t){this._setStatus(void 0,e),t&&(this.duration=t)},t.prototype.onResponse=function(e,t){this._setStatus(e.statusCode,void 0),t&&(this.duration=t)},t.prototype.getRequestTelemetry=function(e){var t={id:this.requestId,name:this.method+\" \"+i.parse(this.url).pathname,url:this.url,source:this.sourceCorrelationId,duration:this.duration,resultCode:this.statusCode?this.statusCode.toString():null,success:this._isSuccess(),properties:this.properties};if(e){for(var r in e)t[r]||(t[r]=e[r]);if(e.properties)for(var r in e.properties)t.properties[r]=e.properties[r]}return t},t.prototype.getRequestTags=function(e){var r={};for(var n in e)r[n]=e[n];return r[t.keys.locationIp]=e[t.keys.locationIp]||this._getIp(),r[t.keys.sessionId]=e[t.keys.sessionId]||this._getId(\"ai_session\"),r[t.keys.userId]=e[t.keys.userId]||this._getId(\"ai_user\"),r[t.keys.userAuthUserId]=e[t.keys.userAuthUserId]||this._getId(\"ai_authUser\"),r[t.keys.operationName]=this.getOperationName(e),r[t.keys.operationParentId]=this.getOperationParentId(e),r[t.keys.operationId]=this.getOperationId(e),r},t.prototype.getOperationId=function(e){return e[t.keys.operationId]||this.operationId},t.prototype.getOperationParentId=function(e){return e[t.keys.operationParentId]||this.parentId||this.getOperationId(e)},t.prototype.getOperationName=function(e){return e[t.keys.operationName]||this.method+\" \"+i.parse(this.url).pathname},t.prototype.getRequestId=function(){return this.requestId},t.prototype.getCorrelationContextHeader=function(){return this.correlationContextHeader},t.prototype._getAbsoluteUrl=function(e){if(!e.headers)return e.url;var t=e.connection?e.connection.encrypted:null,r=i.parse(e.url),n=r.pathname,o=r.search;return i.format({protocol:t?\"https\":\"http\",host:e.headers.host,pathname:n,search:o})},t.prototype._getIp=function(){var e=/[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/,t=function(t){var r=e.exec(t);if(r)return r[0]},r=t(this.rawHeaders[\"x-forwarded-for\"])||t(this.rawHeaders[\"x-client-ip\"])||t(this.rawHeaders[\"x-real-ip\"])||t(this.connectionRemoteAddress)||t(this.socketRemoteAddress)||t(this.legacySocketRemoteAddress);return!r&&this.connectionRemoteAddress&&this.connectionRemoteAddress.substr&&\"::\"===this.connectionRemoteAddress.substr(0,2)&&(r=\"127.0.0.1\"),r},t.prototype._getId=function(e){var r=this.rawHeaders&&this.rawHeaders.cookie&&\"string\"==typeof this.rawHeaders.cookie&&this.rawHeaders.cookie||\"\";return t.parseId(s.getCookie(e,r))},t.prototype.parseHeaders=function(e,t){if(this.rawHeaders=e.headers||e.rawHeaders,this.userAgent=e.headers&&e.headers[\"user-agent\"],this.sourceCorrelationId=s.getCorrelationContextTarget(e,a.requestContextSourceKey),e.headers){if(this.correlationContextHeader=e.headers[a.correlationContextHeader],e.headers[a.requestIdHeader])this.parentId=e.headers[a.requestIdHeader],this.requestId=u.generateRequestId(this.parentId),this.correlationContextHeader=e.headers[a.correlationContextHeader];else{var r=e.headers[a.rootIdHeader];this.parentId=e.headers[a.parentIdHeader],this.requestId=u.generateRequestId(r||this.parentId),this.correlationContextHeader=null}t&&(this.requestId=t),this.operationId=u.getRootId(this.requestId)}},t.parseId=function(e){return e.substr(0,e.indexOf(\"|\"))},t.keys=new o.ContextTagKeys,t}(c);e.exports=l},function(e,t,r){\"use strict\";var n=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),i=r(177),o=r(53),s=r(31),a=r(6),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.prototype.trackNodeHttpRequestSync=function(e){e&&e.request&&e.response&&e.duration?o.trackRequestSync(this,e):a.warn(\"trackNodeHttpRequestSync requires NodeHttpRequestTelemetry object with request, response and duration specified.\")},t.prototype.trackNodeHttpRequest=function(e){(e.duration||e.error)&&a.warn(\"trackNodeHttpRequest will ignore supplied duration and error parameters. These values are collected from the request and response objects.\"),e&&e.request&&e.response?o.trackRequest(this,e):a.warn(\"trackNodeHttpRequest requires NodeHttpRequestTelemetry object with request and response specified.\")},t.prototype.trackNodeHttpDependency=function(e){e&&e.request?s.trackRequest(this,e):a.warn(\"trackNodeHttpDependency requires NodeHttpDependencyTelemetry object with request specified.\")},t}(i);e.exports=c},function(e,t,r){\"use strict\";var n=r(25),i=r(178),o=r(179),s=r(7),a=r(180),c=r(181),u=r(23),l=r(183),h=r(11),p=r(6),d=r(185),f=function(){function e(e){this._telemetryProcessors=[];var t=new i(e);this.config=t,this.context=new o,this.commonProperties={};var r=new l(this.config);this.channel=new a(function(){return t.disableAppInsights},function(){return t.maxBatchSize},function(){return t.maxBatchIntervalMs},r)}return e.prototype.trackTrace=function(e){this.track(e,s.TelemetryType.Trace)},e.prototype.trackMetric=function(e){this.track(e,s.TelemetryType.Metric)},e.prototype.trackException=function(e){e&&e.exception&&!h.isError(e.exception)&&(e.exception=new Error(e.exception.toString())),this.track(e,s.TelemetryType.Exception)},e.prototype.trackEvent=function(e){this.track(e,s.TelemetryType.Event)},e.prototype.trackRequest=function(e){this.track(e,s.TelemetryType.Request)},e.prototype.trackDependency=function(e){e&&!e.target&&e.data&&(e.target=n.parse(e.data).host),this.track(e,s.TelemetryType.Dependency)},e.prototype.flush=function(e){this.channel.triggerSend(!!e&&!!e.isAppCrashing,e?e.callback:void 0)},e.prototype.track=function(e,t){if(e&&s.telemetryTypeToBaseType(t)){var r=d.createEnvelope(e,t,this.commonProperties,this.context,this.config);e.time&&(r.time=e.time.toISOString());var n=this.runTelemetryProcessors(r,e.contextObjects);(n=n&&c.samplingTelemetryProcessor(r,{correlationContext:u.CorrelationContextManager.getCurrentContext()}))&&this.channel.send(r)}else p.warn(\"track() requires telemetry object and telemetryType to be specified.\")},e.prototype.addTelemetryProcessor=function(e){this._telemetryProcessors.push(e)},e.prototype.clearTelemetryProcessors=function(){this._telemetryProcessors=[]},e.prototype.runTelemetryProcessors=function(e,t){var r=!0,n=this._telemetryProcessors.length;if(0===n)return r;(t=t||{}).correlationContext=u.CorrelationContextManager.getCurrentContext();for(var i=0;i<n;++i)try{var o=this._telemetryProcessors[i];if(o&&!1===o.apply(null,[e,t])){r=!1;break}}catch(t){r=!0,p.warn(\"One of telemetry processors failed, telemetry item will be sent.\",t,e)}return r},e}();e.exports=f},function(e,t,r){\"use strict\";var n=r(33),i=function(){function e(t){var r=this;this.endpointBase=\"https://dc.services.visualstudio.com\",this.instrumentationKey=t||e._getInstrumentationKey(),this.endpointUrl=this.endpointBase+\"/v2/track\",this.maxBatchSize=250,this.maxBatchIntervalMs=15e3,this.disableAppInsights=!1,this.samplingPercentage=100,this.correlationIdRetryIntervalMs=3e4,this.correlationHeaderExcludedDomains=[\"*.core.windows.net\",\"*.core.chinacloudapi.cn\",\"*.core.cloudapi.de\",\"*.core.usgovcloudapi.net\"],this.setCorrelationId=function(e){return r.correlationId=e},this.profileQueryEndpoint=process.env[e.ENV_profileQueryEndpoint]||this.endpointBase,this.proxyHttpUrl=process.env[e.ENV_http_proxy]||void 0,this.proxyHttpsUrl=process.env[e.ENV_https_proxy]||void 0,this.httpAgent=void 0,this.httpsAgent=void 0}return Object.defineProperty(e.prototype,\"profileQueryEndpoint\",{get:function(){return this._profileQueryEndpoint},set:function(e){n.cancelCorrelationIdQuery(this,this.setCorrelationId),this._profileQueryEndpoint=e,this.correlationId=n.correlationIdPrefix,n.queryCorrelationId(this,this.setCorrelationId)},enumerable:!0,configurable:!0}),e._getInstrumentationKey=function(){var t=process.env[e.ENV_iKey]||process.env[e.ENV_azurePrefix+e.ENV_iKey]||process.env[e.legacy_ENV_iKey]||process.env[e.ENV_azurePrefix+e.legacy_ENV_iKey];if(!t||\"\"==t)throw new Error(\"Instrumentation key not found, pass the key in the config to this method or set the key in the environment variable APPINSIGHTS_INSTRUMENTATIONKEY before starting the server\");return t},e.ENV_azurePrefix=\"APPSETTING_\",e.ENV_iKey=\"APPINSIGHTS_INSTRUMENTATIONKEY\",e.legacy_ENV_iKey=\"APPINSIGHTS_INSTRUMENTATION_KEY\",e.ENV_profileQueryEndpoint=\"APPINSIGHTS_PROFILE_QUERY_ENDPOINT\",e.ENV_http_proxy=\"http_proxy\",e.ENV_https_proxy=\"https_proxy\",e}();e.exports=i},function(e,t,r){\"use strict\";var n=r(12),i=r(2),o=r(0),s=r(7),a=r(6),c=function(){function e(e){this.keys=new s.ContextTagKeys,this.tags={},this._loadApplicationContext(),this._loadDeviceContext(),this._loadInternalContext()}return e.prototype._loadApplicationContext=function(t){if(t=t||o.resolve(__dirname,\"../../../../package.json\"),!e.appVersion[t]){e.appVersion[t]=\"unknown\";try{var r=JSON.parse(i.readFileSync(t,\"utf8\"));r&&\"string\"==typeof r.version&&(e.appVersion[t]=r.version)}catch(e){a.info(\"unable to read app version: \",e)}}this.tags[this.keys.applicationVersion]=e.appVersion[t]},e.prototype._loadDeviceContext=function(){this.tags[this.keys.deviceId]=\"\",this.tags[this.keys.cloudRoleInstance]=n&&n.hostname(),this.tags[this.keys.deviceOSVersion]=n&&n.type()+\" \"+n.release(),this.tags[this.keys.cloudRole]=e.DefaultRoleName,this.tags[\"ai.device.osArchitecture\"]=n&&n.arch(),this.tags[\"ai.device.osPlatform\"]=n&&n.platform()},e.prototype._loadInternalContext=function(){var t=o.resolve(__dirname,\"../../package.json\");if(!e.sdkVersion){e.sdkVersion=\"unknown\";try{var r=JSON.parse(i.readFileSync(t,\"utf8\"));r&&\"string\"==typeof r.version&&(e.sdkVersion=r.version)}catch(e){a.info(\"unable to read app version: \",e)}}this.tags[this.keys.internalSdkVersion]=\"node:\"+e.sdkVersion},e.DefaultRoleName=\"Web\",e.appVersion={},e.sdkVersion=null,e}();e.exports=c},function(e,t,r){\"use strict\";var n=r(6),i=function(){function e(e,t,r,n){this._buffer=[],this._lastSend=0,this._isDisabled=e,this._getBatchSize=t,this._getBatchIntervalMs=r,this._sender=n}return e.prototype.setUseDiskRetryCaching=function(e,t,r){this._sender.setDiskRetryMode(e,t,r)},e.prototype.send=function(e){var t=this;if(!this._isDisabled())if(e){var r=this._stringify(e);\"string\"==typeof r&&(this._buffer.push(r),this._buffer.length>=this._getBatchSize()?this.triggerSend(!1):!this._timeoutHandle&&this._buffer.length>0&&(this._timeoutHandle=setTimeout(function(){t._timeoutHandle=null,t.triggerSend(!1)},this._getBatchIntervalMs())))}else n.warn(\"Cannot send null/undefined telemetry\")},e.prototype.triggerSend=function(e,t){var r=this._buffer.length<1;if(!r){var n=this._buffer.join(\"\\n\");e?(this._sender.saveOnCrash(n),\"function\"==typeof t&&t(\"data saved on crash\")):this._sender.send(Buffer.from?Buffer.from(n):new Buffer(n),t)}this._lastSend=+new Date,this._buffer.length=0,clearTimeout(this._timeoutHandle),this._timeoutHandle=null,r&&\"function\"==typeof t&&t(\"no data to send\")},e.prototype._stringify=function(e){try{return JSON.stringify(e)}catch(t){n.warn(\"Failed to serialize payload\",t,e)}},e}();e.exports=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r(182))},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(7);function i(e){var t=5381;if(!e)return 0;for(;e.length<8;)e+=e;for(var r=0;r<e.length;r++)t=((t<<5)+t|0)+e.charCodeAt(r)|0;return(t=t<=-2147483648?2147483647:Math.abs(t))/2147483647*100}t.samplingTelemetryProcessor=function(e,t){var r=e.sampleRate;return null===r||void 0===r||r>=100||!(!e.data||n.TelemetryType.Metric!==n.baseTypeToTelemetryType(e.data.baseType))||(t.correlationContext&&t.correlationContext.operation?i(t.correlationContext.operation.id)<r:100*Math.random()<r)},t.getSamplingHashCode=i},function(e,t,r){\"use strict\";var n=r(2),i=r(12),o=r(0),s=r(184),a=r(34),c=r(6),u=r(31),l=r(11),h=function(){function e(t,r,i){if(this._config=t,this._onSuccess=r,this._onError=i,this._enableDiskRetryMode=!1,this._resendInterval=e.WAIT_BETWEEN_RESEND,this._maxBytesOnDisk=e.MAX_BYTES_ON_DISK,this._numConsecutiveFailures=0,!e.OS_PROVIDES_FILE_PROTECTION)if(e.USE_ICACLS){try{e.OS_PROVIDES_FILE_PROTECTION=n.existsSync(e.ICACLS_PATH)}catch(e){}e.OS_PROVIDES_FILE_PROTECTION||c.warn(e.TAG,\"Could not find ICACLS in expected location! This is necessary to use disk retry mode on Windows.\")}else e.OS_PROVIDES_FILE_PROTECTION=!0}return e.prototype.setDiskRetryMode=function(t,r,n){this._enableDiskRetryMode=e.OS_PROVIDES_FILE_PROTECTION&&t,\"number\"==typeof r&&r>=0&&(this._resendInterval=Math.floor(r)),\"number\"==typeof n&&n>=0&&(this._maxBytesOnDisk=Math.floor(n)),t&&!e.OS_PROVIDES_FILE_PROTECTION&&(this._enableDiskRetryMode=!1,c.warn(e.TAG,\"Ignoring request to enable disk retry mode. Sufficient file protection capabilities were not detected.\"))},e.prototype.send=function(t,r){var n=this,i=this._config.endpointUrl,o={method:\"POST\",withCredentials:!1,headers:{\"Content-Type\":\"application/x-json-stream\"}};s.gzip(t,function(s,a){var h=a;s?(c.warn(s),h=t,o.headers[\"Content-Length\"]=t.length.toString()):(o.headers[\"Content-Encoding\"]=\"gzip\",o.headers[\"Content-Length\"]=a.length),c.info(e.TAG,o),o[u.disableCollectionRequestOption]=!0;var p=l.makeRequest(n._config,i,o,function(i){i.setEncoding(\"utf-8\");var o=\"\";i.on(\"data\",function(e){o+=e}),i.on(\"end\",function(){n._numConsecutiveFailures=0,c.info(e.TAG,o),\"function\"==typeof n._onSuccess&&n._onSuccess(o),\"function\"==typeof r&&r(o),n._enableDiskRetryMode&&(200===i.statusCode?setTimeout(function(){return n._sendFirstFileOnDisk()},n._resendInterval):408!==i.statusCode&&429!==i.statusCode&&439!==i.statusCode&&500!==i.statusCode&&503!==i.statusCode||n._storeToDisk(t))})});p.on(\"error\",function(i){if(n._numConsecutiveFailures++,!n._enableDiskRetryMode||n._numConsecutiveFailures>0&&n._numConsecutiveFailures%e.MAX_CONNECTION_FAILURES_BEFORE_WARN==0){var o=\"Ingestion endpoint could not be reached. This batch of telemetry items has been lost. Use Disk Retry Caching to enable resending of failed telemetry. Error:\";n._enableDiskRetryMode&&(o=\"Ingestion endpoint could not be reached \"+n._numConsecutiveFailures+\" consecutive times. There may be resulting telemetry loss. Most recent error:\"),c.warn(e.TAG,o,i)}else{o=\"Transient failure to reach ingestion endpoint. This batch of telemetry items will be retried. Error:\";c.info(e.TAG,o,i)}if(n._onErrorHelper(i),\"function\"==typeof r){var s=\"error sending telemetry\";i&&\"function\"==typeof i.toString&&(s=i.toString()),r(s)}n._enableDiskRetryMode&&n._storeToDisk(t)}),p.write(h),p.end()})},e.prototype.saveOnCrash=function(e){this._enableDiskRetryMode&&this._storeToDiskSync(e)},e.prototype._runICACLS=function(t,r){var n=a.spawn(e.ICACLS_PATH,t,{windowsHide:!0});n.on(\"error\",function(e){return r(e)}),n.on(\"close\",function(e,t){return r(0===e?null:new Error(\"Setting ACL restrictions did not succeed (ICACLS returned code \"+e+\")\"))})},e.prototype._runICACLSSync=function(t){if(!a.spawnSync)throw new Error(\"Could not synchronously call ICACLS under current version of Node.js\");var r=a.spawnSync(e.ICACLS_PATH,t,{windowsHide:!0});if(r.error)throw r.error;if(0!==r.status)throw new Error(\"Setting ACL restrictions did not succeed (ICACLS returned code \"+r.status+\")\")},e.prototype._getACLIdentity=function(t){if(e.ACL_IDENTITY)return t(null,e.ACL_IDENTITY);var r=a.spawn(e.POWERSHELL_PATH,[\"-Command\",\"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"],{windowsHide:!0,stdio:[\"ignore\",\"pipe\",\"pipe\"]}),n=\"\";r.stdout.on(\"data\",function(e){return n+=e}),r.on(\"error\",function(e){return t(e,null)}),r.on(\"close\",function(r,i){return e.ACL_IDENTITY=n&&n.trim(),t(0===r?null:new Error(\"Getting ACL identity did not succeed (PS returned code \"+r+\")\"),e.ACL_IDENTITY)})},e.prototype._getACLIdentitySync=function(){if(e.ACL_IDENTITY)return e.ACL_IDENTITY;if(a.spawnSync){var t=a.spawnSync(e.POWERSHELL_PATH,[\"-Command\",\"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\"],{windowsHide:!0,stdio:[\"ignore\",\"pipe\",\"pipe\"]});if(t.error)throw t.error;if(0!==t.status)throw new Error(\"Getting ACL identity did not succeed (PS returned code \"+t.status+\")\");return e.ACL_IDENTITY=t.stdout&&t.stdout.toString().trim(),e.ACL_IDENTITY}throw new Error(\"Could not synchronously get ACL identity under current version of Node.js\")},e.prototype._getACLArguments=function(e,t){return[e,\"/grant\",\"*S-1-5-32-544:(OI)(CI)F\",\"/grant\",t+\":(OI)(CI)F\",\"/inheritance:r\"]},e.prototype._applyACLRules=function(t,r){var n=this;return e.USE_ICACLS?void 0!==e.ACLED_DIRECTORIES[t]?r(e.ACLED_DIRECTORIES[t]?null:new Error(\"Setting ACL restrictions did not succeed (cached result)\")):(e.ACLED_DIRECTORIES[t]=!1,void this._getACLIdentity(function(i,o){if(i)return e.ACLED_DIRECTORIES[t]=!1,r(i);n._runICACLS(n._getACLArguments(t,o),function(n){return e.ACLED_DIRECTORIES[t]=!n,r(n)})})):r(null)},e.prototype._applyACLRulesSync=function(t){if(e.USE_ICACLS){if(void 0===e.ACLED_DIRECTORIES[t])return this._runICACLSSync(this._getACLArguments(t,this._getACLIdentitySync())),void(e.ACLED_DIRECTORIES[t]=!0);if(!e.ACLED_DIRECTORIES[t])throw new Error(\"Setting ACL restrictions did not succeed (cached result)\")}},e.prototype._confirmDirExists=function(e,t){var r=this;n.lstat(e,function(i,o){i&&\"ENOENT\"===i.code?n.mkdir(e,function(n){n&&\"EEXIST\"!==n.code?t(n):r._applyACLRules(e,t)}):!i&&o.isDirectory()?r._applyACLRules(e,t):t(i||new Error(\"Path existed but was not a directory\"))})},e.prototype._getShallowDirectorySize=function(e,t){n.readdir(e,function(r,i){if(r)return t(r,-1);var s=null,a=0,c=0;if(0!==i.length)for(var u=0;u<i.length;u++)n.stat(o.join(e,i[u]),function(e,r){c++,e?s=e:r.isFile()&&(a+=r.size),c===i.length&&t(s,s?-1:a)});else t(null,0)})},e.prototype._getShallowDirectorySizeSync=function(e){for(var t=n.readdirSync(e),r=0,i=0;i<t.length;i++)r+=n.statSync(o.join(e,t[i])).size;return r},e.prototype._storeToDisk=function(t){var r=this,s=o.join(i.tmpdir(),e.TEMPDIR_PREFIX+this._config.instrumentationKey);c.info(e.TAG,\"Checking existance of data storage directory: \"+s),this._confirmDirExists(s,function(i){if(i)return c.warn(e.TAG,\"Error while checking/creating directory: \"+(i&&i.message)),void r._onErrorHelper(i);r._getShallowDirectorySize(s,function(i,a){if(i||a<0)return c.warn(e.TAG,\"Error while checking directory size: \"+(i&&i.message)),void r._onErrorHelper(i);if(a>r._maxBytesOnDisk)c.warn(e.TAG,\"Not saving data due to max size limit being met. Directory size in bytes is: \"+a);else{var u=(new Date).getTime()+\".ai.json\",l=o.join(s,u);c.info(e.TAG,\"saving data to disk at: \"+l),n.writeFile(l,t,{mode:384},function(e){return r._onErrorHelper(e)})}})})},e.prototype._storeToDiskSync=function(t){var r=o.join(i.tmpdir(),e.TEMPDIR_PREFIX+this._config.instrumentationKey);try{c.info(e.TAG,\"Checking existance of data storage directory: \"+r),n.existsSync(r)||n.mkdirSync(r),this._applyACLRulesSync(r);var s=this._getShallowDirectorySizeSync(r);if(s>this._maxBytesOnDisk)return void c.info(e.TAG,\"Not saving data due to max size limit being met. Directory size in bytes is: \"+s);var a=(new Date).getTime()+\".ai.json\",u=o.join(r,a);c.info(e.TAG,\"saving data before crash to disk at: \"+u),n.writeFileSync(u,t,{mode:384})}catch(t){c.warn(e.TAG,\"Error while saving data to disk: \"+(t&&t.message)),this._onErrorHelper(t)}},e.prototype._sendFirstFileOnDisk=function(){var t=this,r=o.join(i.tmpdir(),e.TEMPDIR_PREFIX+this._config.instrumentationKey);n.exists(r,function(e){e&&n.readdir(r,function(e,i){if(e)t._onErrorHelper(e);else if((i=i.filter(function(e){return o.basename(e).indexOf(\".ai.json\")>-1})).length>0){var s=i[0],a=o.join(r,s);n.readFile(a,function(e,r){e?t._onErrorHelper(e):n.unlink(a,function(e){e?t._onErrorHelper(e):t.send(r)})})}})})},e.prototype._onErrorHelper=function(e){\"function\"==typeof this._onError&&this._onError(e)},e.TAG=\"Sender\",e.ICACLS_PATH=process.env.systemdrive+\"/windows/system32/icacls.exe\",e.POWERSHELL_PATH=process.env.systemdrive+\"/windows/system32/windowspowershell/v1.0/powershell.exe\",e.ACLED_DIRECTORIES={},e.ACL_IDENTITY=null,e.WAIT_BETWEEN_RESEND=6e4,e.MAX_BYTES_ON_DISK=5e7,e.MAX_CONNECTION_FAILURES_BEFORE_WARN=5,e.TEMPDIR_PREFIX=\"appInsights-node\",e.OS_PROVIDES_FILE_PROTECTION=!1,e.USE_ICACLS=\"Windows_NT\"===i.type(),e}();e.exports=h},function(e,t){e.exports=require(\"zlib\")},function(e,t,r){\"use strict\";var n=r(7),i=r(11),o=r(23),s=function(){function e(){}return e.createEnvelope=function(t,r,o,s,a){var c=null;switch(r){case n.TelemetryType.Trace:c=e.createTraceData(t);break;case n.TelemetryType.Dependency:c=e.createDependencyData(t);break;case n.TelemetryType.Event:c=e.createEventData(t);break;case n.TelemetryType.Exception:c=e.createExceptionData(t);break;case n.TelemetryType.Request:c=e.createRequestData(t);break;case n.TelemetryType.Metric:c=e.createMetricData(t)}if(o&&n.domainSupportsProperties(c.baseData)){if(c&&c.baseData)if(c.baseData.properties)for(var u in o)c.baseData.properties[u]||(c.baseData.properties[u]=o[u]);else c.baseData.properties=o;c.baseData.properties=i.validateStringMap(c.baseData.properties)}var l=a&&a.instrumentationKey||\"\",h=new n.Envelope;return h.data=c,h.iKey=l,h.name=\"Microsoft.ApplicationInsights.\"+l.replace(/-/g,\"\")+\".\"+c.baseType.substr(0,c.baseType.length-4),h.tags=this.getTags(s,t.tagOverrides),h.time=(new Date).toISOString(),h.ver=1,h.sampleRate=a?a.samplingPercentage:100,r===n.TelemetryType.Metric&&(h.sampleRate=100),h},e.createTraceData=function(e){var t=new n.MessageData;t.message=e.message,t.properties=e.properties,isNaN(e.severity)?t.severityLevel=n.SeverityLevel.Information:t.severityLevel=e.severity;var r=new n.Data;return r.baseType=n.telemetryTypeToBaseType(n.TelemetryType.Trace),r.baseData=t,r},e.createDependencyData=function(e){var t=new n.RemoteDependencyData;t.name=e.name,t.data=e.data,t.target=e.target,t.duration=i.msToTimeSpan(e.duration),t.success=e.success,t.type=e.dependencyTypeName,t.properties=e.properties,t.resultCode=e.resultCode?e.resultCode+\"\":\"\",e.id?t.id=e.id:t.id=i.w3cTraceId();var r=new n.Data;return r.baseType=n.telemetryTypeToBaseType(n.TelemetryType.Dependency),r.baseData=t,r},e.createEventData=function(e){var t=new n.EventData;t.name=e.name,t.properties=e.properties,t.measurements=e.measurements;var r=new n.Data;return r.baseType=n.telemetryTypeToBaseType(n.TelemetryType.Event),r.baseData=t,r},e.createExceptionData=function(e){var t=new n.ExceptionData;t.properties=e.properties,t.severityLevel=n.SeverityLevel.Error,t.measurements=e.measurements,t.exceptions=[];var r=e.exception.stack,o=new n.ExceptionDetails;o.message=e.exception.message,o.typeName=e.exception.name,o.parsedStack=this.parseStack(r),o.hasFullStack=i.isArray(o.parsedStack)&&o.parsedStack.length>0,t.exceptions.push(o);var s=new n.Data;return s.baseType=n.telemetryTypeToBaseType(n.TelemetryType.Exception),s.baseData=t,s},e.createRequestData=function(e){var t=new n.RequestData;e.id?t.id=e.id:t.id=i.w3cTraceId(),t.name=e.name,t.url=e.url,t.source=e.source,t.duration=i.msToTimeSpan(e.duration),t.responseCode=e.resultCode?e.resultCode+\"\":\"\",t.success=e.success,t.properties=e.properties;var r=new n.Data;return r.baseType=n.telemetryTypeToBaseType(n.TelemetryType.Request),r.baseData=t,r},e.createMetricData=function(e){var t=new n.MetricData;t.metrics=[];var r=new n.DataPoint;r.count=isNaN(e.count)?1:e.count,r.kind=n.DataPointType.Aggregation,r.max=isNaN(e.max)?e.value:e.max,r.min=isNaN(e.min)?e.value:e.min,r.name=e.name,r.stdDev=isNaN(e.stdDev)?0:e.stdDev,r.value=e.value,t.metrics.push(r),t.properties=e.properties;var i=new n.Data;return i.baseType=n.telemetryTypeToBaseType(n.TelemetryType.Metric),i.baseData=t,i},e.getTags=function(e,t){var r=o.CorrelationContextManager.getCurrentContext(),n={};if(e&&e.tags)for(var i in e.tags)n[i]=e.tags[i];if(t)for(var i in t)n[i]=t[i];return r&&(n[e.keys.operationId]=n[e.keys.operationId]||r.operation.id,n[e.keys.operationName]=n[e.keys.operationName]||r.operation.name,n[e.keys.operationParentId]=n[e.keys.operationParentId]||r.operation.parentId),n},e.parseStack=function(e){var t=void 0;if(\"string\"==typeof e){var r=e.split(\"\\n\");t=[];for(var n=0,i=0,o=0;o<=r.length;o++){var s=r[o];if(a.regex.test(s)){var c=new a(r[o],n++);i+=c.sizeInBytes,t.push(c)}}if(i>32768)for(var u=0,l=t.length-1,h=0,p=u,d=l;u<l;){if((h+=t[u].sizeInBytes+t[l].sizeInBytes)>32768){var f=d-p+1;t.splice(p,f);break}p=u,d=l,u++,l--}}return t},e}(),a=function(){function e(t,r){this.sizeInBytes=0,this.level=r,this.method=\"<no_method>\",this.assembly=i.trim(t);var n=t.match(e.regex);n&&n.length>=5&&(this.method=i.trim(n[2])||this.method,this.fileName=i.trim(n[4])||\"<no_filename>\",this.line=parseInt(n[5])||0),this.sizeInBytes+=this.method.length,this.sizeInBytes+=this.fileName.length,this.sizeInBytes+=this.assembly.length,this.sizeInBytes+=e.baseSize,this.sizeInBytes+=this.level.toString().length,this.sizeInBytes+=this.line.toString().length}return e.regex=/^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/,e.baseSize=58,e}();e.exports=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3),i=r(5),o=r(187);t.GitProtocolHandler=class{constructor(){this.disposables=[],this.disposables.push(n.window.registerUriHandler(this))}handleUri(e){switch(e.path){case\"/clone\":this.clone(e)}}clone(e){const t=o.parse(e.query);t.url||console.warn(\"Failed to open URI:\",e),n.commands.executeCommand(\"git.clone\",t.url)}dispose(){this.disposables=i.dispose(this.disposables)}}},function(e,t){e.exports=require(\"querystring\")},function(e,t,r){\"use strict\";var n=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,s=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(s=(o<3?i(s):o>3?i(t,r,s):i(t,r))||s);return o>3&&s&&Object.defineProperty(t,r,s),s};Object.defineProperty(t,\"__esModule\",{value:!0});const i=r(189),o=r(3),s=r(5);function a(e,t,r){if(\"function\"!=typeof r.value)throw new Error(\"not supported\");const n=r.value;r.value=function(){return console.warn(`Git extension API method '${t}' is deprecated.`),n.apply(this,arguments)}}t.deprecated=a;class c{constructor(e){this.enabled=!1,this._onDidChangeEnablement=new o.EventEmitter,this.onDidChangeEnablement=s.latchEvent(this._onDidChangeEnablement.event),this._model=void 0,e&&(this.enabled=!0,this._model=e)}set model(e){this._model=e,this.enabled=!!e,this._onDidChangeEnablement.fire(this.enabled)}async getGitPath(){if(!this._model)throw new Error(\"Git model not found\");return this._model.git.path}async getRepositories(){if(!this._model)throw new Error(\"Git model not found\");return this._model.repositories.map(e=>new i.ApiRepository(e))}getAPI(e){if(!this._model)throw new Error(\"Git model not found\");if(1!==e)throw new Error(`No API version ${e} found.`);return new i.ApiImpl(this._model)}}n([a],c.prototype,\"getGitPath\",null),n([a],c.prototype,\"getRepositories\",null),t.GitExtensionImpl=c},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(3),i=r(5),o=r(19);class s{constructor(e){this._inputBox=e}set value(e){this._inputBox.value=e}get value(){return this._inputBox.value}}class a{constructor(e){this.resource=e}get uri(){return this.resource.resourceUri}get originalUri(){return this.resource.original}get renameUri(){return this.resource.renameResourceUri}get status(){return this.resource.type}}t.ApiChange=a;class c{constructor(e){this._repository=e,this.onDidChange=this._repository.onDidRunGitStatus}get HEAD(){return this._repository.HEAD}get refs(){return[...this._repository.refs]}get remotes(){return[...this._repository.remotes]}get submodules(){return[...this._repository.submodules]}get rebaseCommit(){return this._repository.rebaseCommit}get mergeChanges(){return this._repository.mergeGroup.resourceStates.map(e=>new a(e))}get indexChanges(){return this._repository.indexGroup.resourceStates.map(e=>new a(e))}get workingTreeChanges(){return this._repository.workingTreeGroup.resourceStates.map(e=>new a(e))}}t.ApiRepositoryState=c;class u{constructor(e){this._sourceControl=e,this.onDidChange=i.mapEvent(this._sourceControl.onDidChangeSelection,()=>null)}get selected(){return this._sourceControl.selected}}t.ApiRepositoryUIState=u;class l{constructor(e){this._repository=e,this.rootUri=n.Uri.file(this._repository.root),this.inputBox=new s(this._repository.inputBox),this.state=new c(this._repository),this.ui=new u(this._repository.sourceControl)}apply(e,t){return this._repository.apply(e,t)}getConfigs(){return this._repository.getConfigs()}getConfig(e){return this._repository.getConfig(e)}setConfig(e,t){return this._repository.setConfig(e,t)}getGlobalConfig(e){return this._repository.getGlobalConfig(e)}getObjectDetails(e,t){return this._repository.getObjectDetails(e,t)}detectObjectType(e){return this._repository.detectObjectType(e)}buffer(e,t){return this._repository.buffer(e,t)}show(e,t){return this._repository.show(e,t)}getCommit(e){return this._repository.getCommit(e)}clean(e){return this._repository.clean(e.map(e=>n.Uri.file(e)))}diff(e){return this._repository.diff(e)}diffWithHEAD(e){return this._repository.diffWithHEAD(e)}diffWith(e,t){return this._repository.diffWith(e,t)}diffIndexWithHEAD(e){return this._repository.diffIndexWithHEAD(e)}diffIndexWith(e,t){return this._repository.diffIndexWith(e,t)}diffBlobs(e,t){return this._repository.diffBlobs(e,t)}diffBetween(e,t,r){return this._repository.diffBetween(e,t,r)}hashObject(e){return this._repository.hashObject(e)}createBranch(e,t,r){return this._repository.branch(e,t,r)}deleteBranch(e,t){return this._repository.deleteBranch(e,t)}getBranch(e){return this._repository.getBranch(e)}setBranchUpstream(e,t){return this._repository.setBranchUpstream(e,t)}getMergeBase(e,t){return this._repository.getMergeBase(e,t)}status(){return this._repository.status()}checkout(e){return this._repository.checkout(e)}addRemote(e,t){return this._repository.addRemote(e,t)}removeRemote(e){return this._repository.removeRemote(e)}fetch(e,t,r){return this._repository.fetch(e,t,r)}pull(e){return this._repository.pull(void 0,e)}push(e,t,r=!1){return this._repository.pushTo(e,t,r)}blame(e){return this._repository.blame(e)}log(e){return this._repository.log(e)}commit(e,t){return this._repository.commit(e,t)}}t.ApiRepository=l;class h{constructor(e){this._model=e}get path(){return this._model.git.path}}t.ApiGit=h;t.ApiImpl=class{constructor(e){this._model=e,this.git=new h(this._model)}get state(){return this._model.state}get onDidChangeState(){return this._model.onDidChangeState}get onDidOpenRepository(){return i.mapEvent(this._model.onDidOpenRepository,e=>new l(e))}get onDidCloseRepository(){return i.mapEvent(this._model.onDidCloseRepository,e=>new l(e))}get repositories(){return this._model.repositories.map(e=>new l(e))}toGitUri(e,t){return o.toGitUri(e,t)}getRepository(e){const t=this._model.getRepository(e);return t?new l(t):null}}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=r(5),i=r(0),o=r(20),s=r(12),a=r(2),c=r(46);t.createIPCServer=async function(){const e=o.createServer(),t=function(e){return\"win32\"===process.platform?`\\\\\\\\.\\\\pipe\\\\vscode-git-ipc-${e}-sock`:process.env.XDG_RUNTIME_DIR?i.join(process.env.XDG_RUNTIME_DIR,`vscode-git-ipc-${e}.sock`):i.join(s.tmpdir(),`vscode-git-ipc-${e}.sock`)}((await new Promise((e,t)=>c.randomBytes(20,(r,n)=>r?t(r):e(n)))).toString(\"hex\"));return new Promise((r,n)=>{try{e.on(\"error\",e=>n(e)),e.listen(t),r(new u(e,t))}catch(e){n(e)}})};class u{constructor(e,t){this.server=e,this._ipcHandlePath=t,this.handlers=new Map,this.server.on(\"request\",this.onRequest.bind(this))}get ipcHandlePath(){return this._ipcHandlePath}registerHandler(e,t){return this.handlers.set(`/${e}`,t),n.toDisposable(()=>this.handlers.delete(e))}onRequest(e,t){if(!e.url)return void console.warn(\"Request lacks url\");const r=this.handlers.get(e.url);if(!r)return void console.warn(`IPC handler for ${e.url} not found`);const n=[];e.on(\"data\",e=>n.push(e)),e.on(\"end\",()=>{const e=JSON.parse(Buffer.concat(n).toString(\"utf8\"));r.handle(e).then(e=>{t.writeHead(200),t.end(JSON.stringify(e))},()=>{t.writeHead(500),t.end()})})}getEnv(){return{VSCODE_GIT_IPC_HANDLE:this.ipcHandlePath}}dispose(){this.handlers.clear(),this.server.close(),this._ipcHandlePath&&\"win32\"!==process.platform&&a.unlinkSync(this._ipcHandlePath)}}},function(e){e.exports={name:\"git\",displayName:\"%displayName%\",description:\"%description%\",publisher:\"vscode\",license:\"MIT\",version:\"1.0.0\",engines:{vscode:\"^1.5.0\"},aiKey:\"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217\",enableProposedApi:!0,categories:[\"Other\"],activationEvents:[\"*\"],main:\"./out/main\",icon:\"resources/icons/git.png\",scripts:{compile:\"gulp compile-extension:git\",watch:\"gulp watch-extension:git\",\"update-grammar\":\"node ./build/update-grammars.js\",test:\"mocha\"},contributes:{commands:[{command:\"git.setLogLevel\",title:\"%command.setLogLevel%\",category:\"Git\"},{command:\"git.clone\",title:\"%command.clone%\",category:\"Git\"},{command:\"git.init\",title:\"%command.init%\",category:\"Git\",icon:{light:\"resources/icons/light/git.svg\",dark:\"resources/icons/dark/git.svg\"}},{command:\"git.openRepository\",title:\"%command.openRepository%\",category:\"Git\"},{command:\"git.close\",title:\"%command.close%\",category:\"Git\"},{command:\"git.refresh\",title:\"%command.refresh%\",category:\"Git\",icon:{light:\"resources/icons/light/refresh.svg\",dark:\"resources/icons/dark/refresh.svg\"}},{command:\"git.openChange\",title:\"%command.openChange%\",category:\"Git\",icon:{light:\"resources/icons/light/open-change.svg\",dark:\"resources/icons/dark/open-change.svg\"}},{command:\"git.openFile\",title:\"%command.openFile%\",category:\"Git\",icon:{light:\"resources/icons/light/open-file.svg\",dark:\"resources/icons/dark/open-file.svg\"}},{command:\"git.openFile2\",title:\"%command.openFile%\",category:\"Git\",icon:{light:\"resources/icons/light/open-file.svg\",dark:\"resources/icons/dark/open-file.svg\"}},{command:\"git.openHEADFile\",title:\"%command.openHEADFile%\",category:\"Git\"},{command:\"git.stage\",title:\"%command.stage%\",category:\"Git\",icon:{light:\"resources/icons/light/stage.svg\",dark:\"resources/icons/dark/stage.svg\"}},{command:\"git.stageAll\",title:\"%command.stageAll%\",category:\"Git\",icon:{light:\"resources/icons/light/stage.svg\",dark:\"resources/icons/dark/stage.svg\"}},{command:\"git.stageAllTracked\",title:\"%command.stageAllTracked%\",category:\"Git\",icon:{light:\"resources/icons/light/stage.svg\",dark:\"resources/icons/dark/stage.svg\"}},{command:\"git.stageAllUntracked\",title:\"%command.stageAllUntracked%\",category:\"Git\",icon:{light:\"resources/icons/light/stage.svg\",dark:\"resources/icons/dark/stage.svg\"}},{command:\"git.stageSelectedRanges\",title:\"%command.stageSelectedRanges%\",category:\"Git\"},{command:\"git.revertSelectedRanges\",title:\"%command.revertSelectedRanges%\",category:\"Git\"},{command:\"git.stageChange\",title:\"%command.stageChange%\",category:\"Git\",icon:{light:\"resources/icons/light/stage.svg\",dark:\"resources/icons/dark/stage.svg\"}},{command:\"git.revertChange\",title:\"%command.revertChange%\",category:\"Git\",icon:{light:\"resources/icons/light/clean.svg\",dark:\"resources/icons/dark/clean.svg\"}},{command:\"git.unstage\",title:\"%command.unstage%\",category:\"Git\",icon:{light:\"resources/icons/light/unstage.svg\",dark:\"resources/icons/dark/unstage.svg\"}},{command:\"git.unstageAll\",title:\"%command.unstageAll%\",category:\"Git\",icon:{light:\"resources/icons/light/unstage.svg\",dark:\"resources/icons/dark/unstage.svg\"}},{command:\"git.unstageSelectedRanges\",title:\"%command.unstageSelectedRanges%\",category:\"Git\"},{command:\"git.clean\",title:\"%command.clean%\",category:\"Git\",icon:{light:\"resources/icons/light/clean.svg\",dark:\"resources/icons/dark/clean.svg\"}},{command:\"git.cleanAll\",title:\"%command.cleanAll%\",category:\"Git\",icon:{light:\"resources/icons/light/clean.svg\",dark:\"resources/icons/dark/clean.svg\"}},{command:\"git.cleanAllTracked\",title:\"%command.cleanAllTracked%\",category:\"Git\",icon:{light:\"resources/icons/light/clean.svg\",dark:\"resources/icons/dark/clean.svg\"}},{command:\"git.cleanAllUntracked\",title:\"%command.cleanAllUntracked%\",category:\"Git\",icon:{light:\"resources/icons/light/clean.svg\",dark:\"resources/icons/dark/clean.svg\"}},{command:\"git.commit\",title:\"%command.commit%\",category:\"Git\",icon:{light:\"resources/icons/light/check.svg\",dark:\"resources/icons/dark/check.svg\"}},{command:\"git.commitStaged\",title:\"%command.commitStaged%\",category:\"Git\"},{command:\"git.commitEmpty\",title:\"%command.commitEmpty%\",category:\"Git\"},{command:\"git.commitStagedSigned\",title:\"%command.commitStagedSigned%\",category:\"Git\"},{command:\"git.commitStagedAmend\",title:\"%command.commitStagedAmend%\",category:\"Git\"},{command:\"git.commitAll\",title:\"%command.commitAll%\",category:\"Git\"},{command:\"git.commitAllSigned\",title:\"%command.commitAllSigned%\",category:\"Git\"},{command:\"git.commitAllAmend\",title:\"%command.commitAllAmend%\",category:\"Git\"},{command:\"git.restoreCommitTemplate\",title:\"%command.restoreCommitTemplate%\",category:\"Git\"},{command:\"git.undoCommit\",title:\"%command.undoCommit%\",category:\"Git\"},{command:\"git.checkout\",title:\"%command.checkout%\",category:\"Git\"},{command:\"git.branch\",title:\"%command.branch%\",category:\"Git\"},{command:\"git.branchFrom\",title:\"%command.branchFrom%\",category:\"Git\"},{command:\"git.deleteBranch\",title:\"%command.deleteBranch%\",category:\"Git\"},{command:\"git.renameBranch\",title:\"%command.renameBranch%\",category:\"Git\"},{command:\"git.merge\",title:\"%command.merge%\",category:\"Git\"},{command:\"git.createTag\",title:\"%command.createTag%\",category:\"Git\"},{command:\"git.deleteTag\",title:\"%command.deleteTag%\",category:\"Git\"},{command:\"git.fetch\",title:\"%command.fetch%\",category:\"Git\"},{command:\"git.fetchPrune\",title:\"%command.fetchPrune%\",category:\"Git\"},{command:\"git.fetchAll\",title:\"%command.fetchAll%\",category:\"Git\"},{command:\"git.pull\",title:\"%command.pull%\",category:\"Git\"},{command:\"git.pullRebase\",title:\"%command.pullRebase%\",category:\"Git\"},{command:\"git.pullFrom\",title:\"%command.pullFrom%\",category:\"Git\"},{command:\"git.push\",title:\"%command.push%\",category:\"Git\"},{command:\"git.pushForce\",title:\"%command.pushForce%\",category:\"Git\"},{command:\"git.pushTo\",title:\"%command.pushTo%\",category:\"Git\"},{command:\"git.pushToForce\",title:\"%command.pushToForce%\",category:\"Git\"},{command:\"git.pushWithTags\",title:\"%command.pushFollowTags%\",category:\"Git\"},{command:\"git.pushWithTagsForce\",title:\"%command.pushFollowTagsForce%\",category:\"Git\"},{command:\"git.addRemote\",title:\"%command.addRemote%\",category:\"Git\"},{command:\"git.removeRemote\",title:\"%command.removeRemote%\",category:\"Git\"},{command:\"git.sync\",title:\"%command.sync%\",category:\"Git\"},{command:\"git.syncRebase\",title:\"%command.syncRebase%\",category:\"Git\"},{command:\"git.publish\",title:\"%command.publish%\",category:\"Git\"},{command:\"git.showOutput\",title:\"%command.showOutput%\",category:\"Git\"},{command:\"git.ignore\",title:\"%command.ignore%\",category:\"Git\"},{command:\"git.revealInExplorer\",title:\"%command.revealInExplorer%\",category:\"Git\"},{command:\"git.stashIncludeUntracked\",title:\"%command.stashIncludeUntracked%\",category:\"Git\"},{command:\"git.stash\",title:\"%command.stash%\",category:\"Git\"},{command:\"git.stashPop\",title:\"%command.stashPop%\",category:\"Git\"},{command:\"git.stashPopLatest\",title:\"%command.stashPopLatest%\",category:\"Git\"},{command:\"git.stashApply\",title:\"%command.stashApply%\",category:\"Git\"},{command:\"git.stashApplyLatest\",title:\"%command.stashApplyLatest%\",category:\"Git\"},{command:\"git.stashDrop\",title:\"%command.stashDrop%\",category:\"Git\"},{command:\"git.timeline.openDiff\",title:\"%command.timelineOpenDiff%\",icon:\"$(compare-changes)\",category:\"Git\"},{command:\"git.timeline.copyCommitId\",title:\"%command.timelineCopyCommitId%\",category:\"Git\"},{command:\"git.timeline.copyCommitMessage\",title:\"%command.timelineCopyCommitMessage%\",category:\"Git\"}],menus:{commandPalette:[{command:\"git.setLogLevel\",when:\"config.git.enabled && !git.missing\"},{command:\"git.clone\",when:\"config.git.enabled && !git.missing\"},{command:\"git.init\",when:\"config.git.enabled && !git.missing\"},{command:\"git.openRepository\",when:\"config.git.enabled && !git.missing\"},{command:\"git.close\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.refresh\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.openFile\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.openHEADFile\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.openChange\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stage\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stageAll\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stageAllTracked\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stageAllUntracked\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stageSelectedRanges\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stageChange\",when:\"false\"},{command:\"git.revertSelectedRanges\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.revertChange\",when:\"false\"},{command:\"git.openFile2\",when:\"false\"},{command:\"git.unstage\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.unstageAll\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.unstageSelectedRanges\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.clean\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.cleanAll\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.cleanAllTracked\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.cleanAllUntracked\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commit\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commitStaged\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commitEmpty\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commitStagedSigned\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commitStagedAmend\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commitAll\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commitAllSigned\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.commitAllAmend\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.restoreCommitTemplate\",when:\"false\"},{command:\"git.revealInExplorer\",when:\"false\"},{command:\"git.undoCommit\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.checkout\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.branch\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.branchFrom\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.deleteBranch\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.renameBranch\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.pull\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.pullFrom\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.pullRebase\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.pullFrom\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.merge\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.createTag\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.deleteTag\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.fetch\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.fetchPrune\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.fetchAll\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.push\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.pushForce\",when:\"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0\"},{command:\"git.pushTo\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.pushToForce\",when:\"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0\"},{command:\"git.pushWithTags\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.pushWithTagsForce\",when:\"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0\"},{command:\"git.addRemote\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.removeRemote\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.sync\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.syncRebase\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.publish\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.showOutput\",when:\"config.git.enabled\"},{command:\"git.ignore\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stashIncludeUntracked\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stash\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stashPop\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stashPopLatest\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stashApply\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stashApplyLatest\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.stashDrop\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0\"},{command:\"git.timeline.openDiff\",when:\"false\"},{command:\"git.timeline.copyCommitId\",when:\"false\"},{command:\"git.timeline.copyCommitMessage\",when:\"false\"}],\"scm/title\":[{command:\"git.commit\",group:\"navigation\",when:\"scmProvider == git\"},{command:\"git.refresh\",group:\"navigation\",when:\"scmProvider == git\"},{command:\"git.sync\",group:\"1_sync\",when:\"scmProvider == git\"},{command:\"git.syncRebase\",group:\"1_sync\",when:\"scmProvider == git && gitState == idle\"},{command:\"git.pull\",group:\"1_sync\",when:\"scmProvider == git\"},{command:\"git.pullRebase\",group:\"1_sync\",when:\"scmProvider == git\"},{command:\"git.pullFrom\",group:\"1_sync\",when:\"scmProvider == git\"},{command:\"git.push\",group:\"1_sync\",when:\"scmProvider == git\"},{command:\"git.pushForce\",group:\"1_sync\",when:\"scmProvider == git && config.git.allowForcePush\"},{command:\"git.pushTo\",group:\"1_sync\",when:\"scmProvider == git\"},{command:\"git.pushToForce\",group:\"1_sync\",when:\"scmProvider == git && config.git.allowForcePush\"},{command:\"git.checkout\",group:\"2_branch\",when:\"scmProvider == git\"},{command:\"git.publish\",group:\"2_branch\",when:\"scmProvider == git\"},{command:\"git.commitStaged\",group:\"4_commit\",when:\"scmProvider == git\"},{command:\"git.commitStagedSigned\",group:\"4_commit\",when:\"scmProvider == git\"},{command:\"git.commitStagedAmend\",group:\"4_commit\",when:\"scmProvider == git\"},{command:\"git.commitAll\",group:\"4_commit\",when:\"scmProvider == git\"},{command:\"git.commitAllSigned\",group:\"4_commit\",when:\"scmProvider == git\"},{command:\"git.commitAllAmend\",group:\"4_commit\",when:\"scmProvider == git\"},{command:\"git.undoCommit\",group:\"4_commit\",when:\"scmProvider == git\"},{command:\"git.stageAll\",group:\"5_stage\",when:\"scmProvider == git\"},{command:\"git.unstageAll\",group:\"5_stage\",when:\"scmProvider == git\"},{command:\"git.cleanAll\",group:\"5_stage\",when:\"scmProvider == git\"},{command:\"git.stashIncludeUntracked\",group:\"6_stash\",when:\"scmProvider == git\"},{command:\"git.stash\",group:\"6_stash\",when:\"scmProvider == git\"},{command:\"git.stashPop\",group:\"6_stash\",when:\"scmProvider == git\"},{command:\"git.stashPopLatest\",group:\"6_stash\",when:\"scmProvider == git\"},{command:\"git.stashApply\",group:\"6_stash\",when:\"scmProvider == git\"},{command:\"git.stashApplyLatest\",group:\"6_stash\",when:\"scmProvider == git\"},{command:\"git.stashDrop\",group:\"6_stash\",when:\"scmProvider == git\"},{command:\"git.showOutput\",group:\"7_repository\",when:\"scmProvider == git\"}],\"scm/sourceControl\":[{command:\"git.close\",group:\"navigation\",when:\"scmProvider == git\"}],\"scm/resourceGroup/context\":[{command:\"git.stageAll\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"1_modification\"},{command:\"git.stageAll\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"inline\"},{command:\"git.unstageAll\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"1_modification\"},{command:\"git.unstageAll\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"inline\"},{command:\"git.cleanAll\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed\",group:\"1_modification\"},{command:\"git.stageAll\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed\",group:\"1_modification\"},{command:\"git.cleanAll\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed\",group:\"inline\"},{command:\"git.stageAll\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed\",group:\"inline\"},{command:\"git.cleanAllTracked\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed\",group:\"1_modification\"},{command:\"git.stageAllTracked\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed\",group:\"1_modification\"},{command:\"git.cleanAllTracked\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed\",group:\"inline\"},{command:\"git.stageAllTracked\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed\",group:\"inline\"},{command:\"git.cleanAllUntracked\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"1_modification\"},{command:\"git.stageAllUntracked\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"1_modification\"},{command:\"git.cleanAllUntracked\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"inline\"},{command:\"git.stageAllUntracked\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"inline\"}],\"scm/resourceFolder/context\":[{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"1_modification\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"inline\"},{command:\"git.unstage\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"1_modification\"},{command:\"git.unstage\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"inline\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"1_modification\"},{command:\"git.clean\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"1_modification\"},{command:\"git.clean\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"inline\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"inline\"},{command:\"git.ignore\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"1_modification@3\"}],\"scm/resourceState/context\":[{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"1_modification\"},{command:\"git.openFile\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"navigation\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"inline\"},{command:\"git.revealInExplorer\",when:\"scmProvider == git && scmResourceGroup == merge\",group:\"2_view\"},{command:\"git.openFile2\",when:\"scmProvider == git && scmResourceGroup == merge && config.git.showInlineOpenFileAction && config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.openChange\",when:\"scmProvider == git && scmResourceGroup == merge && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.openChange\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"navigation\"},{command:\"git.openFile\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"navigation\"},{command:\"git.openHEADFile\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"navigation\"},{command:\"git.unstage\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"1_modification\"},{command:\"git.unstage\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"inline\"},{command:\"git.revealInExplorer\",when:\"scmProvider == git && scmResourceGroup == index\",group:\"2_view\"},{command:\"git.openFile2\",when:\"scmProvider == git && scmResourceGroup == index && config.git.showInlineOpenFileAction && config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.openChange\",when:\"scmProvider == git && scmResourceGroup == index && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.openChange\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"navigation\"},{command:\"git.openHEADFile\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"navigation\"},{command:\"git.openFile\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"navigation\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"1_modification\"},{command:\"git.clean\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"1_modification\"},{command:\"git.clean\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"inline\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"inline\"},{command:\"git.openFile2\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.showInlineOpenFileAction && config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.openChange\",when:\"scmProvider == git && scmResourceGroup == workingTree && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.ignore\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"1_modification@3\"},{command:\"git.revealInExplorer\",when:\"scmProvider == git && scmResourceGroup == workingTree\",group:\"2_view\"},{command:\"git.openChange\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"navigation\"},{command:\"git.openHEADFile\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"navigation\"},{command:\"git.openFile\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"navigation\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"1_modification\"},{command:\"git.clean\",when:\"scmProvider == git && scmResourceGroup == untracked && !gitFreshRepository\",group:\"1_modification\"},{command:\"git.clean\",when:\"scmProvider == git && scmResourceGroup == untracked && !gitFreshRepository\",group:\"inline\"},{command:\"git.stage\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"inline\"},{command:\"git.openFile2\",when:\"scmProvider == git && scmResourceGroup == untracked && config.git.showInlineOpenFileAction && config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.openChange\",when:\"scmProvider == git && scmResourceGroup == untracked && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick\",group:\"inline0\"},{command:\"git.ignore\",when:\"scmProvider == git && scmResourceGroup == untracked\",group:\"1_modification@3\"}],\"editor/title\":[{command:\"git.openFile\",group:\"navigation\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/\"},{command:\"git.openChange\",group:\"navigation\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && !isInDiffEditor && resourceScheme == file\"},{command:\"git.stageSelectedRanges\",group:\"2_git@1\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/\"},{command:\"git.unstageSelectedRanges\",group:\"2_git@2\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/\"},{command:\"git.revertSelectedRanges\",group:\"2_git@3\",when:\"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/\"}],\"editor/context\":[{command:\"git.stageSelectedRanges\",group:\"2_git@1\",when:\"isInDiffRightEditor && config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/\"},{command:\"git.unstageSelectedRanges\",group:\"2_git@2\",when:\"isInDiffRightEditor && config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/\"},{command:\"git.revertSelectedRanges\",group:\"2_git@3\",when:\"isInDiffRightEditor && config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/\"}],\"scm/change/title\":[{command:\"git.stageChange\",when:\"config.git.enabled && !git.missing && originalResourceScheme == git\"},{command:\"git.revertChange\",when:\"config.git.enabled && !git.missing && originalResourceScheme == git\"}],\"timeline/item/context\":[{command:\"git.timeline.openDiff\",group:\"inline\",when:\"config.git.enabled && !git.missing && timelineItem =~ /git:file\\\\b/\"},{command:\"git.timeline.openDiff\",group:\"1_timeline\",when:\"config.git.enabled && !git.missing && timelineItem =~ /git:file\\\\b/\"},{command:\"git.timeline.copyCommitId\",group:\"2_timeline@1\",when:\"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\\\b/\"},{command:\"git.timeline.copyCommitMessage\",group:\"2_timeline@2\",when:\"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\\\b/\"}]},configuration:{title:\"Git\",properties:{\"git.enabled\":{type:\"boolean\",scope:\"resource\",description:\"%config.enabled%\",default:!0},\"git.path\":{type:[\"string\",\"null\"],markdownDescription:\"%config.path%\",default:null,scope:\"machine\"},\"git.autoRepositoryDetection\":{type:[\"boolean\",\"string\"],enum:[!0,!1,\"subFolders\",\"openEditors\"],enumDescriptions:[\"%config.autoRepositoryDetection.true%\",\"%config.autoRepositoryDetection.false%\",\"%config.autoRepositoryDetection.subFolders%\",\"%config.autoRepositoryDetection.openEditors%\"],description:\"%config.autoRepositoryDetection%\",default:!0},\"git.autorefresh\":{type:\"boolean\",description:\"%config.autorefresh%\",default:!0},\"git.autofetch\":{type:\"boolean\",scope:\"resource\",description:\"%config.autofetch%\",default:!1,tags:[\"usesOnlineServices\"]},\"git.autofetchPeriod\":{type:\"number\",scope:\"resource\",description:\"%config.autofetchPeriod%\",default:180},\"git.branchValidationRegex\":{type:\"string\",description:\"%config.branchValidationRegex%\",default:\"\"},\"git.branchWhitespaceChar\":{type:\"string\",description:\"%config.branchWhitespaceChar%\",default:\"-\"},\"git.confirmSync\":{type:\"boolean\",description:\"%config.confirmSync%\",default:!0},\"git.countBadge\":{type:\"string\",enum:[\"all\",\"tracked\",\"off\"],enumDescriptions:[\"%config.countBadge.all%\",\"%config.countBadge.tracked%\",\"%config.countBadge.off%\"],description:\"%config.countBadge%\",default:\"all\",scope:\"resource\"},\"git.checkoutType\":{type:\"string\",enum:[\"all\",\"local\",\"tags\",\"remote\"],enumDescriptions:[\"%config.checkoutType.all%\",\"%config.checkoutType.local%\",\"%config.checkoutType.tags%\",\"%config.checkoutType.remote%\"],markdownDescription:\"%config.checkoutType%\",default:\"all\"},\"git.ignoreLegacyWarning\":{type:\"boolean\",description:\"%config.ignoreLegacyWarning%\",default:!1},\"git.ignoreMissingGitWarning\":{type:\"boolean\",description:\"%config.ignoreMissingGitWarning%\",default:!1},\"git.ignoreLimitWarning\":{type:\"boolean\",description:\"%config.ignoreLimitWarning%\",default:!1},\"git.defaultCloneDirectory\":{type:[\"string\",\"null\"],default:null,description:\"%config.defaultCloneDirectory%\"},\"git.enableSmartCommit\":{type:\"boolean\",scope:\"resource\",description:\"%config.enableSmartCommit%\",default:!1},\"git.smartCommitChanges\":{type:\"string\",enum:[\"all\",\"tracked\"],enumDescriptions:[\"%config.smartCommitChanges.all%\",\"%config.smartCommitChanges.tracked%\"],scope:\"resource\",description:\"%config.smartCommitChanges%\",default:\"all\"},\"git.suggestSmartCommit\":{type:\"boolean\",scope:\"resource\",description:\"%config.suggestSmartCommit%\",default:!0},\"git.enableCommitSigning\":{type:\"boolean\",scope:\"resource\",description:\"%config.enableCommitSigning%\",default:!1},\"git.confirmEmptyCommits\":{type:\"boolean\",scope:\"resource\",description:\"%config.confirmEmptyCommits%\",default:!0},\"git.decorations.enabled\":{type:\"boolean\",default:!0,description:\"%config.decorations.enabled%\"},\"git.enableStatusBarSync\":{type:\"boolean\",default:!0,description:\"%config.enableStatusBarSync%\",scope:\"resource\"},\"git.promptToSaveFilesBeforeCommit\":{type:\"string\",enum:[\"always\",\"staged\",\"never\"],enumDescriptions:[\"%config.promptToSaveFilesBeforeCommit.always%\",\"%config.promptToSaveFilesBeforeCommit.staged%\",\"%config.promptToSaveFilesBeforeCommit.never%\"],scope:\"resource\",default:\"always\",description:\"%config.promptToSaveFilesBeforeCommit%\"},\"git.postCommitCommand\":{type:\"string\",enum:[\"none\",\"push\",\"sync\"],enumDescriptions:[\"%config.postCommitCommand.none%\",\"%config.postCommitCommand.push%\",\"%config.postCommitCommand.sync%\"],markdownDescription:\"%config.postCommitCommand%\",scope:\"resource\",default:\"none\"},\"git.showInlineOpenFileAction\":{type:\"boolean\",default:!0,description:\"%config.showInlineOpenFileAction%\"},\"git.showPushSuccessNotification\":{type:\"boolean\",description:\"%config.showPushSuccessNotification%\",default:!1},\"git.inputValidation\":{type:\"string\",enum:[\"always\",\"warn\",\"off\"],default:\"warn\",description:\"%config.inputValidation%\"},\"git.inputValidationLength\":{type:\"number\",default:72,description:\"%config.inputValidationLength%\"},\"git.inputValidationSubjectLength\":{type:[\"number\",\"null\"],default:50,description:\"%config.inputValidationSubjectLength%\"},\"git.detectSubmodules\":{type:\"boolean\",scope:\"resource\",default:!0,description:\"%config.detectSubmodules%\"},\"git.detectSubmodulesLimit\":{type:\"number\",scope:\"resource\",default:10,description:\"%config.detectSubmodulesLimit%\"},\"git.alwaysShowStagedChangesResourceGroup\":{type:\"boolean\",scope:\"resource\",default:!1,description:\"%config.alwaysShowStagedChangesResourceGroup%\"},\"git.alwaysSignOff\":{type:\"boolean\",scope:\"resource\",default:!1,description:\"%config.alwaysSignOff%\"},\"git.ignoredRepositories\":{type:\"array\",items:{type:\"string\"},default:[],scope:\"window\",description:\"%config.ignoredRepositories%\"},\"git.scanRepositories\":{type:\"array\",items:{type:\"string\"},default:[],scope:\"resource\",description:\"%config.scanRepositories%\"},\"git.showProgress\":{type:\"boolean\",description:\"%config.showProgress%\",default:!0,scope:\"resource\"},\"git.rebaseWhenSync\":{type:\"boolean\",scope:\"resource\",default:!1,description:\"%config.rebaseWhenSync%\"},\"git.fetchOnPull\":{type:\"boolean\",scope:\"resource\",default:!1,description:\"%config.fetchOnPull%\"},\"git.pullTags\":{type:\"boolean\",scope:\"resource\",default:!0,description:\"%config.pullTags%\"},\"git.autoStash\":{type:\"boolean\",scope:\"resource\",default:!1,description:\"%config.autoStash%\"},\"git.allowForcePush\":{type:\"boolean\",default:!1,description:\"%config.allowForcePush%\"},\"git.useForcePushWithLease\":{type:\"boolean\",default:!0,description:\"%config.useForcePushWithLease%\"},\"git.confirmForcePush\":{type:\"boolean\",default:!0,description:\"%config.confirmForcePush%\"},\"git.openDiffOnClick\":{type:\"boolean\",scope:\"resource\",default:!0,description:\"%config.openDiffOnClick%\"},\"git.supportCancellation\":{type:\"boolean\",scope:\"resource\",default:!1,description:\"%config.supportCancellation%\"},\"git.branchSortOrder\":{type:\"string\",enum:[\"committerdate\",\"alphabetically\"],default:\"committerdate\",description:\"%config.branchSortOrder%\"},\"git.untrackedChanges\":{type:\"string\",enum:[\"mixed\",\"separate\",\"hidden\"],enumDescriptions:[\"%config.untrackedChanges.mixed%\",\"%config.untrackedChanges.separate%\",\"%config.untrackedChanges.hidden%\"],default:\"mixed\",description:\"%config.untrackedChanges%\",scope:\"resource\"}}},colors:[{id:\"gitDecoration.addedResourceForeground\",description:\"%colors.added%\",defaults:{light:\"#587c0c\",dark:\"#81b88b\",highContrast:\"#1b5225\"}},{id:\"gitDecoration.modifiedResourceForeground\",description:\"%colors.modified%\",defaults:{light:\"#895503\",dark:\"#E2C08D\",highContrast:\"#E2C08D\"}},{id:\"gitDecoration.deletedResourceForeground\",description:\"%colors.deleted%\",defaults:{light:\"#ad0707\",dark:\"#c74e39\",highContrast:\"#c74e39\"}},{id:\"gitDecoration.untrackedResourceForeground\",description:\"%colors.untracked%\",defaults:{light:\"#007100\",dark:\"#73C991\",highContrast:\"#73C991\"}},{id:\"gitDecoration.ignoredResourceForeground\",description:\"%colors.ignored%\",defaults:{light:\"#8E8E90\",dark:\"#8C8C8C\",highContrast:\"#A7A8A9\"}},{id:\"gitDecoration.conflictingResourceForeground\",description:\"%colors.conflict%\",defaults:{light:\"#6c6cc4\",dark:\"#6c6cc4\",highContrast:\"#6c6cc4\"}},{id:\"gitDecoration.submoduleResourceForeground\",description:\"%colors.submodule%\",defaults:{light:\"#1258a7\",dark:\"#8db9e2\",highContrast:\"#8db9e2\"}}],languages:[{id:\"git-commit\",aliases:[\"Git Commit Message\",\"git-commit\"],filenames:[\"COMMIT_EDITMSG\",\"MERGE_MSG\"],configuration:\"./languages/git-commit.language-configuration.json\"},{id:\"git-rebase\",aliases:[\"Git Rebase Message\",\"git-rebase\"],filenames:[\"git-rebase-todo\"],configuration:\"./languages/git-rebase.language-configuration.json\"},{id:\"diff\",aliases:[\"Diff\",\"diff\"],extensions:[\".patch\",\".diff\",\".rej\"],configuration:\"./languages/diff.language-configuration.json\"},{id:\"ignore\",aliases:[\"Ignore\",\"ignore\"],filenames:[\".gitignore\"],configuration:\"./languages/ignore.language-configuration.json\"}],grammars:[{language:\"git-commit\",scopeName:\"text.git-commit\",path:\"./syntaxes/git-commit.tmLanguage.json\"},{language:\"git-rebase\",scopeName:\"text.git-rebase\",path:\"./syntaxes/git-rebase.tmLanguage.json\"},{language:\"diff\",scopeName:\"source.diff\",path:\"./syntaxes/diff.tmLanguage.json\"},{language:\"ignore\",scopeName:\"source.ignore\",path:\"./syntaxes/ignore.tmLanguage.json\"}],configurationDefaults:{\"[git-commit]\":{\"editor.rulers\":[72]}},viewsWelcome:[{view:\"scm\",contents:\"%view.workbench.scm.disabled%\",when:\"!config.git.enabled\"},{view:\"scm\",contents:\"%view.workbench.scm.missing%\",when:\"config.git.enabled && git.missing\"},{view:\"scm\",contents:\"%view.workbench.scm.empty%\",when:\"config.git.enabled && !git.missing && workbenchState == empty\"},{view:\"scm\",contents:\"%view.workbench.scm.folder%\",when:\"config.git.enabled && !git.missing && workbenchState == folder\"},{view:\"scm\",contents:\"%view.workbench.scm.workspace%\",when:\"config.git.enabled && !git.missing && workbenchState == workspace && workspaceFolderCount != 0\"},{view:\"scm\",contents:\"%view.workbench.scm.emptyWorkspace%\",when:\"config.git.enabled && !git.missing && workbenchState == workspace && workspaceFolderCount == 0\"},{view:\"explorer\",contents:\"%view.workbench.cloneRepository%\"}]},dependencies:{byline:\"^5.0.0\",dayjs:\"1.8.19\",\"file-type\":\"^7.2.0\",\"iconv-lite\":\"^0.4.24\",jschardet:\"2.1.1\",\"vscode-extension-telemetry\":\"0.1.1\",\"vscode-nls\":\"^4.0.0\",\"vscode-uri\":\"^2.0.0\",which:\"^1.3.0\"},devDependencies:{\"@types/byline\":\"4.2.31\",\"@types/file-type\":\"^5.2.1\",\"@types/mocha\":\"2.2.43\",\"@types/node\":\"^12.11.7\",\"@types/which\":\"^1.0.28\",mocha:\"^3.2.0\",\"mocha-junit-reporter\":\"^1.23.3\",\"mocha-multi-reporters\":\"^1.1.7\",vscode:\"^1.1.36\"}}}]));","extractedComments":[]}