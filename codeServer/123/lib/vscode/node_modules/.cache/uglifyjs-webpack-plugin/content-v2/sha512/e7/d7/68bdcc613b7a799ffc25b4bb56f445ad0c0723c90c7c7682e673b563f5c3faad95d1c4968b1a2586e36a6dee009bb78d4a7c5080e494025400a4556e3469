{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"external \\\"vscode\\\"\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/main.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/messages.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/client.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/main.js\",\"external \\\"path\\\"\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/is.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/utils/is.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/events.js\",\"external \\\"fs\\\"\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/messageReader.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/messageWriter.js\",\"external \\\"child_process\\\"\",\"external \\\"net\\\"\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/protocolCompletionItem.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/protocolCodeLens.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/protocolDocumentLink.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/utils/uuid.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/progressPart.js\",\"/repo/lib/vscode/extensions/css-language-features/client/src/cssMain.ts\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/main.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/semver/semver.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/messages.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/cancellation.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/linkedMap.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/pipeSupport.js\",\"external \\\"os\\\"\",\"external \\\"crypto\\\"\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-jsonrpc/lib/socketSupport.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-types/lib/esm/main.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/utils/is.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.selectionRange.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.progress.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.callHierarchy.proposed.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageserver-protocol/lib/protocol.sematicTokens.proposed.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/codeConverter.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/protocolConverter.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/utils/async.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/colorProvider.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/configuration.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/implementation.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/typeDefinition.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/workspaceFolders.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/foldingRange.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/declaration.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/selectionRange.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/progress.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/callHierarchy.proposed.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/semanticTokens.proposed.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-languageclient/lib/utils/processes.js\",\"/repo/lib/vscode/extensions/css-language-features/node_modules/vscode-nls/lib/main.js\",\"/repo/lib/vscode/extensions/css-language-features/client/src/customData.ts\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"require\",\"__export\",\"vscode_jsonrpc_1\",\"ErrorCodes\",\"ResponseError\",\"CancellationToken\",\"CancellationTokenSource\",\"Disposable\",\"Event\",\"Emitter\",\"Trace\",\"TraceFormat\",\"SetTraceNotification\",\"LogTraceNotification\",\"RequestType\",\"RequestType0\",\"NotificationType\",\"NotificationType0\",\"MessageReader\",\"MessageWriter\",\"ConnectionStrategy\",\"StreamMessageReader\",\"StreamMessageWriter\",\"IPCMessageReader\",\"IPCMessageWriter\",\"createClientPipeTransport\",\"createServerPipeTransport\",\"generateRandomPipeName\",\"createClientSocketTransport\",\"createServerSocketTransport\",\"ProgressType\",\"callHierarchy\",\"st\",\"Proposed\",\"CallHierarchyPrepareRequest\",\"CallHierarchyIncomingCallsRequest\",\"CallHierarchyOutgoingCallsRequest\",\"SemanticTokensRequest\",\"SemanticTokensEditsRequest\",\"SemanticTokensRangeRequest\",\"method\",\"type\",\"SemanticTokenTypes\",\"SemanticTokenModifiers\",\"SemanticTokens\",\"createProtocolConnection\",\"reader\",\"writer\",\"logger\",\"strategy\",\"createMessageConnection\",\"ProtocolRequestType0\",\"[object Object]\",\"super\",\"ProtocolRequestType\",\"ProtocolNotificationType\",\"ProtocolNotificationType0\",\"vscode_1\",\"vscode_languageserver_protocol_1\",\"c2p\",\"p2c\",\"Is\",\"async_1\",\"UUID\",\"progressPart_1\",\"ConsoleLogger\",\"message\",\"console\",\"error\",\"warn\",\"info\",\"log\",\"ErrorAction\",\"CloseAction\",\"RevealOutputChannelOn\",\"State\",\"ClientState\",\"DefaultErrorHandler\",\"this\",\"restarts\",\"_error\",\"_message\",\"count\",\"Continue\",\"Shutdown\",\"push\",\"Date\",\"now\",\"length\",\"Restart\",\"window\",\"showErrorMessage\",\"DoNotRestart\",\"shift\",\"SupportedSymbolKinds\",\"SymbolKind\",\"File\",\"Module\",\"Namespace\",\"Package\",\"Class\",\"Method\",\"Property\",\"Field\",\"Constructor\",\"Enum\",\"Interface\",\"Function\",\"Variable\",\"Constant\",\"String\",\"Number\",\"Boolean\",\"Array\",\"Key\",\"Null\",\"EnumMember\",\"Struct\",\"Operator\",\"TypeParameter\",\"SupportedCompletionItemKinds\",\"CompletionItemKind\",\"Text\",\"Unit\",\"Value\",\"Keyword\",\"Snippet\",\"Color\",\"Reference\",\"Folder\",\"ensure\",\"target\",\"DynamicFeature\",\"is\",\"candidate\",\"func\",\"register\",\"unregister\",\"dispose\",\"messages\",\"DocumentNotifiactions\",\"_client\",\"_event\",\"_type\",\"_middleware\",\"_createParams\",\"_selectorFilter\",\"_selectors\",\"Map\",\"selectors\",\"textDocument\",\"selector\",\"languages\",\"match\",\"data\",\"registerOptions\",\"documentSelector\",\"_listener\",\"callback\",\"set\",\"id\",\"values\",\"sendNotification\",\"notificationSent\",\"_data\",\"delete\",\"size\",\"undefined\",\"clear\",\"document\",\"send\",\"Error\",\"DidOpenTextDocumentFeature\",\"client\",\"_syncedDocuments\",\"workspace\",\"onDidOpenTextDocument\",\"DidOpenTextDocumentNotification\",\"clientOptions\",\"middleware\",\"didOpen\",\"code2ProtocolConverter\",\"asOpenTextDocumentParams\",\"textDocumentFilter\",\"capabilities\",\"dynamicRegistration\",\"textDocumentSyncOptions\",\"resolvedTextDocumentSync\",\"openClose\",\"generateUuid\",\"textDocuments\",\"forEach\",\"uri\",\"toString\",\"has\",\"DidCloseTextDocumentFeature\",\"onDidCloseTextDocument\",\"DidCloseTextDocumentNotification\",\"didClose\",\"asCloseTextDocumentParams\",\"DidChangeTextDocumentFeature\",\"_changeData\",\"_forcingDelivery\",\"DidChangeTextDocumentNotification\",\"change\",\"TextDocumentSyncKind\",\"None\",\"assign\",\"syncKind\",\"onDidChangeTextDocument\",\"event\",\"contentChanges\",\"changeData\",\"Incremental\",\"params\",\"asChangeTextDocumentParams\",\"didChange\",\"Full\",\"_changeDelayer\",\"forceDelivery\",\"delayer\",\"trigger\",\"Delayer\",\"WillSaveFeature\",\"onWillSaveTextDocument\",\"WillSaveTextDocumentNotification\",\"willSave\",\"willSaveEvent\",\"asWillSaveTextDocumentParams\",\"WillSaveWaitUntilFeature\",\"WillSaveTextDocumentWaitUntilRequest\",\"willSaveWaitUntil\",\"sendRequest\",\"then\",\"edits\",\"vEdits\",\"protocol2CodeConverter\",\"asTextEdits\",\"waitUntil\",\"DidSaveTextDocumentFeature\",\"onDidSaveTextDocument\",\"DidSaveTextDocumentNotification\",\"didSave\",\"asSaveTextDocumentParams\",\"_includeText\",\"save\",\"includeText\",\"FileSystemWatcherFeature\",\"_notifyFileEvent\",\"_watchers\",\"DidChangeWatchedFilesNotification\",\"_capabilities\",\"_documentSelector\",\"_method\",\"isArray\",\"watchers\",\"disposeables\",\"watcher\",\"string\",\"globPattern\",\"watchCreate\",\"watchChange\",\"watchDelete\",\"kind\",\"WatchKind\",\"Create\",\"Change\",\"Delete\",\"fileSystemWatcher\",\"createFileSystemWatcher\",\"hookListeners\",\"fileSystemWatchers\",\"listeners\",\"onDidCreate\",\"resource\",\"asUri\",\"FileChangeType\",\"Created\",\"onDidChange\",\"Changed\",\"onDidDelete\",\"Deleted\",\"disposable\",\"TextDocumentFeature\",\"_registrations\",\"registration\",\"registerLanguageProvider\",\"provider\",\"capability\",\"TextDocumentRegistrationOptions\",\"StaticRegistrationOptions\",\"hasId\",\"boolean\",\"WorkDoneProgressOptions\",\"options\",\"WorkspaceFeature\",\"result\",\"CompletionItemFeature\",\"CompletionRequest\",\"capabilites\",\"completion\",\"contextSupport\",\"completionItem\",\"snippetSupport\",\"commitCharactersSupport\",\"documentationFormat\",\"MarkupKind\",\"Markdown\",\"PlainText\",\"deprecatedSupport\",\"preselectSupport\",\"tagSupport\",\"valueSet\",\"CompletionItemTag\",\"Deprecated\",\"completionItemKind\",\"getRegistrationOptions\",\"completionProvider\",\"triggerCharacters\",\"provideCompletionItems\",\"position\",\"token\",\"context\",\"asCompletionParams\",\"asCompletionResult\",\"logFailedRequest\",\"Promise\",\"resolve\",\"provideCompletionItem\",\"resolveCompletionItem\",\"resolveProvider\",\"item\",\"CompletionResolveRequest\",\"asCompletionItem\",\"registerCompletionItemProvider\",\"HoverFeature\",\"HoverRequest\",\"hoverCapability\",\"contentFormat\",\"hoverProvider\",\"provideHover\",\"asTextDocumentPositionParams\",\"asHover\",\"registerHoverProvider\",\"SignatureHelpFeature\",\"SignatureHelpRequest\",\"config\",\"signatureInformation\",\"parameterInformation\",\"labelOffsetSupport\",\"signatureHelpProvider\",\"provideSignatureHelp\",\"providerSignatureHelp\",\"asSignatureHelpParams\",\"asSignatureHelp\",\"retriggerCharacters\",\"registerSignatureHelpProvider\",\"metaData\",\"DefinitionFeature\",\"DefinitionRequest\",\"definitionSupport\",\"linkSupport\",\"definitionProvider\",\"provideDefinition\",\"asDefinitionResult\",\"registerDefinitionProvider\",\"ReferencesFeature\",\"ReferencesRequest\",\"referencesProvider\",\"provideReferences\",\"_providerReferences\",\"asReferenceParams\",\"asReferences\",\"registerReferenceProvider\",\"DocumentHighlightFeature\",\"DocumentHighlightRequest\",\"documentHighlightProvider\",\"provideDocumentHighlights\",\"_provideDocumentHighlights\",\"asDocumentHighlights\",\"registerDocumentHighlightProvider\",\"DocumentSymbolFeature\",\"DocumentSymbolRequest\",\"symbolCapabilities\",\"symbolKind\",\"hierarchicalDocumentSymbolSupport\",\"documentSymbolProvider\",\"provideDocumentSymbols\",\"_provideDocumentSymbols\",\"asDocumentSymbolParams\",\"element\",\"DocumentSymbol\",\"asDocumentSymbols\",\"asSymbolInformations\",\"registerDocumentSymbolProvider\",\"WorkspaceSymbolFeature\",\"WorkspaceSymbolRequest\",\"workspaceSymbolProvider\",\"workDoneProgress\",\"_options\",\"provideWorkspaceSymbols\",\"query\",\"registerWorkspaceSymbolProvider\",\"CodeActionFeature\",\"CodeActionRequest\",\"cap\",\"isPreferredSupport\",\"codeActionLiteralSupport\",\"codeActionKind\",\"CodeActionKind\",\"Empty\",\"QuickFix\",\"Refactor\",\"RefactorExtract\",\"RefactorInline\",\"RefactorRewrite\",\"Source\",\"SourceOrganizeImports\",\"codeActionProvider\",\"provideCodeActions\",\"range\",\"_provideCodeActions\",\"asTextDocumentIdentifier\",\"asRange\",\"asCodeActionContext\",\"Command\",\"asCommand\",\"asCodeAction\",\"registerCodeActionsProvider\",\"codeActionKinds\",\"providedCodeActionKinds\",\"asCodeActionKinds\",\"CodeLensFeature\",\"CodeLensRequest\",\"codeLensProvider\",\"provideCodeLenses\",\"asCodeLensParams\",\"asCodeLenses\",\"resolveCodeLens\",\"codeLens\",\"CodeLensResolveRequest\",\"asCodeLens\",\"registerCodeLensProvider\",\"DocumentFormattingFeature\",\"DocumentFormattingRequest\",\"documentFormattingProvider\",\"provideDocumentFormattingEdits\",\"asFormattingOptions\",\"registerDocumentFormattingEditProvider\",\"DocumentRangeFormattingFeature\",\"DocumentRangeFormattingRequest\",\"documentRangeFormattingProvider\",\"provideDocumentRangeFormattingEdits\",\"registerDocumentRangeFormattingEditProvider\",\"DocumentOnTypeFormattingFeature\",\"DocumentOnTypeFormattingRequest\",\"documentOnTypeFormattingProvider\",\"provideOnTypeFormattingEdits\",\"ch\",\"asPosition\",\"moreTriggerCharacter\",\"registerOnTypeFormattingEditProvider\",\"firstTriggerCharacter\",\"RenameFeature\",\"RenameRequest\",\"rename\",\"prepareSupport\",\"renameProvider\",\"prepareProvider\",\"provideRenameEdits\",\"newName\",\"asWorkspaceEdit\",\"reject\",\"prepareRename\",\"PrepareRenameRequest\",\"Range\",\"placeholder\",\"registerRenameProvider\",\"DocumentLinkFeature\",\"DocumentLinkRequest\",\"documentLinkCapabilities\",\"tooltipSupport\",\"documentLinkProvider\",\"provideDocumentLinks\",\"asDocumentLinkParams\",\"asDocumentLinks\",\"resolveDocumentLink\",\"link\",\"DocumentLinkResolveRequest\",\"asDocumentLink\",\"registerDocumentLinkProvider\",\"ConfigurationFeature\",\"_listeners\",\"DidChangeConfigurationNotification\",\"section\",\"synchronize\",\"configurationSection\",\"onDidChangeConfiguration\",\"sections\",\"some\",\"affectsConfiguration\",\"didChangeConfiguration\",\"settings\",\"extractSettingsInformation\",\"getMiddleware\",\"keys\",\"ensurePath\",\"path\",\"current\",\"obj\",\"workspaceFolder\",\"index\",\"indexOf\",\"getConfiguration\",\"substr\",\"split\",\"ExecuteCommandFeature\",\"_commands\",\"ExecuteCommandRequest\",\"executeCommandProvider\",\"executeCommand\",\"command\",\"args\",\"arguments\",\"commands\",\"registerCommand\",\"MessageTransports\",\"OnReady\",\"_resolve\",\"_reject\",\"_used\",\"isUsed\",\"BaseLanguageClient\",\"_traceFormat\",\"_features\",\"_method2Message\",\"_dynamicFeatures\",\"_id\",\"_name\",\"_clientOptions\",\"diagnosticCollectionName\",\"outputChannelName\",\"revealOutputChannelOn\",\"stdioEncoding\",\"initializationOptions\",\"initializationFailedHandler\",\"progressOnInitialization\",\"errorHandler\",\"uriConverters\",\"state\",\"Initial\",\"_connectionPromise\",\"_resolvedConnection\",\"_initializeResult\",\"outputChannel\",\"_outputChannel\",\"_disposeOutputChannel\",\"_traceOutputChannel\",\"traceOutputChannel\",\"_providers\",\"_diagnostics\",\"_fileEvents\",\"_fileEventDelayer\",\"_onReady\",\"_onReadyCallbacks\",\"_onStop\",\"_telemetryEmitter\",\"_stateChangeEmitter\",\"_tracer\",\"messageOrDataObject\",\"logTrace\",\"logObjectTrace\",\"_c2p\",\"createConverter\",\"code2Protocol\",\"_p2c\",\"protocol2Code\",\"registerBuiltinFeatures\",\"_state\",\"oldState\",\"getPublicState\",\"newState\",\"fire\",\"Running\",\"Starting\",\"Stopped\",\"initializeResult\",\"isConnectionActive\",\"forceDocumentSync\",\"handler\",\"onRequest\",\"onNotification\",\"onProgress\",\"sendProgress\",\"onTelemetry\",\"onDidChangeState\",\"createOutputChannel\",\"diagnostics\",\"trace\",\"_trace\",\"onReady\",\"resolveConnection\",\"connection\",\"traceFormat\",\"responseError\",\"code\",\"stack\",\"appendLine\",\"toLocaleTimeString\",\"data2String\",\"Info\",\"showNotificationMessage\",\"Warn\",\"showInformationMessage\",\"show\",\"isLSPMessage\",\"append\",\"JSON\",\"stringify\",\"Stopping\",\"createDiagnosticCollection\",\"onLogMessage\",\"MessageType\",\"Warning\",\"onShowMessage\",\"showWarningMessage\",\"ShowMessageRequest\",\"messageFunc\",\"actions\",\"listen\",\"initialize\",\"StartFailed\",\"needsStop\",\"stop\",\"createConnection\",\"refreshTrace\",\"initOption\",\"rootPath\",\"fsPath\",\"_clientGetRootPath\",\"initParams\",\"processId\",\"process\",\"pid\",\"clientInfo\",\"version\",\"rootUri\",\"Uri\",\"file\",\"computeClientCapabilities\",\"workspaceFolders\",\"fillInitializeParams\",\"part\",\"ProgressPart\",\"workDoneToken\",\"doInitialize\",\"done\",\"cancel\",\"number\",\"textDocumentSync\",\"onDiagnostics\",\"handleDiagnostics\",\"RegistrationRequest\",\"handleRegistrationRequest\",\"UnregistrationRequest\",\"handleUnregistrationRequest\",\"ApplyWorkspaceEditRequest\",\"handleApplyWorkspaceEdit\",\"InitializedNotification\",\"hookFileEvents\",\"hookConfigurationChanged\",\"initializeFeatures\",\"retry\",\"title\",\"folders\",\"folder\",\"scheme\",\"cleanUp\",\"shutdown\",\"exit\",\"cleanUpChannel\",\"channel\",\"listener\",\"_a\",\"didChangeWatchedFile\",\"didChangeWatchedFiles\",\"changes\",\"workSpaceMiddleware\",\"asDiagnostics\",\"setDiagnostics\",\"handleConnectionError\",\"closeHandler\",\"handleConnectionClosed\",\"createMessageTransports\",\"transports\",\"input\",\"output\",\"onError\",\"onClose\",\"tracer\",\"sendNotificationOrTraceOptions\",\"defaultTraceOptions\",\"InitializeRequest\",\"ShutdownRequest\",\"ExitNotification\",\"LogMessageNotification\",\"ShowMessageNotification\",\"TelemetryEventNotification\",\"didOpenTextDocument\",\"didChangeTextDocument\",\"didCloseTextDocument\",\"didSaveTextDocument\",\"PublishDiagnosticsNotification\",\"action\",\"closed\",\"start\",\"Off\",\"traceConfig\",\"fromString\",\"_connection\",\"fileEvents\",\"array\",\"registerRaw\",\"features\",\"feature\",\"registerFeature\",\"request\",\"notifyFileEvent\",\"applyEdit\",\"workspaceEdit\",\"documentChanges\",\"resourceOperations\",\"ResourceOperationKind\",\"Rename\",\"failureHandling\",\"FailureHandlingKind\",\"TextOnlyTransactional\",\"relatedInformation\",\"versionSupport\",\"DiagnosticTag\",\"Unnecessary\",\"fillClientCapabilities\",\"registrations\",\"unregistration\",\"unregisterations\",\"edit\",\"openTextDocuments\",\"versionMismatch\",\"TextDocumentEdit\",\"applied\",\"asPromise\",\"RequestCancelled\",\"ContentModified\",\"messages_1\",\"RequestType1\",\"RequestType2\",\"RequestType3\",\"RequestType4\",\"RequestType5\",\"RequestType6\",\"RequestType7\",\"RequestType8\",\"RequestType9\",\"NotificationType1\",\"NotificationType2\",\"NotificationType3\",\"NotificationType4\",\"NotificationType5\",\"NotificationType6\",\"NotificationType7\",\"NotificationType8\",\"NotificationType9\",\"messageReader_1\",\"SocketMessageReader\",\"messageWriter_1\",\"SocketMessageWriter\",\"events_1\",\"cancellation_1\",\"linkedMap_1\",\"CancelNotification\",\"ProgressNotification\",\"ConnectionErrors\",\"ConnectionState\",\"NullLogger\",\"freeze\",\"toLowerCase\",\"Messages\",\"Verbose\",\"ConnectionError\",\"setPrototypeOf\",\"_createMessageConnection\",\"messageReader\",\"messageWriter\",\"sequenceNumber\",\"notificationSquenceNumber\",\"unknownResponseSquenceNumber\",\"timer\",\"starRequestHandler\",\"requestHandlers\",\"starNotificationHandler\",\"notificationHandlers\",\"progressHandlers\",\"messageQueue\",\"LinkedMap\",\"responsePromises\",\"requestTokens\",\"New\",\"errorEmitter\",\"closeEmitter\",\"unhandledNotificationEmitter\",\"unhandledProgressEmitter\",\"disposeEmitter\",\"createRequestQueueKey\",\"addMessageToQueue\",\"queue\",\"isRequestMessage\",\"isResponseMessage\",\"createResponseQueueKey\",\"cancelUndispatched\",\"isListening\",\"Listening\",\"isClosed\",\"Closed\",\"isDisposed\",\"Disposed\",\"triggerMessageQueue\",\"setImmediate\",\"requestMessage\",\"reply\",\"resultOrError\",\"startTime\",\"jsonrpc\",\"toJson\",\"traceSendingResponse\",\"write\",\"replyError\",\"logLSPMessage\",\"traceReceivedRequest\",\"requestHandler\",\"cancellationSource\",\"tokenKey\",\"handlerResult\",\"promise\",\"numberOfParams\",\"InternalError\",\"replySuccess\",\"MethodNotFound\",\"handleRequest\",\"isNotificationMessage\",\"notificationHandler\",\"source\",\"traceReceivedNotification\",\"handleNotification\",\"responseMessage\",\"responsePromise\",\"timerStart\",\"traceReceivedResponse\",\"handleResponse\",\"responseHandler\",\"handleInvalidMessage\",\"processMessageQueue\",\"toCancel\",\"response\",\"lspMessage\",\"timestamp\",\"throwIfClosedOrDisposed\",\"undefinedToNull\",\"param\",\"computeMessageParams\",\"messageParams\",\"notificationMessage\",\"traceSendingNotification\",\"onUnhandledProgress\",\"throwIfNotListening\",\"last\",\"slice\",\"map\",\"traceSendingRequest\",\"e\",\"MessageWriteError\",\"onCancellationRequested\",\"_value\",\"_sendNotification\",\"onUnhandledNotification\",\"onDispose\",\"AlreadyListening\",\"throwIfListening\",\"inspect\",\"verbose\",\"read\",\"isMessageReader\",\"end\",\"isMessageWriter\",\"stringArray\",\"every\",\"elem\",\"thenable\",\"typedArray\",\"check\",\"resolved\",\"_disposable\",\"CallbackList\",\"bucket\",\"_callbacks\",\"_contexts\",\"remove\",\"foundCallbackWithDifferentContext\",\"len\",\"splice\",\"ret\",\"callbacks\",\"contexts\",\"apply\",\"thisArgs\",\"disposables\",\"onFirstListenerAdd\",\"isEmpty\",\"add\",\"_noop\",\"onLastListenerRemove\",\"invoke\",\"DefaultSize\",\"CR\",\"Buffer\",\"from\",\"LF\",\"CRLF\",\"MessageBuffer\",\"encoding\",\"buffer\",\"allocUnsafe\",\"chunk\",\"toAppend\",\"str\",\"bufferLen\",\"byteLength\",\"copy\",\"newSize\",\"Math\",\"ceil\",\"concat\",\"header\",\"trim\",\"nextStart\",\"numberOfBytes\",\"onPartialMessage\",\"AbstractMessageReader\",\"partialMessageEmitter\",\"asError\",\"readable\",\"_partialMessageTimeout\",\"partialMessageTimeout\",\"timeout\",\"nextMessageLength\",\"messageToken\",\"partialMessageTimer\",\"on\",\"onData\",\"fireError\",\"fireClose\",\"headers\",\"tryReadHeaders\",\"contentLength\",\"parseInt\",\"isNaN\",\"msg\",\"tryReadContent\",\"setPartialMessageTimer\",\"clearPartialMessageTimer\",\"json\",\"parse\",\"clearTimeout\",\"setTimeout\",\"firePartialMessage\",\"waitingTime\",\"eventEmitter\",\"socket\",\"ContentLength\",\"AbstractMessageWriter\",\"writable\",\"errorCount\",\"join\",\"sending\",\"doWriteMessage\",\"destroy\",\"handleError\",\"default\",\"CompletionItem\",\"label\",\"CodeLens\",\"DocumentLink\",\"ValueUUID\",\"other\",\"asHex\",\"V4UUID\",\"_randomHex\",\"_oneOf\",\"_timeHighBits\",\"floor\",\"random\",\"_chars\",\"v4\",\"empty\",\"_UUIDPattern\",\"isUUID\",\"test\",\"_token\",\"_reported\",\"WorkDoneProgress\",\"begin\",\"report\",\"location\",\"cancellable\",\"ProgressLocation\",\"Notification\",\"Window\",\"withProgress\",\"async\",\"progress\",\"cancellationToken\",\"_progress\",\"_infinite\",\"percentage\",\"_cancellationToken\",\"WorkDoneProgressCancelNotification\",\"max\",\"min\",\"delta\",\"increment\",\"fs\",\"vscode_languageclient_1\",\"nls\",\"customData_1\",\"localize\",\"loadMessageBundle\",\"__dirname\",\"activate\",\"serverMain\",\"readFileSync\",\"readJSONFile\",\"asAbsolutePath\",\"main\",\"serverModule\",\"serverOptions\",\"run\",\"transport\",\"TransportKind\",\"ipc\",\"debug\",\"execArgv\",\"dataPaths\",\"getCustomDataPathsInAllWorkspaces\",\"getCustomDataPathsFromAllExtensions\",\"next\",\"updateRanges\",\"isAfter\",\"isBeforeOrEqual\",\"inserting\",\"replacing\",\"updateLabel\",\"label2\",\"documentation\",\"updateProposals\",\"items\",\"isThenable\",\"LanguageClient\",\"registerProposedFeatures\",\"subscriptions\",\"indentationRules\",\"increaseIndentPattern\",\"decreaseIndentPattern\",\"setLanguageConfiguration\",\"wordPattern\",\"regionCompletionRegExpr\",\"doc\",\"pos\",\"lineUntilPos\",\"getText\",\"Position\",\"line\",\"beginProposal\",\"TextEdit\",\"replace\",\"insertText\",\"SnippetString\",\"filterText\",\"sortText\",\"endProposal\",\"initCompletionProvider\",\"documentVersion\",\"textEditor\",\"activeTextEditor\",\"mutator\",\"newText\",\"success\",\"cp\",\"SemVer\",\"client_1\",\"colorProvider_1\",\"configuration_1\",\"implementation_1\",\"typeDefinition_1\",\"workspaceFolders_1\",\"foldingRange_1\",\"declaration_1\",\"selectionRange_1\",\"progress_1\",\"callHierarchy_proposed_1\",\"semanticTokens_proposed_1\",\"processes_1\",\"REQUIRED_VSCODE_VERSION\",\"Executable\",\"Transport\",\"NodeModule\",\"StreamInfo\",\"ChildProcessInfo\",\"ProposedFeatures\",\"isSocket\",\"port\",\"detached\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"forceDebug\",\"_serverOptions\",\"_forceDebug\",\"checkVersion\",\"codeVersion\",\"prerelease\",\"satisfies\",\"_serverProcess\",\"toCheck\",\"_isDetached\",\"checkProcessDied\",\"childProcess\",\"kill\",\"terminate\",\"getEnvironment\",\"env\",\"fork\",\"debugStartWith\",\"debugEquals\",\"assertStdio\",\"stdin\",\"stdout\",\"stderr\",\"server\",\"runDebug\",\"arg\",\"startsWith\",\"startedInDebugMode\",\"_getServerWorkingDir\",\"serverWorkingDir\",\"node\",\"stdio\",\"runtime\",\"pipeName\",\"pipe\",\"cwd\",\"silent\",\"sp\",\"onConnected\",\"protocol\",\"execOptions\",\"serverProcess\",\"spawn\",\"registerFeatures\",\"createAll\",\"TypeDefinitionFeature\",\"ImplementationFeature\",\"ColorProviderFeature\",\"WorkspaceFoldersFeature\",\"FoldingRangeFeature\",\"DeclarationFeature\",\"SelectionRangeFeature\",\"ProgressFeature\",\"_mainGetRootPath\",\"lstat\",\"err\",\"stats\",\"isDirectory\",\"SettingMonitor\",\"_setting\",\"primary\",\"rest\",\"enabled\",\"needsStart\",\"CallHierarchyFeature\",\"SemanticTokensFeature\",\"NODE_DEBUG\",\"unshift\",\"SEMVER_SPEC_VERSION\",\"MAX_LENGTH\",\"MAX_SAFE_INTEGER\",\"re\",\"src\",\"tokens\",\"R\",\"tok\",\"NUMERICIDENTIFIER\",\"NUMERICIDENTIFIERLOOSE\",\"NONNUMERICIDENTIFIER\",\"MAINVERSION\",\"MAINVERSIONLOOSE\",\"PRERELEASEIDENTIFIER\",\"PRERELEASEIDENTIFIERLOOSE\",\"PRERELEASE\",\"PRERELEASELOOSE\",\"BUILDIDENTIFIER\",\"BUILD\",\"FULLPLAIN\",\"FULL\",\"LOOSEPLAIN\",\"LOOSE\",\"GTLT\",\"XRANGEIDENTIFIERLOOSE\",\"XRANGEIDENTIFIER\",\"XRANGEPLAIN\",\"XRANGEPLAINLOOSE\",\"XRANGE\",\"XRANGELOOSE\",\"COERCE\",\"COERCERTL\",\"RegExp\",\"LONETILDE\",\"TILDETRIM\",\"TILDE\",\"TILDELOOSE\",\"LONECARET\",\"CARETTRIM\",\"CARET\",\"CARETLOOSE\",\"COMPARATORLOOSE\",\"COMPARATOR\",\"COMPARATORTRIM\",\"HYPHENRANGE\",\"HYPHENRANGELOOSE\",\"STAR\",\"loose\",\"includePrerelease\",\"er\",\"TypeError\",\"raw\",\"major\",\"minor\",\"patch\",\"num\",\"build\",\"format\",\"valid\",\"v\",\"clean\",\"compare\",\"compareMain\",\"comparePre\",\"compareIdentifiers\",\"a\",\"b\",\"compareBuild\",\"inc\",\"release\",\"identifier\",\"diff\",\"version1\",\"version2\",\"eq\",\"v1\",\"v2\",\"prefix\",\"defaultResult\",\"numeric\",\"anum\",\"bnum\",\"gt\",\"lt\",\"neq\",\"gte\",\"lte\",\"cmp\",\"op\",\"Comparator\",\"comp\",\"semver\",\"ANY\",\"operator\",\"rcompareIdentifiers\",\"compareLoose\",\"versionA\",\"versionB\",\"rcompare\",\"sort\",\"list\",\"rsort\",\"parseRange\",\"filter\",\"isSatisfiable\",\"comparators\",\"remainingComparators\",\"testComparator\",\"pop\",\"otherComparator\",\"intersects\",\"isX\",\"hyphenReplace\",\"$0\",\"fM\",\"fm\",\"fp\",\"fpr\",\"fb\",\"to\",\"tM\",\"tm\",\"tp\",\"tpr\",\"tb\",\"testSet\",\"allowed\",\"outside\",\"hilo\",\"gtfn\",\"ltefn\",\"ltfn\",\"ecomp\",\"high\",\"low\",\"comparator\",\"rangeTmp\",\"sameDirectionIncreasing\",\"sameDirectionDecreasing\",\"sameSemVer\",\"differentDirectionsInclusive\",\"oppositeDirectionsLessThan\",\"oppositeDirectionsGreaterThan\",\"comps\",\"hr\",\"compRe\",\"_\",\"M\",\"pr\",\"replaceCaret\",\"replaceCarets\",\"replaceTilde\",\"replaceTildes\",\"gtlt\",\"xM\",\"xm\",\"xp\",\"anyX\",\"replaceXRange\",\"replaceXRanges\",\"replaceStars\",\"parseComparator\",\"thisComparators\",\"rangeComparators\",\"thisComparator\",\"rangeComparator\",\"toComparators\",\"maxSatisfying\",\"versions\",\"maxSV\",\"rangeObj\",\"minSatisfying\",\"minSV\",\"minVersion\",\"minver\",\"compver\",\"validRange\",\"ltr\",\"gtr\",\"parsed\",\"r1\",\"r2\",\"coerce\",\"rtl\",\"exec\",\"lastIndex\",\"ParseError\",\"InvalidRequest\",\"InvalidParams\",\"serverErrorStart\",\"serverErrorEnd\",\"ServerNotInitialized\",\"UnknownErrorCode\",\"MessageReadError\",\"AbstractMessageType\",\"_numberOfParams\",\"isCancellationRequested\",\"Cancelled\",\"shortcutEvent\",\"handle\",\"MutableToken\",\"_isCancelled\",\"_emitter\",\"Touch\",\"First\",\"Last\",\"_map\",\"_head\",\"_tail\",\"_size\",\"touch\",\"previous\",\"addItemLast\",\"addItemFirst\",\"removeItem\",\"callbackfn\",\"thisArg\",\"path_1\",\"os_1\",\"crypto_1\",\"net_1\",\"randomSuffix\",\"randomBytes\",\"platform\",\"tmpdir\",\"connectResolve\",\"connected\",\"createServer\",\"close\",\"removeListener\",\"Location\",\"LocationLink\",\"ColorInformation\",\"ColorPresentation\",\"FoldingRangeKind\",\"FoldingRange\",\"DiagnosticRelatedInformation\",\"DiagnosticSeverity\",\"Diagnostic\",\"CreateFile\",\"RenameFile\",\"DeleteFile\",\"WorkspaceEdit\",\"__webpack_exports__\",\"TextDocument\",\"character\",\"objectLiteral\",\"one\",\"two\",\"three\",\"four\",\"defined\",\"targetUri\",\"targetRange\",\"targetSelectionRange\",\"originSelectionRange\",\"red\",\"green\",\"blue\",\"alpha\",\"color\",\"textEdit\",\"additionalTextEdits\",\"startLine\",\"endLine\",\"startCharacter\",\"endCharacter\",\"Information\",\"Hint\",\"severity\",\"_i\",\"insert\",\"del\",\"VersionedTextDocumentIdentifier\",\"overwrite\",\"ignoreIfExists\",\"oldUri\",\"newUri\",\"recursive\",\"ignoreIfNotExists\",\"TextDocumentIdentifier\",\"TextDocumentItem\",\"MarkupContent\",\"InsertTextFormat\",\"CompletionList\",\"MarkedString\",\"Hover\",\"ParameterInformation\",\"SignatureInformation\",\"DocumentHighlightKind\",\"DocumentHighlight\",\"SymbolTag\",\"SymbolInformation\",\"CodeActionContext\",\"CodeAction\",\"FormattingOptions\",\"SelectionRange\",\"TextEditChangeImpl\",\"all\",\"WorkspaceChange\",\"_this\",\"_textEditChanges\",\"_workspaceEdit\",\"textEditChange\",\"configurable\",\"getTextEditChange\",\"textDocumentEdit\",\"createFile\",\"checkDocumentChanges\",\"renameFile\",\"deleteFile\",\"languageId\",\"text\",\"isIncomplete\",\"fromPlainText\",\"plainText\",\"language\",\"contents\",\"parameters\",\"Read\",\"Write\",\"containerName\",\"detail\",\"selectionRange\",\"children\",\"deprecated\",\"SourceFixAll\",\"only\",\"commandOrEdit\",\"isPreferred\",\"tabSize\",\"insertSpaces\",\"parent\",\"EOL\",\"content\",\"FullTextDocument\",\"lineCount\",\"positionAt\",\"offsetAt\",\"applyEdits\",\"sortedEdits\",\"mergeSort\",\"left\",\"right\",\"leftIdx\",\"rightIdx\",\"lastModifiedOffset\",\"startOffset\",\"endOffset\",\"substring\",\"_uri\",\"_languageId\",\"_version\",\"_content\",\"_lineOffsets\",\"update\",\"getLineOffsets\",\"lineOffsets\",\"isLineStart\",\"charAt\",\"offset\",\"mid\",\"lineOffset\",\"nextLineOffset\",\"protocol_implementation_1\",\"ImplementationRequest\",\"protocol_typeDefinition_1\",\"TypeDefinitionRequest\",\"protocol_workspaceFolders_1\",\"WorkspaceFoldersRequest\",\"DidChangeWorkspaceFoldersNotification\",\"protocol_configuration_1\",\"ConfigurationRequest\",\"protocol_colorProvider_1\",\"DocumentColorRequest\",\"ColorPresentationRequest\",\"protocol_foldingRange_1\",\"FoldingRangeRequest\",\"protocol_declaration_1\",\"DeclarationRequest\",\"protocol_selectionRange_1\",\"SelectionRangeRequest\",\"protocol_progress_1\",\"DocumentFilter\",\"DocumentSelector\",\"WorkDoneProgressCreateRequest\",\"pattern\",\"Abort\",\"Transactional\",\"Undo\",\"hasWorkDoneProgress\",\"InitializeError\",\"unknownProtocolVersion\",\"Log\",\"TextDocumentSaveReason\",\"Manual\",\"AfterDelay\",\"FocusOut\",\"CompletionTriggerKind\",\"Invoked\",\"TriggerCharacter\",\"TriggerForIncompleteCompletions\",\"resultType\",\"SignatureHelpTriggerKind\",\"ContentChange\",\"resultId\",\"proto\",\"protocolCompletionItem_1\",\"protocolCodeLens_1\",\"protocolDocumentLink_1\",\"uriConverter\",\"_uriConverter\",\"asVersionedTextDocumentIdentifier\",\"asParameterInformation\",\"asSignatureInformation\",\"asParameterInformations\",\"signatures\",\"asSignatureInformations\",\"activeSignature\",\"activeParameter\",\"asWorkerPosition\",\"isInsertReplace\",\"asLocation\",\"asDiagnosticSeverity\",\"asDiagnosticTag\",\"tag\",\"asRelatedInformation\",\"asDiagnostic\",\"tags\",\"converted\",\"asDiagnosticTags\",\"asRelatedInformations\",\"asCompletionItemTag\",\"asTextEdit\",\"asSymbolTag\",\"isTextDocument\",\"isTextDocumentChangeEvent\",\"rangeLength\",\"includeContent\",\"reason\",\"asTextDocumentSaveReason\",\"triggerKind\",\"asCompletionTriggerKind\",\"triggerCharacter\",\"isRetrigger\",\"Invoke\",\"asSignatureHelpTriggerKind\",\"activeSignatureHelp\",\"asPositions\",\"protocolItem\",\"asDocumentation\",\"insertTextFormat\",\"fromEdit\",\"fillPrimaryInsertText\",\"original\",\"asCompletionItemKind\",\"originalItemKind\",\"commitCharacters\",\"preselect\",\"asCompletionItemTags\",\"asSymbolKind\",\"asSymbolTags\",\"includeDeclaration\",\"tooltip\",\"ls\",\"CodeBlock\",\"diagnostic\",\"asDiagnosticRelatedInformation\",\"information\",\"MarkdownString\",\"asCompletionInsertText\",\"itemKind\",\"asLocationLink\",\"asLocationResult\",\"asDocumentHighlight\",\"asDocumentHighlightKind\",\"asSymbolInformation\",\"asDocumentSymbol\",\"child\",\"kindMapping\",\"asCodeActionKind\",\"parts\",\"asColor\",\"asColorInformation\",\"ci\",\"asColorPresentation\",\"presentation\",\"asFoldingRangeKind\",\"Comment\",\"Imports\",\"Region\",\"asFoldingRange\",\"asSelectionRange\",\"asRanges\",\"hover\",\"appendCodeblock\",\"appendMarkdown\",\"appendText\",\"asHoverContent\",\"SignatureHelp\",\"asDeclarationResult\",\"asCommands\",\"asFoldingRanges\",\"foldingRanges\",\"asColorInformations\",\"colorInformation\",\"asColorPresentations\",\"colorPresentations\",\"asSelectionRanges\",\"selectionRanges\",\"defaultDelay\",\"completionPromise\",\"onSuccess\",\"task\",\"delay\",\"cancelTimeout\",\"getRegistration\",\"colorProvider\",\"provideColorPresentations\",\"requestParams\",\"provideDocumentColors\",\"registerColorProvider\",\"configuration\",\"scopeUri\",\"lastIndexOf\",\"implementationSupport\",\"implementationProvider\",\"provideImplementation\",\"registerImplementationProvider\",\"typeDefinitionSupport\",\"typeDefinitionProvider\",\"provideTypeDefinition\",\"registerTypeDefinitionProvider\",\"access\",\"arrayDiff\",\"initializeWithFolders\",\"asProtocol\",\"currentWorkspaceFolders\",\"_initialFolders\",\"removed\",\"added\",\"doSendEvent\",\"addedFolders\",\"removedFolders\",\"onDidChangeWorkspaceFolders\",\"didChangeWorkspaceFolders\",\"sendInitialEvent\",\"rangeLimit\",\"lineFoldingOnly\",\"foldingRangeProvider\",\"provideFoldingRanges\",\"registerFoldingRangeProvider\",\"declarationSupport\",\"declarationProvider\",\"provideDeclaration\",\"registerDeclarationProvider\",\"selectionRangeProvider\",\"provideSelectionRanges\",\"positions\",\"ranges\",\"registerSelectionRangeProvider\",\"protocol2code\",\"code2protocol\",\"asCallHierarchyItem\",\"converter\",\"CallHierarchyItem\",\"asCallHierarchyIncomingCall\",\"CallHierarchyIncomingCall\",\"fromRanges\",\"asCallHierarchyOutgoingCall\",\"CallHierarchyOutgoingCall\",\"asCallHierarchyItems\",\"asCallHierarchyIncomingCalls\",\"asCallHierarchyOutgoingCalls\",\"CallHierarchyProvider\",\"prepareCallHierarchy\",\"provideCallHierarchyIncomingCalls\",\"provideCallHierarchyOutgoingCalls\",\"provideCallHierarchyOutgingCalls\",\"callHierarchyProvider\",\"registerCallHierarchyProvider\",\"vscode\",\"asSemanticTokensEdit\",\"SemanticTokensEdit\",\"deleteCount\",\"Uint32Array\",\"asSemanticTokens\",\"asSemanticTokensEdits\",\"SemanticTokensEdits\",\"asLegend\",\"tokenTypes\",\"comment\",\"keyword\",\"regexp\",\"namespace\",\"struct\",\"class\",\"interface\",\"enum\",\"typeParameter\",\"function\",\"member\",\"macro\",\"variable\",\"parameter\",\"tokenModifiers\",\"declaration\",\"static\",\"abstract\",\"readonly\",\"semanticTokensProvider\",\"documentProvider\",\"provideDocumentSemanticTokens\",\"provideDocumentSemanticTokensEdits\",\"previousResultId\",\"rangeProvider\",\"provideDocumentRangeSemanticTokens\",\"legend\",\"registerDocumentSemanticTokensProvider\",\"registerDocumentRangeSemanticTokensProvider\",\"isWindows\",\"isMacintosh\",\"isLinux\",\"execFileSync\",\"cmd\",\"spawnSync\",\"MessageFormat\",\"BundleFormat\",\"LocalizeInfo\",\"resolvedBundles\",\"isPseudo\",\"isDefined\",\"isString\",\"readJsonFileSync\",\"filename\",\"replacement\",\"createScopedLocalizeFunction\",\"isNumber\",\"cacheBundle\",\"bundle\",\"loadNlsBundleOrCreateFromI18n\",\"bundlePath\",\"cacheRoot\",\"hash\",\"useMemoryOnly\",\"writeBundle\",\"flag\",\"utimes\",\"SyntaxError\",\"unlink\",\"metaDataPath\",\"languagePackLocation\",\"translationsConfig\",\"languagePack\",\"module_2\",\"entry\",\"translations\",\"outDir\",\"resultMessages\",\"messageKey\",\"translatedMessage\",\"createNLSBundle\",\"writeFileSync\",\"loadDefaultNlsBundle\",\"module_1\",\"createDefaultNlsBundle\",\"loadNlsBundle\",\"languagePackSupport\",\"languagePackId\",\"translationsConfigFile\",\"root\",\"existsSync\",\"findInTheBoxBundle\",\"ext\",\"extname\",\"messageFormat\",\"both\",\"headerFile\",\"dirname\",\"tryFindMetaDataHeaderFile\",\"nlsBundle\",\"module_3\",\"resolvedLanguage\",\"cacheLanguageResolution\",\"locale\",\"resolveLanguage\",\"VSCODE_NLS_CONFIG\",\"vscodeOptions\",\"availableLanguages\",\"isBoolean\",\"_languagePackSupport\",\"_cacheRoot\",\"_languagePackId\",\"_translationsConfigFile\",\"_corruptedFile\",\"writeFile\",\"initializeSettings\",\"opts\",\"bundleFormat\",\"standalone\",\"wf\",\"wfCSSConfig\",\"workspaceFolderValue\",\"customData\",\"extension\",\"extensions\",\"contributes\",\"packageJSON\",\"css\",\"rp\",\"extensionPath\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 19);\\n\",\"module.exports = require(\\\"vscode\\\");\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nfunction __export(m) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\\r\\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\\r\\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\\r\\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\\r\\nexports.Disposable = vscode_jsonrpc_1.Disposable;\\r\\nexports.Event = vscode_jsonrpc_1.Event;\\r\\nexports.Emitter = vscode_jsonrpc_1.Emitter;\\r\\nexports.Trace = vscode_jsonrpc_1.Trace;\\r\\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\\r\\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\\r\\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\\r\\nexports.RequestType = vscode_jsonrpc_1.RequestType;\\r\\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\\r\\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\\r\\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\\r\\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\\r\\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\\r\\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\\r\\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\\r\\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\\r\\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\\r\\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\\r\\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\\r\\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\\r\\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\\r\\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\\r\\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\\r\\nexports.ProgressType = vscode_jsonrpc_1.ProgressType;\\r\\n__export(require(\\\"vscode-languageserver-types\\\"));\\r\\n__export(require(\\\"./protocol\\\"));\\r\\nconst callHierarchy = require(\\\"./protocol.callHierarchy.proposed\\\");\\r\\nconst st = require(\\\"./protocol.sematicTokens.proposed\\\");\\r\\nvar Proposed;\\r\\n(function (Proposed) {\\r\\n    let CallHierarchyPrepareRequest;\\r\\n    (function (CallHierarchyPrepareRequest) {\\r\\n        CallHierarchyPrepareRequest.method = callHierarchy.CallHierarchyPrepareRequest.method;\\r\\n        CallHierarchyPrepareRequest.type = callHierarchy.CallHierarchyPrepareRequest.type;\\r\\n    })(CallHierarchyPrepareRequest = Proposed.CallHierarchyPrepareRequest || (Proposed.CallHierarchyPrepareRequest = {}));\\r\\n    let CallHierarchyIncomingCallsRequest;\\r\\n    (function (CallHierarchyIncomingCallsRequest) {\\r\\n        CallHierarchyIncomingCallsRequest.method = callHierarchy.CallHierarchyIncomingCallsRequest.method;\\r\\n        CallHierarchyIncomingCallsRequest.type = callHierarchy.CallHierarchyIncomingCallsRequest.type;\\r\\n    })(CallHierarchyIncomingCallsRequest = Proposed.CallHierarchyIncomingCallsRequest || (Proposed.CallHierarchyIncomingCallsRequest = {}));\\r\\n    let CallHierarchyOutgoingCallsRequest;\\r\\n    (function (CallHierarchyOutgoingCallsRequest) {\\r\\n        CallHierarchyOutgoingCallsRequest.method = callHierarchy.CallHierarchyOutgoingCallsRequest.method;\\r\\n        CallHierarchyOutgoingCallsRequest.type = callHierarchy.CallHierarchyOutgoingCallsRequest.type;\\r\\n    })(CallHierarchyOutgoingCallsRequest = Proposed.CallHierarchyOutgoingCallsRequest || (Proposed.CallHierarchyOutgoingCallsRequest = {}));\\r\\n    Proposed.SemanticTokenTypes = st.SemanticTokenTypes;\\r\\n    Proposed.SemanticTokenModifiers = st.SemanticTokenModifiers;\\r\\n    Proposed.SemanticTokens = st.SemanticTokens;\\r\\n    let SemanticTokensRequest;\\r\\n    (function (SemanticTokensRequest) {\\r\\n        SemanticTokensRequest.method = st.SemanticTokensRequest.method;\\r\\n        SemanticTokensRequest.type = st.SemanticTokensRequest.type;\\r\\n    })(SemanticTokensRequest = Proposed.SemanticTokensRequest || (Proposed.SemanticTokensRequest = {}));\\r\\n    let SemanticTokensEditsRequest;\\r\\n    (function (SemanticTokensEditsRequest) {\\r\\n        SemanticTokensEditsRequest.method = st.SemanticTokensEditsRequest.method;\\r\\n        SemanticTokensEditsRequest.type = st.SemanticTokensEditsRequest.type;\\r\\n    })(SemanticTokensEditsRequest = Proposed.SemanticTokensEditsRequest || (Proposed.SemanticTokensEditsRequest = {}));\\r\\n    let SemanticTokensRangeRequest;\\r\\n    (function (SemanticTokensRangeRequest) {\\r\\n        SemanticTokensRangeRequest.method = st.SemanticTokensRangeRequest.method;\\r\\n        SemanticTokensRangeRequest.type = st.SemanticTokensRangeRequest.type;\\r\\n    })(SemanticTokensRangeRequest = Proposed.SemanticTokensRangeRequest || (Proposed.SemanticTokensRangeRequest = {}));\\r\\n})(Proposed = exports.Proposed || (exports.Proposed = {}));\\r\\nfunction createProtocolConnection(reader, writer, logger, strategy) {\\r\\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\\r\\n}\\r\\nexports.createProtocolConnection = createProtocolConnection;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\\r\\n    constructor(method) {\\r\\n        super(method);\\r\\n    }\\r\\n}\\r\\nexports.ProtocolRequestType0 = ProtocolRequestType0;\\r\\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\\r\\n    constructor(method) {\\r\\n        super(method);\\r\\n    }\\r\\n}\\r\\nexports.ProtocolRequestType = ProtocolRequestType;\\r\\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\\r\\n    constructor(method) {\\r\\n        super(method);\\r\\n    }\\r\\n}\\r\\nexports.ProtocolNotificationType = ProtocolNotificationType;\\r\\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\\r\\n    constructor(method) {\\r\\n        super(method);\\r\\n    }\\r\\n}\\r\\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nfunction __export(m) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst c2p = require(\\\"./codeConverter\\\");\\r\\nconst p2c = require(\\\"./protocolConverter\\\");\\r\\nconst Is = require(\\\"./utils/is\\\");\\r\\nconst async_1 = require(\\\"./utils/async\\\");\\r\\nconst UUID = require(\\\"./utils/uuid\\\");\\r\\nconst progressPart_1 = require(\\\"./progressPart\\\");\\r\\n__export(require(\\\"vscode-languageserver-protocol\\\"));\\r\\nclass ConsoleLogger {\\r\\n    error(message) {\\r\\n        console.error(message);\\r\\n    }\\r\\n    warn(message) {\\r\\n        console.warn(message);\\r\\n    }\\r\\n    info(message) {\\r\\n        console.info(message);\\r\\n    }\\r\\n    log(message) {\\r\\n        console.log(message);\\r\\n    }\\r\\n}\\r\\nfunction createConnection(input, output, errorHandler, closeHandler) {\\r\\n    let logger = new ConsoleLogger();\\r\\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\\r\\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\\r\\n    connection.onClose(closeHandler);\\r\\n    let result = {\\r\\n        listen: () => connection.listen(),\\r\\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\\r\\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\\r\\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\\r\\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\\r\\n        onProgress: connection.onProgress,\\r\\n        sendProgress: connection.sendProgress,\\r\\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\\r\\n            const defaultTraceOptions = {\\r\\n                sendNotification: false,\\r\\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\\r\\n            };\\r\\n            if (sendNotificationOrTraceOptions === void 0) {\\r\\n                connection.trace(value, tracer, defaultTraceOptions);\\r\\n            }\\r\\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\\r\\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\\r\\n            }\\r\\n            else {\\r\\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\\r\\n            }\\r\\n        },\\r\\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\\r\\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\\r\\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\\r\\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\\r\\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\\r\\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\\r\\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\\r\\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\\r\\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\\r\\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\\r\\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\\r\\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\\r\\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\\r\\n        dispose: () => connection.dispose()\\r\\n    };\\r\\n    return result;\\r\\n}\\r\\n/**\\r\\n * An action to be performed when the connection is producing errors.\\r\\n */\\r\\nvar ErrorAction;\\r\\n(function (ErrorAction) {\\r\\n    /**\\r\\n     * Continue running the server.\\r\\n     */\\r\\n    ErrorAction[ErrorAction[\\\"Continue\\\"] = 1] = \\\"Continue\\\";\\r\\n    /**\\r\\n     * Shutdown the server.\\r\\n     */\\r\\n    ErrorAction[ErrorAction[\\\"Shutdown\\\"] = 2] = \\\"Shutdown\\\";\\r\\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\\r\\n/**\\r\\n * An action to be performed when the connection to a server got closed.\\r\\n */\\r\\nvar CloseAction;\\r\\n(function (CloseAction) {\\r\\n    /**\\r\\n     * Don't restart the server. The connection stays closed.\\r\\n     */\\r\\n    CloseAction[CloseAction[\\\"DoNotRestart\\\"] = 1] = \\\"DoNotRestart\\\";\\r\\n    /**\\r\\n     * Restart the server.\\r\\n     */\\r\\n    CloseAction[CloseAction[\\\"Restart\\\"] = 2] = \\\"Restart\\\";\\r\\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\\r\\nclass DefaultErrorHandler {\\r\\n    constructor(name) {\\r\\n        this.name = name;\\r\\n        this.restarts = [];\\r\\n    }\\r\\n    error(_error, _message, count) {\\r\\n        if (count && count <= 3) {\\r\\n            return ErrorAction.Continue;\\r\\n        }\\r\\n        return ErrorAction.Shutdown;\\r\\n    }\\r\\n    closed() {\\r\\n        this.restarts.push(Date.now());\\r\\n        if (this.restarts.length < 5) {\\r\\n            return CloseAction.Restart;\\r\\n        }\\r\\n        else {\\r\\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\\r\\n            if (diff <= 3 * 60 * 1000) {\\r\\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\\r\\n                return CloseAction.DoNotRestart;\\r\\n            }\\r\\n            else {\\r\\n                this.restarts.shift();\\r\\n                return CloseAction.Restart;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\nvar RevealOutputChannelOn;\\r\\n(function (RevealOutputChannelOn) {\\r\\n    RevealOutputChannelOn[RevealOutputChannelOn[\\\"Info\\\"] = 1] = \\\"Info\\\";\\r\\n    RevealOutputChannelOn[RevealOutputChannelOn[\\\"Warn\\\"] = 2] = \\\"Warn\\\";\\r\\n    RevealOutputChannelOn[RevealOutputChannelOn[\\\"Error\\\"] = 3] = \\\"Error\\\";\\r\\n    RevealOutputChannelOn[RevealOutputChannelOn[\\\"Never\\\"] = 4] = \\\"Never\\\";\\r\\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\\r\\nvar State;\\r\\n(function (State) {\\r\\n    State[State[\\\"Stopped\\\"] = 1] = \\\"Stopped\\\";\\r\\n    State[State[\\\"Starting\\\"] = 3] = \\\"Starting\\\";\\r\\n    State[State[\\\"Running\\\"] = 2] = \\\"Running\\\";\\r\\n})(State = exports.State || (exports.State = {}));\\r\\nvar ClientState;\\r\\n(function (ClientState) {\\r\\n    ClientState[ClientState[\\\"Initial\\\"] = 0] = \\\"Initial\\\";\\r\\n    ClientState[ClientState[\\\"Starting\\\"] = 1] = \\\"Starting\\\";\\r\\n    ClientState[ClientState[\\\"StartFailed\\\"] = 2] = \\\"StartFailed\\\";\\r\\n    ClientState[ClientState[\\\"Running\\\"] = 3] = \\\"Running\\\";\\r\\n    ClientState[ClientState[\\\"Stopping\\\"] = 4] = \\\"Stopping\\\";\\r\\n    ClientState[ClientState[\\\"Stopped\\\"] = 5] = \\\"Stopped\\\";\\r\\n})(ClientState || (ClientState = {}));\\r\\nconst SupportedSymbolKinds = [\\r\\n    vscode_languageserver_protocol_1.SymbolKind.File,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Module,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Package,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Class,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Method,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Property,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Field,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Function,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.String,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Number,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Array,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Object,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Key,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Null,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Event,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\\r\\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\\r\\n];\\r\\nconst SupportedCompletionItemKinds = [\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\\r\\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\\r\\n];\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nvar DynamicFeature;\\r\\n(function (DynamicFeature) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\\r\\n    }\\r\\n    DynamicFeature.is = is;\\r\\n})(DynamicFeature || (DynamicFeature = {}));\\r\\nclass DocumentNotifiactions {\\r\\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\\r\\n        this._client = _client;\\r\\n        this._event = _event;\\r\\n        this._type = _type;\\r\\n        this._middleware = _middleware;\\r\\n        this._createParams = _createParams;\\r\\n        this._selectorFilter = _selectorFilter;\\r\\n        this._selectors = new Map();\\r\\n    }\\r\\n    static textDocumentFilter(selectors, textDocument) {\\r\\n        for (const selector of selectors) {\\r\\n            if (vscode_1.languages.match(selector, textDocument)) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n    register(_message, data) {\\r\\n        if (!data.registerOptions.documentSelector) {\\r\\n            return;\\r\\n        }\\r\\n        if (!this._listener) {\\r\\n            this._listener = this._event(this.callback, this);\\r\\n        }\\r\\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\\r\\n    }\\r\\n    callback(data) {\\r\\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\\r\\n            if (this._middleware) {\\r\\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\\r\\n            }\\r\\n            else {\\r\\n                this._client.sendNotification(this._type, this._createParams(data));\\r\\n            }\\r\\n            this.notificationSent(data);\\r\\n        }\\r\\n    }\\r\\n    notificationSent(_data) {\\r\\n    }\\r\\n    unregister(id) {\\r\\n        this._selectors.delete(id);\\r\\n        if (this._selectors.size === 0 && this._listener) {\\r\\n            this._listener.dispose();\\r\\n            this._listener = undefined;\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        this._selectors.clear();\\r\\n        if (this._listener) {\\r\\n            this._listener.dispose();\\r\\n            this._listener = undefined;\\r\\n        }\\r\\n    }\\r\\n    getProvider(document) {\\r\\n        for (const selector of this._selectors.values()) {\\r\\n            if (vscode_1.languages.match(selector, document)) {\\r\\n                return {\\r\\n                    send: (data) => {\\r\\n                        this.callback(data);\\r\\n                    }\\r\\n                };\\r\\n            }\\r\\n        }\\r\\n        throw new Error(`No provider available for the given text document`);\\r\\n    }\\r\\n}\\r\\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\\r\\n    constructor(client, _syncedDocuments) {\\r\\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\\r\\n        this._syncedDocuments = _syncedDocuments;\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\\r\\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\\r\\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\\r\\n        }\\r\\n    }\\r\\n    register(message, data) {\\r\\n        super.register(message, data);\\r\\n        if (!data.registerOptions.documentSelector) {\\r\\n            return;\\r\\n        }\\r\\n        let documentSelector = data.registerOptions.documentSelector;\\r\\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\\r\\n            let uri = textDocument.uri.toString();\\r\\n            if (this._syncedDocuments.has(uri)) {\\r\\n                return;\\r\\n            }\\r\\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\\r\\n                let middleware = this._client.clientOptions.middleware;\\r\\n                let didOpen = (textDocument) => {\\r\\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\\r\\n                };\\r\\n                if (middleware.didOpen) {\\r\\n                    middleware.didOpen(textDocument, didOpen);\\r\\n                }\\r\\n                else {\\r\\n                    didOpen(textDocument);\\r\\n                }\\r\\n                this._syncedDocuments.set(uri, textDocument);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    notificationSent(textDocument) {\\r\\n        super.notificationSent(textDocument);\\r\\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\\r\\n    }\\r\\n}\\r\\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\\r\\n    constructor(client, _syncedDocuments) {\\r\\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\\r\\n        this._syncedDocuments = _syncedDocuments;\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\\r\\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\\r\\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\\r\\n        }\\r\\n    }\\r\\n    notificationSent(textDocument) {\\r\\n        super.notificationSent(textDocument);\\r\\n        this._syncedDocuments.delete(textDocument.uri.toString());\\r\\n    }\\r\\n    unregister(id) {\\r\\n        let selector = this._selectors.get(id);\\r\\n        // The super call removed the selector from the map\\r\\n        // of selectors.\\r\\n        super.unregister(id);\\r\\n        let selectors = this._selectors.values();\\r\\n        this._syncedDocuments.forEach((textDocument) => {\\r\\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\\r\\n                let middleware = this._client.clientOptions.middleware;\\r\\n                let didClose = (textDocument) => {\\r\\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\\r\\n                };\\r\\n                this._syncedDocuments.delete(textDocument.uri.toString());\\r\\n                if (middleware.didClose) {\\r\\n                    middleware.didClose(textDocument, didClose);\\r\\n                }\\r\\n                else {\\r\\n                    didClose(textDocument);\\r\\n                }\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\nclass DidChangeTextDocumentFeature {\\r\\n    constructor(_client) {\\r\\n        this._client = _client;\\r\\n        this._changeData = new Map();\\r\\n        this._forcingDelivery = false;\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\\r\\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\\r\\n            this.register(this.messages, {\\r\\n                id: UUID.generateUuid(),\\r\\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    register(_message, data) {\\r\\n        if (!data.registerOptions.documentSelector) {\\r\\n            return;\\r\\n        }\\r\\n        if (!this._listener) {\\r\\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\\r\\n        }\\r\\n        this._changeData.set(data.id, {\\r\\n            documentSelector: data.registerOptions.documentSelector,\\r\\n            syncKind: data.registerOptions.syncKind\\r\\n        });\\r\\n    }\\r\\n    callback(event) {\\r\\n        // Text document changes are send for dirty changes as well. We don't\\r\\n        // have dirty / undirty events in the LSP so we ignore content changes\\r\\n        // with length zero.\\r\\n        if (event.contentChanges.length === 0) {\\r\\n            return;\\r\\n        }\\r\\n        for (const changeData of this._changeData.values()) {\\r\\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\\r\\n                let middleware = this._client.clientOptions.middleware;\\r\\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\\r\\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\\r\\n                    if (middleware.didChange) {\\r\\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\\r\\n                    }\\r\\n                    else {\\r\\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\\r\\n                    }\\r\\n                }\\r\\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\\r\\n                    let didChange = (event) => {\\r\\n                        if (this._changeDelayer) {\\r\\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\\r\\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\\r\\n                                this.forceDelivery();\\r\\n                                this._changeDelayer.uri = event.document.uri.toString();\\r\\n                            }\\r\\n                            this._changeDelayer.delayer.trigger(() => {\\r\\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\\r\\n                            });\\r\\n                        }\\r\\n                        else {\\r\\n                            this._changeDelayer = {\\r\\n                                uri: event.document.uri.toString(),\\r\\n                                delayer: new async_1.Delayer(200)\\r\\n                            };\\r\\n                            this._changeDelayer.delayer.trigger(() => {\\r\\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\\r\\n                            }, -1);\\r\\n                        }\\r\\n                    };\\r\\n                    if (middleware.didChange) {\\r\\n                        middleware.didChange(event, didChange);\\r\\n                    }\\r\\n                    else {\\r\\n                        didChange(event);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    unregister(id) {\\r\\n        this._changeData.delete(id);\\r\\n        if (this._changeData.size === 0 && this._listener) {\\r\\n            this._listener.dispose();\\r\\n            this._listener = undefined;\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        this._changeDelayer = undefined;\\r\\n        this._forcingDelivery = false;\\r\\n        this._changeData.clear();\\r\\n        if (this._listener) {\\r\\n            this._listener.dispose();\\r\\n            this._listener = undefined;\\r\\n        }\\r\\n    }\\r\\n    forceDelivery() {\\r\\n        if (this._forcingDelivery || !this._changeDelayer) {\\r\\n            return;\\r\\n        }\\r\\n        try {\\r\\n            this._forcingDelivery = true;\\r\\n            this._changeDelayer.delayer.forceDelivery();\\r\\n        }\\r\\n        finally {\\r\\n            this._forcingDelivery = false;\\r\\n        }\\r\\n    }\\r\\n    getProvider(document) {\\r\\n        for (const changeData of this._changeData.values()) {\\r\\n            if (vscode_1.languages.match(changeData.documentSelector, document)) {\\r\\n                return {\\r\\n                    send: (event) => {\\r\\n                        this.callback(event);\\r\\n                    }\\r\\n                };\\r\\n            }\\r\\n        }\\r\\n        throw new Error(`No provider available for the given text document`);\\r\\n    }\\r\\n}\\r\\nclass WillSaveFeature extends DocumentNotifiactions {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\\r\\n        value.willSave = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\\r\\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\\r\\n            this.register(this.messages, {\\r\\n                id: UUID.generateUuid(),\\r\\n                registerOptions: { documentSelector: documentSelector }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n}\\r\\nclass WillSaveWaitUntilFeature {\\r\\n    constructor(_client) {\\r\\n        this._client = _client;\\r\\n        this._selectors = new Map();\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\\r\\n        value.willSaveWaitUntil = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\\r\\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\\r\\n            this.register(this.messages, {\\r\\n                id: UUID.generateUuid(),\\r\\n                registerOptions: { documentSelector: documentSelector }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    register(_message, data) {\\r\\n        if (!data.registerOptions.documentSelector) {\\r\\n            return;\\r\\n        }\\r\\n        if (!this._listener) {\\r\\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\\r\\n        }\\r\\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\\r\\n    }\\r\\n    callback(event) {\\r\\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\\r\\n            let middleware = this._client.clientOptions.middleware;\\r\\n            let willSaveWaitUntil = (event) => {\\r\\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\\r\\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\\r\\n                    return vEdits === void 0 ? [] : vEdits;\\r\\n                });\\r\\n            };\\r\\n            event.waitUntil(middleware.willSaveWaitUntil\\r\\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\\r\\n                : willSaveWaitUntil(event));\\r\\n        }\\r\\n    }\\r\\n    unregister(id) {\\r\\n        this._selectors.delete(id);\\r\\n        if (this._selectors.size === 0 && this._listener) {\\r\\n            this._listener.dispose();\\r\\n            this._listener = undefined;\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        this._selectors.clear();\\r\\n        if (this._listener) {\\r\\n            this._listener.dispose();\\r\\n            this._listener = undefined;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\\r\\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\\r\\n            this.register(this.messages, {\\r\\n                id: UUID.generateUuid(),\\r\\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    register(method, data) {\\r\\n        this._includeText = !!data.registerOptions.includeText;\\r\\n        super.register(method, data);\\r\\n    }\\r\\n}\\r\\nclass FileSystemWatcherFeature {\\r\\n    constructor(_client, _notifyFileEvent) {\\r\\n        this._client = _client;\\r\\n        this._notifyFileEvent = _notifyFileEvent;\\r\\n        this._watchers = new Map();\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(_capabilities, _documentSelector) {\\r\\n    }\\r\\n    register(_method, data) {\\r\\n        if (!Array.isArray(data.registerOptions.watchers)) {\\r\\n            return;\\r\\n        }\\r\\n        let disposeables = [];\\r\\n        for (let watcher of data.registerOptions.watchers) {\\r\\n            if (!Is.string(watcher.globPattern)) {\\r\\n                continue;\\r\\n            }\\r\\n            let watchCreate = true, watchChange = true, watchDelete = true;\\r\\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\\r\\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\\r\\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) !== 0;\\r\\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) !== 0;\\r\\n            }\\r\\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\\r\\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\\r\\n            disposeables.push(fileSystemWatcher);\\r\\n        }\\r\\n        this._watchers.set(data.id, disposeables);\\r\\n    }\\r\\n    registerRaw(id, fileSystemWatchers) {\\r\\n        let disposeables = [];\\r\\n        for (let fileSystemWatcher of fileSystemWatchers) {\\r\\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\\r\\n        }\\r\\n        this._watchers.set(id, disposeables);\\r\\n    }\\r\\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\\r\\n        if (watchCreate) {\\r\\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\\r\\n                uri: this._client.code2ProtocolConverter.asUri(resource),\\r\\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\\r\\n            }), null, listeners);\\r\\n        }\\r\\n        if (watchChange) {\\r\\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\\r\\n                uri: this._client.code2ProtocolConverter.asUri(resource),\\r\\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\\r\\n            }), null, listeners);\\r\\n        }\\r\\n        if (watchDelete) {\\r\\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\\r\\n                uri: this._client.code2ProtocolConverter.asUri(resource),\\r\\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\\r\\n            }), null, listeners);\\r\\n        }\\r\\n    }\\r\\n    unregister(id) {\\r\\n        let disposeables = this._watchers.get(id);\\r\\n        if (disposeables) {\\r\\n            for (let disposable of disposeables) {\\r\\n                disposable.dispose();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        this._watchers.forEach((disposeables) => {\\r\\n            for (let disposable of disposeables) {\\r\\n                disposable.dispose();\\r\\n            }\\r\\n        });\\r\\n        this._watchers.clear();\\r\\n    }\\r\\n}\\r\\nclass TextDocumentFeature {\\r\\n    constructor(_client, _message) {\\r\\n        this._client = _client;\\r\\n        this._message = _message;\\r\\n        this._registrations = new Map();\\r\\n    }\\r\\n    get messages() {\\r\\n        return this._message;\\r\\n    }\\r\\n    register(message, data) {\\r\\n        if (message.method !== this.messages.method) {\\r\\n            throw new Error(`Register called on wrong feature. Requested ${message.method} but reached feature ${this.messages.method}`);\\r\\n        }\\r\\n        if (!data.registerOptions.documentSelector) {\\r\\n            return;\\r\\n        }\\r\\n        let registration = this.registerLanguageProvider(data.registerOptions);\\r\\n        this._registrations.set(data.id, { disposable: registration[0], data, provider: registration[1] });\\r\\n    }\\r\\n    unregister(id) {\\r\\n        let registration = this._registrations.get(id);\\r\\n        if (registration !== undefined) {\\r\\n            registration.disposable.dispose();\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        this._registrations.forEach((value) => {\\r\\n            value.disposable.dispose();\\r\\n        });\\r\\n        this._registrations.clear();\\r\\n    }\\r\\n    getRegistration(documentSelector, capability) {\\r\\n        if (!capability) {\\r\\n            return [undefined, undefined];\\r\\n        }\\r\\n        else if (vscode_languageserver_protocol_1.TextDocumentRegistrationOptions.is(capability)) {\\r\\n            const id = vscode_languageserver_protocol_1.StaticRegistrationOptions.hasId(capability) ? capability.id : UUID.generateUuid();\\r\\n            const selector = capability.documentSelector || documentSelector;\\r\\n            if (selector) {\\r\\n                return [id, Object.assign({}, capability, { documentSelector: selector })];\\r\\n            }\\r\\n        }\\r\\n        else if (Is.boolean(capability) && capability === true || vscode_languageserver_protocol_1.WorkDoneProgressOptions.is(capability)) {\\r\\n            if (!documentSelector) {\\r\\n                return [undefined, undefined];\\r\\n            }\\r\\n            let options = (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\\r\\n            return [UUID.generateUuid(), options];\\r\\n        }\\r\\n        return [undefined, undefined];\\r\\n    }\\r\\n    getRegistrationOptions(documentSelector, capability) {\\r\\n        if (!documentSelector || !capability) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\\r\\n    }\\r\\n    getProvider(textDocument) {\\r\\n        for (const registration of this._registrations.values()) {\\r\\n            let selector = registration.data.registerOptions.documentSelector;\\r\\n            if (selector !== null && vscode_1.languages.match(selector, textDocument)) {\\r\\n                return registration.provider;\\r\\n            }\\r\\n        }\\r\\n        throw new Error(`The feature has no registration for the provided text document ${textDocument.uri.toString()}`);\\r\\n    }\\r\\n}\\r\\nexports.TextDocumentFeature = TextDocumentFeature;\\r\\nclass WorkspaceFeature {\\r\\n    constructor(_client, _message) {\\r\\n        this._client = _client;\\r\\n        this._message = _message;\\r\\n        this._registrations = new Map();\\r\\n    }\\r\\n    get messages() {\\r\\n        return this._message;\\r\\n    }\\r\\n    register(message, data) {\\r\\n        if (message.method !== this.messages.method) {\\r\\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\\r\\n        }\\r\\n        const registration = this.registerLanguageProvider(data.registerOptions);\\r\\n        this._registrations.set(data.id, { disposable: registration[0], provider: registration[1] });\\r\\n    }\\r\\n    unregister(id) {\\r\\n        let registration = this._registrations.get(id);\\r\\n        if (registration !== undefined) {\\r\\n            registration.disposable.dispose();\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        this._registrations.forEach((registration) => {\\r\\n            registration.disposable.dispose();\\r\\n        });\\r\\n        this._registrations.clear();\\r\\n    }\\r\\n    getProviders() {\\r\\n        const result = [];\\r\\n        for (const registration of this._registrations.values()) {\\r\\n            result.push(registration.provider);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\nclass CompletionItemFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\\r\\n        completion.dynamicRegistration = true;\\r\\n        completion.contextSupport = true;\\r\\n        completion.completionItem = {\\r\\n            snippetSupport: true,\\r\\n            commitCharactersSupport: true,\\r\\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\\r\\n            deprecatedSupport: true,\\r\\n            preselectSupport: true,\\r\\n            tagSupport: { valueSet: [vscode_languageserver_protocol_1.CompletionItemTag.Deprecated] }\\r\\n        };\\r\\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.completionProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, {\\r\\n            id: UUID.generateUuid(),\\r\\n            registerOptions: options\\r\\n        });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const triggerCharacters = options.triggerCharacters || [];\\r\\n        const provider = {\\r\\n            provideCompletionItems: (document, position, token, context) => {\\r\\n                const client = this._client;\\r\\n                const middleware = this._client.clientOptions.middleware;\\r\\n                const provideCompletionItems = (document, position, context, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                return middleware.provideCompletionItem\\r\\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\\r\\n                    : provideCompletionItems(document, position, context, token);\\r\\n            },\\r\\n            resolveCompletionItem: options.resolveProvider\\r\\n                ? (item, token) => {\\r\\n                    const client = this._client;\\r\\n                    const middleware = this._client.clientOptions.middleware;\\r\\n                    const resolveCompletionItem = (item, token) => {\\r\\n                        return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\\r\\n                            client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\\r\\n                            return Promise.resolve(item);\\r\\n                        });\\r\\n                    };\\r\\n                    return middleware.resolveCompletionItem\\r\\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\\r\\n                        : resolveCompletionItem(item, token);\\r\\n                }\\r\\n                : undefined\\r\\n        };\\r\\n        return [vscode_1.languages.registerCompletionItemProvider(options.documentSelector, provider, ...triggerCharacters), provider];\\r\\n    }\\r\\n}\\r\\nclass HoverFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        const hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\\r\\n        hoverCapability.dynamicRegistration = true;\\r\\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.hoverProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, {\\r\\n            id: UUID.generateUuid(),\\r\\n            registerOptions: options\\r\\n        });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideHover: (document, position, token) => {\\r\\n                const client = this._client;\\r\\n                const provideHover = (document, position, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideHover\\r\\n                    ? middleware.provideHover(document, position, token, provideHover)\\r\\n                    : provideHover(document, position, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerHoverProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass SignatureHelpFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\\r\\n        config.dynamicRegistration = true;\\r\\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\\r\\n        config.signatureInformation.parameterInformation = { labelOffsetSupport: true };\\r\\n        config.contextSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.signatureHelpProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, {\\r\\n            id: UUID.generateUuid(),\\r\\n            registerOptions: options\\r\\n        });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideSignatureHelp: (document, position, token, context) => {\\r\\n                const client = this._client;\\r\\n                const providerSignatureHelp = (document, position, context, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asSignatureHelpParams(document, position, context), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideSignatureHelp\\r\\n                    ? middleware.provideSignatureHelp(document, position, context, token, providerSignatureHelp)\\r\\n                    : providerSignatureHelp(document, position, context, token);\\r\\n            }\\r\\n        };\\r\\n        let disposable;\\r\\n        if (options.retriggerCharacters === undefined) {\\r\\n            const triggerCharacters = options.triggerCharacters || [];\\r\\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, ...triggerCharacters);\\r\\n        }\\r\\n        else {\\r\\n            const metaData = {\\r\\n                triggerCharacters: options.triggerCharacters || [],\\r\\n                retriggerCharacters: options.retriggerCharacters || []\\r\\n            };\\r\\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, metaData);\\r\\n        }\\r\\n        return [disposable, provider];\\r\\n    }\\r\\n}\\r\\nclass DefinitionFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let definitionSupport = ensure(ensure(capabilites, 'textDocument'), 'definition');\\r\\n        definitionSupport.dynamicRegistration = true;\\r\\n        definitionSupport.linkSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.definitionProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideDefinition: (document, position, token) => {\\r\\n                const client = this._client;\\r\\n                const provideDefinition = (document, position, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDefinition\\r\\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\\r\\n                    : provideDefinition(document, position, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerDefinitionProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass ReferencesFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.referencesProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideReferences: (document, position, options, token) => {\\r\\n                const client = this._client;\\r\\n                const _providerReferences = (document, position, options, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideReferences\\r\\n                    ? middleware.provideReferences(document, position, options, token, _providerReferences)\\r\\n                    : _providerReferences(document, position, options, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerReferenceProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass DocumentHighlightFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentHighlightProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideDocumentHighlights: (document, position, token) => {\\r\\n                const client = this._client;\\r\\n                const _provideDocumentHighlights = (document, position, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDocumentHighlights\\r\\n                    ? middleware.provideDocumentHighlights(document, position, token, _provideDocumentHighlights)\\r\\n                    : _provideDocumentHighlights(document, position, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass DocumentSymbolFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\\r\\n        symbolCapabilities.dynamicRegistration = true;\\r\\n        symbolCapabilities.symbolKind = {\\r\\n            valueSet: SupportedSymbolKinds\\r\\n        };\\r\\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentSymbolProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideDocumentSymbols: (document, token) => {\\r\\n                const client = this._client;\\r\\n                const _provideDocumentSymbols = (document, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then((data) => {\\r\\n                        if (data === null) {\\r\\n                            return undefined;\\r\\n                        }\\r\\n                        if (data.length === 0) {\\r\\n                            return [];\\r\\n                        }\\r\\n                        else {\\r\\n                            let element = data[0];\\r\\n                            if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\\r\\n                                return client.protocol2CodeConverter.asDocumentSymbols(data);\\r\\n                            }\\r\\n                            else {\\r\\n                                return client.protocol2CodeConverter.asSymbolInformations(data);\\r\\n                            }\\r\\n                        }\\r\\n                    }, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDocumentSymbols\\r\\n                    ? middleware.provideDocumentSymbols(document, token, _provideDocumentSymbols)\\r\\n                    : _provideDocumentSymbols(document, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\\r\\n        symbolCapabilities.dynamicRegistration = true;\\r\\n        symbolCapabilities.symbolKind = {\\r\\n            valueSet: SupportedSymbolKinds\\r\\n        };\\r\\n    }\\r\\n    initialize(capabilities) {\\r\\n        if (!capabilities.workspaceSymbolProvider) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, {\\r\\n            id: UUID.generateUuid(),\\r\\n            registerOptions: capabilities.workspaceSymbolProvider === true ? { workDoneProgress: false } : capabilities.workspaceSymbolProvider\\r\\n        });\\r\\n    }\\r\\n    registerLanguageProvider(_options) {\\r\\n        const provider = {\\r\\n            provideWorkspaceSymbols: (query, token) => {\\r\\n                const client = this._client;\\r\\n                const provideWorkspaceSymbols = (query, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideWorkspaceSymbols\\r\\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\\r\\n                    : provideWorkspaceSymbols(query, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerWorkspaceSymbolProvider(provider), provider];\\r\\n    }\\r\\n}\\r\\nclass CodeActionFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        const cap = ensure(ensure(capabilites, 'textDocument'), 'codeAction');\\r\\n        cap.dynamicRegistration = true;\\r\\n        cap.isPreferredSupport = true;\\r\\n        cap.codeActionLiteralSupport = {\\r\\n            codeActionKind: {\\r\\n                valueSet: [\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.Empty,\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\\r\\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\\r\\n                ]\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeActionProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideCodeActions: (document, range, context, token) => {\\r\\n                const client = this._client;\\r\\n                const _provideCodeActions = (document, range, context, token) => {\\r\\n                    const params = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                        range: client.code2ProtocolConverter.asRange(range),\\r\\n                        context: client.code2ProtocolConverter.asCodeActionContext(context)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\\r\\n                        if (values === null) {\\r\\n                            return undefined;\\r\\n                        }\\r\\n                        const result = [];\\r\\n                        for (let item of values) {\\r\\n                            if (vscode_languageserver_protocol_1.Command.is(item)) {\\r\\n                                result.push(client.protocol2CodeConverter.asCommand(item));\\r\\n                            }\\r\\n                            else {\\r\\n                                result.push(client.protocol2CodeConverter.asCodeAction(item));\\r\\n                            }\\r\\n                        }\\r\\n                        return result;\\r\\n                    }, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideCodeActions\\r\\n                    ? middleware.provideCodeActions(document, range, context, token, _provideCodeActions)\\r\\n                    : _provideCodeActions(document, range, context, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerCodeActionsProvider(options.documentSelector, provider, (options.codeActionKinds\\r\\n                ? { providedCodeActionKinds: this._client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\\r\\n                : undefined)), provider];\\r\\n    }\\r\\n}\\r\\nclass CodeLensFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeLensProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideCodeLenses: (document, token) => {\\r\\n                const client = this._client;\\r\\n                const provideCodeLenses = (document, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideCodeLenses\\r\\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\\r\\n                    : provideCodeLenses(document, token);\\r\\n            },\\r\\n            resolveCodeLens: (options.resolveProvider)\\r\\n                ? (codeLens, token) => {\\r\\n                    const client = this._client;\\r\\n                    const resolveCodeLens = (codeLens, token) => {\\r\\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\\r\\n                            client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\\r\\n                            return codeLens;\\r\\n                        });\\r\\n                    };\\r\\n                    const middleware = client.clientOptions.middleware;\\r\\n                    return middleware.resolveCodeLens\\r\\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\\r\\n                        : resolveCodeLens(codeLens, token);\\r\\n                }\\r\\n                : undefined\\r\\n        };\\r\\n        return [vscode_1.languages.registerCodeLensProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass DocumentFormattingFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentFormattingProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideDocumentFormattingEdits: (document, options, token) => {\\r\\n                const client = this._client;\\r\\n                const provideDocumentFormattingEdits = (document, options, token) => {\\r\\n                    const params = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDocumentFormattingEdits\\r\\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\\r\\n                    : provideDocumentFormattingEdits(document, options, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentRangeFormattingProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\\r\\n                const client = this._client;\\r\\n                const provideDocumentRangeFormattingEdits = (document, range, options, token) => {\\r\\n                    let params = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                        range: client.code2ProtocolConverter.asRange(range),\\r\\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                let middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDocumentRangeFormattingEdits\\r\\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\\r\\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentOnTypeFormattingProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\\r\\n                const client = this._client;\\r\\n                const provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\\r\\n                    let params = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                        position: client.code2ProtocolConverter.asPosition(position),\\r\\n                        ch: ch,\\r\\n                        options: client.code2ProtocolConverter.asFormattingOptions(options)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideOnTypeFormattingEdits\\r\\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\\r\\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\\r\\n            }\\r\\n        };\\r\\n        const moreTriggerCharacter = options.moreTriggerCharacter || [];\\r\\n        return [vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, provider, options.firstTriggerCharacter, ...moreTriggerCharacter), provider];\\r\\n    }\\r\\n}\\r\\nclass RenameFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let rename = ensure(ensure(capabilites, 'textDocument'), 'rename');\\r\\n        rename.dynamicRegistration = true;\\r\\n        rename.prepareSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.renameProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        if (Is.boolean(capabilities.renameProvider)) {\\r\\n            options.prepareProvider = false;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideRenameEdits: (document, position, newName, token) => {\\r\\n                const client = this._client;\\r\\n                const provideRenameEdits = (document, position, newName, token) => {\\r\\n                    let params = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                        position: client.code2ProtocolConverter.asPosition(position),\\r\\n                        newName: newName\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\\r\\n                        return Promise.reject(new Error(error.message));\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideRenameEdits\\r\\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\\r\\n                    : provideRenameEdits(document, position, newName, token);\\r\\n            },\\r\\n            prepareRename: options.prepareProvider\\r\\n                ? (document, position, token) => {\\r\\n                    const client = this._client;\\r\\n                    const prepareRename = (document, position, token) => {\\r\\n                        let params = {\\r\\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                            position: client.code2ProtocolConverter.asPosition(position),\\r\\n                        };\\r\\n                        return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\\r\\n                            if (vscode_languageserver_protocol_1.Range.is(result)) {\\r\\n                                return client.protocol2CodeConverter.asRange(result);\\r\\n                            }\\r\\n                            else if (result && vscode_languageserver_protocol_1.Range.is(result.range)) {\\r\\n                                return {\\r\\n                                    range: client.protocol2CodeConverter.asRange(result.range),\\r\\n                                    placeholder: result.placeholder\\r\\n                                };\\r\\n                            }\\r\\n                            // To cancel the rename vscode API expects a rejected promise.\\r\\n                            return Promise.reject(new Error(`The element can't be renamed.`));\\r\\n                        }, (error) => {\\r\\n                            client.logFailedRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, error);\\r\\n                            return Promise.reject(new Error(error.message));\\r\\n                        });\\r\\n                    };\\r\\n                    const middleware = client.clientOptions.middleware;\\r\\n                    return middleware.prepareRename\\r\\n                        ? middleware.prepareRename(document, position, token, prepareRename)\\r\\n                        : prepareRename(document, position, token);\\r\\n                }\\r\\n                : undefined\\r\\n        };\\r\\n        return [vscode_1.languages.registerRenameProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass DocumentLinkFeature extends TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        const documentLinkCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentLink');\\r\\n        documentLinkCapabilities.dynamicRegistration = true;\\r\\n        documentLinkCapabilities.tooltipSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentLinkProvider);\\r\\n        if (!options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: UUID.generateUuid(), registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideDocumentLinks: (document, token) => {\\r\\n                const client = this._client;\\r\\n                const provideDocumentLinks = (document, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\\r\\n                        return Promise.resolve([]);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDocumentLinks\\r\\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\\r\\n                    : provideDocumentLinks(document, token);\\r\\n            },\\r\\n            resolveDocumentLink: options.resolveProvider\\r\\n                ? (link, token) => {\\r\\n                    const client = this._client;\\r\\n                    let resolveDocumentLink = (link, token) => {\\r\\n                        return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\\r\\n                            client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\\r\\n                            return Promise.resolve(link);\\r\\n                        });\\r\\n                    };\\r\\n                    const middleware = client.clientOptions.middleware;\\r\\n                    return middleware.resolveDocumentLink\\r\\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\\r\\n                        : resolveDocumentLink(link, token);\\r\\n                }\\r\\n                : undefined\\r\\n        };\\r\\n        return [vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nclass ConfigurationFeature {\\r\\n    constructor(_client) {\\r\\n        this._client = _client;\\r\\n        this._listeners = new Map();\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize() {\\r\\n        let section = this._client.clientOptions.synchronize.configurationSection;\\r\\n        if (section !== void 0) {\\r\\n            this.register(this.messages, {\\r\\n                id: UUID.generateUuid(),\\r\\n                registerOptions: {\\r\\n                    section: section\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    register(_message, data) {\\r\\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\\r\\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\\r\\n        });\\r\\n        this._listeners.set(data.id, disposable);\\r\\n        if (data.registerOptions.section !== void 0) {\\r\\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\\r\\n        }\\r\\n    }\\r\\n    unregister(id) {\\r\\n        let disposable = this._listeners.get(id);\\r\\n        if (disposable) {\\r\\n            this._listeners.delete(id);\\r\\n            disposable.dispose();\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        for (let disposable of this._listeners.values()) {\\r\\n            disposable.dispose();\\r\\n        }\\r\\n        this._listeners.clear();\\r\\n    }\\r\\n    onDidChangeConfiguration(configurationSection, event) {\\r\\n        let sections;\\r\\n        if (Is.string(configurationSection)) {\\r\\n            sections = [configurationSection];\\r\\n        }\\r\\n        else {\\r\\n            sections = configurationSection;\\r\\n        }\\r\\n        if (sections !== void 0 && event !== void 0) {\\r\\n            let affected = sections.some((section) => event.affectsConfiguration(section));\\r\\n            if (!affected) {\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        let didChangeConfiguration = (sections) => {\\r\\n            if (sections === void 0) {\\r\\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\\r\\n                return;\\r\\n            }\\r\\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\\r\\n        };\\r\\n        let middleware = this.getMiddleware();\\r\\n        middleware\\r\\n            ? middleware(sections, didChangeConfiguration)\\r\\n            : didChangeConfiguration(sections);\\r\\n    }\\r\\n    extractSettingsInformation(keys) {\\r\\n        function ensurePath(config, path) {\\r\\n            let current = config;\\r\\n            for (let i = 0; i < path.length - 1; i++) {\\r\\n                let obj = current[path[i]];\\r\\n                if (!obj) {\\r\\n                    obj = Object.create(null);\\r\\n                    current[path[i]] = obj;\\r\\n                }\\r\\n                current = obj;\\r\\n            }\\r\\n            return current;\\r\\n        }\\r\\n        let resource = this._client.clientOptions.workspaceFolder\\r\\n            ? this._client.clientOptions.workspaceFolder.uri\\r\\n            : undefined;\\r\\n        let result = Object.create(null);\\r\\n        for (let i = 0; i < keys.length; i++) {\\r\\n            let key = keys[i];\\r\\n            let index = key.indexOf('.');\\r\\n            let config = null;\\r\\n            if (index >= 0) {\\r\\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\\r\\n            }\\r\\n            else {\\r\\n                config = vscode_1.workspace.getConfiguration(key, resource);\\r\\n            }\\r\\n            if (config) {\\r\\n                let path = keys[i].split('.');\\r\\n                ensurePath(result, path)[path[path.length - 1]] = config;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    getMiddleware() {\\r\\n        let middleware = this._client.clientOptions.middleware;\\r\\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\\r\\n            return middleware.workspace.didChangeConfiguration;\\r\\n        }\\r\\n        else {\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nclass ExecuteCommandFeature {\\r\\n    constructor(_client) {\\r\\n        this._client = _client;\\r\\n        this._commands = new Map();\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities) {\\r\\n        if (!capabilities.executeCommandProvider) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, {\\r\\n            id: UUID.generateUuid(),\\r\\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\\r\\n        });\\r\\n    }\\r\\n    register(_message, data) {\\r\\n        const client = this._client;\\r\\n        const middleware = client.clientOptions.middleware;\\r\\n        const executeCommand = (command, args) => {\\r\\n            let params = {\\r\\n                command,\\r\\n                arguments: args\\r\\n            };\\r\\n            return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\\r\\n                client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\\r\\n            });\\r\\n        };\\r\\n        if (data.registerOptions.commands) {\\r\\n            const disposeables = [];\\r\\n            for (const command of data.registerOptions.commands) {\\r\\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\\r\\n                    return middleware.executeCommand\\r\\n                        ? middleware.executeCommand(command, args, executeCommand)\\r\\n                        : executeCommand(command, args);\\r\\n                }));\\r\\n            }\\r\\n            this._commands.set(data.id, disposeables);\\r\\n        }\\r\\n    }\\r\\n    unregister(id) {\\r\\n        let disposeables = this._commands.get(id);\\r\\n        if (disposeables) {\\r\\n            disposeables.forEach(disposable => disposable.dispose());\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        this._commands.forEach((value) => {\\r\\n            value.forEach(disposable => disposable.dispose());\\r\\n        });\\r\\n        this._commands.clear();\\r\\n    }\\r\\n}\\r\\nvar MessageTransports;\\r\\n(function (MessageTransports) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\\r\\n    }\\r\\n    MessageTransports.is = is;\\r\\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\\r\\nclass OnReady {\\r\\n    constructor(_resolve, _reject) {\\r\\n        this._resolve = _resolve;\\r\\n        this._reject = _reject;\\r\\n        this._used = false;\\r\\n    }\\r\\n    get isUsed() {\\r\\n        return this._used;\\r\\n    }\\r\\n    resolve() {\\r\\n        this._used = true;\\r\\n        this._resolve();\\r\\n    }\\r\\n    reject(error) {\\r\\n        this._used = true;\\r\\n        this._reject(error);\\r\\n    }\\r\\n}\\r\\nclass BaseLanguageClient {\\r\\n    constructor(id, name, clientOptions) {\\r\\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\\r\\n        this._features = [];\\r\\n        this._method2Message = new Map();\\r\\n        this._dynamicFeatures = new Map();\\r\\n        this._id = id;\\r\\n        this._name = name;\\r\\n        clientOptions = clientOptions || {};\\r\\n        this._clientOptions = {\\r\\n            documentSelector: clientOptions.documentSelector || [],\\r\\n            synchronize: clientOptions.synchronize || {},\\r\\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\\r\\n            outputChannelName: clientOptions.outputChannelName || this._name,\\r\\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\\r\\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\\r\\n            initializationOptions: clientOptions.initializationOptions,\\r\\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\\r\\n            progressOnInitialization: !!clientOptions.progressOnInitialization,\\r\\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\\r\\n            middleware: clientOptions.middleware || {},\\r\\n            uriConverters: clientOptions.uriConverters,\\r\\n            workspaceFolder: clientOptions.workspaceFolder\\r\\n        };\\r\\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\\r\\n        this.state = ClientState.Initial;\\r\\n        this._connectionPromise = undefined;\\r\\n        this._resolvedConnection = undefined;\\r\\n        this._initializeResult = undefined;\\r\\n        if (clientOptions.outputChannel) {\\r\\n            this._outputChannel = clientOptions.outputChannel;\\r\\n            this._disposeOutputChannel = false;\\r\\n        }\\r\\n        else {\\r\\n            this._outputChannel = undefined;\\r\\n            this._disposeOutputChannel = true;\\r\\n        }\\r\\n        this._traceOutputChannel = clientOptions.traceOutputChannel;\\r\\n        this._listeners = undefined;\\r\\n        this._providers = undefined;\\r\\n        this._diagnostics = undefined;\\r\\n        this._fileEvents = [];\\r\\n        this._fileEventDelayer = new async_1.Delayer(250);\\r\\n        this._onReady = new Promise((resolve, reject) => {\\r\\n            this._onReadyCallbacks = new OnReady(resolve, reject);\\r\\n        });\\r\\n        this._onStop = undefined;\\r\\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\\r\\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\\r\\n        this._tracer = {\\r\\n            log: (messageOrDataObject, data) => {\\r\\n                if (Is.string(messageOrDataObject)) {\\r\\n                    this.logTrace(messageOrDataObject, data);\\r\\n                }\\r\\n                else {\\r\\n                    this.logObjectTrace(messageOrDataObject);\\r\\n                }\\r\\n            },\\r\\n        };\\r\\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\\r\\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\\r\\n        this._syncedDocuments = new Map();\\r\\n        this.registerBuiltinFeatures();\\r\\n    }\\r\\n    get state() {\\r\\n        return this._state;\\r\\n    }\\r\\n    set state(value) {\\r\\n        let oldState = this.getPublicState();\\r\\n        this._state = value;\\r\\n        let newState = this.getPublicState();\\r\\n        if (newState !== oldState) {\\r\\n            this._stateChangeEmitter.fire({ oldState, newState });\\r\\n        }\\r\\n    }\\r\\n    getPublicState() {\\r\\n        if (this.state === ClientState.Running) {\\r\\n            return State.Running;\\r\\n        }\\r\\n        else if (this.state === ClientState.Starting) {\\r\\n            return State.Starting;\\r\\n        }\\r\\n        else {\\r\\n            return State.Stopped;\\r\\n        }\\r\\n    }\\r\\n    get initializeResult() {\\r\\n        return this._initializeResult;\\r\\n    }\\r\\n    sendRequest(type, ...params) {\\r\\n        if (!this.isConnectionActive()) {\\r\\n            throw new Error('Language client is not ready yet');\\r\\n        }\\r\\n        this.forceDocumentSync();\\r\\n        try {\\r\\n            return this._resolvedConnection.sendRequest(type, ...params);\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n    onRequest(type, handler) {\\r\\n        if (!this.isConnectionActive()) {\\r\\n            throw new Error('Language client is not ready yet');\\r\\n        }\\r\\n        try {\\r\\n            this._resolvedConnection.onRequest(type, handler);\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n    sendNotification(type, params) {\\r\\n        if (!this.isConnectionActive()) {\\r\\n            throw new Error('Language client is not ready yet');\\r\\n        }\\r\\n        this.forceDocumentSync();\\r\\n        try {\\r\\n            this._resolvedConnection.sendNotification(type, params);\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n    onNotification(type, handler) {\\r\\n        if (!this.isConnectionActive()) {\\r\\n            throw new Error('Language client is not ready yet');\\r\\n        }\\r\\n        try {\\r\\n            this._resolvedConnection.onNotification(type, handler);\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n    onProgress(type, token, handler) {\\r\\n        if (!this.isConnectionActive()) {\\r\\n            throw new Error('Language client is not ready yet');\\r\\n        }\\r\\n        try {\\r\\n            return this._resolvedConnection.onProgress(type, token, handler);\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.error(`Registering progress handler for token ${token} failed.`, error);\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n    sendProgress(type, token, value) {\\r\\n        if (!this.isConnectionActive()) {\\r\\n            throw new Error('Language client is not ready yet');\\r\\n        }\\r\\n        this.forceDocumentSync();\\r\\n        try {\\r\\n            this._resolvedConnection.sendProgress(type, token, value);\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.error(`Sending progress for token ${token} failed.`, error);\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n    get clientOptions() {\\r\\n        return this._clientOptions;\\r\\n    }\\r\\n    get protocol2CodeConverter() {\\r\\n        return this._p2c;\\r\\n    }\\r\\n    get code2ProtocolConverter() {\\r\\n        return this._c2p;\\r\\n    }\\r\\n    get onTelemetry() {\\r\\n        return this._telemetryEmitter.event;\\r\\n    }\\r\\n    get onDidChangeState() {\\r\\n        return this._stateChangeEmitter.event;\\r\\n    }\\r\\n    get outputChannel() {\\r\\n        if (!this._outputChannel) {\\r\\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\\r\\n        }\\r\\n        return this._outputChannel;\\r\\n    }\\r\\n    get traceOutputChannel() {\\r\\n        if (this._traceOutputChannel) {\\r\\n            return this._traceOutputChannel;\\r\\n        }\\r\\n        return this.outputChannel;\\r\\n    }\\r\\n    get diagnostics() {\\r\\n        return this._diagnostics;\\r\\n    }\\r\\n    createDefaultErrorHandler() {\\r\\n        return new DefaultErrorHandler(this._name);\\r\\n    }\\r\\n    set trace(value) {\\r\\n        this._trace = value;\\r\\n        this.onReady().then(() => {\\r\\n            this.resolveConnection().then((connection) => {\\r\\n                connection.trace(this._trace, this._tracer, {\\r\\n                    sendNotification: false,\\r\\n                    traceFormat: this._traceFormat\\r\\n                });\\r\\n            });\\r\\n        }, () => {\\r\\n        });\\r\\n    }\\r\\n    data2String(data) {\\r\\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\\r\\n            const responseError = data;\\r\\n            return `  Message: ${responseError.message}\\\\n  Code: ${responseError.code} ${responseError.data ? '\\\\n' + responseError.data.toString() : ''}`;\\r\\n        }\\r\\n        if (data instanceof Error) {\\r\\n            if (Is.string(data.stack)) {\\r\\n                return data.stack;\\r\\n            }\\r\\n            return data.message;\\r\\n        }\\r\\n        if (Is.string(data)) {\\r\\n            return data;\\r\\n        }\\r\\n        return data.toString();\\r\\n    }\\r\\n    info(message, data) {\\r\\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\\r\\n        if (data) {\\r\\n            this.outputChannel.appendLine(this.data2String(data));\\r\\n        }\\r\\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\\r\\n            this.showNotificationMessage();\\r\\n        }\\r\\n    }\\r\\n    warn(message, data) {\\r\\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\\r\\n        if (data) {\\r\\n            this.outputChannel.appendLine(this.data2String(data));\\r\\n        }\\r\\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\\r\\n            this.showNotificationMessage();\\r\\n        }\\r\\n    }\\r\\n    error(message, data) {\\r\\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\\r\\n        if (data) {\\r\\n            this.outputChannel.appendLine(this.data2String(data));\\r\\n        }\\r\\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\\r\\n            this.showNotificationMessage();\\r\\n        }\\r\\n    }\\r\\n    showNotificationMessage() {\\r\\n        vscode_1.window.showInformationMessage('A request has failed. See the output for more information.', 'Go to output').then(() => {\\r\\n            this.outputChannel.show(true);\\r\\n        });\\r\\n    }\\r\\n    logTrace(message, data) {\\r\\n        this.traceOutputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\\r\\n        if (data) {\\r\\n            this.traceOutputChannel.appendLine(this.data2String(data));\\r\\n        }\\r\\n    }\\r\\n    logObjectTrace(data) {\\r\\n        if (data.isLSPMessage && data.type) {\\r\\n            this.traceOutputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\\r\\n        }\\r\\n        else {\\r\\n            this.traceOutputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\\r\\n        }\\r\\n        if (data) {\\r\\n            this.traceOutputChannel.appendLine(`${JSON.stringify(data)}`);\\r\\n        }\\r\\n    }\\r\\n    needsStart() {\\r\\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\\r\\n    }\\r\\n    needsStop() {\\r\\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\\r\\n    }\\r\\n    onReady() {\\r\\n        return this._onReady;\\r\\n    }\\r\\n    isConnectionActive() {\\r\\n        return this.state === ClientState.Running && !!this._resolvedConnection;\\r\\n    }\\r\\n    start() {\\r\\n        if (this._onReadyCallbacks.isUsed) {\\r\\n            this._onReady = new Promise((resolve, reject) => {\\r\\n                this._onReadyCallbacks = new OnReady(resolve, reject);\\r\\n            });\\r\\n        }\\r\\n        this._listeners = [];\\r\\n        this._providers = [];\\r\\n        // If we restart then the diagnostics collection is reused.\\r\\n        if (!this._diagnostics) {\\r\\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\\r\\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\\r\\n                : vscode_1.languages.createDiagnosticCollection();\\r\\n        }\\r\\n        this.state = ClientState.Starting;\\r\\n        this.resolveConnection().then((connection) => {\\r\\n            connection.onLogMessage((message) => {\\r\\n                switch (message.type) {\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Error:\\r\\n                        this.error(message.message);\\r\\n                        break;\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\\r\\n                        this.warn(message.message);\\r\\n                        break;\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Info:\\r\\n                        this.info(message.message);\\r\\n                        break;\\r\\n                    default:\\r\\n                        this.outputChannel.appendLine(message.message);\\r\\n                }\\r\\n            });\\r\\n            connection.onShowMessage((message) => {\\r\\n                switch (message.type) {\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Error:\\r\\n                        vscode_1.window.showErrorMessage(message.message);\\r\\n                        break;\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\\r\\n                        vscode_1.window.showWarningMessage(message.message);\\r\\n                        break;\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Info:\\r\\n                        vscode_1.window.showInformationMessage(message.message);\\r\\n                        break;\\r\\n                    default:\\r\\n                        vscode_1.window.showInformationMessage(message.message);\\r\\n                }\\r\\n            });\\r\\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\\r\\n                let messageFunc;\\r\\n                switch (params.type) {\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Error:\\r\\n                        messageFunc = vscode_1.window.showErrorMessage;\\r\\n                        break;\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\\r\\n                        messageFunc = vscode_1.window.showWarningMessage;\\r\\n                        break;\\r\\n                    case vscode_languageserver_protocol_1.MessageType.Info:\\r\\n                        messageFunc = vscode_1.window.showInformationMessage;\\r\\n                        break;\\r\\n                    default:\\r\\n                        messageFunc = vscode_1.window.showInformationMessage;\\r\\n                }\\r\\n                let actions = params.actions || [];\\r\\n                return messageFunc(params.message, ...actions);\\r\\n            });\\r\\n            connection.onTelemetry((data) => {\\r\\n                this._telemetryEmitter.fire(data);\\r\\n            });\\r\\n            connection.listen();\\r\\n            // Error is handled in the initialize call.\\r\\n            return this.initialize(connection);\\r\\n        }).then(undefined, (error) => {\\r\\n            this.state = ClientState.StartFailed;\\r\\n            this._onReadyCallbacks.reject(error);\\r\\n            this.error('Starting client failed', error);\\r\\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\\r\\n        });\\r\\n        return new vscode_1.Disposable(() => {\\r\\n            if (this.needsStop()) {\\r\\n                this.stop();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    resolveConnection() {\\r\\n        if (!this._connectionPromise) {\\r\\n            this._connectionPromise = this.createConnection();\\r\\n        }\\r\\n        return this._connectionPromise;\\r\\n    }\\r\\n    initialize(connection) {\\r\\n        this.refreshTrace(connection, false);\\r\\n        let initOption = this._clientOptions.initializationOptions;\\r\\n        let rootPath = this._clientOptions.workspaceFolder\\r\\n            ? this._clientOptions.workspaceFolder.uri.fsPath\\r\\n            : this._clientGetRootPath();\\r\\n        let initParams = {\\r\\n            processId: process.pid,\\r\\n            clientInfo: {\\r\\n                name: 'vscode',\\r\\n                version: vscode_1.version\\r\\n            },\\r\\n            rootPath: rootPath ? rootPath : null,\\r\\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\\r\\n            capabilities: this.computeClientCapabilities(),\\r\\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\\r\\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\\r\\n            workspaceFolders: null\\r\\n        };\\r\\n        this.fillInitializeParams(initParams);\\r\\n        if (this._clientOptions.progressOnInitialization) {\\r\\n            const token = UUID.generateUuid();\\r\\n            const part = new progressPart_1.ProgressPart(connection, token);\\r\\n            initParams.workDoneToken = token;\\r\\n            return this.doInitialize(connection, initParams).then((result) => {\\r\\n                part.done();\\r\\n                return result;\\r\\n            }, (error) => {\\r\\n                part.cancel();\\r\\n                throw error;\\r\\n            });\\r\\n        }\\r\\n        else {\\r\\n            return this.doInitialize(connection, initParams);\\r\\n        }\\r\\n    }\\r\\n    doInitialize(connection, initParams) {\\r\\n        return connection.initialize(initParams).then((result) => {\\r\\n            this._resolvedConnection = connection;\\r\\n            this._initializeResult = result;\\r\\n            this.state = ClientState.Running;\\r\\n            let textDocumentSyncOptions = undefined;\\r\\n            if (Is.number(result.capabilities.textDocumentSync)) {\\r\\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\\r\\n                    textDocumentSyncOptions = {\\r\\n                        openClose: false,\\r\\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\\r\\n                        save: undefined\\r\\n                    };\\r\\n                }\\r\\n                else {\\r\\n                    textDocumentSyncOptions = {\\r\\n                        openClose: true,\\r\\n                        change: result.capabilities.textDocumentSync,\\r\\n                        save: {\\r\\n                            includeText: false\\r\\n                        }\\r\\n                    };\\r\\n                }\\r\\n            }\\r\\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\\r\\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\\r\\n            }\\r\\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\\r\\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\\r\\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\\r\\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\\r\\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\\r\\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\\r\\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\\r\\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\\r\\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\\r\\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\\r\\n            this.hookFileEvents(connection);\\r\\n            this.hookConfigurationChanged(connection);\\r\\n            this.initializeFeatures(connection);\\r\\n            this._onReadyCallbacks.resolve();\\r\\n            return result;\\r\\n        }).then(undefined, (error) => {\\r\\n            if (this._clientOptions.initializationFailedHandler) {\\r\\n                if (this._clientOptions.initializationFailedHandler(error)) {\\r\\n                    this.initialize(connection);\\r\\n                }\\r\\n                else {\\r\\n                    this.stop();\\r\\n                    this._onReadyCallbacks.reject(error);\\r\\n                }\\r\\n            }\\r\\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\\r\\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: 'retry' }).then(item => {\\r\\n                    if (item && item.id === 'retry') {\\r\\n                        this.initialize(connection);\\r\\n                    }\\r\\n                    else {\\r\\n                        this.stop();\\r\\n                        this._onReadyCallbacks.reject(error);\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            else {\\r\\n                if (error && error.message) {\\r\\n                    vscode_1.window.showErrorMessage(error.message);\\r\\n                }\\r\\n                this.error('Server initialization failed.', error);\\r\\n                this.stop();\\r\\n                this._onReadyCallbacks.reject(error);\\r\\n            }\\r\\n            throw error;\\r\\n        });\\r\\n    }\\r\\n    _clientGetRootPath() {\\r\\n        let folders = vscode_1.workspace.workspaceFolders;\\r\\n        if (!folders || folders.length === 0) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let folder = folders[0];\\r\\n        if (folder.uri.scheme === 'file') {\\r\\n            return folder.uri.fsPath;\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    stop() {\\r\\n        this._initializeResult = undefined;\\r\\n        if (!this._connectionPromise) {\\r\\n            this.state = ClientState.Stopped;\\r\\n            return Promise.resolve();\\r\\n        }\\r\\n        if (this.state === ClientState.Stopping && this._onStop) {\\r\\n            return this._onStop;\\r\\n        }\\r\\n        this.state = ClientState.Stopping;\\r\\n        this.cleanUp(false);\\r\\n        // unhook listeners\\r\\n        return this._onStop = this.resolveConnection().then(connection => {\\r\\n            return connection.shutdown().then(() => {\\r\\n                connection.exit();\\r\\n                connection.dispose();\\r\\n                this.state = ClientState.Stopped;\\r\\n                this.cleanUpChannel();\\r\\n                this._onStop = undefined;\\r\\n                this._connectionPromise = undefined;\\r\\n                this._resolvedConnection = undefined;\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n    cleanUp(channel = true, diagnostics = true) {\\r\\n        if (this._listeners) {\\r\\n            this._listeners.forEach(listener => listener.dispose());\\r\\n            this._listeners = undefined;\\r\\n        }\\r\\n        if (this._providers) {\\r\\n            this._providers.forEach(provider => provider.dispose());\\r\\n            this._providers = undefined;\\r\\n        }\\r\\n        if (this._syncedDocuments) {\\r\\n            this._syncedDocuments.clear();\\r\\n        }\\r\\n        for (let handler of this._dynamicFeatures.values()) {\\r\\n            handler.dispose();\\r\\n        }\\r\\n        if (channel) {\\r\\n            this.cleanUpChannel();\\r\\n        }\\r\\n        if (diagnostics && this._diagnostics) {\\r\\n            this._diagnostics.dispose();\\r\\n            this._diagnostics = undefined;\\r\\n        }\\r\\n    }\\r\\n    cleanUpChannel() {\\r\\n        if (this._outputChannel && this._disposeOutputChannel) {\\r\\n            this._outputChannel.dispose();\\r\\n            this._outputChannel = undefined;\\r\\n        }\\r\\n    }\\r\\n    notifyFileEvent(event) {\\r\\n        var _a;\\r\\n        const client = this;\\r\\n        function didChangeWatchedFile(event) {\\r\\n            client._fileEvents.push(event);\\r\\n            client._fileEventDelayer.trigger(() => {\\r\\n                client.onReady().then(() => {\\r\\n                    client.resolveConnection().then(connection => {\\r\\n                        if (client.isConnectionActive()) {\\r\\n                            client.forceDocumentSync();\\r\\n                            connection.didChangeWatchedFiles({ changes: client._fileEvents });\\r\\n                        }\\r\\n                        client._fileEvents = [];\\r\\n                    });\\r\\n                }, (error) => {\\r\\n                    client.error(`Notify file events failed.`, error);\\r\\n                });\\r\\n            });\\r\\n        }\\r\\n        const workSpaceMiddleware = (_a = this.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\\r\\n        (workSpaceMiddleware === null || workSpaceMiddleware === void 0 ? void 0 : workSpaceMiddleware.didChangeWatchedFile) ? workSpaceMiddleware.didChangeWatchedFile(event, didChangeWatchedFile) : didChangeWatchedFile(event);\\r\\n    }\\r\\n    forceDocumentSync() {\\r\\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\\r\\n    }\\r\\n    handleDiagnostics(params) {\\r\\n        if (!this._diagnostics) {\\r\\n            return;\\r\\n        }\\r\\n        let uri = this._p2c.asUri(params.uri);\\r\\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\\r\\n        let middleware = this.clientOptions.middleware;\\r\\n        if (middleware.handleDiagnostics) {\\r\\n            middleware.handleDiagnostics(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\\r\\n        }\\r\\n        else {\\r\\n            this.setDiagnostics(uri, diagnostics);\\r\\n        }\\r\\n    }\\r\\n    setDiagnostics(uri, diagnostics) {\\r\\n        if (!this._diagnostics) {\\r\\n            return;\\r\\n        }\\r\\n        this._diagnostics.set(uri, diagnostics);\\r\\n    }\\r\\n    createConnection() {\\r\\n        let errorHandler = (error, message, count) => {\\r\\n            this.handleConnectionError(error, message, count);\\r\\n        };\\r\\n        let closeHandler = () => {\\r\\n            this.handleConnectionClosed();\\r\\n        };\\r\\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\\r\\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\\r\\n        });\\r\\n    }\\r\\n    handleConnectionClosed() {\\r\\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\\r\\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\\r\\n            return;\\r\\n        }\\r\\n        try {\\r\\n            if (this._resolvedConnection) {\\r\\n                this._resolvedConnection.dispose();\\r\\n            }\\r\\n        }\\r\\n        catch (error) {\\r\\n            // Disposing a connection could fail if error cases.\\r\\n        }\\r\\n        let action = CloseAction.DoNotRestart;\\r\\n        try {\\r\\n            action = this._clientOptions.errorHandler.closed();\\r\\n        }\\r\\n        catch (error) {\\r\\n            // Ignore errors coming from the error handler.\\r\\n        }\\r\\n        this._connectionPromise = undefined;\\r\\n        this._resolvedConnection = undefined;\\r\\n        if (action === CloseAction.DoNotRestart) {\\r\\n            this.error('Connection to server got closed. Server will not be restarted.');\\r\\n            this.state = ClientState.Stopped;\\r\\n            this.cleanUp(false, true);\\r\\n        }\\r\\n        else if (action === CloseAction.Restart) {\\r\\n            this.info('Connection to server got closed. Server will restart.');\\r\\n            this.cleanUp(false, false);\\r\\n            this.state = ClientState.Initial;\\r\\n            this.start();\\r\\n        }\\r\\n    }\\r\\n    handleConnectionError(error, message, count) {\\r\\n        let action = this._clientOptions.errorHandler.error(error, message, count);\\r\\n        if (action === ErrorAction.Shutdown) {\\r\\n            this.error('Connection to server is erroring. Shutting down server.');\\r\\n            this.stop();\\r\\n        }\\r\\n    }\\r\\n    hookConfigurationChanged(connection) {\\r\\n        vscode_1.workspace.onDidChangeConfiguration(() => {\\r\\n            this.refreshTrace(connection, true);\\r\\n        });\\r\\n    }\\r\\n    refreshTrace(connection, sendNotification = false) {\\r\\n        let config = vscode_1.workspace.getConfiguration(this._id);\\r\\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\\r\\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\\r\\n        if (config) {\\r\\n            const traceConfig = config.get('trace.server', 'off');\\r\\n            if (typeof traceConfig === 'string') {\\r\\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\\r\\n            }\\r\\n            else {\\r\\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\\r\\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\\r\\n            }\\r\\n        }\\r\\n        this._trace = trace;\\r\\n        this._traceFormat = traceFormat;\\r\\n        connection.trace(this._trace, this._tracer, {\\r\\n            sendNotification,\\r\\n            traceFormat: this._traceFormat\\r\\n        });\\r\\n    }\\r\\n    hookFileEvents(_connection) {\\r\\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\\r\\n        if (!fileEvents) {\\r\\n            return;\\r\\n        }\\r\\n        let watchers;\\r\\n        if (Is.array(fileEvents)) {\\r\\n            watchers = fileEvents;\\r\\n        }\\r\\n        else {\\r\\n            watchers = [fileEvents];\\r\\n        }\\r\\n        if (!watchers) {\\r\\n            return;\\r\\n        }\\r\\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\\r\\n    }\\r\\n    registerFeatures(features) {\\r\\n        for (let feature of features) {\\r\\n            this.registerFeature(feature);\\r\\n        }\\r\\n    }\\r\\n    registerFeature(feature) {\\r\\n        this._features.push(feature);\\r\\n        if (DynamicFeature.is(feature)) {\\r\\n            let messages = feature.messages;\\r\\n            if (Array.isArray(messages)) {\\r\\n                for (let message of messages) {\\r\\n                    this._method2Message.set(message.method, message);\\r\\n                    this._dynamicFeatures.set(message.method, feature);\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                this._method2Message.set(messages.method, messages);\\r\\n                this._dynamicFeatures.set(messages.method, feature);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    getFeature(request) {\\r\\n        return this._dynamicFeatures.get(request);\\r\\n    }\\r\\n    registerBuiltinFeatures() {\\r\\n        this.registerFeature(new ConfigurationFeature(this));\\r\\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\\r\\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\\r\\n        this.registerFeature(new WillSaveFeature(this));\\r\\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\\r\\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\\r\\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\\r\\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\\r\\n        this.registerFeature(new CompletionItemFeature(this));\\r\\n        this.registerFeature(new HoverFeature(this));\\r\\n        this.registerFeature(new SignatureHelpFeature(this));\\r\\n        this.registerFeature(new DefinitionFeature(this));\\r\\n        this.registerFeature(new ReferencesFeature(this));\\r\\n        this.registerFeature(new DocumentHighlightFeature(this));\\r\\n        this.registerFeature(new DocumentSymbolFeature(this));\\r\\n        this.registerFeature(new WorkspaceSymbolFeature(this));\\r\\n        this.registerFeature(new CodeActionFeature(this));\\r\\n        this.registerFeature(new CodeLensFeature(this));\\r\\n        this.registerFeature(new DocumentFormattingFeature(this));\\r\\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\\r\\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\\r\\n        this.registerFeature(new RenameFeature(this));\\r\\n        this.registerFeature(new DocumentLinkFeature(this));\\r\\n        this.registerFeature(new ExecuteCommandFeature(this));\\r\\n    }\\r\\n    fillInitializeParams(params) {\\r\\n        for (let feature of this._features) {\\r\\n            if (Is.func(feature.fillInitializeParams)) {\\r\\n                feature.fillInitializeParams(params);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    computeClientCapabilities() {\\r\\n        let result = {};\\r\\n        ensure(result, 'workspace').applyEdit = true;\\r\\n        let workspaceEdit = ensure(ensure(result, 'workspace'), 'workspaceEdit');\\r\\n        workspaceEdit.documentChanges = true;\\r\\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\\r\\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\\r\\n        let diagnostics = ensure(ensure(result, 'textDocument'), 'publishDiagnostics');\\r\\n        diagnostics.relatedInformation = true;\\r\\n        diagnostics.versionSupport = false;\\r\\n        diagnostics.tagSupport = { valueSet: [vscode_languageserver_protocol_1.DiagnosticTag.Unnecessary, vscode_languageserver_protocol_1.DiagnosticTag.Deprecated] };\\r\\n        for (let feature of this._features) {\\r\\n            feature.fillClientCapabilities(result);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    initializeFeatures(_connection) {\\r\\n        let documentSelector = this._clientOptions.documentSelector;\\r\\n        for (let feature of this._features) {\\r\\n            feature.initialize(this._capabilities, documentSelector);\\r\\n        }\\r\\n    }\\r\\n    handleRegistrationRequest(params) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            for (let registration of params.registrations) {\\r\\n                const feature = this._dynamicFeatures.get(registration.method);\\r\\n                if (!feature) {\\r\\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\\r\\n                    return;\\r\\n                }\\r\\n                const options = registration.registerOptions || {};\\r\\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\\r\\n                const data = {\\r\\n                    id: registration.id,\\r\\n                    registerOptions: options\\r\\n                };\\r\\n                feature.register(this._method2Message.get(registration.method), data);\\r\\n            }\\r\\n            resolve();\\r\\n        });\\r\\n    }\\r\\n    handleUnregistrationRequest(params) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            for (let unregistration of params.unregisterations) {\\r\\n                const feature = this._dynamicFeatures.get(unregistration.method);\\r\\n                if (!feature) {\\r\\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\\r\\n                    return;\\r\\n                }\\r\\n                feature.unregister(unregistration.id);\\r\\n            }\\r\\n            resolve();\\r\\n        });\\r\\n    }\\r\\n    handleApplyWorkspaceEdit(params) {\\r\\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\\r\\n        // However doing it here adds some safety since the server can lag more behind then an extension.\\r\\n        let workspaceEdit = params.edit;\\r\\n        let openTextDocuments = new Map();\\r\\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\\r\\n        let versionMismatch = false;\\r\\n        if (workspaceEdit.documentChanges) {\\r\\n            for (const change of workspaceEdit.documentChanges) {\\r\\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\\r\\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\\r\\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\\r\\n                        versionMismatch = true;\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (versionMismatch) {\\r\\n            return Promise.resolve({ applied: false });\\r\\n        }\\r\\n        return Is.asPromise(vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; }));\\r\\n    }\\r\\n    logFailedRequest(type, error) {\\r\\n        // If we get a request cancel or a content modified don't log anything.\\r\\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && (error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled || error.code === vscode_languageserver_protocol_1.ErrorCodes.ContentModified)) {\\r\\n            return;\\r\\n        }\\r\\n        this.error(`Request ${type.method} failed.`, error);\\r\\n    }\\r\\n}\\r\\nexports.BaseLanguageClient = BaseLanguageClient;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n/// <reference path=\\\"../typings/thenable.d.ts\\\" />\\r\\n'use strict';\\r\\nfunction __export(m) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst Is = require(\\\"./is\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\nexports.RequestType = messages_1.RequestType;\\r\\nexports.RequestType0 = messages_1.RequestType0;\\r\\nexports.RequestType1 = messages_1.RequestType1;\\r\\nexports.RequestType2 = messages_1.RequestType2;\\r\\nexports.RequestType3 = messages_1.RequestType3;\\r\\nexports.RequestType4 = messages_1.RequestType4;\\r\\nexports.RequestType5 = messages_1.RequestType5;\\r\\nexports.RequestType6 = messages_1.RequestType6;\\r\\nexports.RequestType7 = messages_1.RequestType7;\\r\\nexports.RequestType8 = messages_1.RequestType8;\\r\\nexports.RequestType9 = messages_1.RequestType9;\\r\\nexports.ResponseError = messages_1.ResponseError;\\r\\nexports.ErrorCodes = messages_1.ErrorCodes;\\r\\nexports.NotificationType = messages_1.NotificationType;\\r\\nexports.NotificationType0 = messages_1.NotificationType0;\\r\\nexports.NotificationType1 = messages_1.NotificationType1;\\r\\nexports.NotificationType2 = messages_1.NotificationType2;\\r\\nexports.NotificationType3 = messages_1.NotificationType3;\\r\\nexports.NotificationType4 = messages_1.NotificationType4;\\r\\nexports.NotificationType5 = messages_1.NotificationType5;\\r\\nexports.NotificationType6 = messages_1.NotificationType6;\\r\\nexports.NotificationType7 = messages_1.NotificationType7;\\r\\nexports.NotificationType8 = messages_1.NotificationType8;\\r\\nexports.NotificationType9 = messages_1.NotificationType9;\\r\\nconst messageReader_1 = require(\\\"./messageReader\\\");\\r\\nexports.MessageReader = messageReader_1.MessageReader;\\r\\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\\r\\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\\r\\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\\r\\nconst messageWriter_1 = require(\\\"./messageWriter\\\");\\r\\nexports.MessageWriter = messageWriter_1.MessageWriter;\\r\\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\\r\\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\\r\\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\\r\\nconst events_1 = require(\\\"./events\\\");\\r\\nexports.Disposable = events_1.Disposable;\\r\\nexports.Event = events_1.Event;\\r\\nexports.Emitter = events_1.Emitter;\\r\\nconst cancellation_1 = require(\\\"./cancellation\\\");\\r\\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\\r\\nexports.CancellationToken = cancellation_1.CancellationToken;\\r\\nconst linkedMap_1 = require(\\\"./linkedMap\\\");\\r\\n__export(require(\\\"./pipeSupport\\\"));\\r\\n__export(require(\\\"./socketSupport\\\"));\\r\\nvar CancelNotification;\\r\\n(function (CancelNotification) {\\r\\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\\r\\n})(CancelNotification || (CancelNotification = {}));\\r\\nvar ProgressNotification;\\r\\n(function (ProgressNotification) {\\r\\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\\r\\n})(ProgressNotification || (ProgressNotification = {}));\\r\\nclass ProgressType {\\r\\n    constructor() {\\r\\n    }\\r\\n}\\r\\nexports.ProgressType = ProgressType;\\r\\nexports.NullLogger = Object.freeze({\\r\\n    error: () => { },\\r\\n    warn: () => { },\\r\\n    info: () => { },\\r\\n    log: () => { }\\r\\n});\\r\\nvar Trace;\\r\\n(function (Trace) {\\r\\n    Trace[Trace[\\\"Off\\\"] = 0] = \\\"Off\\\";\\r\\n    Trace[Trace[\\\"Messages\\\"] = 1] = \\\"Messages\\\";\\r\\n    Trace[Trace[\\\"Verbose\\\"] = 2] = \\\"Verbose\\\";\\r\\n})(Trace = exports.Trace || (exports.Trace = {}));\\r\\n(function (Trace) {\\r\\n    function fromString(value) {\\r\\n        if (!Is.string(value)) {\\r\\n            return Trace.Off;\\r\\n        }\\r\\n        value = value.toLowerCase();\\r\\n        switch (value) {\\r\\n            case 'off':\\r\\n                return Trace.Off;\\r\\n            case 'messages':\\r\\n                return Trace.Messages;\\r\\n            case 'verbose':\\r\\n                return Trace.Verbose;\\r\\n            default:\\r\\n                return Trace.Off;\\r\\n        }\\r\\n    }\\r\\n    Trace.fromString = fromString;\\r\\n    function toString(value) {\\r\\n        switch (value) {\\r\\n            case Trace.Off:\\r\\n                return 'off';\\r\\n            case Trace.Messages:\\r\\n                return 'messages';\\r\\n            case Trace.Verbose:\\r\\n                return 'verbose';\\r\\n            default:\\r\\n                return 'off';\\r\\n        }\\r\\n    }\\r\\n    Trace.toString = toString;\\r\\n})(Trace = exports.Trace || (exports.Trace = {}));\\r\\nvar TraceFormat;\\r\\n(function (TraceFormat) {\\r\\n    TraceFormat[\\\"Text\\\"] = \\\"text\\\";\\r\\n    TraceFormat[\\\"JSON\\\"] = \\\"json\\\";\\r\\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\\r\\n(function (TraceFormat) {\\r\\n    function fromString(value) {\\r\\n        value = value.toLowerCase();\\r\\n        if (value === 'json') {\\r\\n            return TraceFormat.JSON;\\r\\n        }\\r\\n        else {\\r\\n            return TraceFormat.Text;\\r\\n        }\\r\\n    }\\r\\n    TraceFormat.fromString = fromString;\\r\\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\\r\\nvar SetTraceNotification;\\r\\n(function (SetTraceNotification) {\\r\\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\\r\\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\\r\\nvar LogTraceNotification;\\r\\n(function (LogTraceNotification) {\\r\\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\\r\\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\\r\\nvar ConnectionErrors;\\r\\n(function (ConnectionErrors) {\\r\\n    /**\\r\\n     * The connection is closed.\\r\\n     */\\r\\n    ConnectionErrors[ConnectionErrors[\\\"Closed\\\"] = 1] = \\\"Closed\\\";\\r\\n    /**\\r\\n     * The connection got disposed.\\r\\n     */\\r\\n    ConnectionErrors[ConnectionErrors[\\\"Disposed\\\"] = 2] = \\\"Disposed\\\";\\r\\n    /**\\r\\n     * The connection is already in listening mode.\\r\\n     */\\r\\n    ConnectionErrors[ConnectionErrors[\\\"AlreadyListening\\\"] = 3] = \\\"AlreadyListening\\\";\\r\\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\\r\\nclass ConnectionError extends Error {\\r\\n    constructor(code, message) {\\r\\n        super(message);\\r\\n        this.code = code;\\r\\n        Object.setPrototypeOf(this, ConnectionError.prototype);\\r\\n    }\\r\\n}\\r\\nexports.ConnectionError = ConnectionError;\\r\\nvar ConnectionStrategy;\\r\\n(function (ConnectionStrategy) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && Is.func(candidate.cancelUndispatched);\\r\\n    }\\r\\n    ConnectionStrategy.is = is;\\r\\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\\r\\nvar ConnectionState;\\r\\n(function (ConnectionState) {\\r\\n    ConnectionState[ConnectionState[\\\"New\\\"] = 1] = \\\"New\\\";\\r\\n    ConnectionState[ConnectionState[\\\"Listening\\\"] = 2] = \\\"Listening\\\";\\r\\n    ConnectionState[ConnectionState[\\\"Closed\\\"] = 3] = \\\"Closed\\\";\\r\\n    ConnectionState[ConnectionState[\\\"Disposed\\\"] = 4] = \\\"Disposed\\\";\\r\\n})(ConnectionState || (ConnectionState = {}));\\r\\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\\r\\n    let sequenceNumber = 0;\\r\\n    let notificationSquenceNumber = 0;\\r\\n    let unknownResponseSquenceNumber = 0;\\r\\n    const version = '2.0';\\r\\n    let starRequestHandler = undefined;\\r\\n    let requestHandlers = Object.create(null);\\r\\n    let starNotificationHandler = undefined;\\r\\n    let notificationHandlers = Object.create(null);\\r\\n    let progressHandlers = new Map();\\r\\n    let timer;\\r\\n    let messageQueue = new linkedMap_1.LinkedMap();\\r\\n    let responsePromises = Object.create(null);\\r\\n    let requestTokens = Object.create(null);\\r\\n    let trace = Trace.Off;\\r\\n    let traceFormat = TraceFormat.Text;\\r\\n    let tracer;\\r\\n    let state = ConnectionState.New;\\r\\n    let errorEmitter = new events_1.Emitter();\\r\\n    let closeEmitter = new events_1.Emitter();\\r\\n    let unhandledNotificationEmitter = new events_1.Emitter();\\r\\n    let unhandledProgressEmitter = new events_1.Emitter();\\r\\n    let disposeEmitter = new events_1.Emitter();\\r\\n    function createRequestQueueKey(id) {\\r\\n        return 'req-' + id.toString();\\r\\n    }\\r\\n    function createResponseQueueKey(id) {\\r\\n        if (id === null) {\\r\\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\\r\\n        }\\r\\n        else {\\r\\n            return 'res-' + id.toString();\\r\\n        }\\r\\n    }\\r\\n    function createNotificationQueueKey() {\\r\\n        return 'not-' + (++notificationSquenceNumber).toString();\\r\\n    }\\r\\n    function addMessageToQueue(queue, message) {\\r\\n        if (messages_1.isRequestMessage(message)) {\\r\\n            queue.set(createRequestQueueKey(message.id), message);\\r\\n        }\\r\\n        else if (messages_1.isResponseMessage(message)) {\\r\\n            queue.set(createResponseQueueKey(message.id), message);\\r\\n        }\\r\\n        else {\\r\\n            queue.set(createNotificationQueueKey(), message);\\r\\n        }\\r\\n    }\\r\\n    function cancelUndispatched(_message) {\\r\\n        return undefined;\\r\\n    }\\r\\n    function isListening() {\\r\\n        return state === ConnectionState.Listening;\\r\\n    }\\r\\n    function isClosed() {\\r\\n        return state === ConnectionState.Closed;\\r\\n    }\\r\\n    function isDisposed() {\\r\\n        return state === ConnectionState.Disposed;\\r\\n    }\\r\\n    function closeHandler() {\\r\\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\\r\\n            state = ConnectionState.Closed;\\r\\n            closeEmitter.fire(undefined);\\r\\n        }\\r\\n        // If the connection is disposed don't sent close events.\\r\\n    }\\r\\n    function readErrorHandler(error) {\\r\\n        errorEmitter.fire([error, undefined, undefined]);\\r\\n    }\\r\\n    function writeErrorHandler(data) {\\r\\n        errorEmitter.fire(data);\\r\\n    }\\r\\n    messageReader.onClose(closeHandler);\\r\\n    messageReader.onError(readErrorHandler);\\r\\n    messageWriter.onClose(closeHandler);\\r\\n    messageWriter.onError(writeErrorHandler);\\r\\n    function triggerMessageQueue() {\\r\\n        if (timer || messageQueue.size === 0) {\\r\\n            return;\\r\\n        }\\r\\n        timer = setImmediate(() => {\\r\\n            timer = undefined;\\r\\n            processMessageQueue();\\r\\n        });\\r\\n    }\\r\\n    function processMessageQueue() {\\r\\n        if (messageQueue.size === 0) {\\r\\n            return;\\r\\n        }\\r\\n        let message = messageQueue.shift();\\r\\n        try {\\r\\n            if (messages_1.isRequestMessage(message)) {\\r\\n                handleRequest(message);\\r\\n            }\\r\\n            else if (messages_1.isNotificationMessage(message)) {\\r\\n                handleNotification(message);\\r\\n            }\\r\\n            else if (messages_1.isResponseMessage(message)) {\\r\\n                handleResponse(message);\\r\\n            }\\r\\n            else {\\r\\n                handleInvalidMessage(message);\\r\\n            }\\r\\n        }\\r\\n        finally {\\r\\n            triggerMessageQueue();\\r\\n        }\\r\\n    }\\r\\n    let callback = (message) => {\\r\\n        try {\\r\\n            // We have received a cancellation message. Check if the message is still in the queue\\r\\n            // and cancel it if allowed to do so.\\r\\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\\r\\n                let key = createRequestQueueKey(message.params.id);\\r\\n                let toCancel = messageQueue.get(key);\\r\\n                if (messages_1.isRequestMessage(toCancel)) {\\r\\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\\r\\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\\r\\n                        messageQueue.delete(key);\\r\\n                        response.id = toCancel.id;\\r\\n                        traceSendingResponse(response, message.method, Date.now());\\r\\n                        messageWriter.write(response);\\r\\n                        return;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            addMessageToQueue(messageQueue, message);\\r\\n        }\\r\\n        finally {\\r\\n            triggerMessageQueue();\\r\\n        }\\r\\n    };\\r\\n    function handleRequest(requestMessage) {\\r\\n        if (isDisposed()) {\\r\\n            // we return here silently since we fired an event when the\\r\\n            // connection got disposed.\\r\\n            return;\\r\\n        }\\r\\n        function reply(resultOrError, method, startTime) {\\r\\n            let message = {\\r\\n                jsonrpc: version,\\r\\n                id: requestMessage.id\\r\\n            };\\r\\n            if (resultOrError instanceof messages_1.ResponseError) {\\r\\n                message.error = resultOrError.toJson();\\r\\n            }\\r\\n            else {\\r\\n                message.result = resultOrError === void 0 ? null : resultOrError;\\r\\n            }\\r\\n            traceSendingResponse(message, method, startTime);\\r\\n            messageWriter.write(message);\\r\\n        }\\r\\n        function replyError(error, method, startTime) {\\r\\n            let message = {\\r\\n                jsonrpc: version,\\r\\n                id: requestMessage.id,\\r\\n                error: error.toJson()\\r\\n            };\\r\\n            traceSendingResponse(message, method, startTime);\\r\\n            messageWriter.write(message);\\r\\n        }\\r\\n        function replySuccess(result, method, startTime) {\\r\\n            // The JSON RPC defines that a response must either have a result or an error\\r\\n            // So we can't treat undefined as a valid response result.\\r\\n            if (result === void 0) {\\r\\n                result = null;\\r\\n            }\\r\\n            let message = {\\r\\n                jsonrpc: version,\\r\\n                id: requestMessage.id,\\r\\n                result: result\\r\\n            };\\r\\n            traceSendingResponse(message, method, startTime);\\r\\n            messageWriter.write(message);\\r\\n        }\\r\\n        traceReceivedRequest(requestMessage);\\r\\n        let element = requestHandlers[requestMessage.method];\\r\\n        let type;\\r\\n        let requestHandler;\\r\\n        if (element) {\\r\\n            type = element.type;\\r\\n            requestHandler = element.handler;\\r\\n        }\\r\\n        let startTime = Date.now();\\r\\n        if (requestHandler || starRequestHandler) {\\r\\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\\r\\n            let tokenKey = String(requestMessage.id);\\r\\n            requestTokens[tokenKey] = cancellationSource;\\r\\n            try {\\r\\n                let handlerResult;\\r\\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\\r\\n                    handlerResult = requestHandler\\r\\n                        ? requestHandler(cancellationSource.token)\\r\\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\\r\\n                }\\r\\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\\r\\n                    handlerResult = requestHandler\\r\\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\\r\\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\\r\\n                }\\r\\n                else {\\r\\n                    handlerResult = requestHandler\\r\\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\\r\\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\\r\\n                }\\r\\n                let promise = handlerResult;\\r\\n                if (!handlerResult) {\\r\\n                    delete requestTokens[tokenKey];\\r\\n                    replySuccess(handlerResult, requestMessage.method, startTime);\\r\\n                }\\r\\n                else if (promise.then) {\\r\\n                    promise.then((resultOrError) => {\\r\\n                        delete requestTokens[tokenKey];\\r\\n                        reply(resultOrError, requestMessage.method, startTime);\\r\\n                    }, error => {\\r\\n                        delete requestTokens[tokenKey];\\r\\n                        if (error instanceof messages_1.ResponseError) {\\r\\n                            replyError(error, requestMessage.method, startTime);\\r\\n                        }\\r\\n                        else if (error && Is.string(error.message)) {\\r\\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\\r\\n                        }\\r\\n                        else {\\r\\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\\r\\n                        }\\r\\n                    });\\r\\n                }\\r\\n                else {\\r\\n                    delete requestTokens[tokenKey];\\r\\n                    reply(handlerResult, requestMessage.method, startTime);\\r\\n                }\\r\\n            }\\r\\n            catch (error) {\\r\\n                delete requestTokens[tokenKey];\\r\\n                if (error instanceof messages_1.ResponseError) {\\r\\n                    reply(error, requestMessage.method, startTime);\\r\\n                }\\r\\n                else if (error && Is.string(error.message)) {\\r\\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\\r\\n                }\\r\\n                else {\\r\\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\\r\\n        }\\r\\n    }\\r\\n    function handleResponse(responseMessage) {\\r\\n        if (isDisposed()) {\\r\\n            // See handle request.\\r\\n            return;\\r\\n        }\\r\\n        if (responseMessage.id === null) {\\r\\n            if (responseMessage.error) {\\r\\n                logger.error(`Received response message without id: Error is: \\\\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\\r\\n            }\\r\\n            else {\\r\\n                logger.error(`Received response message without id. No further error information provided.`);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            let key = String(responseMessage.id);\\r\\n            let responsePromise = responsePromises[key];\\r\\n            traceReceivedResponse(responseMessage, responsePromise);\\r\\n            if (responsePromise) {\\r\\n                delete responsePromises[key];\\r\\n                try {\\r\\n                    if (responseMessage.error) {\\r\\n                        let error = responseMessage.error;\\r\\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\\r\\n                    }\\r\\n                    else if (responseMessage.result !== void 0) {\\r\\n                        responsePromise.resolve(responseMessage.result);\\r\\n                    }\\r\\n                    else {\\r\\n                        throw new Error('Should never happen.');\\r\\n                    }\\r\\n                }\\r\\n                catch (error) {\\r\\n                    if (error.message) {\\r\\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\\r\\n                    }\\r\\n                    else {\\r\\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    function handleNotification(message) {\\r\\n        if (isDisposed()) {\\r\\n            // See handle request.\\r\\n            return;\\r\\n        }\\r\\n        let type = undefined;\\r\\n        let notificationHandler;\\r\\n        if (message.method === CancelNotification.type.method) {\\r\\n            notificationHandler = (params) => {\\r\\n                let id = params.id;\\r\\n                let source = requestTokens[String(id)];\\r\\n                if (source) {\\r\\n                    source.cancel();\\r\\n                }\\r\\n            };\\r\\n        }\\r\\n        else {\\r\\n            let element = notificationHandlers[message.method];\\r\\n            if (element) {\\r\\n                notificationHandler = element.handler;\\r\\n                type = element.type;\\r\\n            }\\r\\n        }\\r\\n        if (notificationHandler || starNotificationHandler) {\\r\\n            try {\\r\\n                traceReceivedNotification(message);\\r\\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\\r\\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\\r\\n                }\\r\\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\\r\\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\\r\\n                }\\r\\n                else {\\r\\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\\r\\n                }\\r\\n            }\\r\\n            catch (error) {\\r\\n                if (error.message) {\\r\\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\\r\\n                }\\r\\n                else {\\r\\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            unhandledNotificationEmitter.fire(message);\\r\\n        }\\r\\n    }\\r\\n    function handleInvalidMessage(message) {\\r\\n        if (!message) {\\r\\n            logger.error('Received empty message.');\\r\\n            return;\\r\\n        }\\r\\n        logger.error(`Received message which is neither a response nor a notification message:\\\\n${JSON.stringify(message, null, 4)}`);\\r\\n        // Test whether we find an id to reject the promise\\r\\n        let responseMessage = message;\\r\\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\\r\\n            let key = String(responseMessage.id);\\r\\n            let responseHandler = responsePromises[key];\\r\\n            if (responseHandler) {\\r\\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    function traceSendingRequest(message) {\\r\\n        if (trace === Trace.Off || !tracer) {\\r\\n            return;\\r\\n        }\\r\\n        if (traceFormat === TraceFormat.Text) {\\r\\n            let data = undefined;\\r\\n            if (trace === Trace.Verbose && message.params) {\\r\\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\\\n\\\\n`;\\r\\n            }\\r\\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\\r\\n        }\\r\\n        else {\\r\\n            logLSPMessage('send-request', message);\\r\\n        }\\r\\n    }\\r\\n    function traceSendingNotification(message) {\\r\\n        if (trace === Trace.Off || !tracer) {\\r\\n            return;\\r\\n        }\\r\\n        if (traceFormat === TraceFormat.Text) {\\r\\n            let data = undefined;\\r\\n            if (trace === Trace.Verbose) {\\r\\n                if (message.params) {\\r\\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\\\n\\\\n`;\\r\\n                }\\r\\n                else {\\r\\n                    data = 'No parameters provided.\\\\n\\\\n';\\r\\n                }\\r\\n            }\\r\\n            tracer.log(`Sending notification '${message.method}'.`, data);\\r\\n        }\\r\\n        else {\\r\\n            logLSPMessage('send-notification', message);\\r\\n        }\\r\\n    }\\r\\n    function traceSendingResponse(message, method, startTime) {\\r\\n        if (trace === Trace.Off || !tracer) {\\r\\n            return;\\r\\n        }\\r\\n        if (traceFormat === TraceFormat.Text) {\\r\\n            let data = undefined;\\r\\n            if (trace === Trace.Verbose) {\\r\\n                if (message.error && message.error.data) {\\r\\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\\\n\\\\n`;\\r\\n                }\\r\\n                else {\\r\\n                    if (message.result) {\\r\\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\\\n\\\\n`;\\r\\n                    }\\r\\n                    else if (message.error === void 0) {\\r\\n                        data = 'No result returned.\\\\n\\\\n';\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\\r\\n        }\\r\\n        else {\\r\\n            logLSPMessage('send-response', message);\\r\\n        }\\r\\n    }\\r\\n    function traceReceivedRequest(message) {\\r\\n        if (trace === Trace.Off || !tracer) {\\r\\n            return;\\r\\n        }\\r\\n        if (traceFormat === TraceFormat.Text) {\\r\\n            let data = undefined;\\r\\n            if (trace === Trace.Verbose && message.params) {\\r\\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\\\n\\\\n`;\\r\\n            }\\r\\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\\r\\n        }\\r\\n        else {\\r\\n            logLSPMessage('receive-request', message);\\r\\n        }\\r\\n    }\\r\\n    function traceReceivedNotification(message) {\\r\\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\\r\\n            return;\\r\\n        }\\r\\n        if (traceFormat === TraceFormat.Text) {\\r\\n            let data = undefined;\\r\\n            if (trace === Trace.Verbose) {\\r\\n                if (message.params) {\\r\\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\\\n\\\\n`;\\r\\n                }\\r\\n                else {\\r\\n                    data = 'No parameters provided.\\\\n\\\\n';\\r\\n                }\\r\\n            }\\r\\n            tracer.log(`Received notification '${message.method}'.`, data);\\r\\n        }\\r\\n        else {\\r\\n            logLSPMessage('receive-notification', message);\\r\\n        }\\r\\n    }\\r\\n    function traceReceivedResponse(message, responsePromise) {\\r\\n        if (trace === Trace.Off || !tracer) {\\r\\n            return;\\r\\n        }\\r\\n        if (traceFormat === TraceFormat.Text) {\\r\\n            let data = undefined;\\r\\n            if (trace === Trace.Verbose) {\\r\\n                if (message.error && message.error.data) {\\r\\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\\\n\\\\n`;\\r\\n                }\\r\\n                else {\\r\\n                    if (message.result) {\\r\\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\\\n\\\\n`;\\r\\n                    }\\r\\n                    else if (message.error === void 0) {\\r\\n                        data = 'No result returned.\\\\n\\\\n';\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            if (responsePromise) {\\r\\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\\r\\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\\r\\n            }\\r\\n            else {\\r\\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            logLSPMessage('receive-response', message);\\r\\n        }\\r\\n    }\\r\\n    function logLSPMessage(type, message) {\\r\\n        if (!tracer || trace === Trace.Off) {\\r\\n            return;\\r\\n        }\\r\\n        const lspMessage = {\\r\\n            isLSPMessage: true,\\r\\n            type,\\r\\n            message,\\r\\n            timestamp: Date.now()\\r\\n        };\\r\\n        tracer.log(lspMessage);\\r\\n    }\\r\\n    function throwIfClosedOrDisposed() {\\r\\n        if (isClosed()) {\\r\\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\\r\\n        }\\r\\n        if (isDisposed()) {\\r\\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\\r\\n        }\\r\\n    }\\r\\n    function throwIfListening() {\\r\\n        if (isListening()) {\\r\\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\\r\\n        }\\r\\n    }\\r\\n    function throwIfNotListening() {\\r\\n        if (!isListening()) {\\r\\n            throw new Error('Call listen() first.');\\r\\n        }\\r\\n    }\\r\\n    function undefinedToNull(param) {\\r\\n        if (param === void 0) {\\r\\n            return null;\\r\\n        }\\r\\n        else {\\r\\n            return param;\\r\\n        }\\r\\n    }\\r\\n    function computeMessageParams(type, params) {\\r\\n        let result;\\r\\n        let numberOfParams = type.numberOfParams;\\r\\n        switch (numberOfParams) {\\r\\n            case 0:\\r\\n                result = null;\\r\\n                break;\\r\\n            case 1:\\r\\n                result = undefinedToNull(params[0]);\\r\\n                break;\\r\\n            default:\\r\\n                result = [];\\r\\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\\r\\n                    result.push(undefinedToNull(params[i]));\\r\\n                }\\r\\n                if (params.length < numberOfParams) {\\r\\n                    for (let i = params.length; i < numberOfParams; i++) {\\r\\n                        result.push(null);\\r\\n                    }\\r\\n                }\\r\\n                break;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    let connection = {\\r\\n        sendNotification: (type, ...params) => {\\r\\n            throwIfClosedOrDisposed();\\r\\n            let method;\\r\\n            let messageParams;\\r\\n            if (Is.string(type)) {\\r\\n                method = type;\\r\\n                switch (params.length) {\\r\\n                    case 0:\\r\\n                        messageParams = null;\\r\\n                        break;\\r\\n                    case 1:\\r\\n                        messageParams = params[0];\\r\\n                        break;\\r\\n                    default:\\r\\n                        messageParams = params;\\r\\n                        break;\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                method = type.method;\\r\\n                messageParams = computeMessageParams(type, params);\\r\\n            }\\r\\n            let notificationMessage = {\\r\\n                jsonrpc: version,\\r\\n                method: method,\\r\\n                params: messageParams\\r\\n            };\\r\\n            traceSendingNotification(notificationMessage);\\r\\n            messageWriter.write(notificationMessage);\\r\\n        },\\r\\n        onNotification: (type, handler) => {\\r\\n            throwIfClosedOrDisposed();\\r\\n            if (Is.func(type)) {\\r\\n                starNotificationHandler = type;\\r\\n            }\\r\\n            else if (handler) {\\r\\n                if (Is.string(type)) {\\r\\n                    notificationHandlers[type] = { type: undefined, handler };\\r\\n                }\\r\\n                else {\\r\\n                    notificationHandlers[type.method] = { type, handler };\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        onProgress: (_type, token, handler) => {\\r\\n            if (progressHandlers.has(token)) {\\r\\n                throw new Error(`Progress handler for token ${token} already registered`);\\r\\n            }\\r\\n            progressHandlers.set(token, handler);\\r\\n            return {\\r\\n                dispose: () => {\\r\\n                    progressHandlers.delete(token);\\r\\n                }\\r\\n            };\\r\\n        },\\r\\n        sendProgress: (_type, token, value) => {\\r\\n            connection.sendNotification(ProgressNotification.type, { token, value });\\r\\n        },\\r\\n        onUnhandledProgress: unhandledProgressEmitter.event,\\r\\n        sendRequest: (type, ...params) => {\\r\\n            throwIfClosedOrDisposed();\\r\\n            throwIfNotListening();\\r\\n            let method;\\r\\n            let messageParams;\\r\\n            let token = undefined;\\r\\n            if (Is.string(type)) {\\r\\n                method = type;\\r\\n                switch (params.length) {\\r\\n                    case 0:\\r\\n                        messageParams = null;\\r\\n                        break;\\r\\n                    case 1:\\r\\n                        // The cancellation token is optional so it can also be undefined.\\r\\n                        if (cancellation_1.CancellationToken.is(params[0])) {\\r\\n                            messageParams = null;\\r\\n                            token = params[0];\\r\\n                        }\\r\\n                        else {\\r\\n                            messageParams = undefinedToNull(params[0]);\\r\\n                        }\\r\\n                        break;\\r\\n                    default:\\r\\n                        const last = params.length - 1;\\r\\n                        if (cancellation_1.CancellationToken.is(params[last])) {\\r\\n                            token = params[last];\\r\\n                            if (params.length === 2) {\\r\\n                                messageParams = undefinedToNull(params[0]);\\r\\n                            }\\r\\n                            else {\\r\\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\\r\\n                            }\\r\\n                        }\\r\\n                        else {\\r\\n                            messageParams = params.map(value => undefinedToNull(value));\\r\\n                        }\\r\\n                        break;\\r\\n                }\\r\\n            }\\r\\n            else {\\r\\n                method = type.method;\\r\\n                messageParams = computeMessageParams(type, params);\\r\\n                let numberOfParams = type.numberOfParams;\\r\\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\\r\\n            }\\r\\n            let id = sequenceNumber++;\\r\\n            let result = new Promise((resolve, reject) => {\\r\\n                let requestMessage = {\\r\\n                    jsonrpc: version,\\r\\n                    id: id,\\r\\n                    method: method,\\r\\n                    params: messageParams\\r\\n                };\\r\\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\\r\\n                traceSendingRequest(requestMessage);\\r\\n                try {\\r\\n                    messageWriter.write(requestMessage);\\r\\n                }\\r\\n                catch (e) {\\r\\n                    // Writing the message failed. So we need to reject the promise.\\r\\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\\r\\n                    responsePromise = null;\\r\\n                }\\r\\n                if (responsePromise) {\\r\\n                    responsePromises[String(id)] = responsePromise;\\r\\n                }\\r\\n            });\\r\\n            if (token) {\\r\\n                token.onCancellationRequested(() => {\\r\\n                    connection.sendNotification(CancelNotification.type, { id });\\r\\n                });\\r\\n            }\\r\\n            return result;\\r\\n        },\\r\\n        onRequest: (type, handler) => {\\r\\n            throwIfClosedOrDisposed();\\r\\n            if (Is.func(type)) {\\r\\n                starRequestHandler = type;\\r\\n            }\\r\\n            else if (handler) {\\r\\n                if (Is.string(type)) {\\r\\n                    requestHandlers[type] = { type: undefined, handler };\\r\\n                }\\r\\n                else {\\r\\n                    requestHandlers[type.method] = { type, handler };\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\\r\\n            let _sendNotification = false;\\r\\n            let _traceFormat = TraceFormat.Text;\\r\\n            if (sendNotificationOrTraceOptions !== void 0) {\\r\\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\\r\\n                    _sendNotification = sendNotificationOrTraceOptions;\\r\\n                }\\r\\n                else {\\r\\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\\r\\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\\r\\n                }\\r\\n            }\\r\\n            trace = _value;\\r\\n            traceFormat = _traceFormat;\\r\\n            if (trace === Trace.Off) {\\r\\n                tracer = undefined;\\r\\n            }\\r\\n            else {\\r\\n                tracer = _tracer;\\r\\n            }\\r\\n            if (_sendNotification && !isClosed() && !isDisposed()) {\\r\\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\\r\\n            }\\r\\n        },\\r\\n        onError: errorEmitter.event,\\r\\n        onClose: closeEmitter.event,\\r\\n        onUnhandledNotification: unhandledNotificationEmitter.event,\\r\\n        onDispose: disposeEmitter.event,\\r\\n        dispose: () => {\\r\\n            if (isDisposed()) {\\r\\n                return;\\r\\n            }\\r\\n            state = ConnectionState.Disposed;\\r\\n            disposeEmitter.fire(undefined);\\r\\n            let error = new Error('Connection got disposed.');\\r\\n            Object.keys(responsePromises).forEach((key) => {\\r\\n                responsePromises[key].reject(error);\\r\\n            });\\r\\n            responsePromises = Object.create(null);\\r\\n            requestTokens = Object.create(null);\\r\\n            messageQueue = new linkedMap_1.LinkedMap();\\r\\n            // Test for backwards compatibility\\r\\n            if (Is.func(messageWriter.dispose)) {\\r\\n                messageWriter.dispose();\\r\\n            }\\r\\n            if (Is.func(messageReader.dispose)) {\\r\\n                messageReader.dispose();\\r\\n            }\\r\\n        },\\r\\n        listen: () => {\\r\\n            throwIfClosedOrDisposed();\\r\\n            throwIfListening();\\r\\n            state = ConnectionState.Listening;\\r\\n            messageReader.listen(callback);\\r\\n        },\\r\\n        inspect: () => {\\r\\n            // eslint-disable-next-line no-console\\r\\n            console.log('inspect');\\r\\n        }\\r\\n    };\\r\\n    connection.onNotification(LogTraceNotification.type, (params) => {\\r\\n        if (trace === Trace.Off || !tracer) {\\r\\n            return;\\r\\n        }\\r\\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\\r\\n    });\\r\\n    connection.onNotification(ProgressNotification.type, (params) => {\\r\\n        const handler = progressHandlers.get(params.token);\\r\\n        if (handler) {\\r\\n            handler(params.value);\\r\\n        }\\r\\n        else {\\r\\n            unhandledProgressEmitter.fire(params);\\r\\n        }\\r\\n    });\\r\\n    return connection;\\r\\n}\\r\\nfunction isMessageReader(value) {\\r\\n    return value.listen !== void 0 && value.read === void 0;\\r\\n}\\r\\nfunction isMessageWriter(value) {\\r\\n    return value.write !== void 0 && value.end === void 0;\\r\\n}\\r\\nfunction createMessageConnection(input, output, logger, strategy) {\\r\\n    if (!logger) {\\r\\n        logger = exports.NullLogger;\\r\\n    }\\r\\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\\r\\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\\r\\n    return _createMessageConnection(reader, writer, logger, strategy);\\r\\n}\\r\\nexports.createMessageConnection = createMessageConnection;\\r\\n\",\"module.exports = require(\\\"path\\\");\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nfunction boolean(value) {\\r\\n    return value === true || value === false;\\r\\n}\\r\\nexports.boolean = boolean;\\r\\nfunction string(value) {\\r\\n    return typeof value === 'string' || value instanceof String;\\r\\n}\\r\\nexports.string = string;\\r\\nfunction number(value) {\\r\\n    return typeof value === 'number' || value instanceof Number;\\r\\n}\\r\\nexports.number = number;\\r\\nfunction error(value) {\\r\\n    return value instanceof Error;\\r\\n}\\r\\nexports.error = error;\\r\\nfunction func(value) {\\r\\n    return typeof value === 'function';\\r\\n}\\r\\nexports.func = func;\\r\\nfunction array(value) {\\r\\n    return Array.isArray(value);\\r\\n}\\r\\nexports.array = array;\\r\\nfunction stringArray(value) {\\r\\n    return array(value) && value.every(elem => string(elem));\\r\\n}\\r\\nexports.stringArray = stringArray;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nfunction boolean(value) {\\r\\n    return value === true || value === false;\\r\\n}\\r\\nexports.boolean = boolean;\\r\\nfunction string(value) {\\r\\n    return typeof value === 'string' || value instanceof String;\\r\\n}\\r\\nexports.string = string;\\r\\nfunction number(value) {\\r\\n    return typeof value === 'number' || value instanceof Number;\\r\\n}\\r\\nexports.number = number;\\r\\nfunction error(value) {\\r\\n    return value instanceof Error;\\r\\n}\\r\\nexports.error = error;\\r\\nfunction func(value) {\\r\\n    return typeof value === 'function';\\r\\n}\\r\\nexports.func = func;\\r\\nfunction array(value) {\\r\\n    return Array.isArray(value);\\r\\n}\\r\\nexports.array = array;\\r\\nfunction stringArray(value) {\\r\\n    return array(value) && value.every(elem => string(elem));\\r\\n}\\r\\nexports.stringArray = stringArray;\\r\\nfunction typedArray(value, check) {\\r\\n    return Array.isArray(value) && value.every(check);\\r\\n}\\r\\nexports.typedArray = typedArray;\\r\\nfunction thenable(value) {\\r\\n    return value && func(value.then);\\r\\n}\\r\\nexports.thenable = thenable;\\r\\nfunction asPromise(value) {\\r\\n    if (value instanceof Promise) {\\r\\n        return value;\\r\\n    }\\r\\n    else if (thenable(value)) {\\r\\n        return new Promise((resolve, reject) => {\\r\\n            value.then((resolved) => resolve(resolved), (error) => reject(error));\\r\\n        });\\r\\n    }\\r\\n    else {\\r\\n        return Promise.resolve(value);\\r\\n    }\\r\\n}\\r\\nexports.asPromise = asPromise;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Disposable;\\r\\n(function (Disposable) {\\r\\n    function create(func) {\\r\\n        return {\\r\\n            dispose: func\\r\\n        };\\r\\n    }\\r\\n    Disposable.create = create;\\r\\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\\r\\nvar Event;\\r\\n(function (Event) {\\r\\n    const _disposable = { dispose() { } };\\r\\n    Event.None = function () { return _disposable; };\\r\\n})(Event = exports.Event || (exports.Event = {}));\\r\\nclass CallbackList {\\r\\n    add(callback, context = null, bucket) {\\r\\n        if (!this._callbacks) {\\r\\n            this._callbacks = [];\\r\\n            this._contexts = [];\\r\\n        }\\r\\n        this._callbacks.push(callback);\\r\\n        this._contexts.push(context);\\r\\n        if (Array.isArray(bucket)) {\\r\\n            bucket.push({ dispose: () => this.remove(callback, context) });\\r\\n        }\\r\\n    }\\r\\n    remove(callback, context = null) {\\r\\n        if (!this._callbacks) {\\r\\n            return;\\r\\n        }\\r\\n        var foundCallbackWithDifferentContext = false;\\r\\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\\r\\n            if (this._callbacks[i] === callback) {\\r\\n                if (this._contexts[i] === context) {\\r\\n                    // callback & context match => remove it\\r\\n                    this._callbacks.splice(i, 1);\\r\\n                    this._contexts.splice(i, 1);\\r\\n                    return;\\r\\n                }\\r\\n                else {\\r\\n                    foundCallbackWithDifferentContext = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (foundCallbackWithDifferentContext) {\\r\\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\\r\\n        }\\r\\n    }\\r\\n    invoke(...args) {\\r\\n        if (!this._callbacks) {\\r\\n            return [];\\r\\n        }\\r\\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\\r\\n        for (var i = 0, len = callbacks.length; i < len; i++) {\\r\\n            try {\\r\\n                ret.push(callbacks[i].apply(contexts[i], args));\\r\\n            }\\r\\n            catch (e) {\\r\\n                // eslint-disable-next-line no-console\\r\\n                console.error(e);\\r\\n            }\\r\\n        }\\r\\n        return ret;\\r\\n    }\\r\\n    isEmpty() {\\r\\n        return !this._callbacks || this._callbacks.length === 0;\\r\\n    }\\r\\n    dispose() {\\r\\n        this._callbacks = undefined;\\r\\n        this._contexts = undefined;\\r\\n    }\\r\\n}\\r\\nclass Emitter {\\r\\n    constructor(_options) {\\r\\n        this._options = _options;\\r\\n    }\\r\\n    /**\\r\\n     * For the public to allow to subscribe\\r\\n     * to events from this Emitter\\r\\n     */\\r\\n    get event() {\\r\\n        if (!this._event) {\\r\\n            this._event = (listener, thisArgs, disposables) => {\\r\\n                if (!this._callbacks) {\\r\\n                    this._callbacks = new CallbackList();\\r\\n                }\\r\\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\\r\\n                    this._options.onFirstListenerAdd(this);\\r\\n                }\\r\\n                this._callbacks.add(listener, thisArgs);\\r\\n                let result;\\r\\n                result = {\\r\\n                    dispose: () => {\\r\\n                        this._callbacks.remove(listener, thisArgs);\\r\\n                        result.dispose = Emitter._noop;\\r\\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\\r\\n                            this._options.onLastListenerRemove(this);\\r\\n                        }\\r\\n                    }\\r\\n                };\\r\\n                if (Array.isArray(disposables)) {\\r\\n                    disposables.push(result);\\r\\n                }\\r\\n                return result;\\r\\n            };\\r\\n        }\\r\\n        return this._event;\\r\\n    }\\r\\n    /**\\r\\n     * To be kept private to fire an event to\\r\\n     * subscribers\\r\\n     */\\r\\n    fire(event) {\\r\\n        if (this._callbacks) {\\r\\n            this._callbacks.invoke.call(this._callbacks, event);\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        if (this._callbacks) {\\r\\n            this._callbacks.dispose();\\r\\n            this._callbacks = undefined;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.Emitter = Emitter;\\r\\nEmitter._noop = function () { };\\r\\n\",\"module.exports = require(\\\"fs\\\");\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst events_1 = require(\\\"./events\\\");\\r\\nconst Is = require(\\\"./is\\\");\\r\\nlet DefaultSize = 8192;\\r\\nlet CR = Buffer.from('\\\\r', 'ascii')[0];\\r\\nlet LF = Buffer.from('\\\\n', 'ascii')[0];\\r\\nlet CRLF = '\\\\r\\\\n';\\r\\nclass MessageBuffer {\\r\\n    constructor(encoding = 'utf8') {\\r\\n        this.encoding = encoding;\\r\\n        this.index = 0;\\r\\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\\r\\n    }\\r\\n    append(chunk) {\\r\\n        var toAppend = chunk;\\r\\n        if (typeof (chunk) === 'string') {\\r\\n            var str = chunk;\\r\\n            var bufferLen = Buffer.byteLength(str, this.encoding);\\r\\n            toAppend = Buffer.allocUnsafe(bufferLen);\\r\\n            toAppend.write(str, 0, bufferLen, this.encoding);\\r\\n        }\\r\\n        if (this.buffer.length - this.index >= toAppend.length) {\\r\\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\\r\\n        }\\r\\n        else {\\r\\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\\r\\n            if (this.index === 0) {\\r\\n                this.buffer = Buffer.allocUnsafe(newSize);\\r\\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\\r\\n            }\\r\\n            else {\\r\\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\\r\\n            }\\r\\n        }\\r\\n        this.index += toAppend.length;\\r\\n    }\\r\\n    tryReadHeaders() {\\r\\n        let result = undefined;\\r\\n        let current = 0;\\r\\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\\r\\n            current++;\\r\\n        }\\r\\n        // No header / body separator found (e.g CRLFCRLF)\\r\\n        if (current + 3 >= this.index) {\\r\\n            return result;\\r\\n        }\\r\\n        result = Object.create(null);\\r\\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\\r\\n        headers.forEach((header) => {\\r\\n            let index = header.indexOf(':');\\r\\n            if (index === -1) {\\r\\n                throw new Error('Message header must separate key and value using :');\\r\\n            }\\r\\n            let key = header.substr(0, index);\\r\\n            let value = header.substr(index + 1).trim();\\r\\n            result[key] = value;\\r\\n        });\\r\\n        let nextStart = current + 4;\\r\\n        this.buffer = this.buffer.slice(nextStart);\\r\\n        this.index = this.index - nextStart;\\r\\n        return result;\\r\\n    }\\r\\n    tryReadContent(length) {\\r\\n        if (this.index < length) {\\r\\n            return null;\\r\\n        }\\r\\n        let result = this.buffer.toString(this.encoding, 0, length);\\r\\n        let nextStart = length;\\r\\n        this.buffer.copy(this.buffer, 0, nextStart);\\r\\n        this.index = this.index - nextStart;\\r\\n        return result;\\r\\n    }\\r\\n    get numberOfBytes() {\\r\\n        return this.index;\\r\\n    }\\r\\n}\\r\\nvar MessageReader;\\r\\n(function (MessageReader) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\\r\\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\\r\\n    }\\r\\n    MessageReader.is = is;\\r\\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\\r\\nclass AbstractMessageReader {\\r\\n    constructor() {\\r\\n        this.errorEmitter = new events_1.Emitter();\\r\\n        this.closeEmitter = new events_1.Emitter();\\r\\n        this.partialMessageEmitter = new events_1.Emitter();\\r\\n    }\\r\\n    dispose() {\\r\\n        this.errorEmitter.dispose();\\r\\n        this.closeEmitter.dispose();\\r\\n    }\\r\\n    get onError() {\\r\\n        return this.errorEmitter.event;\\r\\n    }\\r\\n    fireError(error) {\\r\\n        this.errorEmitter.fire(this.asError(error));\\r\\n    }\\r\\n    get onClose() {\\r\\n        return this.closeEmitter.event;\\r\\n    }\\r\\n    fireClose() {\\r\\n        this.closeEmitter.fire(undefined);\\r\\n    }\\r\\n    get onPartialMessage() {\\r\\n        return this.partialMessageEmitter.event;\\r\\n    }\\r\\n    firePartialMessage(info) {\\r\\n        this.partialMessageEmitter.fire(info);\\r\\n    }\\r\\n    asError(error) {\\r\\n        if (error instanceof Error) {\\r\\n            return error;\\r\\n        }\\r\\n        else {\\r\\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.AbstractMessageReader = AbstractMessageReader;\\r\\nclass StreamMessageReader extends AbstractMessageReader {\\r\\n    constructor(readable, encoding = 'utf8') {\\r\\n        super();\\r\\n        this.readable = readable;\\r\\n        this.buffer = new MessageBuffer(encoding);\\r\\n        this._partialMessageTimeout = 10000;\\r\\n    }\\r\\n    set partialMessageTimeout(timeout) {\\r\\n        this._partialMessageTimeout = timeout;\\r\\n    }\\r\\n    get partialMessageTimeout() {\\r\\n        return this._partialMessageTimeout;\\r\\n    }\\r\\n    listen(callback) {\\r\\n        this.nextMessageLength = -1;\\r\\n        this.messageToken = 0;\\r\\n        this.partialMessageTimer = undefined;\\r\\n        this.callback = callback;\\r\\n        this.readable.on('data', (data) => {\\r\\n            this.onData(data);\\r\\n        });\\r\\n        this.readable.on('error', (error) => this.fireError(error));\\r\\n        this.readable.on('close', () => this.fireClose());\\r\\n    }\\r\\n    onData(data) {\\r\\n        this.buffer.append(data);\\r\\n        while (true) {\\r\\n            if (this.nextMessageLength === -1) {\\r\\n                let headers = this.buffer.tryReadHeaders();\\r\\n                if (!headers) {\\r\\n                    return;\\r\\n                }\\r\\n                let contentLength = headers['Content-Length'];\\r\\n                if (!contentLength) {\\r\\n                    throw new Error('Header must provide a Content-Length property.');\\r\\n                }\\r\\n                let length = parseInt(contentLength);\\r\\n                if (isNaN(length)) {\\r\\n                    throw new Error('Content-Length value must be a number.');\\r\\n                }\\r\\n                this.nextMessageLength = length;\\r\\n                // Take the encoding form the header. For compatibility\\r\\n                // treat both utf-8 and utf8 as node utf8\\r\\n            }\\r\\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\\r\\n            if (msg === null) {\\r\\n                /** We haven't received the full message yet. */\\r\\n                this.setPartialMessageTimer();\\r\\n                return;\\r\\n            }\\r\\n            this.clearPartialMessageTimer();\\r\\n            this.nextMessageLength = -1;\\r\\n            this.messageToken++;\\r\\n            var json = JSON.parse(msg);\\r\\n            this.callback(json);\\r\\n        }\\r\\n    }\\r\\n    clearPartialMessageTimer() {\\r\\n        if (this.partialMessageTimer) {\\r\\n            clearTimeout(this.partialMessageTimer);\\r\\n            this.partialMessageTimer = undefined;\\r\\n        }\\r\\n    }\\r\\n    setPartialMessageTimer() {\\r\\n        this.clearPartialMessageTimer();\\r\\n        if (this._partialMessageTimeout <= 0) {\\r\\n            return;\\r\\n        }\\r\\n        this.partialMessageTimer = setTimeout((token, timeout) => {\\r\\n            this.partialMessageTimer = undefined;\\r\\n            if (token === this.messageToken) {\\r\\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\\r\\n                this.setPartialMessageTimer();\\r\\n            }\\r\\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\\r\\n    }\\r\\n}\\r\\nexports.StreamMessageReader = StreamMessageReader;\\r\\nclass IPCMessageReader extends AbstractMessageReader {\\r\\n    constructor(process) {\\r\\n        super();\\r\\n        this.process = process;\\r\\n        let eventEmitter = this.process;\\r\\n        eventEmitter.on('error', (error) => this.fireError(error));\\r\\n        eventEmitter.on('close', () => this.fireClose());\\r\\n    }\\r\\n    listen(callback) {\\r\\n        this.process.on('message', callback);\\r\\n    }\\r\\n}\\r\\nexports.IPCMessageReader = IPCMessageReader;\\r\\nclass SocketMessageReader extends StreamMessageReader {\\r\\n    constructor(socket, encoding = 'utf-8') {\\r\\n        super(socket, encoding);\\r\\n    }\\r\\n}\\r\\nexports.SocketMessageReader = SocketMessageReader;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst events_1 = require(\\\"./events\\\");\\r\\nconst Is = require(\\\"./is\\\");\\r\\nlet ContentLength = 'Content-Length: ';\\r\\nlet CRLF = '\\\\r\\\\n';\\r\\nvar MessageWriter;\\r\\n(function (MessageWriter) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\\r\\n            Is.func(candidate.onError) && Is.func(candidate.write);\\r\\n    }\\r\\n    MessageWriter.is = is;\\r\\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\\r\\nclass AbstractMessageWriter {\\r\\n    constructor() {\\r\\n        this.errorEmitter = new events_1.Emitter();\\r\\n        this.closeEmitter = new events_1.Emitter();\\r\\n    }\\r\\n    dispose() {\\r\\n        this.errorEmitter.dispose();\\r\\n        this.closeEmitter.dispose();\\r\\n    }\\r\\n    get onError() {\\r\\n        return this.errorEmitter.event;\\r\\n    }\\r\\n    fireError(error, message, count) {\\r\\n        this.errorEmitter.fire([this.asError(error), message, count]);\\r\\n    }\\r\\n    get onClose() {\\r\\n        return this.closeEmitter.event;\\r\\n    }\\r\\n    fireClose() {\\r\\n        this.closeEmitter.fire(undefined);\\r\\n    }\\r\\n    asError(error) {\\r\\n        if (error instanceof Error) {\\r\\n            return error;\\r\\n        }\\r\\n        else {\\r\\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.AbstractMessageWriter = AbstractMessageWriter;\\r\\nclass StreamMessageWriter extends AbstractMessageWriter {\\r\\n    constructor(writable, encoding = 'utf8') {\\r\\n        super();\\r\\n        this.writable = writable;\\r\\n        this.encoding = encoding;\\r\\n        this.errorCount = 0;\\r\\n        this.writable.on('error', (error) => this.fireError(error));\\r\\n        this.writable.on('close', () => this.fireClose());\\r\\n    }\\r\\n    write(msg) {\\r\\n        let json = JSON.stringify(msg);\\r\\n        let contentLength = Buffer.byteLength(json, this.encoding);\\r\\n        let headers = [\\r\\n            ContentLength, contentLength.toString(), CRLF,\\r\\n            CRLF\\r\\n        ];\\r\\n        try {\\r\\n            // Header must be written in ASCII encoding\\r\\n            this.writable.write(headers.join(''), 'ascii');\\r\\n            // Now write the content. This can be written in any encoding\\r\\n            this.writable.write(json, this.encoding);\\r\\n            this.errorCount = 0;\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.errorCount++;\\r\\n            this.fireError(error, msg, this.errorCount);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.StreamMessageWriter = StreamMessageWriter;\\r\\nclass IPCMessageWriter extends AbstractMessageWriter {\\r\\n    constructor(process) {\\r\\n        super();\\r\\n        this.process = process;\\r\\n        this.errorCount = 0;\\r\\n        this.queue = [];\\r\\n        this.sending = false;\\r\\n        let eventEmitter = this.process;\\r\\n        eventEmitter.on('error', (error) => this.fireError(error));\\r\\n        eventEmitter.on('close', () => this.fireClose);\\r\\n    }\\r\\n    write(msg) {\\r\\n        if (!this.sending && this.queue.length === 0) {\\r\\n            // See https://github.com/nodejs/node/issues/7657\\r\\n            this.doWriteMessage(msg);\\r\\n        }\\r\\n        else {\\r\\n            this.queue.push(msg);\\r\\n        }\\r\\n    }\\r\\n    doWriteMessage(msg) {\\r\\n        try {\\r\\n            if (this.process.send) {\\r\\n                this.sending = true;\\r\\n                this.process.send(msg, undefined, undefined, (error) => {\\r\\n                    this.sending = false;\\r\\n                    if (error) {\\r\\n                        this.errorCount++;\\r\\n                        this.fireError(error, msg, this.errorCount);\\r\\n                    }\\r\\n                    else {\\r\\n                        this.errorCount = 0;\\r\\n                    }\\r\\n                    if (this.queue.length > 0) {\\r\\n                        this.doWriteMessage(this.queue.shift());\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.errorCount++;\\r\\n            this.fireError(error, msg, this.errorCount);\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.IPCMessageWriter = IPCMessageWriter;\\r\\nclass SocketMessageWriter extends AbstractMessageWriter {\\r\\n    constructor(socket, encoding = 'utf8') {\\r\\n        super();\\r\\n        this.socket = socket;\\r\\n        this.queue = [];\\r\\n        this.sending = false;\\r\\n        this.encoding = encoding;\\r\\n        this.errorCount = 0;\\r\\n        this.socket.on('error', (error) => this.fireError(error));\\r\\n        this.socket.on('close', () => this.fireClose());\\r\\n    }\\r\\n    dispose() {\\r\\n        super.dispose();\\r\\n        this.socket.destroy();\\r\\n    }\\r\\n    write(msg) {\\r\\n        if (!this.sending && this.queue.length === 0) {\\r\\n            // See https://github.com/nodejs/node/issues/7657\\r\\n            this.doWriteMessage(msg);\\r\\n        }\\r\\n        else {\\r\\n            this.queue.push(msg);\\r\\n        }\\r\\n    }\\r\\n    doWriteMessage(msg) {\\r\\n        let json = JSON.stringify(msg);\\r\\n        let contentLength = Buffer.byteLength(json, this.encoding);\\r\\n        let headers = [\\r\\n            ContentLength, contentLength.toString(), CRLF,\\r\\n            CRLF\\r\\n        ];\\r\\n        try {\\r\\n            // Header must be written in ASCII encoding\\r\\n            this.sending = true;\\r\\n            this.socket.write(headers.join(''), 'ascii', (error) => {\\r\\n                if (error) {\\r\\n                    this.handleError(error, msg);\\r\\n                }\\r\\n                try {\\r\\n                    // Now write the content. This can be written in any encoding\\r\\n                    this.socket.write(json, this.encoding, (error) => {\\r\\n                        this.sending = false;\\r\\n                        if (error) {\\r\\n                            this.handleError(error, msg);\\r\\n                        }\\r\\n                        else {\\r\\n                            this.errorCount = 0;\\r\\n                        }\\r\\n                        if (this.queue.length > 0) {\\r\\n                            this.doWriteMessage(this.queue.shift());\\r\\n                        }\\r\\n                    });\\r\\n                }\\r\\n                catch (error) {\\r\\n                    this.handleError(error, msg);\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n        catch (error) {\\r\\n            this.handleError(error, msg);\\r\\n        }\\r\\n    }\\r\\n    handleError(error, msg) {\\r\\n        this.errorCount++;\\r\\n        this.fireError(error, msg, this.errorCount);\\r\\n    }\\r\\n}\\r\\nexports.SocketMessageWriter = SocketMessageWriter;\\r\\n\",\"module.exports = require(\\\"child_process\\\");\",\"module.exports = require(\\\"net\\\");\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst code = require(\\\"vscode\\\");\\r\\nclass ProtocolCompletionItem extends code.CompletionItem {\\r\\n    constructor(label) {\\r\\n        super(label);\\r\\n    }\\r\\n}\\r\\nexports.default = ProtocolCompletionItem;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst code = require(\\\"vscode\\\");\\r\\nclass ProtocolCodeLens extends code.CodeLens {\\r\\n    constructor(range) {\\r\\n        super(range);\\r\\n    }\\r\\n}\\r\\nexports.default = ProtocolCodeLens;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst code = require(\\\"vscode\\\");\\r\\nclass ProtocolDocumentLink extends code.DocumentLink {\\r\\n    constructor(range, target) {\\r\\n        super(range, target);\\r\\n    }\\r\\n}\\r\\nexports.default = ProtocolDocumentLink;\\r\\n\",\"/*---------------------------------------------------------------------------------------------\\r\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n *--------------------------------------------------------------------------------------------*/\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nclass ValueUUID {\\r\\n    constructor(_value) {\\r\\n        this._value = _value;\\r\\n        // empty\\r\\n    }\\r\\n    asHex() {\\r\\n        return this._value;\\r\\n    }\\r\\n    equals(other) {\\r\\n        return this.asHex() === other.asHex();\\r\\n    }\\r\\n}\\r\\nclass V4UUID extends ValueUUID {\\r\\n    constructor() {\\r\\n        super([\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            '-',\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            '-',\\r\\n            '4',\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            '-',\\r\\n            V4UUID._oneOf(V4UUID._timeHighBits),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            '-',\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n            V4UUID._randomHex(),\\r\\n        ].join(''));\\r\\n    }\\r\\n    static _oneOf(array) {\\r\\n        return array[Math.floor(array.length * Math.random())];\\r\\n    }\\r\\n    static _randomHex() {\\r\\n        return V4UUID._oneOf(V4UUID._chars);\\r\\n    }\\r\\n}\\r\\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\\r\\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\\r\\n/**\\r\\n * An empty UUID that contains only zeros.\\r\\n */\\r\\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\\r\\nfunction v4() {\\r\\n    return new V4UUID();\\r\\n}\\r\\nexports.v4 = v4;\\r\\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\\r\\nfunction isUUID(value) {\\r\\n    return _UUIDPattern.test(value);\\r\\n}\\r\\nexports.isUUID = isUUID;\\r\\n/**\\r\\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\\r\\n * @param value A uuid string.\\r\\n */\\r\\nfunction parse(value) {\\r\\n    if (!isUUID(value)) {\\r\\n        throw new Error('invalid uuid');\\r\\n    }\\r\\n    return new ValueUUID(value);\\r\\n}\\r\\nexports.parse = parse;\\r\\nfunction generateUuid() {\\r\\n    return v4().asHex();\\r\\n}\\r\\nexports.generateUuid = generateUuid;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst Is = require(\\\"./utils/is\\\");\\r\\nclass ProgressPart {\\r\\n    constructor(_client, _token) {\\r\\n        this._client = _client;\\r\\n        this._token = _token;\\r\\n        this._reported = 0;\\r\\n        this._disposable = this._client.onProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, (value) => {\\r\\n            switch (value.kind) {\\r\\n                case 'begin':\\r\\n                    this.begin(value);\\r\\n                    break;\\r\\n                case 'report':\\r\\n                    this.report(value);\\r\\n                    break;\\r\\n                case 'end':\\r\\n                    this.done();\\r\\n                    break;\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    begin(params) {\\r\\n        let location = params.cancellable ? vscode_1.ProgressLocation.Notification : vscode_1.ProgressLocation.Window;\\r\\n        vscode_1.window.withProgress({ location, cancellable: params.cancellable, title: params.title }, async (progress, cancellationToken) => {\\r\\n            this._progress = progress;\\r\\n            this._infinite = params.percentage === undefined;\\r\\n            this._cancellationToken = cancellationToken;\\r\\n            this._cancellationToken.onCancellationRequested(() => {\\r\\n                this._client.sendNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, { token: this._token });\\r\\n            });\\r\\n            this.report(params);\\r\\n            return new Promise((resolve, reject) => {\\r\\n                this._resolve = resolve;\\r\\n                this._reject = reject;\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n    report(params) {\\r\\n        if (this._infinite && Is.string(params.message)) {\\r\\n            this._progress.report({ message: params.message });\\r\\n        }\\r\\n        else if (Is.number(params.percentage)) {\\r\\n            let percentage = Math.max(0, Math.min(params.percentage, 100));\\r\\n            let delta = Math.max(0, percentage - this._reported);\\r\\n            this._progress.report({ message: params.message, increment: delta });\\r\\n            this._reported += delta;\\r\\n        }\\r\\n    }\\r\\n    cancel() {\\r\\n        if (this._disposable) {\\r\\n            this._disposable.dispose();\\r\\n            this._disposable = undefined;\\r\\n        }\\r\\n        if (this._reject) {\\r\\n            this._reject();\\r\\n            this._resolve = undefined;\\r\\n            this._reject = undefined;\\r\\n        }\\r\\n    }\\r\\n    done() {\\r\\n        if (this._disposable) {\\r\\n            this._disposable.dispose();\\r\\n            this._disposable = undefined;\\r\\n        }\\r\\n        if (this._resolve) {\\r\\n            this._resolve();\\r\\n            this._resolve = undefined;\\r\\n            this._reject = undefined;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.ProgressPart = ProgressPart;\\r\\n\",null,\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nfunction __export(m) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst cp = require(\\\"child_process\\\");\\r\\nconst fs = require(\\\"fs\\\");\\r\\nconst SemVer = require(\\\"semver\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst colorProvider_1 = require(\\\"./colorProvider\\\");\\r\\nconst configuration_1 = require(\\\"./configuration\\\");\\r\\nconst implementation_1 = require(\\\"./implementation\\\");\\r\\nconst typeDefinition_1 = require(\\\"./typeDefinition\\\");\\r\\nconst workspaceFolders_1 = require(\\\"./workspaceFolders\\\");\\r\\nconst foldingRange_1 = require(\\\"./foldingRange\\\");\\r\\nconst declaration_1 = require(\\\"./declaration\\\");\\r\\nconst selectionRange_1 = require(\\\"./selectionRange\\\");\\r\\nconst progress_1 = require(\\\"./progress\\\");\\r\\nconst callHierarchy_proposed_1 = require(\\\"./callHierarchy.proposed\\\");\\r\\nconst semanticTokens_proposed_1 = require(\\\"./semanticTokens.proposed\\\");\\r\\nconst Is = require(\\\"./utils/is\\\");\\r\\nconst processes_1 = require(\\\"./utils/processes\\\");\\r\\n__export(require(\\\"./client\\\"));\\r\\nconst REQUIRED_VSCODE_VERSION = '^1.42.0'; // do not change format, updated by `updateVSCode` script\\r\\nvar Executable;\\r\\n(function (Executable) {\\r\\n    function is(value) {\\r\\n        return Is.string(value.command);\\r\\n    }\\r\\n    Executable.is = is;\\r\\n})(Executable || (Executable = {}));\\r\\nvar TransportKind;\\r\\n(function (TransportKind) {\\r\\n    TransportKind[TransportKind[\\\"stdio\\\"] = 0] = \\\"stdio\\\";\\r\\n    TransportKind[TransportKind[\\\"ipc\\\"] = 1] = \\\"ipc\\\";\\r\\n    TransportKind[TransportKind[\\\"pipe\\\"] = 2] = \\\"pipe\\\";\\r\\n    TransportKind[TransportKind[\\\"socket\\\"] = 3] = \\\"socket\\\";\\r\\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\\r\\nvar Transport;\\r\\n(function (Transport) {\\r\\n    function isSocket(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\\r\\n    }\\r\\n    Transport.isSocket = isSocket;\\r\\n})(Transport || (Transport = {}));\\r\\nvar NodeModule;\\r\\n(function (NodeModule) {\\r\\n    function is(value) {\\r\\n        return Is.string(value.module);\\r\\n    }\\r\\n    NodeModule.is = is;\\r\\n})(NodeModule || (NodeModule = {}));\\r\\nvar StreamInfo;\\r\\n(function (StreamInfo) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\\r\\n    }\\r\\n    StreamInfo.is = is;\\r\\n})(StreamInfo || (StreamInfo = {}));\\r\\nvar ChildProcessInfo;\\r\\n(function (ChildProcessInfo) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\\r\\n    }\\r\\n    ChildProcessInfo.is = is;\\r\\n})(ChildProcessInfo || (ChildProcessInfo = {}));\\r\\nclass LanguageClient extends client_1.BaseLanguageClient {\\r\\n    constructor(arg1, arg2, arg3, arg4, arg5) {\\r\\n        let id;\\r\\n        let name;\\r\\n        let serverOptions;\\r\\n        let clientOptions;\\r\\n        let forceDebug;\\r\\n        if (Is.string(arg2)) {\\r\\n            id = arg1;\\r\\n            name = arg2;\\r\\n            serverOptions = arg3;\\r\\n            clientOptions = arg4;\\r\\n            forceDebug = !!arg5;\\r\\n        }\\r\\n        else {\\r\\n            id = arg1.toLowerCase();\\r\\n            name = arg1;\\r\\n            serverOptions = arg2;\\r\\n            clientOptions = arg3;\\r\\n            forceDebug = arg4;\\r\\n        }\\r\\n        if (forceDebug === void 0) {\\r\\n            forceDebug = false;\\r\\n        }\\r\\n        super(id, name, clientOptions);\\r\\n        this._serverOptions = serverOptions;\\r\\n        this._forceDebug = forceDebug;\\r\\n        try {\\r\\n            this.checkVersion();\\r\\n        }\\r\\n        catch (error) {\\r\\n            if (Is.string(error.message)) {\\r\\n                this.outputChannel.appendLine(error.message);\\r\\n            }\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n    checkVersion() {\\r\\n        let codeVersion = SemVer.parse(vscode_1.version);\\r\\n        if (!codeVersion) {\\r\\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\\r\\n        }\\r\\n        // Remove the insider pre-release since we stay API compatible.\\r\\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\\r\\n            codeVersion.prerelease = [];\\r\\n        }\\r\\n        if (!SemVer.satisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\\r\\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\\r\\n        }\\r\\n    }\\r\\n    stop() {\\r\\n        return super.stop().then(() => {\\r\\n            if (this._serverProcess) {\\r\\n                let toCheck = this._serverProcess;\\r\\n                this._serverProcess = undefined;\\r\\n                if (this._isDetached === void 0 || !this._isDetached) {\\r\\n                    this.checkProcessDied(toCheck);\\r\\n                }\\r\\n                this._isDetached = undefined;\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    checkProcessDied(childProcess) {\\r\\n        if (!childProcess) {\\r\\n            return;\\r\\n        }\\r\\n        setTimeout(() => {\\r\\n            // Test if the process is still alive. Throws an exception if not\\r\\n            try {\\r\\n                process.kill(childProcess.pid, 0);\\r\\n                processes_1.terminate(childProcess);\\r\\n            }\\r\\n            catch (error) {\\r\\n                // All is fine.\\r\\n            }\\r\\n        }, 2000);\\r\\n    }\\r\\n    handleConnectionClosed() {\\r\\n        this._serverProcess = undefined;\\r\\n        super.handleConnectionClosed();\\r\\n    }\\r\\n    createMessageTransports(encoding) {\\r\\n        function getEnvironment(env, fork) {\\r\\n            if (!env && !fork) {\\r\\n                return undefined;\\r\\n            }\\r\\n            let result = Object.create(null);\\r\\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\\r\\n            if (fork) {\\r\\n                result['ELECTRON_RUN_AS_NODE'] = '1';\\r\\n                result['ELECTRON_NO_ASAR'] = '1';\\r\\n            }\\r\\n            if (env) {\\r\\n                Object.keys(env).forEach(key => result[key] = env[key]);\\r\\n            }\\r\\n            return result;\\r\\n        }\\r\\n        const debugStartWith = ['--debug=', '--debug-brk=', '--inspect=', '--inspect-brk='];\\r\\n        const debugEquals = ['--debug', '--debug-brk', '--inspect', '--inspect-brk'];\\r\\n        function startedInDebugMode() {\\r\\n            let args = process.execArgv;\\r\\n            if (args) {\\r\\n                return args.some((arg) => {\\r\\n                    return debugStartWith.some(value => arg.startsWith(value)) ||\\r\\n                        debugEquals.some(value => arg === value);\\r\\n                });\\r\\n            }\\r\\n            return false;\\r\\n        }\\r\\n        function assertStdio(process) {\\r\\n            if (process.stdin === null || process.stdout === null || process.stderr === null) {\\r\\n                throw new Error('Process created without stdio streams');\\r\\n            }\\r\\n        }\\r\\n        let server = this._serverOptions;\\r\\n        // We got a function.\\r\\n        if (Is.func(server)) {\\r\\n            return server().then((result) => {\\r\\n                if (client_1.MessageTransports.is(result)) {\\r\\n                    this._isDetached = !!result.detached;\\r\\n                    return result;\\r\\n                }\\r\\n                else if (StreamInfo.is(result)) {\\r\\n                    this._isDetached = !!result.detached;\\r\\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\\r\\n                }\\r\\n                else {\\r\\n                    let cp;\\r\\n                    if (ChildProcessInfo.is(result)) {\\r\\n                        cp = result.process;\\r\\n                        this._isDetached = result.detached;\\r\\n                    }\\r\\n                    else {\\r\\n                        cp = result;\\r\\n                        this._isDetached = false;\\r\\n                    }\\r\\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n        let json;\\r\\n        let runDebug = server;\\r\\n        if (runDebug.run || runDebug.debug) {\\r\\n            if (this._forceDebug || startedInDebugMode()) {\\r\\n                json = runDebug.debug;\\r\\n            }\\r\\n            else {\\r\\n                json = runDebug.run;\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            json = server;\\r\\n        }\\r\\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\\r\\n            if (NodeModule.is(json) && json.module) {\\r\\n                let node = json;\\r\\n                let transport = node.transport || TransportKind.stdio;\\r\\n                if (node.runtime) {\\r\\n                    let args = [];\\r\\n                    let options = node.options || Object.create(null);\\r\\n                    if (options.execArgv) {\\r\\n                        options.execArgv.forEach(element => args.push(element));\\r\\n                    }\\r\\n                    args.push(node.module);\\r\\n                    if (node.args) {\\r\\n                        node.args.forEach(element => args.push(element));\\r\\n                    }\\r\\n                    let execOptions = Object.create(null);\\r\\n                    execOptions.cwd = serverWorkingDir;\\r\\n                    execOptions.env = getEnvironment(options.env, false);\\r\\n                    let pipeName = undefined;\\r\\n                    if (transport === TransportKind.ipc) {\\r\\n                        // exec options not correctly typed in lib\\r\\n                        execOptions.stdio = [null, null, null, 'ipc'];\\r\\n                        args.push('--node-ipc');\\r\\n                    }\\r\\n                    else if (transport === TransportKind.stdio) {\\r\\n                        args.push('--stdio');\\r\\n                    }\\r\\n                    else if (transport === TransportKind.pipe) {\\r\\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\\r\\n                        args.push(`--pipe=${pipeName}`);\\r\\n                    }\\r\\n                    else if (Transport.isSocket(transport)) {\\r\\n                        args.push(`--socket=${transport.port}`);\\r\\n                    }\\r\\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\\r\\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\\r\\n                        let serverProcess = cp.spawn(node.runtime, args, execOptions);\\r\\n                        if (!serverProcess || !serverProcess.pid) {\\r\\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\\r\\n                        }\\r\\n                        this._serverProcess = serverProcess;\\r\\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                        if (transport === TransportKind.ipc) {\\r\\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\\r\\n                        }\\r\\n                        else {\\r\\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\\r\\n                        }\\r\\n                    }\\r\\n                    else if (transport === TransportKind.pipe) {\\r\\n                        return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\\r\\n                            let process = cp.spawn(node.runtime, args, execOptions);\\r\\n                            if (!process || !process.pid) {\\r\\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\\r\\n                            }\\r\\n                            this._serverProcess = process;\\r\\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                            return transport.onConnected().then((protocol) => {\\r\\n                                return { reader: protocol[0], writer: protocol[1] };\\r\\n                            });\\r\\n                        });\\r\\n                    }\\r\\n                    else if (Transport.isSocket(transport)) {\\r\\n                        return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\\r\\n                            let process = cp.spawn(node.runtime, args, execOptions);\\r\\n                            if (!process || !process.pid) {\\r\\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\\r\\n                            }\\r\\n                            this._serverProcess = process;\\r\\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                            return transport.onConnected().then((protocol) => {\\r\\n                                return { reader: protocol[0], writer: protocol[1] };\\r\\n                            });\\r\\n                        });\\r\\n                    }\\r\\n                }\\r\\n                else {\\r\\n                    let pipeName = undefined;\\r\\n                    return new Promise((resolve, _reject) => {\\r\\n                        let args = node.args && node.args.slice() || [];\\r\\n                        if (transport === TransportKind.ipc) {\\r\\n                            args.push('--node-ipc');\\r\\n                        }\\r\\n                        else if (transport === TransportKind.stdio) {\\r\\n                            args.push('--stdio');\\r\\n                        }\\r\\n                        else if (transport === TransportKind.pipe) {\\r\\n                            pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\\r\\n                            args.push(`--pipe=${pipeName}`);\\r\\n                        }\\r\\n                        else if (Transport.isSocket(transport)) {\\r\\n                            args.push(`--socket=${transport.port}`);\\r\\n                        }\\r\\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\\r\\n                        let options = node.options || Object.create(null);\\r\\n                        options.env = getEnvironment(options.env, true);\\r\\n                        options.execArgv = options.execArgv || [];\\r\\n                        options.cwd = serverWorkingDir;\\r\\n                        options.silent = true;\\r\\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\\r\\n                            let sp = cp.fork(node.module, args || [], options);\\r\\n                            assertStdio(sp);\\r\\n                            this._serverProcess = sp;\\r\\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                            if (transport === TransportKind.ipc) {\\r\\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                                resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\\r\\n                            }\\r\\n                            else {\\r\\n                                resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(sp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(sp.stdin) });\\r\\n                            }\\r\\n                        }\\r\\n                        else if (transport === TransportKind.pipe) {\\r\\n                            vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\\r\\n                                let sp = cp.fork(node.module, args || [], options);\\r\\n                                assertStdio(sp);\\r\\n                                this._serverProcess = sp;\\r\\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                                transport.onConnected().then((protocol) => {\\r\\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\\r\\n                                });\\r\\n                            });\\r\\n                        }\\r\\n                        else if (Transport.isSocket(transport)) {\\r\\n                            vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\\r\\n                                let sp = cp.fork(node.module, args || [], options);\\r\\n                                assertStdio(sp);\\r\\n                                this._serverProcess = sp;\\r\\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                                transport.onConnected().then((protocol) => {\\r\\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\\r\\n                                });\\r\\n                            });\\r\\n                        }\\r\\n                    });\\r\\n                }\\r\\n            }\\r\\n            else if (Executable.is(json) && json.command) {\\r\\n                let command = json;\\r\\n                let args = command.args || [];\\r\\n                let options = Object.assign({}, command.options);\\r\\n                options.cwd = options.cwd || serverWorkingDir;\\r\\n                let serverProcess = cp.spawn(command.command, args, options);\\r\\n                if (!serverProcess || !serverProcess.pid) {\\r\\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\\r\\n                }\\r\\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\\r\\n                this._serverProcess = serverProcess;\\r\\n                this._isDetached = !!options.detached;\\r\\n                return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\\r\\n            }\\r\\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\\r\\n        });\\r\\n    }\\r\\n    registerProposedFeatures() {\\r\\n        this.registerFeatures(ProposedFeatures.createAll(this));\\r\\n    }\\r\\n    registerBuiltinFeatures() {\\r\\n        super.registerBuiltinFeatures();\\r\\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\\r\\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\\r\\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\\r\\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\\r\\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\\r\\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\\r\\n        this.registerFeature(new declaration_1.DeclarationFeature(this));\\r\\n        this.registerFeature(new selectionRange_1.SelectionRangeFeature(this));\\r\\n        this.registerFeature(new progress_1.ProgressFeature(this));\\r\\n    }\\r\\n    _mainGetRootPath() {\\r\\n        let folders = vscode_1.workspace.workspaceFolders;\\r\\n        if (!folders || folders.length === 0) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let folder = folders[0];\\r\\n        if (folder.uri.scheme === 'file') {\\r\\n            return folder.uri.fsPath;\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    _getServerWorkingDir(options) {\\r\\n        let cwd = options && options.cwd;\\r\\n        if (!cwd) {\\r\\n            cwd = this.clientOptions.workspaceFolder\\r\\n                ? this.clientOptions.workspaceFolder.uri.fsPath\\r\\n                : this._mainGetRootPath();\\r\\n        }\\r\\n        if (cwd) {\\r\\n            // make sure the folder exists otherwise creating the process will fail\\r\\n            return new Promise(s => {\\r\\n                fs.lstat(cwd, (err, stats) => {\\r\\n                    s(!err && stats.isDirectory() ? cwd : undefined);\\r\\n                });\\r\\n            });\\r\\n        }\\r\\n        return Promise.resolve(undefined);\\r\\n    }\\r\\n}\\r\\nexports.LanguageClient = LanguageClient;\\r\\nclass SettingMonitor {\\r\\n    constructor(_client, _setting) {\\r\\n        this._client = _client;\\r\\n        this._setting = _setting;\\r\\n        this._listeners = [];\\r\\n    }\\r\\n    start() {\\r\\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\\r\\n        this.onDidChangeConfiguration();\\r\\n        return new vscode_1.Disposable(() => {\\r\\n            if (this._client.needsStop()) {\\r\\n                this._client.stop();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n    onDidChangeConfiguration() {\\r\\n        let index = this._setting.indexOf('.');\\r\\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\\r\\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\\r\\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\\r\\n        if (enabled && this._client.needsStart()) {\\r\\n            this._client.start();\\r\\n        }\\r\\n        else if (!enabled && this._client.needsStop()) {\\r\\n            this._client.stop();\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.SettingMonitor = SettingMonitor;\\r\\n// Exporting proposed protocol.\\r\\nvar ProposedFeatures;\\r\\n(function (ProposedFeatures) {\\r\\n    function createAll(client) {\\r\\n        let result = [\\r\\n            new callHierarchy_proposed_1.CallHierarchyFeature(client),\\r\\n            new semanticTokens_proposed_1.SemanticTokensFeature(client)\\r\\n        ];\\r\\n        return result;\\r\\n    }\\r\\n    ProposedFeatures.createAll = createAll;\\r\\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\\r\\n\",\"exports = module.exports = SemVer\\n\\nvar debug\\n/* istanbul ignore next */\\nif (typeof process === 'object' &&\\n    process.env &&\\n    process.env.NODE_DEBUG &&\\n    /\\\\bsemver\\\\b/i.test(process.env.NODE_DEBUG)) {\\n  debug = function () {\\n    var args = Array.prototype.slice.call(arguments, 0)\\n    args.unshift('SEMVER')\\n    console.log.apply(console, args)\\n  }\\n} else {\\n  debug = function () {}\\n}\\n\\n// Note: this is the semver.org version of the spec that it implements\\n// Not necessarily the package version of this code.\\nexports.SEMVER_SPEC_VERSION = '2.0.0'\\n\\nvar MAX_LENGTH = 256\\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\\n  /* istanbul ignore next */ 9007199254740991\\n\\n// Max safe segment length for coercion.\\nvar MAX_SAFE_COMPONENT_LENGTH = 16\\n\\n// The actual regexps go on exports.re\\nvar re = exports.re = []\\nvar src = exports.src = []\\nvar t = exports.tokens = {}\\nvar R = 0\\n\\nfunction tok (n) {\\n  t[n] = R++\\n}\\n\\n// The following Regular Expressions can be used for tokenizing,\\n// validating, and parsing SemVer version strings.\\n\\n// ## Numeric Identifier\\n// A single `0`, or a non-zero digit followed by zero or more digits.\\n\\ntok('NUMERICIDENTIFIER')\\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\\\\\d*'\\ntok('NUMERICIDENTIFIERLOOSE')\\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\\n\\n// ## Non-numeric Identifier\\n// Zero or more digits, followed by a letter or hyphen, and then zero or\\n// more letters, digits, or hyphens.\\n\\ntok('NONNUMERICIDENTIFIER')\\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\\n\\n// ## Main Version\\n// Three dot-separated numeric identifiers.\\n\\ntok('MAINVERSION')\\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\\\\\.' +\\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\\\\\.' +\\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\\n\\ntok('MAINVERSIONLOOSE')\\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\\\\\.' +\\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\\\\\.' +\\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\\n\\n// ## Pre-release Version Identifier\\n// A numeric identifier, or a non-numeric identifier.\\n\\ntok('PRERELEASEIDENTIFIER')\\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\\n\\ntok('PRERELEASEIDENTIFIERLOOSE')\\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\\n\\n// ## Pre-release Version\\n// Hyphen, followed by one or more dot-separated pre-release version\\n// identifiers.\\n\\ntok('PRERELEASE')\\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\\n                  '(?:\\\\\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\\n\\ntok('PRERELEASELOOSE')\\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\\n                       '(?:\\\\\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\\n\\n// ## Build Metadata Identifier\\n// Any combination of digits, letters, or hyphens.\\n\\ntok('BUILDIDENTIFIER')\\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\\n\\n// ## Build Metadata\\n// Plus sign, followed by one or more period-separated build metadata\\n// identifiers.\\n\\ntok('BUILD')\\nsrc[t.BUILD] = '(?:\\\\\\\\+(' + src[t.BUILDIDENTIFIER] +\\n             '(?:\\\\\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\\n\\n// ## Full Version String\\n// A main version, followed optionally by a pre-release version and\\n// build metadata.\\n\\n// Note that the only major, minor, patch, and pre-release sections of\\n// the version string are capturing groups.  The build metadata is not a\\n// capturing group, because it should not ever be used in version\\n// comparison.\\n\\ntok('FULL')\\ntok('FULLPLAIN')\\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\\n                  src[t.PRERELEASE] + '?' +\\n                  src[t.BUILD] + '?'\\n\\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\\n\\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\\n// common in the npm registry.\\ntok('LOOSEPLAIN')\\nsrc[t.LOOSEPLAIN] = '[v=\\\\\\\\s]*' + src[t.MAINVERSIONLOOSE] +\\n                  src[t.PRERELEASELOOSE] + '?' +\\n                  src[t.BUILD] + '?'\\n\\ntok('LOOSE')\\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\\n\\ntok('GTLT')\\nsrc[t.GTLT] = '((?:<|>)?=?)'\\n\\n// Something like \\\"2.*\\\" or \\\"1.2.x\\\".\\n// Note that \\\"x.x\\\" is a valid xRange identifer, meaning \\\"any version\\\"\\n// Only the first item is strictly required.\\ntok('XRANGEIDENTIFIERLOOSE')\\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\\\\\*'\\ntok('XRANGEIDENTIFIER')\\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\\\\\*'\\n\\ntok('XRANGEPLAIN')\\nsrc[t.XRANGEPLAIN] = '[v=\\\\\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\\n                   '(?:\\\\\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\\n                   '(?:\\\\\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\\n                   '(?:' + src[t.PRERELEASE] + ')?' +\\n                   src[t.BUILD] + '?' +\\n                   ')?)?'\\n\\ntok('XRANGEPLAINLOOSE')\\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\\n                        '(?:\\\\\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\\n                        '(?:\\\\\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\\n                        src[t.BUILD] + '?' +\\n                        ')?)?'\\n\\ntok('XRANGE')\\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\\\\\s*' + src[t.XRANGEPLAIN] + '$'\\ntok('XRANGELOOSE')\\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\\n\\n// Coercion.\\n// Extract anything that could conceivably be a part of a valid semver\\ntok('COERCE')\\nsrc[t.COERCE] = '(^|[^\\\\\\\\d])' +\\n              '(\\\\\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\\n              '(?:\\\\\\\\.(\\\\\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\\n              '(?:\\\\\\\\.(\\\\\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\\n              '(?:$|[^\\\\\\\\d])'\\ntok('COERCERTL')\\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\\n\\n// Tilde ranges.\\n// Meaning is \\\"reasonably at or greater than\\\"\\ntok('LONETILDE')\\nsrc[t.LONETILDE] = '(?:~>?)'\\n\\ntok('TILDETRIM')\\nsrc[t.TILDETRIM] = '(\\\\\\\\s*)' + src[t.LONETILDE] + '\\\\\\\\s+'\\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\\nvar tildeTrimReplace = '$1~'\\n\\ntok('TILDE')\\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\\ntok('TILDELOOSE')\\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\\n\\n// Caret ranges.\\n// Meaning is \\\"at least and backwards compatible with\\\"\\ntok('LONECARET')\\nsrc[t.LONECARET] = '(?:\\\\\\\\^)'\\n\\ntok('CARETTRIM')\\nsrc[t.CARETTRIM] = '(\\\\\\\\s*)' + src[t.LONECARET] + '\\\\\\\\s+'\\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\\nvar caretTrimReplace = '$1^'\\n\\ntok('CARET')\\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\\ntok('CARETLOOSE')\\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\\n\\n// A simple gt/lt/eq thing, or just \\\"\\\" to indicate \\\"any version\\\"\\ntok('COMPARATORLOOSE')\\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\\ntok('COMPARATOR')\\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\\n\\n// An expression to strip any whitespace between the gtlt and the thing\\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\\ntok('COMPARATORTRIM')\\nsrc[t.COMPARATORTRIM] = '(\\\\\\\\s*)' + src[t.GTLT] +\\n                      '\\\\\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\\n\\n// this one has to use the /g flag\\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\\nvar comparatorTrimReplace = '$1$2$3'\\n\\n// Something like `1.2.3 - 1.2.4`\\n// Note that these all use the loose form, because they'll be\\n// checked against either the strict or loose comparator form\\n// later.\\ntok('HYPHENRANGE')\\nsrc[t.HYPHENRANGE] = '^\\\\\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\\n                   '\\\\\\\\s+-\\\\\\\\s+' +\\n                   '(' + src[t.XRANGEPLAIN] + ')' +\\n                   '\\\\\\\\s*$'\\n\\ntok('HYPHENRANGELOOSE')\\nsrc[t.HYPHENRANGELOOSE] = '^\\\\\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\\n                        '\\\\\\\\s+-\\\\\\\\s+' +\\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\\n                        '\\\\\\\\s*$'\\n\\n// Star ranges basically just allow anything at all.\\ntok('STAR')\\nsrc[t.STAR] = '(<|>)?=?\\\\\\\\s*\\\\\\\\*'\\n\\n// Compile to actual regexp objects.\\n// All are flag-free, unless they were created above with a flag.\\nfor (var i = 0; i < R; i++) {\\n  debug(i, src[i])\\n  if (!re[i]) {\\n    re[i] = new RegExp(src[i])\\n  }\\n}\\n\\nexports.parse = parse\\nfunction parse (version, options) {\\n  if (!options || typeof options !== 'object') {\\n    options = {\\n      loose: !!options,\\n      includePrerelease: false\\n    }\\n  }\\n\\n  if (version instanceof SemVer) {\\n    return version\\n  }\\n\\n  if (typeof version !== 'string') {\\n    return null\\n  }\\n\\n  if (version.length > MAX_LENGTH) {\\n    return null\\n  }\\n\\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\\n  if (!r.test(version)) {\\n    return null\\n  }\\n\\n  try {\\n    return new SemVer(version, options)\\n  } catch (er) {\\n    return null\\n  }\\n}\\n\\nexports.valid = valid\\nfunction valid (version, options) {\\n  var v = parse(version, options)\\n  return v ? v.version : null\\n}\\n\\nexports.clean = clean\\nfunction clean (version, options) {\\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\\n  return s ? s.version : null\\n}\\n\\nexports.SemVer = SemVer\\n\\nfunction SemVer (version, options) {\\n  if (!options || typeof options !== 'object') {\\n    options = {\\n      loose: !!options,\\n      includePrerelease: false\\n    }\\n  }\\n  if (version instanceof SemVer) {\\n    if (version.loose === options.loose) {\\n      return version\\n    } else {\\n      version = version.version\\n    }\\n  } else if (typeof version !== 'string') {\\n    throw new TypeError('Invalid Version: ' + version)\\n  }\\n\\n  if (version.length > MAX_LENGTH) {\\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\\n  }\\n\\n  if (!(this instanceof SemVer)) {\\n    return new SemVer(version, options)\\n  }\\n\\n  debug('SemVer', version, options)\\n  this.options = options\\n  this.loose = !!options.loose\\n\\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\\n\\n  if (!m) {\\n    throw new TypeError('Invalid Version: ' + version)\\n  }\\n\\n  this.raw = version\\n\\n  // these are actually numbers\\n  this.major = +m[1]\\n  this.minor = +m[2]\\n  this.patch = +m[3]\\n\\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\\n    throw new TypeError('Invalid major version')\\n  }\\n\\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\\n    throw new TypeError('Invalid minor version')\\n  }\\n\\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\\n    throw new TypeError('Invalid patch version')\\n  }\\n\\n  // numberify any prerelease numeric ids\\n  if (!m[4]) {\\n    this.prerelease = []\\n  } else {\\n    this.prerelease = m[4].split('.').map(function (id) {\\n      if (/^[0-9]+$/.test(id)) {\\n        var num = +id\\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\\n          return num\\n        }\\n      }\\n      return id\\n    })\\n  }\\n\\n  this.build = m[5] ? m[5].split('.') : []\\n  this.format()\\n}\\n\\nSemVer.prototype.format = function () {\\n  this.version = this.major + '.' + this.minor + '.' + this.patch\\n  if (this.prerelease.length) {\\n    this.version += '-' + this.prerelease.join('.')\\n  }\\n  return this.version\\n}\\n\\nSemVer.prototype.toString = function () {\\n  return this.version\\n}\\n\\nSemVer.prototype.compare = function (other) {\\n  debug('SemVer.compare', this.version, this.options, other)\\n  if (!(other instanceof SemVer)) {\\n    other = new SemVer(other, this.options)\\n  }\\n\\n  return this.compareMain(other) || this.comparePre(other)\\n}\\n\\nSemVer.prototype.compareMain = function (other) {\\n  if (!(other instanceof SemVer)) {\\n    other = new SemVer(other, this.options)\\n  }\\n\\n  return compareIdentifiers(this.major, other.major) ||\\n         compareIdentifiers(this.minor, other.minor) ||\\n         compareIdentifiers(this.patch, other.patch)\\n}\\n\\nSemVer.prototype.comparePre = function (other) {\\n  if (!(other instanceof SemVer)) {\\n    other = new SemVer(other, this.options)\\n  }\\n\\n  // NOT having a prerelease is > having one\\n  if (this.prerelease.length && !other.prerelease.length) {\\n    return -1\\n  } else if (!this.prerelease.length && other.prerelease.length) {\\n    return 1\\n  } else if (!this.prerelease.length && !other.prerelease.length) {\\n    return 0\\n  }\\n\\n  var i = 0\\n  do {\\n    var a = this.prerelease[i]\\n    var b = other.prerelease[i]\\n    debug('prerelease compare', i, a, b)\\n    if (a === undefined && b === undefined) {\\n      return 0\\n    } else if (b === undefined) {\\n      return 1\\n    } else if (a === undefined) {\\n      return -1\\n    } else if (a === b) {\\n      continue\\n    } else {\\n      return compareIdentifiers(a, b)\\n    }\\n  } while (++i)\\n}\\n\\nSemVer.prototype.compareBuild = function (other) {\\n  if (!(other instanceof SemVer)) {\\n    other = new SemVer(other, this.options)\\n  }\\n\\n  var i = 0\\n  do {\\n    var a = this.build[i]\\n    var b = other.build[i]\\n    debug('prerelease compare', i, a, b)\\n    if (a === undefined && b === undefined) {\\n      return 0\\n    } else if (b === undefined) {\\n      return 1\\n    } else if (a === undefined) {\\n      return -1\\n    } else if (a === b) {\\n      continue\\n    } else {\\n      return compareIdentifiers(a, b)\\n    }\\n  } while (++i)\\n}\\n\\n// preminor will bump the version up to the next minor release, and immediately\\n// down to pre-release. premajor and prepatch work the same way.\\nSemVer.prototype.inc = function (release, identifier) {\\n  switch (release) {\\n    case 'premajor':\\n      this.prerelease.length = 0\\n      this.patch = 0\\n      this.minor = 0\\n      this.major++\\n      this.inc('pre', identifier)\\n      break\\n    case 'preminor':\\n      this.prerelease.length = 0\\n      this.patch = 0\\n      this.minor++\\n      this.inc('pre', identifier)\\n      break\\n    case 'prepatch':\\n      // If this is already a prerelease, it will bump to the next version\\n      // drop any prereleases that might already exist, since they are not\\n      // relevant at this point.\\n      this.prerelease.length = 0\\n      this.inc('patch', identifier)\\n      this.inc('pre', identifier)\\n      break\\n    // If the input is a non-prerelease version, this acts the same as\\n    // prepatch.\\n    case 'prerelease':\\n      if (this.prerelease.length === 0) {\\n        this.inc('patch', identifier)\\n      }\\n      this.inc('pre', identifier)\\n      break\\n\\n    case 'major':\\n      // If this is a pre-major version, bump up to the same major version.\\n      // Otherwise increment major.\\n      // 1.0.0-5 bumps to 1.0.0\\n      // 1.1.0 bumps to 2.0.0\\n      if (this.minor !== 0 ||\\n          this.patch !== 0 ||\\n          this.prerelease.length === 0) {\\n        this.major++\\n      }\\n      this.minor = 0\\n      this.patch = 0\\n      this.prerelease = []\\n      break\\n    case 'minor':\\n      // If this is a pre-minor version, bump up to the same minor version.\\n      // Otherwise increment minor.\\n      // 1.2.0-5 bumps to 1.2.0\\n      // 1.2.1 bumps to 1.3.0\\n      if (this.patch !== 0 || this.prerelease.length === 0) {\\n        this.minor++\\n      }\\n      this.patch = 0\\n      this.prerelease = []\\n      break\\n    case 'patch':\\n      // If this is not a pre-release version, it will increment the patch.\\n      // If it is a pre-release it will bump up to the same patch version.\\n      // 1.2.0-5 patches to 1.2.0\\n      // 1.2.0 patches to 1.2.1\\n      if (this.prerelease.length === 0) {\\n        this.patch++\\n      }\\n      this.prerelease = []\\n      break\\n    // This probably shouldn't be used publicly.\\n    // 1.0.0 \\\"pre\\\" would become 1.0.0-0 which is the wrong direction.\\n    case 'pre':\\n      if (this.prerelease.length === 0) {\\n        this.prerelease = [0]\\n      } else {\\n        var i = this.prerelease.length\\n        while (--i >= 0) {\\n          if (typeof this.prerelease[i] === 'number') {\\n            this.prerelease[i]++\\n            i = -2\\n          }\\n        }\\n        if (i === -1) {\\n          // didn't increment anything\\n          this.prerelease.push(0)\\n        }\\n      }\\n      if (identifier) {\\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\\n        if (this.prerelease[0] === identifier) {\\n          if (isNaN(this.prerelease[1])) {\\n            this.prerelease = [identifier, 0]\\n          }\\n        } else {\\n          this.prerelease = [identifier, 0]\\n        }\\n      }\\n      break\\n\\n    default:\\n      throw new Error('invalid increment argument: ' + release)\\n  }\\n  this.format()\\n  this.raw = this.version\\n  return this\\n}\\n\\nexports.inc = inc\\nfunction inc (version, release, loose, identifier) {\\n  if (typeof (loose) === 'string') {\\n    identifier = loose\\n    loose = undefined\\n  }\\n\\n  try {\\n    return new SemVer(version, loose).inc(release, identifier).version\\n  } catch (er) {\\n    return null\\n  }\\n}\\n\\nexports.diff = diff\\nfunction diff (version1, version2) {\\n  if (eq(version1, version2)) {\\n    return null\\n  } else {\\n    var v1 = parse(version1)\\n    var v2 = parse(version2)\\n    var prefix = ''\\n    if (v1.prerelease.length || v2.prerelease.length) {\\n      prefix = 'pre'\\n      var defaultResult = 'prerelease'\\n    }\\n    for (var key in v1) {\\n      if (key === 'major' || key === 'minor' || key === 'patch') {\\n        if (v1[key] !== v2[key]) {\\n          return prefix + key\\n        }\\n      }\\n    }\\n    return defaultResult // may be undefined\\n  }\\n}\\n\\nexports.compareIdentifiers = compareIdentifiers\\n\\nvar numeric = /^[0-9]+$/\\nfunction compareIdentifiers (a, b) {\\n  var anum = numeric.test(a)\\n  var bnum = numeric.test(b)\\n\\n  if (anum && bnum) {\\n    a = +a\\n    b = +b\\n  }\\n\\n  return a === b ? 0\\n    : (anum && !bnum) ? -1\\n    : (bnum && !anum) ? 1\\n    : a < b ? -1\\n    : 1\\n}\\n\\nexports.rcompareIdentifiers = rcompareIdentifiers\\nfunction rcompareIdentifiers (a, b) {\\n  return compareIdentifiers(b, a)\\n}\\n\\nexports.major = major\\nfunction major (a, loose) {\\n  return new SemVer(a, loose).major\\n}\\n\\nexports.minor = minor\\nfunction minor (a, loose) {\\n  return new SemVer(a, loose).minor\\n}\\n\\nexports.patch = patch\\nfunction patch (a, loose) {\\n  return new SemVer(a, loose).patch\\n}\\n\\nexports.compare = compare\\nfunction compare (a, b, loose) {\\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\\n}\\n\\nexports.compareLoose = compareLoose\\nfunction compareLoose (a, b) {\\n  return compare(a, b, true)\\n}\\n\\nexports.compareBuild = compareBuild\\nfunction compareBuild (a, b, loose) {\\n  var versionA = new SemVer(a, loose)\\n  var versionB = new SemVer(b, loose)\\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\\n}\\n\\nexports.rcompare = rcompare\\nfunction rcompare (a, b, loose) {\\n  return compare(b, a, loose)\\n}\\n\\nexports.sort = sort\\nfunction sort (list, loose) {\\n  return list.sort(function (a, b) {\\n    return exports.compareBuild(a, b, loose)\\n  })\\n}\\n\\nexports.rsort = rsort\\nfunction rsort (list, loose) {\\n  return list.sort(function (a, b) {\\n    return exports.compareBuild(b, a, loose)\\n  })\\n}\\n\\nexports.gt = gt\\nfunction gt (a, b, loose) {\\n  return compare(a, b, loose) > 0\\n}\\n\\nexports.lt = lt\\nfunction lt (a, b, loose) {\\n  return compare(a, b, loose) < 0\\n}\\n\\nexports.eq = eq\\nfunction eq (a, b, loose) {\\n  return compare(a, b, loose) === 0\\n}\\n\\nexports.neq = neq\\nfunction neq (a, b, loose) {\\n  return compare(a, b, loose) !== 0\\n}\\n\\nexports.gte = gte\\nfunction gte (a, b, loose) {\\n  return compare(a, b, loose) >= 0\\n}\\n\\nexports.lte = lte\\nfunction lte (a, b, loose) {\\n  return compare(a, b, loose) <= 0\\n}\\n\\nexports.cmp = cmp\\nfunction cmp (a, op, b, loose) {\\n  switch (op) {\\n    case '===':\\n      if (typeof a === 'object')\\n        a = a.version\\n      if (typeof b === 'object')\\n        b = b.version\\n      return a === b\\n\\n    case '!==':\\n      if (typeof a === 'object')\\n        a = a.version\\n      if (typeof b === 'object')\\n        b = b.version\\n      return a !== b\\n\\n    case '':\\n    case '=':\\n    case '==':\\n      return eq(a, b, loose)\\n\\n    case '!=':\\n      return neq(a, b, loose)\\n\\n    case '>':\\n      return gt(a, b, loose)\\n\\n    case '>=':\\n      return gte(a, b, loose)\\n\\n    case '<':\\n      return lt(a, b, loose)\\n\\n    case '<=':\\n      return lte(a, b, loose)\\n\\n    default:\\n      throw new TypeError('Invalid operator: ' + op)\\n  }\\n}\\n\\nexports.Comparator = Comparator\\nfunction Comparator (comp, options) {\\n  if (!options || typeof options !== 'object') {\\n    options = {\\n      loose: !!options,\\n      includePrerelease: false\\n    }\\n  }\\n\\n  if (comp instanceof Comparator) {\\n    if (comp.loose === !!options.loose) {\\n      return comp\\n    } else {\\n      comp = comp.value\\n    }\\n  }\\n\\n  if (!(this instanceof Comparator)) {\\n    return new Comparator(comp, options)\\n  }\\n\\n  debug('comparator', comp, options)\\n  this.options = options\\n  this.loose = !!options.loose\\n  this.parse(comp)\\n\\n  if (this.semver === ANY) {\\n    this.value = ''\\n  } else {\\n    this.value = this.operator + this.semver.version\\n  }\\n\\n  debug('comp', this)\\n}\\n\\nvar ANY = {}\\nComparator.prototype.parse = function (comp) {\\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\\n  var m = comp.match(r)\\n\\n  if (!m) {\\n    throw new TypeError('Invalid comparator: ' + comp)\\n  }\\n\\n  this.operator = m[1] !== undefined ? m[1] : ''\\n  if (this.operator === '=') {\\n    this.operator = ''\\n  }\\n\\n  // if it literally is just '>' or '' then allow anything.\\n  if (!m[2]) {\\n    this.semver = ANY\\n  } else {\\n    this.semver = new SemVer(m[2], this.options.loose)\\n  }\\n}\\n\\nComparator.prototype.toString = function () {\\n  return this.value\\n}\\n\\nComparator.prototype.test = function (version) {\\n  debug('Comparator.test', version, this.options.loose)\\n\\n  if (this.semver === ANY || version === ANY) {\\n    return true\\n  }\\n\\n  if (typeof version === 'string') {\\n    try {\\n      version = new SemVer(version, this.options)\\n    } catch (er) {\\n      return false\\n    }\\n  }\\n\\n  return cmp(version, this.operator, this.semver, this.options)\\n}\\n\\nComparator.prototype.intersects = function (comp, options) {\\n  if (!(comp instanceof Comparator)) {\\n    throw new TypeError('a Comparator is required')\\n  }\\n\\n  if (!options || typeof options !== 'object') {\\n    options = {\\n      loose: !!options,\\n      includePrerelease: false\\n    }\\n  }\\n\\n  var rangeTmp\\n\\n  if (this.operator === '') {\\n    if (this.value === '') {\\n      return true\\n    }\\n    rangeTmp = new Range(comp.value, options)\\n    return satisfies(this.value, rangeTmp, options)\\n  } else if (comp.operator === '') {\\n    if (comp.value === '') {\\n      return true\\n    }\\n    rangeTmp = new Range(this.value, options)\\n    return satisfies(comp.semver, rangeTmp, options)\\n  }\\n\\n  var sameDirectionIncreasing =\\n    (this.operator === '>=' || this.operator === '>') &&\\n    (comp.operator === '>=' || comp.operator === '>')\\n  var sameDirectionDecreasing =\\n    (this.operator === '<=' || this.operator === '<') &&\\n    (comp.operator === '<=' || comp.operator === '<')\\n  var sameSemVer = this.semver.version === comp.semver.version\\n  var differentDirectionsInclusive =\\n    (this.operator === '>=' || this.operator === '<=') &&\\n    (comp.operator === '>=' || comp.operator === '<=')\\n  var oppositeDirectionsLessThan =\\n    cmp(this.semver, '<', comp.semver, options) &&\\n    ((this.operator === '>=' || this.operator === '>') &&\\n    (comp.operator === '<=' || comp.operator === '<'))\\n  var oppositeDirectionsGreaterThan =\\n    cmp(this.semver, '>', comp.semver, options) &&\\n    ((this.operator === '<=' || this.operator === '<') &&\\n    (comp.operator === '>=' || comp.operator === '>'))\\n\\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\\n    (sameSemVer && differentDirectionsInclusive) ||\\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\\n}\\n\\nexports.Range = Range\\nfunction Range (range, options) {\\n  if (!options || typeof options !== 'object') {\\n    options = {\\n      loose: !!options,\\n      includePrerelease: false\\n    }\\n  }\\n\\n  if (range instanceof Range) {\\n    if (range.loose === !!options.loose &&\\n        range.includePrerelease === !!options.includePrerelease) {\\n      return range\\n    } else {\\n      return new Range(range.raw, options)\\n    }\\n  }\\n\\n  if (range instanceof Comparator) {\\n    return new Range(range.value, options)\\n  }\\n\\n  if (!(this instanceof Range)) {\\n    return new Range(range, options)\\n  }\\n\\n  this.options = options\\n  this.loose = !!options.loose\\n  this.includePrerelease = !!options.includePrerelease\\n\\n  // First, split based on boolean or ||\\n  this.raw = range\\n  this.set = range.split(/\\\\s*\\\\|\\\\|\\\\s*/).map(function (range) {\\n    return this.parseRange(range.trim())\\n  }, this).filter(function (c) {\\n    // throw out any that are not relevant for whatever reason\\n    return c.length\\n  })\\n\\n  if (!this.set.length) {\\n    throw new TypeError('Invalid SemVer Range: ' + range)\\n  }\\n\\n  this.format()\\n}\\n\\nRange.prototype.format = function () {\\n  this.range = this.set.map(function (comps) {\\n    return comps.join(' ').trim()\\n  }).join('||').trim()\\n  return this.range\\n}\\n\\nRange.prototype.toString = function () {\\n  return this.range\\n}\\n\\nRange.prototype.parseRange = function (range) {\\n  var loose = this.options.loose\\n  range = range.trim()\\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\\n  range = range.replace(hr, hyphenReplace)\\n  debug('hyphen replace', range)\\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\\n\\n  // `~ 1.2.3` => `~1.2.3`\\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\\n\\n  // `^ 1.2.3` => `^1.2.3`\\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\\n\\n  // normalize spaces\\n  range = range.split(/\\\\s+/).join(' ')\\n\\n  // At this point, the range is completely trimmed and\\n  // ready to be split into comparators.\\n\\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\\n  var set = range.split(' ').map(function (comp) {\\n    return parseComparator(comp, this.options)\\n  }, this).join(' ').split(/\\\\s+/)\\n  if (this.options.loose) {\\n    // in loose mode, throw out any that are not valid comparators\\n    set = set.filter(function (comp) {\\n      return !!comp.match(compRe)\\n    })\\n  }\\n  set = set.map(function (comp) {\\n    return new Comparator(comp, this.options)\\n  }, this)\\n\\n  return set\\n}\\n\\nRange.prototype.intersects = function (range, options) {\\n  if (!(range instanceof Range)) {\\n    throw new TypeError('a Range is required')\\n  }\\n\\n  return this.set.some(function (thisComparators) {\\n    return (\\n      isSatisfiable(thisComparators, options) &&\\n      range.set.some(function (rangeComparators) {\\n        return (\\n          isSatisfiable(rangeComparators, options) &&\\n          thisComparators.every(function (thisComparator) {\\n            return rangeComparators.every(function (rangeComparator) {\\n              return thisComparator.intersects(rangeComparator, options)\\n            })\\n          })\\n        )\\n      })\\n    )\\n  })\\n}\\n\\n// take a set of comparators and determine whether there\\n// exists a version which can satisfy it\\nfunction isSatisfiable (comparators, options) {\\n  var result = true\\n  var remainingComparators = comparators.slice()\\n  var testComparator = remainingComparators.pop()\\n\\n  while (result && remainingComparators.length) {\\n    result = remainingComparators.every(function (otherComparator) {\\n      return testComparator.intersects(otherComparator, options)\\n    })\\n\\n    testComparator = remainingComparators.pop()\\n  }\\n\\n  return result\\n}\\n\\n// Mostly just for testing and legacy API reasons\\nexports.toComparators = toComparators\\nfunction toComparators (range, options) {\\n  return new Range(range, options).set.map(function (comp) {\\n    return comp.map(function (c) {\\n      return c.value\\n    }).join(' ').trim().split(' ')\\n  })\\n}\\n\\n// comprised of xranges, tildes, stars, and gtlt's at this point.\\n// already replaced the hyphen ranges\\n// turn into a set of JUST comparators.\\nfunction parseComparator (comp, options) {\\n  debug('comp', comp, options)\\n  comp = replaceCarets(comp, options)\\n  debug('caret', comp)\\n  comp = replaceTildes(comp, options)\\n  debug('tildes', comp)\\n  comp = replaceXRanges(comp, options)\\n  debug('xrange', comp)\\n  comp = replaceStars(comp, options)\\n  debug('stars', comp)\\n  return comp\\n}\\n\\nfunction isX (id) {\\n  return !id || id.toLowerCase() === 'x' || id === '*'\\n}\\n\\n// ~, ~> --> * (any, kinda silly)\\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\\nfunction replaceTildes (comp, options) {\\n  return comp.trim().split(/\\\\s+/).map(function (comp) {\\n    return replaceTilde(comp, options)\\n  }).join(' ')\\n}\\n\\nfunction replaceTilde (comp, options) {\\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\\n  return comp.replace(r, function (_, M, m, p, pr) {\\n    debug('tilde', comp, _, M, m, p, pr)\\n    var ret\\n\\n    if (isX(M)) {\\n      ret = ''\\n    } else if (isX(m)) {\\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\\n    } else if (isX(p)) {\\n      // ~1.2 == >=1.2.0 <1.3.0\\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\\n    } else if (pr) {\\n      debug('replaceTilde pr', pr)\\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\\n            ' <' + M + '.' + (+m + 1) + '.0'\\n    } else {\\n      // ~1.2.3 == >=1.2.3 <1.3.0\\n      ret = '>=' + M + '.' + m + '.' + p +\\n            ' <' + M + '.' + (+m + 1) + '.0'\\n    }\\n\\n    debug('tilde return', ret)\\n    return ret\\n  })\\n}\\n\\n// ^ --> * (any, kinda silly)\\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\\n// ^1.2.3 --> >=1.2.3 <2.0.0\\n// ^1.2.0 --> >=1.2.0 <2.0.0\\nfunction replaceCarets (comp, options) {\\n  return comp.trim().split(/\\\\s+/).map(function (comp) {\\n    return replaceCaret(comp, options)\\n  }).join(' ')\\n}\\n\\nfunction replaceCaret (comp, options) {\\n  debug('caret', comp, options)\\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\\n  return comp.replace(r, function (_, M, m, p, pr) {\\n    debug('caret', comp, _, M, m, p, pr)\\n    var ret\\n\\n    if (isX(M)) {\\n      ret = ''\\n    } else if (isX(m)) {\\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\\n    } else if (isX(p)) {\\n      if (M === '0') {\\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\\n      } else {\\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\\n      }\\n    } else if (pr) {\\n      debug('replaceCaret pr', pr)\\n      if (M === '0') {\\n        if (m === '0') {\\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\\n                ' <' + M + '.' + m + '.' + (+p + 1)\\n        } else {\\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\\n                ' <' + M + '.' + (+m + 1) + '.0'\\n        }\\n      } else {\\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\\n              ' <' + (+M + 1) + '.0.0'\\n      }\\n    } else {\\n      debug('no pr')\\n      if (M === '0') {\\n        if (m === '0') {\\n          ret = '>=' + M + '.' + m + '.' + p +\\n                ' <' + M + '.' + m + '.' + (+p + 1)\\n        } else {\\n          ret = '>=' + M + '.' + m + '.' + p +\\n                ' <' + M + '.' + (+m + 1) + '.0'\\n        }\\n      } else {\\n        ret = '>=' + M + '.' + m + '.' + p +\\n              ' <' + (+M + 1) + '.0.0'\\n      }\\n    }\\n\\n    debug('caret return', ret)\\n    return ret\\n  })\\n}\\n\\nfunction replaceXRanges (comp, options) {\\n  debug('replaceXRanges', comp, options)\\n  return comp.split(/\\\\s+/).map(function (comp) {\\n    return replaceXRange(comp, options)\\n  }).join(' ')\\n}\\n\\nfunction replaceXRange (comp, options) {\\n  comp = comp.trim()\\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\\n    var xM = isX(M)\\n    var xm = xM || isX(m)\\n    var xp = xm || isX(p)\\n    var anyX = xp\\n\\n    if (gtlt === '=' && anyX) {\\n      gtlt = ''\\n    }\\n\\n    // if we're including prereleases in the match, then we need\\n    // to fix this to -0, the lowest possible prerelease value\\n    pr = options.includePrerelease ? '-0' : ''\\n\\n    if (xM) {\\n      if (gtlt === '>' || gtlt === '<') {\\n        // nothing is allowed\\n        ret = '<0.0.0-0'\\n      } else {\\n        // nothing is forbidden\\n        ret = '*'\\n      }\\n    } else if (gtlt && anyX) {\\n      // we know patch is an x, because we have any x at all.\\n      // replace X with 0\\n      if (xm) {\\n        m = 0\\n      }\\n      p = 0\\n\\n      if (gtlt === '>') {\\n        // >1 => >=2.0.0\\n        // >1.2 => >=1.3.0\\n        // >1.2.3 => >= 1.2.4\\n        gtlt = '>='\\n        if (xm) {\\n          M = +M + 1\\n          m = 0\\n          p = 0\\n        } else {\\n          m = +m + 1\\n          p = 0\\n        }\\n      } else if (gtlt === '<=') {\\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\\n        gtlt = '<'\\n        if (xm) {\\n          M = +M + 1\\n        } else {\\n          m = +m + 1\\n        }\\n      }\\n\\n      ret = gtlt + M + '.' + m + '.' + p + pr\\n    } else if (xm) {\\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\\n    } else if (xp) {\\n      ret = '>=' + M + '.' + m + '.0' + pr +\\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\\n    }\\n\\n    debug('xRange return', ret)\\n\\n    return ret\\n  })\\n}\\n\\n// Because * is AND-ed with everything else in the comparator,\\n// and '' means \\\"any version\\\", just remove the *s entirely.\\nfunction replaceStars (comp, options) {\\n  debug('replaceStars', comp, options)\\n  // Looseness is ignored here.  star is always as loose as it gets!\\n  return comp.trim().replace(re[t.STAR], '')\\n}\\n\\n// This function is passed to string.replace(re[t.HYPHENRANGE])\\n// M, m, patch, prerelease, build\\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\\nfunction hyphenReplace ($0,\\n  from, fM, fm, fp, fpr, fb,\\n  to, tM, tm, tp, tpr, tb) {\\n  if (isX(fM)) {\\n    from = ''\\n  } else if (isX(fm)) {\\n    from = '>=' + fM + '.0.0'\\n  } else if (isX(fp)) {\\n    from = '>=' + fM + '.' + fm + '.0'\\n  } else {\\n    from = '>=' + from\\n  }\\n\\n  if (isX(tM)) {\\n    to = ''\\n  } else if (isX(tm)) {\\n    to = '<' + (+tM + 1) + '.0.0'\\n  } else if (isX(tp)) {\\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\\n  } else if (tpr) {\\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\\n  } else {\\n    to = '<=' + to\\n  }\\n\\n  return (from + ' ' + to).trim()\\n}\\n\\n// if ANY of the sets match ALL of its comparators, then pass\\nRange.prototype.test = function (version) {\\n  if (!version) {\\n    return false\\n  }\\n\\n  if (typeof version === 'string') {\\n    try {\\n      version = new SemVer(version, this.options)\\n    } catch (er) {\\n      return false\\n    }\\n  }\\n\\n  for (var i = 0; i < this.set.length; i++) {\\n    if (testSet(this.set[i], version, this.options)) {\\n      return true\\n    }\\n  }\\n  return false\\n}\\n\\nfunction testSet (set, version, options) {\\n  for (var i = 0; i < set.length; i++) {\\n    if (!set[i].test(version)) {\\n      return false\\n    }\\n  }\\n\\n  if (version.prerelease.length && !options.includePrerelease) {\\n    // Find the set of versions that are allowed to have prereleases\\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\\n    // That should allow `1.2.3-pr.2` to pass.\\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\\n    // even though it's within the range set by the comparators.\\n    for (i = 0; i < set.length; i++) {\\n      debug(set[i].semver)\\n      if (set[i].semver === ANY) {\\n        continue\\n      }\\n\\n      if (set[i].semver.prerelease.length > 0) {\\n        var allowed = set[i].semver\\n        if (allowed.major === version.major &&\\n            allowed.minor === version.minor &&\\n            allowed.patch === version.patch) {\\n          return true\\n        }\\n      }\\n    }\\n\\n    // Version has a -pre, but it's not one of the ones we like.\\n    return false\\n  }\\n\\n  return true\\n}\\n\\nexports.satisfies = satisfies\\nfunction satisfies (version, range, options) {\\n  try {\\n    range = new Range(range, options)\\n  } catch (er) {\\n    return false\\n  }\\n  return range.test(version)\\n}\\n\\nexports.maxSatisfying = maxSatisfying\\nfunction maxSatisfying (versions, range, options) {\\n  var max = null\\n  var maxSV = null\\n  try {\\n    var rangeObj = new Range(range, options)\\n  } catch (er) {\\n    return null\\n  }\\n  versions.forEach(function (v) {\\n    if (rangeObj.test(v)) {\\n      // satisfies(v, range, options)\\n      if (!max || maxSV.compare(v) === -1) {\\n        // compare(max, v, true)\\n        max = v\\n        maxSV = new SemVer(max, options)\\n      }\\n    }\\n  })\\n  return max\\n}\\n\\nexports.minSatisfying = minSatisfying\\nfunction minSatisfying (versions, range, options) {\\n  var min = null\\n  var minSV = null\\n  try {\\n    var rangeObj = new Range(range, options)\\n  } catch (er) {\\n    return null\\n  }\\n  versions.forEach(function (v) {\\n    if (rangeObj.test(v)) {\\n      // satisfies(v, range, options)\\n      if (!min || minSV.compare(v) === 1) {\\n        // compare(min, v, true)\\n        min = v\\n        minSV = new SemVer(min, options)\\n      }\\n    }\\n  })\\n  return min\\n}\\n\\nexports.minVersion = minVersion\\nfunction minVersion (range, loose) {\\n  range = new Range(range, loose)\\n\\n  var minver = new SemVer('0.0.0')\\n  if (range.test(minver)) {\\n    return minver\\n  }\\n\\n  minver = new SemVer('0.0.0-0')\\n  if (range.test(minver)) {\\n    return minver\\n  }\\n\\n  minver = null\\n  for (var i = 0; i < range.set.length; ++i) {\\n    var comparators = range.set[i]\\n\\n    comparators.forEach(function (comparator) {\\n      // Clone to avoid manipulating the comparator's semver object.\\n      var compver = new SemVer(comparator.semver.version)\\n      switch (comparator.operator) {\\n        case '>':\\n          if (compver.prerelease.length === 0) {\\n            compver.patch++\\n          } else {\\n            compver.prerelease.push(0)\\n          }\\n          compver.raw = compver.format()\\n          /* fallthrough */\\n        case '':\\n        case '>=':\\n          if (!minver || gt(minver, compver)) {\\n            minver = compver\\n          }\\n          break\\n        case '<':\\n        case '<=':\\n          /* Ignore maximum versions */\\n          break\\n        /* istanbul ignore next */\\n        default:\\n          throw new Error('Unexpected operation: ' + comparator.operator)\\n      }\\n    })\\n  }\\n\\n  if (minver && range.test(minver)) {\\n    return minver\\n  }\\n\\n  return null\\n}\\n\\nexports.validRange = validRange\\nfunction validRange (range, options) {\\n  try {\\n    // Return '*' instead of '' so that truthiness works.\\n    // This will throw if it's invalid anyway\\n    return new Range(range, options).range || '*'\\n  } catch (er) {\\n    return null\\n  }\\n}\\n\\n// Determine if version is less than all the versions possible in the range\\nexports.ltr = ltr\\nfunction ltr (version, range, options) {\\n  return outside(version, range, '<', options)\\n}\\n\\n// Determine if version is greater than all the versions possible in the range.\\nexports.gtr = gtr\\nfunction gtr (version, range, options) {\\n  return outside(version, range, '>', options)\\n}\\n\\nexports.outside = outside\\nfunction outside (version, range, hilo, options) {\\n  version = new SemVer(version, options)\\n  range = new Range(range, options)\\n\\n  var gtfn, ltefn, ltfn, comp, ecomp\\n  switch (hilo) {\\n    case '>':\\n      gtfn = gt\\n      ltefn = lte\\n      ltfn = lt\\n      comp = '>'\\n      ecomp = '>='\\n      break\\n    case '<':\\n      gtfn = lt\\n      ltefn = gte\\n      ltfn = gt\\n      comp = '<'\\n      ecomp = '<='\\n      break\\n    default:\\n      throw new TypeError('Must provide a hilo val of \\\"<\\\" or \\\">\\\"')\\n  }\\n\\n  // If it satisifes the range it is not outside\\n  if (satisfies(version, range, options)) {\\n    return false\\n  }\\n\\n  // From now on, variable terms are as if we're in \\\"gtr\\\" mode.\\n  // but note that everything is flipped for the \\\"ltr\\\" function.\\n\\n  for (var i = 0; i < range.set.length; ++i) {\\n    var comparators = range.set[i]\\n\\n    var high = null\\n    var low = null\\n\\n    comparators.forEach(function (comparator) {\\n      if (comparator.semver === ANY) {\\n        comparator = new Comparator('>=0.0.0')\\n      }\\n      high = high || comparator\\n      low = low || comparator\\n      if (gtfn(comparator.semver, high.semver, options)) {\\n        high = comparator\\n      } else if (ltfn(comparator.semver, low.semver, options)) {\\n        low = comparator\\n      }\\n    })\\n\\n    // If the edge version comparator has a operator then our version\\n    // isn't outside it\\n    if (high.operator === comp || high.operator === ecomp) {\\n      return false\\n    }\\n\\n    // If the lowest version comparator has an operator and our version\\n    // is less than it then it isn't higher than the range\\n    if ((!low.operator || low.operator === comp) &&\\n        ltefn(version, low.semver)) {\\n      return false\\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\\nexports.prerelease = prerelease\\nfunction prerelease (version, options) {\\n  var parsed = parse(version, options)\\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\\n}\\n\\nexports.intersects = intersects\\nfunction intersects (r1, r2, options) {\\n  r1 = new Range(r1, options)\\n  r2 = new Range(r2, options)\\n  return r1.intersects(r2)\\n}\\n\\nexports.coerce = coerce\\nfunction coerce (version, options) {\\n  if (version instanceof SemVer) {\\n    return version\\n  }\\n\\n  if (typeof version === 'number') {\\n    version = String(version)\\n  }\\n\\n  if (typeof version !== 'string') {\\n    return null\\n  }\\n\\n  options = options || {}\\n\\n  var match = null\\n  if (!options.rtl) {\\n    match = version.match(re[t.COERCE])\\n  } else {\\n    // Find the right-most coercible string that does not share\\n    // a terminus with a more left-ward coercible string.\\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\\n    //\\n    // Walk through the string checking with a /g regexp\\n    // Manually set the index so as to pick up overlapping matches.\\n    // Stop when we get a match that ends at the string end, since no\\n    // coercible string can be more right-ward without the same terminus.\\n    var next\\n    while ((next = re[t.COERCERTL].exec(version)) &&\\n      (!match || match.index + match[0].length !== version.length)\\n    ) {\\n      if (!match ||\\n          next.index + next[0].length !== match.index + match[0].length) {\\n        match = next\\n      }\\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\\n    }\\n    // leave it in a clean state\\n    re[t.COERCERTL].lastIndex = -1\\n  }\\n\\n  if (match === null) {\\n    return null\\n  }\\n\\n  return parse(match[2] +\\n    '.' + (match[3] || '0') +\\n    '.' + (match[4] || '0'), options)\\n}\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst is = require(\\\"./is\\\");\\r\\n/**\\r\\n * Predefined error codes.\\r\\n */\\r\\nvar ErrorCodes;\\r\\n(function (ErrorCodes) {\\r\\n    // Defined by JSON RPC\\r\\n    ErrorCodes.ParseError = -32700;\\r\\n    ErrorCodes.InvalidRequest = -32600;\\r\\n    ErrorCodes.MethodNotFound = -32601;\\r\\n    ErrorCodes.InvalidParams = -32602;\\r\\n    ErrorCodes.InternalError = -32603;\\r\\n    ErrorCodes.serverErrorStart = -32099;\\r\\n    ErrorCodes.serverErrorEnd = -32000;\\r\\n    ErrorCodes.ServerNotInitialized = -32002;\\r\\n    ErrorCodes.UnknownErrorCode = -32001;\\r\\n    // Defined by the protocol.\\r\\n    ErrorCodes.RequestCancelled = -32800;\\r\\n    ErrorCodes.ContentModified = -32801;\\r\\n    // Defined by VSCode library.\\r\\n    ErrorCodes.MessageWriteError = 1;\\r\\n    ErrorCodes.MessageReadError = 2;\\r\\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\\r\\n/**\\r\\n * An error object return in a response in case a request\\r\\n * has failed.\\r\\n */\\r\\nclass ResponseError extends Error {\\r\\n    constructor(code, message, data) {\\r\\n        super(message);\\r\\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\\r\\n        this.data = data;\\r\\n        Object.setPrototypeOf(this, ResponseError.prototype);\\r\\n    }\\r\\n    toJson() {\\r\\n        return {\\r\\n            code: this.code,\\r\\n            message: this.message,\\r\\n            data: this.data,\\r\\n        };\\r\\n    }\\r\\n}\\r\\nexports.ResponseError = ResponseError;\\r\\n/**\\r\\n * An abstract implementation of a MessageType.\\r\\n */\\r\\nclass AbstractMessageType {\\r\\n    constructor(_method, _numberOfParams) {\\r\\n        this._method = _method;\\r\\n        this._numberOfParams = _numberOfParams;\\r\\n    }\\r\\n    get method() {\\r\\n        return this._method;\\r\\n    }\\r\\n    get numberOfParams() {\\r\\n        return this._numberOfParams;\\r\\n    }\\r\\n}\\r\\nexports.AbstractMessageType = AbstractMessageType;\\r\\n/**\\r\\n * Classes to type request response pairs\\r\\n *\\r\\n * The type parameter RO will be removed in the next major version\\r\\n * of the JSON RPC library since it is a LSP concept and doesn't\\r\\n * belong here. For now it is tagged as default never.\\r\\n */\\r\\nclass RequestType0 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 0);\\r\\n    }\\r\\n}\\r\\nexports.RequestType0 = RequestType0;\\r\\nclass RequestType extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 1);\\r\\n    }\\r\\n}\\r\\nexports.RequestType = RequestType;\\r\\nclass RequestType1 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 1);\\r\\n    }\\r\\n}\\r\\nexports.RequestType1 = RequestType1;\\r\\nclass RequestType2 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 2);\\r\\n    }\\r\\n}\\r\\nexports.RequestType2 = RequestType2;\\r\\nclass RequestType3 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 3);\\r\\n    }\\r\\n}\\r\\nexports.RequestType3 = RequestType3;\\r\\nclass RequestType4 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 4);\\r\\n    }\\r\\n}\\r\\nexports.RequestType4 = RequestType4;\\r\\nclass RequestType5 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 5);\\r\\n    }\\r\\n}\\r\\nexports.RequestType5 = RequestType5;\\r\\nclass RequestType6 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 6);\\r\\n    }\\r\\n}\\r\\nexports.RequestType6 = RequestType6;\\r\\nclass RequestType7 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 7);\\r\\n    }\\r\\n}\\r\\nexports.RequestType7 = RequestType7;\\r\\nclass RequestType8 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 8);\\r\\n    }\\r\\n}\\r\\nexports.RequestType8 = RequestType8;\\r\\nclass RequestType9 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 9);\\r\\n    }\\r\\n}\\r\\nexports.RequestType9 = RequestType9;\\r\\n/**\\r\\n * The type parameter RO will be removed in the next major version\\r\\n * of the JSON RPC library since it is a LSP concept and doesn't\\r\\n * belong here. For now it is tagged as default never.\\r\\n */\\r\\nclass NotificationType extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 1);\\r\\n        this._ = undefined;\\r\\n    }\\r\\n}\\r\\nexports.NotificationType = NotificationType;\\r\\nclass NotificationType0 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 0);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType0 = NotificationType0;\\r\\nclass NotificationType1 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 1);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType1 = NotificationType1;\\r\\nclass NotificationType2 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 2);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType2 = NotificationType2;\\r\\nclass NotificationType3 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 3);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType3 = NotificationType3;\\r\\nclass NotificationType4 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 4);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType4 = NotificationType4;\\r\\nclass NotificationType5 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 5);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType5 = NotificationType5;\\r\\nclass NotificationType6 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 6);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType6 = NotificationType6;\\r\\nclass NotificationType7 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 7);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType7 = NotificationType7;\\r\\nclass NotificationType8 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 8);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType8 = NotificationType8;\\r\\nclass NotificationType9 extends AbstractMessageType {\\r\\n    constructor(method) {\\r\\n        super(method, 9);\\r\\n    }\\r\\n}\\r\\nexports.NotificationType9 = NotificationType9;\\r\\n/**\\r\\n * Tests if the given message is a request message\\r\\n */\\r\\nfunction isRequestMessage(message) {\\r\\n    let candidate = message;\\r\\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\\r\\n}\\r\\nexports.isRequestMessage = isRequestMessage;\\r\\n/**\\r\\n * Tests if the given message is a notification message\\r\\n */\\r\\nfunction isNotificationMessage(message) {\\r\\n    let candidate = message;\\r\\n    return candidate && is.string(candidate.method) && message.id === void 0;\\r\\n}\\r\\nexports.isNotificationMessage = isNotificationMessage;\\r\\n/**\\r\\n * Tests if the given message is a response message\\r\\n */\\r\\nfunction isResponseMessage(message) {\\r\\n    let candidate = message;\\r\\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\\r\\n}\\r\\nexports.isResponseMessage = isResponseMessage;\\r\\n\",\"/*---------------------------------------------------------------------------------------------\\r\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n *--------------------------------------------------------------------------------------------*/\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst events_1 = require(\\\"./events\\\");\\r\\nconst Is = require(\\\"./is\\\");\\r\\nvar CancellationToken;\\r\\n(function (CancellationToken) {\\r\\n    CancellationToken.None = Object.freeze({\\r\\n        isCancellationRequested: false,\\r\\n        onCancellationRequested: events_1.Event.None\\r\\n    });\\r\\n    CancellationToken.Cancelled = Object.freeze({\\r\\n        isCancellationRequested: true,\\r\\n        onCancellationRequested: events_1.Event.None\\r\\n    });\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && (candidate === CancellationToken.None\\r\\n            || candidate === CancellationToken.Cancelled\\r\\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\\r\\n    }\\r\\n    CancellationToken.is = is;\\r\\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\\r\\nconst shortcutEvent = Object.freeze(function (callback, context) {\\r\\n    let handle = setTimeout(callback.bind(context), 0);\\r\\n    return { dispose() { clearTimeout(handle); } };\\r\\n});\\r\\nclass MutableToken {\\r\\n    constructor() {\\r\\n        this._isCancelled = false;\\r\\n    }\\r\\n    cancel() {\\r\\n        if (!this._isCancelled) {\\r\\n            this._isCancelled = true;\\r\\n            if (this._emitter) {\\r\\n                this._emitter.fire(undefined);\\r\\n                this.dispose();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    get isCancellationRequested() {\\r\\n        return this._isCancelled;\\r\\n    }\\r\\n    get onCancellationRequested() {\\r\\n        if (this._isCancelled) {\\r\\n            return shortcutEvent;\\r\\n        }\\r\\n        if (!this._emitter) {\\r\\n            this._emitter = new events_1.Emitter();\\r\\n        }\\r\\n        return this._emitter.event;\\r\\n    }\\r\\n    dispose() {\\r\\n        if (this._emitter) {\\r\\n            this._emitter.dispose();\\r\\n            this._emitter = undefined;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nclass CancellationTokenSource {\\r\\n    get token() {\\r\\n        if (!this._token) {\\r\\n            // be lazy and create the token only when\\r\\n            // actually needed\\r\\n            this._token = new MutableToken();\\r\\n        }\\r\\n        return this._token;\\r\\n    }\\r\\n    cancel() {\\r\\n        if (!this._token) {\\r\\n            // save an object by returning the default\\r\\n            // cancelled token when cancellation happens\\r\\n            // before someone asks for the token\\r\\n            this._token = CancellationToken.Cancelled;\\r\\n        }\\r\\n        else {\\r\\n            this._token.cancel();\\r\\n        }\\r\\n    }\\r\\n    dispose() {\\r\\n        if (!this._token) {\\r\\n            // ensure to initialize with an empty token if we had none\\r\\n            this._token = CancellationToken.None;\\r\\n        }\\r\\n        else if (this._token instanceof MutableToken) {\\r\\n            // actually dispose\\r\\n            this._token.dispose();\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.CancellationTokenSource = CancellationTokenSource;\\r\\n\",\"\\\"use strict\\\";\\r\\n/*---------------------------------------------------------------------------------------------\\r\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n *--------------------------------------------------------------------------------------------*/\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar Touch;\\r\\n(function (Touch) {\\r\\n    Touch.None = 0;\\r\\n    Touch.First = 1;\\r\\n    Touch.Last = 2;\\r\\n})(Touch = exports.Touch || (exports.Touch = {}));\\r\\nclass LinkedMap {\\r\\n    constructor() {\\r\\n        this._map = new Map();\\r\\n        this._head = undefined;\\r\\n        this._tail = undefined;\\r\\n        this._size = 0;\\r\\n    }\\r\\n    clear() {\\r\\n        this._map.clear();\\r\\n        this._head = undefined;\\r\\n        this._tail = undefined;\\r\\n        this._size = 0;\\r\\n    }\\r\\n    isEmpty() {\\r\\n        return !this._head && !this._tail;\\r\\n    }\\r\\n    get size() {\\r\\n        return this._size;\\r\\n    }\\r\\n    has(key) {\\r\\n        return this._map.has(key);\\r\\n    }\\r\\n    get(key) {\\r\\n        const item = this._map.get(key);\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return item.value;\\r\\n    }\\r\\n    set(key, value, touch = Touch.None) {\\r\\n        let item = this._map.get(key);\\r\\n        if (item) {\\r\\n            item.value = value;\\r\\n            if (touch !== Touch.None) {\\r\\n                this.touch(item, touch);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            item = { key, value, next: undefined, previous: undefined };\\r\\n            switch (touch) {\\r\\n                case Touch.None:\\r\\n                    this.addItemLast(item);\\r\\n                    break;\\r\\n                case Touch.First:\\r\\n                    this.addItemFirst(item);\\r\\n                    break;\\r\\n                case Touch.Last:\\r\\n                    this.addItemLast(item);\\r\\n                    break;\\r\\n                default:\\r\\n                    this.addItemLast(item);\\r\\n                    break;\\r\\n            }\\r\\n            this._map.set(key, item);\\r\\n            this._size++;\\r\\n        }\\r\\n    }\\r\\n    delete(key) {\\r\\n        const item = this._map.get(key);\\r\\n        if (!item) {\\r\\n            return false;\\r\\n        }\\r\\n        this._map.delete(key);\\r\\n        this.removeItem(item);\\r\\n        this._size--;\\r\\n        return true;\\r\\n    }\\r\\n    shift() {\\r\\n        if (!this._head && !this._tail) {\\r\\n            return undefined;\\r\\n        }\\r\\n        if (!this._head || !this._tail) {\\r\\n            throw new Error('Invalid list');\\r\\n        }\\r\\n        const item = this._head;\\r\\n        this._map.delete(item.key);\\r\\n        this.removeItem(item);\\r\\n        this._size--;\\r\\n        return item.value;\\r\\n    }\\r\\n    forEach(callbackfn, thisArg) {\\r\\n        let current = this._head;\\r\\n        while (current) {\\r\\n            if (thisArg) {\\r\\n                callbackfn.bind(thisArg)(current.value, current.key, this);\\r\\n            }\\r\\n            else {\\r\\n                callbackfn(current.value, current.key, this);\\r\\n            }\\r\\n            current = current.next;\\r\\n        }\\r\\n    }\\r\\n    forEachReverse(callbackfn, thisArg) {\\r\\n        let current = this._tail;\\r\\n        while (current) {\\r\\n            if (thisArg) {\\r\\n                callbackfn.bind(thisArg)(current.value, current.key, this);\\r\\n            }\\r\\n            else {\\r\\n                callbackfn(current.value, current.key, this);\\r\\n            }\\r\\n            current = current.previous;\\r\\n        }\\r\\n    }\\r\\n    values() {\\r\\n        let result = [];\\r\\n        let current = this._head;\\r\\n        while (current) {\\r\\n            result.push(current.value);\\r\\n            current = current.next;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    keys() {\\r\\n        let result = [];\\r\\n        let current = this._head;\\r\\n        while (current) {\\r\\n            result.push(current.key);\\r\\n            current = current.next;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    /* JSON RPC run on es5 which has no Symbol.iterator\\r\\n    public keys(): IterableIterator<K> {\\r\\n        let current = this._head;\\r\\n        let iterator: IterableIterator<K> = {\\r\\n            [Symbol.iterator]() {\\r\\n                return iterator;\\r\\n            },\\r\\n            next():IteratorResult<K> {\\r\\n                if (current) {\\r\\n                    let result = { value: current.key, done: false };\\r\\n                    current = current.next;\\r\\n                    return result;\\r\\n                } else {\\r\\n                    return { value: undefined, done: true };\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return iterator;\\r\\n    }\\r\\n\\r\\n    public values(): IterableIterator<V> {\\r\\n        let current = this._head;\\r\\n        let iterator: IterableIterator<V> = {\\r\\n            [Symbol.iterator]() {\\r\\n                return iterator;\\r\\n            },\\r\\n            next():IteratorResult<V> {\\r\\n                if (current) {\\r\\n                    let result = { value: current.value, done: false };\\r\\n                    current = current.next;\\r\\n                    return result;\\r\\n                } else {\\r\\n                    return { value: undefined, done: true };\\r\\n                }\\r\\n            }\\r\\n        };\\r\\n        return iterator;\\r\\n    }\\r\\n    */\\r\\n    addItemFirst(item) {\\r\\n        // First time Insert\\r\\n        if (!this._head && !this._tail) {\\r\\n            this._tail = item;\\r\\n        }\\r\\n        else if (!this._head) {\\r\\n            throw new Error('Invalid list');\\r\\n        }\\r\\n        else {\\r\\n            item.next = this._head;\\r\\n            this._head.previous = item;\\r\\n        }\\r\\n        this._head = item;\\r\\n    }\\r\\n    addItemLast(item) {\\r\\n        // First time Insert\\r\\n        if (!this._head && !this._tail) {\\r\\n            this._head = item;\\r\\n        }\\r\\n        else if (!this._tail) {\\r\\n            throw new Error('Invalid list');\\r\\n        }\\r\\n        else {\\r\\n            item.previous = this._tail;\\r\\n            this._tail.next = item;\\r\\n        }\\r\\n        this._tail = item;\\r\\n    }\\r\\n    removeItem(item) {\\r\\n        if (item === this._head && item === this._tail) {\\r\\n            this._head = undefined;\\r\\n            this._tail = undefined;\\r\\n        }\\r\\n        else if (item === this._head) {\\r\\n            this._head = item.next;\\r\\n        }\\r\\n        else if (item === this._tail) {\\r\\n            this._tail = item.previous;\\r\\n        }\\r\\n        else {\\r\\n            const next = item.next;\\r\\n            const previous = item.previous;\\r\\n            if (!next || !previous) {\\r\\n                throw new Error('Invalid list');\\r\\n            }\\r\\n            next.previous = previous;\\r\\n            previous.next = next;\\r\\n        }\\r\\n    }\\r\\n    touch(item, touch) {\\r\\n        if (!this._head || !this._tail) {\\r\\n            throw new Error('Invalid list');\\r\\n        }\\r\\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\\r\\n            return;\\r\\n        }\\r\\n        if (touch === Touch.First) {\\r\\n            if (item === this._head) {\\r\\n                return;\\r\\n            }\\r\\n            const next = item.next;\\r\\n            const previous = item.previous;\\r\\n            // Unlink the item\\r\\n            if (item === this._tail) {\\r\\n                // previous must be defined since item was not head but is tail\\r\\n                // So there are more than on item in the map\\r\\n                previous.next = undefined;\\r\\n                this._tail = previous;\\r\\n            }\\r\\n            else {\\r\\n                // Both next and previous are not undefined since item was neither head nor tail.\\r\\n                next.previous = previous;\\r\\n                previous.next = next;\\r\\n            }\\r\\n            // Insert the node at head\\r\\n            item.previous = undefined;\\r\\n            item.next = this._head;\\r\\n            this._head.previous = item;\\r\\n            this._head = item;\\r\\n        }\\r\\n        else if (touch === Touch.Last) {\\r\\n            if (item === this._tail) {\\r\\n                return;\\r\\n            }\\r\\n            const next = item.next;\\r\\n            const previous = item.previous;\\r\\n            // Unlink the item.\\r\\n            if (item === this._head) {\\r\\n                // next must be defined since item was not tail but is head\\r\\n                // So there are more than on item in the map\\r\\n                next.previous = undefined;\\r\\n                this._head = next;\\r\\n            }\\r\\n            else {\\r\\n                // Both next and previous are not undefined since item was neither head nor tail.\\r\\n                next.previous = previous;\\r\\n                previous.next = next;\\r\\n            }\\r\\n            item.next = undefined;\\r\\n            item.previous = this._tail;\\r\\n            this._tail.next = item;\\r\\n            this._tail = item;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.LinkedMap = LinkedMap;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst path_1 = require(\\\"path\\\");\\r\\nconst os_1 = require(\\\"os\\\");\\r\\nconst crypto_1 = require(\\\"crypto\\\");\\r\\nconst net_1 = require(\\\"net\\\");\\r\\nconst messageReader_1 = require(\\\"./messageReader\\\");\\r\\nconst messageWriter_1 = require(\\\"./messageWriter\\\");\\r\\nfunction generateRandomPipeName() {\\r\\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\\r\\n    if (process.platform === 'win32') {\\r\\n        return `\\\\\\\\\\\\\\\\.\\\\\\\\pipe\\\\\\\\vscode-jsonrpc-${randomSuffix}-sock`;\\r\\n    }\\r\\n    else {\\r\\n        // Mac/Unix: use socket file\\r\\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\\r\\n    }\\r\\n}\\r\\nexports.generateRandomPipeName = generateRandomPipeName;\\r\\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\\r\\n    let connectResolve;\\r\\n    let connected = new Promise((resolve, _reject) => {\\r\\n        connectResolve = resolve;\\r\\n    });\\r\\n    return new Promise((resolve, reject) => {\\r\\n        let server = net_1.createServer((socket) => {\\r\\n            server.close();\\r\\n            connectResolve([\\r\\n                new messageReader_1.SocketMessageReader(socket, encoding),\\r\\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\\r\\n            ]);\\r\\n        });\\r\\n        server.on('error', reject);\\r\\n        server.listen(pipeName, () => {\\r\\n            server.removeListener('error', reject);\\r\\n            resolve({\\r\\n                onConnected: () => { return connected; }\\r\\n            });\\r\\n        });\\r\\n    });\\r\\n}\\r\\nexports.createClientPipeTransport = createClientPipeTransport;\\r\\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\\r\\n    const socket = net_1.createConnection(pipeName);\\r\\n    return [\\r\\n        new messageReader_1.SocketMessageReader(socket, encoding),\\r\\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\\r\\n    ];\\r\\n}\\r\\nexports.createServerPipeTransport = createServerPipeTransport;\\r\\n\",\"module.exports = require(\\\"os\\\");\",\"module.exports = require(\\\"crypto\\\");\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst net_1 = require(\\\"net\\\");\\r\\nconst messageReader_1 = require(\\\"./messageReader\\\");\\r\\nconst messageWriter_1 = require(\\\"./messageWriter\\\");\\r\\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\\r\\n    let connectResolve;\\r\\n    let connected = new Promise((resolve, _reject) => {\\r\\n        connectResolve = resolve;\\r\\n    });\\r\\n    return new Promise((resolve, reject) => {\\r\\n        let server = net_1.createServer((socket) => {\\r\\n            server.close();\\r\\n            connectResolve([\\r\\n                new messageReader_1.SocketMessageReader(socket, encoding),\\r\\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\\r\\n            ]);\\r\\n        });\\r\\n        server.on('error', reject);\\r\\n        server.listen(port, '127.0.0.1', () => {\\r\\n            server.removeListener('error', reject);\\r\\n            resolve({\\r\\n                onConnected: () => { return connected; }\\r\\n            });\\r\\n        });\\r\\n    });\\r\\n}\\r\\nexports.createClientSocketTransport = createClientSocketTransport;\\r\\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\\r\\n    const socket = net_1.createConnection(port, '127.0.0.1');\\r\\n    return [\\r\\n        new messageReader_1.SocketMessageReader(socket, encoding),\\r\\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\\r\\n    ];\\r\\n}\\r\\nexports.createServerSocketTransport = createServerSocketTransport;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\n/**\\r\\n * The Position namespace provides helper functions to work with\\r\\n * [Position](#Position) literals.\\r\\n */\\r\\nexport var Position;\\r\\n(function (Position) {\\r\\n    /**\\r\\n     * Creates a new Position literal from the given line and character.\\r\\n     * @param line The position's line.\\r\\n     * @param character The position's character.\\r\\n     */\\r\\n    function create(line, character) {\\r\\n        return { line: line, character: character };\\r\\n    }\\r\\n    Position.create = create;\\r\\n    /**\\r\\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\\r\\n    }\\r\\n    Position.is = is;\\r\\n})(Position || (Position = {}));\\r\\n/**\\r\\n * The Range namespace provides helper functions to work with\\r\\n * [Range](#Range) literals.\\r\\n */\\r\\nexport var Range;\\r\\n(function (Range) {\\r\\n    function create(one, two, three, four) {\\r\\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\\r\\n            return { start: Position.create(one, two), end: Position.create(three, four) };\\r\\n        }\\r\\n        else if (Position.is(one) && Position.is(two)) {\\r\\n            return { start: one, end: two };\\r\\n        }\\r\\n        else {\\r\\n            throw new Error(\\\"Range#create called with invalid arguments[\\\" + one + \\\", \\\" + two + \\\", \\\" + three + \\\", \\\" + four + \\\"]\\\");\\r\\n        }\\r\\n    }\\r\\n    Range.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\\r\\n    }\\r\\n    Range.is = is;\\r\\n})(Range || (Range = {}));\\r\\n/**\\r\\n * The Location namespace provides helper functions to work with\\r\\n * [Location](#Location) literals.\\r\\n */\\r\\nexport var Location;\\r\\n(function (Location) {\\r\\n    /**\\r\\n     * Creates a Location literal.\\r\\n     * @param uri The location's uri.\\r\\n     * @param range The location's range.\\r\\n     */\\r\\n    function create(uri, range) {\\r\\n        return { uri: uri, range: range };\\r\\n    }\\r\\n    Location.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\\r\\n    }\\r\\n    Location.is = is;\\r\\n})(Location || (Location = {}));\\r\\n/**\\r\\n * The LocationLink namespace provides helper functions to work with\\r\\n * [LocationLink](#LocationLink) literals.\\r\\n */\\r\\nexport var LocationLink;\\r\\n(function (LocationLink) {\\r\\n    /**\\r\\n     * Creates a LocationLink literal.\\r\\n     * @param targetUri The definition's uri.\\r\\n     * @param targetRange The full range of the definition.\\r\\n     * @param targetSelectionRange The span of the symbol definition at the target.\\r\\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\\r\\n     */\\r\\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\\r\\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\\r\\n    }\\r\\n    LocationLink.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\\r\\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\\r\\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\\r\\n    }\\r\\n    LocationLink.is = is;\\r\\n})(LocationLink || (LocationLink = {}));\\r\\n/**\\r\\n * The Color namespace provides helper functions to work with\\r\\n * [Color](#Color) literals.\\r\\n */\\r\\nexport var Color;\\r\\n(function (Color) {\\r\\n    /**\\r\\n     * Creates a new Color literal.\\r\\n     */\\r\\n    function create(red, green, blue, alpha) {\\r\\n        return {\\r\\n            red: red,\\r\\n            green: green,\\r\\n            blue: blue,\\r\\n            alpha: alpha,\\r\\n        };\\r\\n    }\\r\\n    Color.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.number(candidate.red)\\r\\n            && Is.number(candidate.green)\\r\\n            && Is.number(candidate.blue)\\r\\n            && Is.number(candidate.alpha);\\r\\n    }\\r\\n    Color.is = is;\\r\\n})(Color || (Color = {}));\\r\\n/**\\r\\n * The ColorInformation namespace provides helper functions to work with\\r\\n * [ColorInformation](#ColorInformation) literals.\\r\\n */\\r\\nexport var ColorInformation;\\r\\n(function (ColorInformation) {\\r\\n    /**\\r\\n     * Creates a new ColorInformation literal.\\r\\n     */\\r\\n    function create(range, color) {\\r\\n        return {\\r\\n            range: range,\\r\\n            color: color,\\r\\n        };\\r\\n    }\\r\\n    ColorInformation.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Range.is(candidate.range) && Color.is(candidate.color);\\r\\n    }\\r\\n    ColorInformation.is = is;\\r\\n})(ColorInformation || (ColorInformation = {}));\\r\\n/**\\r\\n * The Color namespace provides helper functions to work with\\r\\n * [ColorPresentation](#ColorPresentation) literals.\\r\\n */\\r\\nexport var ColorPresentation;\\r\\n(function (ColorPresentation) {\\r\\n    /**\\r\\n     * Creates a new ColorInformation literal.\\r\\n     */\\r\\n    function create(label, textEdit, additionalTextEdits) {\\r\\n        return {\\r\\n            label: label,\\r\\n            textEdit: textEdit,\\r\\n            additionalTextEdits: additionalTextEdits,\\r\\n        };\\r\\n    }\\r\\n    ColorPresentation.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.string(candidate.label)\\r\\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\\r\\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\\r\\n    }\\r\\n    ColorPresentation.is = is;\\r\\n})(ColorPresentation || (ColorPresentation = {}));\\r\\n/**\\r\\n * Enum of known range kinds\\r\\n */\\r\\nexport var FoldingRangeKind;\\r\\n(function (FoldingRangeKind) {\\r\\n    /**\\r\\n     * Folding range for a comment\\r\\n     */\\r\\n    FoldingRangeKind[\\\"Comment\\\"] = \\\"comment\\\";\\r\\n    /**\\r\\n     * Folding range for a imports or includes\\r\\n     */\\r\\n    FoldingRangeKind[\\\"Imports\\\"] = \\\"imports\\\";\\r\\n    /**\\r\\n     * Folding range for a region (e.g. `#region`)\\r\\n     */\\r\\n    FoldingRangeKind[\\\"Region\\\"] = \\\"region\\\";\\r\\n})(FoldingRangeKind || (FoldingRangeKind = {}));\\r\\n/**\\r\\n * The folding range namespace provides helper functions to work with\\r\\n * [FoldingRange](#FoldingRange) literals.\\r\\n */\\r\\nexport var FoldingRange;\\r\\n(function (FoldingRange) {\\r\\n    /**\\r\\n     * Creates a new FoldingRange literal.\\r\\n     */\\r\\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\\r\\n        var result = {\\r\\n            startLine: startLine,\\r\\n            endLine: endLine\\r\\n        };\\r\\n        if (Is.defined(startCharacter)) {\\r\\n            result.startCharacter = startCharacter;\\r\\n        }\\r\\n        if (Is.defined(endCharacter)) {\\r\\n            result.endCharacter = endCharacter;\\r\\n        }\\r\\n        if (Is.defined(kind)) {\\r\\n            result.kind = kind;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    FoldingRange.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\\r\\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\\r\\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\\r\\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\\r\\n    }\\r\\n    FoldingRange.is = is;\\r\\n})(FoldingRange || (FoldingRange = {}));\\r\\n/**\\r\\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\\r\\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\\r\\n */\\r\\nexport var DiagnosticRelatedInformation;\\r\\n(function (DiagnosticRelatedInformation) {\\r\\n    /**\\r\\n     * Creates a new DiagnosticRelatedInformation literal.\\r\\n     */\\r\\n    function create(location, message) {\\r\\n        return {\\r\\n            location: location,\\r\\n            message: message\\r\\n        };\\r\\n    }\\r\\n    DiagnosticRelatedInformation.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\\r\\n    }\\r\\n    DiagnosticRelatedInformation.is = is;\\r\\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\\r\\n/**\\r\\n * The diagnostic's severity.\\r\\n */\\r\\nexport var DiagnosticSeverity;\\r\\n(function (DiagnosticSeverity) {\\r\\n    /**\\r\\n     * Reports an error.\\r\\n     */\\r\\n    DiagnosticSeverity.Error = 1;\\r\\n    /**\\r\\n     * Reports a warning.\\r\\n     */\\r\\n    DiagnosticSeverity.Warning = 2;\\r\\n    /**\\r\\n     * Reports an information.\\r\\n     */\\r\\n    DiagnosticSeverity.Information = 3;\\r\\n    /**\\r\\n     * Reports a hint.\\r\\n     */\\r\\n    DiagnosticSeverity.Hint = 4;\\r\\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\\r\\n/**\\r\\n * The diagnostic tags.\\r\\n *\\r\\n * @since 3.15.0\\r\\n */\\r\\nexport var DiagnosticTag;\\r\\n(function (DiagnosticTag) {\\r\\n    /**\\r\\n     * Unused or unnecessary code.\\r\\n     *\\r\\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\\r\\n     * an error squiggle.\\r\\n     */\\r\\n    DiagnosticTag.Unnecessary = 1;\\r\\n    /**\\r\\n     * Deprecated or obsolete code.\\r\\n     *\\r\\n     * Clients are allowed to rendered diagnostics with this tag strike through.\\r\\n     */\\r\\n    DiagnosticTag.Deprecated = 2;\\r\\n})(DiagnosticTag || (DiagnosticTag = {}));\\r\\n/**\\r\\n * The Diagnostic namespace provides helper functions to work with\\r\\n * [Diagnostic](#Diagnostic) literals.\\r\\n */\\r\\nexport var Diagnostic;\\r\\n(function (Diagnostic) {\\r\\n    /**\\r\\n     * Creates a new Diagnostic literal.\\r\\n     */\\r\\n    function create(range, message, severity, code, source, relatedInformation) {\\r\\n        var result = { range: range, message: message };\\r\\n        if (Is.defined(severity)) {\\r\\n            result.severity = severity;\\r\\n        }\\r\\n        if (Is.defined(code)) {\\r\\n            result.code = code;\\r\\n        }\\r\\n        if (Is.defined(source)) {\\r\\n            result.source = source;\\r\\n        }\\r\\n        if (Is.defined(relatedInformation)) {\\r\\n            result.relatedInformation = relatedInformation;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    Diagnostic.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate)\\r\\n            && Range.is(candidate.range)\\r\\n            && Is.string(candidate.message)\\r\\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\\r\\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\\r\\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\\r\\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\\r\\n    }\\r\\n    Diagnostic.is = is;\\r\\n})(Diagnostic || (Diagnostic = {}));\\r\\n/**\\r\\n * The Command namespace provides helper functions to work with\\r\\n * [Command](#Command) literals.\\r\\n */\\r\\nexport var Command;\\r\\n(function (Command) {\\r\\n    /**\\r\\n     * Creates a new Command literal.\\r\\n     */\\r\\n    function create(title, command) {\\r\\n        var args = [];\\r\\n        for (var _i = 2; _i < arguments.length; _i++) {\\r\\n            args[_i - 2] = arguments[_i];\\r\\n        }\\r\\n        var result = { title: title, command: command };\\r\\n        if (Is.defined(args) && args.length > 0) {\\r\\n            result.arguments = args;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    Command.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\\r\\n    }\\r\\n    Command.is = is;\\r\\n})(Command || (Command = {}));\\r\\n/**\\r\\n * The TextEdit namespace provides helper function to create replace,\\r\\n * insert and delete edits more easily.\\r\\n */\\r\\nexport var TextEdit;\\r\\n(function (TextEdit) {\\r\\n    /**\\r\\n     * Creates a replace text edit.\\r\\n     * @param range The range of text to be replaced.\\r\\n     * @param newText The new text.\\r\\n     */\\r\\n    function replace(range, newText) {\\r\\n        return { range: range, newText: newText };\\r\\n    }\\r\\n    TextEdit.replace = replace;\\r\\n    /**\\r\\n     * Creates a insert text edit.\\r\\n     * @param position The position to insert the text at.\\r\\n     * @param newText The text to be inserted.\\r\\n     */\\r\\n    function insert(position, newText) {\\r\\n        return { range: { start: position, end: position }, newText: newText };\\r\\n    }\\r\\n    TextEdit.insert = insert;\\r\\n    /**\\r\\n     * Creates a delete text edit.\\r\\n     * @param range The range of text to be deleted.\\r\\n     */\\r\\n    function del(range) {\\r\\n        return { range: range, newText: '' };\\r\\n    }\\r\\n    TextEdit.del = del;\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.objectLiteral(candidate)\\r\\n            && Is.string(candidate.newText)\\r\\n            && Range.is(candidate.range);\\r\\n    }\\r\\n    TextEdit.is = is;\\r\\n})(TextEdit || (TextEdit = {}));\\r\\n/**\\r\\n * The TextDocumentEdit namespace provides helper function to create\\r\\n * an edit that manipulates a text document.\\r\\n */\\r\\nexport var TextDocumentEdit;\\r\\n(function (TextDocumentEdit) {\\r\\n    /**\\r\\n     * Creates a new `TextDocumentEdit`\\r\\n     */\\r\\n    function create(textDocument, edits) {\\r\\n        return { textDocument: textDocument, edits: edits };\\r\\n    }\\r\\n    TextDocumentEdit.create = create;\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate)\\r\\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\\r\\n            && Array.isArray(candidate.edits);\\r\\n    }\\r\\n    TextDocumentEdit.is = is;\\r\\n})(TextDocumentEdit || (TextDocumentEdit = {}));\\r\\nexport var CreateFile;\\r\\n(function (CreateFile) {\\r\\n    function create(uri, options) {\\r\\n        var result = {\\r\\n            kind: 'create',\\r\\n            uri: uri\\r\\n        };\\r\\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\\r\\n            result.options = options;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    CreateFile.create = create;\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\\r\\n            (candidate.options === void 0 ||\\r\\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\\r\\n    }\\r\\n    CreateFile.is = is;\\r\\n})(CreateFile || (CreateFile = {}));\\r\\nexport var RenameFile;\\r\\n(function (RenameFile) {\\r\\n    function create(oldUri, newUri, options) {\\r\\n        var result = {\\r\\n            kind: 'rename',\\r\\n            oldUri: oldUri,\\r\\n            newUri: newUri\\r\\n        };\\r\\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\\r\\n            result.options = options;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    RenameFile.create = create;\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\\r\\n            (candidate.options === void 0 ||\\r\\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\\r\\n    }\\r\\n    RenameFile.is = is;\\r\\n})(RenameFile || (RenameFile = {}));\\r\\nexport var DeleteFile;\\r\\n(function (DeleteFile) {\\r\\n    function create(uri, options) {\\r\\n        var result = {\\r\\n            kind: 'delete',\\r\\n            uri: uri\\r\\n        };\\r\\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\\r\\n            result.options = options;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    DeleteFile.create = create;\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\\r\\n            (candidate.options === void 0 ||\\r\\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\\r\\n    }\\r\\n    DeleteFile.is = is;\\r\\n})(DeleteFile || (DeleteFile = {}));\\r\\nexport var WorkspaceEdit;\\r\\n(function (WorkspaceEdit) {\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate &&\\r\\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\\r\\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\\r\\n                if (Is.string(change.kind)) {\\r\\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\\r\\n                }\\r\\n                else {\\r\\n                    return TextDocumentEdit.is(change);\\r\\n                }\\r\\n            }));\\r\\n    }\\r\\n    WorkspaceEdit.is = is;\\r\\n})(WorkspaceEdit || (WorkspaceEdit = {}));\\r\\nvar TextEditChangeImpl = /** @class */ (function () {\\r\\n    function TextEditChangeImpl(edits) {\\r\\n        this.edits = edits;\\r\\n    }\\r\\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\\r\\n        this.edits.push(TextEdit.insert(position, newText));\\r\\n    };\\r\\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\\r\\n        this.edits.push(TextEdit.replace(range, newText));\\r\\n    };\\r\\n    TextEditChangeImpl.prototype.delete = function (range) {\\r\\n        this.edits.push(TextEdit.del(range));\\r\\n    };\\r\\n    TextEditChangeImpl.prototype.add = function (edit) {\\r\\n        this.edits.push(edit);\\r\\n    };\\r\\n    TextEditChangeImpl.prototype.all = function () {\\r\\n        return this.edits;\\r\\n    };\\r\\n    TextEditChangeImpl.prototype.clear = function () {\\r\\n        this.edits.splice(0, this.edits.length);\\r\\n    };\\r\\n    return TextEditChangeImpl;\\r\\n}());\\r\\n/**\\r\\n * A workspace change helps constructing changes to a workspace.\\r\\n */\\r\\nvar WorkspaceChange = /** @class */ (function () {\\r\\n    function WorkspaceChange(workspaceEdit) {\\r\\n        var _this = this;\\r\\n        this._textEditChanges = Object.create(null);\\r\\n        if (workspaceEdit) {\\r\\n            this._workspaceEdit = workspaceEdit;\\r\\n            if (workspaceEdit.documentChanges) {\\r\\n                workspaceEdit.documentChanges.forEach(function (change) {\\r\\n                    if (TextDocumentEdit.is(change)) {\\r\\n                        var textEditChange = new TextEditChangeImpl(change.edits);\\r\\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\\r\\n                    }\\r\\n                });\\r\\n            }\\r\\n            else if (workspaceEdit.changes) {\\r\\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\\r\\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\\r\\n                    _this._textEditChanges[key] = textEditChange;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    Object.defineProperty(WorkspaceChange.prototype, \\\"edit\\\", {\\r\\n        /**\\r\\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\\r\\n         * use to be returned from a workspace edit operation like rename.\\r\\n         */\\r\\n        get: function () {\\r\\n            return this._workspaceEdit;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\\r\\n        if (VersionedTextDocumentIdentifier.is(key)) {\\r\\n            if (!this._workspaceEdit) {\\r\\n                this._workspaceEdit = {\\r\\n                    documentChanges: []\\r\\n                };\\r\\n            }\\r\\n            if (!this._workspaceEdit.documentChanges) {\\r\\n                throw new Error('Workspace edit is not configured for document changes.');\\r\\n            }\\r\\n            var textDocument = key;\\r\\n            var result = this._textEditChanges[textDocument.uri];\\r\\n            if (!result) {\\r\\n                var edits = [];\\r\\n                var textDocumentEdit = {\\r\\n                    textDocument: textDocument,\\r\\n                    edits: edits\\r\\n                };\\r\\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\\r\\n                result = new TextEditChangeImpl(edits);\\r\\n                this._textEditChanges[textDocument.uri] = result;\\r\\n            }\\r\\n            return result;\\r\\n        }\\r\\n        else {\\r\\n            if (!this._workspaceEdit) {\\r\\n                this._workspaceEdit = {\\r\\n                    changes: Object.create(null)\\r\\n                };\\r\\n            }\\r\\n            if (!this._workspaceEdit.changes) {\\r\\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\\r\\n            }\\r\\n            var result = this._textEditChanges[key];\\r\\n            if (!result) {\\r\\n                var edits = [];\\r\\n                this._workspaceEdit.changes[key] = edits;\\r\\n                result = new TextEditChangeImpl(edits);\\r\\n                this._textEditChanges[key] = result;\\r\\n            }\\r\\n            return result;\\r\\n        }\\r\\n    };\\r\\n    WorkspaceChange.prototype.createFile = function (uri, options) {\\r\\n        this.checkDocumentChanges();\\r\\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\\r\\n    };\\r\\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\\r\\n        this.checkDocumentChanges();\\r\\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\\r\\n    };\\r\\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\\r\\n        this.checkDocumentChanges();\\r\\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\\r\\n    };\\r\\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\\r\\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\\r\\n            throw new Error('Workspace edit is not configured for document changes.');\\r\\n        }\\r\\n    };\\r\\n    return WorkspaceChange;\\r\\n}());\\r\\nexport { WorkspaceChange };\\r\\n/**\\r\\n * The TextDocumentIdentifier namespace provides helper functions to work with\\r\\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\\r\\n */\\r\\nexport var TextDocumentIdentifier;\\r\\n(function (TextDocumentIdentifier) {\\r\\n    /**\\r\\n     * Creates a new TextDocumentIdentifier literal.\\r\\n     * @param uri The document's uri.\\r\\n     */\\r\\n    function create(uri) {\\r\\n        return { uri: uri };\\r\\n    }\\r\\n    TextDocumentIdentifier.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Is.string(candidate.uri);\\r\\n    }\\r\\n    TextDocumentIdentifier.is = is;\\r\\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\\r\\n/**\\r\\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\\r\\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\\r\\n */\\r\\nexport var VersionedTextDocumentIdentifier;\\r\\n(function (VersionedTextDocumentIdentifier) {\\r\\n    /**\\r\\n     * Creates a new VersionedTextDocumentIdentifier literal.\\r\\n     * @param uri The document's uri.\\r\\n     * @param uri The document's text.\\r\\n     */\\r\\n    function create(uri, version) {\\r\\n        return { uri: uri, version: version };\\r\\n    }\\r\\n    VersionedTextDocumentIdentifier.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\\r\\n    }\\r\\n    VersionedTextDocumentIdentifier.is = is;\\r\\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\\r\\n/**\\r\\n * The TextDocumentItem namespace provides helper functions to work with\\r\\n * [TextDocumentItem](#TextDocumentItem) literals.\\r\\n */\\r\\nexport var TextDocumentItem;\\r\\n(function (TextDocumentItem) {\\r\\n    /**\\r\\n     * Creates a new TextDocumentItem literal.\\r\\n     * @param uri The document's uri.\\r\\n     * @param languageId The document's language identifier.\\r\\n     * @param version The document's version number.\\r\\n     * @param text The document's text.\\r\\n     */\\r\\n    function create(uri, languageId, version, text) {\\r\\n        return { uri: uri, languageId: languageId, version: version, text: text };\\r\\n    }\\r\\n    TextDocumentItem.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\\r\\n    }\\r\\n    TextDocumentItem.is = is;\\r\\n})(TextDocumentItem || (TextDocumentItem = {}));\\r\\n/**\\r\\n * Describes the content type that a client supports in various\\r\\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\\r\\n *\\r\\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\\r\\n * are reserved for internal usage.\\r\\n */\\r\\nexport var MarkupKind;\\r\\n(function (MarkupKind) {\\r\\n    /**\\r\\n     * Plain text is supported as a content format\\r\\n     */\\r\\n    MarkupKind.PlainText = 'plaintext';\\r\\n    /**\\r\\n     * Markdown is supported as a content format\\r\\n     */\\r\\n    MarkupKind.Markdown = 'markdown';\\r\\n})(MarkupKind || (MarkupKind = {}));\\r\\n(function (MarkupKind) {\\r\\n    /**\\r\\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\\r\\n    }\\r\\n    MarkupKind.is = is;\\r\\n})(MarkupKind || (MarkupKind = {}));\\r\\nexport var MarkupContent;\\r\\n(function (MarkupContent) {\\r\\n    /**\\r\\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\\r\\n    }\\r\\n    MarkupContent.is = is;\\r\\n})(MarkupContent || (MarkupContent = {}));\\r\\n/**\\r\\n * The kind of a completion entry.\\r\\n */\\r\\nexport var CompletionItemKind;\\r\\n(function (CompletionItemKind) {\\r\\n    CompletionItemKind.Text = 1;\\r\\n    CompletionItemKind.Method = 2;\\r\\n    CompletionItemKind.Function = 3;\\r\\n    CompletionItemKind.Constructor = 4;\\r\\n    CompletionItemKind.Field = 5;\\r\\n    CompletionItemKind.Variable = 6;\\r\\n    CompletionItemKind.Class = 7;\\r\\n    CompletionItemKind.Interface = 8;\\r\\n    CompletionItemKind.Module = 9;\\r\\n    CompletionItemKind.Property = 10;\\r\\n    CompletionItemKind.Unit = 11;\\r\\n    CompletionItemKind.Value = 12;\\r\\n    CompletionItemKind.Enum = 13;\\r\\n    CompletionItemKind.Keyword = 14;\\r\\n    CompletionItemKind.Snippet = 15;\\r\\n    CompletionItemKind.Color = 16;\\r\\n    CompletionItemKind.File = 17;\\r\\n    CompletionItemKind.Reference = 18;\\r\\n    CompletionItemKind.Folder = 19;\\r\\n    CompletionItemKind.EnumMember = 20;\\r\\n    CompletionItemKind.Constant = 21;\\r\\n    CompletionItemKind.Struct = 22;\\r\\n    CompletionItemKind.Event = 23;\\r\\n    CompletionItemKind.Operator = 24;\\r\\n    CompletionItemKind.TypeParameter = 25;\\r\\n})(CompletionItemKind || (CompletionItemKind = {}));\\r\\n/**\\r\\n * Defines whether the insert text in a completion item should be interpreted as\\r\\n * plain text or a snippet.\\r\\n */\\r\\nexport var InsertTextFormat;\\r\\n(function (InsertTextFormat) {\\r\\n    /**\\r\\n     * The primary text to be inserted is treated as a plain string.\\r\\n     */\\r\\n    InsertTextFormat.PlainText = 1;\\r\\n    /**\\r\\n     * The primary text to be inserted is treated as a snippet.\\r\\n     *\\r\\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\\r\\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\\r\\n     * the end of the snippet. Placeholders with equal identifiers are linked,\\r\\n     * that is typing in one will update others too.\\r\\n     *\\r\\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\\r\\n     */\\r\\n    InsertTextFormat.Snippet = 2;\\r\\n})(InsertTextFormat || (InsertTextFormat = {}));\\r\\n/**\\r\\n * Completion item tags are extra annotations that tweak the rendering of a completion\\r\\n * item.\\r\\n *\\r\\n * @since 3.15.0\\r\\n */\\r\\nexport var CompletionItemTag;\\r\\n(function (CompletionItemTag) {\\r\\n    /**\\r\\n     * Render a completion as obsolete, usually using a strike-out.\\r\\n     */\\r\\n    CompletionItemTag.Deprecated = 1;\\r\\n})(CompletionItemTag || (CompletionItemTag = {}));\\r\\n/**\\r\\n * The CompletionItem namespace provides functions to deal with\\r\\n * completion items.\\r\\n */\\r\\nexport var CompletionItem;\\r\\n(function (CompletionItem) {\\r\\n    /**\\r\\n     * Create a completion item and seed it with a label.\\r\\n     * @param label The completion item's label\\r\\n     */\\r\\n    function create(label) {\\r\\n        return { label: label };\\r\\n    }\\r\\n    CompletionItem.create = create;\\r\\n})(CompletionItem || (CompletionItem = {}));\\r\\n/**\\r\\n * The CompletionList namespace provides functions to deal with\\r\\n * completion lists.\\r\\n */\\r\\nexport var CompletionList;\\r\\n(function (CompletionList) {\\r\\n    /**\\r\\n     * Creates a new completion list.\\r\\n     *\\r\\n     * @param items The completion items.\\r\\n     * @param isIncomplete The list is not complete.\\r\\n     */\\r\\n    function create(items, isIncomplete) {\\r\\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\\r\\n    }\\r\\n    CompletionList.create = create;\\r\\n})(CompletionList || (CompletionList = {}));\\r\\nexport var MarkedString;\\r\\n(function (MarkedString) {\\r\\n    /**\\r\\n     * Creates a marked string from plain text.\\r\\n     *\\r\\n     * @param plainText The plain text.\\r\\n     */\\r\\n    function fromPlainText(plainText) {\\r\\n        return plainText.replace(/[\\\\\\\\`*_{}[\\\\]()#+\\\\-.!]/g, '\\\\\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\\r\\n    }\\r\\n    MarkedString.fromPlainText = fromPlainText;\\r\\n    /**\\r\\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\\r\\n    }\\r\\n    MarkedString.is = is;\\r\\n})(MarkedString || (MarkedString = {}));\\r\\nexport var Hover;\\r\\n(function (Hover) {\\r\\n    /**\\r\\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\\r\\n            MarkedString.is(candidate.contents) ||\\r\\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\\r\\n    }\\r\\n    Hover.is = is;\\r\\n})(Hover || (Hover = {}));\\r\\n/**\\r\\n * The ParameterInformation namespace provides helper functions to work with\\r\\n * [ParameterInformation](#ParameterInformation) literals.\\r\\n */\\r\\nexport var ParameterInformation;\\r\\n(function (ParameterInformation) {\\r\\n    /**\\r\\n     * Creates a new parameter information literal.\\r\\n     *\\r\\n     * @param label A label string.\\r\\n     * @param documentation A doc string.\\r\\n     */\\r\\n    function create(label, documentation) {\\r\\n        return documentation ? { label: label, documentation: documentation } : { label: label };\\r\\n    }\\r\\n    ParameterInformation.create = create;\\r\\n})(ParameterInformation || (ParameterInformation = {}));\\r\\n/**\\r\\n * The SignatureInformation namespace provides helper functions to work with\\r\\n * [SignatureInformation](#SignatureInformation) literals.\\r\\n */\\r\\nexport var SignatureInformation;\\r\\n(function (SignatureInformation) {\\r\\n    function create(label, documentation) {\\r\\n        var parameters = [];\\r\\n        for (var _i = 2; _i < arguments.length; _i++) {\\r\\n            parameters[_i - 2] = arguments[_i];\\r\\n        }\\r\\n        var result = { label: label };\\r\\n        if (Is.defined(documentation)) {\\r\\n            result.documentation = documentation;\\r\\n        }\\r\\n        if (Is.defined(parameters)) {\\r\\n            result.parameters = parameters;\\r\\n        }\\r\\n        else {\\r\\n            result.parameters = [];\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    SignatureInformation.create = create;\\r\\n})(SignatureInformation || (SignatureInformation = {}));\\r\\n/**\\r\\n * A document highlight kind.\\r\\n */\\r\\nexport var DocumentHighlightKind;\\r\\n(function (DocumentHighlightKind) {\\r\\n    /**\\r\\n     * A textual occurrence.\\r\\n     */\\r\\n    DocumentHighlightKind.Text = 1;\\r\\n    /**\\r\\n     * Read-access of a symbol, like reading a variable.\\r\\n     */\\r\\n    DocumentHighlightKind.Read = 2;\\r\\n    /**\\r\\n     * Write-access of a symbol, like writing to a variable.\\r\\n     */\\r\\n    DocumentHighlightKind.Write = 3;\\r\\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\\r\\n/**\\r\\n * DocumentHighlight namespace to provide helper functions to work with\\r\\n * [DocumentHighlight](#DocumentHighlight) literals.\\r\\n */\\r\\nexport var DocumentHighlight;\\r\\n(function (DocumentHighlight) {\\r\\n    /**\\r\\n     * Create a DocumentHighlight object.\\r\\n     * @param range The range the highlight applies to.\\r\\n     */\\r\\n    function create(range, kind) {\\r\\n        var result = { range: range };\\r\\n        if (Is.number(kind)) {\\r\\n            result.kind = kind;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    DocumentHighlight.create = create;\\r\\n})(DocumentHighlight || (DocumentHighlight = {}));\\r\\n/**\\r\\n * A symbol kind.\\r\\n */\\r\\nexport var SymbolKind;\\r\\n(function (SymbolKind) {\\r\\n    SymbolKind.File = 1;\\r\\n    SymbolKind.Module = 2;\\r\\n    SymbolKind.Namespace = 3;\\r\\n    SymbolKind.Package = 4;\\r\\n    SymbolKind.Class = 5;\\r\\n    SymbolKind.Method = 6;\\r\\n    SymbolKind.Property = 7;\\r\\n    SymbolKind.Field = 8;\\r\\n    SymbolKind.Constructor = 9;\\r\\n    SymbolKind.Enum = 10;\\r\\n    SymbolKind.Interface = 11;\\r\\n    SymbolKind.Function = 12;\\r\\n    SymbolKind.Variable = 13;\\r\\n    SymbolKind.Constant = 14;\\r\\n    SymbolKind.String = 15;\\r\\n    SymbolKind.Number = 16;\\r\\n    SymbolKind.Boolean = 17;\\r\\n    SymbolKind.Array = 18;\\r\\n    SymbolKind.Object = 19;\\r\\n    SymbolKind.Key = 20;\\r\\n    SymbolKind.Null = 21;\\r\\n    SymbolKind.EnumMember = 22;\\r\\n    SymbolKind.Struct = 23;\\r\\n    SymbolKind.Event = 24;\\r\\n    SymbolKind.Operator = 25;\\r\\n    SymbolKind.TypeParameter = 26;\\r\\n})(SymbolKind || (SymbolKind = {}));\\r\\n/**\\r\\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\\r\\n * @since 3.15\\r\\n */\\r\\nexport var SymbolTag;\\r\\n(function (SymbolTag) {\\r\\n    /**\\r\\n     * Render a symbol as obsolete, usually using a strike-out.\\r\\n     */\\r\\n    SymbolTag.Deprecated = 1;\\r\\n})(SymbolTag || (SymbolTag = {}));\\r\\nexport var SymbolInformation;\\r\\n(function (SymbolInformation) {\\r\\n    /**\\r\\n     * Creates a new symbol information literal.\\r\\n     *\\r\\n     * @param name The name of the symbol.\\r\\n     * @param kind The kind of the symbol.\\r\\n     * @param range The range of the location of the symbol.\\r\\n     * @param uri The resource of the location of symbol, defaults to the current document.\\r\\n     * @param containerName The name of the symbol containing the symbol.\\r\\n     */\\r\\n    function create(name, kind, range, uri, containerName) {\\r\\n        var result = {\\r\\n            name: name,\\r\\n            kind: kind,\\r\\n            location: { uri: uri, range: range }\\r\\n        };\\r\\n        if (containerName) {\\r\\n            result.containerName = containerName;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    SymbolInformation.create = create;\\r\\n})(SymbolInformation || (SymbolInformation = {}));\\r\\nexport var DocumentSymbol;\\r\\n(function (DocumentSymbol) {\\r\\n    /**\\r\\n     * Creates a new symbol information literal.\\r\\n     *\\r\\n     * @param name The name of the symbol.\\r\\n     * @param detail The detail of the symbol.\\r\\n     * @param kind The kind of the symbol.\\r\\n     * @param range The range of the symbol.\\r\\n     * @param selectionRange The selectionRange of the symbol.\\r\\n     * @param children Children of the symbol.\\r\\n     */\\r\\n    function create(name, detail, kind, range, selectionRange, children) {\\r\\n        var result = {\\r\\n            name: name,\\r\\n            detail: detail,\\r\\n            kind: kind,\\r\\n            range: range,\\r\\n            selectionRange: selectionRange\\r\\n        };\\r\\n        if (children !== void 0) {\\r\\n            result.children = children;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    DocumentSymbol.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate &&\\r\\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\\r\\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\\r\\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\\r\\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\\r\\n            (candidate.children === void 0 || Array.isArray(candidate.children));\\r\\n    }\\r\\n    DocumentSymbol.is = is;\\r\\n})(DocumentSymbol || (DocumentSymbol = {}));\\r\\n/**\\r\\n * A set of predefined code action kinds\\r\\n */\\r\\nexport var CodeActionKind;\\r\\n(function (CodeActionKind) {\\r\\n    /**\\r\\n     * Empty kind.\\r\\n     */\\r\\n    CodeActionKind.Empty = '';\\r\\n    /**\\r\\n     * Base kind for quickfix actions: 'quickfix'\\r\\n     */\\r\\n    CodeActionKind.QuickFix = 'quickfix';\\r\\n    /**\\r\\n     * Base kind for refactoring actions: 'refactor'\\r\\n     */\\r\\n    CodeActionKind.Refactor = 'refactor';\\r\\n    /**\\r\\n     * Base kind for refactoring extraction actions: 'refactor.extract'\\r\\n     *\\r\\n     * Example extract actions:\\r\\n     *\\r\\n     * - Extract method\\r\\n     * - Extract function\\r\\n     * - Extract variable\\r\\n     * - Extract interface from class\\r\\n     * - ...\\r\\n     */\\r\\n    CodeActionKind.RefactorExtract = 'refactor.extract';\\r\\n    /**\\r\\n     * Base kind for refactoring inline actions: 'refactor.inline'\\r\\n     *\\r\\n     * Example inline actions:\\r\\n     *\\r\\n     * - Inline function\\r\\n     * - Inline variable\\r\\n     * - Inline constant\\r\\n     * - ...\\r\\n     */\\r\\n    CodeActionKind.RefactorInline = 'refactor.inline';\\r\\n    /**\\r\\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\\r\\n     *\\r\\n     * Example rewrite actions:\\r\\n     *\\r\\n     * - Convert JavaScript function to class\\r\\n     * - Add or remove parameter\\r\\n     * - Encapsulate field\\r\\n     * - Make method static\\r\\n     * - Move method to base class\\r\\n     * - ...\\r\\n     */\\r\\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\\r\\n    /**\\r\\n     * Base kind for source actions: `source`\\r\\n     *\\r\\n     * Source code actions apply to the entire file.\\r\\n     */\\r\\n    CodeActionKind.Source = 'source';\\r\\n    /**\\r\\n     * Base kind for an organize imports source action: `source.organizeImports`\\r\\n     */\\r\\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\\r\\n    /**\\r\\n     * Base kind for auto-fix source actions: `source.fixAll`.\\r\\n     *\\r\\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\\r\\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\\r\\n     *\\r\\n     * @since 3.15.0\\r\\n     */\\r\\n    CodeActionKind.SourceFixAll = 'source.fixAll';\\r\\n})(CodeActionKind || (CodeActionKind = {}));\\r\\n/**\\r\\n * The CodeActionContext namespace provides helper functions to work with\\r\\n * [CodeActionContext](#CodeActionContext) literals.\\r\\n */\\r\\nexport var CodeActionContext;\\r\\n(function (CodeActionContext) {\\r\\n    /**\\r\\n     * Creates a new CodeActionContext literal.\\r\\n     */\\r\\n    function create(diagnostics, only) {\\r\\n        var result = { diagnostics: diagnostics };\\r\\n        if (only !== void 0 && only !== null) {\\r\\n            result.only = only;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    CodeActionContext.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\\r\\n    }\\r\\n    CodeActionContext.is = is;\\r\\n})(CodeActionContext || (CodeActionContext = {}));\\r\\nexport var CodeAction;\\r\\n(function (CodeAction) {\\r\\n    function create(title, commandOrEdit, kind) {\\r\\n        var result = { title: title };\\r\\n        if (Command.is(commandOrEdit)) {\\r\\n            result.command = commandOrEdit;\\r\\n        }\\r\\n        else {\\r\\n            result.edit = commandOrEdit;\\r\\n        }\\r\\n        if (kind !== void 0) {\\r\\n            result.kind = kind;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    CodeAction.create = create;\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && Is.string(candidate.title) &&\\r\\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\\r\\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\\r\\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\\r\\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\\r\\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\\r\\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\\r\\n    }\\r\\n    CodeAction.is = is;\\r\\n})(CodeAction || (CodeAction = {}));\\r\\n/**\\r\\n * The CodeLens namespace provides helper functions to work with\\r\\n * [CodeLens](#CodeLens) literals.\\r\\n */\\r\\nexport var CodeLens;\\r\\n(function (CodeLens) {\\r\\n    /**\\r\\n     * Creates a new CodeLens literal.\\r\\n     */\\r\\n    function create(range, data) {\\r\\n        var result = { range: range };\\r\\n        if (Is.defined(data)) {\\r\\n            result.data = data;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    CodeLens.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\\r\\n    }\\r\\n    CodeLens.is = is;\\r\\n})(CodeLens || (CodeLens = {}));\\r\\n/**\\r\\n * The FormattingOptions namespace provides helper functions to work with\\r\\n * [FormattingOptions](#FormattingOptions) literals.\\r\\n */\\r\\nexport var FormattingOptions;\\r\\n(function (FormattingOptions) {\\r\\n    /**\\r\\n     * Creates a new FormattingOptions literal.\\r\\n     */\\r\\n    function create(tabSize, insertSpaces) {\\r\\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\\r\\n    }\\r\\n    FormattingOptions.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\\r\\n    }\\r\\n    FormattingOptions.is = is;\\r\\n})(FormattingOptions || (FormattingOptions = {}));\\r\\n/**\\r\\n * The DocumentLink namespace provides helper functions to work with\\r\\n * [DocumentLink](#DocumentLink) literals.\\r\\n */\\r\\nexport var DocumentLink;\\r\\n(function (DocumentLink) {\\r\\n    /**\\r\\n     * Creates a new DocumentLink literal.\\r\\n     */\\r\\n    function create(range, target, data) {\\r\\n        return { range: range, target: target, data: data };\\r\\n    }\\r\\n    DocumentLink.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\\r\\n    }\\r\\n    DocumentLink.is = is;\\r\\n})(DocumentLink || (DocumentLink = {}));\\r\\n/**\\r\\n * The SelectionRange namespace provides helper function to work with\\r\\n * SelectionRange literals.\\r\\n */\\r\\nexport var SelectionRange;\\r\\n(function (SelectionRange) {\\r\\n    /**\\r\\n     * Creates a new SelectionRange\\r\\n     * @param range the range.\\r\\n     * @param parent an optional parent.\\r\\n     */\\r\\n    function create(range, parent) {\\r\\n        return { range: range, parent: parent };\\r\\n    }\\r\\n    SelectionRange.create = create;\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\\r\\n    }\\r\\n    SelectionRange.is = is;\\r\\n})(SelectionRange || (SelectionRange = {}));\\r\\nexport var EOL = ['\\\\n', '\\\\r\\\\n', '\\\\r'];\\r\\n/**\\r\\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\\r\\n */\\r\\nexport var TextDocument;\\r\\n(function (TextDocument) {\\r\\n    /**\\r\\n     * Creates a new ITextDocument literal from the given uri and content.\\r\\n     * @param uri The document's uri.\\r\\n     * @param languageId  The document's language Id.\\r\\n     * @param content The document's content.\\r\\n     */\\r\\n    function create(uri, languageId, version, content) {\\r\\n        return new FullTextDocument(uri, languageId, version, content);\\r\\n    }\\r\\n    TextDocument.create = create;\\r\\n    /**\\r\\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\\r\\n     */\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\\r\\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\\r\\n    }\\r\\n    TextDocument.is = is;\\r\\n    function applyEdits(document, edits) {\\r\\n        var text = document.getText();\\r\\n        var sortedEdits = mergeSort(edits, function (a, b) {\\r\\n            var diff = a.range.start.line - b.range.start.line;\\r\\n            if (diff === 0) {\\r\\n                return a.range.start.character - b.range.start.character;\\r\\n            }\\r\\n            return diff;\\r\\n        });\\r\\n        var lastModifiedOffset = text.length;\\r\\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\\r\\n            var e = sortedEdits[i];\\r\\n            var startOffset = document.offsetAt(e.range.start);\\r\\n            var endOffset = document.offsetAt(e.range.end);\\r\\n            if (endOffset <= lastModifiedOffset) {\\r\\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\\r\\n            }\\r\\n            else {\\r\\n                throw new Error('Overlapping edit');\\r\\n            }\\r\\n            lastModifiedOffset = startOffset;\\r\\n        }\\r\\n        return text;\\r\\n    }\\r\\n    TextDocument.applyEdits = applyEdits;\\r\\n    function mergeSort(data, compare) {\\r\\n        if (data.length <= 1) {\\r\\n            // sorted\\r\\n            return data;\\r\\n        }\\r\\n        var p = (data.length / 2) | 0;\\r\\n        var left = data.slice(0, p);\\r\\n        var right = data.slice(p);\\r\\n        mergeSort(left, compare);\\r\\n        mergeSort(right, compare);\\r\\n        var leftIdx = 0;\\r\\n        var rightIdx = 0;\\r\\n        var i = 0;\\r\\n        while (leftIdx < left.length && rightIdx < right.length) {\\r\\n            var ret = compare(left[leftIdx], right[rightIdx]);\\r\\n            if (ret <= 0) {\\r\\n                // smaller_equal -> take left to preserve order\\r\\n                data[i++] = left[leftIdx++];\\r\\n            }\\r\\n            else {\\r\\n                // greater -> take right\\r\\n                data[i++] = right[rightIdx++];\\r\\n            }\\r\\n        }\\r\\n        while (leftIdx < left.length) {\\r\\n            data[i++] = left[leftIdx++];\\r\\n        }\\r\\n        while (rightIdx < right.length) {\\r\\n            data[i++] = right[rightIdx++];\\r\\n        }\\r\\n        return data;\\r\\n    }\\r\\n})(TextDocument || (TextDocument = {}));\\r\\nvar FullTextDocument = /** @class */ (function () {\\r\\n    function FullTextDocument(uri, languageId, version, content) {\\r\\n        this._uri = uri;\\r\\n        this._languageId = languageId;\\r\\n        this._version = version;\\r\\n        this._content = content;\\r\\n        this._lineOffsets = undefined;\\r\\n    }\\r\\n    Object.defineProperty(FullTextDocument.prototype, \\\"uri\\\", {\\r\\n        get: function () {\\r\\n            return this._uri;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(FullTextDocument.prototype, \\\"languageId\\\", {\\r\\n        get: function () {\\r\\n            return this._languageId;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    Object.defineProperty(FullTextDocument.prototype, \\\"version\\\", {\\r\\n        get: function () {\\r\\n            return this._version;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    FullTextDocument.prototype.getText = function (range) {\\r\\n        if (range) {\\r\\n            var start = this.offsetAt(range.start);\\r\\n            var end = this.offsetAt(range.end);\\r\\n            return this._content.substring(start, end);\\r\\n        }\\r\\n        return this._content;\\r\\n    };\\r\\n    FullTextDocument.prototype.update = function (event, version) {\\r\\n        this._content = event.text;\\r\\n        this._version = version;\\r\\n        this._lineOffsets = undefined;\\r\\n    };\\r\\n    FullTextDocument.prototype.getLineOffsets = function () {\\r\\n        if (this._lineOffsets === undefined) {\\r\\n            var lineOffsets = [];\\r\\n            var text = this._content;\\r\\n            var isLineStart = true;\\r\\n            for (var i = 0; i < text.length; i++) {\\r\\n                if (isLineStart) {\\r\\n                    lineOffsets.push(i);\\r\\n                    isLineStart = false;\\r\\n                }\\r\\n                var ch = text.charAt(i);\\r\\n                isLineStart = (ch === '\\\\r' || ch === '\\\\n');\\r\\n                if (ch === '\\\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\\\n') {\\r\\n                    i++;\\r\\n                }\\r\\n            }\\r\\n            if (isLineStart && text.length > 0) {\\r\\n                lineOffsets.push(text.length);\\r\\n            }\\r\\n            this._lineOffsets = lineOffsets;\\r\\n        }\\r\\n        return this._lineOffsets;\\r\\n    };\\r\\n    FullTextDocument.prototype.positionAt = function (offset) {\\r\\n        offset = Math.max(Math.min(offset, this._content.length), 0);\\r\\n        var lineOffsets = this.getLineOffsets();\\r\\n        var low = 0, high = lineOffsets.length;\\r\\n        if (high === 0) {\\r\\n            return Position.create(0, offset);\\r\\n        }\\r\\n        while (low < high) {\\r\\n            var mid = Math.floor((low + high) / 2);\\r\\n            if (lineOffsets[mid] > offset) {\\r\\n                high = mid;\\r\\n            }\\r\\n            else {\\r\\n                low = mid + 1;\\r\\n            }\\r\\n        }\\r\\n        // low is the least x for which the line offset is larger than the current offset\\r\\n        // or array.length if no line offset is larger than the current offset\\r\\n        var line = low - 1;\\r\\n        return Position.create(line, offset - lineOffsets[line]);\\r\\n    };\\r\\n    FullTextDocument.prototype.offsetAt = function (position) {\\r\\n        var lineOffsets = this.getLineOffsets();\\r\\n        if (position.line >= lineOffsets.length) {\\r\\n            return this._content.length;\\r\\n        }\\r\\n        else if (position.line < 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        var lineOffset = lineOffsets[position.line];\\r\\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\\r\\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\\r\\n    };\\r\\n    Object.defineProperty(FullTextDocument.prototype, \\\"lineCount\\\", {\\r\\n        get: function () {\\r\\n            return this.getLineOffsets().length;\\r\\n        },\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n    });\\r\\n    return FullTextDocument;\\r\\n}());\\r\\nvar Is;\\r\\n(function (Is) {\\r\\n    var toString = Object.prototype.toString;\\r\\n    function defined(value) {\\r\\n        return typeof value !== 'undefined';\\r\\n    }\\r\\n    Is.defined = defined;\\r\\n    function undefined(value) {\\r\\n        return typeof value === 'undefined';\\r\\n    }\\r\\n    Is.undefined = undefined;\\r\\n    function boolean(value) {\\r\\n        return value === true || value === false;\\r\\n    }\\r\\n    Is.boolean = boolean;\\r\\n    function string(value) {\\r\\n        return toString.call(value) === '[object String]';\\r\\n    }\\r\\n    Is.string = string;\\r\\n    function number(value) {\\r\\n        return toString.call(value) === '[object Number]';\\r\\n    }\\r\\n    Is.number = number;\\r\\n    function func(value) {\\r\\n        return toString.call(value) === '[object Function]';\\r\\n    }\\r\\n    Is.func = func;\\r\\n    function objectLiteral(value) {\\r\\n        // Strictly speaking class instances pass this check as well. Since the LSP\\r\\n        // doesn't use classes we ignore this for now. If we do we need to add something\\r\\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\\r\\n        return value !== null && typeof value === 'object';\\r\\n    }\\r\\n    Is.objectLiteral = objectLiteral;\\r\\n    function typedArray(value, check) {\\r\\n        return Array.isArray(value) && value.every(check);\\r\\n    }\\r\\n    Is.typedArray = typedArray;\\r\\n})(Is || (Is = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst Is = require(\\\"./utils/is\\\");\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\nconst protocol_implementation_1 = require(\\\"./protocol.implementation\\\");\\r\\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\\r\\nconst protocol_typeDefinition_1 = require(\\\"./protocol.typeDefinition\\\");\\r\\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\\r\\nconst protocol_workspaceFolders_1 = require(\\\"./protocol.workspaceFolders\\\");\\r\\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\\r\\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\\r\\nconst protocol_configuration_1 = require(\\\"./protocol.configuration\\\");\\r\\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\\r\\nconst protocol_colorProvider_1 = require(\\\"./protocol.colorProvider\\\");\\r\\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\\r\\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\\r\\nconst protocol_foldingRange_1 = require(\\\"./protocol.foldingRange\\\");\\r\\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\\r\\nconst protocol_declaration_1 = require(\\\"./protocol.declaration\\\");\\r\\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\\r\\nconst protocol_selectionRange_1 = require(\\\"./protocol.selectionRange\\\");\\r\\nexports.SelectionRangeRequest = protocol_selectionRange_1.SelectionRangeRequest;\\r\\nconst protocol_progress_1 = require(\\\"./protocol.progress\\\");\\r\\nexports.WorkDoneProgress = protocol_progress_1.WorkDoneProgress;\\r\\nexports.WorkDoneProgressCreateRequest = protocol_progress_1.WorkDoneProgressCreateRequest;\\r\\nexports.WorkDoneProgressCancelNotification = protocol_progress_1.WorkDoneProgressCancelNotification;\\r\\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\\r\\nlet __noDynamicImport;\\r\\n/**\\r\\n * The DocumentFilter namespace provides helper functions to work with\\r\\n * [DocumentFilter](#DocumentFilter) literals.\\r\\n */\\r\\nvar DocumentFilter;\\r\\n(function (DocumentFilter) {\\r\\n    function is(value) {\\r\\n        const candidate = value;\\r\\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\\r\\n    }\\r\\n    DocumentFilter.is = is;\\r\\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\\r\\n/**\\r\\n * The DocumentSelector namespace provides helper functions to work with\\r\\n * [DocumentSelector](#DocumentSelector)s.\\r\\n */\\r\\nvar DocumentSelector;\\r\\n(function (DocumentSelector) {\\r\\n    function is(value) {\\r\\n        if (!Array.isArray(value)) {\\r\\n            return false;\\r\\n        }\\r\\n        for (let elem of value) {\\r\\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\\r\\n                return false;\\r\\n            }\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n    DocumentSelector.is = is;\\r\\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\\r\\n/**\\r\\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\\r\\n * handler on the client side.\\r\\n */\\r\\nvar RegistrationRequest;\\r\\n(function (RegistrationRequest) {\\r\\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\\r\\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\\r\\n/**\\r\\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\\r\\n * handler on the client side.\\r\\n */\\r\\nvar UnregistrationRequest;\\r\\n(function (UnregistrationRequest) {\\r\\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\\r\\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\\r\\nvar ResourceOperationKind;\\r\\n(function (ResourceOperationKind) {\\r\\n    /**\\r\\n     * Supports creating new files and folders.\\r\\n     */\\r\\n    ResourceOperationKind.Create = 'create';\\r\\n    /**\\r\\n     * Supports renaming existing files and folders.\\r\\n     */\\r\\n    ResourceOperationKind.Rename = 'rename';\\r\\n    /**\\r\\n     * Supports deleting existing files and folders.\\r\\n     */\\r\\n    ResourceOperationKind.Delete = 'delete';\\r\\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\\r\\nvar FailureHandlingKind;\\r\\n(function (FailureHandlingKind) {\\r\\n    /**\\r\\n     * Applying the workspace change is simply aborted if one of the changes provided\\r\\n     * fails. All operations executed before the failing operation stay executed.\\r\\n     */\\r\\n    FailureHandlingKind.Abort = 'abort';\\r\\n    /**\\r\\n     * All operations are executed transactional. That means they either all\\r\\n     * succeed or no changes at all are applied to the workspace.\\r\\n     */\\r\\n    FailureHandlingKind.Transactional = 'transactional';\\r\\n    /**\\r\\n     * If the workspace edit contains only textual file changes they are executed transactional.\\r\\n     * If resource changes (create, rename or delete file) are part of the change the failure\\r\\n     * handling startegy is abort.\\r\\n     */\\r\\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\\r\\n    /**\\r\\n     * The client tries to undo the operations already executed. But there is no\\r\\n     * guarantee that this is succeeding.\\r\\n     */\\r\\n    FailureHandlingKind.Undo = 'undo';\\r\\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\\r\\n/**\\r\\n * The StaticRegistrationOptions namespace provides helper functions to work with\\r\\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\\r\\n */\\r\\nvar StaticRegistrationOptions;\\r\\n(function (StaticRegistrationOptions) {\\r\\n    function hasId(value) {\\r\\n        const candidate = value;\\r\\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\\r\\n    }\\r\\n    StaticRegistrationOptions.hasId = hasId;\\r\\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\\r\\n/**\\r\\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\\r\\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\\r\\n */\\r\\nvar TextDocumentRegistrationOptions;\\r\\n(function (TextDocumentRegistrationOptions) {\\r\\n    function is(value) {\\r\\n        const candidate = value;\\r\\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\\r\\n    }\\r\\n    TextDocumentRegistrationOptions.is = is;\\r\\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\\r\\n/**\\r\\n * The WorkDoneProgressOptions namespace provides helper functions to work with\\r\\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\\r\\n */\\r\\nvar WorkDoneProgressOptions;\\r\\n(function (WorkDoneProgressOptions) {\\r\\n    function is(value) {\\r\\n        const candidate = value;\\r\\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\\r\\n    }\\r\\n    WorkDoneProgressOptions.is = is;\\r\\n    function hasWorkDoneProgress(value) {\\r\\n        const candidate = value;\\r\\n        return candidate && Is.boolean(candidate.workDoneProgress);\\r\\n    }\\r\\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\\r\\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\\r\\n/**\\r\\n * The initialize request is sent from the client to the server.\\r\\n * It is sent once as the request after starting up the server.\\r\\n * The requests parameter is of type [InitializeParams](#InitializeParams)\\r\\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\\r\\n * resolves to such.\\r\\n */\\r\\nvar InitializeRequest;\\r\\n(function (InitializeRequest) {\\r\\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\\r\\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\\r\\n/**\\r\\n * Known error codes for an `InitializeError`;\\r\\n */\\r\\nvar InitializeError;\\r\\n(function (InitializeError) {\\r\\n    /**\\r\\n     * If the protocol version provided by the client can't be handled by the server.\\r\\n     * @deprecated This initialize error got replaced by client capabilities. There is\\r\\n     * no version handshake in version 3.0x\\r\\n     */\\r\\n    InitializeError.unknownProtocolVersion = 1;\\r\\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\\r\\n/**\\r\\n * The intialized notification is sent from the client to the\\r\\n * server after the client is fully initialized and the server\\r\\n * is allowed to send requests from the server to the client.\\r\\n */\\r\\nvar InitializedNotification;\\r\\n(function (InitializedNotification) {\\r\\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\\r\\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\\r\\n//---- Shutdown Method ----\\r\\n/**\\r\\n * A shutdown request is sent from the client to the server.\\r\\n * It is sent once when the client decides to shutdown the\\r\\n * server. The only notification that is sent after a shutdown request\\r\\n * is the exit event.\\r\\n */\\r\\nvar ShutdownRequest;\\r\\n(function (ShutdownRequest) {\\r\\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\\r\\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\\r\\n//---- Exit Notification ----\\r\\n/**\\r\\n * The exit event is sent from the client to the server to\\r\\n * ask the server to exit its process.\\r\\n */\\r\\nvar ExitNotification;\\r\\n(function (ExitNotification) {\\r\\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\\r\\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\\r\\n/**\\r\\n * The configuration change notification is sent from the client to the server\\r\\n * when the client's configuration has changed. The notification contains\\r\\n * the changed configuration as defined by the language client.\\r\\n */\\r\\nvar DidChangeConfigurationNotification;\\r\\n(function (DidChangeConfigurationNotification) {\\r\\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\\r\\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\\r\\n//---- Message show and log notifications ----\\r\\n/**\\r\\n * The message type\\r\\n */\\r\\nvar MessageType;\\r\\n(function (MessageType) {\\r\\n    /**\\r\\n     * An error message.\\r\\n     */\\r\\n    MessageType.Error = 1;\\r\\n    /**\\r\\n     * A warning message.\\r\\n     */\\r\\n    MessageType.Warning = 2;\\r\\n    /**\\r\\n     * An information message.\\r\\n     */\\r\\n    MessageType.Info = 3;\\r\\n    /**\\r\\n     * A log message.\\r\\n     */\\r\\n    MessageType.Log = 4;\\r\\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\\r\\n/**\\r\\n * The show message notification is sent from a server to a client to ask\\r\\n * the client to display a particular message in the user interface.\\r\\n */\\r\\nvar ShowMessageNotification;\\r\\n(function (ShowMessageNotification) {\\r\\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\\r\\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\\r\\n/**\\r\\n * The show message request is sent from the server to the client to show a message\\r\\n * and a set of options actions to the user.\\r\\n */\\r\\nvar ShowMessageRequest;\\r\\n(function (ShowMessageRequest) {\\r\\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\\r\\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\\r\\n/**\\r\\n * The log message notification is sent from the server to the client to ask\\r\\n * the client to log a particular message.\\r\\n */\\r\\nvar LogMessageNotification;\\r\\n(function (LogMessageNotification) {\\r\\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\\r\\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\\r\\n//---- Telemetry notification\\r\\n/**\\r\\n * The telemetry event notification is sent from the server to the client to ask\\r\\n * the client to log telemetry data.\\r\\n */\\r\\nvar TelemetryEventNotification;\\r\\n(function (TelemetryEventNotification) {\\r\\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\\r\\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\\r\\n/**\\r\\n * Defines how the host (editor) should sync\\r\\n * document changes to the language server.\\r\\n */\\r\\nvar TextDocumentSyncKind;\\r\\n(function (TextDocumentSyncKind) {\\r\\n    /**\\r\\n     * Documents should not be synced at all.\\r\\n     */\\r\\n    TextDocumentSyncKind.None = 0;\\r\\n    /**\\r\\n     * Documents are synced by always sending the full content\\r\\n     * of the document.\\r\\n     */\\r\\n    TextDocumentSyncKind.Full = 1;\\r\\n    /**\\r\\n     * Documents are synced by sending the full content on open.\\r\\n     * After that only incremental updates to the document are\\r\\n     * send.\\r\\n     */\\r\\n    TextDocumentSyncKind.Incremental = 2;\\r\\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\\r\\n/**\\r\\n * The document open notification is sent from the client to the server to signal\\r\\n * newly opened text documents. The document's truth is now managed by the client\\r\\n * and the server must not try to read the document's truth using the document's\\r\\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\\r\\n * mean that its content is presented in an editor. An open notification must not\\r\\n * be sent more than once without a corresponding close notification send before.\\r\\n * This means open and close notification must be balanced and the max open count\\r\\n * is one.\\r\\n */\\r\\nvar DidOpenTextDocumentNotification;\\r\\n(function (DidOpenTextDocumentNotification) {\\r\\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\\r\\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\\r\\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\\r\\n/**\\r\\n * The document change notification is sent from the client to the server to signal\\r\\n * changes to a text document.\\r\\n */\\r\\nvar DidChangeTextDocumentNotification;\\r\\n(function (DidChangeTextDocumentNotification) {\\r\\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\\r\\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\\r\\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\\r\\n/**\\r\\n * The document close notification is sent from the client to the server when\\r\\n * the document got closed in the client. The document's truth now exists where\\r\\n * the document's uri points to (e.g. if the document's uri is a file uri the\\r\\n * truth now exists on disk). As with the open notification the close notification\\r\\n * is about managing the document's content. Receiving a close notification\\r\\n * doesn't mean that the document was open in an editor before. A close\\r\\n * notification requires a previous open notification to be sent.\\r\\n */\\r\\nvar DidCloseTextDocumentNotification;\\r\\n(function (DidCloseTextDocumentNotification) {\\r\\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\\r\\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\\r\\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\\r\\n/**\\r\\n * The document save notification is sent from the client to the server when\\r\\n * the document got saved in the client.\\r\\n */\\r\\nvar DidSaveTextDocumentNotification;\\r\\n(function (DidSaveTextDocumentNotification) {\\r\\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\\r\\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\\r\\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\\r\\n/**\\r\\n * Represents reasons why a text document is saved.\\r\\n */\\r\\nvar TextDocumentSaveReason;\\r\\n(function (TextDocumentSaveReason) {\\r\\n    /**\\r\\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\\r\\n     * or by an API call.\\r\\n     */\\r\\n    TextDocumentSaveReason.Manual = 1;\\r\\n    /**\\r\\n     * Automatic after a delay.\\r\\n     */\\r\\n    TextDocumentSaveReason.AfterDelay = 2;\\r\\n    /**\\r\\n     * When the editor lost focus.\\r\\n     */\\r\\n    TextDocumentSaveReason.FocusOut = 3;\\r\\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\\r\\n/**\\r\\n * A document will save notification is sent from the client to the server before\\r\\n * the document is actually saved.\\r\\n */\\r\\nvar WillSaveTextDocumentNotification;\\r\\n(function (WillSaveTextDocumentNotification) {\\r\\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\\r\\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\\r\\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\\r\\n/**\\r\\n * A document will save request is sent from the client to the server before\\r\\n * the document is actually saved. The request can return an array of TextEdits\\r\\n * which will be applied to the text document before it is saved. Please note that\\r\\n * clients might drop results if computing the text edits took too long or if a\\r\\n * server constantly fails on this request. This is done to keep the save fast and\\r\\n * reliable.\\r\\n */\\r\\nvar WillSaveTextDocumentWaitUntilRequest;\\r\\n(function (WillSaveTextDocumentWaitUntilRequest) {\\r\\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\\r\\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\\r\\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\\r\\n/**\\r\\n * The watched files notification is sent from the client to the server when\\r\\n * the client detects changes to file watched by the language client.\\r\\n */\\r\\nvar DidChangeWatchedFilesNotification;\\r\\n(function (DidChangeWatchedFilesNotification) {\\r\\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\\r\\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\\r\\n/**\\r\\n * The file event type\\r\\n */\\r\\nvar FileChangeType;\\r\\n(function (FileChangeType) {\\r\\n    /**\\r\\n     * The file got created.\\r\\n     */\\r\\n    FileChangeType.Created = 1;\\r\\n    /**\\r\\n     * The file got changed.\\r\\n     */\\r\\n    FileChangeType.Changed = 2;\\r\\n    /**\\r\\n     * The file got deleted.\\r\\n     */\\r\\n    FileChangeType.Deleted = 3;\\r\\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\\r\\nvar WatchKind;\\r\\n(function (WatchKind) {\\r\\n    /**\\r\\n     * Interested in create events.\\r\\n     */\\r\\n    WatchKind.Create = 1;\\r\\n    /**\\r\\n     * Interested in change events\\r\\n     */\\r\\n    WatchKind.Change = 2;\\r\\n    /**\\r\\n     * Interested in delete events\\r\\n     */\\r\\n    WatchKind.Delete = 4;\\r\\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\\r\\n/**\\r\\n * Diagnostics notification are sent from the server to the client to signal\\r\\n * results of validation runs.\\r\\n */\\r\\nvar PublishDiagnosticsNotification;\\r\\n(function (PublishDiagnosticsNotification) {\\r\\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\\r\\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\\r\\n/**\\r\\n * How a completion was triggered\\r\\n */\\r\\nvar CompletionTriggerKind;\\r\\n(function (CompletionTriggerKind) {\\r\\n    /**\\r\\n     * Completion was triggered by typing an identifier (24x7 code\\r\\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\\r\\n     */\\r\\n    CompletionTriggerKind.Invoked = 1;\\r\\n    /**\\r\\n     * Completion was triggered by a trigger character specified by\\r\\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\\r\\n     */\\r\\n    CompletionTriggerKind.TriggerCharacter = 2;\\r\\n    /**\\r\\n     * Completion was re-triggered as current completion list is incomplete\\r\\n     */\\r\\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\\r\\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\\r\\n/**\\r\\n * Request to request completion at a given text document position. The request's\\r\\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\\r\\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\\r\\n * or a Thenable that resolves to such.\\r\\n *\\r\\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\\r\\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\\r\\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\\r\\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\\r\\n */\\r\\nvar CompletionRequest;\\r\\n(function (CompletionRequest) {\\r\\n    CompletionRequest.method = 'textDocument/completion';\\r\\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\\r\\n    /** @deprecated Use CompletionRequest.type */\\r\\n    CompletionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\\r\\n/**\\r\\n * Request to resolve additional information for a given completion item.The request's\\r\\n * parameter is of type [CompletionItem](#CompletionItem) the response\\r\\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\\r\\n */\\r\\nvar CompletionResolveRequest;\\r\\n(function (CompletionResolveRequest) {\\r\\n    CompletionResolveRequest.method = 'completionItem/resolve';\\r\\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\\r\\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\\r\\n/**\\r\\n * Request to request hover information at a given text document position. The request's\\r\\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\\r\\n * type [Hover](#Hover) or a Thenable that resolves to such.\\r\\n */\\r\\nvar HoverRequest;\\r\\n(function (HoverRequest) {\\r\\n    HoverRequest.method = 'textDocument/hover';\\r\\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\\r\\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\\r\\n/**\\r\\n * How a signature help was triggered.\\r\\n *\\r\\n * @since 3.15.0\\r\\n */\\r\\nvar SignatureHelpTriggerKind;\\r\\n(function (SignatureHelpTriggerKind) {\\r\\n    /**\\r\\n     * Signature help was invoked manually by the user or by a command.\\r\\n     */\\r\\n    SignatureHelpTriggerKind.Invoked = 1;\\r\\n    /**\\r\\n     * Signature help was triggered by a trigger character.\\r\\n     */\\r\\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\\r\\n    /**\\r\\n     * Signature help was triggered by the cursor moving or by the document content changing.\\r\\n     */\\r\\n    SignatureHelpTriggerKind.ContentChange = 3;\\r\\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\\r\\nvar SignatureHelpRequest;\\r\\n(function (SignatureHelpRequest) {\\r\\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\\r\\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\\r\\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\\r\\n/**\\r\\n * A request to resolve the definition location of a symbol at a given text\\r\\n * document position. The request's parameter is of type [TextDocumentPosition]\\r\\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\\r\\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\\r\\n * to such.\\r\\n */\\r\\nvar DefinitionRequest;\\r\\n(function (DefinitionRequest) {\\r\\n    DefinitionRequest.method = 'textDocument/definition';\\r\\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\\r\\n    /** @deprecated Use DefinitionRequest.type */\\r\\n    DefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\\r\\n/**\\r\\n * A request to resolve project-wide references for the symbol denoted\\r\\n * by the given text document position. The request's parameter is of\\r\\n * type [ReferenceParams](#ReferenceParams) the response is of type\\r\\n * [Location[]](#Location) or a Thenable that resolves to such.\\r\\n */\\r\\nvar ReferencesRequest;\\r\\n(function (ReferencesRequest) {\\r\\n    ReferencesRequest.method = 'textDocument/references';\\r\\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\\r\\n    /** @deprecated Use ReferencesRequest.type */\\r\\n    ReferencesRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\\r\\n/**\\r\\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\\r\\n * text document position. The request's parameter is of type [TextDocumentPosition]\\r\\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\\r\\n * (#DocumentHighlight) or a Thenable that resolves to such.\\r\\n */\\r\\nvar DocumentHighlightRequest;\\r\\n(function (DocumentHighlightRequest) {\\r\\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\\r\\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\\r\\n    /** @deprecated Use DocumentHighlightRequest.type */\\r\\n    DocumentHighlightRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\\r\\n/**\\r\\n * A request to list all symbols found in a given text document. The request's\\r\\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\\r\\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\\r\\n * that resolves to such.\\r\\n */\\r\\nvar DocumentSymbolRequest;\\r\\n(function (DocumentSymbolRequest) {\\r\\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\\r\\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\\r\\n    /** @deprecated Use DocumentSymbolRequest.type */\\r\\n    DocumentSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\\r\\n/**\\r\\n * A request to provide commands for the given text document and range.\\r\\n */\\r\\nvar CodeActionRequest;\\r\\n(function (CodeActionRequest) {\\r\\n    CodeActionRequest.method = 'textDocument/codeAction';\\r\\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\\r\\n    /** @deprecated Use CodeActionRequest.type */\\r\\n    CodeActionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\\r\\n/**\\r\\n * A request to list project-wide symbols matching the query string given\\r\\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\\r\\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\\r\\n * resolves to such.\\r\\n */\\r\\nvar WorkspaceSymbolRequest;\\r\\n(function (WorkspaceSymbolRequest) {\\r\\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\\r\\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\\r\\n    /** @deprecated Use WorkspaceSymbolRequest.type */\\r\\n    WorkspaceSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\\r\\n/**\\r\\n * A request to provide code lens for the given text document.\\r\\n */\\r\\nvar CodeLensRequest;\\r\\n(function (CodeLensRequest) {\\r\\n    CodeLensRequest.type = new messages_1.ProtocolRequestType('textDocument/codeLens');\\r\\n    /** @deprecated Use CodeLensRequest.type */\\r\\n    CodeLensRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\\r\\n/**\\r\\n * A request to resolve a command for a given code lens.\\r\\n */\\r\\nvar CodeLensResolveRequest;\\r\\n(function (CodeLensResolveRequest) {\\r\\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType('codeLens/resolve');\\r\\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\\r\\n/**\\r\\n * A request to provide document links\\r\\n */\\r\\nvar DocumentLinkRequest;\\r\\n(function (DocumentLinkRequest) {\\r\\n    DocumentLinkRequest.method = 'textDocument/documentLink';\\r\\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\\r\\n    /** @deprecated Use DocumentLinkRequest.type */\\r\\n    DocumentLinkRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\\r\\n/**\\r\\n * Request to resolve additional information for a given document link. The request's\\r\\n * parameter is of type [DocumentLink](#DocumentLink) the response\\r\\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\\r\\n */\\r\\nvar DocumentLinkResolveRequest;\\r\\n(function (DocumentLinkResolveRequest) {\\r\\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType('documentLink/resolve');\\r\\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\\r\\n/**\\r\\n * A request to to format a whole document.\\r\\n */\\r\\nvar DocumentFormattingRequest;\\r\\n(function (DocumentFormattingRequest) {\\r\\n    DocumentFormattingRequest.method = 'textDocument/formatting';\\r\\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\\r\\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\\r\\n/**\\r\\n * A request to to format a range in a document.\\r\\n */\\r\\nvar DocumentRangeFormattingRequest;\\r\\n(function (DocumentRangeFormattingRequest) {\\r\\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\\r\\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\\r\\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\\r\\n/**\\r\\n * A request to format a document on type.\\r\\n */\\r\\nvar DocumentOnTypeFormattingRequest;\\r\\n(function (DocumentOnTypeFormattingRequest) {\\r\\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\\r\\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\\r\\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\\r\\n/**\\r\\n * A request to rename a symbol.\\r\\n */\\r\\nvar RenameRequest;\\r\\n(function (RenameRequest) {\\r\\n    RenameRequest.method = 'textDocument/rename';\\r\\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\\r\\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\\r\\n/**\\r\\n * A request to test and perform the setup necessary for a rename.\\r\\n */\\r\\nvar PrepareRenameRequest;\\r\\n(function (PrepareRenameRequest) {\\r\\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\\r\\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\\r\\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\\r\\n/**\\r\\n * A request send from the client to the server to execute a command. The request might return\\r\\n * a workspace edit which the client will apply to the workspace.\\r\\n */\\r\\nvar ExecuteCommandRequest;\\r\\n(function (ExecuteCommandRequest) {\\r\\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\\r\\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\\r\\n/**\\r\\n * A request sent from the server to the client to modified certain resources.\\r\\n */\\r\\nvar ApplyWorkspaceEditRequest;\\r\\n(function (ApplyWorkspaceEditRequest) {\\r\\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\\r\\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nfunction boolean(value) {\\r\\n    return value === true || value === false;\\r\\n}\\r\\nexports.boolean = boolean;\\r\\nfunction string(value) {\\r\\n    return typeof value === 'string' || value instanceof String;\\r\\n}\\r\\nexports.string = string;\\r\\nfunction number(value) {\\r\\n    return typeof value === 'number' || value instanceof Number;\\r\\n}\\r\\nexports.number = number;\\r\\nfunction error(value) {\\r\\n    return value instanceof Error;\\r\\n}\\r\\nexports.error = error;\\r\\nfunction func(value) {\\r\\n    return typeof value === 'function';\\r\\n}\\r\\nexports.func = func;\\r\\nfunction array(value) {\\r\\n    return Array.isArray(value);\\r\\n}\\r\\nexports.array = array;\\r\\nfunction stringArray(value) {\\r\\n    return array(value) && value.every(elem => string(elem));\\r\\n}\\r\\nexports.stringArray = stringArray;\\r\\nfunction typedArray(value, check) {\\r\\n    return Array.isArray(value) && value.every(check);\\r\\n}\\r\\nexports.typedArray = typedArray;\\r\\nfunction objectLiteral(value) {\\r\\n    // Strictly speaking class instances pass this check as well. Since the LSP\\r\\n    // doesn't use classes we ignore this for now. If we do we need to add something\\r\\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\\r\\n    return value !== null && typeof value === 'object';\\r\\n}\\r\\nexports.objectLiteral = objectLiteral;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\\r\\nlet __noDynamicImport;\\r\\n/**\\r\\n * A request to resolve the implementation locations of a symbol at a given text\\r\\n * document position. The request's parameter is of type [TextDocumentPositioParams]\\r\\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\\r\\n * Thenable that resolves to such.\\r\\n */\\r\\nvar ImplementationRequest;\\r\\n(function (ImplementationRequest) {\\r\\n    ImplementationRequest.method = 'textDocument/implementation';\\r\\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\\r\\n    /** @deprecated Use ImplementationRequest.type */\\r\\n    ImplementationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\\r\\nlet __noDynamicImport;\\r\\n/**\\r\\n * A request to resolve the type definition locations of a symbol at a given text\\r\\n * document position. The request's parameter is of type [TextDocumentPositioParams]\\r\\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\\r\\n * Thenable that resolves to such.\\r\\n */\\r\\nvar TypeDefinitionRequest;\\r\\n(function (TypeDefinitionRequest) {\\r\\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\\r\\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\\r\\n    /** @deprecated Use TypeDefinitionRequest.type */\\r\\n    TypeDefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n/**\\r\\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\\r\\n */\\r\\nvar WorkspaceFoldersRequest;\\r\\n(function (WorkspaceFoldersRequest) {\\r\\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\\r\\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\\r\\n/**\\r\\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\\r\\n * folder configuration changes.\\r\\n */\\r\\nvar DidChangeWorkspaceFoldersNotification;\\r\\n(function (DidChangeWorkspaceFoldersNotification) {\\r\\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\\r\\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n/**\\r\\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\\r\\n * configuration setting.\\r\\n *\\r\\n * This pull model replaces the old push model were the client signaled configuration change via an\\r\\n * event. If the server still needs to react to configuration changes (since the server caches the\\r\\n * result of `workspace/configuration` requests) the server should register for an empty configuration\\r\\n * change event and empty the cache if such an event is received.\\r\\n */\\r\\nvar ConfigurationRequest;\\r\\n(function (ConfigurationRequest) {\\r\\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\\r\\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n/**\\r\\n * A request to list all color symbols found in a given text document. The request's\\r\\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\\r\\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\\r\\n * that resolves to such.\\r\\n */\\r\\nvar DocumentColorRequest;\\r\\n(function (DocumentColorRequest) {\\r\\n    DocumentColorRequest.method = 'textDocument/documentColor';\\r\\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\\r\\n    /** @deprecated Use DocumentColorRequest.type */\\r\\n    DocumentColorRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\\r\\n/**\\r\\n * A request to list all presentation for a color. The request's\\r\\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\\r\\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\\r\\n * that resolves to such.\\r\\n */\\r\\nvar ColorPresentationRequest;\\r\\n(function (ColorPresentationRequest) {\\r\\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\\r\\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\\r\\n\",\"\\\"use strict\\\";\\r\\n/*---------------------------------------------------------------------------------------------\\r\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n *--------------------------------------------------------------------------------------------*/\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n/**\\r\\n * Enum of known range kinds\\r\\n */\\r\\nvar FoldingRangeKind;\\r\\n(function (FoldingRangeKind) {\\r\\n    /**\\r\\n     * Folding range for a comment\\r\\n     */\\r\\n    FoldingRangeKind[\\\"Comment\\\"] = \\\"comment\\\";\\r\\n    /**\\r\\n     * Folding range for a imports or includes\\r\\n     */\\r\\n    FoldingRangeKind[\\\"Imports\\\"] = \\\"imports\\\";\\r\\n    /**\\r\\n     * Folding range for a region (e.g. `#region`)\\r\\n     */\\r\\n    FoldingRangeKind[\\\"Region\\\"] = \\\"region\\\";\\r\\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\\r\\n/**\\r\\n * A request to provide folding ranges in a document. The request's\\r\\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\\r\\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\\r\\n * that resolves to such.\\r\\n */\\r\\nvar FoldingRangeRequest;\\r\\n(function (FoldingRangeRequest) {\\r\\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\\r\\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\\r\\n    /** @deprecated Use FoldingRangeRequest.type */\\r\\n    FoldingRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\\r\\nlet __noDynamicImport;\\r\\n/**\\r\\n * A request to resolve the type definition locations of a symbol at a given text\\r\\n * document position. The request's parameter is of type [TextDocumentPositioParams]\\r\\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\\r\\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\\r\\n * to such.\\r\\n */\\r\\nvar DeclarationRequest;\\r\\n(function (DeclarationRequest) {\\r\\n    DeclarationRequest.method = 'textDocument/declaration';\\r\\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\\r\\n    /** @deprecated Use DeclarationRequest.type */\\r\\n    DeclarationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\\r\\n\",\"\\\"use strict\\\";\\r\\n/*---------------------------------------------------------------------------------------------\\r\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n *--------------------------------------------------------------------------------------------*/\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n/**\\r\\n * A request to provide selection ranges in a document. The request's\\r\\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\\r\\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\\r\\n * that resolves to such.\\r\\n */\\r\\nvar SelectionRangeRequest;\\r\\n(function (SelectionRangeRequest) {\\r\\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\\r\\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\\r\\n    /** @deprecated  Use SelectionRangeRequest.type */\\r\\n    SelectionRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\\r\\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_jsonrpc_1 = require(\\\"vscode-jsonrpc\\\");\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\nvar WorkDoneProgress;\\r\\n(function (WorkDoneProgress) {\\r\\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\\r\\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\\r\\n/**\\r\\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\\r\\n * reporting from the server.\\r\\n */\\r\\nvar WorkDoneProgressCreateRequest;\\r\\n(function (WorkDoneProgressCreateRequest) {\\r\\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\\r\\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\\r\\n/**\\r\\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\\r\\n * initiated on the server side.\\r\\n */\\r\\nvar WorkDoneProgressCancelNotification;\\r\\n(function (WorkDoneProgressCancelNotification) {\\r\\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\\r\\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) TypeFox and others. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n/**\\r\\n * A request to result a `CallHierarchyItem` in a document at a given position.\\r\\n * Can be used as an input to a incoming or outgoing call hierarchy.\\r\\n *\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar CallHierarchyPrepareRequest;\\r\\n(function (CallHierarchyPrepareRequest) {\\r\\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\\r\\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\\r\\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\\r\\n/**\\r\\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\\r\\n *\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar CallHierarchyIncomingCallsRequest;\\r\\n(function (CallHierarchyIncomingCallsRequest) {\\r\\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\\r\\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\\r\\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\\r\\n/**\\r\\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\\r\\n *\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar CallHierarchyOutgoingCallsRequest;\\r\\n(function (CallHierarchyOutgoingCallsRequest) {\\r\\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\\r\\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\\r\\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst messages_1 = require(\\\"./messages\\\");\\r\\n/**\\r\\n * A set of predefined token types. This set is not fixed\\r\\n * an clients can specify additional token types via the\\r\\n * corresponding client capabilities.\\r\\n *\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar SemanticTokenTypes;\\r\\n(function (SemanticTokenTypes) {\\r\\n    SemanticTokenTypes[\\\"comment\\\"] = \\\"comment\\\";\\r\\n    SemanticTokenTypes[\\\"keyword\\\"] = \\\"keyword\\\";\\r\\n    SemanticTokenTypes[\\\"string\\\"] = \\\"string\\\";\\r\\n    SemanticTokenTypes[\\\"number\\\"] = \\\"number\\\";\\r\\n    SemanticTokenTypes[\\\"regexp\\\"] = \\\"regexp\\\";\\r\\n    SemanticTokenTypes[\\\"operator\\\"] = \\\"operator\\\";\\r\\n    SemanticTokenTypes[\\\"namespace\\\"] = \\\"namespace\\\";\\r\\n    SemanticTokenTypes[\\\"type\\\"] = \\\"type\\\";\\r\\n    SemanticTokenTypes[\\\"struct\\\"] = \\\"struct\\\";\\r\\n    SemanticTokenTypes[\\\"class\\\"] = \\\"class\\\";\\r\\n    SemanticTokenTypes[\\\"interface\\\"] = \\\"interface\\\";\\r\\n    SemanticTokenTypes[\\\"enum\\\"] = \\\"enum\\\";\\r\\n    SemanticTokenTypes[\\\"typeParameter\\\"] = \\\"typeParameter\\\";\\r\\n    SemanticTokenTypes[\\\"function\\\"] = \\\"function\\\";\\r\\n    SemanticTokenTypes[\\\"member\\\"] = \\\"member\\\";\\r\\n    SemanticTokenTypes[\\\"property\\\"] = \\\"property\\\";\\r\\n    SemanticTokenTypes[\\\"macro\\\"] = \\\"macro\\\";\\r\\n    SemanticTokenTypes[\\\"variable\\\"] = \\\"variable\\\";\\r\\n    SemanticTokenTypes[\\\"parameter\\\"] = \\\"parameter\\\";\\r\\n    SemanticTokenTypes[\\\"label\\\"] = \\\"label\\\";\\r\\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\\r\\n/**\\r\\n * A set of predefined token modifiers. This set is not fixed\\r\\n * an clients can specify additional token types via the\\r\\n * corresponding client capabilities.\\r\\n *\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar SemanticTokenModifiers;\\r\\n(function (SemanticTokenModifiers) {\\r\\n    SemanticTokenModifiers[\\\"documentation\\\"] = \\\"documentation\\\";\\r\\n    SemanticTokenModifiers[\\\"declaration\\\"] = \\\"declaration\\\";\\r\\n    SemanticTokenModifiers[\\\"definition\\\"] = \\\"definition\\\";\\r\\n    SemanticTokenModifiers[\\\"reference\\\"] = \\\"reference\\\";\\r\\n    SemanticTokenModifiers[\\\"static\\\"] = \\\"static\\\";\\r\\n    SemanticTokenModifiers[\\\"abstract\\\"] = \\\"abstract\\\";\\r\\n    SemanticTokenModifiers[\\\"deprecated\\\"] = \\\"deprecated\\\";\\r\\n    SemanticTokenModifiers[\\\"async\\\"] = \\\"async\\\";\\r\\n    SemanticTokenModifiers[\\\"volatile\\\"] = \\\"volatile\\\";\\r\\n    SemanticTokenModifiers[\\\"readonly\\\"] = \\\"readonly\\\";\\r\\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\\r\\n/**\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar SemanticTokens;\\r\\n(function (SemanticTokens) {\\r\\n    function is(value) {\\r\\n        const candidate = value;\\r\\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\\r\\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\\r\\n    }\\r\\n    SemanticTokens.is = is;\\r\\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\\r\\n/**\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar SemanticTokensRequest;\\r\\n(function (SemanticTokensRequest) {\\r\\n    SemanticTokensRequest.method = 'textDocument/semanticTokens';\\r\\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\\r\\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\\r\\n/**\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar SemanticTokensEditsRequest;\\r\\n(function (SemanticTokensEditsRequest) {\\r\\n    SemanticTokensEditsRequest.method = 'textDocument/semanticTokens/edits';\\r\\n    SemanticTokensEditsRequest.type = new messages_1.ProtocolRequestType(SemanticTokensEditsRequest.method);\\r\\n})(SemanticTokensEditsRequest = exports.SemanticTokensEditsRequest || (exports.SemanticTokensEditsRequest = {}));\\r\\n/**\\r\\n * @since 3.16.0 - Proposed state\\r\\n */\\r\\nvar SemanticTokensRangeRequest;\\r\\n(function (SemanticTokensRangeRequest) {\\r\\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\\r\\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\\r\\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst code = require(\\\"vscode\\\");\\r\\nconst proto = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst Is = require(\\\"./utils/is\\\");\\r\\nconst protocolCompletionItem_1 = require(\\\"./protocolCompletionItem\\\");\\r\\nconst protocolCodeLens_1 = require(\\\"./protocolCodeLens\\\");\\r\\nconst protocolDocumentLink_1 = require(\\\"./protocolDocumentLink\\\");\\r\\nfunction createConverter(uriConverter) {\\r\\n    const nullConverter = (value) => value.toString();\\r\\n    const _uriConverter = uriConverter || nullConverter;\\r\\n    function asUri(value) {\\r\\n        return _uriConverter(value);\\r\\n    }\\r\\n    function asTextDocumentIdentifier(textDocument) {\\r\\n        return {\\r\\n            uri: _uriConverter(textDocument.uri)\\r\\n        };\\r\\n    }\\r\\n    function asVersionedTextDocumentIdentifier(textDocument) {\\r\\n        return {\\r\\n            uri: _uriConverter(textDocument.uri),\\r\\n            version: textDocument.version\\r\\n        };\\r\\n    }\\r\\n    function asOpenTextDocumentParams(textDocument) {\\r\\n        return {\\r\\n            textDocument: {\\r\\n                uri: _uriConverter(textDocument.uri),\\r\\n                languageId: textDocument.languageId,\\r\\n                version: textDocument.version,\\r\\n                text: textDocument.getText()\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n    function isTextDocumentChangeEvent(value) {\\r\\n        let candidate = value;\\r\\n        return !!candidate.document && !!candidate.contentChanges;\\r\\n    }\\r\\n    function isTextDocument(value) {\\r\\n        let candidate = value;\\r\\n        return !!candidate.uri && !!candidate.version;\\r\\n    }\\r\\n    function asChangeTextDocumentParams(arg) {\\r\\n        if (isTextDocument(arg)) {\\r\\n            let result = {\\r\\n                textDocument: {\\r\\n                    uri: _uriConverter(arg.uri),\\r\\n                    version: arg.version\\r\\n                },\\r\\n                contentChanges: [{ text: arg.getText() }]\\r\\n            };\\r\\n            return result;\\r\\n        }\\r\\n        else if (isTextDocumentChangeEvent(arg)) {\\r\\n            let document = arg.document;\\r\\n            let result = {\\r\\n                textDocument: {\\r\\n                    uri: _uriConverter(document.uri),\\r\\n                    version: document.version\\r\\n                },\\r\\n                contentChanges: arg.contentChanges.map((change) => {\\r\\n                    let range = change.range;\\r\\n                    return {\\r\\n                        range: {\\r\\n                            start: { line: range.start.line, character: range.start.character },\\r\\n                            end: { line: range.end.line, character: range.end.character }\\r\\n                        },\\r\\n                        rangeLength: change.rangeLength,\\r\\n                        text: change.text\\r\\n                    };\\r\\n                })\\r\\n            };\\r\\n            return result;\\r\\n        }\\r\\n        else {\\r\\n            throw Error('Unsupported text document change parameter');\\r\\n        }\\r\\n    }\\r\\n    function asCloseTextDocumentParams(textDocument) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument)\\r\\n        };\\r\\n    }\\r\\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\\r\\n        let result = {\\r\\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\\r\\n        };\\r\\n        if (includeContent) {\\r\\n            result.text = textDocument.getText();\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asTextDocumentSaveReason(reason) {\\r\\n        switch (reason) {\\r\\n            case code.TextDocumentSaveReason.Manual:\\r\\n                return proto.TextDocumentSaveReason.Manual;\\r\\n            case code.TextDocumentSaveReason.AfterDelay:\\r\\n                return proto.TextDocumentSaveReason.AfterDelay;\\r\\n            case code.TextDocumentSaveReason.FocusOut:\\r\\n                return proto.TextDocumentSaveReason.FocusOut;\\r\\n        }\\r\\n        return proto.TextDocumentSaveReason.Manual;\\r\\n    }\\r\\n    function asWillSaveTextDocumentParams(event) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(event.document),\\r\\n            reason: asTextDocumentSaveReason(event.reason)\\r\\n        };\\r\\n    }\\r\\n    function asTextDocumentPositionParams(textDocument, position) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument),\\r\\n            position: asWorkerPosition(position)\\r\\n        };\\r\\n    }\\r\\n    function asCompletionTriggerKind(triggerKind) {\\r\\n        switch (triggerKind) {\\r\\n            case code.CompletionTriggerKind.TriggerCharacter:\\r\\n                return proto.CompletionTriggerKind.TriggerCharacter;\\r\\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\\r\\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\\r\\n            default:\\r\\n                return proto.CompletionTriggerKind.Invoked;\\r\\n        }\\r\\n    }\\r\\n    function asCompletionParams(textDocument, position, context) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument),\\r\\n            position: asWorkerPosition(position),\\r\\n            context: {\\r\\n                triggerKind: asCompletionTriggerKind(context.triggerKind),\\r\\n                triggerCharacter: context.triggerCharacter\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n    function asSignatureHelpTriggerKind(triggerKind) {\\r\\n        switch (triggerKind) {\\r\\n            case code.SignatureHelpTriggerKind.Invoke:\\r\\n                return proto.SignatureHelpTriggerKind.Invoked;\\r\\n            case code.SignatureHelpTriggerKind.TriggerCharacter:\\r\\n                return proto.SignatureHelpTriggerKind.TriggerCharacter;\\r\\n            case code.SignatureHelpTriggerKind.ContentChange:\\r\\n                return proto.SignatureHelpTriggerKind.ContentChange;\\r\\n        }\\r\\n    }\\r\\n    function asParameterInformation(value) {\\r\\n        // We leave the documentation out on purpose since it usually adds no\\r\\n        // value for the server.\\r\\n        return {\\r\\n            label: value.label\\r\\n        };\\r\\n    }\\r\\n    function asParameterInformations(values) {\\r\\n        return values.map(asParameterInformation);\\r\\n    }\\r\\n    function asSignatureInformation(value) {\\r\\n        // We leave the documentation out on purpose since it usually adds no\\r\\n        // value for the server.\\r\\n        return {\\r\\n            label: value.label,\\r\\n            parameters: asParameterInformations(value.parameters)\\r\\n        };\\r\\n    }\\r\\n    function asSignatureInformations(values) {\\r\\n        return values.map(asSignatureInformation);\\r\\n    }\\r\\n    function asSignatureHelp(value) {\\r\\n        if (value === undefined) {\\r\\n            return value;\\r\\n        }\\r\\n        return {\\r\\n            signatures: asSignatureInformations(value.signatures),\\r\\n            activeSignature: value.activeSignature,\\r\\n            activeParameter: value.activeParameter\\r\\n        };\\r\\n    }\\r\\n    function asSignatureHelpParams(textDocument, position, context) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument),\\r\\n            position: asWorkerPosition(position),\\r\\n            context: {\\r\\n                isRetrigger: context.isRetrigger,\\r\\n                triggerCharacter: context.triggerCharacter,\\r\\n                triggerKind: asSignatureHelpTriggerKind(context.triggerKind),\\r\\n                activeSignatureHelp: asSignatureHelp(context.activeSignatureHelp)\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n    function asWorkerPosition(position) {\\r\\n        return { line: position.line, character: position.character };\\r\\n    }\\r\\n    function asPosition(value) {\\r\\n        if (value === undefined || value === null) {\\r\\n            return value;\\r\\n        }\\r\\n        return { line: value.line, character: value.character };\\r\\n    }\\r\\n    function asPositions(value) {\\r\\n        let result = [];\\r\\n        for (let elem of value) {\\r\\n            result.push(asPosition(elem));\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function isInsertReplace(value) {\\r\\n        const candidate = value;\\r\\n        return candidate && !!candidate.inserting && !!candidate.replacing;\\r\\n    }\\r\\n    function asRange(value) {\\r\\n        if (value === undefined || value === null) {\\r\\n            return value;\\r\\n        }\\r\\n        // The LSP has no support yet for insert replace. So this can never happen.\\r\\n        if (isInsertReplace(value)) {\\r\\n            throw new Error(`Receving unknown insert replace range.`);\\r\\n        }\\r\\n        return { start: asPosition(value.start), end: asPosition(value.end) };\\r\\n    }\\r\\n    function asLocation(value) {\\r\\n        if (value === undefined || value === null) {\\r\\n            return value;\\r\\n        }\\r\\n        return proto.Location.create(asUri(value.uri), asRange(value.range));\\r\\n    }\\r\\n    function asDiagnosticSeverity(value) {\\r\\n        switch (value) {\\r\\n            case code.DiagnosticSeverity.Error:\\r\\n                return proto.DiagnosticSeverity.Error;\\r\\n            case code.DiagnosticSeverity.Warning:\\r\\n                return proto.DiagnosticSeverity.Warning;\\r\\n            case code.DiagnosticSeverity.Information:\\r\\n                return proto.DiagnosticSeverity.Information;\\r\\n            case code.DiagnosticSeverity.Hint:\\r\\n                return proto.DiagnosticSeverity.Hint;\\r\\n        }\\r\\n    }\\r\\n    function asDiagnosticTags(tags) {\\r\\n        if (!tags) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = [];\\r\\n        for (let tag of tags) {\\r\\n            let converted = asDiagnosticTag(tag);\\r\\n            if (converted !== undefined) {\\r\\n                result.push(converted);\\r\\n            }\\r\\n        }\\r\\n        return result.length > 0 ? result : undefined;\\r\\n    }\\r\\n    function asDiagnosticTag(tag) {\\r\\n        switch (tag) {\\r\\n            case code.DiagnosticTag.Unnecessary:\\r\\n                return proto.DiagnosticTag.Unnecessary;\\r\\n            case code.DiagnosticTag.Deprecated:\\r\\n                return proto.DiagnosticTag.Deprecated;\\r\\n            default:\\r\\n                return undefined;\\r\\n        }\\r\\n    }\\r\\n    function asRelatedInformation(item) {\\r\\n        return {\\r\\n            message: item.message,\\r\\n            location: asLocation(item.location)\\r\\n        };\\r\\n    }\\r\\n    function asRelatedInformations(items) {\\r\\n        return items.map(asRelatedInformation);\\r\\n    }\\r\\n    function asDiagnostic(item) {\\r\\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\\r\\n        if (Is.number(item.severity)) {\\r\\n            result.severity = asDiagnosticSeverity(item.severity);\\r\\n        }\\r\\n        if (Is.number(item.code) || Is.string(item.code)) {\\r\\n            result.code = item.code;\\r\\n        }\\r\\n        if (Array.isArray(item.tags)) {\\r\\n            result.tags = asDiagnosticTags(item.tags);\\r\\n        }\\r\\n        if (item.relatedInformation) {\\r\\n            result.relatedInformation = asRelatedInformations(item.relatedInformation);\\r\\n        }\\r\\n        if (item.source) {\\r\\n            result.source = item.source;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asDiagnostics(items) {\\r\\n        if (items === undefined || items === null) {\\r\\n            return items;\\r\\n        }\\r\\n        return items.map(asDiagnostic);\\r\\n    }\\r\\n    function asDocumentation(format, documentation) {\\r\\n        switch (format) {\\r\\n            case '$string':\\r\\n                return documentation;\\r\\n            case proto.MarkupKind.PlainText:\\r\\n                return { kind: format, value: documentation };\\r\\n            case proto.MarkupKind.Markdown:\\r\\n                return { kind: format, value: documentation.value };\\r\\n            default:\\r\\n                return `Unsupported Markup content received. Kind is: ${format}`;\\r\\n        }\\r\\n    }\\r\\n    function asCompletionItemTag(tag) {\\r\\n        switch (tag) {\\r\\n            case code.CompletionItemTag.Deprecated:\\r\\n                return proto.CompletionItemTag.Deprecated;\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    function asCompletionItemTags(tags) {\\r\\n        if (tags === undefined) {\\r\\n            return tags;\\r\\n        }\\r\\n        const result = [];\\r\\n        for (let tag of tags) {\\r\\n            const converted = asCompletionItemTag(tag);\\r\\n            if (converted !== undefined) {\\r\\n                result.push(converted);\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCompletionItemKind(value, original) {\\r\\n        if (original !== undefined) {\\r\\n            return original;\\r\\n        }\\r\\n        return value + 1;\\r\\n    }\\r\\n    function asCompletionItem(item) {\\r\\n        let result = { label: item.label };\\r\\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\\r\\n        if (item.detail) {\\r\\n            result.detail = item.detail;\\r\\n        }\\r\\n        // We only send items back we created. So this can't be something else than\\r\\n        // a string right now.\\r\\n        if (item.documentation) {\\r\\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\\r\\n                result.documentation = item.documentation;\\r\\n            }\\r\\n            else {\\r\\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\\r\\n            }\\r\\n        }\\r\\n        if (item.filterText) {\\r\\n            result.filterText = item.filterText;\\r\\n        }\\r\\n        fillPrimaryInsertText(result, item);\\r\\n        if (Is.number(item.kind)) {\\r\\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\\r\\n        }\\r\\n        if (item.sortText) {\\r\\n            result.sortText = item.sortText;\\r\\n        }\\r\\n        if (item.additionalTextEdits) {\\r\\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\\r\\n        }\\r\\n        if (item.commitCharacters) {\\r\\n            result.commitCharacters = item.commitCharacters.slice();\\r\\n        }\\r\\n        if (item.command) {\\r\\n            result.command = asCommand(item.command);\\r\\n        }\\r\\n        if (item.preselect === true || item.preselect === false) {\\r\\n            result.preselect = item.preselect;\\r\\n        }\\r\\n        const tags = asCompletionItemTags(item.tags);\\r\\n        if (protocolItem) {\\r\\n            if (protocolItem.data !== undefined) {\\r\\n                result.data = protocolItem.data;\\r\\n            }\\r\\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\\r\\n                if (protocolItem.deprecated === true && tags !== undefined && tags.length > 0) {\\r\\n                    const index = tags.indexOf(code.CompletionItemTag.Deprecated);\\r\\n                    if (index !== -1) {\\r\\n                        tags.splice(index, 1);\\r\\n                    }\\r\\n                }\\r\\n                result.deprecated = protocolItem.deprecated;\\r\\n            }\\r\\n        }\\r\\n        if (tags !== undefined && tags.length > 0) {\\r\\n            result.tags = tags;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function fillPrimaryInsertText(target, source) {\\r\\n        let format = proto.InsertTextFormat.PlainText;\\r\\n        let text = undefined;\\r\\n        let range = undefined;\\r\\n        if (source.textEdit) {\\r\\n            text = source.textEdit.newText;\\r\\n            range = asRange(source.textEdit.range);\\r\\n        }\\r\\n        else if (source.insertText instanceof code.SnippetString) {\\r\\n            format = proto.InsertTextFormat.Snippet;\\r\\n            text = source.insertText.value;\\r\\n        }\\r\\n        else {\\r\\n            text = source.insertText;\\r\\n        }\\r\\n        if (source.range) {\\r\\n            range = asRange(source.range);\\r\\n        }\\r\\n        target.insertTextFormat = format;\\r\\n        if (source.fromEdit && text !== undefined && range !== undefined) {\\r\\n            target.textEdit = { newText: text, range: range };\\r\\n        }\\r\\n        else {\\r\\n            target.insertText = text;\\r\\n        }\\r\\n    }\\r\\n    function asTextEdit(edit) {\\r\\n        return { range: asRange(edit.range), newText: edit.newText };\\r\\n    }\\r\\n    function asTextEdits(edits) {\\r\\n        if (edits === undefined || edits === null) {\\r\\n            return edits;\\r\\n        }\\r\\n        return edits.map(asTextEdit);\\r\\n    }\\r\\n    function asSymbolKind(item) {\\r\\n        if (item <= code.SymbolKind.TypeParameter) {\\r\\n            // Symbol kind is one based in the protocol and zero based in code.\\r\\n            return (item + 1);\\r\\n        }\\r\\n        return proto.SymbolKind.Property;\\r\\n    }\\r\\n    function asSymbolTag(item) {\\r\\n        return item;\\r\\n    }\\r\\n    function asSymbolTags(items) {\\r\\n        return items.map(asSymbolTag);\\r\\n    }\\r\\n    function asReferenceParams(textDocument, position, options) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument),\\r\\n            position: asWorkerPosition(position),\\r\\n            context: { includeDeclaration: options.includeDeclaration }\\r\\n        };\\r\\n    }\\r\\n    function asCodeActionContext(context) {\\r\\n        if (context === undefined || context === null) {\\r\\n            return context;\\r\\n        }\\r\\n        let only;\\r\\n        if (context.only && Is.string(context.only.value)) {\\r\\n            only = [context.only.value];\\r\\n        }\\r\\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), only);\\r\\n    }\\r\\n    function asCommand(item) {\\r\\n        let result = proto.Command.create(item.title, item.command);\\r\\n        if (item.arguments) {\\r\\n            result.arguments = item.arguments;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCodeLens(item) {\\r\\n        let result = proto.CodeLens.create(asRange(item.range));\\r\\n        if (item.command) {\\r\\n            result.command = asCommand(item.command);\\r\\n        }\\r\\n        if (item instanceof protocolCodeLens_1.default) {\\r\\n            if (item.data) {\\r\\n                result.data = item.data;\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asFormattingOptions(item) {\\r\\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\\r\\n    }\\r\\n    function asDocumentSymbolParams(textDocument) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument)\\r\\n        };\\r\\n    }\\r\\n    function asCodeLensParams(textDocument) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument)\\r\\n        };\\r\\n    }\\r\\n    function asDocumentLink(item) {\\r\\n        let result = proto.DocumentLink.create(asRange(item.range));\\r\\n        if (item.target) {\\r\\n            result.target = asUri(item.target);\\r\\n        }\\r\\n        if (item.tooltip !== undefined) {\\r\\n            result.tooltip = item.tooltip;\\r\\n        }\\r\\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\\r\\n        if (protocolItem && protocolItem.data) {\\r\\n            result.data = protocolItem.data;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asDocumentLinkParams(textDocument) {\\r\\n        return {\\r\\n            textDocument: asTextDocumentIdentifier(textDocument)\\r\\n        };\\r\\n    }\\r\\n    return {\\r\\n        asUri,\\r\\n        asTextDocumentIdentifier,\\r\\n        asVersionedTextDocumentIdentifier,\\r\\n        asOpenTextDocumentParams,\\r\\n        asChangeTextDocumentParams,\\r\\n        asCloseTextDocumentParams,\\r\\n        asSaveTextDocumentParams,\\r\\n        asWillSaveTextDocumentParams,\\r\\n        asTextDocumentPositionParams,\\r\\n        asCompletionParams,\\r\\n        asSignatureHelpParams,\\r\\n        asWorkerPosition,\\r\\n        asRange,\\r\\n        asPosition,\\r\\n        asPositions,\\r\\n        asLocation,\\r\\n        asDiagnosticSeverity,\\r\\n        asDiagnosticTag,\\r\\n        asDiagnostic,\\r\\n        asDiagnostics,\\r\\n        asCompletionItem,\\r\\n        asTextEdit,\\r\\n        asSymbolKind,\\r\\n        asSymbolTag,\\r\\n        asSymbolTags,\\r\\n        asReferenceParams,\\r\\n        asCodeActionContext,\\r\\n        asCommand,\\r\\n        asCodeLens,\\r\\n        asFormattingOptions,\\r\\n        asDocumentSymbolParams,\\r\\n        asCodeLensParams,\\r\\n        asDocumentLink,\\r\\n        asDocumentLinkParams\\r\\n    };\\r\\n}\\r\\nexports.createConverter = createConverter;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst code = require(\\\"vscode\\\");\\r\\nconst ls = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst Is = require(\\\"./utils/is\\\");\\r\\nconst protocolCompletionItem_1 = require(\\\"./protocolCompletionItem\\\");\\r\\nconst protocolCodeLens_1 = require(\\\"./protocolCodeLens\\\");\\r\\nconst protocolDocumentLink_1 = require(\\\"./protocolDocumentLink\\\");\\r\\nvar CodeBlock;\\r\\n(function (CodeBlock) {\\r\\n    function is(value) {\\r\\n        let candidate = value;\\r\\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\\r\\n    }\\r\\n    CodeBlock.is = is;\\r\\n})(CodeBlock || (CodeBlock = {}));\\r\\nfunction createConverter(uriConverter) {\\r\\n    const nullConverter = (value) => code.Uri.parse(value);\\r\\n    const _uriConverter = uriConverter || nullConverter;\\r\\n    function asUri(value) {\\r\\n        return _uriConverter(value);\\r\\n    }\\r\\n    function asDiagnostics(diagnostics) {\\r\\n        return diagnostics.map(asDiagnostic);\\r\\n    }\\r\\n    function asDiagnostic(diagnostic) {\\r\\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\\r\\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\\r\\n            result.code = diagnostic.code;\\r\\n        }\\r\\n        if (diagnostic.source) {\\r\\n            result.source = diagnostic.source;\\r\\n        }\\r\\n        if (diagnostic.relatedInformation) {\\r\\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\\r\\n        }\\r\\n        if (Array.isArray(diagnostic.tags)) {\\r\\n            result.tags = asDiagnosticTags(diagnostic.tags);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asRelatedInformation(relatedInformation) {\\r\\n        return relatedInformation.map(asDiagnosticRelatedInformation);\\r\\n    }\\r\\n    function asDiagnosticRelatedInformation(information) {\\r\\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\\r\\n    }\\r\\n    function asDiagnosticTags(tags) {\\r\\n        if (!tags) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = [];\\r\\n        for (let tag of tags) {\\r\\n            let converted = asDiagnosticTag(tag);\\r\\n            if (converted !== undefined) {\\r\\n                result.push(converted);\\r\\n            }\\r\\n        }\\r\\n        return result.length > 0 ? result : undefined;\\r\\n    }\\r\\n    function asDiagnosticTag(tag) {\\r\\n        switch (tag) {\\r\\n            case ls.DiagnosticTag.Unnecessary:\\r\\n                return code.DiagnosticTag.Unnecessary;\\r\\n            case ls.DiagnosticTag.Deprecated:\\r\\n                return code.DiagnosticTag.Deprecated;\\r\\n            default:\\r\\n                return undefined;\\r\\n        }\\r\\n    }\\r\\n    function asPosition(value) {\\r\\n        if (!value) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return new code.Position(value.line, value.character);\\r\\n    }\\r\\n    function asRange(value) {\\r\\n        if (!value) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return new code.Range(asPosition(value.start), asPosition(value.end));\\r\\n    }\\r\\n    function asRanges(value) {\\r\\n        return value.map(value => asRange(value));\\r\\n    }\\r\\n    function asDiagnosticSeverity(value) {\\r\\n        if (value === undefined || value === null) {\\r\\n            return code.DiagnosticSeverity.Error;\\r\\n        }\\r\\n        switch (value) {\\r\\n            case ls.DiagnosticSeverity.Error:\\r\\n                return code.DiagnosticSeverity.Error;\\r\\n            case ls.DiagnosticSeverity.Warning:\\r\\n                return code.DiagnosticSeverity.Warning;\\r\\n            case ls.DiagnosticSeverity.Information:\\r\\n                return code.DiagnosticSeverity.Information;\\r\\n            case ls.DiagnosticSeverity.Hint:\\r\\n                return code.DiagnosticSeverity.Hint;\\r\\n        }\\r\\n        return code.DiagnosticSeverity.Error;\\r\\n    }\\r\\n    function asHoverContent(value) {\\r\\n        if (Is.string(value)) {\\r\\n            return new code.MarkdownString(value);\\r\\n        }\\r\\n        else if (CodeBlock.is(value)) {\\r\\n            let result = new code.MarkdownString();\\r\\n            return result.appendCodeblock(value.value, value.language);\\r\\n        }\\r\\n        else if (Array.isArray(value)) {\\r\\n            let result = [];\\r\\n            for (let element of value) {\\r\\n                let item = new code.MarkdownString();\\r\\n                if (CodeBlock.is(element)) {\\r\\n                    item.appendCodeblock(element.value, element.language);\\r\\n                }\\r\\n                else {\\r\\n                    item.appendMarkdown(element);\\r\\n                }\\r\\n                result.push(item);\\r\\n            }\\r\\n            return result;\\r\\n        }\\r\\n        else {\\r\\n            let result;\\r\\n            switch (value.kind) {\\r\\n                case ls.MarkupKind.Markdown:\\r\\n                    return new code.MarkdownString(value.value);\\r\\n                case ls.MarkupKind.PlainText:\\r\\n                    result = new code.MarkdownString();\\r\\n                    result.appendText(value.value);\\r\\n                    return result;\\r\\n                default:\\r\\n                    result = new code.MarkdownString();\\r\\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\\r\\n                    return result;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    function asDocumentation(value) {\\r\\n        if (Is.string(value)) {\\r\\n            return value;\\r\\n        }\\r\\n        else {\\r\\n            switch (value.kind) {\\r\\n                case ls.MarkupKind.Markdown:\\r\\n                    return new code.MarkdownString(value.value);\\r\\n                case ls.MarkupKind.PlainText:\\r\\n                    return value.value;\\r\\n                default:\\r\\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    function asHover(hover) {\\r\\n        if (!hover) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\\r\\n    }\\r\\n    function asCompletionResult(result) {\\r\\n        if (!result) {\\r\\n            return undefined;\\r\\n        }\\r\\n        if (Array.isArray(result)) {\\r\\n            let items = result;\\r\\n            return items.map(asCompletionItem);\\r\\n        }\\r\\n        let list = result;\\r\\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\\r\\n    }\\r\\n    function asCompletionItemKind(value) {\\r\\n        // Protocol item kind is 1 based, codes item kind is zero based.\\r\\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\\r\\n            return [value - 1, undefined];\\r\\n        }\\r\\n        return [code.CompletionItemKind.Text, value];\\r\\n    }\\r\\n    function asCompletionItemTag(tag) {\\r\\n        switch (tag) {\\r\\n            case ls.CompletionItemTag.Deprecated:\\r\\n                return code.CompletionItemTag.Deprecated;\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    function asCompletionItemTags(tags) {\\r\\n        if (tags === undefined || tags === null) {\\r\\n            return [];\\r\\n        }\\r\\n        const result = [];\\r\\n        for (let tag of tags) {\\r\\n            const converted = asCompletionItemTag(tag);\\r\\n            if (converted !== undefined) {\\r\\n                result.push(converted);\\r\\n            }\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCompletionItem(item) {\\r\\n        let tags = asCompletionItemTags(item.tags);\\r\\n        let result = new protocolCompletionItem_1.default(item.label);\\r\\n        if (item.detail) {\\r\\n            result.detail = item.detail;\\r\\n        }\\r\\n        if (item.documentation) {\\r\\n            result.documentation = asDocumentation(item.documentation);\\r\\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\\r\\n        }\\r\\n        if (item.filterText) {\\r\\n            result.filterText = item.filterText;\\r\\n        }\\r\\n        let insertText = asCompletionInsertText(item);\\r\\n        if (insertText) {\\r\\n            result.insertText = insertText.text;\\r\\n            result.range = insertText.range;\\r\\n            result.fromEdit = insertText.fromEdit;\\r\\n        }\\r\\n        if (Is.number(item.kind)) {\\r\\n            let [itemKind, original] = asCompletionItemKind(item.kind);\\r\\n            result.kind = itemKind;\\r\\n            if (original) {\\r\\n                result.originalItemKind = original;\\r\\n            }\\r\\n        }\\r\\n        if (item.sortText) {\\r\\n            result.sortText = item.sortText;\\r\\n        }\\r\\n        if (item.additionalTextEdits) {\\r\\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\\r\\n        }\\r\\n        if (Is.stringArray(item.commitCharacters)) {\\r\\n            result.commitCharacters = item.commitCharacters.slice();\\r\\n        }\\r\\n        if (item.command) {\\r\\n            result.command = asCommand(item.command);\\r\\n        }\\r\\n        if (item.deprecated === true || item.deprecated === false) {\\r\\n            result.deprecated = item.deprecated;\\r\\n            if (item.deprecated === true) {\\r\\n                tags.push(code.CompletionItemTag.Deprecated);\\r\\n            }\\r\\n        }\\r\\n        if (item.preselect === true || item.preselect === false) {\\r\\n            result.preselect = item.preselect;\\r\\n        }\\r\\n        if (item.data !== undefined) {\\r\\n            result.data = item.data;\\r\\n        }\\r\\n        if (tags.length > 0) {\\r\\n            result.tags = tags;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCompletionInsertText(item) {\\r\\n        if (item.textEdit) {\\r\\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\\r\\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\\r\\n            }\\r\\n            else {\\r\\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\\r\\n            }\\r\\n        }\\r\\n        else if (item.insertText) {\\r\\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\\r\\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\\r\\n            }\\r\\n            else {\\r\\n                return { text: item.insertText, fromEdit: false };\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n    function asTextEdit(edit) {\\r\\n        if (!edit) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return new code.TextEdit(asRange(edit.range), edit.newText);\\r\\n    }\\r\\n    function asTextEdits(items) {\\r\\n        if (!items) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map(asTextEdit);\\r\\n    }\\r\\n    function asSignatureHelp(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = new code.SignatureHelp();\\r\\n        if (Is.number(item.activeSignature)) {\\r\\n            result.activeSignature = item.activeSignature;\\r\\n        }\\r\\n        else {\\r\\n            // activeSignature was optional in the past\\r\\n            result.activeSignature = 0;\\r\\n        }\\r\\n        if (Is.number(item.activeParameter)) {\\r\\n            result.activeParameter = item.activeParameter;\\r\\n        }\\r\\n        else {\\r\\n            // activeParameter was optional in the past\\r\\n            result.activeParameter = 0;\\r\\n        }\\r\\n        if (item.signatures) {\\r\\n            result.signatures = asSignatureInformations(item.signatures);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asSignatureInformations(items) {\\r\\n        return items.map(asSignatureInformation);\\r\\n    }\\r\\n    function asSignatureInformation(item) {\\r\\n        let result = new code.SignatureInformation(item.label);\\r\\n        if (item.documentation) {\\r\\n            result.documentation = asDocumentation(item.documentation);\\r\\n        }\\r\\n        if (item.parameters) {\\r\\n            result.parameters = asParameterInformations(item.parameters);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asParameterInformations(item) {\\r\\n        return item.map(asParameterInformation);\\r\\n    }\\r\\n    function asParameterInformation(item) {\\r\\n        let result = new code.ParameterInformation(item.label);\\r\\n        if (item.documentation) {\\r\\n            result.documentation = asDocumentation(item.documentation);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asLocation(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\\r\\n    }\\r\\n    function asDeclarationResult(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return asLocationResult(item);\\r\\n    }\\r\\n    function asDefinitionResult(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return asLocationResult(item);\\r\\n    }\\r\\n    function asLocationLink(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = {\\r\\n            targetUri: _uriConverter(item.targetUri),\\r\\n            targetRange: asRange(item.targetSelectionRange),\\r\\n            originSelectionRange: asRange(item.originSelectionRange),\\r\\n            targetSelectionRange: asRange(item.targetSelectionRange)\\r\\n        };\\r\\n        if (!result.targetSelectionRange) {\\r\\n            throw new Error(`targetSelectionRange must not be undefined or null`);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asLocationResult(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        if (Is.array(item)) {\\r\\n            if (item.length === 0) {\\r\\n                return [];\\r\\n            }\\r\\n            else if (ls.LocationLink.is(item[0])) {\\r\\n                let links = item;\\r\\n                return links.map((link) => asLocationLink(link));\\r\\n            }\\r\\n            else {\\r\\n                let locations = item;\\r\\n                return locations.map((location) => asLocation(location));\\r\\n            }\\r\\n        }\\r\\n        else if (ls.LocationLink.is(item)) {\\r\\n            return [asLocationLink(item)];\\r\\n        }\\r\\n        else {\\r\\n            return asLocation(item);\\r\\n        }\\r\\n    }\\r\\n    function asReferences(values) {\\r\\n        if (!values) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return values.map(location => asLocation(location));\\r\\n    }\\r\\n    function asDocumentHighlights(values) {\\r\\n        if (!values) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return values.map(asDocumentHighlight);\\r\\n    }\\r\\n    function asDocumentHighlight(item) {\\r\\n        let result = new code.DocumentHighlight(asRange(item.range));\\r\\n        if (Is.number(item.kind)) {\\r\\n            result.kind = asDocumentHighlightKind(item.kind);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asDocumentHighlightKind(item) {\\r\\n        switch (item) {\\r\\n            case ls.DocumentHighlightKind.Text:\\r\\n                return code.DocumentHighlightKind.Text;\\r\\n            case ls.DocumentHighlightKind.Read:\\r\\n                return code.DocumentHighlightKind.Read;\\r\\n            case ls.DocumentHighlightKind.Write:\\r\\n                return code.DocumentHighlightKind.Write;\\r\\n        }\\r\\n        return code.DocumentHighlightKind.Text;\\r\\n    }\\r\\n    function asSymbolInformations(values, uri) {\\r\\n        if (!values) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return values.map(information => asSymbolInformation(information, uri));\\r\\n    }\\r\\n    function asSymbolKind(item) {\\r\\n        if (item <= ls.SymbolKind.TypeParameter) {\\r\\n            // Symbol kind is one based in the protocol and zero based in code.\\r\\n            return item - 1;\\r\\n        }\\r\\n        return code.SymbolKind.Property;\\r\\n    }\\r\\n    function asSymbolTag(value) {\\r\\n        return value;\\r\\n    }\\r\\n    function asSymbolTags(items) {\\r\\n        if (items === undefined || items === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map(asSymbolTag);\\r\\n    }\\r\\n    function asSymbolInformation(item, uri) {\\r\\n        // Symbol kind is one based in the protocol and zero based in code.\\r\\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\\r\\n        if (item.containerName) {\\r\\n            result.containerName = item.containerName;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asDocumentSymbols(values) {\\r\\n        if (values === undefined || values === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return values.map(asDocumentSymbol);\\r\\n    }\\r\\n    function asDocumentSymbol(value) {\\r\\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\\r\\n        if (value.children !== undefined && value.children.length > 0) {\\r\\n            let children = [];\\r\\n            for (let child of value.children) {\\r\\n                children.push(asDocumentSymbol(child));\\r\\n            }\\r\\n            result.children = children;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCommand(item) {\\r\\n        let result = { title: item.title, command: item.command };\\r\\n        if (item.arguments) {\\r\\n            result.arguments = item.arguments;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCommands(items) {\\r\\n        if (!items) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map(asCommand);\\r\\n    }\\r\\n    const kindMapping = new Map();\\r\\n    kindMapping.set(ls.CodeActionKind.Empty, code.CodeActionKind.Empty);\\r\\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\\r\\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\\r\\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\\r\\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\\r\\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\\r\\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\\r\\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\\r\\n    function asCodeActionKind(item) {\\r\\n        if (item === undefined || item === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = kindMapping.get(item);\\r\\n        if (result) {\\r\\n            return result;\\r\\n        }\\r\\n        let parts = item.split('.');\\r\\n        result = code.CodeActionKind.Empty;\\r\\n        for (let part of parts) {\\r\\n            result = result.append(part);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCodeActionKinds(items) {\\r\\n        if (items === undefined || items === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map(kind => asCodeActionKind(kind));\\r\\n    }\\r\\n    function asCodeAction(item) {\\r\\n        if (item === undefined || item === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = new code.CodeAction(item.title);\\r\\n        if (item.kind !== undefined) {\\r\\n            result.kind = asCodeActionKind(item.kind);\\r\\n        }\\r\\n        if (item.diagnostics) {\\r\\n            result.diagnostics = asDiagnostics(item.diagnostics);\\r\\n        }\\r\\n        if (item.edit) {\\r\\n            result.edit = asWorkspaceEdit(item.edit);\\r\\n        }\\r\\n        if (item.command) {\\r\\n            result.command = asCommand(item.command);\\r\\n        }\\r\\n        if (item.isPreferred !== undefined) {\\r\\n            result.isPreferred = item.isPreferred;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCodeLens(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = new protocolCodeLens_1.default(asRange(item.range));\\r\\n        if (item.command) {\\r\\n            result.command = asCommand(item.command);\\r\\n        }\\r\\n        if (item.data !== undefined && item.data !== null) {\\r\\n            result.data = item.data;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asCodeLenses(items) {\\r\\n        if (!items) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map((codeLens) => asCodeLens(codeLens));\\r\\n    }\\r\\n    function asWorkspaceEdit(item) {\\r\\n        if (!item) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = new code.WorkspaceEdit();\\r\\n        if (item.documentChanges) {\\r\\n            item.documentChanges.forEach(change => {\\r\\n                if (ls.CreateFile.is(change)) {\\r\\n                    result.createFile(_uriConverter(change.uri), change.options);\\r\\n                }\\r\\n                else if (ls.RenameFile.is(change)) {\\r\\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options);\\r\\n                }\\r\\n                else if (ls.DeleteFile.is(change)) {\\r\\n                    result.deleteFile(_uriConverter(change.uri), change.options);\\r\\n                }\\r\\n                else if (ls.TextDocumentEdit.is(change)) {\\r\\n                    result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\\r\\n                }\\r\\n                else {\\r\\n                    console.error(`Unknown workspace edit change received:\\\\n${JSON.stringify(change, undefined, 4)}`);\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n        else if (item.changes) {\\r\\n            Object.keys(item.changes).forEach(key => {\\r\\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\\r\\n            });\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    function asDocumentLink(item) {\\r\\n        let range = asRange(item.range);\\r\\n        let target = item.target ? asUri(item.target) : undefined;\\r\\n        // target must be optional in DocumentLink\\r\\n        let link = new protocolDocumentLink_1.default(range, target);\\r\\n        if (item.tooltip !== undefined) {\\r\\n            link.tooltip = item.tooltip;\\r\\n        }\\r\\n        if (item.data !== undefined && item.data !== null) {\\r\\n            link.data = item.data;\\r\\n        }\\r\\n        return link;\\r\\n    }\\r\\n    function asDocumentLinks(items) {\\r\\n        if (!items) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map(asDocumentLink);\\r\\n    }\\r\\n    function asColor(color) {\\r\\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\\r\\n    }\\r\\n    function asColorInformation(ci) {\\r\\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\\r\\n    }\\r\\n    function asColorInformations(colorInformation) {\\r\\n        if (Array.isArray(colorInformation)) {\\r\\n            return colorInformation.map(asColorInformation);\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    function asColorPresentation(cp) {\\r\\n        let presentation = new code.ColorPresentation(cp.label);\\r\\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\\r\\n        if (cp.textEdit) {\\r\\n            presentation.textEdit = asTextEdit(cp.textEdit);\\r\\n        }\\r\\n        return presentation;\\r\\n    }\\r\\n    function asColorPresentations(colorPresentations) {\\r\\n        if (Array.isArray(colorPresentations)) {\\r\\n            return colorPresentations.map(asColorPresentation);\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    function asFoldingRangeKind(kind) {\\r\\n        if (kind) {\\r\\n            switch (kind) {\\r\\n                case ls.FoldingRangeKind.Comment:\\r\\n                    return code.FoldingRangeKind.Comment;\\r\\n                case ls.FoldingRangeKind.Imports:\\r\\n                    return code.FoldingRangeKind.Imports;\\r\\n                case ls.FoldingRangeKind.Region:\\r\\n                    return code.FoldingRangeKind.Region;\\r\\n            }\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    function asFoldingRange(r) {\\r\\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\\r\\n    }\\r\\n    function asFoldingRanges(foldingRanges) {\\r\\n        if (Array.isArray(foldingRanges)) {\\r\\n            return foldingRanges.map(asFoldingRange);\\r\\n        }\\r\\n        return undefined;\\r\\n    }\\r\\n    function asSelectionRange(selectionRange) {\\r\\n        return new code.SelectionRange(asRange(selectionRange.range), selectionRange.parent ? asSelectionRange(selectionRange.parent) : undefined);\\r\\n    }\\r\\n    function asSelectionRanges(selectionRanges) {\\r\\n        if (!Array.isArray(selectionRanges)) {\\r\\n            return [];\\r\\n        }\\r\\n        let result = [];\\r\\n        for (let range of selectionRanges) {\\r\\n            result.push(asSelectionRange(range));\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    return {\\r\\n        asUri,\\r\\n        asDiagnostics,\\r\\n        asDiagnostic,\\r\\n        asRange,\\r\\n        asRanges,\\r\\n        asPosition,\\r\\n        asDiagnosticSeverity,\\r\\n        asDiagnosticTag,\\r\\n        asHover,\\r\\n        asCompletionResult,\\r\\n        asCompletionItem,\\r\\n        asTextEdit,\\r\\n        asTextEdits,\\r\\n        asSignatureHelp,\\r\\n        asSignatureInformations,\\r\\n        asSignatureInformation,\\r\\n        asParameterInformations,\\r\\n        asParameterInformation,\\r\\n        asDeclarationResult,\\r\\n        asDefinitionResult,\\r\\n        asLocation,\\r\\n        asReferences,\\r\\n        asDocumentHighlights,\\r\\n        asDocumentHighlight,\\r\\n        asDocumentHighlightKind,\\r\\n        asSymbolKind,\\r\\n        asSymbolTag,\\r\\n        asSymbolTags,\\r\\n        asSymbolInformations,\\r\\n        asSymbolInformation,\\r\\n        asDocumentSymbols,\\r\\n        asDocumentSymbol,\\r\\n        asCommand,\\r\\n        asCommands,\\r\\n        asCodeAction,\\r\\n        asCodeActionKind,\\r\\n        asCodeActionKinds,\\r\\n        asCodeLens,\\r\\n        asCodeLenses,\\r\\n        asWorkspaceEdit,\\r\\n        asDocumentLink,\\r\\n        asDocumentLinks,\\r\\n        asFoldingRangeKind,\\r\\n        asFoldingRange,\\r\\n        asFoldingRanges,\\r\\n        asColor,\\r\\n        asColorInformation,\\r\\n        asColorInformations,\\r\\n        asColorPresentation,\\r\\n        asColorPresentations,\\r\\n        asSelectionRange,\\r\\n        asSelectionRanges\\r\\n    };\\r\\n}\\r\\nexports.createConverter = createConverter;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nclass Delayer {\\r\\n    constructor(defaultDelay) {\\r\\n        this.defaultDelay = defaultDelay;\\r\\n        this.timeout = undefined;\\r\\n        this.completionPromise = undefined;\\r\\n        this.onSuccess = undefined;\\r\\n        this.task = undefined;\\r\\n    }\\r\\n    trigger(task, delay = this.defaultDelay) {\\r\\n        this.task = task;\\r\\n        if (delay >= 0) {\\r\\n            this.cancelTimeout();\\r\\n        }\\r\\n        if (!this.completionPromise) {\\r\\n            this.completionPromise = new Promise((resolve) => {\\r\\n                this.onSuccess = resolve;\\r\\n            }).then(() => {\\r\\n                this.completionPromise = undefined;\\r\\n                this.onSuccess = undefined;\\r\\n                var result = this.task();\\r\\n                this.task = undefined;\\r\\n                return result;\\r\\n            });\\r\\n        }\\r\\n        if (delay >= 0 || this.timeout === void 0) {\\r\\n            this.timeout = setTimeout(() => {\\r\\n                this.timeout = undefined;\\r\\n                this.onSuccess(undefined);\\r\\n            }, delay >= 0 ? delay : this.defaultDelay);\\r\\n        }\\r\\n        return this.completionPromise;\\r\\n    }\\r\\n    forceDelivery() {\\r\\n        if (!this.completionPromise) {\\r\\n            return undefined;\\r\\n        }\\r\\n        this.cancelTimeout();\\r\\n        let result = this.task();\\r\\n        this.completionPromise = undefined;\\r\\n        this.onSuccess = undefined;\\r\\n        this.task = undefined;\\r\\n        return result;\\r\\n    }\\r\\n    isTriggered() {\\r\\n        return this.timeout !== void 0;\\r\\n    }\\r\\n    cancel() {\\r\\n        this.cancelTimeout();\\r\\n        this.completionPromise = undefined;\\r\\n    }\\r\\n    cancelTimeout() {\\r\\n        if (this.timeout !== void 0) {\\r\\n            clearTimeout(this.timeout);\\r\\n            this.timeout = undefined;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nexports.Delayer = Delayer;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let [id, options] = this.getRegistration(documentSelector, capabilities.colorProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideColorPresentations: (color, context, token) => {\\r\\n                const client = this._client;\\r\\n                const provideColorPresentations = (color, context, token) => {\\r\\n                    const requestParams = {\\r\\n                        color,\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\\r\\n                        range: client.code2ProtocolConverter.asRange(context.range)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideColorPresentations\\r\\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\\r\\n                    : provideColorPresentations(color, context, token);\\r\\n            },\\r\\n            provideDocumentColors: (document, token) => {\\r\\n                const client = this._client;\\r\\n                const provideDocumentColors = (document, token) => {\\r\\n                    const requestParams = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDocumentColors\\r\\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\\r\\n                    : provideDocumentColors(document, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerColorProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n    asColor(color) {\\r\\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\\r\\n    }\\r\\n    asColorInformations(colorInformation) {\\r\\n        if (Array.isArray(colorInformation)) {\\r\\n            return colorInformation.map(ci => {\\r\\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\\r\\n            });\\r\\n        }\\r\\n        return [];\\r\\n    }\\r\\n    asColorPresentations(colorPresentations) {\\r\\n        if (Array.isArray(colorPresentations)) {\\r\\n            return colorPresentations.map(cp => {\\r\\n                let presentation = new vscode_1.ColorPresentation(cp.label);\\r\\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\\r\\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\\r\\n                return presentation;\\r\\n            });\\r\\n        }\\r\\n        return [];\\r\\n    }\\r\\n}\\r\\nexports.ColorProviderFeature = ColorProviderFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nclass ConfigurationFeature {\\r\\n    constructor(_client) {\\r\\n        this._client = _client;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        capabilities.workspace = capabilities.workspace || {};\\r\\n        capabilities.workspace.configuration = true;\\r\\n    }\\r\\n    initialize() {\\r\\n        let client = this._client;\\r\\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\\r\\n            let configuration = (params) => {\\r\\n                let result = [];\\r\\n                for (let item of params.items) {\\r\\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\\r\\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\\r\\n                }\\r\\n                return result;\\r\\n            };\\r\\n            let middleware = client.clientOptions.middleware.workspace;\\r\\n            return middleware && middleware.configuration\\r\\n                ? middleware.configuration(params, token, configuration)\\r\\n                : configuration(params, token);\\r\\n        });\\r\\n    }\\r\\n    getConfiguration(resource, section) {\\r\\n        let result = null;\\r\\n        if (section) {\\r\\n            let index = section.lastIndexOf('.');\\r\\n            if (index === -1) {\\r\\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\\r\\n            }\\r\\n            else {\\r\\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index), resource);\\r\\n                if (config) {\\r\\n                    result = config.get(section.substr(index + 1));\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\\r\\n            result = {};\\r\\n            for (let key of Object.keys(config)) {\\r\\n                if (config.has(key)) {\\r\\n                    result[key] = config.get(key);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (!result) {\\r\\n            return null;\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\nexports.ConfigurationFeature = ConfigurationFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nclass ImplementationFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let implementationSupport = ensure(ensure(capabilites, 'textDocument'), 'implementation');\\r\\n        implementationSupport.dynamicRegistration = true;\\r\\n        implementationSupport.linkSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let [id, options] = this.getRegistration(documentSelector, capabilities.implementationProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideImplementation: (document, position, token) => {\\r\\n                const client = this._client;\\r\\n                const provideImplementation = (document, position, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideImplementation\\r\\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\\r\\n                    : provideImplementation(document, position, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerImplementationProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nexports.ImplementationFeature = ImplementationFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\\r\\n        let typeDefinitionSupport = ensure(ensure(capabilites, 'textDocument'), 'typeDefinition');\\r\\n        typeDefinitionSupport.dynamicRegistration = true;\\r\\n        typeDefinitionSupport.linkSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let [id, options] = this.getRegistration(documentSelector, capabilities.typeDefinitionProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideTypeDefinition: (document, position, token) => {\\r\\n                const client = this._client;\\r\\n                const provideTypeDefinition = (document, position, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideTypeDefinition\\r\\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\\r\\n                    : provideTypeDefinition(document, position, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst UUID = require(\\\"./utils/uuid\\\");\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nfunction access(target, key) {\\r\\n    if (target === void 0) {\\r\\n        return undefined;\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nfunction arrayDiff(left, right) {\\r\\n    return left.filter(element => right.indexOf(element) < 0);\\r\\n}\\r\\nexports.arrayDiff = arrayDiff;\\r\\nclass WorkspaceFoldersFeature {\\r\\n    constructor(_client) {\\r\\n        this._client = _client;\\r\\n        this._listeners = new Map();\\r\\n    }\\r\\n    get messages() {\\r\\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\\r\\n    }\\r\\n    fillInitializeParams(params) {\\r\\n        let folders = vscode_1.workspace.workspaceFolders;\\r\\n        this.initializeWithFolders(folders);\\r\\n        if (folders === void 0) {\\r\\n            params.workspaceFolders = null;\\r\\n        }\\r\\n        else {\\r\\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\\r\\n        }\\r\\n    }\\r\\n    initializeWithFolders(currentWorkspaceFolders) {\\r\\n        this._initialFolders = currentWorkspaceFolders;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        capabilities.workspace = capabilities.workspace || {};\\r\\n        capabilities.workspace.workspaceFolders = true;\\r\\n    }\\r\\n    initialize(capabilities) {\\r\\n        let client = this._client;\\r\\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\\r\\n            let workspaceFolders = () => {\\r\\n                let folders = vscode_1.workspace.workspaceFolders;\\r\\n                if (folders === void 0) {\\r\\n                    return null;\\r\\n                }\\r\\n                let result = folders.map((folder) => {\\r\\n                    return this.asProtocol(folder);\\r\\n                });\\r\\n                return result;\\r\\n            };\\r\\n            let middleware = client.clientOptions.middleware.workspace;\\r\\n            return middleware && middleware.workspaceFolders\\r\\n                ? middleware.workspaceFolders(token, workspaceFolders)\\r\\n                : workspaceFolders(token);\\r\\n        });\\r\\n        let value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\\r\\n        let id;\\r\\n        if (typeof value === 'string') {\\r\\n            id = value;\\r\\n        }\\r\\n        else if (value === true) {\\r\\n            id = UUID.generateUuid();\\r\\n        }\\r\\n        if (id) {\\r\\n            this.register(this.messages, {\\r\\n                id: id,\\r\\n                registerOptions: undefined\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n    sendInitialEvent(currentWorkspaceFolders) {\\r\\n        if (this._initialFolders && currentWorkspaceFolders) {\\r\\n            const removed = arrayDiff(this._initialFolders, currentWorkspaceFolders);\\r\\n            const added = arrayDiff(currentWorkspaceFolders, this._initialFolders);\\r\\n            if (added.length > 0 || removed.length > 0) {\\r\\n                this.doSendEvent(added, removed);\\r\\n            }\\r\\n        }\\r\\n        else if (this._initialFolders) {\\r\\n            this.doSendEvent([], this._initialFolders);\\r\\n        }\\r\\n        else if (currentWorkspaceFolders) {\\r\\n            this.doSendEvent(currentWorkspaceFolders, []);\\r\\n        }\\r\\n    }\\r\\n    doSendEvent(addedFolders, removedFolders) {\\r\\n        let params = {\\r\\n            event: {\\r\\n                added: addedFolders.map(folder => this.asProtocol(folder)),\\r\\n                removed: removedFolders.map(folder => this.asProtocol(folder))\\r\\n            }\\r\\n        };\\r\\n        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\\r\\n    }\\r\\n    register(_message, data) {\\r\\n        let id = data.id;\\r\\n        let client = this._client;\\r\\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\\r\\n            let didChangeWorkspaceFolders = (event) => {\\r\\n                this.doSendEvent(event.added, event.removed);\\r\\n            };\\r\\n            let middleware = client.clientOptions.middleware.workspace;\\r\\n            middleware && middleware.didChangeWorkspaceFolders\\r\\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\\r\\n                : didChangeWorkspaceFolders(event);\\r\\n        });\\r\\n        this._listeners.set(id, disposable);\\r\\n        this.sendInitialEvent(vscode_1.workspace.workspaceFolders);\\r\\n    }\\r\\n    unregister(id) {\\r\\n        let disposable = this._listeners.get(id);\\r\\n        if (disposable === void 0) {\\r\\n            return;\\r\\n        }\\r\\n        this._listeners.delete(id);\\r\\n        disposable.dispose();\\r\\n    }\\r\\n    dispose() {\\r\\n        for (let disposable of this._listeners.values()) {\\r\\n            disposable.dispose();\\r\\n        }\\r\\n        this._listeners.clear();\\r\\n    }\\r\\n    asProtocol(workspaceFolder) {\\r\\n        if (workspaceFolder === void 0) {\\r\\n            return null;\\r\\n        }\\r\\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\\r\\n    }\\r\\n}\\r\\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nclass FoldingRangeFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'foldingRange');\\r\\n        capability.dynamicRegistration = true;\\r\\n        capability.rangeLimit = 5000;\\r\\n        capability.lineFoldingOnly = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let [id, options] = this.getRegistration(documentSelector, capabilities.foldingRangeProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideFoldingRanges: (document, context, token) => {\\r\\n                const client = this._client;\\r\\n                const provideFoldingRanges = (document, _, token) => {\\r\\n                    const requestParams = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(this.asFoldingRanges.bind(this), (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideFoldingRanges\\r\\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\\r\\n                    : provideFoldingRanges(document, context, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n    asFoldingRangeKind(kind) {\\r\\n        if (kind) {\\r\\n            switch (kind) {\\r\\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\\r\\n                    return vscode_1.FoldingRangeKind.Comment;\\r\\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\\r\\n                    return vscode_1.FoldingRangeKind.Imports;\\r\\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\\r\\n                    return vscode_1.FoldingRangeKind.Region;\\r\\n            }\\r\\n        }\\r\\n        return void 0;\\r\\n    }\\r\\n    asFoldingRanges(foldingRanges) {\\r\\n        if (Array.isArray(foldingRanges)) {\\r\\n            return foldingRanges.map(r => {\\r\\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, this.asFoldingRangeKind(r.kind));\\r\\n            });\\r\\n        }\\r\\n        return [];\\r\\n    }\\r\\n}\\r\\nexports.FoldingRangeFeature = FoldingRangeFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nclass DeclarationFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.DeclarationRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        const declarationSupport = ensure(ensure(capabilites, 'textDocument'), 'declaration');\\r\\n        declarationSupport.dynamicRegistration = true;\\r\\n        declarationSupport.linkSupport = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        const [id, options] = this.getRegistration(documentSelector, capabilities.declarationProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideDeclaration: (document, position, token) => {\\r\\n                const client = this._client;\\r\\n                const provideDeclaration = (document, position, token) => {\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDeclarationResult, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideDeclaration\\r\\n                    ? middleware.provideDeclaration(document, position, token, provideDeclaration)\\r\\n                    : provideDeclaration(document, position, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerDeclarationProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nexports.DeclarationFeature = DeclarationFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = Object.create(null);\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nclass SelectionRangeFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.SelectionRangeRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(capabilites) {\\r\\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'selectionRange');\\r\\n        capability.dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(capabilities, documentSelector) {\\r\\n        let [id, options] = this.getRegistration(documentSelector, capabilities.selectionRangeProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const provider = {\\r\\n            provideSelectionRanges: (document, positions, token) => {\\r\\n                const client = this._client;\\r\\n                const provideSelectionRanges = (document, positions, token) => {\\r\\n                    const requestParams = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                        positions: client.code2ProtocolConverter.asPositions(positions)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, requestParams, token).then((ranges) => client.protocol2CodeConverter.asSelectionRanges(ranges), (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, error);\\r\\n                        return Promise.resolve(null);\\r\\n                    });\\r\\n                };\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                return middleware.provideSelectionRanges\\r\\n                    ? middleware.provideSelectionRanges(document, positions, token, provideSelectionRanges)\\r\\n                    : provideSelectionRanges(document, positions, token);\\r\\n            }\\r\\n        };\\r\\n        return [vscode_1.languages.registerSelectionRangeProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nexports.SelectionRangeFeature = SelectionRangeFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst progressPart_1 = require(\\\"./progressPart\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = Object.create(null);\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nclass ProgressFeature {\\r\\n    constructor(_client) {\\r\\n        this._client = _client;\\r\\n    }\\r\\n    fillClientCapabilities(capabilities) {\\r\\n        ensure(capabilities, 'window').workDoneProgress = true;\\r\\n    }\\r\\n    initialize() {\\r\\n        let client = this._client;\\r\\n        let createHandler = (params) => {\\r\\n            new progressPart_1.ProgressPart(this._client, params.token);\\r\\n        };\\r\\n        client.onRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, createHandler);\\r\\n    }\\r\\n}\\r\\nexports.ProgressFeature = ProgressFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode_1 = require(\\\"vscode\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nvar protocol2code;\\r\\n(function (protocol2code) {\\r\\n    function asCallHierarchyItem(converter, item) {\\r\\n        if (item === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = new vscode_1.CallHierarchyItem(converter.asSymbolKind(item.kind), item.name, item.detail || '', converter.asUri(item.uri), converter.asRange(item.range), converter.asRange(item.selectionRange));\\r\\n        if (item.tags !== undefined) {\\r\\n            result.tags = converter.asSymbolTags(item.tags);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    protocol2code.asCallHierarchyItem = asCallHierarchyItem;\\r\\n    function asCallHierarchyItems(converter, items) {\\r\\n        if (items === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        let result = items.map(item => asCallHierarchyItem(converter, item));\\r\\n        return result[0];\\r\\n    }\\r\\n    protocol2code.asCallHierarchyItems = asCallHierarchyItems;\\r\\n    function asCallHierarchyIncomingCall(converter, item) {\\r\\n        return new vscode_1.CallHierarchyIncomingCall(asCallHierarchyItem(converter, item.from), converter.asRanges(item.fromRanges));\\r\\n    }\\r\\n    protocol2code.asCallHierarchyIncomingCall = asCallHierarchyIncomingCall;\\r\\n    function asCallHierarchyIncomingCalls(converter, items) {\\r\\n        if (items === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map(item => asCallHierarchyIncomingCall(converter, item));\\r\\n    }\\r\\n    protocol2code.asCallHierarchyIncomingCalls = asCallHierarchyIncomingCalls;\\r\\n    function asCallHierarchyOutgoingCall(converter, item) {\\r\\n        return new vscode_1.CallHierarchyOutgoingCall(asCallHierarchyItem(converter, item.to), converter.asRanges(item.fromRanges));\\r\\n    }\\r\\n    protocol2code.asCallHierarchyOutgoingCall = asCallHierarchyOutgoingCall;\\r\\n    function asCallHierarchyOutgoingCalls(converter, items) {\\r\\n        if (items === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return items.map(item => asCallHierarchyOutgoingCall(converter, item));\\r\\n    }\\r\\n    protocol2code.asCallHierarchyOutgoingCalls = asCallHierarchyOutgoingCalls;\\r\\n})(protocol2code || (protocol2code = {}));\\r\\nvar code2protocol;\\r\\n(function (code2protocol) {\\r\\n    function asCallHierarchyItem(converter, value) {\\r\\n        const result = {\\r\\n            name: value.name,\\r\\n            kind: converter.asSymbolKind(value.kind),\\r\\n            uri: converter.asUri(value.uri),\\r\\n            range: converter.asRange(value.range),\\r\\n            selectionRange: converter.asRange(value.selectionRange)\\r\\n        };\\r\\n        if (value.detail !== undefined && value.detail.length > 0) {\\r\\n            result.detail = value.detail;\\r\\n        }\\r\\n        if (value.tags !== undefined) {\\r\\n            result.tags = converter.asSymbolTags(value.tags);\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n    code2protocol.asCallHierarchyItem = asCallHierarchyItem;\\r\\n})(code2protocol || (code2protocol = {}));\\r\\nclass CallHierarchyProvider {\\r\\n    constructor(client) {\\r\\n        this.client = client;\\r\\n        this.middleware = client.clientOptions.middleware;\\r\\n    }\\r\\n    prepareCallHierarchy(document, position, token) {\\r\\n        const client = this.client;\\r\\n        const middleware = this.middleware;\\r\\n        const prepareCallHierarchy = (document, position, token) => {\\r\\n            const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\\r\\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, params, token).then((result) => {\\r\\n                return protocol2code.asCallHierarchyItems(this.client.protocol2CodeConverter, result);\\r\\n            }, (error) => {\\r\\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, error);\\r\\n                return Promise.resolve(null);\\r\\n            });\\r\\n        };\\r\\n        return middleware.prepareCallHierarchy\\r\\n            ? middleware.prepareCallHierarchy(document, position, token, prepareCallHierarchy)\\r\\n            : prepareCallHierarchy(document, position, token);\\r\\n    }\\r\\n    provideCallHierarchyIncomingCalls(item, token) {\\r\\n        const client = this.client;\\r\\n        const middleware = this.middleware;\\r\\n        const provideCallHierarchyIncomingCalls = (item, token) => {\\r\\n            const params = {\\r\\n                item: code2protocol.asCallHierarchyItem(client.code2ProtocolConverter, item)\\r\\n            };\\r\\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type, params, token).then((result) => {\\r\\n                return protocol2code.asCallHierarchyIncomingCalls(client.protocol2CodeConverter, result);\\r\\n            }, (error) => {\\r\\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type, error);\\r\\n                return Promise.resolve(null);\\r\\n            });\\r\\n        };\\r\\n        return middleware.provideCallHierarchyIncomingCalls\\r\\n            ? middleware.provideCallHierarchyIncomingCalls(item, token, provideCallHierarchyIncomingCalls)\\r\\n            : provideCallHierarchyIncomingCalls(item, token);\\r\\n    }\\r\\n    provideCallHierarchyOutgoingCalls(item, token) {\\r\\n        const client = this.client;\\r\\n        const middleware = this.middleware;\\r\\n        const provideCallHierarchyOutgoingCalls = (item, token) => {\\r\\n            const params = {\\r\\n                item: code2protocol.asCallHierarchyItem(client.code2ProtocolConverter, item)\\r\\n            };\\r\\n            return client.sendRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type, params, token).then((result) => {\\r\\n                return protocol2code.asCallHierarchyOutgoingCalls(client.protocol2CodeConverter, result);\\r\\n            }, (error) => {\\r\\n                client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type, error);\\r\\n                return Promise.resolve(null);\\r\\n            });\\r\\n        };\\r\\n        return middleware.provideCallHierarchyOutgingCalls\\r\\n            ? middleware.provideCallHierarchyOutgingCalls(item, token, provideCallHierarchyOutgoingCalls)\\r\\n            : provideCallHierarchyOutgoingCalls(item, token);\\r\\n    }\\r\\n}\\r\\nclass CallHierarchyFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(cap) {\\r\\n        const capabilites = cap;\\r\\n        const capability = ensure(ensure(capabilites, 'textDocument'), 'callHierarchy');\\r\\n        capability.dynamicRegistration = true;\\r\\n    }\\r\\n    initialize(cap, documentSelector) {\\r\\n        const capabilities = cap;\\r\\n        const [id, options] = this.getRegistration(documentSelector, capabilities.callHierarchyProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const client = this._client;\\r\\n        const provider = new CallHierarchyProvider(client);\\r\\n        return [vscode_1.languages.registerCallHierarchyProvider(options.documentSelector, provider), provider];\\r\\n    }\\r\\n}\\r\\nexports.CallHierarchyFeature = CallHierarchyFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst vscode = require(\\\"vscode\\\");\\r\\nconst client_1 = require(\\\"./client\\\");\\r\\nconst vscode_languageserver_protocol_1 = require(\\\"vscode-languageserver-protocol\\\");\\r\\nfunction ensure(target, key) {\\r\\n    if (target[key] === void 0) {\\r\\n        target[key] = {};\\r\\n    }\\r\\n    return target[key];\\r\\n}\\r\\nvar protocol2code;\\r\\n(function (protocol2code) {\\r\\n    function asSemanticTokens(value) {\\r\\n        if (value === undefined || value === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return new vscode.SemanticTokens(new Uint32Array(value.data), value.resultId);\\r\\n    }\\r\\n    protocol2code.asSemanticTokens = asSemanticTokens;\\r\\n    function asSemanticTokensEdit(value) {\\r\\n        return new vscode.SemanticTokensEdit(value.start, value.deleteCount, value.data !== undefined ? new Uint32Array(value.data) : undefined);\\r\\n    }\\r\\n    protocol2code.asSemanticTokensEdit = asSemanticTokensEdit;\\r\\n    function asSemanticTokensEdits(value) {\\r\\n        if (value === undefined || value === null) {\\r\\n            return undefined;\\r\\n        }\\r\\n        return new vscode.SemanticTokensEdits(value.edits.map(asSemanticTokensEdit), value.resultId);\\r\\n    }\\r\\n    protocol2code.asSemanticTokensEdits = asSemanticTokensEdits;\\r\\n    function asLegend(value) {\\r\\n        return value;\\r\\n    }\\r\\n    protocol2code.asLegend = asLegend;\\r\\n})(protocol2code || (protocol2code = {}));\\r\\nclass SemanticTokensFeature extends client_1.TextDocumentFeature {\\r\\n    constructor(client) {\\r\\n        super(client, vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type);\\r\\n    }\\r\\n    fillClientCapabilities(cap) {\\r\\n        const capabilites = cap;\\r\\n        let capability = ensure(ensure(capabilites, 'textDocument'), 'semanticTokens');\\r\\n        capability.dynamicRegistration = true;\\r\\n        capability.tokenTypes = [\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.comment,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.keyword,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.number,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.regexp,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.operator,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.namespace,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.type,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.struct,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.class,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.interface,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.enum,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.typeParameter,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.function,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.member,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.macro,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.variable,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.parameter,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.property,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenTypes.label\\r\\n        ];\\r\\n        capability.tokenModifiers = [\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.declaration,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.documentation,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.static,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.abstract,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.deprecated,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.async,\\r\\n            vscode_languageserver_protocol_1.Proposed.SemanticTokenModifiers.readonly\\r\\n        ];\\r\\n    }\\r\\n    initialize(cap, documentSelector) {\\r\\n        const capabilities = cap;\\r\\n        let [id, options] = this.getRegistration(documentSelector, capabilities.semanticTokensProvider);\\r\\n        if (!id || !options) {\\r\\n            return;\\r\\n        }\\r\\n        this.register(this.messages, { id: id, registerOptions: options });\\r\\n    }\\r\\n    registerLanguageProvider(options) {\\r\\n        const hasEditProvider = options.documentProvider !== undefined && typeof options.documentProvider !== 'boolean' && options.documentProvider.edits === true;\\r\\n        const documentProvider = {\\r\\n            provideDocumentSemanticTokens: (document, token) => {\\r\\n                const client = this._client;\\r\\n                const middleware = client.clientOptions.middleware;\\r\\n                const provideDocumentSemanticTokens = (document, token) => {\\r\\n                    const params = {\\r\\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\\r\\n                    };\\r\\n                    return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type, params, token).then((result) => {\\r\\n                        return protocol2code.asSemanticTokens(result);\\r\\n                    }, (error) => {\\r\\n                        client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type, error);\\r\\n                        return undefined;\\r\\n                    });\\r\\n                };\\r\\n                return middleware.provideDocumentSemanticTokens\\r\\n                    ? middleware.provideDocumentSemanticTokens(document, token, provideDocumentSemanticTokens)\\r\\n                    : provideDocumentSemanticTokens(document, token);\\r\\n            },\\r\\n            provideDocumentSemanticTokensEdits: hasEditProvider\\r\\n                ? (document, previousResultId, token) => {\\r\\n                    const client = this._client;\\r\\n                    const middleware = client.clientOptions.middleware;\\r\\n                    const provideDocumentSemanticTokensEdits = (document, previousResultId, token) => {\\r\\n                        const params = {\\r\\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                            previousResultId\\r\\n                        };\\r\\n                        return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type, params, token).then((result) => {\\r\\n                            if (vscode_languageserver_protocol_1.Proposed.SemanticTokens.is(result)) {\\r\\n                                return protocol2code.asSemanticTokens(result);\\r\\n                            }\\r\\n                            else {\\r\\n                                return protocol2code.asSemanticTokensEdits(result);\\r\\n                            }\\r\\n                        }, (error) => {\\r\\n                            client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type, error);\\r\\n                            return undefined;\\r\\n                        });\\r\\n                    };\\r\\n                    return middleware.provideDocumentSemanticTokensEdits\\r\\n                        ? middleware.provideDocumentSemanticTokensEdits(document, previousResultId, token, provideDocumentSemanticTokensEdits)\\r\\n                        : provideDocumentSemanticTokensEdits(document, previousResultId, token);\\r\\n                }\\r\\n                : undefined\\r\\n        };\\r\\n        const hasRangeProvider = options.rangeProvider === true;\\r\\n        const rangeProvider = hasRangeProvider\\r\\n            ? {\\r\\n                provideDocumentRangeSemanticTokens: (document, range, token) => {\\r\\n                    const client = this._client;\\r\\n                    const middleware = client.clientOptions.middleware;\\r\\n                    const provideDocumentRangeSemanticTokens = (document, range, token) => {\\r\\n                        const params = {\\r\\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\\r\\n                            range: client.code2ProtocolConverter.asRange(range)\\r\\n                        };\\r\\n                        return client.sendRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type, params, token).then((result) => {\\r\\n                            return protocol2code.asSemanticTokens(result);\\r\\n                        }, (error) => {\\r\\n                            client.logFailedRequest(vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type, error);\\r\\n                            return undefined;\\r\\n                        });\\r\\n                    };\\r\\n                    return middleware.provideDocumentRangeSemanticTokens\\r\\n                        ? middleware.provideDocumentRangeSemanticTokens(document, range, token, provideDocumentRangeSemanticTokens)\\r\\n                        : provideDocumentRangeSemanticTokens(document, range, token);\\r\\n                }\\r\\n            }\\r\\n            : undefined;\\r\\n        const disposables = [];\\r\\n        const legend = protocol2code.asLegend(options.legend);\\r\\n        disposables.push(vscode.languages.registerDocumentSemanticTokensProvider(options.documentSelector, documentProvider, legend));\\r\\n        if (rangeProvider !== undefined) {\\r\\n            disposables.push(vscode.languages.registerDocumentRangeSemanticTokensProvider(options.documentSelector, rangeProvider, legend));\\r\\n        }\\r\\n        return [new vscode.Disposable(() => disposables.forEach(item => item.dispose())), { document: documentProvider, range: rangeProvider }];\\r\\n    }\\r\\n}\\r\\nexports.SemanticTokensFeature = SemanticTokensFeature;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nconst cp = require(\\\"child_process\\\");\\r\\nconst path_1 = require(\\\"path\\\");\\r\\nconst isWindows = (process.platform === 'win32');\\r\\nconst isMacintosh = (process.platform === 'darwin');\\r\\nconst isLinux = (process.platform === 'linux');\\r\\nfunction terminate(process, cwd) {\\r\\n    if (isWindows) {\\r\\n        try {\\r\\n            // This we run in Atom execFileSync is available.\\r\\n            // Ignore stderr since this is otherwise piped to parent.stderr\\r\\n            // which might be already closed.\\r\\n            let options = {\\r\\n                stdio: ['pipe', 'pipe', 'ignore']\\r\\n            };\\r\\n            if (cwd) {\\r\\n                options.cwd = cwd;\\r\\n            }\\r\\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\\r\\n            return true;\\r\\n        }\\r\\n        catch (err) {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n    else if (isLinux || isMacintosh) {\\r\\n        try {\\r\\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\\r\\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\\r\\n            return result.error ? false : true;\\r\\n        }\\r\\n        catch (err) {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n    else {\\r\\n        process.kill('SIGKILL');\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\nexports.terminate = terminate;\\r\\n\",\"/* --------------------------------------------------------------------------------------------\\r\\n * Copyright (c) Microsoft Corporation. All rights reserved.\\r\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\r\\n * ------------------------------------------------------------------------------------------ */\\r\\n'use strict';\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar path = require(\\\"path\\\");\\r\\nvar fs = require(\\\"fs\\\");\\r\\nvar toString = Object.prototype.toString;\\r\\nfunction isDefined(value) {\\r\\n    return typeof value !== 'undefined';\\r\\n}\\r\\nfunction isNumber(value) {\\r\\n    return toString.call(value) === '[object Number]';\\r\\n}\\r\\nfunction isString(value) {\\r\\n    return toString.call(value) === '[object String]';\\r\\n}\\r\\nfunction isBoolean(value) {\\r\\n    return value === true || value === false;\\r\\n}\\r\\nfunction readJsonFileSync(filename) {\\r\\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\\r\\n}\\r\\nvar MessageFormat;\\r\\n(function (MessageFormat) {\\r\\n    MessageFormat[\\\"file\\\"] = \\\"file\\\";\\r\\n    MessageFormat[\\\"bundle\\\"] = \\\"bundle\\\";\\r\\n    MessageFormat[\\\"both\\\"] = \\\"both\\\";\\r\\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\\r\\nvar BundleFormat;\\r\\n(function (BundleFormat) {\\r\\n    // the nls.bundle format\\r\\n    BundleFormat[\\\"standalone\\\"] = \\\"standalone\\\";\\r\\n    BundleFormat[\\\"languagePack\\\"] = \\\"languagePack\\\";\\r\\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\\r\\nvar LocalizeInfo;\\r\\n(function (LocalizeInfo) {\\r\\n    function is(value) {\\r\\n        var candidate = value;\\r\\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\\r\\n    }\\r\\n    LocalizeInfo.is = is;\\r\\n})(LocalizeInfo || (LocalizeInfo = {}));\\r\\nvar resolvedLanguage;\\r\\nvar resolvedBundles;\\r\\nvar options;\\r\\nvar isPseudo;\\r\\nfunction initializeSettings() {\\r\\n    options = { locale: undefined, language: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\\r\\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\\r\\n        try {\\r\\n            var vscodeOptions = JSON.parse(process.env.VSCODE_NLS_CONFIG);\\r\\n            var language = void 0;\\r\\n            var locale = void 0;\\r\\n            if (vscodeOptions.availableLanguages) {\\r\\n                var value = vscodeOptions.availableLanguages['*'];\\r\\n                if (isString(value)) {\\r\\n                    language = value;\\r\\n                }\\r\\n            }\\r\\n            if (isString(vscodeOptions.locale)) {\\r\\n                options.locale = vscodeOptions.locale.toLowerCase();\\r\\n            }\\r\\n            if (language === undefined) {\\r\\n                options.language = options.locale;\\r\\n            }\\r\\n            else if (language !== 'en') {\\r\\n                options.language = language;\\r\\n            }\\r\\n            if (isBoolean(vscodeOptions._languagePackSupport)) {\\r\\n                options.languagePackSupport = vscodeOptions._languagePackSupport;\\r\\n            }\\r\\n            if (isString(vscodeOptions._cacheRoot)) {\\r\\n                options.cacheRoot = vscodeOptions._cacheRoot;\\r\\n            }\\r\\n            if (isString(vscodeOptions._languagePackId)) {\\r\\n                options.languagePackId = vscodeOptions._languagePackId;\\r\\n            }\\r\\n            if (isString(vscodeOptions._translationsConfigFile)) {\\r\\n                options.translationsConfigFile = vscodeOptions._translationsConfigFile;\\r\\n                try {\\r\\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\\r\\n                }\\r\\n                catch (error) {\\r\\n                    // We can't read the translation config file. Mark the cache as corrupted.\\r\\n                    if (vscodeOptions._corruptedFile) {\\r\\n                        fs.writeFile(vscodeOptions._corruptedFile, 'corrupted', 'utf8', function (err) {\\r\\n                            console.error(err);\\r\\n                        });\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (_a) {\\r\\n            // Do nothing.\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    resolvedLanguage = undefined;\\r\\n    resolvedBundles = Object.create(null);\\r\\n}\\r\\ninitializeSettings();\\r\\nfunction supportsLanguagePack() {\\r\\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\\r\\n        && options.translationsConfig !== undefined;\\r\\n}\\r\\nfunction format(message, args) {\\r\\n    var result;\\r\\n    if (isPseudo) {\\r\\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\\r\\n        message = '\\\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\\\uFF3D';\\r\\n    }\\r\\n    if (args.length === 0) {\\r\\n        result = message;\\r\\n    }\\r\\n    else {\\r\\n        result = message.replace(/\\\\{(\\\\d+)\\\\}/g, function (match, rest) {\\r\\n            var index = rest[0];\\r\\n            var arg = args[index];\\r\\n            var replacement = match;\\r\\n            if (typeof arg === 'string') {\\r\\n                replacement = arg;\\r\\n            }\\r\\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\\r\\n                replacement = String(arg);\\r\\n            }\\r\\n            return replacement;\\r\\n        });\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createScopedLocalizeFunction(messages) {\\r\\n    return function (key, message) {\\r\\n        var args = [];\\r\\n        for (var _i = 2; _i < arguments.length; _i++) {\\r\\n            args[_i - 2] = arguments[_i];\\r\\n        }\\r\\n        if (isNumber(key)) {\\r\\n            if (key >= messages.length) {\\r\\n                console.error(\\\"Broken localize call found. Index out of bounds. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n                return;\\r\\n            }\\r\\n            return format(messages[key], args);\\r\\n        }\\r\\n        else {\\r\\n            if (isString(message)) {\\r\\n                console.warn(\\\"Message \\\" + message + \\\" didn't get externalized correctly.\\\");\\r\\n                return format(message, args);\\r\\n            }\\r\\n            else {\\r\\n                console.error(\\\"Broken localize call found. Stacktrace is\\\\n: \\\" + new Error('').stack);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n}\\r\\nfunction localize(key, message) {\\r\\n    var args = [];\\r\\n    for (var _i = 2; _i < arguments.length; _i++) {\\r\\n        args[_i - 2] = arguments[_i];\\r\\n    }\\r\\n    return format(message, args);\\r\\n}\\r\\nfunction resolveLanguage(file) {\\r\\n    var resolvedLanguage;\\r\\n    if (options.cacheLanguageResolution && resolvedLanguage) {\\r\\n        resolvedLanguage = resolvedLanguage;\\r\\n    }\\r\\n    else {\\r\\n        if (isPseudo || !options.language) {\\r\\n            resolvedLanguage = '.nls.json';\\r\\n        }\\r\\n        else {\\r\\n            var locale = options.language;\\r\\n            while (locale) {\\r\\n                var candidate = '.nls.' + locale + '.json';\\r\\n                if (fs.existsSync(file + candidate)) {\\r\\n                    resolvedLanguage = candidate;\\r\\n                    break;\\r\\n                }\\r\\n                else {\\r\\n                    var index = locale.lastIndexOf('-');\\r\\n                    if (index > 0) {\\r\\n                        locale = locale.substring(0, index);\\r\\n                    }\\r\\n                    else {\\r\\n                        resolvedLanguage = '.nls.json';\\r\\n                        locale = null;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        if (options.cacheLanguageResolution) {\\r\\n            resolvedLanguage = resolvedLanguage;\\r\\n        }\\r\\n    }\\r\\n    return file + resolvedLanguage;\\r\\n}\\r\\nfunction findInTheBoxBundle(root) {\\r\\n    var language = options.language;\\r\\n    while (language) {\\r\\n        var candidate = path.join(root, \\\"nls.bundle.\\\" + language + \\\".json\\\");\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n        else {\\r\\n            var index = language.lastIndexOf('-');\\r\\n            if (index > 0) {\\r\\n                language = language.substring(0, index);\\r\\n            }\\r\\n            else {\\r\\n                language = undefined;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    // Test if we can reslove the default bundle.\\r\\n    if (language === undefined) {\\r\\n        var candidate = path.join(root, 'nls.bundle.json');\\r\\n        if (fs.existsSync(candidate)) {\\r\\n            return candidate;\\r\\n        }\\r\\n    }\\r\\n    return undefined;\\r\\n}\\r\\nfunction mkdir(directory) {\\r\\n    try {\\r\\n        fs.mkdirSync(directory);\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'EEXIST') {\\r\\n            return;\\r\\n        }\\r\\n        else if (err.code === 'ENOENT') {\\r\\n            var parent = path.dirname(directory);\\r\\n            if (parent !== directory) {\\r\\n                mkdir(parent);\\r\\n                fs.mkdirSync(directory);\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n}\\r\\nfunction createDefaultNlsBundle(folder) {\\r\\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_1 in metaData) {\\r\\n        var entry = metaData[module_1];\\r\\n        result[module_1] = entry.messages;\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction createNLSBundle(header, metaDataPath) {\\r\\n    var languagePackLocation = options.translationsConfig[header.id];\\r\\n    if (!languagePackLocation) {\\r\\n        return undefined;\\r\\n    }\\r\\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\\r\\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\\r\\n    var result = Object.create(null);\\r\\n    for (var module_2 in metaData) {\\r\\n        var entry = metaData[module_2];\\r\\n        var translations = languagePack[header.outDir + \\\"/\\\" + module_2];\\r\\n        if (translations) {\\r\\n            var resultMessages = [];\\r\\n            for (var i = 0; i < entry.keys.length; i++) {\\r\\n                var messageKey = entry.keys[i];\\r\\n                var key = isString(messageKey) ? messageKey : messageKey.key;\\r\\n                var translatedMessage = translations[key];\\r\\n                if (translatedMessage === undefined) {\\r\\n                    translatedMessage = entry.messages[i];\\r\\n                }\\r\\n                resultMessages.push(translatedMessage);\\r\\n            }\\r\\n            result[module_2] = resultMessages;\\r\\n        }\\r\\n        else {\\r\\n            result[module_2] = entry.messages;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction touch(file) {\\r\\n    var d = new Date();\\r\\n    fs.utimes(file, d, d, function () {\\r\\n        // Do nothing. Ignore\\r\\n    });\\r\\n}\\r\\nfunction cacheBundle(key, bundle) {\\r\\n    resolvedBundles[key] = bundle;\\r\\n    return bundle;\\r\\n}\\r\\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\\r\\n    var result;\\r\\n    var bundle = path.join(options.cacheRoot, header.id + \\\"-\\\" + header.hash + \\\".json\\\");\\r\\n    var useMemoryOnly = false;\\r\\n    var writeBundle = false;\\r\\n    try {\\r\\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\\r\\n        touch(bundle);\\r\\n        return result;\\r\\n    }\\r\\n    catch (err) {\\r\\n        if (err.code === 'ENOENT') {\\r\\n            writeBundle = true;\\r\\n        }\\r\\n        else if (err instanceof SyntaxError) {\\r\\n            // We have a syntax error. So no valid JSON. Use\\r\\n            console.log(\\\"Syntax error parsing message bundle: \\\" + err.message + \\\".\\\");\\r\\n            fs.unlink(bundle, function (err) {\\r\\n                if (err) {\\r\\n                    console.error(\\\"Deleting corrupted bundle \\\" + bundle + \\\" failed.\\\");\\r\\n                }\\r\\n            });\\r\\n            useMemoryOnly = true;\\r\\n        }\\r\\n        else {\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    result = createNLSBundle(header, bundlePath);\\r\\n    if (!result || useMemoryOnly) {\\r\\n        return result;\\r\\n    }\\r\\n    if (writeBundle) {\\r\\n        try {\\r\\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code === 'EEXIST') {\\r\\n                return result;\\r\\n            }\\r\\n            throw err;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadDefaultNlsBundle(bundlePath) {\\r\\n    try {\\r\\n        return createDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    catch (err) {\\r\\n        console.log(\\\"Generating default bundle from meta data failed.\\\", err);\\r\\n        return undefined;\\r\\n    }\\r\\n}\\r\\nfunction loadNlsBundle(header, bundlePath) {\\r\\n    var result;\\r\\n    // Core decided to use a language pack. Do the same in the extension\\r\\n    if (supportsLanguagePack()) {\\r\\n        try {\\r\\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\\r\\n        }\\r\\n        catch (err) {\\r\\n            console.log(\\\"Load or create bundle failed \\\", err);\\r\\n        }\\r\\n    }\\r\\n    if (!result) {\\r\\n        // No language pack found, but core is running in language pack mode\\r\\n        // Don't try to use old in the box bundles since the might be stale\\r\\n        // Fall right back to the default bundle.\\r\\n        if (options.languagePackSupport) {\\r\\n            return loadDefaultNlsBundle(bundlePath);\\r\\n        }\\r\\n        var candidate = findInTheBoxBundle(bundlePath);\\r\\n        if (candidate) {\\r\\n            try {\\r\\n                return readJsonFileSync(candidate);\\r\\n            }\\r\\n            catch (err) {\\r\\n                console.log(\\\"Loading in the box message bundle failed.\\\", err);\\r\\n            }\\r\\n        }\\r\\n        result = loadDefaultNlsBundle(bundlePath);\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction tryFindMetaDataHeaderFile(file) {\\r\\n    var result;\\r\\n    var dirname = path.dirname(file);\\r\\n    while (true) {\\r\\n        result = path.join(dirname, 'nls.metadata.header.json');\\r\\n        if (fs.existsSync(result)) {\\r\\n            break;\\r\\n        }\\r\\n        var parent = path.dirname(dirname);\\r\\n        if (parent === dirname) {\\r\\n            result = undefined;\\r\\n            break;\\r\\n        }\\r\\n        else {\\r\\n            dirname = parent;\\r\\n        }\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\nfunction loadMessageBundle(file) {\\r\\n    if (!file) {\\r\\n        // No file. We are in dev mode. Return the default\\r\\n        // localize function.\\r\\n        return localize;\\r\\n    }\\r\\n    // Remove extension since we load json files.\\r\\n    var ext = path.extname(file);\\r\\n    if (ext) {\\r\\n        file = file.substr(0, file.length - ext.length);\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\\r\\n        var headerFile = tryFindMetaDataHeaderFile(file);\\r\\n        if (headerFile) {\\r\\n            var bundlePath = path.dirname(headerFile);\\r\\n            var bundle = resolvedBundles[bundlePath];\\r\\n            if (bundle === undefined) {\\r\\n                try {\\r\\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\\r\\n                    try {\\r\\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\\r\\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\\r\\n                    }\\r\\n                    catch (err) {\\r\\n                        console.error('Failed to load nls bundle', err);\\r\\n                        bundle = cacheBundle(bundlePath, null);\\r\\n                    }\\r\\n                }\\r\\n                catch (err) {\\r\\n                    console.error('Failed to read header file', err);\\r\\n                    bundle = cacheBundle(bundlePath, null);\\r\\n                }\\r\\n            }\\r\\n            if (bundle) {\\r\\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\\\\\/g, '/');\\r\\n                var messages = bundle.nlsBundle[module_3];\\r\\n                if (messages === undefined) {\\r\\n                    console.error(\\\"Messages for file \\\" + file + \\\" not found. See console for details.\\\");\\r\\n                    return function () {\\r\\n                        return 'Messages not found.';\\r\\n                    };\\r\\n                }\\r\\n                return createScopedLocalizeFunction(messages);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\\r\\n        // Try to load a single file bundle\\r\\n        try {\\r\\n            var json = readJsonFileSync(resolveLanguage(file));\\r\\n            if (Array.isArray(json)) {\\r\\n                return createScopedLocalizeFunction(json);\\r\\n            }\\r\\n            else {\\r\\n                if (isDefined(json.messages) && isDefined(json.keys)) {\\r\\n                    return createScopedLocalizeFunction(json.messages);\\r\\n                }\\r\\n                else {\\r\\n                    console.error(\\\"String bundle '\\\" + file + \\\"' uses an unsupported format.\\\");\\r\\n                    return function () {\\r\\n                        return 'File bundle has unsupported format. See console for details';\\r\\n                    };\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        catch (err) {\\r\\n            if (err.code !== 'ENOENT') {\\r\\n                console.error('Failed to load single file bundle', err);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    console.error(\\\"Failed to load message bundle for file \\\" + file);\\r\\n    return function () {\\r\\n        return 'Failed to load message bundle. See console for details.';\\r\\n    };\\r\\n}\\r\\nexports.loadMessageBundle = loadMessageBundle;\\r\\nfunction config(opts) {\\r\\n    if (opts) {\\r\\n        if (isString(opts.locale)) {\\r\\n            options.locale = opts.locale.toLowerCase();\\r\\n            options.language = options.locale;\\r\\n            resolvedLanguage = undefined;\\r\\n            resolvedBundles = Object.create(null);\\r\\n        }\\r\\n        if (opts.messageFormat !== undefined) {\\r\\n            options.messageFormat = opts.messageFormat;\\r\\n        }\\r\\n        if (opts.bundleFormat === BundleFormat.standalone && options.languagePackSupport === true) {\\r\\n            options.languagePackSupport = false;\\r\\n        }\\r\\n    }\\r\\n    isPseudo = options.locale === 'pseudo';\\r\\n    return loadMessageBundle;\\r\\n}\\r\\nexports.config = config;\\r\\n//# sourceMappingURL=main.js.map\",\"/*---------------------------------------------------------------------------------------------\\n *  Copyright (c) Microsoft Corporation. All rights reserved.\\n *  Licensed under the MIT License. See License.txt in the project root for license information.\\n *--------------------------------------------------------------------------------------------*/\\n\\nimport * as path from 'path';\\nimport { workspace, WorkspaceFolder, extensions } from 'vscode';\\n\\ninterface ExperimentalConfig {\\n\\tcustomData?: string[];\\n\\texperimental?: {\\n\\t\\tcustomData?: string[];\\n\\t};\\n}\\n\\nexport function getCustomDataPathsInAllWorkspaces(workspaceFolders: readonly WorkspaceFolder[] | undefined): string[] {\\n\\tconst dataPaths: string[] = [];\\n\\n\\tif (!workspaceFolders) {\\n\\t\\treturn dataPaths;\\n\\t}\\n\\n\\tworkspaceFolders.forEach(wf => {\\n\\t\\tconst allCssConfig = workspace.getConfiguration(undefined, wf.uri);\\n\\t\\tconst wfCSSConfig = allCssConfig.inspect<ExperimentalConfig>('css');\\n\\t\\tif (wfCSSConfig && wfCSSConfig.workspaceFolderValue && wfCSSConfig.workspaceFolderValue.customData) {\\n\\t\\t\\tconst customData = wfCSSConfig.workspaceFolderValue.customData;\\n\\t\\t\\tif (Array.isArray(customData)) {\\n\\t\\t\\t\\tcustomData.forEach(t => {\\n\\t\\t\\t\\t\\tif (typeof t === 'string') {\\n\\t\\t\\t\\t\\t\\tdataPaths.push(path.resolve(wf.uri.fsPath, t));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\n\\treturn dataPaths;\\n}\\n\\nexport function getCustomDataPathsFromAllExtensions(): string[] {\\n\\tconst dataPaths: string[] = [];\\n\\n\\tfor (const extension of extensions.all) {\\n\\t\\tconst contributes = extension.packageJSON && extension.packageJSON.contributes;\\n\\n\\t\\tif (contributes && contributes.css && contributes.css.customData && Array.isArray(contributes.css.customData)) {\\n\\t\\t\\tconst relativePaths: string[] = contributes.css.customData;\\n\\t\\t\\trelativePaths.forEach(rp => {\\n\\t\\t\\t\\tdataPaths.push(path.resolve(extension.extensionPath, rp));\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\treturn dataPaths;\\n}\\n\"]}","code":"!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=19)}([function(e,t){e.exports=require(\"vscode\")},function(e,t,n){\"use strict\";function i(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,\"__esModule\",{value:!0});const r=n(4);t.ErrorCodes=r.ErrorCodes,t.ResponseError=r.ResponseError,t.CancellationToken=r.CancellationToken,t.CancellationTokenSource=r.CancellationTokenSource,t.Disposable=r.Disposable,t.Event=r.Event,t.Emitter=r.Emitter,t.Trace=r.Trace,t.TraceFormat=r.TraceFormat,t.SetTraceNotification=r.SetTraceNotification,t.LogTraceNotification=r.LogTraceNotification,t.RequestType=r.RequestType,t.RequestType0=r.RequestType0,t.NotificationType=r.NotificationType,t.NotificationType0=r.NotificationType0,t.MessageReader=r.MessageReader,t.MessageWriter=r.MessageWriter,t.ConnectionStrategy=r.ConnectionStrategy,t.StreamMessageReader=r.StreamMessageReader,t.StreamMessageWriter=r.StreamMessageWriter,t.IPCMessageReader=r.IPCMessageReader,t.IPCMessageWriter=r.IPCMessageWriter,t.createClientPipeTransport=r.createClientPipeTransport,t.createServerPipeTransport=r.createServerPipeTransport,t.generateRandomPipeName=r.generateRandomPipeName,t.createClientSocketTransport=r.createClientSocketTransport,t.createServerSocketTransport=r.createServerSocketTransport,t.ProgressType=r.ProgressType,i(n(29)),i(n(30));const o=n(41),s=n(42);!function(e){let t,n,i,r,a,c;!function(e){e.method=o.CallHierarchyPrepareRequest.method,e.type=o.CallHierarchyPrepareRequest.type}(t=e.CallHierarchyPrepareRequest||(e.CallHierarchyPrepareRequest={})),function(e){e.method=o.CallHierarchyIncomingCallsRequest.method,e.type=o.CallHierarchyIncomingCallsRequest.type}(n=e.CallHierarchyIncomingCallsRequest||(e.CallHierarchyIncomingCallsRequest={})),function(e){e.method=o.CallHierarchyOutgoingCallsRequest.method,e.type=o.CallHierarchyOutgoingCallsRequest.type}(i=e.CallHierarchyOutgoingCallsRequest||(e.CallHierarchyOutgoingCallsRequest={})),e.SemanticTokenTypes=s.SemanticTokenTypes,e.SemanticTokenModifiers=s.SemanticTokenModifiers,e.SemanticTokens=s.SemanticTokens,function(e){e.method=s.SemanticTokensRequest.method,e.type=s.SemanticTokensRequest.type}(r=e.SemanticTokensRequest||(e.SemanticTokensRequest={})),function(e){e.method=s.SemanticTokensEditsRequest.method,e.type=s.SemanticTokensEditsRequest.type}(a=e.SemanticTokensEditsRequest||(e.SemanticTokensEditsRequest={})),function(e){e.method=s.SemanticTokensRangeRequest.method,e.type=s.SemanticTokensRangeRequest.type}(c=e.SemanticTokensRangeRequest||(e.SemanticTokensRangeRequest={}))}(t.Proposed||(t.Proposed={})),t.createProtocolConnection=function(e,t,n,i){return r.createMessageConnection(e,t,n,i)}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4);t.ProtocolRequestType0=class extends i.RequestType0{constructor(e){super(e)}};t.ProtocolRequestType=class extends i.RequestType{constructor(e){super(e)}};t.ProtocolNotificationType=class extends i.NotificationType{constructor(e){super(e)}};t.ProtocolNotificationType0=class extends i.NotificationType0{constructor(e){super(e)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(43),s=n(44),a=n(7),c=n(45),u=n(17),l=n(18);!function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(1));class d{error(e){console.error(e)}warn(e){console.warn(e)}info(e){console.info(e)}log(e){console.log(e)}}var p,g,h,m,f;!function(e){e[e.Continue=1]=\"Continue\",e[e.Shutdown=2]=\"Shutdown\"}(p=t.ErrorAction||(t.ErrorAction={})),function(e){e[e.DoNotRestart=1]=\"DoNotRestart\",e[e.Restart=2]=\"Restart\"}(g=t.CloseAction||(t.CloseAction={}));class v{constructor(e){this.name=e,this.restarts=[]}error(e,t,n){return n&&n<=3?p.Continue:p.Shutdown}closed(){if(this.restarts.push(Date.now()),this.restarts.length<5)return g.Restart;return this.restarts[this.restarts.length-1]-this.restarts[0]<=18e4?(i.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`),g.DoNotRestart):(this.restarts.shift(),g.Restart)}}!function(e){e[e.Info=1]=\"Info\",e[e.Warn=2]=\"Warn\",e[e.Error=3]=\"Error\",e[e.Never=4]=\"Never\"}(h=t.RevealOutputChannelOn||(t.RevealOutputChannelOn={})),function(e){e[e.Stopped=1]=\"Stopped\",e[e.Starting=3]=\"Starting\",e[e.Running=2]=\"Running\"}(m=t.State||(t.State={})),function(e){e[e.Initial=0]=\"Initial\",e[e.Starting=1]=\"Starting\",e[e.StartFailed=2]=\"StartFailed\",e[e.Running=3]=\"Running\",e[e.Stopping=4]=\"Stopping\",e[e.Stopped=5]=\"Stopped\"}(f||(f={}));const y=[r.SymbolKind.File,r.SymbolKind.Module,r.SymbolKind.Namespace,r.SymbolKind.Package,r.SymbolKind.Class,r.SymbolKind.Method,r.SymbolKind.Property,r.SymbolKind.Field,r.SymbolKind.Constructor,r.SymbolKind.Enum,r.SymbolKind.Interface,r.SymbolKind.Function,r.SymbolKind.Variable,r.SymbolKind.Constant,r.SymbolKind.String,r.SymbolKind.Number,r.SymbolKind.Boolean,r.SymbolKind.Array,r.SymbolKind.Object,r.SymbolKind.Key,r.SymbolKind.Null,r.SymbolKind.EnumMember,r.SymbolKind.Struct,r.SymbolKind.Event,r.SymbolKind.Operator,r.SymbolKind.TypeParameter],C=[r.CompletionItemKind.Text,r.CompletionItemKind.Method,r.CompletionItemKind.Function,r.CompletionItemKind.Constructor,r.CompletionItemKind.Field,r.CompletionItemKind.Variable,r.CompletionItemKind.Class,r.CompletionItemKind.Interface,r.CompletionItemKind.Module,r.CompletionItemKind.Property,r.CompletionItemKind.Unit,r.CompletionItemKind.Value,r.CompletionItemKind.Enum,r.CompletionItemKind.Keyword,r.CompletionItemKind.Snippet,r.CompletionItemKind.Color,r.CompletionItemKind.File,r.CompletionItemKind.Reference,r.CompletionItemKind.Folder,r.CompletionItemKind.EnumMember,r.CompletionItemKind.Constant,r.CompletionItemKind.Struct,r.CompletionItemKind.Event,r.CompletionItemKind.Operator,r.CompletionItemKind.TypeParameter];function R(e,t){return void 0===e[t]&&(e[t]={}),e[t]}var w;!function(e){e.is=function(e){let t=e;return t&&a.func(t.register)&&a.func(t.unregister)&&a.func(t.dispose)&&void 0!==t.messages}}(w||(w={}));class T{constructor(e,t,n,i,r,o){this._client=e,this._event=t,this._type=n,this._middleware=i,this._createParams=r,this._selectorFilter=o,this._selectors=new Map}static textDocumentFilter(e,t){for(const n of e)if(i.languages.match(n,t))return!0;return!1}register(e,t){t.registerOptions.documentSelector&&(this._listener||(this._listener=this._event(this.callback,this)),this._selectors.set(t.id,t.registerOptions.documentSelector))}callback(e){this._selectorFilter&&!this._selectorFilter(this._selectors.values(),e)||(this._middleware?this._middleware(e,e=>this._client.sendNotification(this._type,this._createParams(e))):this._client.sendNotification(this._type,this._createParams(e)),this.notificationSent(e))}notificationSent(e){}unregister(e){this._selectors.delete(e),0===this._selectors.size&&this._listener&&(this._listener.dispose(),this._listener=void 0)}dispose(){this._selectors.clear(),this._listener&&(this._listener.dispose(),this._listener=void 0)}getProvider(e){for(const t of this._selectors.values())if(i.languages.match(t,e))return{send:e=>{this.callback(e)}};throw new Error(\"No provider available for the given text document\")}}class S extends T{constructor(e,t){super(e,i.workspace.onDidOpenTextDocument,r.DidOpenTextDocumentNotification.type,e.clientOptions.middleware.didOpen,t=>e.code2ProtocolConverter.asOpenTextDocumentParams(t),T.textDocumentFilter),this._syncedDocuments=t}get messages(){return r.DidOpenTextDocumentNotification.type}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"synchronization\").dynamicRegistration=!0}initialize(e,t){let n=e.resolvedTextDocumentSync;t&&n&&n.openClose&&this.register(this.messages,{id:u.generateUuid(),registerOptions:{documentSelector:t}})}register(e,t){if(super.register(e,t),!t.registerOptions.documentSelector)return;let n=t.registerOptions.documentSelector;i.workspace.textDocuments.forEach(e=>{let t=e.uri.toString();if(!this._syncedDocuments.has(t)&&i.languages.match(n,e)){let n=this._client.clientOptions.middleware,i=e=>{this._client.sendNotification(this._type,this._createParams(e))};n.didOpen?n.didOpen(e,i):i(e),this._syncedDocuments.set(t,e)}})}notificationSent(e){super.notificationSent(e),this._syncedDocuments.set(e.uri.toString(),e)}}class _ extends T{constructor(e,t){super(e,i.workspace.onDidCloseTextDocument,r.DidCloseTextDocumentNotification.type,e.clientOptions.middleware.didClose,t=>e.code2ProtocolConverter.asCloseTextDocumentParams(t),T.textDocumentFilter),this._syncedDocuments=t}get messages(){return r.DidCloseTextDocumentNotification.type}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"synchronization\").dynamicRegistration=!0}initialize(e,t){let n=e.resolvedTextDocumentSync;t&&n&&n.openClose&&this.register(this.messages,{id:u.generateUuid(),registerOptions:{documentSelector:t}})}notificationSent(e){super.notificationSent(e),this._syncedDocuments.delete(e.uri.toString())}unregister(e){let t=this._selectors.get(e);super.unregister(e);let n=this._selectors.values();this._syncedDocuments.forEach(e=>{if(i.languages.match(t,e)&&!this._selectorFilter(n,e)){let t=this._client.clientOptions.middleware,n=e=>{this._client.sendNotification(this._type,this._createParams(e))};this._syncedDocuments.delete(e.uri.toString()),t.didClose?t.didClose(e,n):n(e)}})}}class E{constructor(e){this._client=e,this._changeData=new Map,this._forcingDelivery=!1}get messages(){return r.DidChangeTextDocumentNotification.type}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"synchronization\").dynamicRegistration=!0}initialize(e,t){let n=e.resolvedTextDocumentSync;t&&n&&void 0!==n.change&&n.change!==r.TextDocumentSyncKind.None&&this.register(this.messages,{id:u.generateUuid(),registerOptions:Object.assign({},{documentSelector:t},{syncKind:n.change})})}register(e,t){t.registerOptions.documentSelector&&(this._listener||(this._listener=i.workspace.onDidChangeTextDocument(this.callback,this)),this._changeData.set(t.id,{documentSelector:t.registerOptions.documentSelector,syncKind:t.registerOptions.syncKind}))}callback(e){if(0!==e.contentChanges.length)for(const t of this._changeData.values())if(i.languages.match(t.documentSelector,e.document)){let n=this._client.clientOptions.middleware;if(t.syncKind===r.TextDocumentSyncKind.Incremental){let t=this._client.code2ProtocolConverter.asChangeTextDocumentParams(e);n.didChange?n.didChange(e,()=>this._client.sendNotification(r.DidChangeTextDocumentNotification.type,t)):this._client.sendNotification(r.DidChangeTextDocumentNotification.type,t)}else if(t.syncKind===r.TextDocumentSyncKind.Full){let t=e=>{this._changeDelayer?(this._changeDelayer.uri!==e.document.uri.toString()&&(this.forceDelivery(),this._changeDelayer.uri=e.document.uri.toString()),this._changeDelayer.delayer.trigger(()=>{this._client.sendNotification(r.DidChangeTextDocumentNotification.type,this._client.code2ProtocolConverter.asChangeTextDocumentParams(e.document))})):(this._changeDelayer={uri:e.document.uri.toString(),delayer:new c.Delayer(200)},this._changeDelayer.delayer.trigger(()=>{this._client.sendNotification(r.DidChangeTextDocumentNotification.type,this._client.code2ProtocolConverter.asChangeTextDocumentParams(e.document))},-1))};n.didChange?n.didChange(e,t):t(e)}}}unregister(e){this._changeData.delete(e),0===this._changeData.size&&this._listener&&(this._listener.dispose(),this._listener=void 0)}dispose(){this._changeDelayer=void 0,this._forcingDelivery=!1,this._changeData.clear(),this._listener&&(this._listener.dispose(),this._listener=void 0)}forceDelivery(){if(!this._forcingDelivery&&this._changeDelayer)try{this._forcingDelivery=!0,this._changeDelayer.delayer.forceDelivery()}finally{this._forcingDelivery=!1}}getProvider(e){for(const t of this._changeData.values())if(i.languages.match(t.documentSelector,e))return{send:e=>{this.callback(e)}};throw new Error(\"No provider available for the given text document\")}}class P extends T{constructor(e){super(e,i.workspace.onWillSaveTextDocument,r.WillSaveTextDocumentNotification.type,e.clientOptions.middleware.willSave,t=>e.code2ProtocolConverter.asWillSaveTextDocumentParams(t),(e,t)=>T.textDocumentFilter(e,t.document))}get messages(){return r.WillSaveTextDocumentNotification.type}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"synchronization\").willSave=!0}initialize(e,t){let n=e.resolvedTextDocumentSync;t&&n&&n.willSave&&this.register(this.messages,{id:u.generateUuid(),registerOptions:{documentSelector:t}})}}class D{constructor(e){this._client=e,this._selectors=new Map}get messages(){return r.WillSaveTextDocumentWaitUntilRequest.type}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"synchronization\").willSaveWaitUntil=!0}initialize(e,t){let n=e.resolvedTextDocumentSync;t&&n&&n.willSaveWaitUntil&&this.register(this.messages,{id:u.generateUuid(),registerOptions:{documentSelector:t}})}register(e,t){t.registerOptions.documentSelector&&(this._listener||(this._listener=i.workspace.onWillSaveTextDocument(this.callback,this)),this._selectors.set(t.id,t.registerOptions.documentSelector))}callback(e){if(T.textDocumentFilter(this._selectors.values(),e.document)){let t=this._client.clientOptions.middleware,n=e=>this._client.sendRequest(r.WillSaveTextDocumentWaitUntilRequest.type,this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(e)).then(e=>{let t=this._client.protocol2CodeConverter.asTextEdits(e);return void 0===t?[]:t});e.waitUntil(t.willSaveWaitUntil?t.willSaveWaitUntil(e,n):n(e))}}unregister(e){this._selectors.delete(e),0===this._selectors.size&&this._listener&&(this._listener.dispose(),this._listener=void 0)}dispose(){this._selectors.clear(),this._listener&&(this._listener.dispose(),this._listener=void 0)}}class b extends T{constructor(e){super(e,i.workspace.onDidSaveTextDocument,r.DidSaveTextDocumentNotification.type,e.clientOptions.middleware.didSave,t=>e.code2ProtocolConverter.asSaveTextDocumentParams(t,this._includeText),T.textDocumentFilter)}get messages(){return r.DidSaveTextDocumentNotification.type}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"synchronization\").didSave=!0}initialize(e,t){let n=e.resolvedTextDocumentSync;t&&n&&n.save&&this.register(this.messages,{id:u.generateUuid(),registerOptions:Object.assign({},{documentSelector:t},{includeText:!!n.save.includeText})})}register(e,t){this._includeText=!!t.registerOptions.includeText,super.register(e,t)}}class x{constructor(e,t){this._client=e,this._notifyFileEvent=t,this._watchers=new Map}get messages(){return r.DidChangeWatchedFilesNotification.type}fillClientCapabilities(e){R(R(e,\"workspace\"),\"didChangeWatchedFiles\").dynamicRegistration=!0}initialize(e,t){}register(e,t){if(!Array.isArray(t.registerOptions.watchers))return;let n=[];for(let e of t.registerOptions.watchers){if(!a.string(e.globPattern))continue;let t=!0,o=!0,s=!0;void 0!==e.kind&&null!==e.kind&&(t=0!=(e.kind&r.WatchKind.Create),o=0!=(e.kind&r.WatchKind.Change),s=0!=(e.kind&r.WatchKind.Delete));let c=i.workspace.createFileSystemWatcher(e.globPattern,!t,!o,!s);this.hookListeners(c,t,o,s),n.push(c)}this._watchers.set(t.id,n)}registerRaw(e,t){let n=[];for(let e of t)this.hookListeners(e,!0,!0,!0,n);this._watchers.set(e,n)}hookListeners(e,t,n,i,o){t&&e.onDidCreate(e=>this._notifyFileEvent({uri:this._client.code2ProtocolConverter.asUri(e),type:r.FileChangeType.Created}),null,o),n&&e.onDidChange(e=>this._notifyFileEvent({uri:this._client.code2ProtocolConverter.asUri(e),type:r.FileChangeType.Changed}),null,o),i&&e.onDidDelete(e=>this._notifyFileEvent({uri:this._client.code2ProtocolConverter.asUri(e),type:r.FileChangeType.Deleted}),null,o)}unregister(e){let t=this._watchers.get(e);if(t)for(let e of t)e.dispose()}dispose(){this._watchers.forEach(e=>{for(let t of e)t.dispose()}),this._watchers.clear()}}class k{constructor(e,t){this._client=e,this._message=t,this._registrations=new Map}get messages(){return this._message}register(e,t){if(e.method!==this.messages.method)throw new Error(`Register called on wrong feature. Requested ${e.method} but reached feature ${this.messages.method}`);if(!t.registerOptions.documentSelector)return;let n=this.registerLanguageProvider(t.registerOptions);this._registrations.set(t.id,{disposable:n[0],data:t,provider:n[1]})}unregister(e){let t=this._registrations.get(e);void 0!==t&&t.disposable.dispose()}dispose(){this._registrations.forEach(e=>{e.disposable.dispose()}),this._registrations.clear()}getRegistration(e,t){if(!t)return[void 0,void 0];if(r.TextDocumentRegistrationOptions.is(t)){const n=r.StaticRegistrationOptions.hasId(t)?t.id:u.generateUuid(),i=t.documentSelector||e;if(i)return[n,Object.assign({},t,{documentSelector:i})]}else if(a.boolean(t)&&!0===t||r.WorkDoneProgressOptions.is(t)){if(!e)return[void 0,void 0];let n=a.boolean(t)&&!0===t?{documentSelector:e}:Object.assign({},t,{documentSelector:e});return[u.generateUuid(),n]}return[void 0,void 0]}getRegistrationOptions(e,t){if(e&&t)return a.boolean(t)&&!0===t?{documentSelector:e}:Object.assign({},t,{documentSelector:e})}getProvider(e){for(const t of this._registrations.values()){let n=t.data.registerOptions.documentSelector;if(null!==n&&i.languages.match(n,e))return t.provider}throw new Error(`The feature has no registration for the provided text document ${e.uri.toString()}`)}}t.TextDocumentFeature=k;class O{constructor(e,t){this._client=e,this._message=t,this._registrations=new Map}get messages(){return this._message}register(e,t){if(e.method!==this.messages.method)throw new Error(`Register called on wron feature. Requested ${e.method} but reached feature ${this.messages.method}`);const n=this.registerLanguageProvider(t.registerOptions);this._registrations.set(t.id,{disposable:n[0],provider:n[1]})}unregister(e){let t=this._registrations.get(e);void 0!==t&&t.disposable.dispose()}dispose(){this._registrations.forEach(e=>{e.disposable.dispose()}),this._registrations.clear()}getProviders(){const e=[];for(const t of this._registrations.values())e.push(t.provider);return e}}class I extends k{constructor(e){super(e,r.CompletionRequest.type)}fillClientCapabilities(e){let t=R(R(e,\"textDocument\"),\"completion\");t.dynamicRegistration=!0,t.contextSupport=!0,t.completionItem={snippetSupport:!0,commitCharactersSupport:!0,documentationFormat:[r.MarkupKind.Markdown,r.MarkupKind.PlainText],deprecatedSupport:!0,preselectSupport:!0,tagSupport:{valueSet:[r.CompletionItemTag.Deprecated]}},t.completionItemKind={valueSet:C}}initialize(e,t){const n=this.getRegistrationOptions(t,e.completionProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t=e.triggerCharacters||[],n={provideCompletionItems:(e,t,n,i)=>{const o=this._client,s=this._client.clientOptions.middleware,a=(e,t,n,i)=>o.sendRequest(r.CompletionRequest.type,o.code2ProtocolConverter.asCompletionParams(e,t,n),i).then(o.protocol2CodeConverter.asCompletionResult,e=>(o.logFailedRequest(r.CompletionRequest.type,e),Promise.resolve([])));return s.provideCompletionItem?s.provideCompletionItem(e,t,i,n,a):a(e,t,i,n)},resolveCompletionItem:e.resolveProvider?(e,t)=>{const n=this._client,i=this._client.clientOptions.middleware,o=(e,t)=>n.sendRequest(r.CompletionResolveRequest.type,n.code2ProtocolConverter.asCompletionItem(e),t).then(n.protocol2CodeConverter.asCompletionItem,t=>(n.logFailedRequest(r.CompletionResolveRequest.type,t),Promise.resolve(e)));return i.resolveCompletionItem?i.resolveCompletionItem(e,t,o):o(e,t)}:void 0};return[i.languages.registerCompletionItemProvider(e.documentSelector,n,...t),n]}}class q extends k{constructor(e){super(e,r.HoverRequest.type)}fillClientCapabilities(e){const t=R(R(e,\"textDocument\"),\"hover\");t.dynamicRegistration=!0,t.contentFormat=[r.MarkupKind.Markdown,r.MarkupKind.PlainText]}initialize(e,t){const n=this.getRegistrationOptions(t,e.hoverProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideHover:(e,t,n)=>{const i=this._client,o=(e,t,n)=>i.sendRequest(r.HoverRequest.type,i.code2ProtocolConverter.asTextDocumentPositionParams(e,t),n).then(i.protocol2CodeConverter.asHover,e=>(i.logFailedRequest(r.HoverRequest.type,e),Promise.resolve(null))),s=i.clientOptions.middleware;return s.provideHover?s.provideHover(e,t,n,o):o(e,t,n)}};return[i.languages.registerHoverProvider(e.documentSelector,t),t]}}class N extends k{constructor(e){super(e,r.SignatureHelpRequest.type)}fillClientCapabilities(e){let t=R(R(e,\"textDocument\"),\"signatureHelp\");t.dynamicRegistration=!0,t.signatureInformation={documentationFormat:[r.MarkupKind.Markdown,r.MarkupKind.PlainText]},t.signatureInformation.parameterInformation={labelOffsetSupport:!0},t.contextSupport=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.signatureHelpProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideSignatureHelp:(e,t,n,i)=>{const o=this._client,s=(e,t,n,i)=>o.sendRequest(r.SignatureHelpRequest.type,o.code2ProtocolConverter.asSignatureHelpParams(e,t,n),i).then(o.protocol2CodeConverter.asSignatureHelp,e=>(o.logFailedRequest(r.SignatureHelpRequest.type,e),Promise.resolve(null))),a=o.clientOptions.middleware;return a.provideSignatureHelp?a.provideSignatureHelp(e,t,i,n,s):s(e,t,i,n)}};let n;if(void 0===e.retriggerCharacters){const r=e.triggerCharacters||[];n=i.languages.registerSignatureHelpProvider(e.documentSelector,t,...r)}else{const r={triggerCharacters:e.triggerCharacters||[],retriggerCharacters:e.retriggerCharacters||[]};n=i.languages.registerSignatureHelpProvider(e.documentSelector,t,r)}return[n,t]}}class F extends k{constructor(e){super(e,r.DefinitionRequest.type)}fillClientCapabilities(e){let t=R(R(e,\"textDocument\"),\"definition\");t.dynamicRegistration=!0,t.linkSupport=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.definitionProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideDefinition:(e,t,n)=>{const i=this._client,o=(e,t,n)=>i.sendRequest(r.DefinitionRequest.type,i.code2ProtocolConverter.asTextDocumentPositionParams(e,t),n).then(i.protocol2CodeConverter.asDefinitionResult,e=>(i.logFailedRequest(r.DefinitionRequest.type,e),Promise.resolve(null))),s=i.clientOptions.middleware;return s.provideDefinition?s.provideDefinition(e,t,n,o):o(e,t,n)}};return[i.languages.registerDefinitionProvider(e.documentSelector,t),t]}}class M extends k{constructor(e){super(e,r.ReferencesRequest.type)}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"references\").dynamicRegistration=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.referencesProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideReferences:(e,t,n,i)=>{const o=this._client,s=(e,t,n,i)=>o.sendRequest(r.ReferencesRequest.type,o.code2ProtocolConverter.asReferenceParams(e,t,n),i).then(o.protocol2CodeConverter.asReferences,e=>(o.logFailedRequest(r.ReferencesRequest.type,e),Promise.resolve([]))),a=o.clientOptions.middleware;return a.provideReferences?a.provideReferences(e,t,n,i,s):s(e,t,n,i)}};return[i.languages.registerReferenceProvider(e.documentSelector,t),t]}}class L extends k{constructor(e){super(e,r.DocumentHighlightRequest.type)}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"documentHighlight\").dynamicRegistration=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.documentHighlightProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideDocumentHighlights:(e,t,n)=>{const i=this._client,o=(e,t,n)=>i.sendRequest(r.DocumentHighlightRequest.type,i.code2ProtocolConverter.asTextDocumentPositionParams(e,t),n).then(i.protocol2CodeConverter.asDocumentHighlights,e=>(i.logFailedRequest(r.DocumentHighlightRequest.type,e),Promise.resolve([]))),s=i.clientOptions.middleware;return s.provideDocumentHighlights?s.provideDocumentHighlights(e,t,n,o):o(e,t,n)}};return[i.languages.registerDocumentHighlightProvider(e.documentSelector,t),t]}}class A extends k{constructor(e){super(e,r.DocumentSymbolRequest.type)}fillClientCapabilities(e){let t=R(R(e,\"textDocument\"),\"documentSymbol\");t.dynamicRegistration=!0,t.symbolKind={valueSet:y},t.hierarchicalDocumentSymbolSupport=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.documentSymbolProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideDocumentSymbols:(e,t)=>{const n=this._client,i=(e,t)=>n.sendRequest(r.DocumentSymbolRequest.type,n.code2ProtocolConverter.asDocumentSymbolParams(e),t).then(e=>{if(null!==e){if(0===e.length)return[];{let t=e[0];return r.DocumentSymbol.is(t)?n.protocol2CodeConverter.asDocumentSymbols(e):n.protocol2CodeConverter.asSymbolInformations(e)}}},e=>(n.logFailedRequest(r.DocumentSymbolRequest.type,e),Promise.resolve([]))),o=n.clientOptions.middleware;return o.provideDocumentSymbols?o.provideDocumentSymbols(e,t,i):i(e,t)}};return[i.languages.registerDocumentSymbolProvider(e.documentSelector,t),t]}}class j extends O{constructor(e){super(e,r.WorkspaceSymbolRequest.type)}fillClientCapabilities(e){let t=R(R(e,\"workspace\"),\"symbol\");t.dynamicRegistration=!0,t.symbolKind={valueSet:y}}initialize(e){e.workspaceSymbolProvider&&this.register(this.messages,{id:u.generateUuid(),registerOptions:!0===e.workspaceSymbolProvider?{workDoneProgress:!1}:e.workspaceSymbolProvider})}registerLanguageProvider(e){const t={provideWorkspaceSymbols:(e,t)=>{const n=this._client,i=(e,t)=>n.sendRequest(r.WorkspaceSymbolRequest.type,{query:e},t).then(n.protocol2CodeConverter.asSymbolInformations,e=>(n.logFailedRequest(r.WorkspaceSymbolRequest.type,e),Promise.resolve([]))),o=n.clientOptions.middleware;return o.provideWorkspaceSymbols?o.provideWorkspaceSymbols(e,t,i):i(e,t)}};return[i.languages.registerWorkspaceSymbolProvider(t),t]}}class K extends k{constructor(e){super(e,r.CodeActionRequest.type)}fillClientCapabilities(e){const t=R(R(e,\"textDocument\"),\"codeAction\");t.dynamicRegistration=!0,t.isPreferredSupport=!0,t.codeActionLiteralSupport={codeActionKind:{valueSet:[r.CodeActionKind.Empty,r.CodeActionKind.QuickFix,r.CodeActionKind.Refactor,r.CodeActionKind.RefactorExtract,r.CodeActionKind.RefactorInline,r.CodeActionKind.RefactorRewrite,r.CodeActionKind.Source,r.CodeActionKind.SourceOrganizeImports]}}}initialize(e,t){const n=this.getRegistrationOptions(t,e.codeActionProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideCodeActions:(e,t,n,i)=>{const o=this._client,s=(e,t,n,i)=>{const s={textDocument:o.code2ProtocolConverter.asTextDocumentIdentifier(e),range:o.code2ProtocolConverter.asRange(t),context:o.code2ProtocolConverter.asCodeActionContext(n)};return o.sendRequest(r.CodeActionRequest.type,s,i).then(e=>{if(null===e)return;const t=[];for(let n of e)r.Command.is(n)?t.push(o.protocol2CodeConverter.asCommand(n)):t.push(o.protocol2CodeConverter.asCodeAction(n));return t},e=>(o.logFailedRequest(r.CodeActionRequest.type,e),Promise.resolve([])))},a=o.clientOptions.middleware;return a.provideCodeActions?a.provideCodeActions(e,t,n,i,s):s(e,t,n,i)}};return[i.languages.registerCodeActionsProvider(e.documentSelector,t,e.codeActionKinds?{providedCodeActionKinds:this._client.protocol2CodeConverter.asCodeActionKinds(e.codeActionKinds)}:void 0),t]}}class H extends k{constructor(e){super(e,r.CodeLensRequest.type)}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"codeLens\").dynamicRegistration=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.codeLensProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideCodeLenses:(e,t)=>{const n=this._client,i=(e,t)=>n.sendRequest(r.CodeLensRequest.type,n.code2ProtocolConverter.asCodeLensParams(e),t).then(n.protocol2CodeConverter.asCodeLenses,e=>(n.logFailedRequest(r.CodeLensRequest.type,e),Promise.resolve([]))),o=n.clientOptions.middleware;return o.provideCodeLenses?o.provideCodeLenses(e,t,i):i(e,t)},resolveCodeLens:e.resolveProvider?(e,t)=>{const n=this._client,i=(e,t)=>n.sendRequest(r.CodeLensResolveRequest.type,n.code2ProtocolConverter.asCodeLens(e),t).then(n.protocol2CodeConverter.asCodeLens,t=>(n.logFailedRequest(r.CodeLensResolveRequest.type,t),e)),o=n.clientOptions.middleware;return o.resolveCodeLens?o.resolveCodeLens(e,t,i):i(e,t)}:void 0};return[i.languages.registerCodeLensProvider(e.documentSelector,t),t]}}class W extends k{constructor(e){super(e,r.DocumentFormattingRequest.type)}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"formatting\").dynamicRegistration=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.documentFormattingProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideDocumentFormattingEdits:(e,t,n)=>{const i=this._client,o=(e,t,n)=>{const o={textDocument:i.code2ProtocolConverter.asTextDocumentIdentifier(e),options:i.code2ProtocolConverter.asFormattingOptions(t)};return i.sendRequest(r.DocumentFormattingRequest.type,o,n).then(i.protocol2CodeConverter.asTextEdits,e=>(i.logFailedRequest(r.DocumentFormattingRequest.type,e),Promise.resolve([])))},s=i.clientOptions.middleware;return s.provideDocumentFormattingEdits?s.provideDocumentFormattingEdits(e,t,n,o):o(e,t,n)}};return[i.languages.registerDocumentFormattingEditProvider(e.documentSelector,t),t]}}class U extends k{constructor(e){super(e,r.DocumentRangeFormattingRequest.type)}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"rangeFormatting\").dynamicRegistration=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.documentRangeFormattingProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideDocumentRangeFormattingEdits:(e,t,n,i)=>{const o=this._client,s=(e,t,n,i)=>{let s={textDocument:o.code2ProtocolConverter.asTextDocumentIdentifier(e),range:o.code2ProtocolConverter.asRange(t),options:o.code2ProtocolConverter.asFormattingOptions(n)};return o.sendRequest(r.DocumentRangeFormattingRequest.type,s,i).then(o.protocol2CodeConverter.asTextEdits,e=>(o.logFailedRequest(r.DocumentRangeFormattingRequest.type,e),Promise.resolve([])))};let a=o.clientOptions.middleware;return a.provideDocumentRangeFormattingEdits?a.provideDocumentRangeFormattingEdits(e,t,n,i,s):s(e,t,n,i)}};return[i.languages.registerDocumentRangeFormattingEditProvider(e.documentSelector,t),t]}}class $ extends k{constructor(e){super(e,r.DocumentOnTypeFormattingRequest.type)}fillClientCapabilities(e){R(R(e,\"textDocument\"),\"onTypeFormatting\").dynamicRegistration=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.documentOnTypeFormattingProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideOnTypeFormattingEdits:(e,t,n,i,o)=>{const s=this._client,a=(e,t,n,i,o)=>{let a={textDocument:s.code2ProtocolConverter.asTextDocumentIdentifier(e),position:s.code2ProtocolConverter.asPosition(t),ch:n,options:s.code2ProtocolConverter.asFormattingOptions(i)};return s.sendRequest(r.DocumentOnTypeFormattingRequest.type,a,o).then(s.protocol2CodeConverter.asTextEdits,e=>(s.logFailedRequest(r.DocumentOnTypeFormattingRequest.type,e),Promise.resolve([])))},c=s.clientOptions.middleware;return c.provideOnTypeFormattingEdits?c.provideOnTypeFormattingEdits(e,t,n,i,o,a):a(e,t,n,i,o)}},n=e.moreTriggerCharacter||[];return[i.languages.registerOnTypeFormattingEditProvider(e.documentSelector,t,e.firstTriggerCharacter,...n),t]}}class z extends k{constructor(e){super(e,r.RenameRequest.type)}fillClientCapabilities(e){let t=R(R(e,\"textDocument\"),\"rename\");t.dynamicRegistration=!0,t.prepareSupport=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.renameProvider);n&&(a.boolean(e.renameProvider)&&(n.prepareProvider=!1),this.register(this.messages,{id:u.generateUuid(),registerOptions:n}))}registerLanguageProvider(e){const t={provideRenameEdits:(e,t,n,i)=>{const o=this._client,s=(e,t,n,i)=>{let s={textDocument:o.code2ProtocolConverter.asTextDocumentIdentifier(e),position:o.code2ProtocolConverter.asPosition(t),newName:n};return o.sendRequest(r.RenameRequest.type,s,i).then(o.protocol2CodeConverter.asWorkspaceEdit,e=>(o.logFailedRequest(r.RenameRequest.type,e),Promise.reject(new Error(e.message))))},a=o.clientOptions.middleware;return a.provideRenameEdits?a.provideRenameEdits(e,t,n,i,s):s(e,t,n,i)},prepareRename:e.prepareProvider?(e,t,n)=>{const i=this._client,o=(e,t,n)=>{let o={textDocument:i.code2ProtocolConverter.asTextDocumentIdentifier(e),position:i.code2ProtocolConverter.asPosition(t)};return i.sendRequest(r.PrepareRenameRequest.type,o,n).then(e=>r.Range.is(e)?i.protocol2CodeConverter.asRange(e):e&&r.Range.is(e.range)?{range:i.protocol2CodeConverter.asRange(e.range),placeholder:e.placeholder}:Promise.reject(new Error(\"The element can't be renamed.\")),e=>(i.logFailedRequest(r.PrepareRenameRequest.type,e),Promise.reject(new Error(e.message))))},s=i.clientOptions.middleware;return s.prepareRename?s.prepareRename(e,t,n,o):o(e,t,n)}:void 0};return[i.languages.registerRenameProvider(e.documentSelector,t),t]}}class G extends k{constructor(e){super(e,r.DocumentLinkRequest.type)}fillClientCapabilities(e){const t=R(R(e,\"textDocument\"),\"documentLink\");t.dynamicRegistration=!0,t.tooltipSupport=!0}initialize(e,t){const n=this.getRegistrationOptions(t,e.documentLinkProvider);n&&this.register(this.messages,{id:u.generateUuid(),registerOptions:n})}registerLanguageProvider(e){const t={provideDocumentLinks:(e,t)=>{const n=this._client,i=(e,t)=>n.sendRequest(r.DocumentLinkRequest.type,n.code2ProtocolConverter.asDocumentLinkParams(e),t).then(n.protocol2CodeConverter.asDocumentLinks,e=>(n.logFailedRequest(r.DocumentLinkRequest.type,e),Promise.resolve([]))),o=n.clientOptions.middleware;return o.provideDocumentLinks?o.provideDocumentLinks(e,t,i):i(e,t)},resolveDocumentLink:e.resolveProvider?(e,t)=>{const n=this._client;let i=(e,t)=>n.sendRequest(r.DocumentLinkResolveRequest.type,n.code2ProtocolConverter.asDocumentLink(e),t).then(n.protocol2CodeConverter.asDocumentLink,t=>(n.logFailedRequest(r.DocumentLinkResolveRequest.type,t),Promise.resolve(e)));const o=n.clientOptions.middleware;return o.resolveDocumentLink?o.resolveDocumentLink(e,t,i):i(e,t)}:void 0};return[i.languages.registerDocumentLinkProvider(e.documentSelector,t),t]}}class B{constructor(e){this._client=e,this._listeners=new Map}get messages(){return r.DidChangeConfigurationNotification.type}fillClientCapabilities(e){R(R(e,\"workspace\"),\"didChangeConfiguration\").dynamicRegistration=!0}initialize(){let e=this._client.clientOptions.synchronize.configurationSection;void 0!==e&&this.register(this.messages,{id:u.generateUuid(),registerOptions:{section:e}})}register(e,t){let n=i.workspace.onDidChangeConfiguration(e=>{this.onDidChangeConfiguration(t.registerOptions.section,e)});this._listeners.set(t.id,n),void 0!==t.registerOptions.section&&this.onDidChangeConfiguration(t.registerOptions.section,void 0)}unregister(e){let t=this._listeners.get(e);t&&(this._listeners.delete(e),t.dispose())}dispose(){for(let e of this._listeners.values())e.dispose();this._listeners.clear()}onDidChangeConfiguration(e,t){let n;if(void 0!==(n=a.string(e)?[e]:e)&&void 0!==t){if(!n.some(e=>t.affectsConfiguration(e)))return}let i=e=>{void 0!==e?this._client.sendNotification(r.DidChangeConfigurationNotification.type,{settings:this.extractSettingsInformation(e)}):this._client.sendNotification(r.DidChangeConfigurationNotification.type,{settings:null})},o=this.getMiddleware();o?o(n,i):i(n)}extractSettingsInformation(e){function t(e,t){let n=e;for(let e=0;e<t.length-1;e++){let i=n[t[e]];i||(i=Object.create(null),n[t[e]]=i),n=i}return n}let n=this._client.clientOptions.workspaceFolder?this._client.clientOptions.workspaceFolder.uri:void 0,r=Object.create(null);for(let o=0;o<e.length;o++){let s=e[o],a=s.indexOf(\".\"),c=null;if(c=a>=0?i.workspace.getConfiguration(s.substr(0,a),n).get(s.substr(a+1)):i.workspace.getConfiguration(s,n)){let n=e[o].split(\".\");t(r,n)[n[n.length-1]]=c}}return r}getMiddleware(){let e=this._client.clientOptions.middleware;return e.workspace&&e.workspace.didChangeConfiguration?e.workspace.didChangeConfiguration:void 0}}class V{constructor(e){this._client=e,this._commands=new Map}get messages(){return r.ExecuteCommandRequest.type}fillClientCapabilities(e){R(R(e,\"workspace\"),\"executeCommand\").dynamicRegistration=!0}initialize(e){e.executeCommandProvider&&this.register(this.messages,{id:u.generateUuid(),registerOptions:Object.assign({},e.executeCommandProvider)})}register(e,t){const n=this._client,o=n.clientOptions.middleware,s=(e,t)=>{let i={command:e,arguments:t};return n.sendRequest(r.ExecuteCommandRequest.type,i).then(void 0,e=>{n.logFailedRequest(r.ExecuteCommandRequest.type,e)})};if(t.registerOptions.commands){const e=[];for(const n of t.registerOptions.commands)e.push(i.commands.registerCommand(n,(...e)=>o.executeCommand?o.executeCommand(n,e,s):s(n,e)));this._commands.set(t.id,e)}}unregister(e){let t=this._commands.get(e);t&&t.forEach(e=>e.dispose())}dispose(){this._commands.forEach(e=>{e.forEach(e=>e.dispose())}),this._commands.clear()}}!function(e){e.is=function(e){return e&&r.MessageReader.is(e.reader)&&r.MessageWriter.is(e.writer)}}(t.MessageTransports||(t.MessageTransports={}));class X{constructor(e,t){this._resolve=e,this._reject=t,this._used=!1}get isUsed(){return this._used}resolve(){this._used=!0,this._resolve()}reject(e){this._used=!0,this._reject(e)}}t.BaseLanguageClient=class{constructor(e,t,n){this._traceFormat=r.TraceFormat.Text,this._features=[],this._method2Message=new Map,this._dynamicFeatures=new Map,this._id=e,this._name=t,n=n||{},this._clientOptions={documentSelector:n.documentSelector||[],synchronize:n.synchronize||{},diagnosticCollectionName:n.diagnosticCollectionName,outputChannelName:n.outputChannelName||this._name,revealOutputChannelOn:n.revealOutputChannelOn||h.Error,stdioEncoding:n.stdioEncoding||\"utf8\",initializationOptions:n.initializationOptions,initializationFailedHandler:n.initializationFailedHandler,progressOnInitialization:!!n.progressOnInitialization,errorHandler:n.errorHandler||new v(this._name),middleware:n.middleware||{},uriConverters:n.uriConverters,workspaceFolder:n.workspaceFolder},this._clientOptions.synchronize=this._clientOptions.synchronize||{},this.state=f.Initial,this._connectionPromise=void 0,this._resolvedConnection=void 0,this._initializeResult=void 0,n.outputChannel?(this._outputChannel=n.outputChannel,this._disposeOutputChannel=!1):(this._outputChannel=void 0,this._disposeOutputChannel=!0),this._traceOutputChannel=n.traceOutputChannel,this._listeners=void 0,this._providers=void 0,this._diagnostics=void 0,this._fileEvents=[],this._fileEventDelayer=new c.Delayer(250),this._onReady=new Promise((e,t)=>{this._onReadyCallbacks=new X(e,t)}),this._onStop=void 0,this._telemetryEmitter=new r.Emitter,this._stateChangeEmitter=new r.Emitter,this._tracer={log:(e,t)=>{a.string(e)?this.logTrace(e,t):this.logObjectTrace(e)}},this._c2p=o.createConverter(n.uriConverters?n.uriConverters.code2Protocol:void 0),this._p2c=s.createConverter(n.uriConverters?n.uriConverters.protocol2Code:void 0),this._syncedDocuments=new Map,this.registerBuiltinFeatures()}get state(){return this._state}set state(e){let t=this.getPublicState();this._state=e;let n=this.getPublicState();n!==t&&this._stateChangeEmitter.fire({oldState:t,newState:n})}getPublicState(){return this.state===f.Running?m.Running:this.state===f.Starting?m.Starting:m.Stopped}get initializeResult(){return this._initializeResult}sendRequest(e,...t){if(!this.isConnectionActive())throw new Error(\"Language client is not ready yet\");this.forceDocumentSync();try{return this._resolvedConnection.sendRequest(e,...t)}catch(t){throw this.error(`Sending request ${a.string(e)?e:e.method} failed.`,t),t}}onRequest(e,t){if(!this.isConnectionActive())throw new Error(\"Language client is not ready yet\");try{this._resolvedConnection.onRequest(e,t)}catch(t){throw this.error(`Registering request handler ${a.string(e)?e:e.method} failed.`,t),t}}sendNotification(e,t){if(!this.isConnectionActive())throw new Error(\"Language client is not ready yet\");this.forceDocumentSync();try{this._resolvedConnection.sendNotification(e,t)}catch(t){throw this.error(`Sending notification ${a.string(e)?e:e.method} failed.`,t),t}}onNotification(e,t){if(!this.isConnectionActive())throw new Error(\"Language client is not ready yet\");try{this._resolvedConnection.onNotification(e,t)}catch(t){throw this.error(`Registering notification handler ${a.string(e)?e:e.method} failed.`,t),t}}onProgress(e,t,n){if(!this.isConnectionActive())throw new Error(\"Language client is not ready yet\");try{return this._resolvedConnection.onProgress(e,t,n)}catch(e){throw this.error(`Registering progress handler for token ${t} failed.`,e),e}}sendProgress(e,t,n){if(!this.isConnectionActive())throw new Error(\"Language client is not ready yet\");this.forceDocumentSync();try{this._resolvedConnection.sendProgress(e,t,n)}catch(e){throw this.error(`Sending progress for token ${t} failed.`,e),e}}get clientOptions(){return this._clientOptions}get protocol2CodeConverter(){return this._p2c}get code2ProtocolConverter(){return this._c2p}get onTelemetry(){return this._telemetryEmitter.event}get onDidChangeState(){return this._stateChangeEmitter.event}get outputChannel(){return this._outputChannel||(this._outputChannel=i.window.createOutputChannel(this._clientOptions.outputChannelName?this._clientOptions.outputChannelName:this._name)),this._outputChannel}get traceOutputChannel(){return this._traceOutputChannel?this._traceOutputChannel:this.outputChannel}get diagnostics(){return this._diagnostics}createDefaultErrorHandler(){return new v(this._name)}set trace(e){this._trace=e,this.onReady().then(()=>{this.resolveConnection().then(e=>{e.trace(this._trace,this._tracer,{sendNotification:!1,traceFormat:this._traceFormat})})},()=>{})}data2String(e){if(e instanceof r.ResponseError){const t=e;return`  Message: ${t.message}\\n  Code: ${t.code} ${t.data?\"\\n\"+t.data.toString():\"\"}`}return e instanceof Error?a.string(e.stack)?e.stack:e.message:a.string(e)?e:e.toString()}info(e,t){this.outputChannel.appendLine(`[Info  - ${(new Date).toLocaleTimeString()}] ${e}`),t&&this.outputChannel.appendLine(this.data2String(t)),this._clientOptions.revealOutputChannelOn<=h.Info&&this.showNotificationMessage()}warn(e,t){this.outputChannel.appendLine(`[Warn  - ${(new Date).toLocaleTimeString()}] ${e}`),t&&this.outputChannel.appendLine(this.data2String(t)),this._clientOptions.revealOutputChannelOn<=h.Warn&&this.showNotificationMessage()}error(e,t){this.outputChannel.appendLine(`[Error - ${(new Date).toLocaleTimeString()}] ${e}`),t&&this.outputChannel.appendLine(this.data2String(t)),this._clientOptions.revealOutputChannelOn<=h.Error&&this.showNotificationMessage()}showNotificationMessage(){i.window.showInformationMessage(\"A request has failed. See the output for more information.\",\"Go to output\").then(()=>{this.outputChannel.show(!0)})}logTrace(e,t){this.traceOutputChannel.appendLine(`[Trace - ${(new Date).toLocaleTimeString()}] ${e}`),t&&this.traceOutputChannel.appendLine(this.data2String(t))}logObjectTrace(e){e.isLSPMessage&&e.type?this.traceOutputChannel.append(`[LSP   - ${(new Date).toLocaleTimeString()}] `):this.traceOutputChannel.append(`[Trace - ${(new Date).toLocaleTimeString()}] `),e&&this.traceOutputChannel.appendLine(`${JSON.stringify(e)}`)}needsStart(){return this.state===f.Initial||this.state===f.Stopping||this.state===f.Stopped}needsStop(){return this.state===f.Starting||this.state===f.Running}onReady(){return this._onReady}isConnectionActive(){return this.state===f.Running&&!!this._resolvedConnection}start(){return this._onReadyCallbacks.isUsed&&(this._onReady=new Promise((e,t)=>{this._onReadyCallbacks=new X(e,t)})),this._listeners=[],this._providers=[],this._diagnostics||(this._diagnostics=this._clientOptions.diagnosticCollectionName?i.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName):i.languages.createDiagnosticCollection()),this.state=f.Starting,this.resolveConnection().then(e=>(e.onLogMessage(e=>{switch(e.type){case r.MessageType.Error:this.error(e.message);break;case r.MessageType.Warning:this.warn(e.message);break;case r.MessageType.Info:this.info(e.message);break;default:this.outputChannel.appendLine(e.message)}}),e.onShowMessage(e=>{switch(e.type){case r.MessageType.Error:i.window.showErrorMessage(e.message);break;case r.MessageType.Warning:i.window.showWarningMessage(e.message);break;case r.MessageType.Info:i.window.showInformationMessage(e.message);break;default:i.window.showInformationMessage(e.message)}}),e.onRequest(r.ShowMessageRequest.type,e=>{let t;switch(e.type){case r.MessageType.Error:t=i.window.showErrorMessage;break;case r.MessageType.Warning:t=i.window.showWarningMessage;break;case r.MessageType.Info:t=i.window.showInformationMessage;break;default:t=i.window.showInformationMessage}let n=e.actions||[];return t(e.message,...n)}),e.onTelemetry(e=>{this._telemetryEmitter.fire(e)}),e.listen(),this.initialize(e))).then(void 0,e=>{this.state=f.StartFailed,this._onReadyCallbacks.reject(e),this.error(\"Starting client failed\",e),i.window.showErrorMessage(`Couldn't start client ${this._name}`)}),new i.Disposable(()=>{this.needsStop()&&this.stop()})}resolveConnection(){return this._connectionPromise||(this._connectionPromise=this.createConnection()),this._connectionPromise}initialize(e){this.refreshTrace(e,!1);let t=this._clientOptions.initializationOptions,n=this._clientOptions.workspaceFolder?this._clientOptions.workspaceFolder.uri.fsPath:this._clientGetRootPath(),o={processId:process.pid,clientInfo:{name:\"vscode\",version:i.version},rootPath:n||null,rootUri:n?this._c2p.asUri(i.Uri.file(n)):null,capabilities:this.computeClientCapabilities(),initializationOptions:a.func(t)?t():t,trace:r.Trace.toString(this._trace),workspaceFolders:null};if(this.fillInitializeParams(o),this._clientOptions.progressOnInitialization){const t=u.generateUuid(),n=new l.ProgressPart(e,t);return o.workDoneToken=t,this.doInitialize(e,o).then(e=>(n.done(),e),e=>{throw n.cancel(),e})}return this.doInitialize(e,o)}doInitialize(e,t){return e.initialize(t).then(t=>{this._resolvedConnection=e,this._initializeResult=t,this.state=f.Running;let n=void 0;return a.number(t.capabilities.textDocumentSync)?n=t.capabilities.textDocumentSync===r.TextDocumentSyncKind.None?{openClose:!1,change:r.TextDocumentSyncKind.None,save:void 0}:{openClose:!0,change:t.capabilities.textDocumentSync,save:{includeText:!1}}:void 0!==t.capabilities.textDocumentSync&&null!==t.capabilities.textDocumentSync&&(n=t.capabilities.textDocumentSync),this._capabilities=Object.assign({},t.capabilities,{resolvedTextDocumentSync:n}),e.onDiagnostics(e=>this.handleDiagnostics(e)),e.onRequest(r.RegistrationRequest.type,e=>this.handleRegistrationRequest(e)),e.onRequest(\"client/registerFeature\",e=>this.handleRegistrationRequest(e)),e.onRequest(r.UnregistrationRequest.type,e=>this.handleUnregistrationRequest(e)),e.onRequest(\"client/unregisterFeature\",e=>this.handleUnregistrationRequest(e)),e.onRequest(r.ApplyWorkspaceEditRequest.type,e=>this.handleApplyWorkspaceEdit(e)),e.sendNotification(r.InitializedNotification.type,{}),this.hookFileEvents(e),this.hookConfigurationChanged(e),this.initializeFeatures(e),this._onReadyCallbacks.resolve(),t}).then(void 0,t=>{throw this._clientOptions.initializationFailedHandler?this._clientOptions.initializationFailedHandler(t)?this.initialize(e):(this.stop(),this._onReadyCallbacks.reject(t)):t instanceof r.ResponseError&&t.data&&t.data.retry?i.window.showErrorMessage(t.message,{title:\"Retry\",id:\"retry\"}).then(n=>{n&&\"retry\"===n.id?this.initialize(e):(this.stop(),this._onReadyCallbacks.reject(t))}):(t&&t.message&&i.window.showErrorMessage(t.message),this.error(\"Server initialization failed.\",t),this.stop(),this._onReadyCallbacks.reject(t)),t})}_clientGetRootPath(){let e=i.workspace.workspaceFolders;if(!e||0===e.length)return;let t=e[0];return\"file\"===t.uri.scheme?t.uri.fsPath:void 0}stop(){return this._initializeResult=void 0,this._connectionPromise?this.state===f.Stopping&&this._onStop?this._onStop:(this.state=f.Stopping,this.cleanUp(!1),this._onStop=this.resolveConnection().then(e=>e.shutdown().then(()=>{e.exit(),e.dispose(),this.state=f.Stopped,this.cleanUpChannel(),this._onStop=void 0,this._connectionPromise=void 0,this._resolvedConnection=void 0}))):(this.state=f.Stopped,Promise.resolve())}cleanUp(e=!0,t=!0){this._listeners&&(this._listeners.forEach(e=>e.dispose()),this._listeners=void 0),this._providers&&(this._providers.forEach(e=>e.dispose()),this._providers=void 0),this._syncedDocuments&&this._syncedDocuments.clear();for(let e of this._dynamicFeatures.values())e.dispose();e&&this.cleanUpChannel(),t&&this._diagnostics&&(this._diagnostics.dispose(),this._diagnostics=void 0)}cleanUpChannel(){this._outputChannel&&this._disposeOutputChannel&&(this._outputChannel.dispose(),this._outputChannel=void 0)}notifyFileEvent(e){var t;const n=this;function i(e){n._fileEvents.push(e),n._fileEventDelayer.trigger(()=>{n.onReady().then(()=>{n.resolveConnection().then(e=>{n.isConnectionActive()&&(n.forceDocumentSync(),e.didChangeWatchedFiles({changes:n._fileEvents})),n._fileEvents=[]})},e=>{n.error(\"Notify file events failed.\",e)})})}const r=null===(t=this.clientOptions.middleware)||void 0===t?void 0:t.workspace;(null===r||void 0===r?void 0:r.didChangeWatchedFile)?r.didChangeWatchedFile(e,i):i(e)}forceDocumentSync(){this._dynamicFeatures.get(r.DidChangeTextDocumentNotification.type.method).forceDelivery()}handleDiagnostics(e){if(!this._diagnostics)return;let t=this._p2c.asUri(e.uri),n=this._p2c.asDiagnostics(e.diagnostics),i=this.clientOptions.middleware;i.handleDiagnostics?i.handleDiagnostics(t,n,(e,t)=>this.setDiagnostics(e,t)):this.setDiagnostics(t,n)}setDiagnostics(e,t){this._diagnostics&&this._diagnostics.set(e,t)}createConnection(){let e=(e,t,n)=>{this.handleConnectionError(e,t,n)},t=()=>{this.handleConnectionClosed()};return this.createMessageTransports(this._clientOptions.stdioEncoding||\"utf8\").then(n=>(function(e,t,n,i){let o=new d,s=r.createProtocolConnection(e,t,o);return s.onError(e=>{n(e[0],e[1],e[2])}),s.onClose(i),{listen:()=>s.listen(),sendRequest:(e,...t)=>s.sendRequest(a.string(e)?e:e.method,...t),onRequest:(e,t)=>s.onRequest(a.string(e)?e:e.method,t),sendNotification:(e,t)=>s.sendNotification(a.string(e)?e:e.method,t),onNotification:(e,t)=>s.onNotification(a.string(e)?e:e.method,t),onProgress:s.onProgress,sendProgress:s.sendProgress,trace:(e,t,n)=>{const i={sendNotification:!1,traceFormat:r.TraceFormat.Text};void 0===n?s.trace(e,t,i):(a.boolean(n),s.trace(e,t,n))},initialize:e=>s.sendRequest(r.InitializeRequest.type,e),shutdown:()=>s.sendRequest(r.ShutdownRequest.type,void 0),exit:()=>s.sendNotification(r.ExitNotification.type),onLogMessage:e=>s.onNotification(r.LogMessageNotification.type,e),onShowMessage:e=>s.onNotification(r.ShowMessageNotification.type,e),onTelemetry:e=>s.onNotification(r.TelemetryEventNotification.type,e),didChangeConfiguration:e=>s.sendNotification(r.DidChangeConfigurationNotification.type,e),didChangeWatchedFiles:e=>s.sendNotification(r.DidChangeWatchedFilesNotification.type,e),didOpenTextDocument:e=>s.sendNotification(r.DidOpenTextDocumentNotification.type,e),didChangeTextDocument:e=>s.sendNotification(r.DidChangeTextDocumentNotification.type,e),didCloseTextDocument:e=>s.sendNotification(r.DidCloseTextDocumentNotification.type,e),didSaveTextDocument:e=>s.sendNotification(r.DidSaveTextDocumentNotification.type,e),onDiagnostics:e=>s.onNotification(r.PublishDiagnosticsNotification.type,e),dispose:()=>s.dispose()}})(n.reader,n.writer,e,t))}handleConnectionClosed(){if(this.state===f.Stopping||this.state===f.Stopped)return;try{this._resolvedConnection&&this._resolvedConnection.dispose()}catch(e){}let e=g.DoNotRestart;try{e=this._clientOptions.errorHandler.closed()}catch(e){}this._connectionPromise=void 0,this._resolvedConnection=void 0,e===g.DoNotRestart?(this.error(\"Connection to server got closed. Server will not be restarted.\"),this.state=f.Stopped,this.cleanUp(!1,!0)):e===g.Restart&&(this.info(\"Connection to server got closed. Server will restart.\"),this.cleanUp(!1,!1),this.state=f.Initial,this.start())}handleConnectionError(e,t,n){this._clientOptions.errorHandler.error(e,t,n)===p.Shutdown&&(this.error(\"Connection to server is erroring. Shutting down server.\"),this.stop())}hookConfigurationChanged(e){i.workspace.onDidChangeConfiguration(()=>{this.refreshTrace(e,!0)})}refreshTrace(e,t=!1){let n=i.workspace.getConfiguration(this._id),o=r.Trace.Off,s=r.TraceFormat.Text;if(n){const e=n.get(\"trace.server\",\"off\");\"string\"==typeof e?o=r.Trace.fromString(e):(o=r.Trace.fromString(n.get(\"trace.server.verbosity\",\"off\")),s=r.TraceFormat.fromString(n.get(\"trace.server.format\",\"text\")))}this._trace=o,this._traceFormat=s,e.trace(this._trace,this._tracer,{sendNotification:t,traceFormat:this._traceFormat})}hookFileEvents(e){let t,n=this._clientOptions.synchronize.fileEvents;n&&(t=a.array(n)?n:[n])&&this._dynamicFeatures.get(r.DidChangeWatchedFilesNotification.type.method).registerRaw(u.generateUuid(),t)}registerFeatures(e){for(let t of e)this.registerFeature(t)}registerFeature(e){if(this._features.push(e),w.is(e)){let t=e.messages;if(Array.isArray(t))for(let n of t)this._method2Message.set(n.method,n),this._dynamicFeatures.set(n.method,e);else this._method2Message.set(t.method,t),this._dynamicFeatures.set(t.method,e)}}getFeature(e){return this._dynamicFeatures.get(e)}registerBuiltinFeatures(){this.registerFeature(new B(this)),this.registerFeature(new S(this,this._syncedDocuments)),this.registerFeature(new E(this)),this.registerFeature(new P(this)),this.registerFeature(new D(this)),this.registerFeature(new b(this)),this.registerFeature(new _(this,this._syncedDocuments)),this.registerFeature(new x(this,e=>this.notifyFileEvent(e))),this.registerFeature(new I(this)),this.registerFeature(new q(this)),this.registerFeature(new N(this)),this.registerFeature(new F(this)),this.registerFeature(new M(this)),this.registerFeature(new L(this)),this.registerFeature(new A(this)),this.registerFeature(new j(this)),this.registerFeature(new K(this)),this.registerFeature(new H(this)),this.registerFeature(new W(this)),this.registerFeature(new U(this)),this.registerFeature(new $(this)),this.registerFeature(new z(this)),this.registerFeature(new G(this)),this.registerFeature(new V(this))}fillInitializeParams(e){for(let t of this._features)a.func(t.fillInitializeParams)&&t.fillInitializeParams(e)}computeClientCapabilities(){let e={};R(e,\"workspace\").applyEdit=!0;let t=R(R(e,\"workspace\"),\"workspaceEdit\");t.documentChanges=!0,t.resourceOperations=[r.ResourceOperationKind.Create,r.ResourceOperationKind.Rename,r.ResourceOperationKind.Delete],t.failureHandling=r.FailureHandlingKind.TextOnlyTransactional;let n=R(R(e,\"textDocument\"),\"publishDiagnostics\");n.relatedInformation=!0,n.versionSupport=!1,n.tagSupport={valueSet:[r.DiagnosticTag.Unnecessary,r.DiagnosticTag.Deprecated]};for(let t of this._features)t.fillClientCapabilities(e);return e}initializeFeatures(e){let t=this._clientOptions.documentSelector;for(let e of this._features)e.initialize(this._capabilities,t)}handleRegistrationRequest(e){return new Promise((t,n)=>{for(let t of e.registrations){const e=this._dynamicFeatures.get(t.method);if(!e)return void n(new Error(`No feature implementation for ${t.method} found. Registration failed.`));const i=t.registerOptions||{};i.documentSelector=i.documentSelector||this._clientOptions.documentSelector;const r={id:t.id,registerOptions:i};e.register(this._method2Message.get(t.method),r)}t()})}handleUnregistrationRequest(e){return new Promise((t,n)=>{for(let t of e.unregisterations){const e=this._dynamicFeatures.get(t.method);if(!e)return void n(new Error(`No feature implementation for ${t.method} found. Unregistration failed.`));e.unregister(t.id)}t()})}handleApplyWorkspaceEdit(e){let t=e.edit,n=new Map;i.workspace.textDocuments.forEach(e=>n.set(e.uri.toString(),e));let o=!1;if(t.documentChanges)for(const e of t.documentChanges)if(r.TextDocumentEdit.is(e)&&e.textDocument.version&&e.textDocument.version>=0){let t=n.get(e.textDocument.uri);if(t&&t.version!==e.textDocument.version){o=!0;break}}return o?Promise.resolve({applied:!1}):a.asPromise(i.workspace.applyEdit(this._p2c.asWorkspaceEdit(e.edit)).then(e=>({applied:e})))}logFailedRequest(e,t){t instanceof r.ResponseError&&(t.code===r.ErrorCodes.RequestCancelled||t.code===r.ErrorCodes.ContentModified)||this.error(`Request ${e.method} failed.`,t)}}},function(e,t,n){\"use strict\";function i(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,\"__esModule\",{value:!0});const r=n(6),o=n(22);t.RequestType=o.RequestType,t.RequestType0=o.RequestType0,t.RequestType1=o.RequestType1,t.RequestType2=o.RequestType2,t.RequestType3=o.RequestType3,t.RequestType4=o.RequestType4,t.RequestType5=o.RequestType5,t.RequestType6=o.RequestType6,t.RequestType7=o.RequestType7,t.RequestType8=o.RequestType8,t.RequestType9=o.RequestType9,t.ResponseError=o.ResponseError,t.ErrorCodes=o.ErrorCodes,t.NotificationType=o.NotificationType,t.NotificationType0=o.NotificationType0,t.NotificationType1=o.NotificationType1,t.NotificationType2=o.NotificationType2,t.NotificationType3=o.NotificationType3,t.NotificationType4=o.NotificationType4,t.NotificationType5=o.NotificationType5,t.NotificationType6=o.NotificationType6,t.NotificationType7=o.NotificationType7,t.NotificationType8=o.NotificationType8,t.NotificationType9=o.NotificationType9;const s=n(10);t.MessageReader=s.MessageReader,t.StreamMessageReader=s.StreamMessageReader,t.IPCMessageReader=s.IPCMessageReader,t.SocketMessageReader=s.SocketMessageReader;const a=n(11);t.MessageWriter=a.MessageWriter,t.StreamMessageWriter=a.StreamMessageWriter,t.IPCMessageWriter=a.IPCMessageWriter,t.SocketMessageWriter=a.SocketMessageWriter;const c=n(8);t.Disposable=c.Disposable,t.Event=c.Event,t.Emitter=c.Emitter;const u=n(23);t.CancellationTokenSource=u.CancellationTokenSource,t.CancellationToken=u.CancellationToken;const l=n(24);var d,p,g,h,m,f,v,y;i(n(25)),i(n(28)),function(e){e.type=new o.NotificationType(\"$/cancelRequest\")}(d||(d={})),function(e){e.type=new o.NotificationType(\"$/progress\")}(p||(p={}));t.ProgressType=class{constructor(){}},t.NullLogger=Object.freeze({error:()=>{},warn:()=>{},info:()=>{},log:()=>{}}),function(e){e[e.Off=0]=\"Off\",e[e.Messages=1]=\"Messages\",e[e.Verbose=2]=\"Verbose\"}(g=t.Trace||(t.Trace={})),function(e){e.fromString=function(t){if(!r.string(t))return e.Off;switch(t=t.toLowerCase()){case\"off\":return e.Off;case\"messages\":return e.Messages;case\"verbose\":return e.Verbose;default:return e.Off}},e.toString=function(t){switch(t){case e.Off:return\"off\";case e.Messages:return\"messages\";case e.Verbose:return\"verbose\";default:return\"off\"}}}(g=t.Trace||(t.Trace={})),function(e){e.Text=\"text\",e.JSON=\"json\"}(h=t.TraceFormat||(t.TraceFormat={})),function(e){e.fromString=function(t){return\"json\"===(t=t.toLowerCase())?e.JSON:e.Text}}(h=t.TraceFormat||(t.TraceFormat={})),function(e){e.type=new o.NotificationType(\"$/setTraceNotification\")}(m=t.SetTraceNotification||(t.SetTraceNotification={})),function(e){e.type=new o.NotificationType(\"$/logTraceNotification\")}(f=t.LogTraceNotification||(t.LogTraceNotification={})),function(e){e[e.Closed=1]=\"Closed\",e[e.Disposed=2]=\"Disposed\",e[e.AlreadyListening=3]=\"AlreadyListening\"}(v=t.ConnectionErrors||(t.ConnectionErrors={}));class C extends Error{constructor(e,t){super(t),this.code=e,Object.setPrototypeOf(this,C.prototype)}}function R(e,t,n,i){let s=0,a=0,R=0;const w=\"2.0\";let T,S,_=void 0,E=Object.create(null),P=void 0,D=Object.create(null),b=new Map,x=new l.LinkedMap,k=Object.create(null),O=Object.create(null),I=g.Off,q=h.Text,N=y.New,F=new c.Emitter,M=new c.Emitter,L=new c.Emitter,A=new c.Emitter,j=new c.Emitter;function K(e){return\"req-\"+e.toString()}function H(e,t){o.isRequestMessage(t)?e.set(K(t.id),t):o.isResponseMessage(t)?e.set(function(e){return null===e?\"res-unknown-\"+(++R).toString():\"res-\"+e.toString()}(t.id),t):e.set(\"not-\"+(++a).toString(),t)}function W(e){}function U(){return N===y.Listening}function $(){return N===y.Closed}function z(){return N===y.Disposed}function G(){N!==y.New&&N!==y.Listening||(N=y.Closed,M.fire(void 0))}function B(){T||0===x.size||(T=setImmediate(()=>{T=void 0,function(){if(0===x.size)return;let e=x.shift();try{o.isRequestMessage(e)?function(e){if(z())return;function n(n,i,r){let s={jsonrpc:w,id:e.id};n instanceof o.ResponseError?s.error=n.toJson():s.result=void 0===n?null:n,X(s,i,r),t.write(s)}function i(n,i,r){let o={jsonrpc:w,id:e.id,error:n.toJson()};X(o,i,r),t.write(o)}!function(e){if(I===g.Off||!S)return;if(q===h.Text){let t=void 0;I===g.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\\n\\n`),S.log(`Received request '${e.method} - (${e.id})'.`,t)}else J(\"receive-request\",e)}(e);let s,a,c=E[e.method];c&&(s=c.type,a=c.handler);let l=Date.now();if(a||_){let c=new u.CancellationTokenSource,d=String(e.id);O[d]=c;try{let u,p=u=void 0===e.params||void 0!==s&&0===s.numberOfParams?a?a(c.token):_(e.method,c.token):r.array(e.params)&&(void 0===s||s.numberOfParams>1)?a?a(...e.params,c.token):_(e.method,...e.params,c.token):a?a(e.params,c.token):_(e.method,e.params,c.token);u?p.then?p.then(t=>{delete O[d],n(t,e.method,l)},t=>{delete O[d],t instanceof o.ResponseError?i(t,e.method,l):t&&r.string(t.message)?i(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${t.message}`),e.method,l):i(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,l)}):(delete O[d],n(u,e.method,l)):(delete O[d],function(n,i,r){void 0===n&&(n=null);let o={jsonrpc:w,id:e.id,result:n};X(o,i,r),t.write(o)}(u,e.method,l))}catch(t){delete O[d],t instanceof o.ResponseError?n(t,e.method,l):t&&r.string(t.message)?i(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed with message: ${t.message}`),e.method,l):i(new o.ResponseError(o.ErrorCodes.InternalError,`Request ${e.method} failed unexpectedly without providing any details.`),e.method,l)}}else i(new o.ResponseError(o.ErrorCodes.MethodNotFound,`Unhandled method ${e.method}`),e.method,l)}(e):o.isNotificationMessage(e)?function(e){if(z())return;let t,i=void 0;if(e.method===d.type.method)t=(e=>{let t=e.id,n=O[String(t)];n&&n.cancel()});else{let n=D[e.method];n&&(t=n.handler,i=n.type)}if(t||P)try{!function(e){if(I===g.Off||!S||e.method===f.type.method)return;if(q===h.Text){let t=void 0;I===g.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\\n\\n`:\"No parameters provided.\\n\\n\"),S.log(`Received notification '${e.method}'.`,t)}else J(\"receive-notification\",e)}(e),void 0===e.params||void 0!==i&&0===i.numberOfParams?t?t():P(e.method):r.array(e.params)&&(void 0===i||i.numberOfParams>1)?t?t(...e.params):P(e.method,...e.params):t?t(e.params):P(e.method,e.params)}catch(t){t.message?n.error(`Notification handler '${e.method}' failed with message: ${t.message}`):n.error(`Notification handler '${e.method}' failed unexpectedly.`)}else L.fire(e)}(e):o.isResponseMessage(e)?function(e){if(z())return;if(null===e.id)e.error?n.error(`Received response message without id: Error is: \\n${JSON.stringify(e.error,void 0,4)}`):n.error(\"Received response message without id. No further error information provided.\");else{let t=String(e.id),i=k[t];if(function(e,t){if(I===g.Off||!S)return;if(q===h.Text){let n=void 0;if(I===g.Verbose&&(e.error&&e.error.data?n=`Error data: ${JSON.stringify(e.error.data,null,4)}\\n\\n`:e.result?n=`Result: ${JSON.stringify(e.result,null,4)}\\n\\n`:void 0===e.error&&(n=\"No result returned.\\n\\n\")),t){let i=e.error?` Request failed: ${e.error.message} (${e.error.code}).`:\"\";S.log(`Received response '${t.method} - (${e.id})' in ${Date.now()-t.timerStart}ms.${i}`,n)}else S.log(`Received response ${e.id} without active response promise.`,n)}else J(\"receive-response\",e)}(e,i),i){delete k[t];try{if(e.error){let t=e.error;i.reject(new o.ResponseError(t.code,t.message,t.data))}else{if(void 0===e.result)throw new Error(\"Should never happen.\");i.resolve(e.result)}}catch(e){e.message?n.error(`Response handler '${i.method}' failed with message: ${e.message}`):n.error(`Response handler '${i.method}' failed unexpectedly.`)}}}}(e):function(e){if(!e)return void n.error(\"Received empty message.\");n.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(e,null,4)}`);let t=e;if(r.string(t.id)||r.number(t.id)){let e=String(t.id),n=k[e];n&&n.reject(new Error(\"The received response has neither a result nor an error property.\"))}}(e)}finally{B()}}()}))}e.onClose(G),e.onError(function(e){F.fire([e,void 0,void 0])}),t.onClose(G),t.onError(function(e){F.fire(e)});let V=e=>{try{if(o.isNotificationMessage(e)&&e.method===d.type.method){let n=K(e.params.id),r=x.get(n);if(o.isRequestMessage(r)){let o=i&&i.cancelUndispatched?i.cancelUndispatched(r,W):void 0;if(o&&(void 0!==o.error||void 0!==o.result))return x.delete(n),o.id=r.id,X(o,e.method,Date.now()),void t.write(o)}}H(x,e)}finally{B()}};function X(e,t,n){if(I!==g.Off&&S)if(q===h.Text){let i=void 0;I===g.Verbose&&(e.error&&e.error.data?i=`Error data: ${JSON.stringify(e.error.data,null,4)}\\n\\n`:e.result?i=`Result: ${JSON.stringify(e.result,null,4)}\\n\\n`:void 0===e.error&&(i=\"No result returned.\\n\\n\")),S.log(`Sending response '${t} - (${e.id})'. Processing request took ${Date.now()-n}ms`,i)}else J(\"send-response\",e)}function J(e,t){if(!S||I===g.Off)return;const n={isLSPMessage:!0,type:e,message:t,timestamp:Date.now()};S.log(n)}function Y(){if($())throw new C(v.Closed,\"Connection is closed.\");if(z())throw new C(v.Disposed,\"Connection is disposed.\")}function Q(e){return void 0===e?null:e}function Z(e,t){let n,i=e.numberOfParams;switch(i){case 0:n=null;break;case 1:n=Q(t[0]);break;default:n=[];for(let e=0;e<t.length&&e<i;e++)n.push(Q(t[e]));if(t.length<i)for(let e=t.length;e<i;e++)n.push(null)}return n}let ee={sendNotification:(e,...n)=>{let i,o;if(Y(),r.string(e))switch(i=e,n.length){case 0:o=null;break;case 1:o=n[0];break;default:o=n}else i=e.method,o=Z(e,n);let s={jsonrpc:w,method:i,params:o};!function(e){if(I!==g.Off&&S)if(q===h.Text){let t=void 0;I===g.Verbose&&(t=e.params?`Params: ${JSON.stringify(e.params,null,4)}\\n\\n`:\"No parameters provided.\\n\\n\"),S.log(`Sending notification '${e.method}'.`,t)}else J(\"send-notification\",e)}(s),t.write(s)},onNotification:(e,t)=>{Y(),r.func(e)?P=e:t&&(r.string(e)?D[e]={type:void 0,handler:t}:D[e.method]={type:e,handler:t})},onProgress:(e,t,n)=>{if(b.has(t))throw new Error(`Progress handler for token ${t} already registered`);return b.set(t,n),{dispose:()=>{b.delete(t)}}},sendProgress:(e,t,n)=>{ee.sendNotification(p.type,{token:t,value:n})},onUnhandledProgress:A.event,sendRequest:(e,...n)=>{let i,a;Y(),function(){if(!U())throw new Error(\"Call listen() first.\")}();let c=void 0;if(r.string(e))switch(i=e,n.length){case 0:a=null;break;case 1:u.CancellationToken.is(n[0])?(a=null,c=n[0]):a=Q(n[0]);break;default:const t=n.length-1;u.CancellationToken.is(n[t])?(c=n[t],a=2===n.length?Q(n[0]):n.slice(0,t).map(e=>Q(e))):a=n.map(e=>Q(e))}else{i=e.method,a=Z(e,n);let t=e.numberOfParams;c=u.CancellationToken.is(n[t])?n[t]:void 0}let l=s++,p=new Promise((e,n)=>{let r={jsonrpc:w,id:l,method:i,params:a},s={method:i,timerStart:Date.now(),resolve:e,reject:n};!function(e){if(I!==g.Off&&S)if(q===h.Text){let t=void 0;I===g.Verbose&&e.params&&(t=`Params: ${JSON.stringify(e.params,null,4)}\\n\\n`),S.log(`Sending request '${e.method} - (${e.id})'.`,t)}else J(\"send-request\",e)}(r);try{t.write(r)}catch(e){s.reject(new o.ResponseError(o.ErrorCodes.MessageWriteError,e.message?e.message:\"Unknown reason\")),s=null}s&&(k[String(l)]=s)});return c&&c.onCancellationRequested(()=>{ee.sendNotification(d.type,{id:l})}),p},onRequest:(e,t)=>{Y(),r.func(e)?_=e:t&&(r.string(e)?E[e]={type:void 0,handler:t}:E[e.method]={type:e,handler:t})},trace:(e,t,n)=>{let i=!1,o=h.Text;void 0!==n&&(r.boolean(n)?i=n:(i=n.sendNotification||!1,o=n.traceFormat||h.Text)),q=o,S=(I=e)===g.Off?void 0:t,!i||$()||z()||ee.sendNotification(m.type,{value:g.toString(e)})},onError:F.event,onClose:M.event,onUnhandledNotification:L.event,onDispose:j.event,dispose:()=>{if(z())return;N=y.Disposed,j.fire(void 0);let n=new Error(\"Connection got disposed.\");Object.keys(k).forEach(e=>{k[e].reject(n)}),k=Object.create(null),O=Object.create(null),x=new l.LinkedMap,r.func(t.dispose)&&t.dispose(),r.func(e.dispose)&&e.dispose()},listen:()=>{Y(),function(){if(U())throw new C(v.AlreadyListening,\"Connection is already listening\")}(),N=y.Listening,e.listen(V)},inspect:()=>{console.log(\"inspect\")}};return ee.onNotification(f.type,e=>{I!==g.Off&&S&&S.log(e.message,I===g.Verbose?e.verbose:void 0)}),ee.onNotification(p.type,e=>{const t=b.get(e.token);t?t(e.value):A.fire(e)}),ee}t.ConnectionError=C,function(e){e.is=function(e){let t=e;return t&&r.func(t.cancelUndispatched)}}(t.ConnectionStrategy||(t.ConnectionStrategy={})),function(e){e[e.New=1]=\"New\",e[e.Listening=2]=\"Listening\",e[e.Closed=3]=\"Closed\",e[e.Disposed=4]=\"Disposed\"}(y||(y={})),t.createMessageConnection=function(e,n,i,r){return i||(i=t.NullLogger),R(function(e){return void 0!==e.listen&&void 0===e.read}(e)?e:new s.StreamMessageReader(e),function(e){return void 0!==e.write&&void 0===e.end}(n)?n:new a.StreamMessageWriter(n),i,r)}},function(e,t){e.exports=require(\"path\")},function(e,t,n){\"use strict\";function i(e){return\"string\"==typeof e||e instanceof String}function r(e){return Array.isArray(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.boolean=function(e){return!0===e||!1===e},t.string=i,t.number=function(e){return\"number\"==typeof e||e instanceof Number},t.error=function(e){return e instanceof Error},t.func=function(e){return\"function\"==typeof e},t.array=r,t.stringArray=function(e){return r(e)&&e.every(e=>i(e))}},function(e,t,n){\"use strict\";function i(e){return\"string\"==typeof e||e instanceof String}function r(e){return\"function\"==typeof e}function o(e){return Array.isArray(e)}function s(e){return e&&r(e.then)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.boolean=function(e){return!0===e||!1===e},t.string=i,t.number=function(e){return\"number\"==typeof e||e instanceof Number},t.error=function(e){return e instanceof Error},t.func=r,t.array=o,t.stringArray=function(e){return o(e)&&e.every(e=>i(e))},t.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},t.thenable=s,t.asPromise=function(e){return e instanceof Promise?e:s(e)?new Promise((t,n)=>{e.then(e=>t(e),e=>n(e))}):Promise.resolve(e)}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e.create=function(e){return{dispose:e}}}(t.Disposable||(t.Disposable={})),function(e){const t={dispose(){}};e.None=function(){return t}}(t.Event||(t.Event={}));class i{add(e,t=null,n){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(e),this._contexts.push(t),Array.isArray(n)&&n.push({dispose:()=>this.remove(e,t)})}remove(e,t=null){if(this._callbacks){for(var n=!1,i=0,r=this._callbacks.length;i<r;i++)if(this._callbacks[i]===e){if(this._contexts[i]===t)return this._callbacks.splice(i,1),void this._contexts.splice(i,1);n=!0}if(n)throw new Error(\"When adding a listener with a context, you should remove it with the same context\")}}invoke(...e){if(!this._callbacks)return[];for(var t=[],n=this._callbacks.slice(0),i=this._contexts.slice(0),r=0,o=n.length;r<o;r++)try{t.push(n[r].apply(i[r],e))}catch(e){console.error(e)}return t}isEmpty(){return!this._callbacks||0===this._callbacks.length}dispose(){this._callbacks=void 0,this._contexts=void 0}}class r{constructor(e){this._options=e}get event(){return this._event||(this._event=((e,t,n)=>{let o;return this._callbacks||(this._callbacks=new i),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(e,t),o={dispose:()=>{this._callbacks.remove(e,t),o.dispose=r._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this)}},Array.isArray(n)&&n.push(o),o})),this._event}fire(e){this._callbacks&&this._callbacks.invoke.call(this._callbacks,e)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}}t.Emitter=r,r._noop=function(){}},function(e,t){e.exports=require(\"fs\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(8),r=n(6);let o=8192,s=Buffer.from(\"\\r\",\"ascii\")[0],a=Buffer.from(\"\\n\",\"ascii\")[0],c=\"\\r\\n\";class u{constructor(e=\"utf8\"){this.encoding=e,this.index=0,this.buffer=Buffer.allocUnsafe(o)}append(e){var t=e;if(\"string\"==typeof e){var n=e,i=Buffer.byteLength(n,this.encoding);(t=Buffer.allocUnsafe(i)).write(n,0,i,this.encoding)}if(this.buffer.length-this.index>=t.length)t.copy(this.buffer,this.index,0,t.length);else{var r=(Math.ceil((this.index+t.length)/o)+1)*o;0===this.index?(this.buffer=Buffer.allocUnsafe(r),t.copy(this.buffer,0,0,t.length)):this.buffer=Buffer.concat([this.buffer.slice(0,this.index),t],r)}this.index+=t.length}tryReadHeaders(){let e=void 0,t=0;for(;t+3<this.index&&(this.buffer[t]!==s||this.buffer[t+1]!==a||this.buffer[t+2]!==s||this.buffer[t+3]!==a);)t++;if(t+3>=this.index)return e;e=Object.create(null),this.buffer.toString(\"ascii\",0,t).split(c).forEach(t=>{let n=t.indexOf(\":\");if(-1===n)throw new Error(\"Message header must separate key and value using :\");let i=t.substr(0,n),r=t.substr(n+1).trim();e[i]=r});let n=t+4;return this.buffer=this.buffer.slice(n),this.index=this.index-n,e}tryReadContent(e){if(this.index<e)return null;let t=this.buffer.toString(this.encoding,0,e),n=e;return this.buffer.copy(this.buffer,0,n),this.index=this.index-n,t}get numberOfBytes(){return this.index}}!function(e){e.is=function(e){let t=e;return t&&r.func(t.listen)&&r.func(t.dispose)&&r.func(t.onError)&&r.func(t.onClose)&&r.func(t.onPartialMessage)}}(t.MessageReader||(t.MessageReader={}));class l{constructor(){this.errorEmitter=new i.Emitter,this.closeEmitter=new i.Emitter,this.partialMessageEmitter=new i.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e){this.errorEmitter.fire(this.asError(e))}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}get onPartialMessage(){return this.partialMessageEmitter.event}firePartialMessage(e){this.partialMessageEmitter.fire(e)}asError(e){return e instanceof Error?e:new Error(`Reader received error. Reason: ${r.string(e.message)?e.message:\"unknown\"}`)}}t.AbstractMessageReader=l;class d extends l{constructor(e,t=\"utf8\"){super(),this.readable=e,this.buffer=new u(t),this._partialMessageTimeout=1e4}set partialMessageTimeout(e){this._partialMessageTimeout=e}get partialMessageTimeout(){return this._partialMessageTimeout}listen(e){this.nextMessageLength=-1,this.messageToken=0,this.partialMessageTimer=void 0,this.callback=e,this.readable.on(\"data\",e=>{this.onData(e)}),this.readable.on(\"error\",e=>this.fireError(e)),this.readable.on(\"close\",()=>this.fireClose())}onData(e){for(this.buffer.append(e);;){if(-1===this.nextMessageLength){let e=this.buffer.tryReadHeaders();if(!e)return;let t=e[\"Content-Length\"];if(!t)throw new Error(\"Header must provide a Content-Length property.\");let n=parseInt(t);if(isNaN(n))throw new Error(\"Content-Length value must be a number.\");this.nextMessageLength=n}var t=this.buffer.tryReadContent(this.nextMessageLength);if(null===t)return void this.setPartialMessageTimer();this.clearPartialMessageTimer(),this.nextMessageLength=-1,this.messageToken++;var n=JSON.parse(t);this.callback(n)}}clearPartialMessageTimer(){this.partialMessageTimer&&(clearTimeout(this.partialMessageTimer),this.partialMessageTimer=void 0)}setPartialMessageTimer(){this.clearPartialMessageTimer(),this._partialMessageTimeout<=0||(this.partialMessageTimer=setTimeout((e,t)=>{this.partialMessageTimer=void 0,e===this.messageToken&&(this.firePartialMessage({messageToken:e,waitingTime:t}),this.setPartialMessageTimer())},this._partialMessageTimeout,this.messageToken,this._partialMessageTimeout))}}t.StreamMessageReader=d;t.IPCMessageReader=class extends l{constructor(e){super(),this.process=e;let t=this.process;t.on(\"error\",e=>this.fireError(e)),t.on(\"close\",()=>this.fireClose())}listen(e){this.process.on(\"message\",e)}};t.SocketMessageReader=class extends d{constructor(e,t=\"utf-8\"){super(e,t)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(8),r=n(6);let o=\"Content-Length: \",s=\"\\r\\n\";!function(e){e.is=function(e){let t=e;return t&&r.func(t.dispose)&&r.func(t.onClose)&&r.func(t.onError)&&r.func(t.write)}}(t.MessageWriter||(t.MessageWriter={}));class a{constructor(){this.errorEmitter=new i.Emitter,this.closeEmitter=new i.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e,t,n){this.errorEmitter.fire([this.asError(e),t,n])}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}asError(e){return e instanceof Error?e:new Error(`Writer received error. Reason: ${r.string(e.message)?e.message:\"unknown\"}`)}}t.AbstractMessageWriter=a;t.StreamMessageWriter=class extends a{constructor(e,t=\"utf8\"){super(),this.writable=e,this.encoding=t,this.errorCount=0,this.writable.on(\"error\",e=>this.fireError(e)),this.writable.on(\"close\",()=>this.fireClose())}write(e){let t=JSON.stringify(e),n=Buffer.byteLength(t,this.encoding),i=[o,n.toString(),s,s];try{this.writable.write(i.join(\"\"),\"ascii\"),this.writable.write(t,this.encoding),this.errorCount=0}catch(t){this.errorCount++,this.fireError(t,e,this.errorCount)}}};t.IPCMessageWriter=class extends a{constructor(e){super(),this.process=e,this.errorCount=0,this.queue=[],this.sending=!1;let t=this.process;t.on(\"error\",e=>this.fireError(e)),t.on(\"close\",()=>this.fireClose)}write(e){this.sending||0!==this.queue.length?this.queue.push(e):this.doWriteMessage(e)}doWriteMessage(e){try{this.process.send&&(this.sending=!0,this.process.send(e,void 0,void 0,t=>{this.sending=!1,t?(this.errorCount++,this.fireError(t,e,this.errorCount)):this.errorCount=0,this.queue.length>0&&this.doWriteMessage(this.queue.shift())}))}catch(t){this.errorCount++,this.fireError(t,e,this.errorCount)}}};t.SocketMessageWriter=class extends a{constructor(e,t=\"utf8\"){super(),this.socket=e,this.queue=[],this.sending=!1,this.encoding=t,this.errorCount=0,this.socket.on(\"error\",e=>this.fireError(e)),this.socket.on(\"close\",()=>this.fireClose())}dispose(){super.dispose(),this.socket.destroy()}write(e){this.sending||0!==this.queue.length?this.queue.push(e):this.doWriteMessage(e)}doWriteMessage(e){let t=JSON.stringify(e),n=Buffer.byteLength(t,this.encoding),i=[o,n.toString(),s,s];try{this.sending=!0,this.socket.write(i.join(\"\"),\"ascii\",n=>{n&&this.handleError(n,e);try{this.socket.write(t,this.encoding,t=>{this.sending=!1,t?this.handleError(t,e):this.errorCount=0,this.queue.length>0&&this.doWriteMessage(this.queue.shift())})}catch(n){this.handleError(n,e)}})}catch(t){this.handleError(t,e)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}}},function(e,t){e.exports=require(\"child_process\")},function(e,t){e.exports=require(\"net\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0);t.default=class extends i.CompletionItem{constructor(e){super(e)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0);t.default=class extends i.CodeLens{constructor(e){super(e)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0);t.default=class extends i.DocumentLink{constructor(e,t){super(e,t)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});class i{constructor(e){this._value=e}asHex(){return this._value}equals(e){return this.asHex()===e.asHex()}}class r extends i{constructor(){super([r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),\"-\",r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),\"-\",\"4\",r._randomHex(),r._randomHex(),r._randomHex(),\"-\",r._oneOf(r._timeHighBits),r._randomHex(),r._randomHex(),r._randomHex(),\"-\",r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex()].join(\"\"))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return r._oneOf(r._chars)}}function o(){return new r}r._chars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"],r._timeHighBits=[\"8\",\"9\",\"a\",\"b\"],t.empty=new i(\"00000000-0000-0000-0000-000000000000\"),t.v4=o;const s=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function a(e){return s.test(e)}t.isUUID=a,t.parse=function(e){if(!a(e))throw new Error(\"invalid uuid\");return new i(e)},t.generateUuid=function(){return o().asHex()}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(7);t.ProgressPart=class{constructor(e,t){this._client=e,this._token=t,this._reported=0,this._disposable=this._client.onProgress(r.WorkDoneProgress.type,this._token,e=>{switch(e.kind){case\"begin\":this.begin(e);break;case\"report\":this.report(e);break;case\"end\":this.done()}})}begin(e){let t=e.cancellable?i.ProgressLocation.Notification:i.ProgressLocation.Window;i.window.withProgress({location:t,cancellable:e.cancellable,title:e.title},async(t,n)=>(this._progress=t,this._infinite=void 0===e.percentage,this._cancellationToken=n,this._cancellationToken.onCancellationRequested(()=>{this._client.sendNotification(r.WorkDoneProgressCancelNotification.type,{token:this._token})}),this.report(e),new Promise((e,t)=>{this._resolve=e,this._reject=t})))}report(e){if(this._infinite&&o.string(e.message))this._progress.report({message:e.message});else if(o.number(e.percentage)){let t=Math.max(0,Math.min(e.percentage,100)),n=Math.max(0,t-this._reported);this._progress.report({message:e.message,increment:n}),this._reported+=n}}cancel(){this._disposable&&(this._disposable.dispose(),this._disposable=void 0),this._reject&&(this._reject(),this._resolve=void 0,this._reject=void 0)}done(){this._disposable&&(this._disposable.dispose(),this._disposable=void 0),this._resolve&&(this._resolve(),this._resolve=void 0,this._reject=void 0)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(9),r=n(5),o=n(0),s=n(20),a=n(58),c=n(59),u=a.loadMessageBundle(n(5).join(__dirname,\"cssMain.ts\"));t.activate=function(e){let t=function(e){try{return JSON.parse(i.readFileSync(e).toString())}catch(t){return console.log(`Problems reading ${e}: ${t}`),{}}}(e.asAbsolutePath(\"./server/package.json\")).main,n=e.asAbsolutePath(r.join(\"server\",t)),a={run:{module:n,transport:s.TransportKind.ipc},debug:{module:n,transport:s.TransportKind.ipc,options:{execArgv:[\"--nolazy\",\"--inspect=6044\"]}}},l=[\"css\",\"scss\",\"less\"],d=[...c.getCustomDataPathsInAllWorkspaces(o.workspace.workspaceFolders),...c.getCustomDataPathsFromAllExtensions()],p={documentSelector:l,synchronize:{configurationSection:[\"css\",\"scss\",\"less\"]},initializationOptions:{dataPaths:d},middleware:{provideCompletionItem(e,t,n,i,r){function s(e){const n=e.range;n instanceof o.Range&&n.end.isAfter(t)&&n.start.isBeforeOrEqual(t)&&(e.range={inserting:new o.Range(n.start,t),replacing:n})}function a(e){e.kind===o.CompletionItemKind.Color&&(e.label2={name:e.label,type:e.documentation})}function c(e){return e&&((Array.isArray(e)?e:e.items).forEach(s),(Array.isArray(e)?e:e.items).forEach(a)),e}const u=r(e,t,n,i);return(e=>e&&e.then)(u)?u.then(c):c(u)}}},g=new s.LanguageClient(\"css\",u(0,null),a,p);g.registerProposedFeatures();let h=g.start();e.subscriptions.push(h);let m={increaseIndentPattern:/(^.*\\{[^}]*$)/,decreaseIndentPattern:/^\\s*\\}/};o.languages.setLanguageConfiguration(\"css\",{wordPattern:/(#?-?\\d*\\.\\d\\w*%?)|(::?[\\w-]*(?=[^,{;]*[,{]))|(([@#.!])?[\\w-?]+%?|[@#!.])/g,indentationRules:m}),o.languages.setLanguageConfiguration(\"less\",{wordPattern:/(#?-?\\d*\\.\\d\\w*%?)|(::?[\\w-]+(?=[^,{;]*[,{]))|(([@#.!])?[\\w-?]+%?|[@#!.])/g,indentationRules:m}),o.languages.setLanguageConfiguration(\"scss\",{wordPattern:/(#?-?\\d*\\.\\d\\w*%?)|(::?[\\w-]*(?=[^,{;]*[,{]))|(([@$#.!])?[\\w-?]+%?|[@#!$.])/g,indentationRules:m}),g.onReady().then(()=>{e.subscriptions.push(function(){const e=/^(\\s*)(\\/(\\*\\s*(#\\w*)?)?)?$/;return o.languages.registerCompletionItemProvider(l,{provideCompletionItems(t,n){let i=t.getText(new o.Range(new o.Position(n.line,0),n)),r=i.match(e);if(r){let e=new o.Range(new o.Position(n.line,r[1].length),n),t=new o.CompletionItem(\"#region\",o.CompletionItemKind.Snippet);t.range=e,o.TextEdit.replace(e,\"/* #region */\"),t.insertText=new o.SnippetString(\"/* #region $1*/\"),t.documentation=u(1,null),t.filterText=r[2],t.sortText=\"za\";let i=new o.CompletionItem(\"#endregion\",o.CompletionItemKind.Snippet);return i.range=e,i.insertText=\"/* #endregion */\",i.documentation=u(2,null),i.sortText=\"zb\",i.filterText=r[2],[t,i]}return null}})}())}),o.commands.registerCommand(\"_css.applyCodeAction\",function(e,t,n){let i=o.window.activeTextEditor;i&&i.document.uri.toString()===e&&(i.document.version!==t&&o.window.showInformationMessage(\"CSS fix is outdated and can't be applied to the document.\"),i.edit(e=>{for(let t of n)e.replace(g.protocol2CodeConverter.asRange(t.range),t.newText)}).then(e=>{e||o.window.showErrorMessage(\"Failed to apply CSS fix to the document. Please consider opening an issue with steps to reproduce.\")}))})}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(12),r=n(9),o=n(21),s=n(3),a=n(0),c=n(1),u=n(46),l=n(47),d=n(48),p=n(49),g=n(50),h=n(51),m=n(52),f=n(53),v=n(54),y=n(55),C=n(56),R=n(7),w=n(57);!function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(3));const T=\"^1.42.0\";var S,_,E,P,D,b,x;!function(e){e.is=function(e){return R.string(e.command)}}(S||(S={})),function(e){e[e.stdio=0]=\"stdio\",e[e.ipc=1]=\"ipc\",e[e.pipe=2]=\"pipe\",e[e.socket=3]=\"socket\"}(_=t.TransportKind||(t.TransportKind={})),function(e){e.isSocket=function(e){let t=e;return t&&t.kind===_.socket&&R.number(t.port)}}(E||(E={})),function(e){e.is=function(e){return R.string(e.module)}}(P||(P={})),function(e){e.is=function(e){let t=e;return t&&void 0!==t.writer&&void 0!==t.reader}}(D||(D={})),function(e){e.is=function(e){let t=e;return t&&void 0!==t.process&&\"boolean\"==typeof t.detached}}(b||(b={}));t.LanguageClient=class extends s.BaseLanguageClient{constructor(e,t,n,i,r){let o,s,a,c,u;R.string(t)?(o=e,s=t,a=n,c=i,u=!!r):(o=e.toLowerCase(),s=e,a=t,c=n,u=i),void 0===u&&(u=!1),super(o,s,c),this._serverOptions=a,this._forceDebug=u;try{this.checkVersion()}catch(e){throw R.string(e.message)&&this.outputChannel.appendLine(e.message),e}}checkVersion(){let e=o.parse(a.version);if(!e)throw new Error(`No valid VS Code version detected. Version string is: ${a.version}`);if(e.prerelease&&e.prerelease.length>0&&(e.prerelease=[]),!o.satisfies(e,T))throw new Error(`The language client requires VS Code version ${T} but received version ${a.version}`)}stop(){return super.stop().then(()=>{if(this._serverProcess){let e=this._serverProcess;this._serverProcess=void 0,void 0!==this._isDetached&&this._isDetached||this.checkProcessDied(e),this._isDetached=void 0}})}checkProcessDied(e){e&&setTimeout(()=>{try{process.kill(e.pid,0),w.terminate(e)}catch(e){}},2e3)}handleConnectionClosed(){this._serverProcess=void 0,super.handleConnectionClosed()}createMessageTransports(e){function t(e,t){if(!e&&!t)return;let n=Object.create(null);return Object.keys(process.env).forEach(e=>n[e]=process.env[e]),t&&(n.ELECTRON_RUN_AS_NODE=\"1\",n.ELECTRON_NO_ASAR=\"1\"),e&&Object.keys(e).forEach(t=>n[t]=e[t]),n}const n=[\"--debug=\",\"--debug-brk=\",\"--inspect=\",\"--inspect-brk=\"],r=[\"--debug\",\"--debug-brk\",\"--inspect\",\"--inspect-brk\"];function o(e){if(null===e.stdin||null===e.stdout||null===e.stderr)throw new Error(\"Process created without stdio streams\")}let a,u=this._serverOptions;if(R.func(u))return u().then(t=>{if(s.MessageTransports.is(t))return this._isDetached=!!t.detached,t;if(D.is(t))return this._isDetached=!!t.detached,{reader:new c.StreamMessageReader(t.reader),writer:new c.StreamMessageWriter(t.writer)};{let n;return b.is(t)?(n=t.process,this._isDetached=t.detached):(n=t,this._isDetached=!1),n.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),{reader:new c.StreamMessageReader(n.stdout),writer:new c.StreamMessageWriter(n.stdin)}}});let l=u;return a=l.run||l.debug?this._forceDebug||function(){let e=process.execArgv;return!!e&&e.some(e=>n.some(t=>e.startsWith(t))||r.some(t=>e===t))}()?l.debug:l.run:u,this._getServerWorkingDir(a.options).then(n=>{if(P.is(a)&&a.module){let r=a,s=r.transport||_.stdio;if(!r.runtime){let a=void 0;return new Promise((u,l)=>{let d=r.args&&r.args.slice()||[];s===_.ipc?d.push(\"--node-ipc\"):s===_.stdio?d.push(\"--stdio\"):s===_.pipe?(a=c.generateRandomPipeName(),d.push(`--pipe=${a}`)):E.isSocket(s)&&d.push(`--socket=${s.port}`),d.push(`--clientProcessId=${process.pid.toString()}`);let p=r.options||Object.create(null);if(p.env=t(p.env,!0),p.execArgv=p.execArgv||[],p.cwd=n,p.silent=!0,s===_.ipc||s===_.stdio){let t=i.fork(r.module,d||[],p);o(t),this._serverProcess=t,t.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),s===_.ipc?(t.stdout.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),u({reader:new c.IPCMessageReader(this._serverProcess),writer:new c.IPCMessageWriter(this._serverProcess)})):u({reader:new c.StreamMessageReader(t.stdout),writer:new c.StreamMessageWriter(t.stdin)})}else s===_.pipe?c.createClientPipeTransport(a).then(t=>{let n=i.fork(r.module,d||[],p);o(n),this._serverProcess=n,n.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),n.stdout.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),t.onConnected().then(e=>{u({reader:e[0],writer:e[1]})})}):E.isSocket(s)&&c.createClientSocketTransport(s.port).then(t=>{let n=i.fork(r.module,d||[],p);o(n),this._serverProcess=n,n.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),n.stdout.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),t.onConnected().then(e=>{u({reader:e[0],writer:e[1]})})})})}{let o=[],a=r.options||Object.create(null);a.execArgv&&a.execArgv.forEach(e=>o.push(e)),o.push(r.module),r.args&&r.args.forEach(e=>o.push(e));let u=Object.create(null);u.cwd=n,u.env=t(a.env,!1);let l=void 0;if(s===_.ipc?(u.stdio=[null,null,null,\"ipc\"],o.push(\"--node-ipc\")):s===_.stdio?o.push(\"--stdio\"):s===_.pipe?(l=c.generateRandomPipeName(),o.push(`--pipe=${l}`)):E.isSocket(s)&&o.push(`--socket=${s.port}`),o.push(`--clientProcessId=${process.pid.toString()}`),s===_.ipc||s===_.stdio){let t=i.spawn(r.runtime,o,u);return t&&t.pid?(this._serverProcess=t,t.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),s===_.ipc?(t.stdout.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),Promise.resolve({reader:new c.IPCMessageReader(t),writer:new c.IPCMessageWriter(t)})):Promise.resolve({reader:new c.StreamMessageReader(t.stdout),writer:new c.StreamMessageWriter(t.stdin)})):Promise.reject(`Launching server using runtime ${r.runtime} failed.`)}if(s===_.pipe)return c.createClientPipeTransport(l).then(t=>{let n=i.spawn(r.runtime,o,u);return n&&n.pid?(this._serverProcess=n,n.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),n.stdout.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),t.onConnected().then(e=>({reader:e[0],writer:e[1]}))):Promise.reject(`Launching server using runtime ${r.runtime} failed.`)});if(E.isSocket(s))return c.createClientSocketTransport(s.port).then(t=>{let n=i.spawn(r.runtime,o,u);return n&&n.pid?(this._serverProcess=n,n.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),n.stdout.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),t.onConnected().then(e=>({reader:e[0],writer:e[1]}))):Promise.reject(`Launching server using runtime ${r.runtime} failed.`)})}}else if(S.is(a)&&a.command){let t=a,r=t.args||[],o=Object.assign({},t.options);o.cwd=o.cwd||n;let s=i.spawn(t.command,r,o);return s&&s.pid?(s.stderr.on(\"data\",t=>this.outputChannel.append(R.string(t)?t:t.toString(e))),this._serverProcess=s,this._isDetached=!!o.detached,Promise.resolve({reader:new c.StreamMessageReader(s.stdout),writer:new c.StreamMessageWriter(s.stdin)})):Promise.reject(`Launching server using command ${t.command} failed.`)}return Promise.reject(new Error(\"Unsupported server configuration \"+JSON.stringify(u,null,4)))})}registerProposedFeatures(){this.registerFeatures(x.createAll(this))}registerBuiltinFeatures(){super.registerBuiltinFeatures(),this.registerFeature(new l.ConfigurationFeature(this)),this.registerFeature(new p.TypeDefinitionFeature(this)),this.registerFeature(new d.ImplementationFeature(this)),this.registerFeature(new u.ColorProviderFeature(this)),this.registerFeature(new g.WorkspaceFoldersFeature(this)),this.registerFeature(new h.FoldingRangeFeature(this)),this.registerFeature(new m.DeclarationFeature(this)),this.registerFeature(new f.SelectionRangeFeature(this)),this.registerFeature(new v.ProgressFeature(this))}_mainGetRootPath(){let e=a.workspace.workspaceFolders;if(!e||0===e.length)return;let t=e[0];return\"file\"===t.uri.scheme?t.uri.fsPath:void 0}_getServerWorkingDir(e){let t=e&&e.cwd;return t||(t=this.clientOptions.workspaceFolder?this.clientOptions.workspaceFolder.uri.fsPath:this._mainGetRootPath()),t?new Promise(e=>{r.lstat(t,(n,i)=>{e(!n&&i.isDirectory()?t:void 0)})}):Promise.resolve(void 0)}};t.SettingMonitor=class{constructor(e,t){this._client=e,this._setting=t,this._listeners=[]}start(){return a.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration,this,this._listeners),this.onDidChangeConfiguration(),new a.Disposable(()=>{this._client.needsStop()&&this._client.stop()})}onDidChangeConfiguration(){let e=this._setting.indexOf(\".\"),t=e>=0?this._setting.substr(0,e):this._setting,n=e>=0?this._setting.substr(e+1):void 0,i=n?a.workspace.getConfiguration(t).get(n,!1):a.workspace.getConfiguration(t);i&&this._client.needsStart()?this._client.start():!i&&this._client.needsStop()&&this._client.stop()}},function(e){e.createAll=function(e){return[new y.CallHierarchyFeature(e),new C.SemanticTokensFeature(e)]}}(x=t.ProposedFeatures||(t.ProposedFeatures={}))},function(e,t){var n;t=e.exports=p,n=\"object\"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},t.SEMVER_SPEC_VERSION=\"2.0.0\";var i=256,r=Number.MAX_SAFE_INTEGER||9007199254740991,o=t.re=[],s=t.src=[],a=t.tokens={},c=0;function u(e){a[e]=c++}u(\"NUMERICIDENTIFIER\"),s[a.NUMERICIDENTIFIER]=\"0|[1-9]\\\\d*\",u(\"NUMERICIDENTIFIERLOOSE\"),s[a.NUMERICIDENTIFIERLOOSE]=\"[0-9]+\",u(\"NONNUMERICIDENTIFIER\"),s[a.NONNUMERICIDENTIFIER]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\",u(\"MAINVERSION\"),s[a.MAINVERSION]=\"(\"+s[a.NUMERICIDENTIFIER]+\")\\\\.(\"+s[a.NUMERICIDENTIFIER]+\")\\\\.(\"+s[a.NUMERICIDENTIFIER]+\")\",u(\"MAINVERSIONLOOSE\"),s[a.MAINVERSIONLOOSE]=\"(\"+s[a.NUMERICIDENTIFIERLOOSE]+\")\\\\.(\"+s[a.NUMERICIDENTIFIERLOOSE]+\")\\\\.(\"+s[a.NUMERICIDENTIFIERLOOSE]+\")\",u(\"PRERELEASEIDENTIFIER\"),s[a.PRERELEASEIDENTIFIER]=\"(?:\"+s[a.NUMERICIDENTIFIER]+\"|\"+s[a.NONNUMERICIDENTIFIER]+\")\",u(\"PRERELEASEIDENTIFIERLOOSE\"),s[a.PRERELEASEIDENTIFIERLOOSE]=\"(?:\"+s[a.NUMERICIDENTIFIERLOOSE]+\"|\"+s[a.NONNUMERICIDENTIFIER]+\")\",u(\"PRERELEASE\"),s[a.PRERELEASE]=\"(?:-(\"+s[a.PRERELEASEIDENTIFIER]+\"(?:\\\\.\"+s[a.PRERELEASEIDENTIFIER]+\")*))\",u(\"PRERELEASELOOSE\"),s[a.PRERELEASELOOSE]=\"(?:-?(\"+s[a.PRERELEASEIDENTIFIERLOOSE]+\"(?:\\\\.\"+s[a.PRERELEASEIDENTIFIERLOOSE]+\")*))\",u(\"BUILDIDENTIFIER\"),s[a.BUILDIDENTIFIER]=\"[0-9A-Za-z-]+\",u(\"BUILD\"),s[a.BUILD]=\"(?:\\\\+(\"+s[a.BUILDIDENTIFIER]+\"(?:\\\\.\"+s[a.BUILDIDENTIFIER]+\")*))\",u(\"FULL\"),u(\"FULLPLAIN\"),s[a.FULLPLAIN]=\"v?\"+s[a.MAINVERSION]+s[a.PRERELEASE]+\"?\"+s[a.BUILD]+\"?\",s[a.FULL]=\"^\"+s[a.FULLPLAIN]+\"$\",u(\"LOOSEPLAIN\"),s[a.LOOSEPLAIN]=\"[v=\\\\s]*\"+s[a.MAINVERSIONLOOSE]+s[a.PRERELEASELOOSE]+\"?\"+s[a.BUILD]+\"?\",u(\"LOOSE\"),s[a.LOOSE]=\"^\"+s[a.LOOSEPLAIN]+\"$\",u(\"GTLT\"),s[a.GTLT]=\"((?:<|>)?=?)\",u(\"XRANGEIDENTIFIERLOOSE\"),s[a.XRANGEIDENTIFIERLOOSE]=s[a.NUMERICIDENTIFIERLOOSE]+\"|x|X|\\\\*\",u(\"XRANGEIDENTIFIER\"),s[a.XRANGEIDENTIFIER]=s[a.NUMERICIDENTIFIER]+\"|x|X|\\\\*\",u(\"XRANGEPLAIN\"),s[a.XRANGEPLAIN]=\"[v=\\\\s]*(\"+s[a.XRANGEIDENTIFIER]+\")(?:\\\\.(\"+s[a.XRANGEIDENTIFIER]+\")(?:\\\\.(\"+s[a.XRANGEIDENTIFIER]+\")(?:\"+s[a.PRERELEASE]+\")?\"+s[a.BUILD]+\"?)?)?\",u(\"XRANGEPLAINLOOSE\"),s[a.XRANGEPLAINLOOSE]=\"[v=\\\\s]*(\"+s[a.XRANGEIDENTIFIERLOOSE]+\")(?:\\\\.(\"+s[a.XRANGEIDENTIFIERLOOSE]+\")(?:\\\\.(\"+s[a.XRANGEIDENTIFIERLOOSE]+\")(?:\"+s[a.PRERELEASELOOSE]+\")?\"+s[a.BUILD]+\"?)?)?\",u(\"XRANGE\"),s[a.XRANGE]=\"^\"+s[a.GTLT]+\"\\\\s*\"+s[a.XRANGEPLAIN]+\"$\",u(\"XRANGELOOSE\"),s[a.XRANGELOOSE]=\"^\"+s[a.GTLT]+\"\\\\s*\"+s[a.XRANGEPLAINLOOSE]+\"$\",u(\"COERCE\"),s[a.COERCE]=\"(^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\",u(\"COERCERTL\"),o[a.COERCERTL]=new RegExp(s[a.COERCE],\"g\"),u(\"LONETILDE\"),s[a.LONETILDE]=\"(?:~>?)\",u(\"TILDETRIM\"),s[a.TILDETRIM]=\"(\\\\s*)\"+s[a.LONETILDE]+\"\\\\s+\",o[a.TILDETRIM]=new RegExp(s[a.TILDETRIM],\"g\");u(\"TILDE\"),s[a.TILDE]=\"^\"+s[a.LONETILDE]+s[a.XRANGEPLAIN]+\"$\",u(\"TILDELOOSE\"),s[a.TILDELOOSE]=\"^\"+s[a.LONETILDE]+s[a.XRANGEPLAINLOOSE]+\"$\",u(\"LONECARET\"),s[a.LONECARET]=\"(?:\\\\^)\",u(\"CARETTRIM\"),s[a.CARETTRIM]=\"(\\\\s*)\"+s[a.LONECARET]+\"\\\\s+\",o[a.CARETTRIM]=new RegExp(s[a.CARETTRIM],\"g\");u(\"CARET\"),s[a.CARET]=\"^\"+s[a.LONECARET]+s[a.XRANGEPLAIN]+\"$\",u(\"CARETLOOSE\"),s[a.CARETLOOSE]=\"^\"+s[a.LONECARET]+s[a.XRANGEPLAINLOOSE]+\"$\",u(\"COMPARATORLOOSE\"),s[a.COMPARATORLOOSE]=\"^\"+s[a.GTLT]+\"\\\\s*(\"+s[a.LOOSEPLAIN]+\")$|^$\",u(\"COMPARATOR\"),s[a.COMPARATOR]=\"^\"+s[a.GTLT]+\"\\\\s*(\"+s[a.FULLPLAIN]+\")$|^$\",u(\"COMPARATORTRIM\"),s[a.COMPARATORTRIM]=\"(\\\\s*)\"+s[a.GTLT]+\"\\\\s*(\"+s[a.LOOSEPLAIN]+\"|\"+s[a.XRANGEPLAIN]+\")\",o[a.COMPARATORTRIM]=new RegExp(s[a.COMPARATORTRIM],\"g\");u(\"HYPHENRANGE\"),s[a.HYPHENRANGE]=\"^\\\\s*(\"+s[a.XRANGEPLAIN]+\")\\\\s+-\\\\s+(\"+s[a.XRANGEPLAIN]+\")\\\\s*$\",u(\"HYPHENRANGELOOSE\"),s[a.HYPHENRANGELOOSE]=\"^\\\\s*(\"+s[a.XRANGEPLAINLOOSE]+\")\\\\s+-\\\\s+(\"+s[a.XRANGEPLAINLOOSE]+\")\\\\s*$\",u(\"STAR\"),s[a.STAR]=\"(<|>)?=?\\\\s*\\\\*\";for(var l=0;l<c;l++)n(l,s[l]),o[l]||(o[l]=new RegExp(s[l]));function d(e,t){if(t&&\"object\"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof p)return e;if(\"string\"!=typeof e)return null;if(e.length>i)return null;if(!(t.loose?o[a.LOOSE]:o[a.FULL]).test(e))return null;try{return new p(e,t)}catch(e){return null}}function p(e,t){if(t&&\"object\"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof p){if(e.loose===t.loose)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>i)throw new TypeError(\"version is longer than \"+i+\" characters\");if(!(this instanceof p))return new p(e,t);n(\"SemVer\",e,t),this.options=t,this.loose=!!t.loose;var s=e.trim().match(t.loose?o[a.LOOSE]:o[a.FULL]);if(!s)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+s[1],this.minor=+s[2],this.patch=+s[3],this.major>r||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>r||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>r||this.patch<0)throw new TypeError(\"Invalid patch version\");s[4]?this.prerelease=s[4].split(\".\").map(function(e){if(/^[0-9]+$/.test(e)){var t=+e;if(t>=0&&t<r)return t}return e}):this.prerelease=[],this.build=s[5]?s[5].split(\".\"):[],this.format()}t.parse=d,t.valid=function(e,t){var n=d(e,t);return n?n.version:null},t.clean=function(e,t){var n=d(e.trim().replace(/^[=v]+/,\"\"),t);return n?n.version:null},t.SemVer=p,p.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},p.prototype.toString=function(){return this.version},p.prototype.compare=function(e){return n(\"SemVer.compare\",this.version,this.options,e),e instanceof p||(e=new p(e,this.options)),this.compareMain(e)||this.comparePre(e)},p.prototype.compareMain=function(e){return e instanceof p||(e=new p(e,this.options)),h(this.major,e.major)||h(this.minor,e.minor)||h(this.patch,e.patch)},p.prototype.comparePre=function(e){if(e instanceof p||(e=new p(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var t=0;do{var i=this.prerelease[t],r=e.prerelease[t];if(n(\"prerelease compare\",t,i,r),void 0===i&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===i)return-1;if(i!==r)return h(i,r)}while(++t)},p.prototype.compareBuild=function(e){e instanceof p||(e=new p(e,this.options));var t=0;do{var i=this.build[t],r=e.build[t];if(n(\"prerelease compare\",t,i,r),void 0===i&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===i)return-1;if(i!==r)return h(i,r)}while(++t)},p.prototype.inc=function(e,t){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",t);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",t);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",t),this.inc(\"pre\",t);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",t),this.inc(\"pre\",t);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var n=this.prerelease.length;--n>=0;)\"number\"==typeof this.prerelease[n]&&(this.prerelease[n]++,n=-2);-1===n&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},t.inc=function(e,t,n,i){\"string\"==typeof n&&(i=n,n=void 0);try{return new p(e,n).inc(t,i).version}catch(e){return null}},t.diff=function(e,t){if(y(e,t))return null;var n=d(e),i=d(t),r=\"\";if(n.prerelease.length||i.prerelease.length){r=\"pre\";var o=\"prerelease\"}for(var s in n)if((\"major\"===s||\"minor\"===s||\"patch\"===s)&&n[s]!==i[s])return r+s;return o},t.compareIdentifiers=h;var g=/^[0-9]+$/;function h(e,t){var n=g.test(e),i=g.test(t);return n&&i&&(e=+e,t=+t),e===t?0:n&&!i?-1:i&&!n?1:e<t?-1:1}function m(e,t,n){return new p(e,n).compare(new p(t,n))}function f(e,t,n){return m(e,t,n)>0}function v(e,t,n){return m(e,t,n)<0}function y(e,t,n){return 0===m(e,t,n)}function C(e,t,n){return 0!==m(e,t,n)}function R(e,t,n){return m(e,t,n)>=0}function w(e,t,n){return m(e,t,n)<=0}function T(e,t,n,i){switch(t){case\"===\":return\"object\"==typeof e&&(e=e.version),\"object\"==typeof n&&(n=n.version),e===n;case\"!==\":return\"object\"==typeof e&&(e=e.version),\"object\"==typeof n&&(n=n.version),e!==n;case\"\":case\"=\":case\"==\":return y(e,n,i);case\"!=\":return C(e,n,i);case\">\":return f(e,n,i);case\">=\":return R(e,n,i);case\"<\":return v(e,n,i);case\"<=\":return w(e,n,i);default:throw new TypeError(\"Invalid operator: \"+t)}}function S(e,t){if(t&&\"object\"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof S){if(e.loose===!!t.loose)return e;e=e.value}if(!(this instanceof S))return new S(e,t);n(\"comparator\",e,t),this.options=t,this.loose=!!t.loose,this.parse(e),this.semver===_?this.value=\"\":this.value=this.operator+this.semver.version,n(\"comp\",this)}t.rcompareIdentifiers=function(e,t){return h(t,e)},t.major=function(e,t){return new p(e,t).major},t.minor=function(e,t){return new p(e,t).minor},t.patch=function(e,t){return new p(e,t).patch},t.compare=m,t.compareLoose=function(e,t){return m(e,t,!0)},t.compareBuild=function(e,t,n){var i=new p(e,n),r=new p(t,n);return i.compare(r)||i.compareBuild(r)},t.rcompare=function(e,t,n){return m(t,e,n)},t.sort=function(e,n){return e.sort(function(e,i){return t.compareBuild(e,i,n)})},t.rsort=function(e,n){return e.sort(function(e,i){return t.compareBuild(i,e,n)})},t.gt=f,t.lt=v,t.eq=y,t.neq=C,t.gte=R,t.lte=w,t.cmp=T,t.Comparator=S;var _={};function E(e,t){if(t&&\"object\"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof E)return e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease?e:new E(e.raw,t);if(e instanceof S)return new E(e.value,t);if(!(this instanceof E))return new E(e,t);if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length}),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function P(e,t){for(var n=!0,i=e.slice(),r=i.pop();n&&i.length;)n=i.every(function(e){return r.intersects(e,t)}),r=i.pop();return n}function D(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function b(e,t,n,i,r,o,s,a,c,u,l,d,p){return((t=D(n)?\"\":D(i)?\">=\"+n+\".0.0\":D(r)?\">=\"+n+\".\"+i+\".0\":\">=\"+t)+\" \"+(a=D(c)?\"\":D(u)?\"<\"+(+c+1)+\".0.0\":D(l)?\"<\"+c+\".\"+(+u+1)+\".0\":d?\"<=\"+c+\".\"+u+\".\"+l+\"-\"+d:\"<=\"+a)).trim()}function x(e,t,i){for(var r=0;r<e.length;r++)if(!e[r].test(t))return!1;if(t.prerelease.length&&!i.includePrerelease){for(r=0;r<e.length;r++)if(n(e[r].semver),e[r].semver!==_&&e[r].semver.prerelease.length>0){var o=e[r].semver;if(o.major===t.major&&o.minor===t.minor&&o.patch===t.patch)return!0}return!1}return!0}function k(e,t,n){try{t=new E(t,n)}catch(e){return!1}return t.test(e)}function O(e,t,n,i){var r,o,s,a,c;switch(e=new p(e,i),t=new E(t,i),n){case\">\":r=f,o=w,s=v,a=\">\",c=\">=\";break;case\"<\":r=v,o=R,s=f,a=\"<\",c=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(k(e,t,i))return!1;for(var u=0;u<t.set.length;++u){var l=null,d=null;if(t.set[u].forEach(function(e){e.semver===_&&(e=new S(\">=0.0.0\")),l=l||e,d=d||e,r(e.semver,l.semver,i)?l=e:s(e.semver,d.semver,i)&&(d=e)}),l.operator===a||l.operator===c)return!1;if((!d.operator||d.operator===a)&&o(e,d.semver))return!1;if(d.operator===c&&s(e,d.semver))return!1}return!0}S.prototype.parse=function(e){var t=this.options.loose?o[a.COMPARATORLOOSE]:o[a.COMPARATOR],n=e.match(t);if(!n)throw new TypeError(\"Invalid comparator: \"+e);this.operator=void 0!==n[1]?n[1]:\"\",\"=\"===this.operator&&(this.operator=\"\"),n[2]?this.semver=new p(n[2],this.options.loose):this.semver=_},S.prototype.toString=function(){return this.value},S.prototype.test=function(e){if(n(\"Comparator.test\",e,this.options.loose),this.semver===_||e===_)return!0;if(\"string\"==typeof e)try{e=new p(e,this.options)}catch(e){return!1}return T(e,this.operator,this.semver,this.options)},S.prototype.intersects=function(e,t){if(!(e instanceof S))throw new TypeError(\"a Comparator is required\");var n;if(t&&\"object\"==typeof t||(t={loose:!!t,includePrerelease:!1}),\"\"===this.operator)return\"\"===this.value||(n=new E(e.value,t),k(this.value,n,t));if(\"\"===e.operator)return\"\"===e.value||(n=new E(this.value,t),k(e.semver,n,t));var i=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),r=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),o=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=T(this.semver,\"<\",e.semver,t)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),c=T(this.semver,\">\",e.semver,t)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return i||r||o&&s||a||c},t.Range=E,E.prototype.format=function(){return this.range=this.set.map(function(e){return e.join(\" \").trim()}).join(\"||\").trim(),this.range},E.prototype.toString=function(){return this.range},E.prototype.parseRange=function(e){var t=this.options.loose;e=e.trim();var i=t?o[a.HYPHENRANGELOOSE]:o[a.HYPHENRANGE];e=e.replace(i,b),n(\"hyphen replace\",e),e=e.replace(o[a.COMPARATORTRIM],\"$1$2$3\"),n(\"comparator trim\",e,o[a.COMPARATORTRIM]),e=(e=(e=e.replace(o[a.TILDETRIM],\"$1~\")).replace(o[a.CARETTRIM],\"$1^\")).split(/\\s+/).join(\" \");var r=t?o[a.COMPARATORLOOSE]:o[a.COMPARATOR],s=e.split(\" \").map(function(e){return function(e,t){return n(\"comp\",e,t),e=function(e,t){return e.trim().split(/\\s+/).map(function(e){return function(e,t){n(\"caret\",e,t);var i=t.loose?o[a.CARETLOOSE]:o[a.CARET];return e.replace(i,function(t,i,r,o,s){var a;return n(\"caret\",e,t,i,r,o,s),D(i)?a=\"\":D(r)?a=\">=\"+i+\".0.0 <\"+(+i+1)+\".0.0\":D(o)?a=\"0\"===i?\">=\"+i+\".\"+r+\".0 <\"+i+\".\"+(+r+1)+\".0\":\">=\"+i+\".\"+r+\".0 <\"+(+i+1)+\".0.0\":s?(n(\"replaceCaret pr\",s),a=\"0\"===i?\"0\"===r?\">=\"+i+\".\"+r+\".\"+o+\"-\"+s+\" <\"+i+\".\"+r+\".\"+(+o+1):\">=\"+i+\".\"+r+\".\"+o+\"-\"+s+\" <\"+i+\".\"+(+r+1)+\".0\":\">=\"+i+\".\"+r+\".\"+o+\"-\"+s+\" <\"+(+i+1)+\".0.0\"):(n(\"no pr\"),a=\"0\"===i?\"0\"===r?\">=\"+i+\".\"+r+\".\"+o+\" <\"+i+\".\"+r+\".\"+(+o+1):\">=\"+i+\".\"+r+\".\"+o+\" <\"+i+\".\"+(+r+1)+\".0\":\">=\"+i+\".\"+r+\".\"+o+\" <\"+(+i+1)+\".0.0\"),n(\"caret return\",a),a})}(e,t)}).join(\" \")}(e,t),n(\"caret\",e),e=function(e,t){return e.trim().split(/\\s+/).map(function(e){return function(e,t){var i=t.loose?o[a.TILDELOOSE]:o[a.TILDE];return e.replace(i,function(t,i,r,o,s){var a;return n(\"tilde\",e,t,i,r,o,s),D(i)?a=\"\":D(r)?a=\">=\"+i+\".0.0 <\"+(+i+1)+\".0.0\":D(o)?a=\">=\"+i+\".\"+r+\".0 <\"+i+\".\"+(+r+1)+\".0\":s?(n(\"replaceTilde pr\",s),a=\">=\"+i+\".\"+r+\".\"+o+\"-\"+s+\" <\"+i+\".\"+(+r+1)+\".0\"):a=\">=\"+i+\".\"+r+\".\"+o+\" <\"+i+\".\"+(+r+1)+\".0\",n(\"tilde return\",a),a})}(e,t)}).join(\" \")}(e,t),n(\"tildes\",e),e=function(e,t){return n(\"replaceXRanges\",e,t),e.split(/\\s+/).map(function(e){return function(e,t){e=e.trim();var i=t.loose?o[a.XRANGELOOSE]:o[a.XRANGE];return e.replace(i,function(i,r,o,s,a,c){n(\"xRange\",e,i,r,o,s,a,c);var u=D(o),l=u||D(s),d=l||D(a),p=d;return\"=\"===r&&p&&(r=\"\"),c=t.includePrerelease?\"-0\":\"\",u?i=\">\"===r||\"<\"===r?\"<0.0.0-0\":\"*\":r&&p?(l&&(s=0),a=0,\">\"===r?(r=\">=\",l?(o=+o+1,s=0,a=0):(s=+s+1,a=0)):\"<=\"===r&&(r=\"<\",l?o=+o+1:s=+s+1),i=r+o+\".\"+s+\".\"+a+c):l?i=\">=\"+o+\".0.0\"+c+\" <\"+(+o+1)+\".0.0\"+c:d&&(i=\">=\"+o+\".\"+s+\".0\"+c+\" <\"+o+\".\"+(+s+1)+\".0\"+c),n(\"xRange return\",i),i})}(e,t)}).join(\" \")}(e,t),n(\"xrange\",e),e=function(e,t){return n(\"replaceStars\",e,t),e.trim().replace(o[a.STAR],\"\")}(e,t),n(\"stars\",e),e}(e,this.options)},this).join(\" \").split(/\\s+/);return this.options.loose&&(s=s.filter(function(e){return!!e.match(r)})),s=s.map(function(e){return new S(e,this.options)},this)},E.prototype.intersects=function(e,t){if(!(e instanceof E))throw new TypeError(\"a Range is required\");return this.set.some(function(n){return P(n,t)&&e.set.some(function(e){return P(e,t)&&n.every(function(n){return e.every(function(e){return n.intersects(e,t)})})})})},t.toComparators=function(e,t){return new E(e,t).set.map(function(e){return e.map(function(e){return e.value}).join(\" \").trim().split(\" \")})},E.prototype.test=function(e){if(!e)return!1;if(\"string\"==typeof e)try{e=new p(e,this.options)}catch(e){return!1}for(var t=0;t<this.set.length;t++)if(x(this.set[t],e,this.options))return!0;return!1},t.satisfies=k,t.maxSatisfying=function(e,t,n){var i=null,r=null;try{var o=new E(t,n)}catch(e){return null}return e.forEach(function(e){o.test(e)&&(i&&-1!==r.compare(e)||(r=new p(i=e,n)))}),i},t.minSatisfying=function(e,t,n){var i=null,r=null;try{var o=new E(t,n)}catch(e){return null}return e.forEach(function(e){o.test(e)&&(i&&1!==r.compare(e)||(r=new p(i=e,n)))}),i},t.minVersion=function(e,t){e=new E(e,t);var n=new p(\"0.0.0\");if(e.test(n))return n;if(n=new p(\"0.0.0-0\"),e.test(n))return n;n=null;for(var i=0;i<e.set.length;++i){var r=e.set[i];r.forEach(function(e){var t=new p(e.semver.version);switch(e.operator){case\">\":0===t.prerelease.length?t.patch++:t.prerelease.push(0),t.raw=t.format();case\"\":case\">=\":n&&!f(n,t)||(n=t);break;case\"<\":case\"<=\":break;default:throw new Error(\"Unexpected operation: \"+e.operator)}})}if(n&&e.test(n))return n;return null},t.validRange=function(e,t){try{return new E(e,t).range||\"*\"}catch(e){return null}},t.ltr=function(e,t,n){return O(e,t,\"<\",n)},t.gtr=function(e,t,n){return O(e,t,\">\",n)},t.outside=O,t.prerelease=function(e,t){var n=d(e,t);return n&&n.prerelease.length?n.prerelease:null},t.intersects=function(e,t,n){return e=new E(e,n),t=new E(t,n),e.intersects(t)},t.coerce=function(e,t){if(e instanceof p)return e;\"number\"==typeof e&&(e=String(e));if(\"string\"!=typeof e)return null;var n=null;if((t=t||{}).rtl){for(var i;(i=o[a.COERCERTL].exec(e))&&(!n||n.index+n[0].length!==e.length);)n&&i.index+i[0].length===n.index+n[0].length||(n=i),o[a.COERCERTL].lastIndex=i.index+i[1].length+i[2].length;o[a.COERCERTL].lastIndex=-1}else n=e.match(o[a.COERCE]);if(null===n)return null;return d(n[2]+\".\"+(n[3]||\"0\")+\".\"+(n[4]||\"0\"),t)}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(6);var r;!function(e){e.ParseError=-32700,e.InvalidRequest=-32600,e.MethodNotFound=-32601,e.InvalidParams=-32602,e.InternalError=-32603,e.serverErrorStart=-32099,e.serverErrorEnd=-32e3,e.ServerNotInitialized=-32002,e.UnknownErrorCode=-32001,e.RequestCancelled=-32800,e.ContentModified=-32801,e.MessageWriteError=1,e.MessageReadError=2}(r=t.ErrorCodes||(t.ErrorCodes={}));class o extends Error{constructor(e,t,n){super(t),this.code=i.number(e)?e:r.UnknownErrorCode,this.data=n,Object.setPrototypeOf(this,o.prototype)}toJson(){return{code:this.code,message:this.message,data:this.data}}}t.ResponseError=o;class s{constructor(e,t){this._method=e,this._numberOfParams=t}get method(){return this._method}get numberOfParams(){return this._numberOfParams}}t.AbstractMessageType=s;t.RequestType0=class extends s{constructor(e){super(e,0)}};t.RequestType=class extends s{constructor(e){super(e,1)}};t.RequestType1=class extends s{constructor(e){super(e,1)}};t.RequestType2=class extends s{constructor(e){super(e,2)}};t.RequestType3=class extends s{constructor(e){super(e,3)}};t.RequestType4=class extends s{constructor(e){super(e,4)}};t.RequestType5=class extends s{constructor(e){super(e,5)}};t.RequestType6=class extends s{constructor(e){super(e,6)}};t.RequestType7=class extends s{constructor(e){super(e,7)}};t.RequestType8=class extends s{constructor(e){super(e,8)}};t.RequestType9=class extends s{constructor(e){super(e,9)}};t.NotificationType=class extends s{constructor(e){super(e,1),this._=void 0}};t.NotificationType0=class extends s{constructor(e){super(e,0)}};t.NotificationType1=class extends s{constructor(e){super(e,1)}};t.NotificationType2=class extends s{constructor(e){super(e,2)}};t.NotificationType3=class extends s{constructor(e){super(e,3)}};t.NotificationType4=class extends s{constructor(e){super(e,4)}};t.NotificationType5=class extends s{constructor(e){super(e,5)}};t.NotificationType6=class extends s{constructor(e){super(e,6)}};t.NotificationType7=class extends s{constructor(e){super(e,7)}};t.NotificationType8=class extends s{constructor(e){super(e,8)}};t.NotificationType9=class extends s{constructor(e){super(e,9)}},t.isRequestMessage=function(e){let t=e;return t&&i.string(t.method)&&(i.string(t.id)||i.number(t.id))},t.isNotificationMessage=function(e){let t=e;return t&&i.string(t.method)&&void 0===e.id},t.isResponseMessage=function(e){let t=e;return t&&(void 0!==t.result||!!t.error)&&(i.string(t.id)||i.number(t.id)||null===t.id)}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(8),r=n(6);var o;!function(e){e.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:i.Event.None}),e.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:i.Event.None}),e.is=function(t){let n=t;return n&&(n===e.None||n===e.Cancelled||r.boolean(n.isCancellationRequested)&&!!n.onCancellationRequested)}}(o=t.CancellationToken||(t.CancellationToken={}));const s=Object.freeze(function(e,t){let n=setTimeout(e.bind(t),0);return{dispose(){clearTimeout(n)}}});class a{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?s:(this._emitter||(this._emitter=new i.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}}t.CancellationTokenSource=class{get token(){return this._token||(this._token=new a),this._token}cancel(){this._token?this._token.cancel():this._token=o.Cancelled}dispose(){this._token?this._token instanceof a&&this._token.dispose():this._token=o.None}}},function(e,t,n){\"use strict\";var i;Object.defineProperty(t,\"__esModule\",{value:!0}),function(e){e.None=0,e.First=1,e.Last=2}(i=t.Touch||(t.Touch={}));t.LinkedMap=class{constructor(){this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}has(e){return this._map.has(e)}get(e){const t=this._map.get(e);if(t)return t.value}set(e,t,n=i.None){let r=this._map.get(e);if(r)r.value=t,n!==i.None&&this.touch(r,n);else{switch(r={key:e,value:t,next:void 0,previous:void 0},n){case i.None:this.addItemLast(r);break;case i.First:this.addItemFirst(r);break;case i.Last:default:this.addItemLast(r)}this._map.set(e,r),this._size++}}delete(e){const t=this._map.get(e);return!!t&&(this._map.delete(e),this.removeItem(t),this._size--,!0)}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error(\"Invalid list\");const e=this._head;return this._map.delete(e.key),this.removeItem(e),this._size--,e.value}forEach(e,t){let n=this._head;for(;n;)t?e.bind(t)(n.value,n.key,this):e(n.value,n.key,this),n=n.next}forEachReverse(e,t){let n=this._tail;for(;n;)t?e.bind(t)(n.value,n.key,this):e(n.value,n.key,this),n=n.previous}values(){let e=[],t=this._head;for(;t;)e.push(t.value),t=t.next;return e}keys(){let e=[],t=this._head;for(;t;)e.push(t.key),t=t.next;return e}addItemFirst(e){if(this._head||this._tail){if(!this._head)throw new Error(\"Invalid list\");e.next=this._head,this._head.previous=e}else this._tail=e;this._head=e}addItemLast(e){if(this._head||this._tail){if(!this._tail)throw new Error(\"Invalid list\");e.previous=this._tail,this._tail.next=e}else this._head=e;this._tail=e}removeItem(e){if(e===this._head&&e===this._tail)this._head=void 0,this._tail=void 0;else if(e===this._head)this._head=e.next;else if(e===this._tail)this._tail=e.previous;else{const t=e.next,n=e.previous;if(!t||!n)throw new Error(\"Invalid list\");t.previous=n,n.next=t}}touch(e,t){if(!this._head||!this._tail)throw new Error(\"Invalid list\");if(t===i.First||t===i.Last)if(t===i.First){if(e===this._head)return;const t=e.next,n=e.previous;e===this._tail?(n.next=void 0,this._tail=n):(t.previous=n,n.next=t),e.previous=void 0,e.next=this._head,this._head.previous=e,this._head=e}else if(t===i.Last){if(e===this._tail)return;const t=e.next,n=e.previous;e===this._head?(t.previous=void 0,this._head=t):(t.previous=n,n.next=t),e.next=void 0,e.previous=this._tail,this._tail.next=e,this._tail=e}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(5),r=n(26),o=n(27),s=n(13),a=n(10),c=n(11);t.generateRandomPipeName=function(){const e=o.randomBytes(21).toString(\"hex\");return\"win32\"===process.platform?`\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${e}-sock`:i.join(r.tmpdir(),`vscode-${e}.sock`)},t.createClientPipeTransport=function(e,t=\"utf-8\"){let n,i=new Promise((e,t)=>{n=e});return new Promise((r,o)=>{let u=s.createServer(e=>{u.close(),n([new a.SocketMessageReader(e,t),new c.SocketMessageWriter(e,t)])});u.on(\"error\",o),u.listen(e,()=>{u.removeListener(\"error\",o),r({onConnected:()=>i})})})},t.createServerPipeTransport=function(e,t=\"utf-8\"){const n=s.createConnection(e);return[new a.SocketMessageReader(n,t),new c.SocketMessageWriter(n,t)]}},function(e,t){e.exports=require(\"os\")},function(e,t){e.exports=require(\"crypto\")},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(13),r=n(10),o=n(11);t.createClientSocketTransport=function(e,t=\"utf-8\"){let n,s=new Promise((e,t)=>{n=e});return new Promise((a,c)=>{let u=i.createServer(e=>{u.close(),n([new r.SocketMessageReader(e,t),new o.SocketMessageWriter(e,t)])});u.on(\"error\",c),u.listen(e,\"127.0.0.1\",()=>{u.removeListener(\"error\",c),a({onConnected:()=>s})})})},t.createServerSocketTransport=function(e,t=\"utf-8\"){const n=i.createConnection(e,\"127.0.0.1\");return[new r.SocketMessageReader(n,t),new o.SocketMessageWriter(n,t)]}},function(e,t,n){\"use strict\";var i,r,o,s,a,c,u,l,d,p,g,h,m,f,v,y,C,R,w,T;n.r(t),n.d(t,\"Position\",function(){return i}),n.d(t,\"Range\",function(){return r}),n.d(t,\"Location\",function(){return o}),n.d(t,\"LocationLink\",function(){return s}),n.d(t,\"Color\",function(){return a}),n.d(t,\"ColorInformation\",function(){return c}),n.d(t,\"ColorPresentation\",function(){return u}),n.d(t,\"FoldingRangeKind\",function(){return l}),n.d(t,\"FoldingRange\",function(){return d}),n.d(t,\"DiagnosticRelatedInformation\",function(){return p}),n.d(t,\"DiagnosticSeverity\",function(){return g}),n.d(t,\"DiagnosticTag\",function(){return h}),n.d(t,\"Diagnostic\",function(){return m}),n.d(t,\"Command\",function(){return f}),n.d(t,\"TextEdit\",function(){return v}),n.d(t,\"TextDocumentEdit\",function(){return y}),n.d(t,\"CreateFile\",function(){return C}),n.d(t,\"RenameFile\",function(){return R}),n.d(t,\"DeleteFile\",function(){return w}),n.d(t,\"WorkspaceEdit\",function(){return T}),n.d(t,\"WorkspaceChange\",function(){return Y}),n.d(t,\"TextDocumentIdentifier\",function(){return S}),n.d(t,\"VersionedTextDocumentIdentifier\",function(){return _}),n.d(t,\"TextDocumentItem\",function(){return E}),n.d(t,\"MarkupKind\",function(){return P}),n.d(t,\"MarkupContent\",function(){return D}),n.d(t,\"CompletionItemKind\",function(){return b}),n.d(t,\"InsertTextFormat\",function(){return x}),n.d(t,\"CompletionItemTag\",function(){return k}),n.d(t,\"CompletionItem\",function(){return O}),n.d(t,\"CompletionList\",function(){return I}),n.d(t,\"MarkedString\",function(){return q}),n.d(t,\"Hover\",function(){return N}),n.d(t,\"ParameterInformation\",function(){return F}),n.d(t,\"SignatureInformation\",function(){return M}),n.d(t,\"DocumentHighlightKind\",function(){return L}),n.d(t,\"DocumentHighlight\",function(){return A}),n.d(t,\"SymbolKind\",function(){return j}),n.d(t,\"SymbolTag\",function(){return K}),n.d(t,\"SymbolInformation\",function(){return H}),n.d(t,\"DocumentSymbol\",function(){return W}),n.d(t,\"CodeActionKind\",function(){return U}),n.d(t,\"CodeActionContext\",function(){return $}),n.d(t,\"CodeAction\",function(){return z}),n.d(t,\"CodeLens\",function(){return G}),n.d(t,\"FormattingOptions\",function(){return B}),n.d(t,\"DocumentLink\",function(){return V}),n.d(t,\"SelectionRange\",function(){return X}),n.d(t,\"EOL\",function(){return Z}),n.d(t,\"TextDocument\",function(){return Q}),function(e){e.create=function(e,t){return{line:e,character:t}},e.is=function(e){var t=e;return ee.objectLiteral(t)&&ee.number(t.line)&&ee.number(t.character)}}(i||(i={})),function(e){e.create=function(e,t,n,r){if(ee.number(e)&&ee.number(t)&&ee.number(n)&&ee.number(r))return{start:i.create(e,t),end:i.create(n,r)};if(i.is(e)&&i.is(t))return{start:e,end:t};throw new Error(\"Range#create called with invalid arguments[\"+e+\", \"+t+\", \"+n+\", \"+r+\"]\")},e.is=function(e){var t=e;return ee.objectLiteral(t)&&i.is(t.start)&&i.is(t.end)}}(r||(r={})),function(e){e.create=function(e,t){return{uri:e,range:t}},e.is=function(e){var t=e;return ee.defined(t)&&r.is(t.range)&&(ee.string(t.uri)||ee.undefined(t.uri))}}(o||(o={})),function(e){e.create=function(e,t,n,i){return{targetUri:e,targetRange:t,targetSelectionRange:n,originSelectionRange:i}},e.is=function(e){var t=e;return ee.defined(t)&&r.is(t.targetRange)&&ee.string(t.targetUri)&&(r.is(t.targetSelectionRange)||ee.undefined(t.targetSelectionRange))&&(r.is(t.originSelectionRange)||ee.undefined(t.originSelectionRange))}}(s||(s={})),function(e){e.create=function(e,t,n,i){return{red:e,green:t,blue:n,alpha:i}},e.is=function(e){var t=e;return ee.number(t.red)&&ee.number(t.green)&&ee.number(t.blue)&&ee.number(t.alpha)}}(a||(a={})),function(e){e.create=function(e,t){return{range:e,color:t}},e.is=function(e){var t=e;return r.is(t.range)&&a.is(t.color)}}(c||(c={})),function(e){e.create=function(e,t,n){return{label:e,textEdit:t,additionalTextEdits:n}},e.is=function(e){var t=e;return ee.string(t.label)&&(ee.undefined(t.textEdit)||v.is(t))&&(ee.undefined(t.additionalTextEdits)||ee.typedArray(t.additionalTextEdits,v.is))}}(u||(u={})),function(e){e.Comment=\"comment\",e.Imports=\"imports\",e.Region=\"region\"}(l||(l={})),function(e){e.create=function(e,t,n,i,r){var o={startLine:e,endLine:t};return ee.defined(n)&&(o.startCharacter=n),ee.defined(i)&&(o.endCharacter=i),ee.defined(r)&&(o.kind=r),o},e.is=function(e){var t=e;return ee.number(t.startLine)&&ee.number(t.startLine)&&(ee.undefined(t.startCharacter)||ee.number(t.startCharacter))&&(ee.undefined(t.endCharacter)||ee.number(t.endCharacter))&&(ee.undefined(t.kind)||ee.string(t.kind))}}(d||(d={})),function(e){e.create=function(e,t){return{location:e,message:t}},e.is=function(e){var t=e;return ee.defined(t)&&o.is(t.location)&&ee.string(t.message)}}(p||(p={})),function(e){e.Error=1,e.Warning=2,e.Information=3,e.Hint=4}(g||(g={})),function(e){e.Unnecessary=1,e.Deprecated=2}(h||(h={})),function(e){e.create=function(e,t,n,i,r,o){var s={range:e,message:t};return ee.defined(n)&&(s.severity=n),ee.defined(i)&&(s.code=i),ee.defined(r)&&(s.source=r),ee.defined(o)&&(s.relatedInformation=o),s},e.is=function(e){var t=e;return ee.defined(t)&&r.is(t.range)&&ee.string(t.message)&&(ee.number(t.severity)||ee.undefined(t.severity))&&(ee.number(t.code)||ee.string(t.code)||ee.undefined(t.code))&&(ee.string(t.source)||ee.undefined(t.source))&&(ee.undefined(t.relatedInformation)||ee.typedArray(t.relatedInformation,p.is))}}(m||(m={})),function(e){e.create=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];var r={title:e,command:t};return ee.defined(n)&&n.length>0&&(r.arguments=n),r},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.title)&&ee.string(t.command)}}(f||(f={})),function(e){e.replace=function(e,t){return{range:e,newText:t}},e.insert=function(e,t){return{range:{start:e,end:e},newText:t}},e.del=function(e){return{range:e,newText:\"\"}},e.is=function(e){var t=e;return ee.objectLiteral(t)&&ee.string(t.newText)&&r.is(t.range)}}(v||(v={})),function(e){e.create=function(e,t){return{textDocument:e,edits:t}},e.is=function(e){var t=e;return ee.defined(t)&&_.is(t.textDocument)&&Array.isArray(t.edits)}}(y||(y={})),function(e){e.create=function(e,t){var n={kind:\"create\",uri:e};return void 0===t||void 0===t.overwrite&&void 0===t.ignoreIfExists||(n.options=t),n},e.is=function(e){var t=e;return t&&\"create\"===t.kind&&ee.string(t.uri)&&(void 0===t.options||(void 0===t.options.overwrite||ee.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||ee.boolean(t.options.ignoreIfExists)))}}(C||(C={})),function(e){e.create=function(e,t,n){var i={kind:\"rename\",oldUri:e,newUri:t};return void 0===n||void 0===n.overwrite&&void 0===n.ignoreIfExists||(i.options=n),i},e.is=function(e){var t=e;return t&&\"rename\"===t.kind&&ee.string(t.oldUri)&&ee.string(t.newUri)&&(void 0===t.options||(void 0===t.options.overwrite||ee.boolean(t.options.overwrite))&&(void 0===t.options.ignoreIfExists||ee.boolean(t.options.ignoreIfExists)))}}(R||(R={})),function(e){e.create=function(e,t){var n={kind:\"delete\",uri:e};return void 0===t||void 0===t.recursive&&void 0===t.ignoreIfNotExists||(n.options=t),n},e.is=function(e){var t=e;return t&&\"delete\"===t.kind&&ee.string(t.uri)&&(void 0===t.options||(void 0===t.options.recursive||ee.boolean(t.options.recursive))&&(void 0===t.options.ignoreIfNotExists||ee.boolean(t.options.ignoreIfNotExists)))}}(w||(w={})),function(e){e.is=function(e){var t=e;return t&&(void 0!==t.changes||void 0!==t.documentChanges)&&(void 0===t.documentChanges||t.documentChanges.every(function(e){return ee.string(e.kind)?C.is(e)||R.is(e)||w.is(e):y.is(e)}))}}(T||(T={}));var S,_,E,P,D,b,x,k,O,I,q,N,F,M,L,A,j,K,H,W,U,$,z,G,B,V,X,J=function(){function e(e){this.edits=e}return e.prototype.insert=function(e,t){this.edits.push(v.insert(e,t))},e.prototype.replace=function(e,t){this.edits.push(v.replace(e,t))},e.prototype.delete=function(e){this.edits.push(v.del(e))},e.prototype.add=function(e){this.edits.push(e)},e.prototype.all=function(){return this.edits},e.prototype.clear=function(){this.edits.splice(0,this.edits.length)},e}(),Y=function(){function e(e){var t=this;this._textEditChanges=Object.create(null),e&&(this._workspaceEdit=e,e.documentChanges?e.documentChanges.forEach(function(e){if(y.is(e)){var n=new J(e.edits);t._textEditChanges[e.textDocument.uri]=n}}):e.changes&&Object.keys(e.changes).forEach(function(n){var i=new J(e.changes[n]);t._textEditChanges[n]=i}))}return Object.defineProperty(e.prototype,\"edit\",{get:function(){return this._workspaceEdit},enumerable:!0,configurable:!0}),e.prototype.getTextEditChange=function(e){if(_.is(e)){if(this._workspaceEdit||(this._workspaceEdit={documentChanges:[]}),!this._workspaceEdit.documentChanges)throw new Error(\"Workspace edit is not configured for document changes.\");var t=e;if(!(i=this._textEditChanges[t.uri])){var n={textDocument:t,edits:r=[]};this._workspaceEdit.documentChanges.push(n),i=new J(r),this._textEditChanges[t.uri]=i}return i}if(this._workspaceEdit||(this._workspaceEdit={changes:Object.create(null)}),!this._workspaceEdit.changes)throw new Error(\"Workspace edit is not configured for normal text edit changes.\");var i;if(!(i=this._textEditChanges[e])){var r=[];this._workspaceEdit.changes[e]=r,i=new J(r),this._textEditChanges[e]=i}return i},e.prototype.createFile=function(e,t){this.checkDocumentChanges(),this._workspaceEdit.documentChanges.push(C.create(e,t))},e.prototype.renameFile=function(e,t,n){this.checkDocumentChanges(),this._workspaceEdit.documentChanges.push(R.create(e,t,n))},e.prototype.deleteFile=function(e,t){this.checkDocumentChanges(),this._workspaceEdit.documentChanges.push(w.create(e,t))},e.prototype.checkDocumentChanges=function(){if(!this._workspaceEdit||!this._workspaceEdit.documentChanges)throw new Error(\"Workspace edit is not configured for document changes.\")},e}();!function(e){e.create=function(e){return{uri:e}},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.uri)}}(S||(S={})),function(e){e.create=function(e,t){return{uri:e,version:t}},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.uri)&&(null===t.version||ee.number(t.version))}}(_||(_={})),function(e){e.create=function(e,t,n,i){return{uri:e,languageId:t,version:n,text:i}},e.is=function(e){var t=e;return ee.defined(t)&&ee.string(t.uri)&&ee.string(t.languageId)&&ee.number(t.version)&&ee.string(t.text)}}(E||(E={})),function(e){e.PlainText=\"plaintext\",e.Markdown=\"markdown\"}(P||(P={})),function(e){e.is=function(t){var n=t;return n===e.PlainText||n===e.Markdown}}(P||(P={})),function(e){e.is=function(e){var t=e;return ee.objectLiteral(e)&&P.is(t.kind)&&ee.string(t.value)}}(D||(D={})),function(e){e.Text=1,e.Method=2,e.Function=3,e.Constructor=4,e.Field=5,e.Variable=6,e.Class=7,e.Interface=8,e.Module=9,e.Property=10,e.Unit=11,e.Value=12,e.Enum=13,e.Keyword=14,e.Snippet=15,e.Color=16,e.File=17,e.Reference=18,e.Folder=19,e.EnumMember=20,e.Constant=21,e.Struct=22,e.Event=23,e.Operator=24,e.TypeParameter=25}(b||(b={})),function(e){e.PlainText=1,e.Snippet=2}(x||(x={})),function(e){e.Deprecated=1}(k||(k={})),function(e){e.create=function(e){return{label:e}}}(O||(O={})),function(e){e.create=function(e,t){return{items:e||[],isIncomplete:!!t}}}(I||(I={})),function(e){e.fromPlainText=function(e){return e.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g,\"\\\\$&\")},e.is=function(e){var t=e;return ee.string(t)||ee.objectLiteral(t)&&ee.string(t.language)&&ee.string(t.value)}}(q||(q={})),function(e){e.is=function(e){var t=e;return!!t&&ee.objectLiteral(t)&&(D.is(t.contents)||q.is(t.contents)||ee.typedArray(t.contents,q.is))&&(void 0===e.range||r.is(e.range))}}(N||(N={})),function(e){e.create=function(e,t){return t?{label:e,documentation:t}:{label:e}}}(F||(F={})),function(e){e.create=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];var r={label:e};return ee.defined(t)&&(r.documentation=t),ee.defined(n)?r.parameters=n:r.parameters=[],r}}(M||(M={})),function(e){e.Text=1,e.Read=2,e.Write=3}(L||(L={})),function(e){e.create=function(e,t){var n={range:e};return ee.number(t)&&(n.kind=t),n}}(A||(A={})),function(e){e.File=1,e.Module=2,e.Namespace=3,e.Package=4,e.Class=5,e.Method=6,e.Property=7,e.Field=8,e.Constructor=9,e.Enum=10,e.Interface=11,e.Function=12,e.Variable=13,e.Constant=14,e.String=15,e.Number=16,e.Boolean=17,e.Array=18,e.Object=19,e.Key=20,e.Null=21,e.EnumMember=22,e.Struct=23,e.Event=24,e.Operator=25,e.TypeParameter=26}(j||(j={})),function(e){e.Deprecated=1}(K||(K={})),function(e){e.create=function(e,t,n,i,r){var o={name:e,kind:t,location:{uri:i,range:n}};return r&&(o.containerName=r),o}}(H||(H={})),function(e){e.create=function(e,t,n,i,r,o){var s={name:e,detail:t,kind:n,range:i,selectionRange:r};return void 0!==o&&(s.children=o),s},e.is=function(e){var t=e;return t&&ee.string(t.name)&&ee.number(t.kind)&&r.is(t.range)&&r.is(t.selectionRange)&&(void 0===t.detail||ee.string(t.detail))&&(void 0===t.deprecated||ee.boolean(t.deprecated))&&(void 0===t.children||Array.isArray(t.children))}}(W||(W={})),function(e){e.Empty=\"\",e.QuickFix=\"quickfix\",e.Refactor=\"refactor\",e.RefactorExtract=\"refactor.extract\",e.RefactorInline=\"refactor.inline\",e.RefactorRewrite=\"refactor.rewrite\",e.Source=\"source\",e.SourceOrganizeImports=\"source.organizeImports\",e.SourceFixAll=\"source.fixAll\"}(U||(U={})),function(e){e.create=function(e,t){var n={diagnostics:e};return void 0!==t&&null!==t&&(n.only=t),n},e.is=function(e){var t=e;return ee.defined(t)&&ee.typedArray(t.diagnostics,m.is)&&(void 0===t.only||ee.typedArray(t.only,ee.string))}}($||($={})),function(e){e.create=function(e,t,n){var i={title:e};return f.is(t)?i.command=t:i.edit=t,void 0!==n&&(i.kind=n),i},e.is=function(e){var t=e;return t&&ee.string(t.title)&&(void 0===t.diagnostics||ee.typedArray(t.diagnostics,m.is))&&(void 0===t.kind||ee.string(t.kind))&&(void 0!==t.edit||void 0!==t.command)&&(void 0===t.command||f.is(t.command))&&(void 0===t.isPreferred||ee.boolean(t.isPreferred))&&(void 0===t.edit||T.is(t.edit))}}(z||(z={})),function(e){e.create=function(e,t){var n={range:e};return ee.defined(t)&&(n.data=t),n},e.is=function(e){var t=e;return ee.defined(t)&&r.is(t.range)&&(ee.undefined(t.command)||f.is(t.command))}}(G||(G={})),function(e){e.create=function(e,t){return{tabSize:e,insertSpaces:t}},e.is=function(e){var t=e;return ee.defined(t)&&ee.number(t.tabSize)&&ee.boolean(t.insertSpaces)}}(B||(B={})),function(e){e.create=function(e,t,n){return{range:e,target:t,data:n}},e.is=function(e){var t=e;return ee.defined(t)&&r.is(t.range)&&(ee.undefined(t.target)||ee.string(t.target))}}(V||(V={})),function(e){e.create=function(e,t){return{range:e,parent:t}},e.is=function(t){var n=t;return void 0!==n&&r.is(n.range)&&(void 0===n.parent||e.is(n.parent))}}(X||(X={}));var Q,Z=[\"\\n\",\"\\r\\n\",\"\\r\"];!function(e){e.create=function(e,t,n,i){return new te(e,t,n,i)},e.is=function(e){var t=e;return!!(ee.defined(t)&&ee.string(t.uri)&&(ee.undefined(t.languageId)||ee.string(t.languageId))&&ee.number(t.lineCount)&&ee.func(t.getText)&&ee.func(t.positionAt)&&ee.func(t.offsetAt))},e.applyEdits=function(e,t){for(var n=e.getText(),i=function e(t,n){if(t.length<=1)return t;var i=t.length/2|0,r=t.slice(0,i),o=t.slice(i);e(r,n),e(o,n);for(var s=0,a=0,c=0;s<r.length&&a<o.length;){var u=n(r[s],o[a]);t[c++]=u<=0?r[s++]:o[a++]}for(;s<r.length;)t[c++]=r[s++];for(;a<o.length;)t[c++]=o[a++];return t}(t,function(e,t){var n=e.range.start.line-t.range.start.line;return 0===n?e.range.start.character-t.range.start.character:n}),r=n.length,o=i.length-1;o>=0;o--){var s=i[o],a=e.offsetAt(s.range.start),c=e.offsetAt(s.range.end);if(!(c<=r))throw new Error(\"Overlapping edit\");n=n.substring(0,a)+s.newText+n.substring(c,n.length),r=a}return n}}(Q||(Q={}));var ee,te=function(){function e(e,t,n,i){this._uri=e,this._languageId=t,this._version=n,this._content=i,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,\"uri\",{get:function(){return this._uri},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"languageId\",{get:function(){return this._languageId},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"version\",{get:function(){return this._version},enumerable:!0,configurable:!0}),e.prototype.getText=function(e){if(e){var t=this.offsetAt(e.start),n=this.offsetAt(e.end);return this._content.substring(t,n)}return this._content},e.prototype.update=function(e,t){this._content=e.text,this._version=t,this._lineOffsets=void 0},e.prototype.getLineOffsets=function(){if(void 0===this._lineOffsets){for(var e=[],t=this._content,n=!0,i=0;i<t.length;i++){n&&(e.push(i),n=!1);var r=t.charAt(i);n=\"\\r\"===r||\"\\n\"===r,\"\\r\"===r&&i+1<t.length&&\"\\n\"===t.charAt(i+1)&&i++}n&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},e.prototype.positionAt=function(e){e=Math.max(Math.min(e,this._content.length),0);var t=this.getLineOffsets(),n=0,r=t.length;if(0===r)return i.create(0,e);for(;n<r;){var o=Math.floor((n+r)/2);t[o]>e?r=o:n=o+1}var s=n-1;return i.create(s,e-t[s])},e.prototype.offsetAt=function(e){var t=this.getLineOffsets();if(e.line>=t.length)return this._content.length;if(e.line<0)return 0;var n=t[e.line],i=e.line+1<t.length?t[e.line+1]:this._content.length;return Math.max(Math.min(n+e.character,i),n)},Object.defineProperty(e.prototype,\"lineCount\",{get:function(){return this.getLineOffsets().length},enumerable:!0,configurable:!0}),e}();!function(e){var t=Object.prototype.toString;e.defined=function(e){return void 0!==e},e.undefined=function(e){return void 0===e},e.boolean=function(e){return!0===e||!1===e},e.string=function(e){return\"[object String]\"===t.call(e)},e.number=function(e){return\"[object Number]\"===t.call(e)},e.func=function(e){return\"[object Function]\"===t.call(e)},e.objectLiteral=function(e){return null!==e&&\"object\"==typeof e},e.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)}}(ee||(ee={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(31),r=n(4),o=n(2),s=n(32);t.ImplementationRequest=s.ImplementationRequest;const a=n(33);t.TypeDefinitionRequest=a.TypeDefinitionRequest;const c=n(34);t.WorkspaceFoldersRequest=c.WorkspaceFoldersRequest,t.DidChangeWorkspaceFoldersNotification=c.DidChangeWorkspaceFoldersNotification;const u=n(35);t.ConfigurationRequest=u.ConfigurationRequest;const l=n(36);t.DocumentColorRequest=l.DocumentColorRequest,t.ColorPresentationRequest=l.ColorPresentationRequest;const d=n(37);t.FoldingRangeRequest=d.FoldingRangeRequest;const p=n(38);t.DeclarationRequest=p.DeclarationRequest;const g=n(39);t.SelectionRangeRequest=g.SelectionRangeRequest;const h=n(40);var m,f;t.WorkDoneProgress=h.WorkDoneProgress,t.WorkDoneProgressCreateRequest=h.WorkDoneProgressCreateRequest,t.WorkDoneProgressCancelNotification=h.WorkDoneProgressCancelNotification,function(e){e.is=function(e){const t=e;return i.string(t.language)||i.string(t.scheme)||i.string(t.pattern)}}(m=t.DocumentFilter||(t.DocumentFilter={})),function(e){e.is=function(e){if(!Array.isArray(e))return!1;for(let t of e)if(!i.string(t)&&!m.is(t))return!1;return!0}}(f=t.DocumentSelector||(t.DocumentSelector={})),function(e){e.type=new o.ProtocolRequestType(\"client/registerCapability\")}(t.RegistrationRequest||(t.RegistrationRequest={})),function(e){e.type=new o.ProtocolRequestType(\"client/unregisterCapability\")}(t.UnregistrationRequest||(t.UnregistrationRequest={})),function(e){e.Create=\"create\",e.Rename=\"rename\",e.Delete=\"delete\"}(t.ResourceOperationKind||(t.ResourceOperationKind={})),function(e){e.Abort=\"abort\",e.Transactional=\"transactional\",e.TextOnlyTransactional=\"textOnlyTransactional\",e.Undo=\"undo\"}(t.FailureHandlingKind||(t.FailureHandlingKind={})),function(e){e.hasId=function(e){const t=e;return t&&i.string(t.id)&&t.id.length>0}}(t.StaticRegistrationOptions||(t.StaticRegistrationOptions={})),function(e){e.is=function(e){const t=e;return t&&(null===t.documentSelector||f.is(t.documentSelector))}}(t.TextDocumentRegistrationOptions||(t.TextDocumentRegistrationOptions={})),function(e){e.is=function(e){const t=e;return i.objectLiteral(t)&&(void 0===t.workDoneProgress||i.boolean(t.workDoneProgress))},e.hasWorkDoneProgress=function(e){const t=e;return t&&i.boolean(t.workDoneProgress)}}(t.WorkDoneProgressOptions||(t.WorkDoneProgressOptions={})),function(e){e.type=new o.ProtocolRequestType(\"initialize\")}(t.InitializeRequest||(t.InitializeRequest={})),function(e){e.unknownProtocolVersion=1}(t.InitializeError||(t.InitializeError={})),function(e){e.type=new o.ProtocolNotificationType(\"initialized\")}(t.InitializedNotification||(t.InitializedNotification={})),function(e){e.type=new o.ProtocolRequestType0(\"shutdown\")}(t.ShutdownRequest||(t.ShutdownRequest={})),function(e){e.type=new o.ProtocolNotificationType0(\"exit\")}(t.ExitNotification||(t.ExitNotification={})),function(e){e.type=new o.ProtocolNotificationType(\"workspace/didChangeConfiguration\")}(t.DidChangeConfigurationNotification||(t.DidChangeConfigurationNotification={})),function(e){e.Error=1,e.Warning=2,e.Info=3,e.Log=4}(t.MessageType||(t.MessageType={})),function(e){e.type=new o.ProtocolNotificationType(\"window/showMessage\")}(t.ShowMessageNotification||(t.ShowMessageNotification={})),function(e){e.type=new o.ProtocolRequestType(\"window/showMessageRequest\")}(t.ShowMessageRequest||(t.ShowMessageRequest={})),function(e){e.type=new o.ProtocolNotificationType(\"window/logMessage\")}(t.LogMessageNotification||(t.LogMessageNotification={})),function(e){e.type=new o.ProtocolNotificationType(\"telemetry/event\")}(t.TelemetryEventNotification||(t.TelemetryEventNotification={})),function(e){e.None=0,e.Full=1,e.Incremental=2}(t.TextDocumentSyncKind||(t.TextDocumentSyncKind={})),function(e){e.method=\"textDocument/didOpen\",e.type=new o.ProtocolNotificationType(e.method)}(t.DidOpenTextDocumentNotification||(t.DidOpenTextDocumentNotification={})),function(e){e.method=\"textDocument/didChange\",e.type=new o.ProtocolNotificationType(e.method)}(t.DidChangeTextDocumentNotification||(t.DidChangeTextDocumentNotification={})),function(e){e.method=\"textDocument/didClose\",e.type=new o.ProtocolNotificationType(e.method)}(t.DidCloseTextDocumentNotification||(t.DidCloseTextDocumentNotification={})),function(e){e.method=\"textDocument/didSave\",e.type=new o.ProtocolNotificationType(e.method)}(t.DidSaveTextDocumentNotification||(t.DidSaveTextDocumentNotification={})),function(e){e.Manual=1,e.AfterDelay=2,e.FocusOut=3}(t.TextDocumentSaveReason||(t.TextDocumentSaveReason={})),function(e){e.method=\"textDocument/willSave\",e.type=new o.ProtocolNotificationType(e.method)}(t.WillSaveTextDocumentNotification||(t.WillSaveTextDocumentNotification={})),function(e){e.method=\"textDocument/willSaveWaitUntil\",e.type=new o.ProtocolRequestType(e.method)}(t.WillSaveTextDocumentWaitUntilRequest||(t.WillSaveTextDocumentWaitUntilRequest={})),function(e){e.type=new o.ProtocolNotificationType(\"workspace/didChangeWatchedFiles\")}(t.DidChangeWatchedFilesNotification||(t.DidChangeWatchedFilesNotification={})),function(e){e.Created=1,e.Changed=2,e.Deleted=3}(t.FileChangeType||(t.FileChangeType={})),function(e){e.Create=1,e.Change=2,e.Delete=4}(t.WatchKind||(t.WatchKind={})),function(e){e.type=new o.ProtocolNotificationType(\"textDocument/publishDiagnostics\")}(t.PublishDiagnosticsNotification||(t.PublishDiagnosticsNotification={})),function(e){e.Invoked=1,e.TriggerCharacter=2,e.TriggerForIncompleteCompletions=3}(t.CompletionTriggerKind||(t.CompletionTriggerKind={})),function(e){e.method=\"textDocument/completion\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.CompletionRequest||(t.CompletionRequest={})),function(e){e.method=\"completionItem/resolve\",e.type=new o.ProtocolRequestType(e.method)}(t.CompletionResolveRequest||(t.CompletionResolveRequest={})),function(e){e.method=\"textDocument/hover\",e.type=new o.ProtocolRequestType(e.method)}(t.HoverRequest||(t.HoverRequest={})),function(e){e.Invoked=1,e.TriggerCharacter=2,e.ContentChange=3}(t.SignatureHelpTriggerKind||(t.SignatureHelpTriggerKind={})),function(e){e.method=\"textDocument/signatureHelp\",e.type=new o.ProtocolRequestType(e.method)}(t.SignatureHelpRequest||(t.SignatureHelpRequest={})),function(e){e.method=\"textDocument/definition\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.DefinitionRequest||(t.DefinitionRequest={})),function(e){e.method=\"textDocument/references\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.ReferencesRequest||(t.ReferencesRequest={})),function(e){e.method=\"textDocument/documentHighlight\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.DocumentHighlightRequest||(t.DocumentHighlightRequest={})),function(e){e.method=\"textDocument/documentSymbol\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.DocumentSymbolRequest||(t.DocumentSymbolRequest={})),function(e){e.method=\"textDocument/codeAction\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.CodeActionRequest||(t.CodeActionRequest={})),function(e){e.method=\"workspace/symbol\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.WorkspaceSymbolRequest||(t.WorkspaceSymbolRequest={})),function(e){e.type=new o.ProtocolRequestType(\"textDocument/codeLens\"),e.resultType=new r.ProgressType}(t.CodeLensRequest||(t.CodeLensRequest={})),function(e){e.type=new o.ProtocolRequestType(\"codeLens/resolve\")}(t.CodeLensResolveRequest||(t.CodeLensResolveRequest={})),function(e){e.method=\"textDocument/documentLink\",e.type=new o.ProtocolRequestType(e.method),e.resultType=new r.ProgressType}(t.DocumentLinkRequest||(t.DocumentLinkRequest={})),function(e){e.type=new o.ProtocolRequestType(\"documentLink/resolve\")}(t.DocumentLinkResolveRequest||(t.DocumentLinkResolveRequest={})),function(e){e.method=\"textDocument/formatting\",e.type=new o.ProtocolRequestType(e.method)}(t.DocumentFormattingRequest||(t.DocumentFormattingRequest={})),function(e){e.method=\"textDocument/rangeFormatting\",e.type=new o.ProtocolRequestType(e.method)}(t.DocumentRangeFormattingRequest||(t.DocumentRangeFormattingRequest={})),function(e){e.method=\"textDocument/onTypeFormatting\",e.type=new o.ProtocolRequestType(e.method)}(t.DocumentOnTypeFormattingRequest||(t.DocumentOnTypeFormattingRequest={})),function(e){e.method=\"textDocument/rename\",e.type=new o.ProtocolRequestType(e.method)}(t.RenameRequest||(t.RenameRequest={})),function(e){e.method=\"textDocument/prepareRename\",e.type=new o.ProtocolRequestType(e.method)}(t.PrepareRenameRequest||(t.PrepareRenameRequest={})),function(e){e.type=new o.ProtocolRequestType(\"workspace/executeCommand\")}(t.ExecuteCommandRequest||(t.ExecuteCommandRequest={})),function(e){e.type=new o.ProtocolRequestType(\"workspace/applyEdit\")}(t.ApplyWorkspaceEditRequest||(t.ApplyWorkspaceEditRequest={}))},function(e,t,n){\"use strict\";function i(e){return\"string\"==typeof e||e instanceof String}function r(e){return Array.isArray(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.boolean=function(e){return!0===e||!1===e},t.string=i,t.number=function(e){return\"number\"==typeof e||e instanceof Number},t.error=function(e){return e instanceof Error},t.func=function(e){return\"function\"==typeof e},t.array=r,t.stringArray=function(e){return r(e)&&e.every(e=>i(e))},t.typedArray=function(e,t){return Array.isArray(e)&&e.every(t)},t.objectLiteral=function(e){return null!==e&&\"object\"==typeof e}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4),r=n(2);!function(e){e.method=\"textDocument/implementation\",e.type=new r.ProtocolRequestType(e.method),e.resultType=new i.ProgressType}(t.ImplementationRequest||(t.ImplementationRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4),r=n(2);!function(e){e.method=\"textDocument/typeDefinition\",e.type=new r.ProtocolRequestType(e.method),e.resultType=new i.ProgressType}(t.TypeDefinitionRequest||(t.TypeDefinitionRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(2);!function(e){e.type=new i.ProtocolRequestType0(\"workspace/workspaceFolders\")}(t.WorkspaceFoldersRequest||(t.WorkspaceFoldersRequest={})),function(e){e.type=new i.ProtocolNotificationType(\"workspace/didChangeWorkspaceFolders\")}(t.DidChangeWorkspaceFoldersNotification||(t.DidChangeWorkspaceFoldersNotification={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(2);!function(e){e.type=new i.ProtocolRequestType(\"workspace/configuration\")}(t.ConfigurationRequest||(t.ConfigurationRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4),r=n(2);!function(e){e.method=\"textDocument/documentColor\",e.type=new r.ProtocolRequestType(e.method),e.resultType=new i.ProgressType}(t.DocumentColorRequest||(t.DocumentColorRequest={})),function(e){e.type=new r.ProtocolRequestType(\"textDocument/colorPresentation\")}(t.ColorPresentationRequest||(t.ColorPresentationRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4),r=n(2);!function(e){e.Comment=\"comment\",e.Imports=\"imports\",e.Region=\"region\"}(t.FoldingRangeKind||(t.FoldingRangeKind={})),function(e){e.method=\"textDocument/foldingRange\",e.type=new r.ProtocolRequestType(e.method),e.resultType=new i.ProgressType}(t.FoldingRangeRequest||(t.FoldingRangeRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4),r=n(2);!function(e){e.method=\"textDocument/declaration\",e.type=new r.ProtocolRequestType(e.method),e.resultType=new i.ProgressType}(t.DeclarationRequest||(t.DeclarationRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4),r=n(2);!function(e){e.method=\"textDocument/selectionRange\",e.type=new r.ProtocolRequestType(e.method),e.resultType=new i.ProgressType}(t.SelectionRangeRequest||(t.SelectionRangeRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(4),r=n(2);!function(e){e.type=new i.ProgressType}(t.WorkDoneProgress||(t.WorkDoneProgress={})),function(e){e.type=new r.ProtocolRequestType(\"window/workDoneProgress/create\")}(t.WorkDoneProgressCreateRequest||(t.WorkDoneProgressCreateRequest={})),function(e){e.type=new r.ProtocolNotificationType(\"window/workDoneProgress/cancel\")}(t.WorkDoneProgressCancelNotification||(t.WorkDoneProgressCancelNotification={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(2);!function(e){e.method=\"textDocument/prepareCallHierarchy\",e.type=new i.ProtocolRequestType(e.method)}(t.CallHierarchyPrepareRequest||(t.CallHierarchyPrepareRequest={})),function(e){e.method=\"callHierarchy/incomingCalls\",e.type=new i.ProtocolRequestType(e.method)}(t.CallHierarchyIncomingCallsRequest||(t.CallHierarchyIncomingCallsRequest={})),function(e){e.method=\"callHierarchy/outgoingCalls\",e.type=new i.ProtocolRequestType(e.method)}(t.CallHierarchyOutgoingCallsRequest||(t.CallHierarchyOutgoingCallsRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(2);!function(e){e.comment=\"comment\",e.keyword=\"keyword\",e.string=\"string\",e.number=\"number\",e.regexp=\"regexp\",e.operator=\"operator\",e.namespace=\"namespace\",e.type=\"type\",e.struct=\"struct\",e.class=\"class\",e.interface=\"interface\",e.enum=\"enum\",e.typeParameter=\"typeParameter\",e.function=\"function\",e.member=\"member\",e.property=\"property\",e.macro=\"macro\",e.variable=\"variable\",e.parameter=\"parameter\",e.label=\"label\"}(t.SemanticTokenTypes||(t.SemanticTokenTypes={})),function(e){e.documentation=\"documentation\",e.declaration=\"declaration\",e.definition=\"definition\",e.reference=\"reference\",e.static=\"static\",e.abstract=\"abstract\",e.deprecated=\"deprecated\",e.async=\"async\",e.volatile=\"volatile\",e.readonly=\"readonly\"}(t.SemanticTokenModifiers||(t.SemanticTokenModifiers={})),function(e){e.is=function(e){const t=e;return void 0!==t&&(void 0===t.resultId||\"string\"==typeof t.resultId)&&Array.isArray(t.data)&&(0===t.data.length||\"number\"==typeof t.data[0])}}(t.SemanticTokens||(t.SemanticTokens={})),function(e){e.method=\"textDocument/semanticTokens\",e.type=new i.ProtocolRequestType(e.method)}(t.SemanticTokensRequest||(t.SemanticTokensRequest={})),function(e){e.method=\"textDocument/semanticTokens/edits\",e.type=new i.ProtocolRequestType(e.method)}(t.SemanticTokensEditsRequest||(t.SemanticTokensEditsRequest={})),function(e){e.method=\"textDocument/semanticTokens/range\",e.type=new i.ProtocolRequestType(e.method)}(t.SemanticTokensRangeRequest||(t.SemanticTokensRangeRequest={}))},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(7),s=n(14),a=n(15),c=n(16);t.createConverter=function(e){const t=e||(e=>e.toString());function n(e){return t(e)}function u(e){return{uri:t(e.uri)}}function l(e){return{uri:t(e.uri),version:e.version}}function d(e){return{label:e.label}}function p(e){return{label:e.label,parameters:function(e){return e.map(d)}(e.parameters)}}function g(e){return void 0===e?e:{signatures:function(e){return e.map(p)}(e.signatures),activeSignature:e.activeSignature,activeParameter:e.activeParameter}}function h(e){return{line:e.line,character:e.character}}function m(e){return void 0===e||null===e?e:{line:e.line,character:e.character}}function f(e){if(void 0===e||null===e)return e;if(function(e){const t=e;return t&&!!t.inserting&&!!t.replacing}(e))throw new Error(\"Receving unknown insert replace range.\");return{start:m(e.start),end:m(e.end)}}function v(e){return void 0===e||null===e?e:r.Location.create(n(e.uri),f(e.range))}function y(e){switch(e){case i.DiagnosticSeverity.Error:return r.DiagnosticSeverity.Error;case i.DiagnosticSeverity.Warning:return r.DiagnosticSeverity.Warning;case i.DiagnosticSeverity.Information:return r.DiagnosticSeverity.Information;case i.DiagnosticSeverity.Hint:return r.DiagnosticSeverity.Hint}}function C(e){switch(e){case i.DiagnosticTag.Unnecessary:return r.DiagnosticTag.Unnecessary;case i.DiagnosticTag.Deprecated:return r.DiagnosticTag.Deprecated;default:return}}function R(e){return{message:e.message,location:v(e.location)}}function w(e){let t=r.Diagnostic.create(f(e.range),e.message);return o.number(e.severity)&&(t.severity=y(e.severity)),(o.number(e.code)||o.string(e.code))&&(t.code=e.code),Array.isArray(e.tags)&&(t.tags=function(e){if(!e)return;let t=[];for(let n of e){let e=C(n);void 0!==e&&t.push(e)}return t.length>0?t:void 0}(e.tags)),e.relatedInformation&&(t.relatedInformation=function(e){return e.map(R)}(e.relatedInformation)),e.source&&(t.source=e.source),t}function T(e){return void 0===e||null===e?e:e.map(w)}function S(e){switch(e){case i.CompletionItemTag.Deprecated:return r.CompletionItemTag.Deprecated}}function _(e){return{range:f(e.range),newText:e.newText}}function E(e){return e}function P(e){let t=r.Command.create(e.title,e.command);return e.arguments&&(t.arguments=e.arguments),t}return{asUri:n,asTextDocumentIdentifier:u,asVersionedTextDocumentIdentifier:l,asOpenTextDocumentParams:function(e){return{textDocument:{uri:t(e.uri),languageId:e.languageId,version:e.version,text:e.getText()}}},asChangeTextDocumentParams:function(e){if(function(e){let t=e;return!!t.uri&&!!t.version}(e))return{textDocument:{uri:t(e.uri),version:e.version},contentChanges:[{text:e.getText()}]};if(function(e){let t=e;return!!t.document&&!!t.contentChanges}(e)){let n=e.document;return{textDocument:{uri:t(n.uri),version:n.version},contentChanges:e.contentChanges.map(e=>{let t=e.range;return{range:{start:{line:t.start.line,character:t.start.character},end:{line:t.end.line,character:t.end.character}},rangeLength:e.rangeLength,text:e.text}})}}throw Error(\"Unsupported text document change parameter\")},asCloseTextDocumentParams:function(e){return{textDocument:u(e)}},asSaveTextDocumentParams:function(e,t=!1){let n={textDocument:l(e)};return t&&(n.text=e.getText()),n},asWillSaveTextDocumentParams:function(e){return{textDocument:u(e.document),reason:function(e){switch(e){case i.TextDocumentSaveReason.Manual:return r.TextDocumentSaveReason.Manual;case i.TextDocumentSaveReason.AfterDelay:return r.TextDocumentSaveReason.AfterDelay;case i.TextDocumentSaveReason.FocusOut:return r.TextDocumentSaveReason.FocusOut}return r.TextDocumentSaveReason.Manual}(e.reason)}},asTextDocumentPositionParams:function(e,t){return{textDocument:u(e),position:h(t)}},asCompletionParams:function(e,t,n){return{textDocument:u(e),position:h(t),context:{triggerKind:function(e){switch(e){case i.CompletionTriggerKind.TriggerCharacter:return r.CompletionTriggerKind.TriggerCharacter;case i.CompletionTriggerKind.TriggerForIncompleteCompletions:return r.CompletionTriggerKind.TriggerForIncompleteCompletions;default:return r.CompletionTriggerKind.Invoked}}(n.triggerKind),triggerCharacter:n.triggerCharacter}}},asSignatureHelpParams:function(e,t,n){return{textDocument:u(e),position:h(t),context:{isRetrigger:n.isRetrigger,triggerCharacter:n.triggerCharacter,triggerKind:function(e){switch(e){case i.SignatureHelpTriggerKind.Invoke:return r.SignatureHelpTriggerKind.Invoked;case i.SignatureHelpTriggerKind.TriggerCharacter:return r.SignatureHelpTriggerKind.TriggerCharacter;case i.SignatureHelpTriggerKind.ContentChange:return r.SignatureHelpTriggerKind.ContentChange}}(n.triggerKind),activeSignatureHelp:g(n.activeSignatureHelp)}}},asWorkerPosition:h,asRange:f,asPosition:m,asPositions:function(e){let t=[];for(let n of e)t.push(m(n));return t},asLocation:v,asDiagnosticSeverity:y,asDiagnosticTag:C,asDiagnostic:w,asDiagnostics:T,asCompletionItem:function(e){let t={label:e.label},n=e instanceof s.default?e:void 0;e.detail&&(t.detail=e.detail),e.documentation&&(n&&\"$string\"!==n.documentationFormat?t.documentation=function(e,t){switch(e){case\"$string\":return t;case r.MarkupKind.PlainText:return{kind:e,value:t};case r.MarkupKind.Markdown:return{kind:e,value:t.value};default:return`Unsupported Markup content received. Kind is: ${e}`}}(n.documentationFormat,e.documentation):t.documentation=e.documentation),e.filterText&&(t.filterText=e.filterText),function(e,t){let n=r.InsertTextFormat.PlainText,o=void 0,s=void 0;t.textEdit?(o=t.textEdit.newText,s=f(t.textEdit.range)):t.insertText instanceof i.SnippetString?(n=r.InsertTextFormat.Snippet,o=t.insertText.value):o=t.insertText,t.range&&(s=f(t.range)),e.insertTextFormat=n,t.fromEdit&&void 0!==o&&void 0!==s?e.textEdit={newText:o,range:s}:e.insertText=o}(t,e),o.number(e.kind)&&(t.kind=function(e,t){return void 0!==t?t:e+1}(e.kind,n&&n.originalItemKind)),e.sortText&&(t.sortText=e.sortText),e.additionalTextEdits&&(t.additionalTextEdits=function(e){return void 0===e||null===e?e:e.map(_)}(e.additionalTextEdits)),e.commitCharacters&&(t.commitCharacters=e.commitCharacters.slice()),e.command&&(t.command=P(e.command)),!0!==e.preselect&&!1!==e.preselect||(t.preselect=e.preselect);const a=function(e){if(void 0===e)return e;const t=[];for(let n of e){const e=S(n);void 0!==e&&t.push(e)}return t}(e.tags);if(n&&(void 0!==n.data&&(t.data=n.data),!0===n.deprecated||!1===n.deprecated)){if(!0===n.deprecated&&void 0!==a&&a.length>0){const e=a.indexOf(i.CompletionItemTag.Deprecated);-1!==e&&a.splice(e,1)}t.deprecated=n.deprecated}return void 0!==a&&a.length>0&&(t.tags=a),t},asTextEdit:_,asSymbolKind:function(e){return e<=i.SymbolKind.TypeParameter?e+1:r.SymbolKind.Property},asSymbolTag:E,asSymbolTags:function(e){return e.map(E)},asReferenceParams:function(e,t,n){return{textDocument:u(e),position:h(t),context:{includeDeclaration:n.includeDeclaration}}},asCodeActionContext:function(e){if(void 0===e||null===e)return e;let t;return e.only&&o.string(e.only.value)&&(t=[e.only.value]),r.CodeActionContext.create(T(e.diagnostics),t)},asCommand:P,asCodeLens:function(e){let t=r.CodeLens.create(f(e.range));return e.command&&(t.command=P(e.command)),e instanceof a.default&&e.data&&(t.data=e.data),t},asFormattingOptions:function(e){return{tabSize:e.tabSize,insertSpaces:e.insertSpaces}},asDocumentSymbolParams:function(e){return{textDocument:u(e)}},asCodeLensParams:function(e){return{textDocument:u(e)}},asDocumentLink:function(e){let t=r.DocumentLink.create(f(e.range));e.target&&(t.target=n(e.target)),void 0!==e.tooltip&&(t.tooltip=e.tooltip);let i=e instanceof c.default?e:void 0;return i&&i.data&&(t.data=i.data),t},asDocumentLinkParams:function(e){return{textDocument:u(e)}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(7),s=n(14),a=n(15),c=n(16);var u;!function(e){e.is=function(e){let t=e;return t&&o.string(t.language)&&o.string(t.value)}}(u||(u={})),t.createConverter=function(e){const t=e||(e=>i.Uri.parse(e));function n(e){return t(e)}function l(e){return e.map(d)}function d(e){let t=new i.Diagnostic(m(e.range),e.message,f(e.severity));return(o.number(e.code)||o.string(e.code))&&(t.code=e.code),e.source&&(t.source=e.source),e.relatedInformation&&(t.relatedInformation=function(e){return e.map(p)}(e.relatedInformation)),Array.isArray(e.tags)&&(t.tags=function(e){if(!e)return;let t=[];for(let n of e){let e=g(n);void 0!==e&&t.push(e)}return t.length>0?t:void 0}(e.tags)),t}function p(e){return new i.DiagnosticRelatedInformation(P(e.location),e.message)}function g(e){switch(e){case r.DiagnosticTag.Unnecessary:return i.DiagnosticTag.Unnecessary;case r.DiagnosticTag.Deprecated:return i.DiagnosticTag.Deprecated;default:return}}function h(e){if(e)return new i.Position(e.line,e.character)}function m(e){if(e)return new i.Range(h(e.start),h(e.end))}function f(e){if(void 0===e||null===e)return i.DiagnosticSeverity.Error;switch(e){case r.DiagnosticSeverity.Error:return i.DiagnosticSeverity.Error;case r.DiagnosticSeverity.Warning:return i.DiagnosticSeverity.Warning;case r.DiagnosticSeverity.Information:return i.DiagnosticSeverity.Information;case r.DiagnosticSeverity.Hint:return i.DiagnosticSeverity.Hint}return i.DiagnosticSeverity.Error}function v(e){if(o.string(e))return e;switch(e.kind){case r.MarkupKind.Markdown:return new i.MarkdownString(e.value);case r.MarkupKind.PlainText:return e.value;default:return`Unsupported Markup content received. Kind is: ${e.kind}`}}function y(e){switch(e){case r.CompletionItemTag.Deprecated:return i.CompletionItemTag.Deprecated}}function C(e){let t=function(e){if(void 0===e||null===e)return[];const t=[];for(let n of e){const e=y(n);void 0!==e&&t.push(e)}return t}(e.tags),n=new s.default(e.label);e.detail&&(n.detail=e.detail),e.documentation&&(n.documentation=v(e.documentation),n.documentationFormat=o.string(e.documentation)?\"$string\":e.documentation.kind),e.filterText&&(n.filterText=e.filterText);let a=function(e){return e.textEdit?e.insertTextFormat===r.InsertTextFormat.Snippet?{text:new i.SnippetString(e.textEdit.newText),range:m(e.textEdit.range),fromEdit:!0}:{text:e.textEdit.newText,range:m(e.textEdit.range),fromEdit:!0}:e.insertText?e.insertTextFormat===r.InsertTextFormat.Snippet?{text:new i.SnippetString(e.insertText),fromEdit:!1}:{text:e.insertText,fromEdit:!1}:void 0}(e);if(a&&(n.insertText=a.text,n.range=a.range,n.fromEdit=a.fromEdit),o.number(e.kind)){let[t,o]=function(e){return r.CompletionItemKind.Text<=e&&e<=r.CompletionItemKind.TypeParameter?[e-1,void 0]:[i.CompletionItemKind.Text,e]}(e.kind);n.kind=t,o&&(n.originalItemKind=o)}return e.sortText&&(n.sortText=e.sortText),e.additionalTextEdits&&(n.additionalTextEdits=w(e.additionalTextEdits)),o.stringArray(e.commitCharacters)&&(n.commitCharacters=e.commitCharacters.slice()),e.command&&(n.command=F(e.command)),!0!==e.deprecated&&!1!==e.deprecated||(n.deprecated=e.deprecated,!0===e.deprecated&&t.push(i.CompletionItemTag.Deprecated)),!0!==e.preselect&&!1!==e.preselect||(n.preselect=e.preselect),void 0!==e.data&&(n.data=e.data),t.length>0&&(n.tags=t),n}function R(e){if(e)return new i.TextEdit(m(e.range),e.newText)}function w(e){if(e)return e.map(R)}function T(e){return e.map(S)}function S(e){let t=new i.SignatureInformation(e.label);return e.documentation&&(t.documentation=v(e.documentation)),e.parameters&&(t.parameters=_(e.parameters)),t}function _(e){return e.map(E)}function E(e){let t=new i.ParameterInformation(e.label);return e.documentation&&(t.documentation=v(e.documentation)),t}function P(e){if(e)return new i.Location(t(e.uri),m(e.range))}function D(e){if(!e)return;let n={targetUri:t(e.targetUri),targetRange:m(e.targetSelectionRange),originSelectionRange:m(e.originSelectionRange),targetSelectionRange:m(e.targetSelectionRange)};if(!n.targetSelectionRange)throw new Error(\"targetSelectionRange must not be undefined or null\");return n}function b(e){if(e)return o.array(e)?0===e.length?[]:r.LocationLink.is(e[0])?e.map(e=>D(e)):e.map(e=>P(e)):r.LocationLink.is(e)?[D(e)]:P(e)}function x(e){let t=new i.DocumentHighlight(m(e.range));return o.number(e.kind)&&(t.kind=k(e.kind)),t}function k(e){switch(e){case r.DocumentHighlightKind.Text:return i.DocumentHighlightKind.Text;case r.DocumentHighlightKind.Read:return i.DocumentHighlightKind.Read;case r.DocumentHighlightKind.Write:return i.DocumentHighlightKind.Write}return i.DocumentHighlightKind.Text}function O(e){return e<=r.SymbolKind.TypeParameter?e-1:i.SymbolKind.Property}function I(e){return e}function q(e,n){let r=new i.SymbolInformation(e.name,O(e.kind),m(e.location.range),e.location.uri?t(e.location.uri):n);return e.containerName&&(r.containerName=e.containerName),r}function N(e){let t=new i.DocumentSymbol(e.name,e.detail||\"\",O(e.kind),m(e.range),m(e.selectionRange));if(void 0!==e.children&&e.children.length>0){let n=[];for(let t of e.children)n.push(N(t));t.children=n}return t}function F(e){let t={title:e.title,command:e.command};return e.arguments&&(t.arguments=e.arguments),t}const M=new Map;function L(e){if(void 0===e||null===e)return;let t=M.get(e);if(t)return t;let n=e.split(\".\");t=i.CodeActionKind.Empty;for(let e of n)t=t.append(e);return t}function A(e){if(!e)return;let t=new a.default(m(e.range));return e.command&&(t.command=F(e.command)),void 0!==e.data&&null!==e.data&&(t.data=e.data),t}function j(e){if(!e)return;let n=new i.WorkspaceEdit;return e.documentChanges?e.documentChanges.forEach(e=>{r.CreateFile.is(e)?n.createFile(t(e.uri),e.options):r.RenameFile.is(e)?n.renameFile(t(e.oldUri),t(e.newUri),e.options):r.DeleteFile.is(e)?n.deleteFile(t(e.uri),e.options):r.TextDocumentEdit.is(e)?n.set(t(e.textDocument.uri),w(e.edits)):console.error(`Unknown workspace edit change received:\\n${JSON.stringify(e,void 0,4)}`)}):e.changes&&Object.keys(e.changes).forEach(i=>{n.set(t(i),w(e.changes[i]))}),n}function K(e){let t=m(e.range),i=e.target?n(e.target):void 0,r=new c.default(t,i);return void 0!==e.tooltip&&(r.tooltip=e.tooltip),void 0!==e.data&&null!==e.data&&(r.data=e.data),r}function H(e){return new i.Color(e.red,e.green,e.blue,e.alpha)}function W(e){return new i.ColorInformation(m(e.range),H(e.color))}function U(e){let t=new i.ColorPresentation(e.label);return t.additionalTextEdits=w(e.additionalTextEdits),e.textEdit&&(t.textEdit=R(e.textEdit)),t}function $(e){if(e)switch(e){case r.FoldingRangeKind.Comment:return i.FoldingRangeKind.Comment;case r.FoldingRangeKind.Imports:return i.FoldingRangeKind.Imports;case r.FoldingRangeKind.Region:return i.FoldingRangeKind.Region}}function z(e){return new i.FoldingRange(e.startLine,e.endLine,$(e.kind))}function G(e){return new i.SelectionRange(m(e.range),e.parent?G(e.parent):void 0)}return M.set(r.CodeActionKind.Empty,i.CodeActionKind.Empty),M.set(r.CodeActionKind.QuickFix,i.CodeActionKind.QuickFix),M.set(r.CodeActionKind.Refactor,i.CodeActionKind.Refactor),M.set(r.CodeActionKind.RefactorExtract,i.CodeActionKind.RefactorExtract),M.set(r.CodeActionKind.RefactorInline,i.CodeActionKind.RefactorInline),M.set(r.CodeActionKind.RefactorRewrite,i.CodeActionKind.RefactorRewrite),M.set(r.CodeActionKind.Source,i.CodeActionKind.Source),M.set(r.CodeActionKind.SourceOrganizeImports,i.CodeActionKind.SourceOrganizeImports),{asUri:n,asDiagnostics:l,asDiagnostic:d,asRange:m,asRanges:function(e){return e.map(e=>m(e))},asPosition:h,asDiagnosticSeverity:f,asDiagnosticTag:g,asHover:function(e){if(e)return new i.Hover(function(e){if(o.string(e))return new i.MarkdownString(e);if(u.is(e))return(new i.MarkdownString).appendCodeblock(e.value,e.language);if(Array.isArray(e)){let t=[];for(let n of e){let e=new i.MarkdownString;u.is(n)?e.appendCodeblock(n.value,n.language):e.appendMarkdown(n),t.push(e)}return t}{let t;switch(e.kind){case r.MarkupKind.Markdown:return new i.MarkdownString(e.value);case r.MarkupKind.PlainText:return(t=new i.MarkdownString).appendText(e.value),t;default:return(t=new i.MarkdownString).appendText(`Unsupported Markup content received. Kind is: ${e.kind}`),t}}}(e.contents),m(e.range))},asCompletionResult:function(e){if(!e)return;if(Array.isArray(e))return e.map(C);let t=e;return new i.CompletionList(t.items.map(C),t.isIncomplete)},asCompletionItem:C,asTextEdit:R,asTextEdits:w,asSignatureHelp:function(e){if(!e)return;let t=new i.SignatureHelp;return o.number(e.activeSignature)?t.activeSignature=e.activeSignature:t.activeSignature=0,o.number(e.activeParameter)?t.activeParameter=e.activeParameter:t.activeParameter=0,e.signatures&&(t.signatures=T(e.signatures)),t},asSignatureInformations:T,asSignatureInformation:S,asParameterInformations:_,asParameterInformation:E,asDeclarationResult:function(e){if(e)return b(e)},asDefinitionResult:function(e){if(e)return b(e)},asLocation:P,asReferences:function(e){if(e)return e.map(e=>P(e))},asDocumentHighlights:function(e){if(e)return e.map(x)},asDocumentHighlight:x,asDocumentHighlightKind:k,asSymbolKind:O,asSymbolTag:I,asSymbolTags:function(e){if(void 0!==e&&null!==e)return e.map(I)},asSymbolInformations:function(e,t){if(e)return e.map(e=>q(e,t))},asSymbolInformation:q,asDocumentSymbols:function(e){if(void 0!==e&&null!==e)return e.map(N)},asDocumentSymbol:N,asCommand:F,asCommands:function(e){if(e)return e.map(F)},asCodeAction:function(e){if(void 0===e||null===e)return;let t=new i.CodeAction(e.title);return void 0!==e.kind&&(t.kind=L(e.kind)),e.diagnostics&&(t.diagnostics=l(e.diagnostics)),e.edit&&(t.edit=j(e.edit)),e.command&&(t.command=F(e.command)),void 0!==e.isPreferred&&(t.isPreferred=e.isPreferred),t},asCodeActionKind:L,asCodeActionKinds:function(e){if(void 0!==e&&null!==e)return e.map(e=>L(e))},asCodeLens:A,asCodeLenses:function(e){if(e)return e.map(e=>A(e))},asWorkspaceEdit:j,asDocumentLink:K,asDocumentLinks:function(e){if(e)return e.map(K)},asFoldingRangeKind:$,asFoldingRange:z,asFoldingRanges:function(e){if(Array.isArray(e))return e.map(z)},asColor:H,asColorInformation:W,asColorInformations:function(e){if(Array.isArray(e))return e.map(W)},asColorPresentation:U,asColorPresentations:function(e){if(Array.isArray(e))return e.map(U)},asSelectionRange:G,asSelectionRanges:function(e){if(!Array.isArray(e))return[];let t=[];for(let n of e)t.push(G(n));return t}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});t.Delayer=class{constructor(e){this.defaultDelay=e,this.timeout=void 0,this.completionPromise=void 0,this.onSuccess=void 0,this.task=void 0}trigger(e,t=this.defaultDelay){return this.task=e,t>=0&&this.cancelTimeout(),this.completionPromise||(this.completionPromise=new Promise(e=>{this.onSuccess=e}).then(()=>{this.completionPromise=void 0,this.onSuccess=void 0;var e=this.task();return this.task=void 0,e})),(t>=0||void 0===this.timeout)&&(this.timeout=setTimeout(()=>{this.timeout=void 0,this.onSuccess(void 0)},t>=0?t:this.defaultDelay)),this.completionPromise}forceDelivery(){if(!this.completionPromise)return;this.cancelTimeout();let e=this.task();return this.completionPromise=void 0,this.onSuccess=void 0,this.task=void 0,e}isTriggered(){return void 0!==this.timeout}cancel(){this.cancelTimeout(),this.completionPromise=void 0}cancelTimeout(){void 0!==this.timeout&&(clearTimeout(this.timeout),this.timeout=void 0)}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(3);function s(e,t){return void 0===e[t]&&(e[t]={}),e[t]}t.ColorProviderFeature=class extends o.TextDocumentFeature{constructor(e){super(e,r.DocumentColorRequest.type)}fillClientCapabilities(e){s(s(e,\"textDocument\"),\"colorProvider\").dynamicRegistration=!0}initialize(e,t){let[n,i]=this.getRegistration(t,e.colorProvider);n&&i&&this.register(this.messages,{id:n,registerOptions:i})}registerLanguageProvider(e){const t={provideColorPresentations:(e,t,n)=>{const i=this._client,o=(e,t,n)=>{const o={color:e,textDocument:i.code2ProtocolConverter.asTextDocumentIdentifier(t.document),range:i.code2ProtocolConverter.asRange(t.range)};return i.sendRequest(r.ColorPresentationRequest.type,o,n).then(this.asColorPresentations.bind(this),e=>(i.logFailedRequest(r.ColorPresentationRequest.type,e),Promise.resolve(null)))},s=i.clientOptions.middleware;return s.provideColorPresentations?s.provideColorPresentations(e,t,n,o):o(e,t,n)},provideDocumentColors:(e,t)=>{const n=this._client,i=(e,t)=>{const i={textDocument:n.code2ProtocolConverter.asTextDocumentIdentifier(e)};return n.sendRequest(r.DocumentColorRequest.type,i,t).then(this.asColorInformations.bind(this),e=>(n.logFailedRequest(r.ColorPresentationRequest.type,e),Promise.resolve(null)))},o=n.clientOptions.middleware;return o.provideDocumentColors?o.provideDocumentColors(e,t,i):i(e,t)}};return[i.languages.registerColorProvider(e.documentSelector,t),t]}asColor(e){return new i.Color(e.red,e.green,e.blue,e.alpha)}asColorInformations(e){return Array.isArray(e)?e.map(e=>new i.ColorInformation(this._client.protocol2CodeConverter.asRange(e.range),this.asColor(e.color))):[]}asColorPresentations(e){return Array.isArray(e)?e.map(e=>{let t=new i.ColorPresentation(e.label);return t.additionalTextEdits=this._client.protocol2CodeConverter.asTextEdits(e.additionalTextEdits),t.textEdit=this._client.protocol2CodeConverter.asTextEdit(e.textEdit),t}):[]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1);t.ConfigurationFeature=class{constructor(e){this._client=e}fillClientCapabilities(e){e.workspace=e.workspace||{},e.workspace.configuration=!0}initialize(){let e=this._client;e.onRequest(r.ConfigurationRequest.type,(t,n)=>{let i=e=>{let t=[];for(let n of e.items){let e=void 0!==n.scopeUri&&null!==n.scopeUri?this._client.protocol2CodeConverter.asUri(n.scopeUri):void 0;t.push(this.getConfiguration(e,null!==n.section?n.section:void 0))}return t},r=e.clientOptions.middleware.workspace;return r&&r.configuration?r.configuration(t,n,i):i(t)})}getConfiguration(e,t){let n=null;if(t){let r=t.lastIndexOf(\".\");if(-1===r)n=i.workspace.getConfiguration(void 0,e).get(t);else{let o=i.workspace.getConfiguration(t.substr(0,r),e);o&&(n=o.get(t.substr(r+1)))}}else{let t=i.workspace.getConfiguration(void 0,e);n={};for(let e of Object.keys(t))t.has(e)&&(n[e]=t.get(e))}return n||null}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(3);function s(e,t){return void 0===e[t]&&(e[t]={}),e[t]}t.ImplementationFeature=class extends o.TextDocumentFeature{constructor(e){super(e,r.ImplementationRequest.type)}fillClientCapabilities(e){let t=s(s(e,\"textDocument\"),\"implementation\");t.dynamicRegistration=!0,t.linkSupport=!0}initialize(e,t){let[n,i]=this.getRegistration(t,e.implementationProvider);n&&i&&this.register(this.messages,{id:n,registerOptions:i})}registerLanguageProvider(e){const t={provideImplementation:(e,t,n)=>{const i=this._client,o=(e,t,n)=>i.sendRequest(r.ImplementationRequest.type,i.code2ProtocolConverter.asTextDocumentPositionParams(e,t),n).then(i.protocol2CodeConverter.asDefinitionResult,e=>(i.logFailedRequest(r.ImplementationRequest.type,e),Promise.resolve(null))),s=i.clientOptions.middleware;return s.provideImplementation?s.provideImplementation(e,t,n,o):o(e,t,n)}};return[i.languages.registerImplementationProvider(e.documentSelector,t),t]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(3);function s(e,t){return void 0===e[t]&&(e[t]={}),e[t]}t.TypeDefinitionFeature=class extends o.TextDocumentFeature{constructor(e){super(e,r.TypeDefinitionRequest.type)}fillClientCapabilities(e){s(s(e,\"textDocument\"),\"typeDefinition\").dynamicRegistration=!0;let t=s(s(e,\"textDocument\"),\"typeDefinition\");t.dynamicRegistration=!0,t.linkSupport=!0}initialize(e,t){let[n,i]=this.getRegistration(t,e.typeDefinitionProvider);n&&i&&this.register(this.messages,{id:n,registerOptions:i})}registerLanguageProvider(e){const t={provideTypeDefinition:(e,t,n)=>{const i=this._client,o=(e,t,n)=>i.sendRequest(r.TypeDefinitionRequest.type,i.code2ProtocolConverter.asTextDocumentPositionParams(e,t),n).then(i.protocol2CodeConverter.asDefinitionResult,e=>(i.logFailedRequest(r.TypeDefinitionRequest.type,e),Promise.resolve(null))),s=i.clientOptions.middleware;return s.provideTypeDefinition?s.provideTypeDefinition(e,t,n,o):o(e,t,n)}};return[i.languages.registerTypeDefinitionProvider(e.documentSelector,t),t]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(17),r=n(0),o=n(1);function s(e,t){if(void 0!==e)return e[t]}function a(e,t){return e.filter(e=>t.indexOf(e)<0)}t.arrayDiff=a;t.WorkspaceFoldersFeature=class{constructor(e){this._client=e,this._listeners=new Map}get messages(){return o.DidChangeWorkspaceFoldersNotification.type}fillInitializeParams(e){let t=r.workspace.workspaceFolders;this.initializeWithFolders(t),e.workspaceFolders=void 0===t?null:t.map(e=>this.asProtocol(e))}initializeWithFolders(e){this._initialFolders=e}fillClientCapabilities(e){e.workspace=e.workspace||{},e.workspace.workspaceFolders=!0}initialize(e){let t=this._client;t.onRequest(o.WorkspaceFoldersRequest.type,e=>{let n=()=>{let e=r.workspace.workspaceFolders;return void 0===e?null:e.map(e=>this.asProtocol(e))},i=t.clientOptions.middleware.workspace;return i&&i.workspaceFolders?i.workspaceFolders(e,n):n()});let n,a=s(s(s(e,\"workspace\"),\"workspaceFolders\"),\"changeNotifications\");\"string\"==typeof a?n=a:!0===a&&(n=i.generateUuid()),n&&this.register(this.messages,{id:n,registerOptions:void 0})}sendInitialEvent(e){if(this._initialFolders&&e){const t=a(this._initialFolders,e),n=a(e,this._initialFolders);(n.length>0||t.length>0)&&this.doSendEvent(n,t)}else this._initialFolders?this.doSendEvent([],this._initialFolders):e&&this.doSendEvent(e,[])}doSendEvent(e,t){let n={event:{added:e.map(e=>this.asProtocol(e)),removed:t.map(e=>this.asProtocol(e))}};this._client.sendNotification(o.DidChangeWorkspaceFoldersNotification.type,n)}register(e,t){let n=t.id,i=this._client,o=r.workspace.onDidChangeWorkspaceFolders(e=>{let t=e=>{this.doSendEvent(e.added,e.removed)},n=i.clientOptions.middleware.workspace;n&&n.didChangeWorkspaceFolders?n.didChangeWorkspaceFolders(e,t):t(e)});this._listeners.set(n,o),this.sendInitialEvent(r.workspace.workspaceFolders)}unregister(e){let t=this._listeners.get(e);void 0!==t&&(this._listeners.delete(e),t.dispose())}dispose(){for(let e of this._listeners.values())e.dispose();this._listeners.clear()}asProtocol(e){return void 0===e?null:{uri:this._client.code2ProtocolConverter.asUri(e.uri),name:e.name}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(3);function s(e,t){return void 0===e[t]&&(e[t]={}),e[t]}t.FoldingRangeFeature=class extends o.TextDocumentFeature{constructor(e){super(e,r.FoldingRangeRequest.type)}fillClientCapabilities(e){let t=s(s(e,\"textDocument\"),\"foldingRange\");t.dynamicRegistration=!0,t.rangeLimit=5e3,t.lineFoldingOnly=!0}initialize(e,t){let[n,i]=this.getRegistration(t,e.foldingRangeProvider);n&&i&&this.register(this.messages,{id:n,registerOptions:i})}registerLanguageProvider(e){const t={provideFoldingRanges:(e,t,n)=>{const i=this._client,o=(e,t,n)=>{const o={textDocument:i.code2ProtocolConverter.asTextDocumentIdentifier(e)};return i.sendRequest(r.FoldingRangeRequest.type,o,n).then(this.asFoldingRanges.bind(this),e=>(i.logFailedRequest(r.FoldingRangeRequest.type,e),Promise.resolve(null)))},s=i.clientOptions.middleware;return s.provideFoldingRanges?s.provideFoldingRanges(e,t,n,o):o(e,0,n)}};return[i.languages.registerFoldingRangeProvider(e.documentSelector,t),t]}asFoldingRangeKind(e){if(e)switch(e){case r.FoldingRangeKind.Comment:return i.FoldingRangeKind.Comment;case r.FoldingRangeKind.Imports:return i.FoldingRangeKind.Imports;case r.FoldingRangeKind.Region:return i.FoldingRangeKind.Region}}asFoldingRanges(e){return Array.isArray(e)?e.map(e=>new i.FoldingRange(e.startLine,e.endLine,this.asFoldingRangeKind(e.kind))):[]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(3);function s(e,t){return void 0===e[t]&&(e[t]={}),e[t]}t.DeclarationFeature=class extends o.TextDocumentFeature{constructor(e){super(e,r.DeclarationRequest.type)}fillClientCapabilities(e){const t=s(s(e,\"textDocument\"),\"declaration\");t.dynamicRegistration=!0,t.linkSupport=!0}initialize(e,t){const[n,i]=this.getRegistration(t,e.declarationProvider);n&&i&&this.register(this.messages,{id:n,registerOptions:i})}registerLanguageProvider(e){const t={provideDeclaration:(e,t,n)=>{const i=this._client,o=(e,t,n)=>i.sendRequest(r.DeclarationRequest.type,i.code2ProtocolConverter.asTextDocumentPositionParams(e,t),n).then(i.protocol2CodeConverter.asDeclarationResult,e=>(i.logFailedRequest(r.DeclarationRequest.type,e),Promise.resolve(null))),s=i.clientOptions.middleware;return s.provideDeclaration?s.provideDeclaration(e,t,n,o):o(e,t,n)}};return[i.languages.registerDeclarationProvider(e.documentSelector,t),t]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(3);function s(e,t){return void 0===e[t]&&(e[t]=Object.create(null)),e[t]}t.SelectionRangeFeature=class extends o.TextDocumentFeature{constructor(e){super(e,r.SelectionRangeRequest.type)}fillClientCapabilities(e){s(s(e,\"textDocument\"),\"selectionRange\").dynamicRegistration=!0}initialize(e,t){let[n,i]=this.getRegistration(t,e.selectionRangeProvider);n&&i&&this.register(this.messages,{id:n,registerOptions:i})}registerLanguageProvider(e){const t={provideSelectionRanges:(e,t,n)=>{const i=this._client,o=(e,t,n)=>{const o={textDocument:i.code2ProtocolConverter.asTextDocumentIdentifier(e),positions:i.code2ProtocolConverter.asPositions(t)};return i.sendRequest(r.SelectionRangeRequest.type,o,n).then(e=>i.protocol2CodeConverter.asSelectionRanges(e),e=>(i.logFailedRequest(r.SelectionRangeRequest.type,e),Promise.resolve(null)))},s=i.clientOptions.middleware;return s.provideSelectionRanges?s.provideSelectionRanges(e,t,n,o):o(e,t,n)}};return[i.languages.registerSelectionRangeProvider(e.documentSelector,t),t]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(1),r=n(18);t.ProgressFeature=class{constructor(e){this._client=e}fillClientCapabilities(e){((function(e,t){return void 0===e[t]&&(e[t]=Object.create(null)),e[t]})(e,\"window\")).workDoneProgress=!0}initialize(){this._client.onRequest(i.WorkDoneProgressCreateRequest.type,e=>{new r.ProgressPart(this._client,e.token)})}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(1),o=n(3);function s(e,t){return void 0===e[t]&&(e[t]={}),e[t]}var a,c;!function(e){function t(e,t){if(null===t)return;let n=new i.CallHierarchyItem(e.asSymbolKind(t.kind),t.name,t.detail||\"\",e.asUri(t.uri),e.asRange(t.range),e.asRange(t.selectionRange));return void 0!==t.tags&&(n.tags=e.asSymbolTags(t.tags)),n}function n(e,n){return new i.CallHierarchyIncomingCall(t(e,n.from),e.asRanges(n.fromRanges))}function r(e,n){return new i.CallHierarchyOutgoingCall(t(e,n.to),e.asRanges(n.fromRanges))}e.asCallHierarchyItem=t,e.asCallHierarchyItems=function(e,n){if(null===n)return;return n.map(n=>t(e,n))[0]},e.asCallHierarchyIncomingCall=n,e.asCallHierarchyIncomingCalls=function(e,t){if(null!==t)return t.map(t=>n(e,t))},e.asCallHierarchyOutgoingCall=r,e.asCallHierarchyOutgoingCalls=function(e,t){if(null!==t)return t.map(t=>r(e,t))}}(a||(a={})),function(e){e.asCallHierarchyItem=function(e,t){const n={name:t.name,kind:e.asSymbolKind(t.kind),uri:e.asUri(t.uri),range:e.asRange(t.range),selectionRange:e.asRange(t.selectionRange)};return void 0!==t.detail&&t.detail.length>0&&(n.detail=t.detail),void 0!==t.tags&&(n.tags=e.asSymbolTags(t.tags)),n}}(c||(c={}));class u{constructor(e){this.client=e,this.middleware=e.clientOptions.middleware}prepareCallHierarchy(e,t,n){const i=this.client,o=this.middleware,s=(e,t,n)=>{const o=i.code2ProtocolConverter.asTextDocumentPositionParams(e,t);return i.sendRequest(r.Proposed.CallHierarchyPrepareRequest.type,o,n).then(e=>a.asCallHierarchyItems(this.client.protocol2CodeConverter,e),e=>(i.logFailedRequest(r.Proposed.CallHierarchyPrepareRequest.type,e),Promise.resolve(null)))};return o.prepareCallHierarchy?o.prepareCallHierarchy(e,t,n,s):s(e,t,n)}provideCallHierarchyIncomingCalls(e,t){const n=this.client,i=this.middleware,o=(e,t)=>{const i={item:c.asCallHierarchyItem(n.code2ProtocolConverter,e)};return n.sendRequest(r.Proposed.CallHierarchyIncomingCallsRequest.type,i,t).then(e=>a.asCallHierarchyIncomingCalls(n.protocol2CodeConverter,e),e=>(n.logFailedRequest(r.Proposed.CallHierarchyIncomingCallsRequest.type,e),Promise.resolve(null)))};return i.provideCallHierarchyIncomingCalls?i.provideCallHierarchyIncomingCalls(e,t,o):o(e,t)}provideCallHierarchyOutgoingCalls(e,t){const n=this.client,i=this.middleware,o=(e,t)=>{const i={item:c.asCallHierarchyItem(n.code2ProtocolConverter,e)};return n.sendRequest(r.Proposed.CallHierarchyOutgoingCallsRequest.type,i,t).then(e=>a.asCallHierarchyOutgoingCalls(n.protocol2CodeConverter,e),e=>(n.logFailedRequest(r.Proposed.CallHierarchyOutgoingCallsRequest.type,e),Promise.resolve(null)))};return i.provideCallHierarchyOutgingCalls?i.provideCallHierarchyOutgingCalls(e,t,o):o(e,t)}}t.CallHierarchyFeature=class extends o.TextDocumentFeature{constructor(e){super(e,r.Proposed.CallHierarchyPrepareRequest.type)}fillClientCapabilities(e){s(s(e,\"textDocument\"),\"callHierarchy\").dynamicRegistration=!0}initialize(e,t){const n=e,[i,r]=this.getRegistration(t,n.callHierarchyProvider);i&&r&&this.register(this.messages,{id:i,registerOptions:r})}registerLanguageProvider(e){const t=this._client,n=new u(t);return[i.languages.registerCallHierarchyProvider(e.documentSelector,n),n]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(0),r=n(3),o=n(1);function s(e,t){return void 0===e[t]&&(e[t]={}),e[t]}var a;!function(e){function t(e){return new i.SemanticTokensEdit(e.start,e.deleteCount,void 0!==e.data?new Uint32Array(e.data):void 0)}e.asSemanticTokens=function(e){if(void 0!==e&&null!==e)return new i.SemanticTokens(new Uint32Array(e.data),e.resultId)},e.asSemanticTokensEdit=t,e.asSemanticTokensEdits=function(e){if(void 0!==e&&null!==e)return new i.SemanticTokensEdits(e.edits.map(t),e.resultId)},e.asLegend=function(e){return e}}(a||(a={}));t.SemanticTokensFeature=class extends r.TextDocumentFeature{constructor(e){super(e,o.Proposed.SemanticTokensRequest.type)}fillClientCapabilities(e){let t=s(s(e,\"textDocument\"),\"semanticTokens\");t.dynamicRegistration=!0,t.tokenTypes=[o.Proposed.SemanticTokenTypes.comment,o.Proposed.SemanticTokenTypes.keyword,o.Proposed.SemanticTokenTypes.number,o.Proposed.SemanticTokenTypes.regexp,o.Proposed.SemanticTokenTypes.operator,o.Proposed.SemanticTokenTypes.namespace,o.Proposed.SemanticTokenTypes.type,o.Proposed.SemanticTokenTypes.struct,o.Proposed.SemanticTokenTypes.class,o.Proposed.SemanticTokenTypes.interface,o.Proposed.SemanticTokenTypes.enum,o.Proposed.SemanticTokenTypes.typeParameter,o.Proposed.SemanticTokenTypes.function,o.Proposed.SemanticTokenTypes.member,o.Proposed.SemanticTokenTypes.macro,o.Proposed.SemanticTokenTypes.variable,o.Proposed.SemanticTokenTypes.parameter,o.Proposed.SemanticTokenTypes.property,o.Proposed.SemanticTokenTypes.label],t.tokenModifiers=[o.Proposed.SemanticTokenModifiers.declaration,o.Proposed.SemanticTokenModifiers.documentation,o.Proposed.SemanticTokenModifiers.static,o.Proposed.SemanticTokenModifiers.abstract,o.Proposed.SemanticTokenModifiers.deprecated,o.Proposed.SemanticTokenModifiers.async,o.Proposed.SemanticTokenModifiers.readonly]}initialize(e,t){const n=e;let[i,r]=this.getRegistration(t,n.semanticTokensProvider);i&&r&&this.register(this.messages,{id:i,registerOptions:r})}registerLanguageProvider(e){const t={provideDocumentSemanticTokens:(e,t)=>{const n=this._client,i=n.clientOptions.middleware,r=(e,t)=>{const i={textDocument:n.code2ProtocolConverter.asTextDocumentIdentifier(e)};return n.sendRequest(o.Proposed.SemanticTokensRequest.type,i,t).then(e=>a.asSemanticTokens(e),e=>{n.logFailedRequest(o.Proposed.SemanticTokensRequest.type,e)})};return i.provideDocumentSemanticTokens?i.provideDocumentSemanticTokens(e,t,r):r(e,t)},provideDocumentSemanticTokensEdits:void 0!==e.documentProvider&&\"boolean\"!=typeof e.documentProvider&&!0===e.documentProvider.edits?(e,t,n)=>{const i=this._client,r=i.clientOptions.middleware,s=(e,t,n)=>{const r={textDocument:i.code2ProtocolConverter.asTextDocumentIdentifier(e),previousResultId:t};return i.sendRequest(o.Proposed.SemanticTokensEditsRequest.type,r,n).then(e=>o.Proposed.SemanticTokens.is(e)?a.asSemanticTokens(e):a.asSemanticTokensEdits(e),e=>{i.logFailedRequest(o.Proposed.SemanticTokensEditsRequest.type,e)})};return r.provideDocumentSemanticTokensEdits?r.provideDocumentSemanticTokensEdits(e,t,n,s):s(e,t,n)}:void 0},n=!0===e.rangeProvider?{provideDocumentRangeSemanticTokens:(e,t,n)=>{const i=this._client,r=i.clientOptions.middleware,s=(e,t,n)=>{const r={textDocument:i.code2ProtocolConverter.asTextDocumentIdentifier(e),range:i.code2ProtocolConverter.asRange(t)};return i.sendRequest(o.Proposed.SemanticTokensRangeRequest.type,r,n).then(e=>a.asSemanticTokens(e),e=>{i.logFailedRequest(o.Proposed.SemanticTokensRangeRequest.type,e)})};return r.provideDocumentRangeSemanticTokens?r.provideDocumentRangeSemanticTokens(e,t,n,s):s(e,t,n)}}:void 0,r=[],s=a.asLegend(e.legend);return r.push(i.languages.registerDocumentSemanticTokensProvider(e.documentSelector,t,s)),void 0!==n&&r.push(i.languages.registerDocumentRangeSemanticTokensProvider(e.documentSelector,n,s)),[new i.Disposable(()=>r.forEach(e=>e.dispose())),{document:t,range:n}]}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(12),r=n(5),o=\"win32\"===process.platform,s=\"darwin\"===process.platform,a=\"linux\"===process.platform;t.terminate=function(e,t){if(o)try{let n={stdio:[\"pipe\",\"pipe\",\"ignore\"]};return t&&(n.cwd=t),i.execFileSync(\"taskkill\",[\"/T\",\"/F\",\"/PID\",e.pid.toString()],n),!0}catch(e){return!1}else{if(!a&&!s)return e.kill(\"SIGKILL\"),!0;try{var n=r.join(__dirname,\"terminateProcess.sh\");return!i.spawnSync(n,[e.pid.toString()]).error}catch(e){return!1}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i,r,o,s,a,c,u=n(5),l=n(9),d=Object.prototype.toString;function p(e){return void 0!==e}function g(e){return\"[object String]\"===d.call(e)}function h(e){return JSON.parse(l.readFileSync(e,\"utf8\"))}function m(e,t){return c&&(e=\"［\"+e.replace(/[aouei]/g,\"$&$&\")+\"］\"),0===t.length?e:e.replace(/\\{(\\d+)\\}/g,function(e,n){var i=n[0],r=t[i],o=e;return\"string\"==typeof r?o=r:\"number\"!=typeof r&&\"boolean\"!=typeof r&&void 0!==r&&null!==r||(o=String(r)),o})}function f(e){return function(t,n){for(var i=[],r=2;r<arguments.length;r++)i[r-2]=arguments[r];return function(e){return\"[object Number]\"===d.call(e)}(t)?t>=e.length?void console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \"+new Error(\"\").stack):m(e[t],i):g(n)?(console.warn(\"Message \"+n+\" didn't get externalized correctly.\"),m(n,i)):void console.error(\"Broken localize call found. Stacktrace is\\n: \"+new Error(\"\").stack)}}function v(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];return m(t,n)}function y(e,t){return s[e]=t,t}function C(e,t){var n,i=u.join(a.cacheRoot,e.id+\"-\"+e.hash+\".json\"),r=!1,o=!1;try{return n=JSON.parse(l.readFileSync(i,{encoding:\"utf8\",flag:\"r\"})),function(e){var t=new Date;l.utimes(e,t,t,function(){})}(i),n}catch(e){if(\"ENOENT\"===e.code)o=!0;else{if(!(e instanceof SyntaxError))throw e;console.log(\"Syntax error parsing message bundle: \"+e.message+\".\"),l.unlink(i,function(e){e&&console.error(\"Deleting corrupted bundle \"+i+\" failed.\")}),r=!0}}if(!(n=function(e,t){var n=a.translationsConfig[e.id];if(n){var i=h(n).contents,r=h(u.join(t,\"nls.metadata.json\")),o=Object.create(null);for(var s in r){var c=r[s],l=i[e.outDir+\"/\"+s];if(l){for(var d=[],p=0;p<c.keys.length;p++){var m=c.keys[p],f=l[g(m)?m:m.key];void 0===f&&(f=c.messages[p]),d.push(f)}o[s]=d}else o[s]=c.messages}return o}}(e,t))||r)return n;if(o)try{l.writeFileSync(i,JSON.stringify(n),{encoding:\"utf8\",flag:\"wx\"})}catch(e){if(\"EEXIST\"===e.code)return n;throw e}return n}function R(e){try{return function(e){var t=h(u.join(e,\"nls.metadata.json\")),n=Object.create(null);for(var i in t){var r=t[i];n[i]=r.messages}return n}(e)}catch(e){return void console.log(\"Generating default bundle from meta data failed.\",e)}}function w(e,t){var n;if(!0===a.languagePackSupport&&void 0!==a.cacheRoot&&void 0!==a.languagePackId&&void 0!==a.translationsConfigFile&&void 0!==a.translationsConfig)try{n=C(e,t)}catch(e){console.log(\"Load or create bundle failed \",e)}if(!n){if(a.languagePackSupport)return R(t);var i=function(e){for(var t=a.language;t;){var n=u.join(e,\"nls.bundle.\"+t+\".json\");if(l.existsSync(n))return n;var i=t.lastIndexOf(\"-\");t=i>0?t.substring(0,i):void 0}if(void 0===t&&(n=u.join(e,\"nls.bundle.json\"),l.existsSync(n)))return n}(t);if(i)try{return h(i)}catch(e){console.log(\"Loading in the box message bundle failed.\",e)}n=R(t)}return n}function T(e){if(!e)return v;var t=u.extname(e);if(t&&(e=e.substr(0,e.length-t.length)),a.messageFormat===i.both||a.messageFormat===i.bundle){var n=function(e){for(var t,n=u.dirname(e);t=u.join(n,\"nls.metadata.header.json\"),!l.existsSync(t);){var i=u.dirname(n);if(i===n){t=void 0;break}n=i}return t}(e);if(n){var r=u.dirname(n),o=s[r];if(void 0===o)try{var d=JSON.parse(l.readFileSync(n,\"utf8\"));try{var g=w(d,r);o=y(r,g?{header:d,nlsBundle:g}:null)}catch(e){console.error(\"Failed to load nls bundle\",e),o=y(r,null)}}catch(e){console.error(\"Failed to read header file\",e),o=y(r,null)}if(o){var m=e.substr(r.length+1).replace(/\\\\/g,\"/\"),C=o.nlsBundle[m];return void 0===C?(console.error(\"Messages for file \"+e+\" not found. See console for details.\"),function(){return\"Messages not found.\"}):f(C)}}}if(a.messageFormat===i.both||a.messageFormat===i.file)try{var R=h(function(e){var t;if(a.cacheLanguageResolution&&t)t=t;else{if(c||!a.language)t=\".nls.json\";else for(var n=a.language;n;){var i=\".nls.\"+n+\".json\";if(l.existsSync(e+i)){t=i;break}var r=n.lastIndexOf(\"-\");r>0?n=n.substring(0,r):(t=\".nls.json\",n=null)}a.cacheLanguageResolution&&(t=t)}return e+t}(e));return Array.isArray(R)?f(R):p(R.messages)&&p(R.keys)?f(R.messages):(console.error(\"String bundle '\"+e+\"' uses an unsupported format.\"),function(){return\"File bundle has unsupported format. See console for details\"})}catch(e){\"ENOENT\"!==e.code&&console.error(\"Failed to load single file bundle\",e)}return console.error(\"Failed to load message bundle for file \"+e),function(){return\"Failed to load message bundle. See console for details.\"}}!function(e){e.file=\"file\",e.bundle=\"bundle\",e.both=\"both\"}(i=t.MessageFormat||(t.MessageFormat={})),function(e){e.standalone=\"standalone\",e.languagePack=\"languagePack\"}(r=t.BundleFormat||(t.BundleFormat={})),function(e){e.is=function(e){var t=e;return t&&p(t.key)&&p(t.comment)}}(o||(o={})),function(){if(a={locale:void 0,language:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:i.bundle},g(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG),t=void 0;if(e.availableLanguages){var n=e.availableLanguages[\"*\"];g(n)&&(t=n)}if(g(e.locale)&&(a.locale=e.locale.toLowerCase()),void 0===t?a.language=a.locale:\"en\"!==t&&(a.language=t),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(a.languagePackSupport=e._languagePackSupport),g(e._cacheRoot)&&(a.cacheRoot=e._cacheRoot),g(e._languagePackId)&&(a.languagePackId=e._languagePackId),g(e._translationsConfigFile)){a.translationsConfigFile=e._translationsConfigFile;try{a.translationsConfig=h(a.translationsConfigFile)}catch(t){e._corruptedFile&&l.writeFile(e._corruptedFile,\"corrupted\",\"utf8\",function(e){console.error(e)})}}}catch(e){}c=\"pseudo\"===a.locale,void 0,s=Object.create(null)}(),t.loadMessageBundle=T,t.config=function(e){return e&&(g(e.locale)&&(a.locale=e.locale.toLowerCase(),a.language=a.locale,void 0,s=Object.create(null)),void 0!==e.messageFormat&&(a.messageFormat=e.messageFormat),e.bundleFormat===r.standalone&&!0===a.languagePackSupport&&(a.languagePackSupport=!1)),c=\"pseudo\"===a.locale,T}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const i=n(5),r=n(0);t.getCustomDataPathsInAllWorkspaces=function(e){const t=[];return e?(e.forEach(e=>{const n=r.workspace.getConfiguration(void 0,e.uri).inspect(\"css\");if(n&&n.workspaceFolderValue&&n.workspaceFolderValue.customData){const r=n.workspaceFolderValue.customData;Array.isArray(r)&&r.forEach(n=>{\"string\"==typeof n&&t.push(i.resolve(e.uri.fsPath,n))})}}),t):t},t.getCustomDataPathsFromAllExtensions=function(){const e=[];for(const t of r.extensions.all){const n=t.packageJSON&&t.packageJSON.contributes;n&&n.css&&n.css.customData&&Array.isArray(n.css.customData)&&n.css.customData.forEach(n=>{e.push(i.resolve(t.extensionPath,n))})}return e}}]));","extractedComments":[]}