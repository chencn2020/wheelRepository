var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "fs", "util", "../common/proxy", "./stream"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var fs = require("fs");
    var util_1 = require("util");
    var proxy_1 = require("../common/proxy");
    var stream_1 = require("./stream");
    var ReadStreamProxy = /** @class */ (function (_super) {
        __extends(ReadStreamProxy, _super);
        function ReadStreamProxy(stream) {
            return _super.call(this, stream, ["open"]) || this;
        }
        ReadStreamProxy.prototype.close = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.close();
                    return [2 /*return*/];
                });
            });
        };
        ReadStreamProxy.prototype.dispose = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.instance.close();
                            return [4 /*yield*/, _super.prototype.dispose.call(this)];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return ReadStreamProxy;
    }(stream_1.ReadableProxy));
    exports.ReadStreamProxy = ReadStreamProxy;
    var WriteStreamProxy = /** @class */ (function (_super) {
        __extends(WriteStreamProxy, _super);
        function WriteStreamProxy(stream) {
            return _super.call(this, stream, ["open"]) || this;
        }
        WriteStreamProxy.prototype.close = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.close();
                    return [2 /*return*/];
                });
            });
        };
        WriteStreamProxy.prototype.dispose = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.instance.close();
                            return [4 /*yield*/, _super.prototype.dispose.call(this)];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return WriteStreamProxy;
    }(stream_1.WritableProxy));
    exports.WriteStreamProxy = WriteStreamProxy;
    var WatcherProxy = /** @class */ (function (_super) {
        __extends(WatcherProxy, _super);
        function WatcherProxy(watcher) {
            return _super.call(this, {
                bindEvents: ["change", "close", "error"],
                doneEvents: ["close", "error"],
                instance: watcher,
            }) || this;
        }
        WatcherProxy.prototype.close = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.close();
                    return [2 /*return*/];
                });
            });
        };
        WatcherProxy.prototype.dispose = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.instance.close();
                            return [4 /*yield*/, _super.prototype.dispose.call(this)];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return WatcherProxy;
    }(proxy_1.ServerProxy));
    exports.WatcherProxy = WatcherProxy;
    var FsModuleProxy = /** @class */ (function () {
        function FsModuleProxy() {
        }
        FsModuleProxy.prototype.access = function (path, mode) {
            return util_1.promisify(fs.access)(path, mode);
        };
        FsModuleProxy.prototype.appendFile = function (file, data, options) {
            return util_1.promisify(fs.appendFile)(file, data, options);
        };
        FsModuleProxy.prototype.chmod = function (path, mode) {
            return util_1.promisify(fs.chmod)(path, mode);
        };
        FsModuleProxy.prototype.chown = function (path, uid, gid) {
            return util_1.promisify(fs.chown)(path, uid, gid);
        };
        FsModuleProxy.prototype.close = function (fd) {
            return util_1.promisify(fs.close)(fd);
        };
        FsModuleProxy.prototype.copyFile = function (src, dest, flags) {
            return util_1.promisify(fs.copyFile)(src, dest, flags);
        };
        FsModuleProxy.prototype.createReadStream = function (path, options) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, new ReadStreamProxy(fs.createReadStream(path, options))];
                });
            });
        };
        FsModuleProxy.prototype.createWriteStream = function (path, options) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, new WriteStreamProxy(fs.createWriteStream(path, options))];
                });
            });
        };
        FsModuleProxy.prototype.exists = function (path) {
            return util_1.promisify(fs.exists)(path);
        };
        FsModuleProxy.prototype.fchmod = function (fd, mode) {
            return util_1.promisify(fs.fchmod)(fd, mode);
        };
        FsModuleProxy.prototype.fchown = function (fd, uid, gid) {
            return util_1.promisify(fs.fchown)(fd, uid, gid);
        };
        FsModuleProxy.prototype.fdatasync = function (fd) {
            return util_1.promisify(fs.fdatasync)(fd);
        };
        FsModuleProxy.prototype.fstat = function (fd) {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this.makeStatsSerializable;
                            return [4 /*yield*/, util_1.promisify(fs.fstat)(fd)];
                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];
                    }
                });
            });
        };
        FsModuleProxy.prototype.fsync = function (fd) {
            return util_1.promisify(fs.fsync)(fd);
        };
        FsModuleProxy.prototype.ftruncate = function (fd, len) {
            return util_1.promisify(fs.ftruncate)(fd, len);
        };
        FsModuleProxy.prototype.futimes = function (fd, atime, mtime) {
            return util_1.promisify(fs.futimes)(fd, atime, mtime);
        };
        FsModuleProxy.prototype.lchmod = function (path, mode) {
            return util_1.promisify(fs.lchmod)(path, mode);
        };
        FsModuleProxy.prototype.lchown = function (path, uid, gid) {
            return util_1.promisify(fs.lchown)(path, uid, gid);
        };
        FsModuleProxy.prototype.link = function (existingPath, newPath) {
            return util_1.promisify(fs.link)(existingPath, newPath);
        };
        FsModuleProxy.prototype.lstat = function (path) {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this.makeStatsSerializable;
                            return [4 /*yield*/, util_1.promisify(fs.lstat)(path)];
                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];
                    }
                });
            });
        };
        FsModuleProxy.prototype.lstatBatch = function (args) {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    return [2 /*return*/, Promise.all(args.map(function (a) { return _this.lstat(a.path).catch(function (e) { return e; }); }))];
                });
            });
        };
        FsModuleProxy.prototype.mkdir = function (path, mode) {
            return util_1.promisify(fs.mkdir)(path, mode);
        };
        FsModuleProxy.prototype.mkdtemp = function (prefix, options) {
            return util_1.promisify(fs.mkdtemp)(prefix, options);
        };
        FsModuleProxy.prototype.open = function (path, flags, mode) {
            return util_1.promisify(fs.open)(path, flags, mode);
        };
        FsModuleProxy.prototype.read = function (fd, length, position) {
            var buffer = Buffer.alloc(length);
            return util_1.promisify(fs.read)(fd, buffer, 0, length, position);
        };
        FsModuleProxy.prototype.readFile = function (path, options) {
            return util_1.promisify(fs.readFile)(path, options);
        };
        FsModuleProxy.prototype.readdir = function (path, options) {
            return util_1.promisify(fs.readdir)(path, options);
        };
        FsModuleProxy.prototype.readdirBatch = function (args) {
            var _this = this;
            return Promise.all(args.map(function (a) { return _this.readdir(a.path, a.options).catch(function (e) { return e; }); }));
        };
        FsModuleProxy.prototype.readlink = function (path, options) {
            return util_1.promisify(fs.readlink)(path, options);
        };
        FsModuleProxy.prototype.realpath = function (path, options) {
            return util_1.promisify(fs.realpath)(path, options);
        };
        FsModuleProxy.prototype.rename = function (oldPath, newPath) {
            return util_1.promisify(fs.rename)(oldPath, newPath);
        };
        FsModuleProxy.prototype.rmdir = function (path) {
            return util_1.promisify(fs.rmdir)(path);
        };
        FsModuleProxy.prototype.stat = function (path) {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this.makeStatsSerializable;
                            return [4 /*yield*/, util_1.promisify(fs.stat)(path)];
                        case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];
                    }
                });
            });
        };
        FsModuleProxy.prototype.statBatch = function (args) {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    return [2 /*return*/, Promise.all(args.map(function (a) { return _this.stat(a.path).catch(function (e) { return e; }); }))];
                });
            });
        };
        FsModuleProxy.prototype.symlink = function (target, path, type) {
            return util_1.promisify(fs.symlink)(target, path, type);
        };
        FsModuleProxy.prototype.truncate = function (path, len) {
            return util_1.promisify(fs.truncate)(path, len);
        };
        FsModuleProxy.prototype.unlink = function (path) {
            return util_1.promisify(fs.unlink)(path);
        };
        FsModuleProxy.prototype.utimes = function (path, atime, mtime) {
            return util_1.promisify(fs.utimes)(path, atime, mtime);
        };
        FsModuleProxy.prototype.write = function (fd, buffer, offset, length, position) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, util_1.promisify(fs.write)(fd, buffer, offset, length, position)];
                });
            });
        };
        FsModuleProxy.prototype.writeFile = function (path, data, options) {
            return util_1.promisify(fs.writeFile)(path, data, options);
        };
        FsModuleProxy.prototype.watch = function (filename, options) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, new WatcherProxy(fs.watch(filename, options))];
                });
            });
        };
        FsModuleProxy.prototype.makeStatsSerializable = function (stats) {
            return __assign({}, stats, { 
                /**
                 * We need to check if functions exist because nexe's implemented FS
                 * lib doesnt implement fs.stats properly.
                 */
                _isBlockDevice: stats.isBlockDevice ? stats.isBlockDevice() : false, _isCharacterDevice: stats.isCharacterDevice ? stats.isCharacterDevice() : false, _isDirectory: stats.isDirectory(), _isFIFO: stats.isFIFO ? stats.isFIFO() : false, _isFile: stats.isFile(), _isSocket: stats.isSocket ? stats.isSocket() : false, _isSymbolicLink: stats.isSymbolicLink ? stats.isSymbolicLink() : false });
        };
        return FsModuleProxy;
    }());
    exports.FsModuleProxy = FsModuleProxy;
});
