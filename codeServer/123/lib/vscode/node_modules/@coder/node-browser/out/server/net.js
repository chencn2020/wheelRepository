var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "net", "../common/proxy", "./stream"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var net = require("net");
    var proxy_1 = require("../common/proxy");
    var stream_1 = require("./stream");
    /* eslint-disable @typescript-eslint/no-explicit-any */
    var NetSocketProxy = /** @class */ (function (_super) {
        __extends(NetSocketProxy, _super);
        function NetSocketProxy(socket) {
            return _super.call(this, socket, ["connect", "lookup", "timeout"]) || this;
        }
        NetSocketProxy.prototype.connect = function (options, host) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.connect(options, host);
                    return [2 /*return*/];
                });
            });
        };
        NetSocketProxy.prototype.unref = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.unref();
                    return [2 /*return*/];
                });
            });
        };
        NetSocketProxy.prototype.ref = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.ref();
                    return [2 /*return*/];
                });
            });
        };
        NetSocketProxy.prototype.dispose = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.instance.end();
                            this.instance.destroy();
                            this.instance.unref();
                            return [4 /*yield*/, _super.prototype.dispose.call(this)];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        return NetSocketProxy;
    }(stream_1.DuplexProxy));
    exports.NetSocketProxy = NetSocketProxy;
    var NetServerProxy = /** @class */ (function (_super) {
        __extends(NetServerProxy, _super);
        function NetServerProxy(instance) {
            return _super.call(this, {
                bindEvents: ["close", "error", "listening"],
                doneEvents: ["close"],
                instance: instance,
            }) || this;
        }
        NetServerProxy.prototype.listen = function (handle, hostname, backlog) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.listen(handle, hostname, backlog);
                    return [2 /*return*/];
                });
            });
        };
        NetServerProxy.prototype.ref = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.ref();
                    return [2 /*return*/];
                });
            });
        };
        NetServerProxy.prototype.unref = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.unref();
                    return [2 /*return*/];
                });
            });
        };
        NetServerProxy.prototype.close = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.close();
                    return [2 /*return*/];
                });
            });
        };
        NetServerProxy.prototype.onConnection = function (cb) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.on("connection", function (socket) { return cb(new NetSocketProxy(socket)); });
                    return [2 /*return*/];
                });
            });
        };
        NetServerProxy.prototype.dispose = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.instance.close();
                    this.instance.removeAllListeners();
                    return [2 /*return*/];
                });
            });
        };
        return NetServerProxy;
    }(proxy_1.ServerProxy));
    exports.NetServerProxy = NetServerProxy;
    var NetModuleProxy = /** @class */ (function () {
        function NetModuleProxy() {
        }
        NetModuleProxy.prototype.createSocket = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, new NetSocketProxy(new net.Socket(options))];
                });
            });
        };
        NetModuleProxy.prototype.createConnection = function (target, host) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, new NetSocketProxy(net.createConnection(target, host))];
                });
            });
        };
        NetModuleProxy.prototype.createServer = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, new NetServerProxy(net.createServer(options))];
                });
            });
        };
        return NetModuleProxy;
    }());
    exports.NetModuleProxy = NetModuleProxy;
});
