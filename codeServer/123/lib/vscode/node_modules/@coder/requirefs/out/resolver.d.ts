export declare abstract class Resolver {
    private _extensions;
    constructor();
    /**
     * The list of acceptable extensions for resolving module files.
     */
    set extensions(extensions: string[]);
    protected abstract isFile(filePath: string): boolean;
    protected abstract readFile(filePath: string): Uint8Array;
    protected abstract readFile(filePath: string, encoding: "utf8"): string;
    /**
     * Normalize and resolve importPath from directoryPath.
     */
    protected resolvePath(importPath: string, directoryPath: string): string;
    private isRelativePath;
    private maybeResolvePath;
    /**
     * Try the raw path and all the valid extensions.
     */
    private maybeResolveFile;
    /**
     * Try resolving using `package.json` inside a directory. If there is no
     * `package.json` or no `module` nor `main` specified within it, load the
     * index file if there is one instead.
     */
    private maybeResolveDirectory;
    /**
     * Try resolving a module by traversing upwards and looking into the
     * `node_modules` it encounters along the way.
     */
    private maybeResolveModule;
    /**
     * Try getting a `package.json` from a directory.
     */
    private maybeGetPackageJson;
}
