{"version":3,"sources":["vs/platform/files/node/watcher/unix/fake","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/iterator.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/amd.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/console.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/normalization.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/node/decoder.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/node/pfs.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/node/extpath.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/node/processes.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherIpc.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/chokidarWatcherService.ts","vs/platform/files/node/watcher/unix/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherApp.ts"],"names":["__m","__M","deps","result","i","len","length","ErrorHandler","[object Object]","this","listeners","unexpectedErrorHandler","e","setTimeout","stack","Error","message","listener","push","_removeListener","forEach","splice","indexOf","newUnexpectedErrorHandler","emit","exports","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","error","name","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","data","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","element","pop","j","firstIndex","fn","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","key","comparator","comp","groupBy","currentGroup","undefined","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","Object","create","elem","distinctES6","Set","has","add","fromSet","set","uniqueFilter","lastIndex","first","notFoundValue","index","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","fill","num","value","indexer","merger","t","reduce","r","insert","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","map","asArray","getRandomElement","once","_this","didCall","apply","arguments","Iterator","FIN","done","_empty","next","empty","single","fromArray","fromNativeIterator","it","elements","iterator","some","collect","atMost","Number","POSITIVE_INFINITY","iterators","chain","ChainableIterator","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","console","log","dispose","disposables","d","isDisposable","thing","combinedDisposable","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","item","DISABLE_DISPOSED_WARNING","warn","_store","freeze","MutableDisposable","_value","ReferenceCollection","references","Map","reference","get","counter","object","createReferencedObject","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","iterator_1","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","join","count","topStack","topCount","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","iter","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","all","catch","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","bind","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","errors","onfinally","finally","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","isElectronRenderer","process","versions","electron","type","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","_globals","global","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","replace","msg","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","offset","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","format","newWriteableStream","reducer","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","substring","rtrim","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","fromCharCode","substrEquals","aStart","aEnd","bStart","bEnd","isHighSurrogate","charCode","isLowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","endOffset","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","pattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","test","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","Uint8Array","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","removeAccents","prototype","regex","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt8","destination","writeUInt8","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toSlashes","osPath","path_1","getRoot","firstLetter","pos","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","indexOfPath","_typeof","number","string","function","constructor","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","hasOwnProperty","isFunction","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","deepClone","keys","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","stringify","getOrDefault","k","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","_makeFsPath","change","_URI","percentDecode","components","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","uri","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","registerAndGetAmdImageURL","absolutePath","require","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","matches","file","line","column","label","isOneStringArg","consoleArgs","values","forEachable","getOrSet","mapToString","entries","setToString","mapToSerializable","serializable","serializableToMap","StringIterator","_pos","PathIterator","_splitOnBackslash","_from","_to","justSeps","ch","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","segments","_iter","_root","reset","segment","val","hasNext","oldElement","_nodeIterator","_forEach","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","touch","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","location","pathname","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","hasToIgnoreCase","network_1","parentCandidate","originalFSPath","isEqualAuthority","a1","a2","uriPath","hasTrailingPathSeparator","fsp","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","p1","p2","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","toLocalResource","ValueUUID","V4UUID","_randomHex","_oneOf","_timeHighBits","_chars","v4","_UUIDPattern","isUUID","generateUuid","asHex","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","RimRafMode","rimraf","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","stat","lstat","isDirectory","isSymbolicLink","chmod","unlink","children","readdir","child","util_1","promisify","fs","rmdir","handleDirectoryChildren","readdirSync","normalization_1","oldPath","newPath","mkdirp","mkdir","recursive","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","exists","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","readFile","writeFilePathQueues","writeFile","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","files","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","fileExists","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","found","pfs_1","prefix","ix","realpath","access","constants","R_OK","realpathSync","accessSync","State","DataType","RequestType","ResponseType","BufferReader","bytes","BufferWriter","buffer_1","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","disposable","listen","timeoutTimer","requests","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","define","nls","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","localize","useExec","cc","ee","cp","stdout","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","amd_1","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","fullPath","withExtension","Server","ipc_1","Client","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","child_process_1","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","WatcherChannel","service","watch","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","createDecorator","serviceId","serviceIds","getServiceDependencies","ctor","IInstantiationService","serviceIdentifier","FileSystemProviderErrorCode","IFileService","instantiation_1","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","nls_1","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","checkForChangeType","resources_1","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","normalized","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","files_1","gracefulFs","gracefulify","noAsar","ChokidarWatcherService","_watchers","_watcherCount","_onWatchEvent","onWatchEvent","_onLogMessage","_pollingInterval","pollingInterval","_usePolling","usePolling","enabled","_verboseLogging","watchers","newRequests","requestsByBasePath","normalizeRoots","basePath","watcher","isEqualIgnore","excludes","_watch","wacherCount","watcherOpts","ignoreInitial","ignorePermissionErrors","followSymlinks","binaryInterval","disableGlobbing","isSingleFolder","ignored","realBasePath","realBasePathLength","realBasePathDiffers","chokidarWatcher","chokidar","useFsEvents","undeliveredFileEvents","fileEventDelayer","FS_EVENT_DELAY","eventType","glob","relPath","isIgnored","now","spamWarningLogged","spamCheckStartTime","EVENT_SPAM_WARNING_THRESHOLD","watcher_1","enospcErrorLogged","localeCompare","prevRequest","i1","server","ipc_cp_1","chokidarWatcherService_1","watcherIpc_1"],"mappings":"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","file":"watcherApp.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function fromSet<T>(set: Set<T>): T[] {\n\tconst result: T[] = [];\n\tset.forEach(o => result.push(o));\n\treturn result;\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\ninterface NativeIteratorYieldResult<TYield> {\n\tdone?: false;\n\tvalue: TYield;\n}\n\ninterface NativeIteratorReturnResult<TReturn> {\n\tdone: true;\n\tvalue: TReturn;\n}\n\ntype NativeIteratorResult<T, TReturn = any> = NativeIteratorYieldResult<T> | NativeIteratorReturnResult<TReturn>;\n\nexport interface NativeIterator<T> {\n\tnext(): NativeIteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function single<T>(value: T): Iterator<T> {\n\t\tlet done = false;\n\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tdone = true;\n\t\t\t\treturn { done: false, value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromArray<T>(array: ReadonlyArray<T>, index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromNativeIterator<T>(it: NativeIterator<T>): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tconst result = it.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: result.value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function some<T>(iterator: Iterator<T> | NativeIterator<T>, fn: (t: T) => boolean): boolean {\n\t\twhile (true) {\n\t\t\tconst element = iterator.next();\n\t\t\tif (element.done) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (fn(element.value)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>, atMost: number = Number.POSITIVE_INFINITY): T[] {\n\t\tconst result: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tlet i = 0;\n\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tresult.push(next.value);\n\n\t\t\tif (++i >= atMost) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function concat<T>(...iterators: Iterator<T>[]): Iterator<T> {\n\t\tlet i = 0;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (i >= iterators.length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tconst iterator = iterators[i];\n\t\t\t\tconst result = iterator.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t}\n\n\texport function chain<T>(iterator: Iterator<T>): ChainableIterator<T> {\n\t\treturn new ChainableIterator(iterator);\n\t}\n}\n\nexport class ChainableIterator<T> implements Iterator<T> {\n\n\tconstructor(private it: Iterator<T>) { }\n\n\tnext(): IteratorResult<T> { return this.it.next(); }\n\tmap<R>(fn: (t: T) => R): ChainableIterator<R> { return new ChainableIterator(Iterator.map(this.it, fn)); }\n\tfilter(fn: (t: T) => boolean): ChainableIterator<T> { return new ChainableIterator(Iterator.filter(this.it, fn)); }\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: ISequence<T> | undefined): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else if (!arg) {\n\t\treturn Iterator.empty();\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate readonly items: readonly T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T | null) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as any as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as any as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (node === Node.Undefined) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tthis._asyncDeliveryQueue.push([e.value, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void, ): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: any): obj is ReadableStream<T> {\n\tconst candidate: ReadableStream<T> = obj;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn ((charCode - 0xD800) << 10) + (nextCharCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn ((prevCharCode - 0xD800) << 10) + (charCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, '');\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void {\n\t\tthis.buffer.set(array.buffer, offset);\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nfunction readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nfunction writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, endsWith, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && endsWith(candidate, ':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (endsWith(candidate, ':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n * todo@joh use toJSON-results\n */\nexport type Dto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: T[K] extends Function\n\t? never\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n\n/**\n * Reference a resource that might be inlined.\n * Do not inline icons that will be used by the native mac touchbar.\n * Do not rename this method unless you adopt the build scripts.\n */\nexport function registerAndGetAmdImageURL(absolutePath: string): string {\n\treturn require.toUrl(absolutePath);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(private _splitOnBackslash: boolean = true) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment!: string;\n\tvalue: E | undefined;\n\tkey!: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI) => void): void {\n\t\tthis.map.forEach((value, index) => clb(value, URI.parse(index)));\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && strings.endsWith(path, base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof ((<any>'').normalize) === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function getComparisonKey(resource: URI): string {\n\treturn hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase);\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, ignoreCase, '/');\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests wheter the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\nexport function isEqual(first: URI | undefined, second: URI | undefined, ignoreCase = hasToIgnoreCase(first)): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tif (resource.scheme === Schemas.file) {\n\t\treturn URI.file(paths.dirname(originalFSPath(resource)));\n\t}\n\tlet dirname = paths.posix.dirname(resource.path);\n\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns the fsPath of an URI where the drive letter is not normalized.\n * See #56403.\n */\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === Schemas.file) {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, ignoreCase = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (ignoreCase) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex(): string;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value: string) {\n\t\t// empty\n\t}\n\n\tpublic asHex(): string {\n\t\treturn this._value;\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static readonly _chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static readonly _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array: string[]): string {\n\t\treturn array[Math.floor(array.length * Math.random())];\n\t}\n\n\tprivate static _randomHex(): string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\nexport function v4(): UUID {\n\treturn new V4UUID();\n}\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value: string): UUID {\n\tif (!isUUID(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid(): string {\n\treturn v4().asHex();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { endsWith } from 'vs/base/common/strings';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accomodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || endsWith(source, '.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => this.activeRequests.delete(disposable));\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\tcreateInstance<Services extends BrandedService[], Ctor extends new (...services: Services) => any, R extends InstanceType<Ctor>>(t: Ctor): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[]) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as chokidar from 'chokidar';\nimport * as fs from 'fs';\nimport * as gracefulFs from 'graceful-fs';\ngracefulFs.gracefulify(fs);\nimport * as extpath from 'vs/base/common/extpath';\nimport * as glob from 'vs/base/common/glob';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { realcaseSync } from 'vs/base/node/extpath';\nimport { isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { equals } from 'vs/base/common/arrays';\n\nprocess.noAsar = true; // disable ASAR support in watcher process\n\ninterface IWatcher {\n\trequests: ExtendedWatcherRequest[];\n\tstop(): any;\n}\n\ninterface ExtendedWatcherRequest extends IWatcherRequest {\n\tparsedPattern?: glob.ParsedPattern;\n}\n\nexport class ChokidarWatcherService implements IWatcherService {\n\n\tprivate static readonly FS_EVENT_DELAY = 50; // aggregate and only emit events when changes have stopped for this duration (in ms)\n\tprivate static readonly EVENT_SPAM_WARNING_THRESHOLD = 60 * 1000; // warn after certain time span of event spam\n\n\tprivate _watchers: { [watchPath: string]: IWatcher } = Object.create(null);\n\tprivate _watcherCount = 0;\n\n\tprivate _pollingInterval?: number;\n\tprivate _usePolling?: boolean;\n\tprivate _verboseLogging: boolean | undefined;\n\n\tprivate spamCheckStartTime: number | undefined;\n\tprivate spamWarningLogged: boolean | undefined;\n\tprivate enospcErrorLogged: boolean | undefined;\n\n\tprivate readonly _onWatchEvent = new Emitter<IDiskFileChange[]>();\n\treadonly onWatchEvent = this._onWatchEvent.event;\n\n\tprivate readonly _onLogMessage = new Emitter<ILogMessage>();\n\treadonly onLogMessage: Event<ILogMessage> = this._onLogMessage.event;\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\tthis._pollingInterval = options.pollingInterval;\n\t\tthis._usePolling = options.usePolling;\n\t\tthis._watchers = Object.create(null);\n\t\tthis._watcherCount = 0;\n\n\t\treturn this.onWatchEvent;\n\t}\n\n\tsetVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis._verboseLogging = enabled;\n\n\t\treturn Promise.resolve();\n\t}\n\n\tsetRoots(requests: IWatcherRequest[]): Promise<void> {\n\t\tconst watchers = Object.create(null);\n\t\tconst newRequests: string[] = [];\n\n\t\tconst requestsByBasePath = normalizeRoots(requests);\n\n\t\t// evaluate new & remaining watchers\n\t\tfor (const basePath in requestsByBasePath) {\n\t\t\tconst watcher = this._watchers[basePath];\n\t\t\tif (watcher && isEqualRequests(watcher.requests, requestsByBasePath[basePath])) {\n\t\t\t\twatchers[basePath] = watcher;\n\t\t\t\tdelete this._watchers[basePath];\n\t\t\t} else {\n\t\t\t\tnewRequests.push(basePath);\n\t\t\t}\n\t\t}\n\n\t\t// stop all old watchers\n\t\tfor (const path in this._watchers) {\n\t\t\tthis._watchers[path].stop();\n\t\t}\n\n\t\t// start all new watchers\n\t\tfor (const basePath of newRequests) {\n\t\t\tconst requests = requestsByBasePath[basePath];\n\t\t\twatchers[basePath] = this._watch(basePath, requests);\n\t\t}\n\n\t\tthis._watchers = watchers;\n\t\treturn Promise.resolve();\n\t}\n\n\t// for test purposes\n\tget wacherCount() {\n\t\treturn this._watcherCount;\n\t}\n\n\tprivate _watch(basePath: string, requests: IWatcherRequest[]): IWatcher {\n\n\t\tconst pollingInterval = this._pollingInterval || 5000;\n\t\tconst usePolling = this._usePolling;\n\n\t\tconst watcherOpts: chokidar.WatchOptions = {\n\t\t\tignoreInitial: true,\n\t\t\tignorePermissionErrors: true,\n\t\t\tfollowSymlinks: true, // this is the default of chokidar and supports file events through symlinks\n\t\t\tinterval: pollingInterval, // while not used in normal cases, if any error causes chokidar to fallback to polling, increase its intervals\n\t\t\tbinaryInterval: pollingInterval,\n\t\t\tusePolling: usePolling,\n\t\t\tdisableGlobbing: true // fix https://github.com/Microsoft/vscode/issues/4586\n\t\t};\n\n\t\tconst excludes: string[] = [];\n\n\t\tconst isSingleFolder = requests.length === 1;\n\t\tif (isSingleFolder) {\n\t\t\t// if there's only one request, use the built-in ignore-filterering\n\t\t\texcludes.push(...requests[0].excludes);\n\t\t}\n\n\t\tif ((isMacintosh || isLinux) && (basePath.length === 0 || basePath === '/')) {\n\t\t\texcludes.push('/dev/**');\n\t\t\tif (isLinux) {\n\t\t\t\texcludes.push('/proc/**', '/sys/**');\n\t\t\t}\n\t\t}\n\n\t\texcludes.push('**/*.asar'); // Ensure we never recurse into ASAR archives\n\n\t\twatcherOpts.ignored = excludes;\n\n\t\t// Chokidar fails when the basePath does not match case-identical to the path on disk\n\t\t// so we have to find the real casing of the path and do some path massaging to fix this\n\t\t// see https://github.com/paulmillr/chokidar/issues/418\n\t\tconst realBasePath = isMacintosh ? (realcaseSync(basePath) || basePath) : basePath;\n\t\tconst realBasePathLength = realBasePath.length;\n\t\tconst realBasePathDiffers = (basePath !== realBasePath);\n\n\t\tif (realBasePathDiffers) {\n\t\t\tthis.warn(`Watcher basePath does not match version on disk and was corrected (original: ${basePath}, real: ${realBasePath})`);\n\t\t}\n\n\t\tif (this._verboseLogging) {\n\t\t\tthis.log(`Start watching with chockidar: ${realBasePath}, excludes: ${excludes.join(',')}, usePolling: ${usePolling ? 'true, interval ' + pollingInterval : 'false'}`);\n\t\t}\n\n\t\tlet chokidarWatcher: chokidar.FSWatcher | null = chokidar.watch(realBasePath, watcherOpts);\n\t\tthis._watcherCount++;\n\n\t\t// Detect if for some reason the native watcher library fails to load\n\t\tif (isMacintosh && chokidarWatcher.options && !chokidarWatcher.options.useFsEvents) {\n\t\t\tthis.warn('Watcher is not using native fsevents library and is falling back to unefficient polling.');\n\t\t}\n\n\t\tlet undeliveredFileEvents: IDiskFileChange[] = [];\n\t\tlet fileEventDelayer: ThrottledDelayer<undefined> | null = new ThrottledDelayer(ChokidarWatcherService.FS_EVENT_DELAY);\n\n\t\tconst watcher: IWatcher = {\n\t\t\trequests,\n\t\t\tstop: () => {\n\t\t\t\ttry {\n\t\t\t\t\tif (this._verboseLogging) {\n\t\t\t\t\t\tthis.log(`Stop watching: ${basePath}]`);\n\t\t\t\t\t}\n\t\t\t\t\tif (chokidarWatcher) {\n\t\t\t\t\t\tchokidarWatcher.close();\n\t\t\t\t\t\tthis._watcherCount--;\n\t\t\t\t\t\tchokidarWatcher = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (fileEventDelayer) {\n\t\t\t\t\t\tfileEventDelayer.cancel();\n\t\t\t\t\t\tfileEventDelayer = null;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.warn('Error while stopping watcher: ' + error.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tchokidarWatcher.on('all', (type: string, path: string) => {\n\t\t\tif (isMacintosh) {\n\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\tpath = normalizeNFC(path);\n\t\t\t}\n\n\t\t\tif (path.indexOf(realBasePath) < 0) {\n\t\t\t\treturn; // we really only care about absolute paths here in our basepath context here\n\t\t\t}\n\n\t\t\t// Make sure to convert the path back to its original basePath form if the realpath is different\n\t\t\tif (realBasePathDiffers) {\n\t\t\t\tpath = basePath + path.substr(realBasePathLength);\n\t\t\t}\n\n\t\t\tlet eventType: FileChangeType;\n\t\t\tswitch (type) {\n\t\t\t\tcase 'change':\n\t\t\t\t\teventType = FileChangeType.UPDATED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'add':\n\t\t\t\tcase 'addDir':\n\t\t\t\t\teventType = FileChangeType.ADDED;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'unlink':\n\t\t\t\tcase 'unlinkDir':\n\t\t\t\t\teventType = FileChangeType.DELETED;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if there's more than one request we need to do\n\t\t\t// extra filtering due to potentially overlapping roots\n\t\t\tif (!isSingleFolder) {\n\t\t\t\tif (isIgnored(path, watcher.requests)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst event = { type: eventType, path };\n\n\t\t\t// Logging\n\t\t\tif (this._verboseLogging) {\n\t\t\t\tthis.log(`${eventType === FileChangeType.ADDED ? '[ADDED]' : eventType === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${path}`);\n\t\t\t}\n\n\t\t\t// Check for spam\n\t\t\tconst now = Date.now();\n\t\t\tif (undeliveredFileEvents.length === 0) {\n\t\t\t\tthis.spamWarningLogged = false;\n\t\t\t\tthis.spamCheckStartTime = now;\n\t\t\t} else if (!this.spamWarningLogged && typeof this.spamCheckStartTime === 'number' && this.spamCheckStartTime + ChokidarWatcherService.EVENT_SPAM_WARNING_THRESHOLD < now) {\n\t\t\t\tthis.spamWarningLogged = true;\n\t\t\t\tthis.warn(`Watcher is busy catching up with ${undeliveredFileEvents.length} file changes in 60 seconds. Latest changed path is \"${event.path}\"`);\n\t\t\t}\n\n\t\t\t// Add to buffer\n\t\t\tundeliveredFileEvents.push(event);\n\n\t\t\tif (fileEventDelayer) {\n\t\t\t\t// Delay and send buffer\n\t\t\t\tfileEventDelayer.trigger(() => {\n\t\t\t\t\tconst events = undeliveredFileEvents;\n\t\t\t\t\tundeliveredFileEvents = [];\n\n\t\t\t\t\t// Broadcast to clients normalized\n\t\t\t\t\tconst res = normalizeFileChanges(events);\n\t\t\t\t\tthis._onWatchEvent.fire(res);\n\n\t\t\t\t\t// Logging\n\t\t\t\t\tif (this._verboseLogging) {\n\t\t\t\t\t\tres.forEach(r => {\n\t\t\t\t\t\t\tthis.log(` >> normalized  ${r.type === FileChangeType.ADDED ? '[ADDED]' : r.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${r.path}`);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tchokidarWatcher.on('error', (error: NodeJS.ErrnoException) => {\n\t\t\tif (error) {\n\n\t\t\t\t// Specially handle ENOSPC errors that can happen when\n\t\t\t\t// the watcher consumes so many file descriptors that\n\t\t\t\t// we are running into a limit. We only want to warn\n\t\t\t\t// once in this case to avoid log spam.\n\t\t\t\t// See https://github.com/Microsoft/vscode/issues/7950\n\t\t\t\tif (error.code === 'ENOSPC') {\n\t\t\t\t\tif (!this.enospcErrorLogged) {\n\t\t\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\tthis.error('Inotify limit reached (ENOSPC)');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.warn(error.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn watcher;\n\t}\n\n\tstop(): Promise<void> {\n\t\tfor (const path in this._watchers) {\n\t\t\tconst watcher = this._watchers[path];\n\t\t\twatcher.stop();\n\t\t}\n\n\t\tthis._watchers = Object.create(null);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate log(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'trace', message: `[File Watcher (chokidar)] ` + message });\n\t}\n\n\tprivate warn(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'warn', message: `[File Watcher (chokidar)] ` + message });\n\t}\n\n\tprivate error(message: string) {\n\t\tthis._onLogMessage.fire({ type: 'error', message: `[File Watcher (chokidar)] ` + message });\n\t}\n}\n\nfunction isIgnored(path: string, requests: ExtendedWatcherRequest[]): boolean {\n\tfor (const request of requests) {\n\t\tif (request.path === path) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (extpath.isEqualOrParent(path, request.path)) {\n\t\t\tif (!request.parsedPattern) {\n\t\t\t\tif (request.excludes && request.excludes.length > 0) {\n\t\t\t\t\tconst pattern = `{${request.excludes.join(',')}}`;\n\t\t\t\t\trequest.parsedPattern = glob.parse(pattern);\n\t\t\t\t} else {\n\t\t\t\t\trequest.parsedPattern = () => false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst relPath = path.substr(request.path.length + 1);\n\t\t\tif (!request.parsedPattern(relPath)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Normalizes a set of root paths by grouping by the most parent root path.\n * equests with Sub paths are skipped if they have the same ignored set as the parent.\n */\nexport function normalizeRoots(requests: IWatcherRequest[]): { [basePath: string]: IWatcherRequest[] } {\n\trequests = requests.sort((r1, r2) => r1.path.localeCompare(r2.path));\n\n\tlet prevRequest: IWatcherRequest | null = null;\n\tconst result: { [basePath: string]: IWatcherRequest[] } = Object.create(null);\n\tfor (const request of requests) {\n\t\tconst basePath = request.path;\n\t\tconst ignored = (request.excludes || []).sort();\n\t\tif (prevRequest && (extpath.isEqualOrParent(basePath, prevRequest.path))) {\n\t\t\tif (!isEqualIgnore(ignored, prevRequest.excludes)) {\n\t\t\t\tresult[prevRequest.path].push({ path: basePath, excludes: ignored });\n\t\t\t}\n\t\t} else {\n\t\t\tprevRequest = { path: basePath, excludes: ignored };\n\t\t\tresult[basePath] = [prevRequest];\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction isEqualRequests(r1: readonly IWatcherRequest[], r2: readonly IWatcherRequest[]) {\n\treturn equals(r1, r2, (a, b) => a.path === b.path && isEqualIgnore(a.excludes, b.excludes));\n}\n\nfunction isEqualIgnore(i1: readonly string[], i2: readonly string[]) {\n\treturn equals(i1, i2);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { WatcherChannel } from 'vs/platform/files/node/watcher/unix/watcherIpc';\nimport { ChokidarWatcherService } from 'vs/platform/files/node/watcher/unix/chokidarWatcherService';\n\nconst server = new Server('watcher');\nconst service = new ChokidarWatcherService();\nconst channel = new WatcherChannel(service);\nserver.registerChannel('watcher', channel);"]}