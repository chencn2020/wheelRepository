{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/repo/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/collections.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/iterator.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/repo/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/repo/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/repo/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/nodeProxy.ts","vs/server/file:/repo/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/repo/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/repo/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/repo/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/repo/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/repo/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/repo/lib/vscode/src/vs/server/entry.ts"],"names":["__m","__M","deps","result","i","len","length","_factory","sharedObj","_performanceEntries","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","entries","timestamp","getEntry","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","hasOwnProperty","prototype","call","size","count","first","forEach","callback","groupBy","groupFn","element","fromMap","original","mapValues","v","SetMap","[object Object]","this","Map","get","Set","set","add","delete","fn","createDecorator","mapFn","descriptor","fnKey","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","pop","j","firstIndex","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","has","fromSet","uniqueFilter","lastIndex","notFoundValue","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","fill","num","indexer","merger","t","reduce","r","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","getRandomElement","once","_this","didCall","arguments","Iterator","FIN","done","_empty","next","empty","single","fromArray","fromNativeIterator","it","elements","iterator","some","collect","atMost","POSITIVE_INFINITY","iterators","chain","ChainableIterator","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","max","MappedIterator","MappedNavigator","navigator","previous","parent","last","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","isAtPropertyKey","setPreviousNode","colonOffset","sep","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","dispose","disposables","isDisposable","thing","combinedDisposable","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","freeze","MutableDisposable","_value","ReferenceCollection","references","reference","counter","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","iterator_1","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","remove","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","iter","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","consume","iLimitedTask","consumed","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","isElectronRenderer","versions","electron","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","_globals","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","format","newWriteableStream","WriteableStreamImpl","isReadableStream","pause","resume","destroy","every","state","flowing","ended","destroyed","flowData","flowErrors","flowEnd","write","fullDataBuffer","consumeReadable","readable","chunks","chunk","read","consumeReadableWithLimit","maxChunks","lastReadChunk","consumeStream","stream","consumeStreamWithLimit","wrapperStream","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","abs","substrEquals","aStart","aEnd","bStart","bEnd","isHighSurrogate","charCode","isLowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","test","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","Uint8Array","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","removeAccents","regex","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt8","destination","writeUInt8","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","indexOfPath","_typeof","number","string","function","constructor","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","assertType","condition","assertIsDefined","assertAllDefined","isFunction","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","types_1","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","getOrDefault","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","_makeFsPath","change","_URI","percentDecode","components","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","uri","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","registerAndGetAmdImageURL","absolutePath","require","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","line","column","label","isOneStringArg","consoleArgs","forEachable","getOrSet","mapToString","setToString","mapToSerializable","serializable","serializableToMap","StringIterator","_pos","PathIterator","_splitOnBackslash","_from","_to","justSeps","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","reset","val","hasNext","oldElement","_nodeIterator","_forEach","ResourceMap","toKey","clb","resourceMap","Touch","LinkedMap","_map","_head","_tail","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","replacer","flags","revive","depth","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","hasToIgnoreCase","network_1","parentCandidate","originalFSPath","isEqualAuthority","a1","a2","uriPath","hasTrailingPathSeparator","fsp","fromPath","toPath","getComparisonKey","basenameOrAuthority","second","p1","p2","joinPath","pathFragment","joinedPath","normalizePath","normalizedPath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","resolvePath","newURI","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forPaths","glob_1","rootExpression","findSubstr","toLocalResource","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","tildify","userHome","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","normalized","untildify","ellipsis","unc","home","Type","shorten","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","uriTransformer","_uriTransformer","transformOutgoing","transformOutgoingScheme","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformIncomingURIs","transformAndReviveIncomingURIs","ValueUUID","V4UUID","_randomHex","_oneOf","_timeHighBits","_chars","v4","_UUIDPattern","isUUID","generateUuid","asHex","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","__$__nodeRequire","cmdline","windows","unix","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","child_process_1","stdout","stdin","macAddressCandidate","machineId","virtualMachineHint","mac","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","os_1","networkInterfaces","_isVirtualMachineMacAdress","getMachineId","crypto","resolve_1","reject_1","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","amd_1","getAppDataPath","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","newPath","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","removeAllListeners","folderChildren","raw","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","State","DataType","RequestType","ResponseType","BufferReader","bytes","BufferWriter","buffer_1","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","send","header","body","sendBuffer","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","uninitializedPromise","whenInitialized","sendRequest","cancellationTokenListener","onResponse","Idle","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","getNextTickChannel","didTick","StaticRouter","hub","route","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_register","_state","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","PersistentProtocol","initialChunk","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","initialDataChunk","flushBuffer","toSend","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","propertyIsEvent","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","Proxy","_target","propKey","methodArgs","NodeSocket","_listener","off","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","bytesLeft","m3","m2","m1","generateRandomPipeName","randomSuffix","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","seconds","nls_1","localize","toLocalISOString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","types","detail","getParseErrorMessage","errorCode","Severity","_warning","_warn","_info","_displayStrings","Warning","Info","fromValue","Ignore","default","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","ee","cp","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","transformIncomingURI","transformIncomingExtension","extension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","local","zip","unzip","install","getManifest","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","force","nlsRegex","localizeManifest","ExtensionsLifecycle","environmentService","logService","processesLimiter","script","parseScript","info","identifier","version","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","errorMessage_1","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","VERSION_REGEXP","isValidVersionStr","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","isIExtensionIdentifier","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","areSameExtensions","ExtensionIdentifierWithVersion","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","properties","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","parseBuiltInExtensions","rawJson","productQuality","parsed","_b","forQualities","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","WatcherChannel","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","FileWatcher","onDidFilesChange","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","watcherIpc_1","setFolders","watcherOptions","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","Graph","_hashFn","_nodes","collections_1","outgoing","fromNode","lookupOrInsertNode","toNode","incoming","_key","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IDownloadService","instantiation_1","IEnvironmentService","BACKUPS","LogsDataCleaner","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","IExtensionManagementService","IExtensionGalleryService","SortBy","SortOrder","StatisticType","InstallOperation","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","ExtensionsLabel","ExtensionsChannelId","PreferencesLabel","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","checkForChangeType","getOfType","hasType","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","bytesRead","allowedRemainingBytes","bufferSize","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","watcher_1","ServiceCollection","_entries","instanceOrDescriptor","_enableTracing","_canUseProxy","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","getValue","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","LanguageType","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","ConsoleLogInMainService","MultiplexLogService","logServices","critical","DelegatedLogService","NullLogService","getLogLevel","Off","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onDidRunOperation","onDidRunOperation","_onError","_onDidFilesChange","activeWatchers","writeQueues","providerDisposables","onDidChangeFile","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","resolveMetadata","trie","toFileStat","Boolean","findSuperstr","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","validateWriteFile","stream_1","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","transformFileReadStream","io_1","validateReadFileLimits","tooLargeErrorResult","sourceProvider","targetProvider","doMoveCopy","isSameResourceWithDifferentPathCase","doValidateMoveCopy","del","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","isPathCaseSensitive","directory","directoriesToCreate","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","toMapKey","writeQueue","readableOrStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","log_1","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","usePolling","watcherService_1","_c","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","master","logger","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","_logger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","_log","disposeLogger","drop","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","actions","product","nameLong","nameShort","urlProtocol","rawProductConfiguration","rootPath","pkg","process_1","dataFolderName","getIPCHandle","product_1","getWin32IPCHandle","vscodePortable","xdgRuntimeDir","scope","getNixIPCHandle","EnvironmentService","_args","_execPath","date_1","appRoot","execPath","cliPath","isBuilt","applicationName","homedir","parseUserDataDir","appSettingsHome","userRoamingDataHome","settingsResource","resources","userDataSyncHome","settingsSyncPreviewResource","keybindingsSyncPreviewResource","userDataSyncLogResource","machineSettingsHome","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","debugExtensionHost","parseExtensionHostPort","logExtensionHostCommunication","wait","mainIPCHandle","sharedIPCHandle","nodeCachedDataDir","galleryMachineIdResource","disableUpdates","disableCrashReporter","driverHandle","driverVerbose","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","decorators_1","parseSearchPort","systemLanguages","quality","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionManagementUtil_1","extensionIdentifier","installed","updated","extensionManagement_1","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","crypto_1","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultOverridesConfigurationNode","title","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","allOf","defaultConfigurations","defaultConfiguration","defaults","propertySchema","description","$ref","overrideIdentifier","updateOverridePropertyPatternKey","propertyKeys","validateProperty","included","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","curr","getConfigurationValue","settingPath","component","accessSetting","overrideIdentifierFromKey","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","fromOverride","toOverride","toOverrides","configurationRegistry_1","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","json","filterByScope","filterOverriddenProperties","getScope","UserSettings","userSettingsResource","_onDidChange","onDidChange","parser","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","reloadConfigurationScheduler","reloadConfiguration","onDidDefaultConfigurationChange","loadConfiguration","toData","onDidChangeUserConfiguration","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","loadSync","loadAsync","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","init","getItem","setItem","WillSaveStateReason","IStorageService","StorageScope","InMemoryStorageService","_onDidChangeStorage","onDidChangeStorage","_onWillSaveState","onWillSaveState","globalCache","workspaceCache","fallbackValue","getCache","valueStr","logStorage","toWorkspace","reason","NONE","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","addListener","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLog2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","crashReporterIdStorageKey","Flags","FilterType","flagsToString","f","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","download","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","extensionPack","localizedLanguages","preview","ExtensionGalleryService","requestService","productService","storageService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","ExcludeNonValidated","withPage","withFilter","Target","ExcludeWithFlags","Unpublished","ExtensionId","ExtensionName","queryGallery","galleryExtensions","rawExtension","versionAsset","getLastValidExtensionVersion","rawVersion","isEnabled","names","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","withSortBy","ids","withSortOrder","total","firstPage","getPage","pageIndex","ct","nextPageQuery","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","startTime","duration","publicLog","operationParam","downloadAsset","getAsset","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","slow","X-Market-Client-Id","User-Agent","store","telemetry_1","productService_1","storage_1","TelemetryService","_configurationService","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","_enabled","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","trueMachineId","correctedMachineId","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","flattenKeys","flatKeys","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","remoteAuthority","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","telemetryUtils_1","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","INodeProxyService","NodeProxyChannel","NodeProxyChannelClient","TelemetryChannel","setEnabled","getTelemetryInfo","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","logger_1","named","metadataPath","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","skipWebSocketFrames","ipc_net_2","rawMessage","authenticate","_message","sendMessage","sendControl","uriTransformerPath","rawURITransformer","rawURITransformerFactory","encodePath","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","environment","getUnderlyingSocket","sendInitMessage","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","VSCODE_NLS_CONFIG","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","semver","valid","_isStringArray","activationEvents","normalizedAbsolutePath","ExtensionScannerInput","tanslations","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","rcompare","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","w","req","FileProviderChannel","watchers","filechange","session","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","disableTelemetry","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","NodeProxyService","_serviceBrand","_$onMessage","$onMessage","_onDown","onDown","_onUp","onUp","node_browser_1","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChangeCapabilities","getConnection","setCaseSensitive","getEnvironment","remoteAgentEnvironment","registerListeners","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionManagementError","parseManifest","ExtensionManagementService","galleryService","downloadService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","_devSystemExtensionsPath","_devSystemExtensionsFilePath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","manifestCache","extensionsManifestCache_1","extensionLifecycle","extensionLifecycle_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","identifierWithVersion","installedExtensions","existing","removeExtension","gt","unsetUninstalledAndGetLocal","getMetadata","installFromZipPath","downloadedLocation","toNonCancellablePromise","installExtension","installDependenciesAndPackExtensions","onDidInstallExtensionSuccess","gallery","reportTelemetry","getTelemetryEvent","onDidInstallExtensionFailure","checkAndGetCompatibleVersion","cancellablePromise","successCallback","errorCallback","existingExtension","downloadInstallableExtension","installableExtension","neq","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","removeUninstalledExtension","joinErrors","extractAndInstall","isUninstalled","unsetUninstalled","folderName","tempPath","extensionPath","extractAndRename","setMetadata","saveMetadataForLocalExtension","extractPath","renamePath","retryUntil","dependenciesAndPackExtensions","old","galleryIdentifier","galleryResult","extensionsToInstall","rollback","extensionToUninstall","checkForDependenciesAndUninstall","localExtension","manifestPath","findGalleryExtensionByName","findGalleryExtensionById","errorOrErrors","previousValue","currentValue","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","uninstallExtension","doUninstall","checked","extensionsPack","packOfPackedExtensions","packedExtension","scanUserExtensions","userExtensions","u","reportStatistic","errorcode","promises","scanSystemExtensions","systemExtensionsPromise","devSystemExtensionsPromise","getDevSystemExtensionsList","devSystemExtensionsList","devSystemExtensionsPath","systemExtensions","devSystemExtensions","excludeOutdated","getUninstalledExtensions","scanAllUserExtensions","uninstalled","limiter","extensionsFolders","extensionFolder","extensionNls_1","readManifest","readmeUrl","changelogUrl","removeUninstalledExtensions","removeOutdatedExtensions","postUninstall","toRemove","withUninstalledExtensions","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","devSystemExtensionsFilePath","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","includes","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","instantiationService","extensionGalleryService","argv","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","failed","installedExtensionsManifests","updateLocalizationsCache","responseText","notFound","installedExtension","newer","getExtensionId","uninstalledExtensions","localizationService","createInstance","eventPrefix","environmentService_1","spdlogService_1","fileService_1","diskFileSystemProvider","registerProvider","configurationService_1","initialize","state_1","stateService_1","instantiationService_1","invokeFunction","accessor","envService","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","parseUrl","workbenchWebConfiguration","workspaceUri","folderUri","remoteUserDataUri","productConfiguration","nlsConfiguration","reconnectionToken","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","nodeProxy_1","disposeOldOfflineConnections","tunnel","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","insights_1","id_1","localizations_2","channel_1","logsDataCleaner_1","extensionManagementIpc_1","requestIpc_1","ipc_2","remoteAgentFileSystemChannel_1","logger_2","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","field","cli","handleWebSocket"],"mappings":"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","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj._performanceEntries = sharedObj._performanceEntries || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj._performanceEntries.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj._performanceEntries.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getEntry(name) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tif (entries[i] === name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: entries[i],\n\t\t\t\t\ttimestamp: entries[i + 1],\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj._performanceEntries;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj._performanceEntries.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetEntry: getEntry,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\nlet sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\t// invalid context...\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, \"utf8\"));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[90/*vs/base/node/languagePacks*/], __M([41/*path*/,19/*fs*/,165/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function size<T>(from: IStringDictionary<T> | INumberDictionary<T>): number {\n\tlet count = 0;\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nexport function first<T>(from: IStringDictionary<T> | INumberDictionary<T>): T | undefined {\n\tfor (const key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\treturn (from as any)[key];\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]> {\n\tconst result: IStringDictionary<T[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}\n\nexport function mapValues<V>(map: Map<any, V>): V[] {\n\tconst result: V[] = [];\n\tmap.forEach(v => result.push(v));\n\treturn result;\n}\n\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function fromSet<T>(set: Set<T>): T[] {\n\tconst result: T[] = [];\n\tset.forEach(o => result.push(o));\n\treturn result;\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\ninterface NativeIteratorYieldResult<TYield> {\n\tdone?: false;\n\tvalue: TYield;\n}\n\ninterface NativeIteratorReturnResult<TReturn> {\n\tdone: true;\n\tvalue: TReturn;\n}\n\ntype NativeIteratorResult<T, TReturn = any> = NativeIteratorYieldResult<T> | NativeIteratorReturnResult<TReturn>;\n\nexport interface NativeIterator<T> {\n\tnext(): NativeIteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function single<T>(value: T): Iterator<T> {\n\t\tlet done = false;\n\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tdone = true;\n\t\t\t\treturn { done: false, value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromArray<T>(array: ReadonlyArray<T>, index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromNativeIterator<T>(it: NativeIterator<T>): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tconst result = it.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: result.value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function some<T>(iterator: Iterator<T> | NativeIterator<T>, fn: (t: T) => boolean): boolean {\n\t\twhile (true) {\n\t\t\tconst element = iterator.next();\n\t\t\tif (element.done) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (fn(element.value)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>, atMost: number = Number.POSITIVE_INFINITY): T[] {\n\t\tconst result: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tlet i = 0;\n\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tresult.push(next.value);\n\n\t\t\tif (++i >= atMost) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function concat<T>(...iterators: Iterator<T>[]): Iterator<T> {\n\t\tlet i = 0;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (i >= iterators.length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tconst iterator = iterators[i];\n\t\t\t\tconst result = iterator.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t}\n\n\texport function chain<T>(iterator: Iterator<T>): ChainableIterator<T> {\n\t\treturn new ChainableIterator(iterator);\n\t}\n}\n\nexport class ChainableIterator<T> implements Iterator<T> {\n\n\tconstructor(private it: Iterator<T>) { }\n\n\tnext(): IteratorResult<T> { return this.it.next(); }\n\tmap<R>(fn: (t: T) => R): ChainableIterator<R> { return new ChainableIterator(Iterator.map(this.it, fn)); }\n\tfilter(fn: (t: T) => boolean): ChainableIterator<T> { return new ChainableIterator(Iterator.filter(this.it, fn)); }\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: ISequence<T> | undefined): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else if (!arg) {\n\t\treturn Iterator.empty();\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate readonly items: readonly T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T | null) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as any as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as any as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (node === Node.Undefined) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tthis._asyncDeliveryQueue.push([e.value, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tgetValue(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void, ): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (lastSlash !== i - 1 && dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length === 2 || res.length === 1) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tif (res.length > 0) {\n\t\t\t\t\t\tres += `${separator}..`;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = '..';\n\t\t\t\t\t}\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += separator + path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t((pathObject.name || '') + (pathObject.ext || ''));\n\tif (!dir) {\n\t\treturn base;\n\t}\n\tif (dir === pathObject.root) {\n\t\treturn dir + base;\n\t}\n\treturn dir + sep + base;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t} else if (!resolvedDevice) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)['=' + resolvedDevice] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 3).toLowerCase() !==\n\t\t\t\t\tresolvedDevice.toLowerCase() + '\\\\') {\n\t\t\t\t\tpath = resolvedDevice + '\\\\';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len > 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// Possible UNC root\n\n\t\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\t\tisAbsolute = true;\n\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\t\tlet j = 2;\n\t\t\t\t\t\tlet last = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEnd = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t\t// Possible device root\n\n\t\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\t\trootEnd = 2;\n\t\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator\n\t\t\t\trootEnd = 1;\n\t\t\t\tisAbsolute = true;\n\t\t\t}\n\n\t\t\tif (device.length > 0 &&\n\t\t\t\tresolvedDevice.length > 0 &&\n\t\t\t\tdevice.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length === 0 && device.length > 0) {\n\t\t\t\tresolvedDevice = device;\n\t\t\t}\n\t\t\tif (!resolvedAbsolute) {\n\t\t\t\tresolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t}\n\n\t\t\tif (resolvedDevice.length > 0 && resolvedAbsolute) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n\t\t\t'.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t\t// path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t\t// is nothing left to process\n\n\t\t\t\t\t\t\t\treturn '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\tdevice = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t\t\t// indicator\n\t\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid unnecessary\n\t\t\t// work\n\t\t\treturn '\\\\';\n\t\t}\n\n\t\tlet tail;\n\t\tif (rootEnd < len) {\n\t\t\ttail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\',\n\t\t\t\tisPathSeparator);\n\t\t} else {\n\t\t\ttail = '';\n\t\t}\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\tif (isAbsolute) {\n\t\t\t\tif (tail.length > 0) {\n\t\t\t\t\treturn '\\\\' + tail;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '\\\\';\n\t\t\t\t}\n\t\t\t} else if (tail.length > 0) {\n\t\t\t\treturn tail;\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else if (isAbsolute) {\n\t\t\tif (tail.length > 0) {\n\t\t\t\treturn device + '\\\\' + tail;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn device + '\\\\';\n\t\t\t}\n\t\t} else if (tail.length > 0) {\n\t\t\treturn device + tail;\n\t\t} else {\n\t\t\treturn device;\n\t\t}\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\tif (isPathSeparator(code)) {\n\t\t\treturn true;\n\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t// Possible device root\n\n\t\t\tif (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '\\\\' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1) {\n\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t\t++slashCount;\n\t\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\tfor (; slashCount < joined.length; ++slashCount) {\n\t\t\t\tif (!isPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = '\\\\' + joined.slice(slashCount);\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\tfor (; fromEnd - 1 > fromStart; --fromEnd) {\n\t\t\tif (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\tfor (; toEnd - 1 > toStart; --toEnd) {\n\t\t\tif (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length && lastCommonSep === -1) {\n\t\t\treturn toOrig;\n\t\t}\n\n\t\tlet out = '';\n\t\tif (lastCommonSep === -1) {\n\t\t\tlastCommonSep = 0;\n\t\t}\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '\\\\..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + toOrig.slice(toStart + lastCommonSep, toEnd);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn toOrig.slice(toStart, toEnd);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length >= 3) {\n\t\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\t\treturn '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\t\t\treturn '\\\\\\\\?\\\\' + resolvedPath;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = offset = 1;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = offset = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\trootEnd = offset = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn path;\n\t\t}\n\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tend = rootEnd;\n\t\t\t}\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2) {\n\t\t\tconst drive = path.charCodeAt(0);\n\t\t\tif (isWindowsDeviceRoot(drive)) {\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\tstart = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('\\\\', pathObject);\n\t},\n\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len > 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\trootEnd = 1;\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\tif (!isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\tfor (; j < len; ++j) {\n\t\t\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t\t// We matched a UNC root only\n\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code)) {\n\t\t\t\t// Possible device root\n\n\t\t\t\tif (path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t\trootEnd = 2;\n\t\t\t\t\tif (len > 2) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t\t\tif (len === 3) {\n\t\t\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trootEnd = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t\t// unnecessary work\n\t\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isPathSeparator(code)) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\tret.root = ret.dir = path;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t}\n\t\t} else {\n\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\tret.base = path.slice(startPart, end);\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = process.cwd();\n\t\t\t}\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = path + '/' + resolvedPath;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\tif (resolvedPath.length > 0) {\n\t\t\t\treturn '/' + resolvedPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t} else if (resolvedPath.length > 0) {\n\t\t\treturn resolvedPath;\n\t\t} else {\n\t\t\treturn '.';\n\t\t}\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0 && !isAbsolute) {\n\t\t\tpath = '.';\n\t\t}\n\t\tif (path.length > 0 && trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\tif (isAbsolute) {\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = arguments[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += '/' + arg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 1;\n\t\tfor (; fromStart < from.length; ++fromStart) {\n\t\t\tif (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = (fromEnd - fromStart);\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 1;\n\t\tfor (; toStart < to.length; ++toStart) {\n\t\t\tif (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst toEnd = to.length;\n\t\tconst toLen = (toEnd - toStart);\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i <= length; ++i) {\n\t\t\tif (i === length) {\n\t\t\t\tif (toLen > length) {\n\t\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t\t}\n\t\t\t\t} else if (fromLen > length) {\n\t\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t\t// For example: from='/foo'; to='/'\n\t\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tconst toCode = to.charCodeAt(toStart + i);\n\t\t\tif (fromCode !== toCode) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (out.length === 0) {\n\t\t\t\t\tout += '..';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout += '/..';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn out + to.slice(toStart + lastCommonSep);\n\t\t}\n\t\telse {\n\t\t\ttoStart += lastCommonSep;\n\t\t\tif (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\n\t\t\t\t++toStart;\n\t\t\t}\n\t\t\treturn to.slice(toStart);\n\t\t}\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext.length === path.length && ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t}\n\t\t\telse if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t} else {\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (end === -1) {\n\t\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t\t// path component\n\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\tend = i + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end === -1) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat(pathObject): string {\n\t\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t\t}\n\n\t\treturn _format('/', pathObject);\n\t},\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\tif (end !== -1) {\n\t\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\t\tret.base = ret.name = path.slice(1, end);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (startPart === 0 && isAbsolute) {\n\t\t\t\tret.name = path.slice(1, startDot);\n\t\t\t\tret.base = path.slice(1, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t}\n\t\t\tret.ext = path.slice(startDot, end);\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t}\n\t\telse if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t */\n\twrite(data: T): void;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\nexport function isReadableStream<T>(obj: any): obj is ReadableStream<T> {\n\tconst candidate: ReadableStream<T> = obj;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer);\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tconstructor(private reducer: IReducer<T>) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: IReducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlet wrapperStream: WriteableStream<T> | undefined = undefined;\n\n\t\tstream.on('data', data => {\n\n\t\t\t// If we reach maxChunks, we start to return a stream\n\t\t\t// and make sure that any data we have already read\n\t\t\t// is in it as well\n\t\t\tif (!wrapperStream && chunks.length === maxChunks) {\n\t\t\t\twrapperStream = newWriteableStream(reducer);\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.write(data);\n\n\t\t\t\treturn resolve(wrapperStream);\n\t\t\t}\n\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.write(data);\n\t\t\t} else {\n\t\t\t\tchunks.push(data);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('error', error => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twrapperStream.error(error);\n\t\t\t} else {\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t});\n\n\t\tstream.on('end', () => {\n\t\t\tif (wrapperStream) {\n\t\t\t\twhile (chunks.length) {\n\t\t\t\t\twrapperStream.write(chunks.shift()!);\n\t\t\t\t}\n\n\t\t\t\twrapperStream.end();\n\t\t\t} else {\n\t\t\t\treturn resolve(reducer(chunks));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn ((charCode - 0xD800) << 10) + (nextCharCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn ((prevCharCode - 0xD800) << 10) + (charCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, '');\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void {\n\t\tthis.buffer.set(array.buffer, offset);\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nfunction readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nfunction writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, endsWith, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && endsWith(candidate, ':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (endsWith(candidate, ':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n * todo@joh use toJSON-results\n */\nexport type Dto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: T[K] extends Function\n\t? never\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n\n/**\n * Reference a resource that might be inlined.\n * Do not inline icons that will be used by the native mac touchbar.\n * Do not rename this method unless you adopt the build scripts.\n */\nexport function registerAndGetAmdImageURL(absolutePath: string): string {\n\treturn require.toUrl(absolutePath);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Iterator, IteratorResult, FIN } from './iterator';\n\n\nexport function values<V = any>(set: Set<V>): V[];\nexport function values<K = any, V = any>(map: Map<K, V>): V[];\nexport function values<V>(forEachable: { forEach(callback: (value: V, ...more: any[]) => any): void }): V[] {\n\tconst result: V[] = [];\n\tforEachable.forEach(value => result.push(value));\n\treturn result;\n}\n\nexport function keys<K, V>(map: Map<K, V>): K[] {\n\tconst result: K[] = [];\n\tmap.forEach((_value, key) => result.push(key));\n\n\treturn result;\n}\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport function mapToSerializable(map: Map<string, string>): [string, string][] {\n\tconst serializable: [string, string][] = [];\n\n\tmap.forEach((value, key) => {\n\t\tserializable.push([key, value]);\n\t});\n\n\treturn serializable;\n}\n\nexport function serializableToMap(serializable: [string, string][]): Map<string, string> {\n\tconst items = new Map<string, string>();\n\n\tfor (const [key, value] of serializable) {\n\t\titems.set(key, value);\n\t}\n\n\treturn items;\n}\n\nexport interface IKeyIterator {\n\treset(key: string): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(private _splitOnBackslash: boolean = true) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\n\t\tlet aPos = 0;\n\t\tconst aLen = a.length;\n\t\tlet thisPos = this._from;\n\n\t\twhile (aPos < aLen && thisPos < this._to) {\n\t\t\tconst cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n\t\t\tif (cmp !== 0) {\n\t\t\t\treturn cmp;\n\t\t\t}\n\t\t\taPos += 1;\n\t\t\tthisPos += 1;\n\t\t}\n\n\t\tif (aLen === this._to - this._from) {\n\t\t\treturn 0;\n\t\t} else if (aPos < aLen) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nclass TernarySearchTreeNode<E> {\n\tsegment!: string;\n\tvalue: E | undefined;\n\tkey!: string;\n\tleft: TernarySearchTreeNode<E> | undefined;\n\tmid: TernarySearchTreeNode<E> | undefined;\n\tright: TernarySearchTreeNode<E> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<E> {\n\n\tstatic forPaths<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<E> {\n\t\treturn new TernarySearchTree<E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator;\n\tprivate _root: TernarySearchTreeNode<E> | undefined;\n\n\tconstructor(segments: IKeyIterator) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: string, element: E): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<E>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<E>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<E>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: string): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: string): E | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: E | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: string): Iterator<E> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<E>): Iterator<E> {\n\t\tlet res: { done: false; value: E; };\n\t\tlet idx: number;\n\t\tlet data: E[];\n\t\tconst next = (): IteratorResult<E> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn FIN;\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: E, index: string) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<E> | undefined, callback: (value: E, index: string) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\nexport class ResourceMap<T> {\n\n\tprotected readonly map: Map<string, T>;\n\tprotected readonly ignoreCase?: boolean;\n\n\tconstructor() {\n\t\tthis.map = new Map<string, T>();\n\t\tthis.ignoreCase = false; // in the future this should be an uri-comparator\n\t}\n\n\tset(resource: URI, value: T): void {\n\t\tthis.map.set(this.toKey(resource), value);\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI) => void): void {\n\t\tthis.map.forEach((value, index) => clb(value, URI.parse(index)));\n\t}\n\n\tvalues(): T[] {\n\t\treturn values(this.map);\n\t}\n\n\tprivate toKey(resource: URI): string {\n\t\tlet key = resource.toString();\n\t\tif (this.ignoreCase) {\n\t\t\tkey = key.toLowerCase();\n\t\t}\n\n\t\treturn key;\n\t}\n\n\tkeys(): URI[] {\n\t\treturn keys(this.map).map(k => URI.parse(k));\n\t}\n\n\tclone(): ResourceMap<T> {\n\t\tconst resourceMap = new ResourceMap<T>();\n\n\t\tthis.map.forEach((value, key) => resourceMap.map.set(key, value));\n\n\t\treturn resourceMap;\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> {\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): void {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tvalues(): V[] {\n\t\tconst result: V[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.value);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tkeys(): K[] {\n\t\tconst result: K[] = [];\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tresult.push(current.key);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\n\tkeys(): IterableIterator<K> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<K> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext():IteratorResult<V> {\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\t*/\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn super.get(key, Touch.AsNew);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): void {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && strings.endsWith(path, base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { regExpFlags } from 'vs/base/common/strings';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\nexport function revive(obj: any, depth = 0): any {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return URI.revive(obj);\n\t\t\tcase 2: return new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof ((<any>'').normalize) === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { equalsIgnoreCase } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function getComparisonKey(resource: URI): string {\n\treturn hasToIgnoreCase(resource) ? resource.toString().toLowerCase() : resource.toString();\n}\n\nexport function hasToIgnoreCase(resource: URI | undefined): boolean {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn resource && resource.scheme === Schemas.file ? !isLinux : true;\n}\n\nexport function basenameOrAuthority(resource: URI): string {\n\treturn basename(resource) || resource.authority;\n}\n\n/**\n * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n * @param base A uri which is \"longer\"\n * @param parentCandidate A uri which is \"shorter\" then `base`\n */\nexport function isEqualOrParent(base: URI, parentCandidate: URI, ignoreCase = hasToIgnoreCase(base)): boolean {\n\tif (base.scheme === parentCandidate.scheme) {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), ignoreCase);\n\t\t}\n\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, ignoreCase, '/');\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Tests wheter the two authorities are the same\n */\nexport function isEqualAuthority(a1: string, a2: string) {\n\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n}\n\nexport function isEqual(first: URI | undefined, second: URI | undefined, ignoreCase = hasToIgnoreCase(first)): boolean {\n\tif (first === second) {\n\t\treturn true;\n\t}\n\n\tif (!first || !second) {\n\t\treturn false;\n\t}\n\n\tif (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\n\t\treturn false;\n\t}\n\n\tconst p1 = first.path || '/', p2 = second.path || '/';\n\treturn p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\n}\n\nexport function basename(resource: URI): string {\n\treturn paths.posix.basename(resource.path);\n}\n\nexport function extname(resource: URI): string {\n\treturn paths.posix.extname(resource.path);\n}\n\n/**\n * Return a URI representing the directory of a URI path.\n *\n * @param resource The input URI.\n * @returns The URI representing the directory of the input URI.\n */\nexport function dirname(resource: URI): URI {\n\tif (resource.path.length === 0) {\n\t\treturn resource;\n\t}\n\tif (resource.scheme === Schemas.file) {\n\t\treturn URI.file(paths.dirname(originalFSPath(resource)));\n\t}\n\tlet dirname = paths.posix.dirname(resource.path);\n\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t}\n\treturn resource.with({\n\t\tpath: dirname\n\t});\n}\n\n/**\n * Join a URI path with path fragments and normalizes the resulting path.\n *\n * @param resource The input URI.\n * @param pathFragment The path fragment to add to the URI path.\n * @returns The resulting URI.\n */\nexport function joinPath(resource: URI, ...pathFragment: string[]): URI {\n\tlet joinedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tjoinedPath = URI.file(paths.join(originalFSPath(resource), ...pathFragment)).path;\n\t} else {\n\t\tjoinedPath = paths.posix.join(resource.path || '/', ...pathFragment);\n\t}\n\treturn resource.with({\n\t\tpath: joinedPath\n\t});\n}\n\n/**\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n *\n * @param resource The URI to normalize the path.\n * @returns The URI with the normalized path.\n */\nexport function normalizePath(resource: URI): URI {\n\tif (!resource.path.length) {\n\t\treturn resource;\n\t}\n\tlet normalizedPath: string;\n\tif (resource.scheme === Schemas.file) {\n\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t} else {\n\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t}\n\treturn resource.with({\n\t\tpath: normalizedPath\n\t});\n}\n\n/**\n * Returns the fsPath of an URI where the drive letter is not normalized.\n * See #56403.\n */\nexport function originalFSPath(uri: URI): string {\n\tlet value: string;\n\tconst uriPath = uri.path;\n\tif (uri.authority && uriPath.length > 1 && uri.scheme === Schemas.file) {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uriPath}`;\n\t} else if (\n\t\tisWindows\n\t\t&& uriPath.charCodeAt(0) === CharCode.Slash\n\t\t&& extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\n\t\t&& uriPath.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tvalue = uriPath.substr(1);\n\t} else {\n\t\t// other path\n\t\tvalue = uriPath;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Returns true if the URI path is absolute.\n */\nexport function isAbsolutePath(resource: URI): boolean {\n\treturn !!resource.path && resource.path[0] === '/';\n}\n\n/**\n * Returns true if the URI path has a trailing path separator\n */\nexport function hasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t} else {\n\t\tconst p = resource.path;\n\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t}\n}\n\n/**\n * Removes a trailing path separator, if there's one.\n * Important: Doesn't remove the first slash, it would make the URI invalid\n */\nexport function removeTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t}\n\treturn resource;\n}\n\n/**\n * Adds a trailing path separator to the URI if there isn't one already.\n * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n */\nexport function addTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\tlet isRootSep: boolean = false;\n\tif (resource.scheme === Schemas.file) {\n\t\tconst fsp = originalFSPath(resource);\n\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t} else {\n\t\tsep = '/';\n\t\tconst p = resource.path;\n\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t}\n\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\treturn resource.with({ path: resource.path + '/' });\n\t}\n\treturn resource;\n}\n\n/**\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\n * The returned relative path always uses forward slashes.\n */\nexport function relativePath(from: URI, to: URI, ignoreCase = hasToIgnoreCase(from)): string | undefined {\n\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\treturn undefined;\n\t}\n\tif (from.scheme === Schemas.file) {\n\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t}\n\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\tif (ignoreCase) {\n\t\t// make casing of fromPath match toPath\n\t\tlet i = 0;\n\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t}\n\treturn paths.posix.relative(fromPath, toPath);\n}\n\n/**\n * Resolves an absolute or relative path against a base URI.\n * The path can be relative or absolute posix or a Windows path\n */\nexport function resolvePath(base: URI, path: string): URI {\n\tif (base.scheme === Schemas.file) {\n\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\treturn base.with({\n\t\t\tauthority: newURI.authority,\n\t\t\tpath: newURI.path\n\t\t});\n\t}\n\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\tpath = extpath.toSlashes(path);\n\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\tpath = '/' + path;\n\t\t}\n\t}\n\treturn base.with({\n\t\tpath: paths.posix.resolve(base.path, path)\n\t});\n}\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<{ root: URI, expression: ParsedExpression }> = TernarySearchTree.forPaths<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root.toString(), { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource.toString());\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { sep, posix, normalize, win32 } from 'vs/base/common/path';\nimport { endsWith, startsWithIgnoreCase, rtrim, startsWith } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome: string;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider) {\n\t\tres = tildify(res, userHomeProvider.userHome);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? startsWith(path, normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[]): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${sep}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(sep) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(sep) + sep.length);\n\t\t\tpath = path.substr(path.indexOf(sep) + sep.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(sep);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(sep);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(sep) > -1) ? sep + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = endsWith(paths[otherPathIndex], subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (endsWith(segments[0], ':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + sep + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + sep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + sep + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tprivate readonly _uriTransformer: IRawURITransformer;\n\n\tconstructor(uriTransformer: IRawURITransformer) {\n\t\tthis._uriTransformer = uriTransformer;\n\t}\n\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformIncoming(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : URI.from(result));\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn this._uriTransformer.transformOutgoingScheme(scheme);\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex(): string;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value: string) {\n\t\t// empty\n\t}\n\n\tpublic asHex(): string {\n\t\treturn this._value;\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static readonly _chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static readonly _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array: string[]): string {\n\t\treturn array[Math.floor(array.length * Math.random())];\n\t}\n\n\tprivate static _randomHex(): string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\nexport function v4(): UUID {\n\treturn new V4UUID();\n}\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value: string): UUID {\n\tif (!isUUID(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid(): string {\n\treturn v4().asHex();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst cmdline = {\n\twindows: 'getmac.exe',\n\tunix: '/sbin/ifconfig -a || /sbin/ip link'\n};\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\texec(isWindows ? cmdline.windows : cmdline.unix, { timeout: 10000 }, (err, stdout, stdin) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(`Unable to retrieve mac address (${err.toString()})`);\n\t\t\t\t} else {\n\t\t\t\t\tconst regex = /(?:[a-f\\d]{2}[:\\-]){5}[a-f\\d]{2}/gi;\n\n\t\t\t\t\tlet match;\n\t\t\t\t\twhile ((match = regex.exec(stdout)) !== null) {\n\t\t\t\t\t\tconst macAddressCandidate = match[0];\n\t\t\t\t\t\tif (validateMacAddress(macAddressCandidate)) {\n\t\t\t\t\t\t\treturn resolve(macAddressCandidate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn reject('Unable to retrieve mac address (unexpected format)');\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { endsWith } from 'vs/base/common/strings';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accomodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || endsWith(source, '.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.send([response.type]);\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.send([response.type, response.id], response.data);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = createCancelablePromise(_ => this.whenInitialized());\n\t\t\tuninitializedPromise.then(() => {\n\t\t\t\tuninitializedPromise = null;\n\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t});\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => this.activeRequests.delete(disposable));\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen:\n\t\t\t\treturn this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\treturn this.send([request.type, request.id]);\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): void {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\tthis.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.flush();\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext) {\n\t\tsuper(protocol, id);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\tconsole.error(`PROTOCOL CORRUPTION, LAST SAW MSG ${this._incomingMsgId} AND HAVE NOW RECEIVED MSG ${msg.id}`);\n\t\t\t\t}\n\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\tthis._sendAckCheck();\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { revive } from 'vs/base/common/marshalling';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { isUpperAsciiLetter } from 'vs/base/common/strings';\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\tconst _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment): Promise<void> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer), args[1]);\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation, type]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { rimraf } from 'vs/base/node/pfs';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\tprivate environmentService: IEnvironmentService,\n\t\tprivate logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string;\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.metadata ? extension.metadata.publisherId : null,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.metadata ? extension.metadata.publisherDisplayName : null,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface IBuiltInExtension {\n\tname: string;\n\tversion: string;\n\trepo: string;\n\tforQualities?: ReadonlyArray<string>;\n\tmetadata: any;\n}\n\n/**\n * Parses the built-in extension JSON data and filters it down to the\n * extensions built into this product quality.\n */\nexport function parseBuiltInExtensions(rawJson: string, productQuality: string | undefined) {\n\tconst parsed: IBuiltInExtension[] = JSON.parse(rawJson);\n\tif (!productQuality) {\n\t\treturn parsed;\n\t}\n\n\treturn parsed.filter(ext => ext.forQualities?.indexOf?.(productQuality) !== -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/nsfw/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: WatcherChannelClient | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tconst options = {};\n\t\tthis._register(this.service.watch(options)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/unix/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: WatcherChannelClient | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.watch(this.watcherOptions)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(getPathFromAmdModule(require, 'vs/platform/files/node/watcher/win32/CodeHelper.exe'), args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim, endsWith } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && endsWith(this.folder.path, posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEmptyObject } from 'vs/base/common/types';\nimport { forEach } from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes[key];\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn this._nodes[this._hashFn(data)];\n\t}\n\n\tisEmpty(): boolean {\n\t\tfor (const _key in this._nodes) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\tcreateInstance<Services extends BrandedService[], Ctor extends new (...services: Services) => any, R extends InstanceType<Ctor>>(t: Ctor): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\t_serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { IUserHomeProvider } from 'vs/base/common/labels';\n\nexport interface ParsedArgs {\n\t_: string[];\n\t'folder-uri'?: string[]; // undefined or array of 1 or more\n\t'file-uri'?: string[]; // undefined or array of 1 or more\n\t_urls?: string[];\n\thelp?: boolean;\n\tversion?: boolean;\n\ttelemetry?: boolean;\n\tstatus?: boolean;\n\twait?: boolean;\n\twaitMarkerFilePath?: string;\n\tdiff?: boolean;\n\tadd?: boolean;\n\tgoto?: boolean;\n\t'new-window'?: boolean;\n\t'unity-launch'?: boolean; // Always open a new window, except if opening the first window or opening a file or folder as part of the launch.\n\t'reuse-window'?: boolean;\n\tlocale?: string;\n\t'user-data-dir'?: string;\n\t'prof-startup'?: boolean;\n\t'prof-startup-prefix'?: string;\n\t'prof-append-timers'?: string;\n\tverbose?: boolean;\n\ttrace?: boolean;\n\t'trace-category-filter'?: string;\n\t'trace-options'?: string;\n\tlog?: string;\n\tlogExtensionHostCommunication?: boolean;\n\t'extensions-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\t'extra-extensions-dir'?: string[];\n\t'extra-builtin-extensions-dir'?: string[];\n\textensionDevelopmentPath?: string[]; // // undefined or array of 1 or more local paths or URIs\n\textensionTestsPath?: string; // either a local path or a URI\n\t'extension-development-confirm-save'?: boolean;\n\t'inspect-extensions'?: string;\n\t'inspect-brk-extensions'?: string;\n\tdebugId?: string;\n\t'inspect-search'?: string;\n\t'inspect-brk-search'?: string;\n\t'disable-extensions'?: boolean;\n\t'disable-extension'?: string[]; // undefined or array of 1 or more\n\t'list-extensions'?: boolean;\n\t'show-versions'?: boolean;\n\t'category'?: string;\n\t'install-extension'?: string[]; // undefined or array of 1 or more\n\t'uninstall-extension'?: string[]; // undefined or array of 1 or more\n\t'locate-extension'?: string[]; // undefined or array of 1 or more\n\t'enable-proposed-api'?: string[]; // undefined or array of 1 or more\n\t'open-url'?: boolean;\n\t'skip-getting-started'?: boolean;\n\t'skip-release-notes'?: boolean;\n\t'sticky-quickopen'?: boolean;\n\t'disable-restore-windows'?: boolean;\n\t'disable-telemetry'?: boolean;\n\t'export-default-configuration'?: string;\n\t'install-source'?: string;\n\t'disable-updates'?: boolean;\n\t'disable-crash-reporter'?: boolean;\n\t'skip-add-to-recently-opened'?: boolean;\n\t'max-memory'?: string;\n\t'file-write'?: boolean;\n\t'file-chmod'?: boolean;\n\t'driver'?: string;\n\t'driver-verbose'?: boolean;\n\tremote?: string;\n\t'disable-user-env-probe'?: boolean;\n\t'force'?: boolean;\n\t'force-user-env'?: boolean;\n\n\t// chromium command line args: https://electronjs.org/docs/all#supported-chrome-command-line-switches\n\t'no-proxy-server'?: boolean;\n\t'proxy-server'?: string;\n\t'proxy-bypass-list'?: string;\n\t'proxy-pac-url'?: string;\n\t'inspect'?: string;\n\t'inspect-brk'?: string;\n\t'js-flags'?: string;\n\t'disable-gpu'?: boolean;\n\t'nolazy'?: boolean;\n\t'force-device-scale-factor'?: string;\n\t'force-renderer-accessibility'?: boolean;\n\t'ignore-certificate-error'?: boolean;\n\t'allow-insecure-localhost'?: boolean;\n}\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport const BACKUPS = 'Backups';\n\nexport interface IEnvironmentService extends IUserHomeProvider {\n\n\t_serviceBrand: undefined;\n\n\targs: ParsedArgs;\n\n\texecPath: string;\n\tcliPath: string;\n\tappRoot: string;\n\n\tuserHome: string;\n\tuserDataPath: string;\n\n\tappSettingsHome: URI;\n\n\t// user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\n\t// sync resources\n\tuserDataSyncLogResource: URI;\n\tuserDataSyncHome: URI;\n\tsettingsSyncPreviewResource: URI;\n\tkeybindingsSyncPreviewResource: URI;\n\n\tmachineSettingsHome: URI;\n\tmachineSettingsResource: URI;\n\n\tglobalStorageHome: string;\n\tworkspaceStorageHome: string;\n\n\tbackupHome: URI;\n\tbackupWorkspacesPath: string;\n\n\tuntitledWorkspacesHome: URI;\n\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tbuiltinExtensionsPath: string;\n\textensionsPath?: string;\n\textraExtensionPaths: string[];\n\textraBuiltinExtensionPaths: string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\tlogExtensionHostCommunication?: boolean;\n\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\n\tisBuilt: boolean;\n\twait: boolean;\n\tstatus: boolean;\n\n\tlog?: string;\n\tlogsPath: string;\n\tverbose: boolean;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tnodeCachedDataDir?: string;\n\n\tinstallSourcePath: string;\n\tdisableUpdates: boolean;\n\tdisableCrashReporter: boolean;\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n\n\tgalleryMachineIdResource?: URI;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\treadonly manifest: IExtensionManifest;\n\tmetadata: IGalleryMetadata;\n\treadmeUrl: URI | null;\n\tchangelogUrl: URI | null;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport interface IExtensionGalleryService {\n\t_serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<URI>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport interface IExtensionManagementService {\n\t_serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI): Promise<ILocalExtension>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isEqualOrParent, isEqual } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An even that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[]) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer, VSBufferWriteableStream, newWriteableBufferStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n}\n\nexport function createReadStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: ICreateReadStreamOptions, token?: CancellationToken): VSBufferReadableStream {\n\tconst stream = newWriteableBufferStream();\n\n\t// do not await reading but simply return the stream directly since it operates\n\t// via events. finally end the stream and send through the possible error\n\tlet error: Error | undefined = undefined;\n\n\tdoReadFileIntoStream(provider, resource, stream, options, token).then(undefined, err => error = err).finally(() => stream.end(error));\n\n\treturn stream;\n}\n\nasync function doReadFileIntoStream(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, stream: VSBufferWriteableStream, options: ICreateReadStreamOptions, token?: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tstream.write(buffer);\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\tstream.write(buffer.slice(0, lastChunkLength));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token?: CancellationToken): boolean {\n\tif (token && token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(() => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\tforEach(callback: (id: ServiceIdentifier<any>, instanceOrDescriptor: any) => any): void {\n\t\tthis._entries.forEach((value, key) => callback(key, value));\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\n// PROXY\n// Ghetto-declare of the global Proxy object. This isn't the proper way\n// but allows us to run this code in the browser without IE11.\ndeclare const Proxy: any;\nconst _canUseProxy = typeof Proxy === 'function';\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${\n\t\t\t\tfirstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 200) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation || !_canUseProxy) {\n\t\t\t// eager instantiation or no support JS proxies (e.g. IE11)\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.getValue();\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.getValue()[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const enum LanguageType {\n\tCore = 1,\n\tContributed\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\t_serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(type?: LanguageType): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\t_serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\t_serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\t_serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.args.log === 'string') {\n\t\tconst logLevel = environmentService.args.log.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, isEqual, isEqualOrParent } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, ReadableStreamEvents, consumeReadableWithLimit, consumeStreamWithLimit } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { assign } from 'vs/base/common/objects';\nimport { createReadStream } from 'vs/platform/files/common/io';\n\nexport class FileService extends Disposable implements IFileService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forPaths<true>();\n\t\t\t\ttrie.set(resource.toString(), true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri.toString(), true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource.toString()) || trie.get(stat.resource.toString()))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tbufferOrReadableOrStream = await consumeStreamWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStream = consumeReadableWithLimit(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStream) : bufferOrReadableOrStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, assign({\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t}, options || Object.create(null)));\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = createReadStream(provider, resource, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn this.transformFileReadStream(resource, fileStream, options);\n\t}\n\n\tprivate transformFileReadStream(resource: URI, stream: ReadableStreamEvents<Uint8Array | VSBuffer>, options: IReadFileOptions): VSBufferReadableStream {\n\t\treturn transform(stream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = isEqual(source, target, true /* ignore case */);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && isEqualOrParent(target, source, !isPathCaseSensitive)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst isPathCaseSensitive = !!(sourceProvider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tif (isEqualOrParent(source, target, !isPathCaseSensitive)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\twhile (!isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\treturn [\n\t\t\tthis.toMapKey(provider, resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tconst queueKey = this.toMapKey(provider, resource);\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate toMapKey(provider: IFileSystemProvider, resource: URI): string {\n\t\tconst isPathCaseSensitive = !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\treturn isPathCaseSensitive ? resource.toString() : resource.toString().toLowerCase();\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStream: VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, stream: VSBufferReadableStream): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet posInFile = 0;\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStream);\n\t\t}\n\n\t\treturn provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, transform } from 'vs/base/common/stream';\nimport { createReadStream } from 'vs/platform/files/common/io';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(private logService: ILogService, private options?: IDiskFileSystemProviderOptions) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst fileStream = createReadStream(this, resource, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn transform(fileStream, { data: data => data.buffer }, data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tthis.recursiveFoldersToWatch.push(folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tthis.recursiveFoldersToWatch.splice(this.recursiveFoldersToWatch.indexOf(folderToWatch), 1);\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(() => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\t_serviceBrand: undefined;\n\n\tconstructor(private master: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(master.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.master.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\t_serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\tsticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\tsilent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\tneverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\tid: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\tisSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces.\n\t */\n\tscope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\tseverity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\tmessage: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\tsource?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\tprogress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\tprimary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\tsecondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible. \n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\tlabel: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\tisSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\tkeepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\tshowAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\thideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param onCancel will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { assign } from 'vs/base/common/objects';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { env } from 'vs/base/common/process';\n\nlet product: IProductConfiguration;\n\n// Web\nif (isWeb) {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tassign(product, {\n\t\t\tversion: '1.43.0-dev',\n\t\t\tnameLong: 'Visual Studio Code Web Dev',\n\t\t\tnameShort: 'VSCode Web Dev',\n\t\t\turlProtocol: 'code-oss'\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tassign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Node: AMD loader\nelse if (typeof require !== 'undefined' && typeof require.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\n\n\tproduct = assign({}, require.__$__nodeRequire(path.join(rootPath, 'product.json')) as IProductConfiguration);\n\tconst pkg = require.__$__nodeRequire(path.join(rootPath, 'package.json')) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tassign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tassign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Unknown\nelse {\n\tthrow new Error('Unable to resolve product configuration');\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, ParsedArgs, IDebugParams, IExtensionHostDebugParams, BACKUPS } from 'vs/platform/environment/common/environment';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nexport const xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\n\tif (xdgRuntimeDir && !vscodePortable) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\treturn path.join(xdgRuntimeDir, `vscode-${scope}-${product.version}-${type}.sock`);\n\t}\n\n\treturn path.join(userDataPath, `${product.version}-${type}.sock`);\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${product.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport class EnvironmentService implements IEnvironmentService {\n\n\t_serviceBrand: undefined;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): string { return os.homedir(); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'sync'); }\n\n\t@memoize\n\tget settingsSyncPreviewResource(): URI { return resources.joinPath(this.userDataSyncHome, 'settings.json'); }\n\n\t@memoize\n\tget keybindingsSyncPreviewResource(): URI { return resources.joinPath(this.userDataSyncHome, 'keybindings.json'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget machineSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'Machine')); }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(this.machineSettingsHome, 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): string { return path.join(this.appSettingsHome.fsPath, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn URI.file(path.join(this.userHome, product.dataFolderName, 'argv.json'));\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): URI { return URI.file(path.join(this.userDataPath, BACKUPS)); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome.fsPath, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn path.join(this.userHome, product.dataFolderName, 'extensions');\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\t@memoize\n\tget logExtensionHostCommunication(): boolean { return !!this.args.logExtensionHostCommunication; }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget log(): string | undefined { return this._args.log; }\n\n\tget wait(): boolean { return !!this._args.wait; }\n\n\tget status(): boolean { return !!this._args.status; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\t@memoize\n\tget galleryMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService, LanguageType } from 'vs/platform/localizations/common/localizations';\nimport product from 'vs/platform/product/common/product';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nconst systemLanguages: string[] = ['de', 'en', 'en-US', 'es', 'fr', 'it', 'ja', 'ko', 'ru', 'zh-CN', 'zh-TW'];\nif (product.quality !== 'stable') {\n\tsystemLanguages.push('hu');\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(type: LanguageType): Promise<string[]> {\n\t\tif (type === LanguageType.Core) {\n\t\t\treturn Promise.resolve([...systemLanguages]);\n\t\t}\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tconst languages = type === LanguageType.Contributed ? Object.keys(languagePacks) : [...systemLanguages, ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\t_serviceBrand: undefined;\n\n}\n\nexport interface IProductConfiguration {\n\treadonly version: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: { [id: string]: { name: string; pattern: string; isExtensionPack?: boolean }; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly remoteExtensionTips?: { [remoteName: string]: IRemoteExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly appCenter?: {\n\t\treadonly 'win32-ia32': string;\n\t\treadonly 'win32-x64': string;\n\t\treadonly 'linux-x64': string;\n\t\treadonly 'darwin': string;\n\t};\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n\n\treadonly 'configurationSync.store'?: { url: string, authenticationProviderId: string };\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\trecommendations: readonly string[];\n\timportant?: boolean;\n\texeFriendlyName?: string;\n}\n\nexport interface IRemoteExtensionTip {\n\tfriendlyName: string;\n\textensionId: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { values } from 'vs/base/common/map';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\nexport interface IDefaultConfigurationExtension {\n\tid: ExtensionIdentifier;\n\tname: string;\n\tdefaults: { [key: string]: {} };\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultOverridesConfigurationNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultOverridesConfigurationNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultConfigurations.title', \"Default Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultOverridesConfigurationNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\n\t\t\t\t\tdelete this.configurationProperties[key];\n\n\t\t\t\t\t// Delete from schema\n\t\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\t\tswitch (configuration.properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tconst defaultValue = defaultConfiguration.defaults[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && typeof defaultValue === 'object') {\n\t\t\t\t\tconst propertySchema: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('overrideSettings.description', \"Configure editor settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\tallSettings.properties[key] = propertySchema;\n\t\t\t\t\tthis.defaultOverridesConfigurationNode.properties![key] = propertySchema;\n\t\t\t\t\tthis.configurationProperties[key] = propertySchema;\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IDefaultConfigurationExtension[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration.defaults) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete allSettings.properties[key];\n\t\t\t\tdelete this.defaultOverridesConfigurationNode.properties![key];\n\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t}\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// fill in default values\n\t\t\t\tlet property = properties[key];\n\t\t\t\tlet defaultValue = property.default;\n\t\t\t\tif (types.isUndefined(defaultValue)) {\n\t\t\t\t\tproperty.default = getDefaultValue(property.type);\n\t\t\t\t}\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tallSettings.properties[key] = properties[key];\n\t\t\t\t\tswitch (properties[key].scope) {\n\t\t\t\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\t\t\t\tapplicationSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\t\t\t\tmachineSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\t\t\t\tmachineOverridableSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\t\t\t\twindowSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\t\t\t\tresourceSettings.properties[key] = properties[key];\n\t\t\t\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = properties[key];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of values(this.overrideIdentifiers)) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\tdefault: this.defaultOverridesConfigurationNode.properties![overrideIdentifierProperty]?.default\n\t\t\t};\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\t_serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object') {\n\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key in base) {\n\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t} else if (overwrite) {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t} else {\n\t\t\tbase[key] = add[key];\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, values, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, overrideIdentifierFromKey, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (content) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\tif (scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema && typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: this._folderConfigurations.keys().reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn values(keys);\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, values(keys)]));\n\treturn { keys: values(keysSet), overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = values(keysSet);\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\t_serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\t_serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn JSON.parse(buffer.toString());\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\t_serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\t_serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\t_serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\tNONE = 0,\n\tSHUTDOWN = 1\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IWorkspaceStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be converted to a string.\n\t * Storing either undefined or null will remove the entry under the key.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the onWillSaveState to ask\n\t * everyone for latest state.\n\t */\n\tflush(): void;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport interface IWorkspaceStorageChangeEvent {\n\tkey: string;\n\tscope: StorageScope;\n}\n\nexport class InMemoryStorageService extends Disposable implements IStorageService {\n\n\t_serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<IWorkspaceStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprotected readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate globalCache: Map<string, string> = new Map<string, string>();\n\tprivate workspaceCache: Map<string, string> = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.remove(key, scope);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tremove(key: string, scope: StorageScope): Promise<void> {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tflush(): void {\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLog2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error, true);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t_serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const crashReporterIdStorageKey = 'crashReporter.guid';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { values } from 'vs/base/common/map';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.map(value => ({ filterType, value }))\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w\\.]+))(:(//)?)([\\w\\.@\\:/\\-~]+)(\\.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = require.toUrl('./media/defaultIcon.png');\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\t_serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) private readonly storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, this.storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, token).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<URI> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst zip = joinPath(location, generateUuid());\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => this.fileService.writeFile(zip, context.stream))\n\t\t\t.then(() => log(new Date().getTime() - startTime))\n\t\t\t.then(() => zip);\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset[1])\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.ExcludeNonValidated)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None).then(({ galleryExtensions }) => {\n\t\t\tif (galleryExtensions.length) {\n\t\t\t\tif (compatible) {\n\t\t\t\t\treturn Promise.all(galleryExtensions[0].versions.map(v => this.getEngine(v).then(engine => isEngineValid(engine, this.productService.version) ? v : null)))\n\t\t\t\t\t\t.then(versions => versions\n\t\t\t\t\t\t\t.filter(v => !!v)\n\t\t\t\t\t\t\t.map(v => ({ version: v!.version, date: v!.lastUpdated })));\n\t\t\t\t} else {\n\t\t\t\t\treturn galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated }));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\t\t\turl: string;\n\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t};\n\t\t\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve(values(map));\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService?: IStorageService): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tlet uuid: string | null = null;\n\tif (environmentService.galleryMachineIdResource) {\n\t\ttry {\n\t\t\tconst contents = await fileService.readFile(environmentService.galleryMachineIdResource);\n\t\t\tconst value = contents.value.toString();\n\t\t\tuuid = isUUID(value) ? value : null;\n\t\t} catch (e) {\n\t\t\tuuid = null;\n\t\t}\n\n\t\tif (!uuid) {\n\t\t\tuuid = generateUuid();\n\t\t\ttry {\n\t\t\t\tawait fileService.writeFile(environmentService.galleryMachineIdResource, VSBuffer.fromString(uuid));\n\t\t\t} catch (error) {\n\t\t\t\t//noop\n\t\t\t}\n\t\t}\n\t}\n\n\tif (storageService) {\n\t\tuuid = storageService.get('marketplace.userid', StorageScope.GLOBAL) || null;\n\t\tif (!uuid) {\n\t\t\tuuid = generateUuid();\n\t\t\tstorageService.store('marketplace.userid', uuid, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tif (uuid) {\n\t\theaders['X-Market-User-Id'] = uuid;\n\t}\n\n\treturn headers;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n\ttrueMachineId?: string;\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\t_serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\n\t\t\t\tif (config.trueMachineId) {\n\t\t\t\t\ttype MachineIdDisambiguationClassification = {\n\t\t\t\t\t\tcorrectedMachineId: { endPoint: 'MacAddressHash', classification: 'EndUserPseudonymizedInformation', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\tthis.publicLog2<{ correctedMachineId: string }, MachineIdDisambiguationClassification>('machineIdDisambiguation', { correctedMachineId: config.trueMachineId });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\t_serviceBrand: undefined;\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData: { [key: string]: any } = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\t// Whitelisted remote authorities\n\t['ssh-remote', 'dev-container', 'attached-container', 'wsl'].forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}","import { ReadWriteConnection } from '@coder/node-browser';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INodeProxyService = createDecorator<INodeProxyService>('nodeProxyService');\n\nexport interface INodeProxyService extends ReadWriteConnection {\n\t_serviceBrand: any;\n\tsend(message: string): void;\n\tonMessage: Event<string>;\n\tonUp: Event<void>;\n\tonClose: Event<void>;\n\tonDown: Event<void>;\n}\n\nexport class NodeProxyChannel implements IServerChannel {\n\tconstructor(private service: INodeProxyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onMessage': return this.service.onMessage;\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'send': return this.service.send(args[0]);\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class NodeProxyChannelClient {\n\t_serviceBrand: any;\n\n\tpublic readonly onMessage: Event<string>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.onMessage = this.channel.listen<string>('onMessage');\n\t}\n\n\tpublic send(data: string): void {\n\t\tthis.channel.call('send', [data]);\n\t}\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic get isOptedIn(): boolean {\n\t\treturn true;\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst message = JSON.parse(rawMessage.toString());\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth': return this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault: throw new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_message: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URITransformer, IRawURITransformer } from 'vs/base/common/uriIpc';\n\nexport const uriTransformerPath = getPathFromAmdModule(require, 'vs/server/node/uriTransformer');\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\tconst rawURITransformerFactory = <any>require.__$__nodeRequire(uriTransformerPath);\n\tconst rawURITransformer = <IRawURITransformer>rawURITransformerFactory(remoteAuthority);\n\treturn new URITransformer(rawURITransformer);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split(\"/\").map((p) => encodeURIComponent(p)).join(\"/\");\n};\n","import * as cp from 'child_process';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { uriTransformerPath } from 'vs/server/node/util';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly environment: IEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getSocket().end();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tconst proc = cp.fork(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t[ '--type=extensionHost', `--uriTransformerPath=${uriTransformerPath}` ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: this.environment.verbose ? 'trace' : this.environment.log,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', () => this.dispose());\n\t\tproc.on('exit', () => this.dispose());\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.log.info('Extension host stdout', d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.log.error('Extension host stderr', d));\n\t\t}\n\t\tproc.on('message', (event) => {\n\t\t\tif (event && event.type === '__$console') {\n\t\t\t\tconst severity = (<any>this.log)[event.severity] ? event.severity : 'info';\n\t\t\t\t(<any>this.log)[severity]('Extension host', event.arguments);\n\t\t\t}\n\t\t\tif (event && event.type === 'VSCODE_EXTHOST_DISCONNECTED') {\n\t\t\t\tthis.setOffline();\n\t\t\t}\n\t\t});\n\n\t\tconst listen = (message: IExtHostReadyMessage) => {\n\t\t\tif (message.type === 'VSCODE_EXTHOST_IPC_READY') {\n\t\t\t\tproc.removeListener('message', listen);\n\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t}\n\t\t};\n\n\t\treturn proc.on('message', listen);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (errors.length === 0 && json.getNodeType(manifest) === 'object') {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tlet normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\n\t\t\t\tif (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly tanslations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.tanslations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.tanslations, b.tanslations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { Server } from '@coder/node-browser';\nimport * as path from 'path';\nimport { VSBuffer, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { OS } from 'vs/base/common/platform';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { createReadStream } from 'vs/platform/files/common/io';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INodeProxyService } from 'vs/server/common/nodeProxy';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: IEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tlet fileStream: VSBufferReadableStream | undefined;\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tif (!fileStream) {\n\t\t\t\t\tfileStream = createReadStream(this.provider, this.transform(resource), {\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tbufferSize: 64 * 1024, // From DiskFileSystemProvider\n\t\t\t\t\t});\n\t\t\t\t\tfileStream.on('data', (data) => emitter.fire(data));\n\t\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t\t}\n\t\t\t},\n\t\t\tonLastListenerRemove: () => fileStream && fileStream.destroy(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: IEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(locale: string): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tappSettingsHome: this.environment.appSettingsHome,\n\t\t\tsettingsPath: this.environment.machineSettingsHome,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: URI.file(this.environment.globalStorageHome),\n\t\t\tuserHome: URI.file(this.environment.userHome),\n\t\t\textensions: await this.scanExtensions(locale),\n\t\t\tos: OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(locale: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(locale, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlocale,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, extension);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n}\n\nexport class NodeProxyService implements INodeProxyService {\n\tpublic _serviceBrand = undefined;\n\n\tpublic readonly server: Server;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _$onMessage = new Emitter<string>();\n\tpublic readonly $onMessage = this._$onMessage.event;\n\tpublic readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tpublic readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\t// Unused because the server connection will never permanently close.\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\n\tpublic constructor() {\n\t\t// TODO: down/up\n\t\tthis.server = new Server({\n\t\t\tonMessage: this.$onMessage,\n\t\t\tonClose: this.onClose,\n\t\t\tonDown: this.onDown,\n\t\t\tonUp: this.onUp,\n\t\t\tsend: (message: string): void => {\n\t\t\t\tthis._onMessage.fire(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis._$onMessage.fire(message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\tthis.setCaseSensitive(true);\n\t\tremoteAgentService.getEnvironment().then(remoteAgentEnvironment => this.setCaseSensitive(!!(remoteAgentEnvironment && remoteAgentEnvironment.os === OperatingSystem.Linux)));\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token?: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\tif (token) {\n\t\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t\t// Ensure to end the stream properly with an error\n\t\t\t\t// to indicate the cancellation.\n\t\t\t\tstream.end(canceled());\n\n\t\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t\t// reading the file.\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistenConnectionEvent as PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\t_serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\tgetEnvironment(bail?: boolean): Promise<IRemoteAgentEnvironment | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(zipfile);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(stream);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { flatten, isNonEmptyArray } from 'vs/base/common/arrays';\nimport { extract, ExtractError, zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, groupByExtension, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion, parseBuiltInExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from '../common/extensionNls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Limiter, createCancelablePromise, CancelablePromise, Queue } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver-umd';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst ERROR_UNKNOWN = 'unknown';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nfunction parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tconst manifest = JSON.parse(raw);\n\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\tdelete manifest.__metadata;\n\t\t\tc({ manifest, metadata });\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IGalleryMetadata; }> {\n\tconst promises = [\n\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t.then(raw => parseManifest(raw)),\n\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t.then(raw => JSON.parse(raw))\n\t];\n\n\treturn Promise.all<any>(promises).then(([{ manifest, metadata }, translations]) => {\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t});\n}\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata: IGalleryMetadata | null;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\t_serviceBrand: undefined;\n\n\tprivate systemExtensionsPath: string;\n\tprivate extensionsPath: string;\n\tprivate uninstalledPath: string;\n\tprivate uninstalledFileLimiter: Queue<any>;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions: Map<string, CancelablePromise<ILocalExtension>> = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionLifecycle: ExtensionsLifecycle;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath!;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionLifecycle = this._register(new ExtensionsLifecycle(environmentService, this.logService));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\treturn this.collectFiles(extension)\n\t\t\t.then(files => zip(path.join(tmpdir(), generateUuid()), files))\n\t\t\t.then<URI>(path => URI.file(path));\n\t}\n\n\tunzip(zipLocation: URI, type: ExtensionType): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\treturn this.install(zipLocation, type).then(local => local.identifier);\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn collectFilesFromDirectory(extension.location.fsPath)\n\t\t\t.then(files => files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f })));\n\n\t}\n\n\tinstall(vsix: URI, type: ExtensionType = ExtensionType.User): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(token => {\n\t\t\treturn this.downloadVsix(vsix).then(downloadLocation => {\n\t\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t.then(manifest => {\n\t\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\t\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t\t\t\t\t.then(installedExtensions => {\n\t\t\t\t\t\t\t\tconst existing = installedExtensions.filter(i => areSameExtensions(identifier, i.identifier))[0];\n\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\t\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\t\t\t\t\t\treturn this.uninstall(existing, true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t\t\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\t\t\t\t\t\treturn this.unsetUninstalledAndGetLocal(identifierWithVersion)\n\t\t\t\t\t\t\t\t\t\t.then(existing => {\n\t\t\t\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\t\t\t\t\t\t\t\treturn this.getMetadata(getGalleryExtensionId(manifest.publisher, manifest.name))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tmetadata => this.installFromZipPath(identifierWithVersion, zipPath, metadata, type, operation, token),\n\t\t\t\t\t\t\t\t\t\t() => this.installFromZipPath(identifierWithVersion, zipPath, null, type, operation, token))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tlocal => { this.logService.info('Successfully installed the extension:', identifier.id); return local; },\n\t\t\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn Promise.resolve(vsix);\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\t\tconst downloadedLocation = path.join(tmpdir(), generateUuid());\n\t\treturn this.downloadService.download(vsix, URI.file(downloadedLocation)).then(() => URI.file(downloadedLocation));\n\t}\n\n\tprivate installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IGalleryMetadata | null, type: ExtensionType, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.toNonCancellablePromise(this.installExtension({ zipPath, identifierWithVersion, metadata }, type, token)\n\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, null)\n\t\t\t\t.then(\n\t\t\t\t\t() => local,\n\t\t\t\t\terror => {\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}))\n\t\t\t.then(\n\t\t\t\tlocal => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation }); return local; },\n\t\t\t\terror => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error }); return Promise.reject(error); }\n\t\t\t));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\tconst startTime = new Date().getTime();\n\n\t\tconst onDidInstallExtensionSuccess = (extension: IGalleryExtension, operation: InstallOperation, local: ILocalExtension) => {\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t};\n\n\t\tconst onDidInstallExtensionFailure = (extension: IGalleryExtension, operation: InstallOperation, error: Error) => {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tonDidInstallExtensionFailure(extension, InstallOperation.Install, error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\n\t\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tlet cancellationToken: CancellationToken, successCallback: (local: ILocalExtension) => void, errorCallback: (e?: any) => any | null;\n\t\t\tcancellablePromise = createCancelablePromise(token => { cancellationToken = token; return new Promise((c, e) => { successCallback = c; errorCallback = e; }); });\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\ttry {\n\t\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\t\tconst existingExtension = installed.filter(i => areSameExtensions(i.identifier, extension.identifier))[0];\n\t\t\t\tif (existingExtension) {\n\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t}\n\n\t\t\t\tthis.downloadInstallableExtension(extension, operation)\n\t\t\t\t\t.then(installableExtension => this.installExtension(installableExtension, ExtensionType.User, cancellationToken)\n\t\t\t\t\t\t.then(local => pfs.rimraf(installableExtension.zipPath).finally(() => null).then(() => local)))\n\t\t\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, existingExtension)\n\t\t\t\t\t\t.then(() => local, error => this.uninstall(local, true).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t\t\t.then(\n\t\t\t\t\t\tasync local => {\n\t\t\t\t\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\t\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionSuccess(extension, operation, local);\n\t\t\t\t\t\t\tsuccessCallback(local);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS));\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\n\t\tif (!compatibleExtension) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE));\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\treturn this.findGalleryExtension(extension)\n\t\t\t.then(galleryExtension => {\n\t\t\t\tif (galleryExtension) {\n\t\t\t\t\treturn this.setUninstalled(extension)\n\t\t\t\t\t\t.then(() => this.removeUninstalledExtension(extension)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => this.installFromGallery(galleryExtension).then(),\n\t\t\t\t\t\t\t\te => Promise.reject(new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e))))));\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\")));\n\t\t\t});\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.getExtensionsReport()\n\t\t\t.then(report => getMaliciousExtensionsSet(report).has(extension.identifier.id));\n\t}\n\n\tprivate downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<InstallableExtension> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\treturn this.galleryService.download(extension, URI.file(tmpdir()), operation)\n\t\t\t.then(\n\t\t\t\tzip => {\n\t\t\t\t\tconst zipPath = zip.fsPath;\n\t\t\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tmanifest => (<InstallableExtension>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata }),\n\t\t\t\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING))\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING)));\n\t}\n\n\tprivate installExtension(installableExtension: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion)\n\t\t\t.then(\n\t\t\t\tlocal => {\n\t\t\t\t\tif (local) {\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.extractAndInstall(installableExtension, type, token);\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t});\n\t}\n\n\tprivate unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\treturn this.isUninstalled(identifierWithVersion)\n\t\t\t.then<ILocalExtension | null>(isUninstalled => {\n\t\t\t\tif (isUninstalled) {\n\t\t\t\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\t\t\t\treturn this.unsetUninstalled(identifierWithVersion)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(installed => installed.filter(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion))[0]);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, type: ExtensionType, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst location = type === ExtensionType.User ? this.extensionsPath : this.systemExtensionsPath;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(location, `.${folderName}`);\n\t\tconst extensionPath = path.join(location, folderName);\n\t\treturn pfs.rimraf(extensionPath)\n\t\t\t.then(() => this.extractAndRename(identifier, zipPath, tempPath, extensionPath, token), e => Promise.reject(new ExtensionManagementError(nls.localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING)))\n\t\t\t.then(() => this.scanExtension(folderName, location, type))\n\t\t\t.then(local => {\n\t\t\t\tif (!local) {\n\t\t\t\t\treturn Promise.reject(nls.localize('cannot read', \"Cannot read the extension from {0}\", location));\n\t\t\t\t}\n\t\t\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\t\t\tif (metadata) {\n\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\treturn this.saveMetadataForLocalExtension(local);\n\t\t\t\t}\n\t\t\t\treturn local;\n\t\t\t}, error => pfs.rimraf(extensionPath).then(() => Promise.reject(error), () => Promise.reject(error)));\n\t}\n\n\tprivate extractAndRename(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, renamePath: string, token: CancellationToken): Promise<void> {\n\t\treturn this.extract(identifier, zipPath, extractPath, token)\n\t\t\t.then(() => this.rename(identifier, extractPath, renamePath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */)\n\t\t\t\t.then(\n\t\t\t\t\t() => this.logService.info('Renamed to', renamePath),\n\t\t\t\t\te => {\n\t\t\t\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', extractPath);\n\t\t\t\t\t\treturn pfs.rimraf(extractPath).finally(() => null).then(() => Promise.reject(e));\n\t\t\t\t\t}));\n\t}\n\n\tprivate extract(identifier: IExtensionIdentifier, zipPath: string, extractPath: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${extractPath}`);\n\t\treturn pfs.rimraf(extractPath)\n\t\t\t.then(\n\t\t\t\t() => extract(zipPath, extractPath, { sourcePath: 'extension', overwrite: true }, token)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => this.logService.info(`Extracted extension to ${extractPath}:`, identifier.id),\n\t\t\t\t\t\te => pfs.rimraf(extractPath).finally(() => null)\n\t\t\t\t\t\t\t.then(() => Promise.reject(new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING)))),\n\t\t\t\te => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING)));\n\t}\n\n\tprivate rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\treturn pfs.rename(extractPath, renamePath)\n\t\t\t.then(undefined, error => {\n\t\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new ExtensionManagementError(error.message || nls.localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING));\n\t\t\t});\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | null): Promise<void> {\n\t\tif (this.galleryService.isEnabled()) {\n\t\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\t\tif (installed.manifest.extensionPack) {\n\t\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\treturn this.getInstalled()\n\t\t\t\t\t.then(installed => {\n\t\t\t\t\t\t// filter out installed extensions\n\t\t\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\t\t\tif (names.length) {\n\t\t\t\t\t\t\treturn this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None)\n\t\t\t\t\t\t\t\t.then(galleryResult => {\n\t\t\t\t\t\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\t\t\t\t\t\treturn Promise.all(extensionsToInstall.map(e => this.installFromGallery(e)))\n\t\t\t\t\t\t\t\t\t\t.then(undefined, errors => this.rollback(extensionsToInstall).then(() => Promise.reject(errors), () => Promise.reject(errors)));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed =>\n\t\t\t\tPromise.all(installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))) // Check with version because we want to rollback the exact version\n\t\t\t\t\t.map(local => this.uninstall(local, true))))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.toNonCancellablePromise(this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => {\n\t\t\t\tconst extensionToUninstall = installed.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\t\tif (extensionToUninstall) {\n\t\t\t\t\treturn this.checkForDependenciesAndUninstall(extensionToUninstall, installed).then(undefined, error => Promise.reject(this.joinErrors(error)));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name)));\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal.metadata = metadata;\n\t\treturn this.saveMetadataForLocalExtension(local)\n\t\t\t.then(localExtension => {\n\t\t\t\tthis.manifestCache.invalidate();\n\t\t\t\treturn localExtension;\n\t\t\t});\n\t}\n\n\tprivate saveMetadataForLocalExtension(local: ILocalExtension): Promise<ILocalExtension> {\n\t\tif (!local.metadata) {\n\t\t\treturn Promise.resolve(local);\n\t\t}\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\treturn pfs.readFile(manifestPath, 'utf8')\n\t\t\t.then(raw => parseManifest(raw))\n\t\t\t.then(({ manifest }) => assign(manifest, { __metadata: local.metadata }))\n\t\t\t.then(manifest => pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t')))\n\t\t\t.then(() => local);\n\t}\n\n\tprivate getMetadata(extensionName: string): Promise<IGalleryMetadata | null> {\n\t\treturn this.findGalleryExtensionByName(extensionName)\n\t\t\t.then(galleryExtension => galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : null);\n\t}\n\n\tprivate findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\treturn this.findGalleryExtensionById(local.identifier.uuid)\n\t\t\t\t.then(galleryExtension => galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id));\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tif (packedExtensions.length) {\n\t\t\t\t\treturn this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t\t}\n\t\t\t\treturn this.uninstallExtensions(extension, [], installed);\n\t\t\t})\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extension !== dependent && otherExtensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, remainingDependents)));\n\t\t\t}\n\t\t}\n\t\treturn Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]).then(() => undefined);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate doUninstall(extension: ILocalExtension): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => this.uninstallExtension(extension))\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(pfs.exists(extension.location.fsPath))\n\t\t\t.then(exists => exists ? null : Promise.reject(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => {\n\t\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\t});\n\t}\n\n\tprivate uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(token => this.scanUserExtensions(false)\n\t\t\t\t.then(userExtensions => this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier))))\n\t\t\t\t.then(() => { this.uninstallingExtensions.delete(local.identifier.id); }));\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\treturn Promise.all<ILocalExtension[]>(promises).then(flatten, errors => Promise.reject(this.joinErrors(errors)));\n\t}\n\n\tprivate scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = Promise.all([\n\t\t\tthis.scanExtensions(this.systemExtensionsPath, ExtensionType.System),\n\t\t\t...this.environmentService.extraBuiltinExtensionPaths\n\t\t\t\t.map((path) => this.scanExtensions(path, ExtensionType.System))\n\t\t]).then((results) => {\n\t\t\tconst result = results.reduce((flat, current) => flat.concat(current), []);\n\t\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\t\treturn result;\n\t\t});\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.getDevSystemExtensionsList()\n\t\t\t.then(devSystemExtensionsList => {\n\t\t\t\tif (devSystemExtensionsList.length) {\n\t\t\t\t\treturn this.scanExtensions(this.devSystemExtensionsPath, ExtensionType.System)\n\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\t\t\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t});\n\t\treturn Promise.all([systemExtensionsPromise, devSystemExtensionsPromise])\n\t\t\t.then(([systemExtensions, devSystemExtensions]) => [...systemExtensions, ...devSystemExtensions]);\n\t}\n\n\tprivate scanAllUserExtensions(folderName: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\treturn Promise.all([\n\t\t\tthis.scanExtensions(folderName, type),\n\t\t\t...this.environmentService.extraExtensionPaths.map((p) => this.scanExtensions(p, ExtensionType.User))\n\t\t]).then((results) => results.reduce((flat, current) => flat.concat(current), []));\n\t}\n\n\tprivate scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\treturn Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User)])\n\t\t\t.then(([uninstalled, extensions]) => {\n\t\t\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\t\t\tif (excludeOutdated) {\n\t\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t\t\t}\n\t\t\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\t\t\treturn extensions;\n\t\t\t});\n\t}\n\n\tprivate scanExtensions(root: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\treturn pfs.readdir(root)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t})\n\t\t\t.then(extensionsFolders => Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, root, type)))))\n\t\t\t.then(extensions => extensions.filter(e => e && e.identifier));\n\t}\n\n\tprivate scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\treturn pfs.readdir(extensionPath)\n\t\t\t.then(children => readManifest(extensionPath)\n\t\t\t\t.then(({ manifest, metadata }) => {\n\t\t\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : null;\n\t\t\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : null;\n\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, metadata, location: URI.file(extensionPath), readmeUrl, changelogUrl };\n\t\t\t\t\tif (metadata) {\n\t\t\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\t\t}\n\t\t\t\t\treturn local;\n\t\t\t\t}))\n\t\t\t.then(undefined, () => null);\n\t}\n\n\tprivate setMetadata(local: ILocalExtension, metadata: IGalleryMetadata): void {\n\t\tlocal.metadata = metadata;\n\t\tlocal.identifier.uuid = metadata.id;\n\t}\n\n\tasync removeDeprecatedExtensions(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.extensionLifecycle.postUninstall(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate removeOutdatedExtensions(): Promise<void> {\n\t\treturn this.scanAllUserExtensions(this.extensionsPath, ExtensionType.User) // All user extensions\n\t\t\t.then(extensions => {\n\t\t\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t\t\t// Outdated extensions\n\t\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\t\t\treturn Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t\t\t}).then(() => undefined);\n\t}\n\n\tprivate removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn this.removeExtension(extension, 'uninstalled')\n\t\t\t.then(() => this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]))\n\t\t\t.then(() => undefined);\n\t}\n\n\tprivate removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\treturn pfs.rimraf(extension.location.fsPath).then(() => this.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath));\n\t}\n\n\tprivate isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\treturn this.filterUninstalled(identifier).then(uninstalled => uninstalled.length === 1);\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.withUninstalledExtensions(uninstalled => assign(uninstalled, ids.reduce((result, id) => { result[id.key()] = true; return result; }, {} as { [id: string]: boolean })));\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tprivate getUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tprivate async withUninstalledExtensions<T>(fn: (uninstalled: { [id: string]: boolean; }) => T): Promise<T> {\n\t\treturn await this.uninstalledFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.uninstalledPath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(uninstalled => { result = fn(uninstalled); return uninstalled; })\n\t\t\t\t.then(uninstalled => {\n\t\t\t\t\tif (Object.keys(uninstalled).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.uninstalledPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(uninstalled);\n\t\t\t\t\t\treturn pfs.writeFile(this.uninstalledPath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate updateReportCache(): Promise<IReportedExtension[]> {\n\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\n\t\treturn this.galleryService.getExtensionsReport()\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\t\treturn result;\n\t\t\t}, err => {\n\t\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate _devSystemExtensionsFilePath: string | null = null;\n\tprivate get devSystemExtensionsFilePath(): string {\n\t\tif (!this._devSystemExtensionsFilePath) {\n\t\t\tthis._devSystemExtensionsFilePath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'build', 'builtInExtensions.json'));\n\t\t}\n\t\treturn this._devSystemExtensionsFilePath;\n\t}\n\n\tprivate getDevSystemExtensionsList(): Promise<string[]> {\n\t\treturn pfs.readFile(this.devSystemExtensionsFilePath, 'utf8')\n\t\t\t.then(data => parseBuiltInExtensions(data, this.productService.quality).map(ext => ext.name));\n\t}\n\n\tprivate toNonCancellablePromise<T>(promise: Promise<T>): Promise<T> {\n\t\treturn new Promise((c, e) => promise.then(result => c(result), error => e(error)));\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLog(eventName, assign(extensionData, { success: !error, duration, errorcode }));\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\t_serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStream<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\n\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-vscode.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: ParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'], !!argv['force']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath ? this.environmentService.extensionsPath : undefined));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t// TODO: we should save this array in a common place so that the command and extensionQuery can use it that way changing it is easier\n\t\tconst categories = ['\"programming languages\"', 'snippets', 'linters', 'themes', 'debuggers', 'formatters', 'keymaps', '\"scm providers\"', 'other', '\"extension packs\"', '\"language packs\"'];\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tfor (const extension of extensions) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.installExtension(extension, force);\n\t\t\t\tif (manifest) {\n\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\tfailed.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t\treturn failed.length ? Promise.reject(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', '))) : Promise.resolve();\n\t}\n\n\tprivate async installExtension(extension: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\textension = path.isAbsolute(extension) ? extension : path.join(process.cwd(), extension);\n\n\t\t\tconst manifest = await getManifest(extension);\n\t\t\tconst valid = await this.validate(manifest, force);\n\n\t\t\tif (valid) {\n\t\t\t\treturn this.extensionManagementService.install(URI.file(extension)).then(id => {\n\t\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(extension)));\n\t\t\t\t\treturn manifest;\n\t\t\t\t}, error => {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(extension)));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [id, version] = getIdAndVersion(extension);\n\t\treturn this.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => this.extensionGalleryService.getCompatibleExtension({ id }, version)\n\t\t\t\t.then<IGalleryExtension>(null, err => {\n\t\t\t\t\tif (err.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(err.responseText);\n\t\t\t\t\t\t\treturn Promise.reject(response.message);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(async extension => {\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn Promise.reject(new Error(`${notFound(version ? `${id}@${version}` : id)}\\n${useId}`));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(extension, CancellationToken.None);\n\t\t\t\t\tconst [installedExtension] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\t\tif (installedExtension) {\n\t\t\t\t\t\tif (extension.version === installedExtension.manifest.version) {\n\t\t\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version && !force) {\n\t\t\t\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, extension.version));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, extension.version));\n\t\t\t\t\t}\n\t\t\t\t\tawait this.installFromGallery(id, extension);\n\t\t\t\t\treturn manifest;\n\t\t\t\t}));\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.filter(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version))[0];\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async installFromGallery(id: string, extension: IGalleryExtension): Promise<void> {\n\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, extension.version));\n\n\t\ttry {\n\t\t\tawait this.extensionManagementService.installFromGallery(extension);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, extension.version));\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async uninstallExtension(extensions: string[]): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\treturn Promise.reject(new Error(`${notInstalled(id)}\\n${useId}`));\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: ParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new EnvironmentService(argv, process.execPath);\n\tconst logService: ILogService = new SpdLogService('cli', environmentService.logsPath, getLogLevel(environmentService));\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst envService = accessor.get(IEnvironmentService);\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = envService;\n\n\t\tconst services = new ServiceCollection();\n\n\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !envService.args['disable-telemetry'] && product.enableTelemetry) {\n\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, logService));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: extensionsPath ? [appRoot, extensionsPath] : [appRoot]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\tawait combinedAppender(...appenders).flush();\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createChannelReceiver } from 'vs/base/parts/ipc/node/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from \"vs/code/node/cliProcessMain\";\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { IEnvironmentService, ParsedArgs } from 'vs/platform/environment/common/environment';\nimport { EnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryServiceConfig, TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, LogAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { INodeProxyService, NodeProxyChannel } from 'vs/server/common/nodeProxy';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, NodeProxyService } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from \"vs/workbench/services/remote/common/remoteAgentFileSystemChannel\";\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: ParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as IEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t\t// TODO: Need a way to match clients with a connection. For now\n\t\t\t\t\t// dispose everything which only works because no extensions currently\n\t\t\t\t\t// utilize long-running proxies.\n\t\t\t\t\t(this.services.get(INodeProxyService) as NodeProxyService)._onUp.fire();\n\t\t\t\t\tconnection.onClose(() => (this.services.get(INodeProxyService) as NodeProxyService)._onDown.fire());\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(ILogService) as ILogService,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as IEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => connections.delete(token));\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: ParsedArgs): Promise<void> {\n\t\tconst environmentService = new EnvironmentService(args, process.execPath);\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(IConfigurationService, new SyncDescriptor(ConfigurationService, [environmentService.machineSettingsResource, fileService]));\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\t\tif (!environmentService.args['disable-telemetry']) {\n\t\t\tthis.services.set(ITelemetryService, new SyncDescriptor(TelemetryService, [{\n\t\t\t\tappender: combinedAppender(\n\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any, logService),\n\t\t\t\t\tnew LogAppender(logService),\n\t\t\t\t),\n\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\tproduct.commit, product.version, await getMachineId(),\n\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t),\n\t\t\t\tpiiPaths,\n\t\t\t} as ITelemetryServiceConfig]));\n\t\t} else {\n\t\t\tthis.services.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\t\t\tthis.services.set(ILocalizationsService, instantiationService.createInstance(LocalizationsService));\n\t\t\tthis.services.set(INodeProxyService, instantiationService.createInstance(NodeProxyService));\n\n\t\t\tinstantiationService.invokeFunction(() => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\t\t\t\tconst telemetryService = this.services.get(ITelemetryService) as ITelemetryService;\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\tthis.services.get(IExtensionManagementService) as IExtensionManagementService,\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(this.services.get(IRequestService) as IRequestService));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('nodeProxy', new NodeProxyChannel(this.services.get(INodeProxyService) as INodeProxyService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(this.services.get(ILocalizationsService) as ILocalizationsService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}